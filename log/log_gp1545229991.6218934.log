INFO:root:

*******STARTING!!!******


INFO:root:

*******Configuration******


INFO:root:# NUM_ROWS = 20


INFO:root:NUM_ROWS = 5


INFO:root:# NUM_COLS = 20


INFO:root:NUM_COLS = 5


INFO:root:empty_in_split = '\xa0'


INFO:root:


INFO:root:pickle_unsolved_file_path = 'data/%dx%d_nonograms.pkl' % (NUM_ROWS, NUM_COLS)


INFO:root:pickle_solved_file_path = 'data/%dx%d_nonograms_solved.pkl' % (NUM_ROWS, NUM_COLS)


INFO:root:should_run_in_parallel = True


INFO:root:


INFO:root:NUM_COND_TREES = 8


INFO:root:NUM_VAL_TREES = NUM_COND_TREES + 1


INFO:root:prob_crossover_global = 0.6  # global probability for cx


INFO:root:prob_crossover_individual_cond = 0.8  # probability to cx a specific cond tree in an individual


INFO:root:prob_crossover_individual_val = 0.8  # probability to cx a specific cond tree in an individual


INFO:root:prob_mutate_global = 0.4


INFO:root:prob_mutate_individual_cond = 0.5


INFO:root:prob_mutate_individual_val = 0.5


INFO:root:


INFO:root:points_correct_box = 5


INFO:root:points_incorrect_box = 0


INFO:root:# points_incorrect_box = -2


INFO:root:pop_size = 50


INFO:root:hof_size = 1


INFO:root:# num_gen = 40


INFO:root:num_gen = 10


INFO:root:train_size = 3


INFO:root:

*******DONE!!!******


INFO:root:run time: 40 sec

INFO:root:max possible fitness for the nonograms ran: 70

INFO:root:log:    	      	            fitness            	              size              
   	      	-------------------------------	--------------------------------
gen	nevals	avg    	max    	min    	std    	avg 	max	min	std     
0  	50    	40     	40     	40     	0      	7.36	8  	6  	0.557136
1  	36    	45.6   	68.3333	35     	9.13333	7.94	10 	7  	0.925419
2  	34    	51.8333	68.3333	35     	10.7922	8.26	11 	7  	0.97591 
3  	41    	52.5333	68.3333	35     	10.6731	8.5 	11 	7  	1.18743 
4  	39    	56.7   	68.3333	35     	10.814 	8.5 	11 	7  	1.13578 
5  	38    	55.9   	68.3333	35     	11.7199	9.08	12 	7  	1.16344 
6  	35    	59.3333	68.3333	35     	10.3064	8.52	10 	7  	0.899778
7  	37    	59.3   	68.3333	35     	9.4404 	8.32	12 	7  	1.12143 
8  	37    	60.3667	68.3333	50     	8.18732	8.38	11 	7  	1.12942 
9  	41    	58.5667	68.3333	38.3333	9.29761	8.34	11 	7  	1.0509  
10 	35    	59.5667	68.3333	38.3333	9.06035	8.34	11 	7  	1.10653 

INFO:root:pop: COND TREES:
or_(ge(_if_then_else(False, 3, 4), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_rows, 0), 0)), or_(and_(True, ge(_if_then_else(le(_if_then_else(False, 3, ones_diff_rows), _if_then_else(False, 3, 4)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols))), compare_blocks_cols)), or_(False, True)))
ge(_if_then_else(and_(False, False), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, 0, ones_diff_rows)), _if_then_else(True, _if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)))
or_(and_(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue)), or_(and_(False, False), ge(ones_diff_cols, zeros_diff_cols))), or_(False, and_(or_(True, True), le(3, zeros_diff_rows)))), ge(_if_then_else(or_(ge(1, ones_diff_rows), or_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 0, 1)), _if_then_else(and_(False, False), _if_then_else(False, 4, 0), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(compare_blocks_rows, ones_diff_cols), ge(zeros_diff_cols, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, zeros_diff_cols)))))
and_(or_(ge(_if_then_else(le(zeros_diff_cols, 1), zeros_diff_rows, 3), compare_blocks_cols), ge(3, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), True)
ge(3, _if_then_else(or_(False, True), _if_then_else(False, 4, _if_then_else(False, 0, 4)), _if_then_else(False, 0, 2)))
and_(and_(le(1, compare_blocks_cols), ge(_if_then_else(True, 1, zeros_diff_rows), 4)), le(max_col_clue, _if_then_else(False, ones_diff_cols, max_col_clue)))
le(_if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, 4)), _if_then_else(or_(False, False), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(False, 0, max_col_clue)))
le(_if_then_else(False, _if_then_else(True, 2, 2), _if_then_else(False, 3, 4)), _if_then_else(or_(False, True), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, 0, 3)))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))))
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))))
COND TREES:
or_(ge(_if_then_else(False, 3, 4), _if_then_else(True, _if_then_else(True, 1, 0), 0)), or_(and_(True, ge(_if_then_else(le(_if_then_else(False, 3, ones_diff_rows), _if_then_else(False, 3, 4)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, 2, max_row_clue), 1), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols))), compare_blocks_cols)), or_(False, True)))
ge(_if_then_else(and_(False, False), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, 0, ones_diff_rows)), ones_diff_rows)
or_(and_(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue)), or_(and_(False, False), ge(ones_diff_cols, zeros_diff_cols))), or_(False, and_(or_(True, True), le(3, zeros_diff_rows)))), ge(_if_then_else(or_(ge(1, ones_diff_rows), or_(True, True)), compare_blocks_rows, _if_then_else(and_(False, False), _if_then_else(False, 4, 0), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(compare_blocks_rows, ones_diff_cols), ge(zeros_diff_cols, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, zeros_diff_cols)))))
and_(or_(ge(_if_then_else(le(zeros_diff_cols, 1), zeros_diff_rows, 3), compare_blocks_cols), ge(0, _if_then_else(False, _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(le(_if_then_else(True, zeros_diff_cols, zeros_diff_rows), max_row_clue), _if_then_else(True, max_row_clue, _if_then_else(False, ones_diff_cols, zeros_diff_cols)), _if_then_else(True, zeros_diff_rows, compare_blocks_cols))))), True)
ge(_if_then_else(and_(ge(3, max_col_clue), ge(ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(False, True), zeros_diff_rows, compare_blocks_cols), _if_then_else(False, _if_then_else(False, zeros_diff_cols, 4), 4)), _if_then_else(or_(False, True), _if_then_else(False, 4, _if_then_else(False, 0, 4)), _if_then_else(False, 0, 2)))
and_(le(_if_then_else(True, 1, zeros_diff_rows), _if_then_else(False, ones_diff_cols, max_col_clue)), le(max_col_clue, _if_then_else(False, ones_diff_cols, max_col_clue)))
le(_if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, 4)), _if_then_else(or_(le(zeros_diff_cols, 4), False), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(False, 0, max_col_clue)))
le(3, _if_then_else(or_(False, True), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, 0, 3)))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_rows), add(mul(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), add(mul(compare_blocks_cols, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_cols))))), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), add(add(add(zeros_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_rows)))))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(add(add(add(ones_diff_cols, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_rows)), add(add(compare_blocks_cols, mul(ones_diff_cols, compare_blocks_cols)), add(compare_blocks_rows, ones_diff_rows))), ones_diff_rows))))
mul(mul(add(mul(mul(add(ones_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_cols)), add(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_rows))), ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))))
COND TREES:
or_(ge(_if_then_else(and_(and_(ge(0, zeros_diff_rows), and_(False, True)), or_(or_(False, False), ge(4, zeros_diff_rows))), 3, 4), 4), or_(False, or_(le(1, zeros_diff_rows), True)))
ge(_if_then_else(and_(False, False), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(True, _if_then_else(and_(ge(ones_diff_cols, 1), le(3, 3)), _if_then_else(or_(False, False), _if_then_else(True, _if_then_else(False, compare_blocks_rows, 1), ones_diff_rows), _if_then_else(False, compare_blocks_rows, ones_diff_rows)), _if_then_else(and_(le(zeros_diff_rows, max_row_clue), True), _if_then_else(True, 1, 4), _if_then_else(True, compare_blocks_rows, compare_blocks_rows))), ones_diff_rows)), _if_then_else(True, _if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)))
or_(ge(zeros_diff_cols, ones_diff_cols), ge(_if_then_else(or_(ge(1, ones_diff_rows), or_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 0, 1)), _if_then_else(and_(False, False), _if_then_else(False, _if_then_else(False, _if_then_else(or_(True, False), _if_then_else(True, _if_then_else(False, zeros_diff_cols, 4), 2), _if_then_else(and_(and_(ge(zeros_diff_cols, zeros_diff_rows), ge(max_col_clue, compare_blocks_rows)), le(_if_then_else(False, compare_blocks_rows, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_rows))), max_row_clue, ones_diff_cols)), _if_then_else(ge(zeros_diff_cols, 4), _if_then_else(and_(True, False), 3, _if_then_else(True, 2, 0)), _if_then_else(le(4, max_col_clue), zeros_diff_rows, max_row_clue))), compare_blocks_rows), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(compare_blocks_rows, ones_diff_cols), ge(zeros_diff_cols, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, zeros_diff_cols)))))
and_(or_(ge(_if_then_else(le(zeros_diff_cols, _if_then_else(ge(_if_then_else(le(zeros_diff_cols, 1), zeros_diff_rows, 3), compare_blocks_cols), _if_then_else(ge(zeros_diff_rows, compare_blocks_cols), _if_then_else(True, 3, 3), _if_then_else(True, 0, 4)), _if_then_else(False, _if_then_else(True, _if_then_else(False, ones_diff_rows, _if_then_else(True, 4, ones_diff_rows)), compare_blocks_cols), _if_then_else(True, 1, 0)))), 3, 3), compare_blocks_cols), ge(0, 4)), True)
ge(_if_then_else(ge(ones_diff_rows, compare_blocks_cols), _if_then_else(or_(False, True), _if_then_else(False, 4, _if_then_else(False, 0, 4)), _if_then_else(False, 0, 2)), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(or_(False, True), _if_then_else(False, 4, _if_then_else(False, 0, zeros_diff_rows)), _if_then_else(False, 0, 2)))
and_(and_(le(max_col_clue, compare_blocks_cols), False), le(_if_then_else(True, 1, zeros_diff_rows), _if_then_else(False, ones_diff_cols, max_col_clue)))
le(_if_then_else(le(zeros_diff_cols, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, 4)), _if_then_else(or_(True, False), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(False, 0, max_col_clue)))
le(_if_then_else(False, _if_then_else(True, 2, 2), _if_then_else(True, 3, 4)), _if_then_else(or_(False, True), _if_then_else(or_(False, True), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, 0, 3)), _if_then_else(False, 0, 3)))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))))
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))))
COND TREES:
or_(ge(_if_then_else(False, 3, 4), _if_then_else(True, _if_then_else(True, ones_diff_rows, 0), 0)), or_(and_(True, ge(_if_then_else(le(_if_then_else(and_(True, True), 3, ones_diff_rows), _if_then_else(False, 3, 4)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols))), compare_blocks_cols)), or_(False, True)))
ge(_if_then_else(and_(False, False), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, 0, ones_diff_rows)), _if_then_else(True, _if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)))
or_(and_(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue)), or_(and_(False, False), ge(ones_diff_cols, zeros_diff_cols))), or_(False, and_(or_(True, True), le(3, zeros_diff_rows)))), ge(_if_then_else(or_(ge(1, ones_diff_rows), or_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 0, 1)), _if_then_else(and_(False, False), _if_then_else(False, 4, 0), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(compare_blocks_rows, ones_diff_cols), and_(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue)), or_(and_(False, False), ge(ones_diff_cols, zeros_diff_cols))), or_(False, and_(or_(True, True), le(3, zeros_diff_rows))))), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, zeros_diff_cols)))))
and_(or_(ge(_if_then_else(True, _if_then_else(True, ones_diff_cols, max_col_clue), 2), _if_then_else(True, 0, compare_blocks_rows)), ge(0, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), True)
ge(_if_then_else(and_(ge(3, max_col_clue), False), _if_then_else(and_(False, True), zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(and_(False, True), zeros_diff_rows, compare_blocks_cols))
and_(and_(le(_if_then_else(False, ones_diff_cols, 3), _if_then_else(False, max_col_clue, 3)), le(_if_then_else(False, max_col_clue, 1), _if_then_else(False, 0, 0))), le(max_col_clue, _if_then_else(ge(zeros_diff_cols, 4), ones_diff_cols, max_col_clue)))
le(_if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, 4)), _if_then_else(or_(True, False), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(False, 0, max_col_clue)))
le(_if_then_else(False, _if_then_else(True, 2, 2), _if_then_else(False, 3, 4)), _if_then_else(or_(False, True), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, 0, 3)))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))))
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))))
COND TREES:
or_(ge(_if_then_else(False, 3, 4), _if_then_else(True, _if_then_else(True, ones_diff_rows, 0), 0)), or_(and_(True, ge(_if_then_else(le(_if_then_else(False, 3, ones_diff_rows), _if_then_else(False, 3, 4)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols))), compare_blocks_cols)), or_(False, True)))
ge(_if_then_else(and_(False, False), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, 0, ones_diff_rows)), _if_then_else(True, _if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)))
or_(and_(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue)), or_(and_(False, False), ge(ones_diff_cols, zeros_diff_cols))), or_(False, and_(or_(True, True), le(3, zeros_diff_rows)))), ge(_if_then_else(or_(ge(1, ones_diff_rows), or_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 0, 1)), _if_then_else(and_(False, False), _if_then_else(False, 4, 0), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(compare_blocks_rows, ones_diff_cols), ge(zeros_diff_cols, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, zeros_diff_cols)))))
and_(or_(False, ge(0, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), True)
ge(_if_then_else(and_(ge(3, max_col_clue), False), _if_then_else(and_(False, True), zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(or_(False, True), _if_then_else(False, 4, _if_then_else(False, 0, 4)), _if_then_else(False, 0, 2)))
and_(and_(le(1, compare_blocks_cols), ge(_if_then_else(True, 1, zeros_diff_rows), 4)), le(max_col_clue, _if_then_else(False, ones_diff_cols, max_col_clue)))
le(_if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, 4)), _if_then_else(or_(True, False), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(False, 0, max_col_clue)))
le(_if_then_else(False, _if_then_else(True, 2, 2), _if_then_else(False, 3, 4)), _if_then_else(or_(False, True), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(True, 0, 3)))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))))
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))))
COND TREES:
or_(ge(_if_then_else(False, 3, 4), _if_then_else(True, _if_then_else(True, ones_diff_rows, 0), 0)), or_(and_(True, ge(_if_then_else(le(_if_then_else(False, 3, ones_diff_rows), _if_then_else(False, 3, 4)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, compare_blocks_rows, _if_then_else(False, 3, ones_diff_rows)))), compare_blocks_cols)), or_(False, True)))
ge(_if_then_else(and_(False, False), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, 3, zeros_diff_cols)), _if_then_else(True, _if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)))
or_(and_(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue)), or_(and_(False, False), ge(ones_diff_cols, zeros_diff_cols))), or_(False, and_(or_(True, True), le(3, zeros_diff_rows)))), ge(_if_then_else(or_(ge(1, ones_diff_rows), or_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 0, 1)), _if_then_else(and_(False, False), _if_then_else(False, 4, 0), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(compare_blocks_rows, ones_diff_cols), ge(zeros_diff_cols, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), compare_blocks_cols), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, zeros_diff_cols)))))
and_(or_(ge(_if_then_else(le(zeros_diff_cols, 1), zeros_diff_rows, 3), 3), ge(0, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), True)
ge(_if_then_else(and_(ge(3, max_col_clue), ge(ones_diff_rows, _if_then_else(False, 0, 4))), _if_then_else(and_(False, True), zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(or_(False, True), _if_then_else(False, 4, _if_then_else(False, 0, 4)), _if_then_else(False, 0, 2)))
and_(and_(le(1, compare_blocks_cols), ge(_if_then_else(True, 1, zeros_diff_rows), 4)), le(max_col_clue, _if_then_else(False, ones_diff_cols, max_col_clue)))
le(_if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, 4)), _if_then_else(or_(True, False), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(False, 0, max_col_clue)))
le(_if_then_else(False, _if_then_else(True, 2, 2), _if_then_else(False, 3, 4)), _if_then_else(or_(False, True), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, 0, 3)))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))))
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))))
COND TREES:
or_(ge(_if_then_else(False, 3, 4), _if_then_else(True, _if_then_else(True, ones_diff_rows, 0), 0)), or_(and_(True, ge(_if_then_else(le(_if_then_else(False, 3, ones_diff_rows), _if_then_else(False, 3, 4)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, max_row_clue))), compare_blocks_cols)), or_(False, True)))
ge(_if_then_else(and_(False, False), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, 0, ones_diff_rows)), _if_then_else(True, _if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)))
or_(and_(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue)), or_(and_(False, False), ge(ones_diff_cols, zeros_diff_cols))), or_(False, and_(or_(True, True), le(3, zeros_diff_rows)))), ge(_if_then_else(or_(ge(1, ones_diff_rows), or_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 0, _if_then_else(and_(False, False), _if_then_else(False, 4, 0), _if_then_else(True, max_col_clue, max_row_clue)))), _if_then_else(and_(False, False), _if_then_else(False, 4, 0), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(compare_blocks_rows, ones_diff_cols), ge(zeros_diff_cols, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, zeros_diff_cols)))))
and_(False, True)
ge(_if_then_else(and_(ge(3, max_col_clue), ge(ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(False, True), zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(or_(False, True), _if_then_else(False, 4, _if_then_else(False, 0, 4)), _if_then_else(False, 0, 2)))
and_(and_(le(1, compare_blocks_cols), ge(_if_then_else(True, zeros_diff_rows, zeros_diff_rows), 4)), le(max_col_clue, _if_then_else(False, ones_diff_cols, max_col_clue)))
le(_if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, 4)), _if_then_else(or_(True, False), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(False, max_row_clue, max_col_clue)))
le(_if_then_else(False, _if_then_else(True, 2, 2), _if_then_else(False, 3, 4)), _if_then_else(or_(False, True), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, 0, 3)))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(mul(mul(add(add(ones_diff_rows, compare_blocks_cols), ones_diff_rows), add(compare_blocks_cols, ones_diff_rows)), add(add(compare_blocks_rows, mul(ones_diff_rows, compare_blocks_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), zeros_diff_rows))), compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(mul(mul(add(ones_diff_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(ones_diff_cols, compare_blocks_cols))), mul(mul(compare_blocks_rows, zeros_diff_rows), mul(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_cols)))), add(zeros_diff_rows, zeros_diff_cols))))
mul(add(mul(add(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, add(compare_blocks_rows, compare_blocks_rows))), add(mul(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows))), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(mul(mul(mul(add(add(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), add(mul(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, compare_blocks_cols))), mul(mul(add(compare_blocks_cols, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)))), add(add(add(mul(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_cols, zeros_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols))), mul(mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_cols)), mul(add(zeros_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_rows))))), ones_diff_rows))))
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(add(mul(add(mul(add(add(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_rows))), add(mul(mul(ones_diff_cols, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)), add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols)))), add(add(add(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, ones_diff_rows))), mul(mul(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_cols)), mul(add(ones_diff_rows, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows))))), compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(add(mul(add(mul(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(zeros_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_cols, zeros_diff_rows), mul(compare_blocks_rows, ones_diff_cols)))), add(add(add(mul(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols))), add(mul(mul(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols))))), add(ones_diff_rows, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))))
COND TREES:
or_(ge(_if_then_else(False, 3, 4), _if_then_else(True, _if_then_else(True, ones_diff_rows, 0), 0)), or_(and_(True, ge(_if_then_else(le(_if_then_else(False, 3, ones_diff_rows), _if_then_else(False, 3, 4)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols))), compare_blocks_cols)), or_(False, True)))
ge(_if_then_else(and_(False, False), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, 0, ones_diff_rows)), _if_then_else(True, _if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)))
or_(and_(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue)), or_(and_(False, False), ge(ones_diff_cols, zeros_diff_cols))), or_(False, and_(or_(True, True), le(3, zeros_diff_rows)))), ge(_if_then_else(or_(ge(1, ones_diff_rows), or_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 0, 1)), _if_then_else(and_(False, False), _if_then_else(False, 4, 0), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(compare_blocks_rows, ones_diff_cols), ge(zeros_diff_cols, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, zeros_diff_cols)))))
and_(or_(ge(_if_then_else(le(zeros_diff_cols, 1), zeros_diff_rows, 3), compare_blocks_cols), ge(0, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), True)
ge(_if_then_else(and_(ge(3, max_col_clue), ge(ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(False, True), zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(or_(False, True), _if_then_else(False, 4, _if_then_else(False, 0, 4)), _if_then_else(False, 0, 2)))
and_(and_(le(1, compare_blocks_cols), ge(_if_then_else(True, 1, zeros_diff_rows), 4)), le(max_col_clue, _if_then_else(False, ones_diff_cols, max_col_clue)))
le(_if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, 4)), _if_then_else(or_(True, False), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(False, 0, max_col_clue)))
le(_if_then_else(False, _if_then_else(True, 2, 2), _if_then_else(False, 3, 4)), _if_then_else(or_(False, True), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, 0, 3)))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))))
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))))
COND TREES:
or_(ge(_if_then_else(False, 3, 4), _if_then_else(ge(_if_then_else(False, 3, 4), 4), ones_diff_rows, 0)), or_(and_(True, True), or_(False, True)))
ge(_if_then_else(and_(False, False), _if_then_else(False, 3, compare_blocks_rows), _if_then_else(False, 0, ones_diff_rows)), _if_then_else(or_(and_(ge(ones_diff_cols, compare_blocks_rows), or_(True, False)), or_(and_(True, False), le(zeros_diff_rows, ones_diff_rows))), _if_then_else(False, 1, max_col_clue), 0))
or_(False, ge(_if_then_else(or_(ge(1, ones_diff_rows), or_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 0, 1)), _if_then_else(and_(False, False), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(compare_blocks_rows, ones_diff_cols), False), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, zeros_diff_cols)))))
and_(or_(True, ge(_if_then_else(or_(le(compare_blocks_rows, 3), le(max_col_clue, ones_diff_rows)), _if_then_else(True, _if_then_else(True, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, max_row_clue)), _if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(True, _if_then_else(False, 1, _if_then_else(True, compare_blocks_cols, max_col_clue)), _if_then_else(False, zeros_diff_cols, max_col_clue)), _if_then_else(or_(False, ge(ones_diff_rows, 1)), compare_blocks_cols, _if_then_else(True, compare_blocks_cols, _if_then_else(False, compare_blocks_rows, 1))))), 4)), True)
ge(_if_then_else(and_(ge(3, zeros_diff_rows), ge(ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(False, True), zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(or_(False, True), _if_then_else(False, 4, _if_then_else(False, 0, 4)), _if_then_else(False, 0, 2)))
and_(and_(le(1, compare_blocks_cols), ge(_if_then_else(True, 1, zeros_diff_rows), 4)), le(_if_then_else(False, 1, zeros_diff_rows), _if_then_else(and_(le(_if_then_else(False, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, 3, 3)), le(_if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(le(1, compare_blocks_cols), zeros_diff_rows, 0))), ones_diff_cols, max_col_clue)))
le(_if_then_else(False, _if_then_else(False, 0, max_col_clue), _if_then_else(False, max_row_clue, 4)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 0, max_col_clue)))
le(_if_then_else(False, _if_then_else(True, 2, 2), _if_then_else(False, 3, 4)), _if_then_else(or_(False, False), _if_then_else(True, 4, 3), _if_then_else(False, 0, 3)))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(mul(add(mul(add(zeros_diff_cols, ones_diff_cols), ones_diff_cols), add(ones_diff_rows, mul(compare_blocks_cols, zeros_diff_cols))), mul(mul(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols))), ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), add(mul(add(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_cols)), add(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_rows, zeros_diff_cols)))), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(mul(mul(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), add(zeros_diff_cols, compare_blocks_cols)), add(mul(add(ones_diff_cols, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), add(ones_diff_cols, ones_diff_rows))))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, add(add(add(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))))
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(add(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows)), add(add(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_cols)))), compare_blocks_cols)))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))))
COND TREES:
or_(ge(_if_then_else(False, 3, 4), _if_then_else(True, _if_then_else(True, ones_diff_rows, 0), 0)), True)
ge(_if_then_else(le(zeros_diff_rows, max_row_clue), _if_then_else(and_(ge(max_col_clue, compare_blocks_cols), and_(ge(ones_diff_cols, max_col_clue), False)), _if_then_else(and_(True, and_(True, False)), _if_then_else(True, 0, _if_then_else(False, 4, zeros_diff_rows)), _if_then_else(True, 3, max_row_clue)), _if_then_else(ge(zeros_diff_cols, 0), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, _if_then_else(True, 0, 1), max_col_clue))), _if_then_else(False, 0, ones_diff_rows)), _if_then_else(True, _if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)))
or_(and_(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue)), or_(and_(False, False), ge(ones_diff_cols, zeros_diff_cols))), or_(False, and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue)), le(3, zeros_diff_rows)))), ge(_if_then_else(ge(max_col_clue, 0), _if_then_else(True, ones_diff_rows, _if_then_else(ge(ones_diff_cols, 2), _if_then_else(False, max_col_clue, 2), 0)), _if_then_else(le(max_row_clue, compare_blocks_cols), 3, ones_diff_cols)), _if_then_else(le(0, 2), _if_then_else(True, zeros_diff_cols, 1), _if_then_else(True, _if_then_else(False, 1, _if_then_else(False, ones_diff_cols, zeros_diff_cols)), max_col_clue))))
and_(or_(ge(_if_then_else(le(zeros_diff_cols, 1), zeros_diff_rows, 4), compare_blocks_cols), ge(0, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), True)
ge(_if_then_else(and_(ge(3, max_col_clue), ge(ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(False, or_(False, True)), zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(ge(_if_then_else(ge(_if_then_else(False, compare_blocks_cols, ones_diff_rows), max_row_clue), _if_then_else(False, 1, _if_then_else(False, ones_diff_cols, max_row_clue)), _if_then_else(True, _if_then_else(False, ones_diff_rows, max_col_clue), zeros_diff_cols)), _if_then_else(le(zeros_diff_cols, _if_then_else(False, compare_blocks_cols, 2)), _if_then_else(True, _if_then_else(False, max_row_clue, 3), ones_diff_cols), _if_then_else(False, compare_blocks_rows, compare_blocks_rows))), _if_then_else(False, 4, _if_then_else(False, 0, 4)), _if_then_else(False, 0, 2)))
and_(and_(le(1, compare_blocks_cols), ge(_if_then_else(True, 1, zeros_diff_rows), _if_then_else(le(_if_then_else(True, 1, ones_diff_rows), _if_then_else(False, zeros_diff_rows, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_cols, max_col_clue), _if_then_else(True, ones_diff_rows, 1))))), le(max_col_clue, _if_then_else(False, ones_diff_cols, max_col_clue)))
le(_if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, 4)), _if_then_else(or_(True, False), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(False, 0, max_col_clue)))
le(_if_then_else(False, _if_then_else(False, 2, 2), 4), _if_then_else(or_(False, True), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, 0, 3)))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, mul(add(mul(compare_blocks_cols, ones_diff_cols), add(zeros_diff_cols, add(zeros_diff_rows, ones_diff_cols))), mul(mul(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_cols, mul(compare_blocks_rows, zeros_diff_cols))))), zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(mul(ones_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_rows)), mul(mul(add(zeros_diff_rows, ones_diff_cols), ones_diff_rows), add(add(ones_diff_cols, zeros_diff_rows), compare_blocks_cols))), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(add(mul(mul(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, ones_diff_rows), mul(compare_blocks_rows, compare_blocks_cols))), compare_blocks_rows)))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))))
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), mul(add(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_rows)))))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))))
COND TREES:
or_(ge(_if_then_else(False, 3, 4), _if_then_else(True, _if_then_else(True, ones_diff_rows, 0), 0)), or_(and_(True, True), or_(False, True)))
ge(_if_then_else(and_(False, False), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(True, _if_then_else(and_(ge(ones_diff_cols, 1), le(3, 3)), _if_then_else(or_(False, False), _if_then_else(True, _if_then_else(False, compare_blocks_rows, 1), ones_diff_rows), _if_then_else(False, compare_blocks_rows, ones_diff_rows)), _if_then_else(and_(le(zeros_diff_rows, max_row_clue), True), _if_then_else(True, 1, 4), _if_then_else(True, compare_blocks_rows, compare_blocks_rows))), ones_diff_rows)), _if_then_else(True, _if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)))
or_(and_(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue)), or_(and_(False, False), ge(ones_diff_cols, zeros_diff_cols))), or_(False, and_(or_(True, True), le(3, zeros_diff_rows)))), ge(_if_then_else(or_(ge(1, ones_diff_rows), or_(True, True)), max_col_clue, _if_then_else(and_(False, False), _if_then_else(False, _if_then_else(False, _if_then_else(or_(True, False), _if_then_else(True, _if_then_else(False, zeros_diff_cols, 4), 2), _if_then_else(False, max_row_clue, ones_diff_cols)), _if_then_else(ge(zeros_diff_cols, 4), _if_then_else(and_(True, False), 3, _if_then_else(True, 2, 0)), _if_then_else(le(4, max_col_clue), zeros_diff_rows, max_row_clue))), compare_blocks_rows), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(compare_blocks_rows, ones_diff_cols), ge(zeros_diff_cols, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, zeros_diff_cols)))))
and_(or_(ge(_if_then_else(le(zeros_diff_cols, _if_then_else(ge(_if_then_else(and_(False, True), zeros_diff_cols, zeros_diff_rows), _if_then_else(False, max_row_clue, 3)), _if_then_else(ge(zeros_diff_rows, compare_blocks_cols), _if_then_else(True, 3, 3), _if_then_else(True, 0, 4)), _if_then_else(ge(_if_then_else(True, _if_then_else(True, ones_diff_cols, max_col_clue), 2), _if_then_else(True, 0, compare_blocks_rows)), _if_then_else(True, _if_then_else(False, ones_diff_rows, _if_then_else(True, 4, ones_diff_rows)), compare_blocks_cols), _if_then_else(True, 1, 0)))), 3, 3), compare_blocks_cols), ge(0, 4)), True)
ge(_if_then_else(and_(ge(3, max_col_clue), False), _if_then_else(and_(False, True), zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(or_(False, True), _if_then_else(False, 4, _if_then_else(False, 0, zeros_diff_rows)), _if_then_else(False, 0, 2)))
and_(and_(le(max_col_clue, compare_blocks_cols), ge(zeros_diff_cols, 4)), le(_if_then_else(True, 1, zeros_diff_rows), _if_then_else(False, ones_diff_cols, max_col_clue)))
le(_if_then_else(False, _if_then_else(True, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, 4)), _if_then_else(or_(True, False), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(False, 0, max_col_clue)))
le(_if_then_else(False, _if_then_else(True, 2, 2), _if_then_else(True, 3, 4)), _if_then_else(or_(False, False), _if_then_else(or_(False, False), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, 0, 3)), _if_then_else(False, 0, 3)))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(add(add(add(ones_diff_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, compare_blocks_cols), mul(zeros_diff_cols, compare_blocks_cols))), mul(add(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_rows, compare_blocks_rows)))), zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, add(add(mul(ones_diff_cols, zeros_diff_rows), add(ones_diff_cols, compare_blocks_cols)), add(mul(zeros_diff_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(mul(add(compare_blocks_rows, add(mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))))
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(add(add(mul(mul(compare_blocks_rows, compare_blocks_rows), mul(mul(ones_diff_cols, add(compare_blocks_rows, ones_diff_cols)), zeros_diff_rows)), mul(add(zeros_diff_cols, add(add(ones_diff_rows, ones_diff_cols), compare_blocks_rows)), add(zeros_diff_rows, ones_diff_cols))), compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(add(mul(mul(mul(add(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, compare_blocks_cols))), mul(mul(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_rows)))), mul(add(add(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_rows))), mul(add(mul(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, compare_blocks_rows))))), zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))))
COND TREES:
or_(ge(_if_then_else(False, 3, 4), _if_then_else(True, _if_then_else(True, ones_diff_rows, 0), 0)), or_(and_(True, ge(_if_then_else(le(_if_then_else(and_(and_(ge(ones_diff_cols, zeros_diff_rows), le(4, max_row_clue)), le(_if_then_else(True, 4, zeros_diff_cols), _if_then_else(True, compare_blocks_cols, 1))), _if_then_else(ge(_if_then_else(True, compare_blocks_cols, 2), _if_then_else(True, ones_diff_cols, max_col_clue)), _if_then_else(and_(True, False), _if_then_else(False, 2, compare_blocks_rows), _if_then_else(False, max_row_clue, compare_blocks_rows)), _if_then_else(or_(False, False), _if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, 3))), _if_then_else(le(_if_then_else(True, compare_blocks_rows, 2), _if_then_else(True, max_col_clue, zeros_diff_cols)), _if_then_else(ge(ones_diff_cols, 3), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)), _if_then_else(or_(False, False), _if_then_else(False, 0, 3), _if_then_else(True, ones_diff_rows, 4)))), _if_then_else(False, 3, 4)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols))), compare_blocks_cols)), or_(False, True)))
ge(_if_then_else(and_(False, False), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, 0, ones_diff_rows)), _if_then_else(True, _if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)))
or_(and_(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue)), or_(and_(False, False), ge(ones_diff_cols, zeros_diff_cols))), or_(False, and_(or_(True, True), le(3, zeros_diff_rows)))), ge(_if_then_else(or_(ge(1, ones_diff_rows), or_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 0, 1)), _if_then_else(and_(False, False), _if_then_else(False, 4, 0), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(compare_blocks_rows, ones_diff_cols), ge(zeros_diff_cols, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, zeros_diff_cols)))))
and_(or_(ge(_if_then_else(le(zeros_diff_cols, 1), zeros_diff_rows, 3), compare_blocks_cols), ge(0, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), True)
ge(_if_then_else(ge(_if_then_else(True, _if_then_else(True, compare_blocks_cols, max_col_clue), 0), _if_then_else(True, ones_diff_cols, 1)), _if_then_else(le(max_col_clue, ones_diff_rows), _if_then_else(True, ones_diff_rows, zeros_diff_rows), _if_then_else(ge(_if_then_else(False, 3, compare_blocks_rows), _if_then_else(False, 3, ones_diff_rows)), 4, ones_diff_cols)), _if_then_else(le(ones_diff_rows, _if_then_else(True, max_row_clue, ones_diff_cols)), _if_then_else(and_(or_(True, False), False), _if_then_else(True, max_row_clue, 2), _if_then_else(False, 1, ones_diff_rows)), _if_then_else(False, 1, max_col_clue))), _if_then_else(or_(False, True), _if_then_else(False, 4, _if_then_else(False, 0, 4)), _if_then_else(False, 0, 2)))
and_(and_(le(1, compare_blocks_cols), ge(_if_then_else(True, 1, zeros_diff_rows), 4)), le(max_col_clue, _if_then_else(False, ones_diff_cols, max_col_clue)))
le(_if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, 4)), _if_then_else(or_(True, False), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(False, 0, max_col_clue)))
le(_if_then_else(and_(and_(or_(and_(le(max_row_clue, max_col_clue), ge(compare_blocks_rows, 0)), or_(and_(True, True), or_(False, True))), and_(le(_if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, max_col_clue)), ge(_if_then_else(False, 3, 2), _if_then_else(True, 1, zeros_diff_cols)))), and_(le(_if_then_else(or_(True, True), _if_then_else(True, zeros_diff_rows, 1), _if_then_else(False, 4, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(True, zeros_diff_cols, 3))), or_(and_(ge(zeros_diff_cols, 2), and_(False, False)), ge(_if_then_else(True, 0, 2), _if_then_else(True, 1, 2))))), _if_then_else(True, 2, 2), _if_then_else(False, 3, 4)), _if_then_else(or_(False, True), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, 0, 3)))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))))
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))))
COND TREES:
or_(ge(_if_then_else(False, 3, 4), _if_then_else(True, _if_then_else(True, ones_diff_rows, 0), 0)), or_(and_(True, ge(_if_then_else(le(_if_then_else(False, 3, 4), _if_then_else(False, 3, 4)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, max_row_clue))), compare_blocks_cols)), or_(False, True)))
ge(_if_then_else(and_(False, False), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, 0, ones_diff_rows)), _if_then_else(True, _if_then_else(False, 1, 3), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)))
or_(and_(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue)), or_(and_(False, False), ge(ones_diff_cols, zeros_diff_cols))), or_(False, and_(or_(True, True), le(3, zeros_diff_rows)))), ge(_if_then_else(or_(ge(1, ones_diff_rows), or_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 0, _if_then_else(and_(False, False), _if_then_else(False, 4, 0), _if_then_else(True, max_col_clue, max_row_clue)))), _if_then_else(and_(False, False), _if_then_else(False, 4, 0), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(compare_blocks_rows, ones_diff_cols), ge(zeros_diff_cols, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, zeros_diff_cols)))))
and_(False, True)
ge(_if_then_else(and_(ge(3, max_col_clue), ge(ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(False, True), zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(or_(False, True), _if_then_else(False, 4, _if_then_else(False, 0, 4)), _if_then_else(False, 0, 2)))
and_(and_(le(1, ones_diff_cols), ge(_if_then_else(True, zeros_diff_rows, zeros_diff_rows), 4)), le(max_col_clue, _if_then_else(False, ones_diff_cols, max_col_clue)))
le(_if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, 4)), zeros_diff_cols)
le(_if_then_else(False, _if_then_else(True, 2, zeros_diff_cols), _if_then_else(False, 3, 4)), _if_then_else(or_(False, True), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, 0, 3)))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))))
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))))
COND TREES:
or_(ge(_if_then_else(False, 3, 4), _if_then_else(True, _if_then_else(True, 1, 0), 0)), or_(and_(True, ge(_if_then_else(le(_if_then_else(False, 3, ones_diff_rows), _if_then_else(False, 3, ones_diff_rows)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, 2, max_row_clue), 1), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols))), compare_blocks_cols)), or_(False, True)))
le(_if_then_else(ge(_if_then_else(False, ones_diff_rows, 3), 4), _if_then_else(False, ones_diff_cols, max_row_clue), _if_then_else(True, 1, 0)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_rows, _if_then_else(False, zeros_diff_cols, ones_diff_rows)), _if_then_else(and_(True, False), 4, 0)))
or_(and_(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue)), or_(and_(False, False), ge(ones_diff_cols, zeros_diff_cols))), or_(False, and_(or_(True, True), le(3, zeros_diff_rows)))), ge(_if_then_else(or_(ge(1, ones_diff_rows), or_(True, True)), compare_blocks_rows, _if_then_else(and_(False, False), _if_then_else(False, 4, 0), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(compare_blocks_rows, ones_diff_cols), ge(zeros_diff_cols, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, zeros_diff_cols)))))
and_(or_(ge(_if_then_else(le(zeros_diff_cols, 1), zeros_diff_rows, _if_then_else(ge(_if_then_else(or_(and_(True, True), and_(True, True)), _if_then_else(le(ones_diff_cols, 1), _if_then_else(False, 1, max_row_clue), _if_then_else(False, 4, zeros_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, zeros_diff_cols, max_row_clue), _if_then_else(True, 1, 1))), _if_then_else(and_(le(0, zeros_diff_cols), ge(2, max_row_clue)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(False, max_col_clue, 0)), _if_then_else(ge(2, ones_diff_cols), _if_then_else(False, 0, compare_blocks_rows), _if_then_else(True, max_col_clue, compare_blocks_cols)))), _if_then_else(or_(or_(le(1, 1), and_(False, True)), and_(le(zeros_diff_cols, ones_diff_cols), and_(True, True))), _if_then_else(and_(le(ones_diff_cols, compare_blocks_cols), or_(True, False)), _if_then_else(and_(False, False), _if_then_else(False, max_col_clue, max_row_clue), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(and_(True, True), _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(True, max_row_clue, 0))), _if_then_else(le(_if_then_else(False, 0, compare_blocks_rows), _if_then_else(True, ones_diff_rows, 3)), _if_then_else(ge(zeros_diff_cols, 2), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(max_row_clue, 1), _if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(True, 0, 1)))), _if_then_else(le(_if_then_else(and_(True, True), _if_then_else(True, 4, 3), _if_then_else(True, compare_blocks_cols, max_row_clue)), _if_then_else(le(1, 2), _if_then_else(True, 0, max_col_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, 0, 2)), _if_then_else(ge(zeros_diff_rows, 3), _if_then_else(True, ones_diff_rows, compare_blocks_cols), _if_then_else(False, max_col_clue, 1)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, max_col_clue), _if_then_else(False, 1, max_col_clue))), _if_then_else(and_(ge(0, max_row_clue), or_(True, True)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_cols, compare_blocks_cols), _if_then_else(False, 2, compare_blocks_cols)), _if_then_else(ge(max_row_clue, max_col_clue), _if_then_else(True, compare_blocks_cols, compare_blocks_cols), _if_then_else(True, 3, 0)))))), compare_blocks_cols), ge(0, _if_then_else(False, _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(le(_if_then_else(True, zeros_diff_cols, zeros_diff_rows), max_row_clue), _if_then_else(True, max_row_clue, _if_then_else(False, ones_diff_cols, zeros_diff_cols)), _if_then_else(True, zeros_diff_rows, compare_blocks_cols))))), True)
ge(_if_then_else(and_(ge(3, max_col_clue), ge(ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(False, True), zeros_diff_rows, compare_blocks_cols), _if_then_else(le(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, 4, max_row_clue)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), _if_then_else(ge(zeros_diff_cols, ones_diff_rows), _if_then_else(True, 0, 0), _if_then_else(False, zeros_diff_rows, 0))), _if_then_else(ge(_if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, ones_diff_rows, max_row_clue)), _if_then_else(and_(False, True), _if_then_else(False, zeros_diff_rows, 0), _if_then_else(False, zeros_diff_cols, max_row_clue)), _if_then_else(ge(1, 1), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, ones_diff_rows, 2)))), _if_then_else(False, zeros_diff_cols, 4), 4)), _if_then_else(or_(False, True), _if_then_else(False, 4, _if_then_else(False, 0, 4)), _if_then_else(False, 0, 2)))
le(_if_then_else(le(3, _if_then_else(False, 0, _if_then_else(True, zeros_diff_cols, 0))), _if_then_else(True, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, ones_diff_cols)), _if_then_else(le(zeros_diff_rows, 3), _if_then_else(False, 1, _if_then_else(True, _if_then_else(True, ones_diff_rows, zeros_diff_rows), 2)), _if_then_else(True, max_row_clue, 3)))
le(_if_then_else(le(_if_then_else(or_(True, False), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(False, max_row_clue, max_col_clue)), max_row_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, 4)), _if_then_else(or_(and_(True, False), or_(False, True)), _if_then_else(ge(compare_blocks_rows, max_col_clue), _if_then_else(or_(False, or_(False, False)), 2, _if_then_else(True, ones_diff_rows, ones_diff_cols)), _if_then_else(False, _if_then_else(and_(False, True), 0, ones_diff_rows), compare_blocks_rows)), _if_then_else(le(_if_then_else(False, compare_blocks_cols, max_col_clue), 3), _if_then_else(False, 2, max_col_clue), _if_then_else(or_(le(ones_diff_rows, zeros_diff_cols), True), compare_blocks_rows, _if_then_else(False, 3, _if_then_else(True, max_row_clue, zeros_diff_cols))))))
le(3, _if_then_else(or_(False, True), _if_then_else(True, 4, 2), _if_then_else(False, 0, 3)))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_rows), add(mul(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), add(mul(compare_blocks_cols, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_cols))))), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), add(add(add(zeros_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_rows)))))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(add(add(add(ones_diff_cols, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_rows)), add(add(compare_blocks_cols, mul(ones_diff_cols, compare_blocks_cols)), add(compare_blocks_rows, ones_diff_rows))), ones_diff_rows))))
mul(mul(add(mul(mul(add(ones_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_cols)), add(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_rows))), ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))))
COND TREES:
or_(ge(3, _if_then_else(True, _if_then_else(True, ones_diff_rows, _if_then_else(and_(ge(zeros_diff_rows, 1), and_(True, False)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, _if_then_else(False, compare_blocks_rows, ones_diff_cols), zeros_diff_rows), _if_then_else(and_(False, False), max_col_clue, _if_then_else(True, 2, 3))), _if_then_else(le(max_row_clue, max_row_clue), _if_then_else(True, _if_then_else(False, 3, 4), max_row_clue), _if_then_else(True, compare_blocks_rows, _if_then_else(True, compare_blocks_rows, 3))))), 0)), True)
ge(_if_then_else(and_(False, False), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, 0, ones_diff_rows)), _if_then_else(True, _if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)))
or_(and_(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, _if_then_else(True, max_col_clue, max_row_clue), max_col_clue)), or_(and_(False, False), ge(ones_diff_cols, zeros_diff_cols))), or_(False, and_(or_(True, True), le(3, zeros_diff_rows)))), ge(_if_then_else(or_(ge(1, ones_diff_rows), or_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 0, 1)), _if_then_else(and_(False, False), _if_then_else(False, 4, 0), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(compare_blocks_rows, ones_diff_cols), ge(zeros_diff_cols, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, zeros_diff_cols)))))
and_(or_(ge(_if_then_else(le(_if_then_else(False, compare_blocks_rows, ones_diff_cols), 1), zeros_diff_rows, 3), compare_blocks_cols), ge(0, _if_then_else(le(zeros_diff_cols, 1), compare_blocks_rows, ones_diff_cols))), True)
ge(_if_then_else(and_(ge(3, max_col_clue), ge(ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(False, True), zeros_diff_rows, compare_blocks_cols), _if_then_else(and_(False, True), ones_diff_cols, 4)), _if_then_else(False, 4, _if_then_else(False, 0, 4)))
and_(and_(or_(and_(ge(max_row_clue, compare_blocks_cols), True), and_(le(4, zeros_diff_rows), False)), and_(ge(zeros_diff_rows, compare_blocks_rows), or_(True, True))), le(max_col_clue, _if_then_else(and_(le(1, compare_blocks_cols), ge(_if_then_else(True, 1, zeros_diff_rows), 4)), ones_diff_cols, max_col_clue)))
le(_if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(or_(True, False), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(or_(or_(and_(True, True), True), and_(or_(False, False), False)), _if_then_else(or_(True, ge(max_row_clue, ones_diff_cols)), _if_then_else(True, 0, _if_then_else(True, 3, ones_diff_rows)), _if_then_else(True, 0, _if_then_else(True, ones_diff_rows, _if_then_else(False, 3, zeros_diff_cols)))), _if_then_else(le(max_col_clue, 3), _if_then_else(True, zeros_diff_rows, _if_then_else(and_(True, True), compare_blocks_rows, compare_blocks_rows)), _if_then_else(or_(le(0, zeros_diff_cols), le(0, 3)), ones_diff_rows, ones_diff_cols)))))
le(_if_then_else(False, _if_then_else(True, 2, 2), _if_then_else(True, 2, 2)), _if_then_else(or_(False, True), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, 0, 3)))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))))
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))))
COND TREES:
or_(ge(_if_then_else(False, 3, 4), _if_then_else(True, _if_then_else(True, ones_diff_rows, 0), 0)), or_(and_(True, ge(_if_then_else(le(_if_then_else(False, 3, ones_diff_rows), _if_then_else(False, 3, 4)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols))), compare_blocks_cols)), or_(False, True)))
ge(_if_then_else(le(_if_then_else(or_(or_(or_(True, True), and_(True, True)), or_(or_(True, False), and_(False, True))), _if_then_else(le(_if_then_else(False, ones_diff_cols, 3), _if_then_else(True, ones_diff_rows, 4)), _if_then_else(ge(3, max_row_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 3)), _if_then_else(or_(True, True), _if_then_else(True, ones_diff_cols, zeros_diff_cols), _if_then_else(True, 4, max_row_clue))), _if_then_else(and_(or_(True, True), and_(True, True)), _if_then_else(and_(True, True), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, 2)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(True, max_row_clue, max_col_clue)))), _if_then_else(and_(or_(and_(True, False), and_(False, True)), ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(ge(_if_then_else(True, 3, max_row_clue), _if_then_else(True, max_row_clue, 4)), _if_then_else(or_(True, False), _if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(False, 2, max_col_clue)), _if_then_else(ge(zeros_diff_cols, zeros_diff_cols), _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(False, 2, compare_blocks_rows))), _if_then_else(ge(_if_then_else(True, zeros_diff_cols, max_row_clue), _if_then_else(True, 0, 2)), _if_then_else(le(compare_blocks_rows, ones_diff_rows), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 0, compare_blocks_cols)), _if_then_else(ge(0, zeros_diff_rows), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(True, 2, 4))))), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, 0, ones_diff_rows)), _if_then_else(True, _if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)))
or_(and_(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue)), or_(and_(False, False), ge(ones_diff_cols, zeros_diff_cols))), or_(False, and_(or_(True, True), le(3, zeros_diff_rows)))), ge(_if_then_else(or_(ge(1, ones_diff_rows), or_(True, True)), _if_then_else(and_(or_(or_(or_(False, True), le(zeros_diff_cols, max_row_clue)), le(_if_then_else(True, max_col_clue, ones_diff_cols), _if_then_else(True, ones_diff_cols, 0))), True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 0, 1)), _if_then_else(and_(False, False), _if_then_else(False, 4, 0), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(compare_blocks_rows, ones_diff_cols), ge(zeros_diff_cols, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, zeros_diff_cols)))))
and_(or_(ge(_if_then_else(le(zeros_diff_cols, 1), _if_then_else(or_(le(compare_blocks_cols, _if_then_else(True, max_row_clue, _if_then_else(False, max_row_clue, zeros_diff_cols))), ge(0, _if_then_else(False, zeros_diff_cols, 4))), _if_then_else(ge(4, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(True, 3, _if_then_else(False, compare_blocks_cols, ones_diff_cols))), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(False, compare_blocks_rows, ones_diff_cols))), 3), compare_blocks_cols), ge(0, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), True)
ge(_if_then_else(and_(ge(3, max_col_clue), ge(ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(False, True), zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(or_(False, True), _if_then_else(False, 4, _if_then_else(False, 0, 4)), _if_then_else(False, 0, 2)))
and_(le(_if_then_else(and_(False, True), _if_then_else(False, 1, 2), _if_then_else(False, compare_blocks_rows, 2)), _if_then_else(le(compare_blocks_cols, 0), _if_then_else(False, 3, 4), _if_then_else(False, compare_blocks_cols, ones_diff_rows))), le(max_col_clue, _if_then_else(False, ones_diff_cols, max_col_clue)))
le(_if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, 4)), _if_then_else(or_(True, False), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(False, 0, max_col_clue)))
le(_if_then_else(False, _if_then_else(True, 2, 2), _if_then_else(False, 3, 4)), _if_then_else(or_(False, True), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, 0, 3)))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))))
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))))
COND TREES:
or_(ge(_if_then_else(False, 3, 4), _if_then_else(True, _if_then_else(True, ones_diff_rows, 0), 0)), or_(and_(True, ge(_if_then_else(le(_if_then_else(False, 3, ones_diff_rows), _if_then_else(False, 3, 4)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols))), compare_blocks_cols)), or_(False, True)))
ge(_if_then_else(and_(False, False), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, 0, ones_diff_rows)), _if_then_else(True, _if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)))
or_(and_(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue)), or_(and_(False, False), ge(ones_diff_cols, zeros_diff_cols))), or_(False, and_(or_(True, True), le(3, zeros_diff_rows)))), ge(_if_then_else(or_(ge(1, ones_diff_rows), or_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 0, 1)), _if_then_else(and_(False, False), _if_then_else(False, 4, 0), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(compare_blocks_rows, ones_diff_cols), ge(zeros_diff_cols, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, zeros_diff_cols)))))
and_(or_(ge(_if_then_else(le(zeros_diff_cols, 1), zeros_diff_rows, 3), compare_blocks_cols), ge(0, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), True)
ge(_if_then_else(and_(ge(3, max_col_clue), ge(ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(False, True), zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(or_(False, True), _if_then_else(False, 4, _if_then_else(False, 0, 4)), _if_then_else(False, 0, 2)))
and_(and_(le(1, compare_blocks_cols), ge(_if_then_else(True, 1, zeros_diff_rows), 4)), le(max_col_clue, _if_then_else(False, ones_diff_cols, max_col_clue)))
le(_if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, 4)), _if_then_else(or_(True, False), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(False, 0, max_col_clue)))
le(_if_then_else(False, _if_then_else(True, 2, 2), _if_then_else(False, 3, 4)), _if_then_else(or_(False, True), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, 0, 3)))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))))
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))))
COND TREES:
or_(ge(_if_then_else(False, 3, 4), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_rows, 0), 0)), or_(and_(True, ge(_if_then_else(le(_if_then_else(False, 3, ones_diff_rows), _if_then_else(False, 3, 4)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols))), compare_blocks_cols)), or_(False, True)))
ge(_if_then_else(and_(False, False), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, 0, ones_diff_rows)), _if_then_else(True, _if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)))
or_(and_(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue)), or_(and_(False, False), ge(ones_diff_cols, zeros_diff_cols))), or_(False, and_(or_(True, True), le(3, zeros_diff_rows)))), ge(_if_then_else(or_(ge(1, ones_diff_rows), or_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 0, 1)), _if_then_else(and_(False, False), _if_then_else(False, 4, 0), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(compare_blocks_rows, ones_diff_cols), ge(zeros_diff_cols, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, zeros_diff_cols)))))
and_(or_(ge(_if_then_else(le(zeros_diff_cols, 1), zeros_diff_rows, 3), compare_blocks_cols), ge(3, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), True)
ge(3, _if_then_else(or_(False, True), _if_then_else(False, 4, _if_then_else(False, 0, 4)), _if_then_else(False, 0, 2)))
and_(and_(le(1, compare_blocks_cols), ge(_if_then_else(True, 1, zeros_diff_rows), 4)), le(max_col_clue, _if_then_else(False, ones_diff_cols, max_col_clue)))
le(_if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, 4)), _if_then_else(or_(False, False), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(False, 0, max_col_clue)))
le(_if_then_else(False, _if_then_else(True, 2, 2), _if_then_else(False, 3, 4)), _if_then_else(or_(False, True), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, 0, 3)))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))))
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, add(mul(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_cols))))))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), add(add(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, zeros_diff_cols)), add(mul(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, zeros_diff_rows)))), mul(compare_blocks_cols, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))))
COND TREES:
or_(ge(_if_then_else(False, 3, 4), _if_then_else(True, _if_then_else(True, ones_diff_rows, 0), 0)), or_(and_(True, ge(_if_then_else(le(_if_then_else(False, 3, ones_diff_rows), _if_then_else(or_(False, True), 3, 4)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols))), compare_blocks_cols)), or_(False, True)))
ge(_if_then_else(and_(False, False), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, 0, ones_diff_rows)), _if_then_else(True, _if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)))
or_(and_(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue)), or_(and_(False, False), ge(ones_diff_cols, zeros_diff_cols))), or_(False, and_(or_(True, True), le(3, zeros_diff_rows)))), ge(_if_then_else(or_(ge(1, ones_diff_rows), or_(True, or_(ge(1, ones_diff_rows), or_(True, True)))), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 0, 1)), _if_then_else(and_(False, False), _if_then_else(False, 4, 0), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(compare_blocks_rows, ones_diff_cols), ge(zeros_diff_cols, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, zeros_diff_cols)))))
and_(or_(False, ge(0, ones_diff_cols)), True)
ge(4, _if_then_else(or_(False, True), _if_then_else(False, 4, _if_then_else(False, 0, 4)), _if_then_else(False, 0, 2)))
and_(and_(le(1, compare_blocks_cols), ge(_if_then_else(True, 1, zeros_diff_rows), 4)), le(max_col_clue, 3))
le(_if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, 4)), _if_then_else(or_(True, False), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(False, 0, max_col_clue)))
le(_if_then_else(False, _if_then_else(True, 2, 2), _if_then_else(False, 3, 4)), _if_then_else(or_(False, True), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(True, 0, 3)))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))))
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))))
COND TREES:
or_(ge(_if_then_else(False, 3, 4), _if_then_else(True, _if_then_else(True, ones_diff_rows, 0), 0)), or_(and_(True, ge(_if_then_else(le(_if_then_else(False, 3, ones_diff_rows), _if_then_else(False, 3, 4)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols))), compare_blocks_cols)), False))
ge(_if_then_else(and_(False, False), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, 0, ones_diff_rows)), _if_then_else(True, _if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)))
or_(and_(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue)), or_(and_(False, False), ge(ones_diff_cols, zeros_diff_cols))), or_(False, and_(or_(True, True), le(3, zeros_diff_rows)))), ge(_if_then_else(True, _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 0, 1)), _if_then_else(and_(False, False), _if_then_else(False, 4, 0), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(compare_blocks_rows, ones_diff_cols), ge(zeros_diff_cols, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, zeros_diff_cols)))))
and_(or_(ge(_if_then_else(le(zeros_diff_cols, 1), zeros_diff_rows, 3), compare_blocks_cols), ge(0, _if_then_else(False, compare_blocks_rows, _if_then_else(False, compare_blocks_rows, ones_diff_cols)))), True)
ge(_if_then_else(and_(ge(3, max_col_clue), ge(ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(False, True), zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(or_(False, True), _if_then_else(False, _if_then_else(and_(ge(3, max_col_clue), False), _if_then_else(and_(False, True), zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(False, 0, 4)), _if_then_else(False, 0, 2)))
and_(and_(le(1, _if_then_else(ge(_if_then_else(and_(ge(ones_diff_cols, 4), ge(4, 4)), _if_then_else(le(max_row_clue, 3), _if_then_else(True, 1, compare_blocks_rows), _if_then_else(False, 3, max_row_clue)), _if_then_else(or_(True, True), _if_then_else(True, ones_diff_cols, 4), _if_then_else(True, 1, ones_diff_rows))), _if_then_else(ge(_if_then_else(True, max_col_clue, 0), _if_then_else(True, 0, ones_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, _if_then_else(False, ones_diff_cols, max_col_clue), zeros_diff_rows), _if_then_else(True, 0, zeros_diff_rows)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(False, 2, compare_blocks_rows)))), _if_then_else(ge(_if_then_else(or_(False, True), _if_then_else(False, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, 2, 1)), _if_then_else(le(compare_blocks_cols, ones_diff_rows), _if_then_else(False, 4, max_row_clue), _if_then_else(True, 1, 0))), _if_then_else(or_(or_(False, True), or_(False, False)), _if_then_else(ge(2, zeros_diff_rows), _if_then_else(True, 0, compare_blocks_rows), _if_then_else(True, 4, compare_blocks_rows)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_cols, 3), _if_then_else(False, compare_blocks_rows, 4))), _if_then_else(ge(_if_then_else(False, ones_diff_cols, 4), _if_then_else(True, 1, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_rows, zeros_diff_rows), _if_then_else(True, 3, 3)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, max_col_clue, 2)))), _if_then_else(le(_if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(False, compare_blocks_rows, 3)), _if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, zeros_diff_rows), _if_then_else(True, 0, ones_diff_rows))), _if_then_else(le(_if_then_else(True, compare_blocks_rows, zeros_diff_rows), _if_then_else(True, 2, ones_diff_cols)), _if_then_else(and_(False, False), _if_then_else(True, 1, 1), _if_then_else(True, 1, zeros_diff_cols)), _if_then_else(le(compare_blocks_cols, 3), _if_then_else(False, max_col_clue, ones_diff_rows), _if_then_else(True, 2, zeros_diff_cols))), _if_then_else(or_(le(zeros_diff_cols, 4), le(compare_blocks_cols, max_col_clue)), _if_then_else(ge(0, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, ones_diff_rows), _if_then_else(False, ones_diff_cols, 3)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, 4), _if_then_else(True, compare_blocks_cols, 1)))))), ge(_if_then_else(True, 1, zeros_diff_rows), 4)), le(max_col_clue, _if_then_else(False, ones_diff_cols, max_col_clue)))
le(_if_then_else(le(_if_then_else(le(max_row_clue, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 1), _if_then_else(and_(False, False), 3, compare_blocks_rows)), _if_then_else(ge(compare_blocks_cols, 0), _if_then_else(False, _if_then_else(True, max_row_clue, max_col_clue), max_row_clue), _if_then_else(le(compare_blocks_rows, compare_blocks_cols), 0, ones_diff_cols))), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, 4)), _if_then_else(or_(True, False), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(False, 0, max_col_clue)))
le(_if_then_else(False, _if_then_else(True, 2, 2), _if_then_else(False, 3, 4)), _if_then_else(or_(False, True), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, 0, 3)))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))))
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))))
COND TREES:
or_(ge(_if_then_else(False, 3, 4), _if_then_else(True, _if_then_else(True, ones_diff_rows, 0), 0)), True)
ge(_if_then_else(le(zeros_diff_rows, max_row_clue), _if_then_else(and_(ge(max_col_clue, compare_blocks_cols), and_(ge(ones_diff_cols, max_col_clue), False)), _if_then_else(and_(True, and_(True, False)), _if_then_else(True, 0, _if_then_else(False, 4, zeros_diff_rows)), _if_then_else(True, 3, max_row_clue)), _if_then_else(ge(zeros_diff_cols, 0), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, _if_then_else(True, 0, 1), max_col_clue))), _if_then_else(False, 0, ones_diff_rows)), _if_then_else(True, _if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)))
or_(and_(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue)), or_(and_(False, False), ge(ones_diff_cols, zeros_diff_cols))), or_(False, and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue)), le(3, zeros_diff_rows)))), ge(_if_then_else(ge(max_col_clue, 0), _if_then_else(True, ones_diff_rows, _if_then_else(ge(ones_diff_cols, 2), _if_then_else(False, max_col_clue, 2), 0)), _if_then_else(le(max_row_clue, compare_blocks_cols), 3, ones_diff_cols)), _if_then_else(le(0, 2), _if_then_else(True, zeros_diff_cols, 1), _if_then_else(True, _if_then_else(False, 1, _if_then_else(False, ones_diff_cols, zeros_diff_cols)), max_col_clue))))
and_(or_(ge(_if_then_else(le(zeros_diff_cols, 1), zeros_diff_rows, 4), compare_blocks_cols), ge(0, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), True)
ge(_if_then_else(and_(ge(3, max_col_clue), ge(ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(False, or_(False, True)), zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(ge(_if_then_else(ge(_if_then_else(False, compare_blocks_cols, ones_diff_rows), max_row_clue), _if_then_else(False, 1, _if_then_else(False, ones_diff_cols, max_row_clue)), _if_then_else(True, _if_then_else(False, ones_diff_rows, max_col_clue), zeros_diff_cols)), _if_then_else(le(zeros_diff_cols, _if_then_else(False, compare_blocks_cols, 2)), _if_then_else(True, _if_then_else(False, max_row_clue, 3), ones_diff_cols), _if_then_else(False, compare_blocks_rows, compare_blocks_rows))), _if_then_else(False, 4, _if_then_else(False, 0, 4)), _if_then_else(False, 0, 2)))
and_(and_(le(1, compare_blocks_cols), ge(_if_then_else(True, 1, zeros_diff_rows), _if_then_else(le(_if_then_else(True, 1, ones_diff_rows), _if_then_else(False, zeros_diff_rows, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_cols, max_col_clue), _if_then_else(True, ones_diff_rows, 1))))), le(max_col_clue, _if_then_else(False, ones_diff_cols, max_col_clue)))
le(_if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, 4)), _if_then_else(or_(True, False), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(False, 0, max_col_clue)))
le(_if_then_else(False, _if_then_else(False, 2, 2), 4), _if_then_else(or_(False, True), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, 0, 3)))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))))
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))))
COND TREES:
or_(ge(_if_then_else(and_(le(ones_diff_cols, compare_blocks_rows), and_(and_(False, and_(True, False)), le(max_row_clue, zeros_diff_rows))), _if_then_else(le(ones_diff_cols, _if_then_else(and_(True, True), compare_blocks_rows, _if_then_else(True, zeros_diff_cols, max_row_clue))), _if_then_else(True, 2, _if_then_else(True, 1, max_col_clue)), _if_then_else(False, zeros_diff_cols, 2)), _if_then_else(ge(_if_then_else(True, ones_diff_cols, _if_then_else(True, max_row_clue, 2)), zeros_diff_cols), _if_then_else(ge(max_row_clue, _if_then_else(True, ones_diff_rows, max_col_clue)), max_row_clue, compare_blocks_rows), _if_then_else(False, _if_then_else(True, compare_blocks_cols, 1), ones_diff_cols))), _if_then_else(ge(_if_then_else(False, 3, 4), 4), ones_diff_rows, 0)), or_(and_(True, True), or_(False, True)))
ge(_if_then_else(and_(False, False), _if_then_else(False, 3, compare_blocks_rows), _if_then_else(False, 0, ones_diff_rows)), _if_then_else(or_(and_(ge(ones_diff_cols, compare_blocks_rows), or_(True, False)), or_(and_(True, False), le(zeros_diff_rows, ones_diff_rows))), _if_then_else(False, 1, max_col_clue), 0))
or_(False, ge(_if_then_else(or_(ge(1, ones_diff_rows), or_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 0, 1)), _if_then_else(and_(False, False), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(compare_blocks_rows, ones_diff_cols), False), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(ge(_if_then_else(or_(False, True), _if_then_else(True, ones_diff_rows, compare_blocks_cols), _if_then_else(True, 2, 3)), _if_then_else(le(4, 1), _if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(True, 2, max_col_clue))), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, zeros_diff_cols)))))
and_(or_(True, ge(_if_then_else(or_(le(compare_blocks_rows, 3), le(max_col_clue, ones_diff_rows)), _if_then_else(True, _if_then_else(True, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, max_row_clue)), _if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(True, _if_then_else(False, 1, _if_then_else(True, compare_blocks_cols, max_col_clue)), _if_then_else(ge(_if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows)), _if_then_else(le(1, ones_diff_rows), _if_then_else(True, 0, zeros_diff_rows), _if_then_else(True, 4, max_col_clue)), _if_then_else(le(max_col_clue, ones_diff_rows), _if_then_else(True, max_col_clue, ones_diff_rows), _if_then_else(True, max_row_clue, 4)))), _if_then_else(or_(False, ge(ones_diff_rows, 1)), compare_blocks_cols, _if_then_else(True, compare_blocks_cols, _if_then_else(False, compare_blocks_rows, 1))))), 4)), True)
ge(_if_then_else(and_(ge(3, zeros_diff_rows), ge(ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(False, True), zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(or_(False, True), _if_then_else(False, 4, _if_then_else(False, 0, 4)), _if_then_else(False, 0, 2)))
and_(and_(le(1, compare_blocks_cols), ge(_if_then_else(True, 1, zeros_diff_rows), 4)), le(_if_then_else(False, 1, zeros_diff_rows), _if_then_else(and_(le(_if_then_else(False, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, 3, 3)), le(_if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(le(1, compare_blocks_cols), zeros_diff_rows, 0))), ones_diff_cols, max_col_clue)))
le(_if_then_else(False, _if_then_else(False, 0, max_col_clue), _if_then_else(ge(_if_then_else(ge(2, 4), _if_then_else(False, 2, 4), _if_then_else(True, 3, 4)), _if_then_else(ge(4, 3), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, 2))), max_row_clue, 4)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 0, max_col_clue)))
le(_if_then_else(False, _if_then_else(and_(and_(ge(4, max_row_clue), and_(False, True)), and_(ge(zeros_diff_cols, compare_blocks_cols), and_(True, True))), 2, 2), _if_then_else(False, 3, 4)), _if_then_else(or_(False, False), _if_then_else(True, 4, 3), _if_then_else(False, 0, 3)))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))))
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))))
COND TREES:
or_(ge(_if_then_else(False, 3, 4), _if_then_else(True, _if_then_else(True, ones_diff_rows, 0), 0)), or_(and_(True, True), or_(False, True)))
ge(_if_then_else(and_(False, False), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, 0, ones_diff_rows)), _if_then_else(True, _if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)))
or_(and_(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue)), or_(and_(False, False), ge(ones_diff_cols, zeros_diff_cols))), or_(False, and_(or_(True, True), le(3, zeros_diff_rows)))), ge(_if_then_else(or_(ge(1, ones_diff_rows), or_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 0, 1)), _if_then_else(and_(False, False), _if_then_else(False, 4, 0), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(compare_blocks_rows, ones_diff_cols), ge(zeros_diff_cols, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, zeros_diff_cols)))))
and_(or_(ge(_if_then_else(le(zeros_diff_cols, 1), zeros_diff_rows, 3), 0), ge(0, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), True)
ge(_if_then_else(and_(ge(3, max_col_clue), ge(ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(False, True), zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(or_(False, True), _if_then_else(False, 4, _if_then_else(False, 0, 4)), _if_then_else(False, 0, 2)))
and_(and_(le(1, compare_blocks_cols), ge(_if_then_else(True, 1, zeros_diff_rows), 4)), le(max_col_clue, _if_then_else(False, ones_diff_cols, max_col_clue)))
le(_if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, 4)), _if_then_else(or_(True, False), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(False, 0, max_col_clue)))
le(_if_then_else(False, _if_then_else(False, 2, 2), _if_then_else(False, 3, 4)), _if_then_else(or_(False, True), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, 0, 3)))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))))
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))))
COND TREES:
or_(ge(_if_then_else(False, 3, 4), _if_then_else(True, _if_then_else(True, ones_diff_rows, 0), 0)), or_(and_(True, ge(_if_then_else(le(_if_then_else(False, 3, ones_diff_rows), _if_then_else(False, 3, 4)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, 2, max_row_clue), _if_then_else(ge(_if_then_else(le(_if_then_else(False, 3, ones_diff_rows), _if_then_else(False, 3, 4)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols))), compare_blocks_cols), 3, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols))), compare_blocks_cols)), True))
ge(_if_then_else(and_(False, False), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, 0, ones_diff_rows)), _if_then_else(True, _if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)))
or_(and_(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue)), or_(and_(False, False), ge(ones_diff_cols, zeros_diff_cols))), or_(False, and_(or_(True, True), le(3, zeros_diff_rows)))), ge(_if_then_else(or_(ge(1, ones_diff_rows), or_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 0, 1)), _if_then_else(and_(False, False), _if_then_else(False, 4, 0), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(compare_blocks_rows, ones_diff_cols), ge(zeros_diff_cols, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, zeros_diff_cols)))))
and_(or_(ge(_if_then_else(le(zeros_diff_cols, 1), zeros_diff_rows, 0), compare_blocks_cols), ge(compare_blocks_cols, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), True)
ge(_if_then_else(and_(ge(_if_then_else(and_(ge(3, max_col_clue), ge(ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(False, True), zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_cols, 4)), max_col_clue), ge(ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(False, True), zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(or_(False, True), _if_then_else(False, 4, _if_then_else(False, 0, 4)), _if_then_else(False, 0, 2)))
and_(and_(le(1, compare_blocks_cols), ge(_if_then_else(True, 1, zeros_diff_rows), 4)), le(max_col_clue, _if_then_else(False, ones_diff_cols, max_col_clue)))
le(_if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, 4)), _if_then_else(or_(True, False), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(False, 0, max_col_clue)))
le(_if_then_else(False, _if_then_else(True, 2, 2), _if_then_else(True, 3, 4)), _if_then_else(or_(False, True), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, 0, 3)))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))))
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))))
COND TREES:
or_(ge(_if_then_else(False, 3, 4), _if_then_else(True, _if_then_else(True, ones_diff_rows, 0), _if_then_else(True, ones_diff_rows, 0))), or_(and_(True, ge(_if_then_else(le(_if_then_else(False, 3, ones_diff_rows), _if_then_else(False, 3, 4)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols))), compare_blocks_cols)), or_(False, True)))
ge(_if_then_else(and_(False, False), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, 0, ones_diff_rows)), _if_then_else(True, _if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)))
or_(and_(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue)), or_(and_(False, False), ge(ones_diff_cols, zeros_diff_cols))), or_(False, and_(or_(True, True), le(3, zeros_diff_rows)))), ge(_if_then_else(or_(ge(1, ones_diff_rows), or_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 0, 1)), _if_then_else(and_(False, False), _if_then_else(False, 4, 0), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(compare_blocks_rows, ones_diff_cols), ge(zeros_diff_cols, ones_diff_cols)), _if_then_else(le(4, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, zeros_diff_cols)))))
and_(or_(ge(_if_then_else(le(zeros_diff_cols, 1), zeros_diff_rows, 3), compare_blocks_cols), ge(0, _if_then_else(False, compare_blocks_rows, 0))), True)
ge(_if_then_else(and_(ge(3, max_col_clue), ge(ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(False, True), zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(or_(False, True), _if_then_else(False, 4, _if_then_else(False, 0, 4)), _if_then_else(False, 0, 2)))
and_(and_(le(1, compare_blocks_cols), ge(_if_then_else(True, 1, zeros_diff_rows), 4)), le(max_col_clue, _if_then_else(True, ones_diff_cols, max_col_clue)))
le(_if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, _if_then_else(False, max_col_clue, zeros_diff_rows))), _if_then_else(or_(True, False), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(False, 0, max_col_clue)))
le(_if_then_else(False, _if_then_else(True, 2, 2), _if_then_else(False, 3, 4)), _if_then_else(or_(False, True), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, 0, 3)))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))))
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))))
COND TREES:
or_(ge(_if_then_else(False, compare_blocks_rows, 4), _if_then_else(True, 0, 0)), or_(and_(True, ge(_if_then_else(le(_if_then_else(False, 3, ones_diff_rows), _if_then_else(False, 3, 4)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols))), compare_blocks_cols)), or_(False, True)))
ge(_if_then_else(and_(False, False), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, 0, ones_diff_rows)), _if_then_else(True, _if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)))
or_(and_(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue)), or_(and_(False, False), ge(ones_diff_cols, zeros_diff_cols))), or_(False, and_(or_(True, True), le(3, zeros_diff_rows)))), ge(_if_then_else(or_(ge(1, ones_diff_rows), or_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 0, _if_then_else(and_(False, False), _if_then_else(False, 4, 0), _if_then_else(True, max_col_clue, max_row_clue)))), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_cols, 0), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(compare_blocks_rows, ones_diff_cols), ge(zeros_diff_cols, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, zeros_diff_cols)))))
and_(or_(ge(_if_then_else(le(zeros_diff_cols, 1), zeros_diff_rows, 3), compare_blocks_cols), ge(0, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), True)
ge(_if_then_else(and_(ge(3, max_col_clue), ge(ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(False, True), zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(and_(False, True), _if_then_else(False, 4, _if_then_else(False, 0, 4)), _if_then_else(False, 0, 2)))
and_(and_(le(max_col_clue, compare_blocks_cols), ge(_if_then_else(False, zeros_diff_rows, zeros_diff_rows), 4)), le(max_col_clue, _if_then_else(False, ones_diff_cols, max_col_clue)))
le(_if_then_else(le(zeros_diff_cols, max_row_clue), max_row_clue, _if_then_else(False, max_row_clue, 4)), _if_then_else(or_(True, False), 4, _if_then_else(False, max_row_clue, max_col_clue)))
le(_if_then_else(False, _if_then_else(True, 2, 2), _if_then_else(False, 3, 4)), _if_then_else(or_(False, True), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, 0, 3)))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))))
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))))
COND TREES:
or_(ge(3, _if_then_else(True, _if_then_else(True, ones_diff_rows, _if_then_else(and_(ge(zeros_diff_rows, 1), and_(True, False)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(le(_if_then_else(False, 3, ones_diff_rows), _if_then_else(False, 3, 4)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols))), _if_then_else(and_(False, False), max_col_clue, _if_then_else(True, 2, 3))), _if_then_else(le(max_row_clue, max_row_clue), _if_then_else(True, _if_then_else(False, 3, 4), max_row_clue), _if_then_else(True, compare_blocks_rows, _if_then_else(True, compare_blocks_rows, 3))))), 0)), True)
ge(_if_then_else(and_(False, False), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, 0, ones_diff_rows)), _if_then_else(True, _if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)))
or_(and_(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, _if_then_else(True, max_col_clue, max_row_clue), max_col_clue)), or_(and_(False, False), ge(ones_diff_cols, zeros_diff_cols))), or_(False, and_(or_(True, True), le(3, zeros_diff_rows)))), ge(_if_then_else(or_(ge(_if_then_else(False, compare_blocks_rows, ones_diff_cols), ones_diff_rows), or_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 0, 1)), _if_then_else(and_(False, False), _if_then_else(False, 4, 0), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(compare_blocks_rows, ones_diff_cols), ge(zeros_diff_cols, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, zeros_diff_cols)))))
and_(or_(ge(_if_then_else(le(_if_then_else(False, compare_blocks_rows, ones_diff_cols), 1), zeros_diff_rows, 3), compare_blocks_cols), ge(0, _if_then_else(le(ones_diff_cols, 1), compare_blocks_rows, ones_diff_cols))), True)
ge(_if_then_else(and_(ge(3, max_col_clue), ge(ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(False, True), zeros_diff_rows, compare_blocks_cols), _if_then_else(and_(False, True), ones_diff_cols, 4)), _if_then_else(False, 4, _if_then_else(False, compare_blocks_cols, 4)))
and_(and_(or_(and_(ge(max_row_clue, compare_blocks_cols), True), and_(le(4, zeros_diff_rows), False)), and_(ge(zeros_diff_rows, compare_blocks_rows), or_(True, True))), le(max_col_clue, _if_then_else(and_(le(1, compare_blocks_cols), ge(_if_then_else(True, 1, zeros_diff_rows), 4)), ones_diff_cols, max_col_clue)))
le(_if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(or_(True, False), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(or_(or_(and_(True, True), True), and_(or_(False, False), False)), _if_then_else(or_(True, ge(max_row_clue, ones_diff_cols)), _if_then_else(True, 0, _if_then_else(True, 3, ones_diff_rows)), _if_then_else(True, 0, _if_then_else(True, ones_diff_rows, _if_then_else(False, 3, zeros_diff_cols)))), _if_then_else(le(max_col_clue, 3), _if_then_else(True, zeros_diff_rows, _if_then_else(and_(True, True), compare_blocks_rows, compare_blocks_rows)), _if_then_else(or_(le(0, zeros_diff_cols), le(0, 3)), ones_diff_rows, ones_diff_cols)))))
le(_if_then_else(False, 3, _if_then_else(True, 2, 2)), _if_then_else(or_(False, True), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, 0, 3)))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))))
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))))
COND TREES:
or_(ge(_if_then_else(False, 3, 4), _if_then_else(True, _if_then_else(True, _if_then_else(or_(ge(ones_diff_rows, 1), and_(le(3, max_col_clue), True)), _if_then_else(or_(False, or_(False, True)), _if_then_else(True, ones_diff_rows, 0), _if_then_else(True, _if_then_else(False, compare_blocks_rows, 0), max_col_clue)), _if_then_else(ge(zeros_diff_cols, 4), _if_then_else(True, 0, _if_then_else(True, 1, compare_blocks_rows)), _if_then_else(False, ones_diff_cols, zeros_diff_cols))), 0), 0)), or_(and_(True, ge(_if_then_else(False, _if_then_else(False, compare_blocks_rows, ones_diff_cols), zeros_diff_rows), compare_blocks_cols)), or_(False, True)))
ge(_if_then_else(and_(False, False), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, 0, ones_diff_rows)), _if_then_else(True, _if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)))
or_(and_(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue)), or_(and_(False, False), ge(ones_diff_cols, zeros_diff_cols))), or_(or_(and_(ge(max_row_clue, max_col_clue), and_(True, True)), ge(_if_then_else(False, 0, 4), _if_then_else(False, ones_diff_cols, 0))), and_(or_(True, True), le(3, zeros_diff_rows)))), ge(_if_then_else(or_(ge(1, ones_diff_rows), or_(True, True)), _if_then_else(and_(True, True), 1, _if_then_else(False, 0, 1)), _if_then_else(and_(False, False), _if_then_else(False, 4, 0), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(compare_blocks_rows, ones_diff_cols), ge(zeros_diff_cols, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, zeros_diff_cols)))))
and_(or_(False, ge(0, _if_then_else(False, compare_blocks_rows, zeros_diff_cols))), True)
ge(_if_then_else(and_(ge(_if_then_else(and_(True, True), _if_then_else(True, max_col_clue, compare_blocks_cols), _if_then_else(False, max_row_clue, 3)), _if_then_else(le(0, zeros_diff_rows), _if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(False, 3, compare_blocks_rows))), False), _if_then_else(and_(False, True), zeros_diff_rows, 0), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(or_(False, True), _if_then_else(False, 4, _if_then_else(False, 0, 4)), _if_then_else(False, 0, 2)))
and_(and_(le(1, compare_blocks_cols), ge(_if_then_else(True, 1, zeros_diff_rows), 4)), le(max_col_clue, _if_then_else(False, ones_diff_cols, max_col_clue)))
le(_if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, 4)), _if_then_else(or_(True, False), _if_then_else(False, max_col_clue, _if_then_else(ge(_if_then_else(le(_if_then_else(True, ones_diff_cols, 2), _if_then_else(True, 4, ones_diff_cols)), zeros_diff_rows, max_col_clue), _if_then_else(True, _if_then_else(True, ones_diff_cols, 0), compare_blocks_rows)), _if_then_else(or_(le(zeros_diff_rows, compare_blocks_rows), and_(or_(True, True), True)), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, _if_then_else(or_(False, True), 2, _if_then_else(True, 2, 0)), max_row_clue)), _if_then_else(and_(ge(compare_blocks_cols, ones_diff_rows), True), _if_then_else(True, zeros_diff_rows, _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(le(zeros_diff_rows, max_row_clue), _if_then_else(True, ones_diff_rows, 0), max_row_clue)))), _if_then_else(False, 0, max_col_clue)))
le(_if_then_else(False, _if_then_else(True, 2, 2), _if_then_else(False, 3, 4)), _if_then_else(or_(False, True), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(le(_if_then_else(le(4, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, zeros_diff_rows, 4)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 2, max_col_clue))), _if_then_else(or_(or_(True, False), or_(False, False)), _if_then_else(and_(False, True), _if_then_else(False, ones_diff_cols, 1), _if_then_else(False, 4, 3)), _if_then_else(and_(False, True), _if_then_else(False, ones_diff_rows, 1), _if_then_else(True, max_col_clue, ones_diff_rows))), _if_then_else(or_(ge(3, 4), ge(max_col_clue, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(False, max_col_clue, compare_blocks_cols)), _if_then_else(le(3, ones_diff_cols), _if_then_else(False, 3, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, 4))))))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))))
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))))
COND TREES:
or_(ge(_if_then_else(False, 3, 4), _if_then_else(True, _if_then_else(True, ones_diff_rows, 0), 0)), or_(and_(True, ge(_if_then_else(le(_if_then_else(False, 3, ones_diff_rows), _if_then_else(False, 3, 4)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols))), compare_blocks_cols)), True))
ge(_if_then_else(and_(False, False), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, 0, ones_diff_rows)), _if_then_else(True, _if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)))
or_(and_(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue)), or_(and_(False, False), ge(ones_diff_cols, zeros_diff_cols))), or_(False, and_(or_(True, True), le(3, zeros_diff_rows)))), ge(_if_then_else(or_(ge(1, ones_diff_rows), or_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 0, 1)), _if_then_else(and_(False, False), _if_then_else(False, 4, 0), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(compare_blocks_rows, ones_diff_cols), ge(zeros_diff_cols, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, zeros_diff_cols)))))
and_(or_(ge(_if_then_else(le(zeros_diff_cols, 1), zeros_diff_rows, 0), compare_blocks_cols), ge(0, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), True)
ge(_if_then_else(and_(ge(_if_then_else(and_(ge(3, max_col_clue), ge(ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(False, True), zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_cols, 4)), max_col_clue), ge(ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(False, True), zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(or_(False, True), _if_then_else(False, 4, _if_then_else(False, 0, 4)), _if_then_else(False, 0, 2)))
and_(and_(le(1, compare_blocks_cols), ge(_if_then_else(True, 1, zeros_diff_rows), 4)), le(max_col_clue, _if_then_else(False, ones_diff_cols, max_col_clue)))
le(_if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, 4)), _if_then_else(or_(True, False), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(False, 0, max_col_clue)))
le(_if_then_else(False, _if_then_else(True, 2, 2), _if_then_else(False, 3, 4)), _if_then_else(or_(False, True), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, 0, 3)))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))))
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))))
COND TREES:
or_(ge(_if_then_else(False, 3, 4), _if_then_else(True, _if_then_else(True, ones_diff_rows, 0), 0)), or_(and_(False, ge(_if_then_else(le(_if_then_else(False, 3, ones_diff_rows), _if_then_else(False, 3, 4)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols))), compare_blocks_cols)), or_(False, True)))
ge(_if_then_else(and_(False, False), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, 0, ones_diff_rows)), _if_then_else(True, _if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)))
or_(and_(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue)), or_(and_(False, False), ge(ones_diff_cols, zeros_diff_cols))), or_(False, and_(or_(True, True), le(3, zeros_diff_rows)))), ge(_if_then_else(or_(ge(1, ones_diff_rows), or_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 0, 1)), _if_then_else(and_(False, False), _if_then_else(False, 4, 0), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(compare_blocks_rows, ones_diff_cols), ge(zeros_diff_cols, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, zeros_diff_cols)))))
and_(or_(or_(ge(_if_then_else(le(zeros_diff_cols, 1), zeros_diff_rows, 3), compare_blocks_cols), ge(0, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), ge(0, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), True)
ge(_if_then_else(and_(ge(3, max_col_clue), ge(ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(False, True), zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(or_(False, True), _if_then_else(False, 4, _if_then_else(False, 0, 4)), _if_then_else(False, 0, 2)))
and_(and_(le(1, compare_blocks_cols), ge(_if_then_else(True, 1, zeros_diff_rows), 4)), le(max_col_clue, _if_then_else(False, ones_diff_cols, max_col_clue)))
le(_if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), zeros_diff_cols), _if_then_else(or_(True, False), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(False, 0, max_col_clue)))
le(_if_then_else(False, _if_then_else(True, 2, 2), _if_then_else(False, 3, 4)), _if_then_else(or_(False, True), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, 0, 3)))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))))
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))))
COND TREES:
or_(ge(_if_then_else(False, 3, 4), _if_then_else(True, _if_then_else(True, ones_diff_rows, 0), 0)), or_(and_(True, ge(_if_then_else(le(_if_then_else(False, 3, ones_diff_rows), _if_then_else(False, 3, 4)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(le(_if_then_else(ge(_if_then_else(and_(False, False), _if_then_else(False, ones_diff_rows, max_row_clue), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(or_(False, True), _if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(False, max_col_clue, 2))), _if_then_else(and_(or_(True, False), le(2, ones_diff_rows)), _if_then_else(ge(2, compare_blocks_cols), _if_then_else(True, 1, max_col_clue), _if_then_else(False, max_row_clue, 1)), _if_then_else(le(max_row_clue, ones_diff_cols), _if_then_else(False, 3, 4), _if_then_else(False, zeros_diff_rows, ones_diff_cols))), _if_then_else(le(_if_then_else(False, ones_diff_rows, 2), _if_then_else(True, max_row_clue, max_row_clue)), _if_then_else(le(ones_diff_cols, zeros_diff_cols), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, 3, zeros_diff_cols)), _if_then_else(or_(True, True), _if_then_else(True, ones_diff_rows, 2), _if_then_else(True, 0, zeros_diff_rows)))), _if_then_else(and_(and_(and_(False, True), and_(True, True)), ge(_if_then_else(True, 0, 2), _if_then_else(False, 4, 3))), _if_then_else(and_(ge(max_row_clue, max_row_clue), ge(2, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, 4, 1), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(ge(3, ones_diff_cols), _if_then_else(True, max_col_clue, 4), _if_then_else(True, max_row_clue, zeros_diff_cols))), _if_then_else(le(_if_then_else(True, ones_diff_rows, 4), _if_then_else(True, 0, compare_blocks_rows)), _if_then_else(le(max_col_clue, 3), _if_then_else(True, 0, 2), _if_then_else(True, zeros_diff_cols, ones_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, ones_diff_rows, 4), _if_then_else(False, 4, 1))))), compare_blocks_rows, ones_diff_cols))), compare_blocks_cols)), or_(False, True)))
ge(_if_then_else(and_(False, False), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, 0, ones_diff_rows)), _if_then_else(True, _if_then_else(False, max_col_clue, max_col_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)))
or_(and_(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue)), or_(and_(False, False), ge(ones_diff_cols, zeros_diff_cols))), or_(False, and_(or_(True, True), le(3, zeros_diff_rows)))), ge(_if_then_else(or_(ge(1, ones_diff_rows), or_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(le(_if_then_else(and_(ge(0, max_row_clue), ge(1, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(ge(0, ones_diff_rows), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, zeros_diff_rows))), _if_then_else(or_(and_(False, False), ge(max_col_clue, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(True, 4, 1), _if_then_else(False, zeros_diff_cols, 1)), _if_then_else(ge(2, 4), _if_then_else(False, 3, 0), _if_then_else(False, 4, 1)))), _if_then_else(and_(and_(le(ones_diff_cols, zeros_diff_rows), and_(False, False)), and_(le(compare_blocks_rows, 4), ge(max_row_clue, compare_blocks_rows))), _if_then_else(and_(ge(compare_blocks_cols, 1), le(zeros_diff_rows, max_row_clue)), _if_then_else(ge(max_col_clue, compare_blocks_cols), _if_then_else(False, 1, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(le(max_row_clue, ones_diff_cols), _if_then_else(False, max_col_clue, ones_diff_rows), _if_then_else(False, 3, zeros_diff_cols))), _if_then_else(and_(or_(False, True), ge(max_col_clue, zeros_diff_rows)), _if_then_else(le(zeros_diff_rows, 2), _if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(False, max_row_clue, ones_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 2, 2)))), _if_then_else(ge(_if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, max_row_clue, max_col_clue)), _if_then_else(le(max_col_clue, zeros_diff_rows), _if_then_else(True, ones_diff_cols, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_cols))), _if_then_else(or_(ge(ones_diff_cols, zeros_diff_cols), le(0, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, 3, 1), _if_then_else(True, zeros_diff_rows, ones_diff_rows)), _if_then_else(or_(False, True), _if_then_else(False, 2, max_row_clue), _if_then_else(True, compare_blocks_rows, 4))), _if_then_else(or_(le(3, zeros_diff_rows), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, 1, 1), _if_then_else(False, 4, ones_diff_rows)), _if_then_else(ge(zeros_diff_cols, compare_blocks_cols), _if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(True, max_row_clue, zeros_diff_rows)))))), _if_then_else(and_(False, False), _if_then_else(False, 4, 0), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(compare_blocks_rows, ones_diff_cols), ge(zeros_diff_cols, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, zeros_diff_cols)))))
and_(or_(ge(_if_then_else(le(zeros_diff_cols, _if_then_else(le(zeros_diff_cols, 1), zeros_diff_rows, 3)), zeros_diff_rows, 3), _if_then_else(ge(_if_then_else(le(compare_blocks_cols, max_col_clue), _if_then_else(True, 3, max_col_clue), _if_then_else(False, zeros_diff_cols, 4)), _if_then_else(le(zeros_diff_rows, 3), _if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(False, 1, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(ge(3, 0), _if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_cols, 4)), _if_then_else(le(compare_blocks_cols, 2), _if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(True, 0, 4))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, 2), _if_then_else(False, compare_blocks_cols, 3)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_rows, 1), _if_then_else(True, 1, ones_diff_rows)), _if_then_else(le(2, 4), _if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_cols))))), ge(0, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), True)
ge(_if_then_else(and_(ge(3, max_col_clue), ge(ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(False, True), zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(or_(False, True), _if_then_else(False, 4, _if_then_else(False, 0, 4)), _if_then_else(False, 0, _if_then_else(ge(_if_then_else(le(4, 0), ones_diff_cols, 4), _if_then_else(or_(False, True), max_col_clue, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, 3, _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(True, compare_blocks_cols, 4)), _if_then_else(or_(True, ge(4, zeros_diff_rows)), _if_then_else(False, max_col_clue, 3), _if_then_else(False, _if_then_else(False, 4, ones_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_cols)))))))
and_(True, le(max_col_clue, _if_then_else(False, ones_diff_cols, max_col_clue)))
le(_if_then_else(False, _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, 4)), _if_then_else(or_(True, False), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(False, 0, max_col_clue)))
le(_if_then_else(False, _if_then_else(True, 2, 2), _if_then_else(False, 3, 4)), _if_then_else(or_(False, True), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, 0, 3)))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))))
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))))
COND TREES:
or_(ge(_if_then_else(False, 3, 4), _if_then_else(True, _if_then_else(True, ones_diff_rows, 0), 0)), or_(and_(True, ge(_if_then_else(le(_if_then_else(False, 3, ones_diff_rows), _if_then_else(False, 3, 4)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols))), compare_blocks_cols)), or_(False, True)))
ge(_if_then_else(and_(False, False), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, 0, ones_diff_rows)), _if_then_else(True, _if_then_else(False, 1, 1), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)))
or_(and_(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue)), or_(and_(False, False), ge(ones_diff_cols, zeros_diff_cols))), or_(False, and_(or_(True, True), le(3, zeros_diff_rows)))), ge(_if_then_else(or_(ge(1, ones_diff_rows), or_(True, False)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 0, 1)), _if_then_else(and_(False, False), _if_then_else(False, 4, 0), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(compare_blocks_rows, ones_diff_cols), ge(zeros_diff_cols, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, zeros_diff_cols)))))
and_(or_(ge(_if_then_else(and_(and_(False, True), or_(False, False)), _if_then_else(ge(compare_blocks_cols, 2), _if_then_else(True, max_col_clue, ones_diff_rows), _if_then_else(False, ones_diff_rows, 2)), _if_then_else(ge(4, compare_blocks_cols), _if_then_else(False, max_col_clue, max_row_clue), _if_then_else(True, 3, compare_blocks_rows))), compare_blocks_cols), ge(0, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), True)
ge(_if_then_else(and_(ge(3, max_col_clue), ge(ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(False, True), zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(or_(False, True), _if_then_else(ge(_if_then_else(ge(_if_then_else(and_(False, False), _if_then_else(True, max_col_clue, 0), _if_then_else(True, 2, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, ones_diff_cols, 3))), _if_then_else(le(_if_then_else(True, ones_diff_rows, 2), _if_then_else(True, zeros_diff_cols, zeros_diff_rows)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, ones_diff_rows, 1)), _if_then_else(and_(False, True), _if_then_else(True, compare_blocks_cols, 2), _if_then_else(False, 3, max_col_clue))), _if_then_else(and_(le(zeros_diff_rows, 2), and_(False, False)), _if_then_else(or_(False, True), _if_then_else(False, zeros_diff_rows, 0), _if_then_else(False, 2, ones_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_rows, 1), _if_then_else(False, 1, 3)))), _if_then_else(and_(or_(ge(compare_blocks_rows, zeros_diff_rows), or_(False, True)), le(_if_then_else(False, 0, 1), _if_then_else(True, compare_blocks_cols, 4))), _if_then_else(or_(ge(ones_diff_cols, ones_diff_cols), ge(2, max_row_clue)), _if_then_else(ge(ones_diff_rows, ones_diff_rows), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, ones_diff_rows, 1)), _if_then_else(le(2, max_row_clue), _if_then_else(True, 2, 2), _if_then_else(False, ones_diff_rows, ones_diff_cols))), _if_then_else(or_(ge(3, ones_diff_cols), ge(1, 2)), _if_then_else(le(0, 2), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(True, max_row_clue, 0)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, max_row_clue), _if_then_else(True, zeros_diff_cols, max_col_clue))))), 4, _if_then_else(False, 0, 4)), _if_then_else(False, 0, 2)))
and_(and_(le(1, compare_blocks_cols), ge(_if_then_else(and_(le(1, compare_blocks_cols), ge(_if_then_else(True, 1, zeros_diff_rows), 4)), 1, zeros_diff_rows), 4)), le(max_col_clue, _if_then_else(False, ones_diff_cols, max_col_clue)))
le(_if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(or_(and_(and_(True, True), le(_if_then_else(False, 4, 1), _if_then_else(False, ones_diff_rows, ones_diff_rows))), ge(_if_then_else(True, 2, max_col_clue), _if_then_else(True, 0, _if_then_else(True, max_col_clue, zeros_diff_cols)))), compare_blocks_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, 4)), _if_then_else(or_(True, False), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(False, 0, max_col_clue)))
le(_if_then_else(False, _if_then_else(True, 2, 2), _if_then_else(False, 3, 4)), _if_then_else(or_(False, True), _if_then_else(le(_if_then_else(ge(ones_diff_rows, compare_blocks_cols), _if_then_else(True, 0, 4), _if_then_else(True, max_row_clue, 2)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, zeros_diff_cols, ones_diff_rows))), _if_then_else(and_(and_(False, True), and_(False, True)), _if_then_else(or_(True, True), _if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, ones_diff_cols, max_col_clue)), _if_then_else(le(2, zeros_diff_cols), _if_then_else(False, 2, zeros_diff_rows), _if_then_else(True, 3, max_row_clue))), _if_then_else(le(_if_then_else(False, 3, zeros_diff_rows), _if_then_else(True, 4, 0)), _if_then_else(and_(False, True), _if_then_else(True, ones_diff_cols, 4), _if_then_else(True, compare_blocks_cols, max_row_clue)), _if_then_else(le(2, zeros_diff_cols), _if_then_else(False, max_row_clue, 2), _if_then_else(True, compare_blocks_cols, 1)))), _if_then_else(False, 0, 3)))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))))
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))))
COND TREES:
or_(ge(_if_then_else(False, 3, 4), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_rows, 0), 0)), or_(and_(True, ge(_if_then_else(le(_if_then_else(False, 3, ones_diff_rows), _if_then_else(False, 3, 4)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols))), compare_blocks_cols)), or_(False, True)))
ge(_if_then_else(True, _if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)), _if_then_else(True, _if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)))
or_(and_(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue)), or_(and_(False, False), ge(ones_diff_cols, zeros_diff_cols))), or_(False, and_(or_(True, True), le(3, zeros_diff_rows)))), ge(_if_then_else(or_(ge(1, ones_diff_rows), or_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 0, 1)), _if_then_else(and_(False, False), _if_then_else(False, 4, 0), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(compare_blocks_rows, ones_diff_cols), ge(zeros_diff_cols, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, zeros_diff_cols)))))
and_(or_(ge(_if_then_else(le(zeros_diff_cols, 1), zeros_diff_rows, 3), compare_blocks_cols), ge(3, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), True)
ge(3, _if_then_else(or_(False, True), _if_then_else(False, 4, _if_then_else(False, 0, 4)), _if_then_else(False, 0, 2)))
and_(and_(le(1, compare_blocks_cols), ge(_if_then_else(True, 1, 1), 4)), le(max_col_clue, _if_then_else(False, ones_diff_cols, max_col_clue)))
le(_if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, _if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, 4))), _if_then_else(False, max_row_clue, 4)), _if_then_else(or_(False, False), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(False, 0, max_col_clue)))
le(_if_then_else(False, _if_then_else(True, 2, 2), _if_then_else(False, 3, 4)), _if_then_else(or_(False, True), _if_then_else(False, 4, zeros_diff_cols), _if_then_else(False, 0, 3)))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)), mul(add(ones_diff_cols, add(add(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows))), add(add(mul(zeros_diff_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)), mul(add(zeros_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_cols))))), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(add(mul(add(ones_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, compare_blocks_cols))), mul(mul(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, zeros_diff_cols))))), mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), add(add(add(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_rows)))), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(ones_diff_rows, compare_blocks_rows), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)))), add(ones_diff_cols, ones_diff_rows))))
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_cols), add(mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(ones_diff_rows, compare_blocks_cols)), mul(add(ones_diff_cols, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_rows))), add(add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows)))), add(add(mul(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_cols))), mul(add(add(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)))))))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows))), add(mul(add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols)), mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), mul(compare_blocks_rows, add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))))
COND TREES:
or_(ge(_if_then_else(False, 3, 4), _if_then_else(True, _if_then_else(True, ones_diff_rows, 0), 0)), or_(and_(True, ge(_if_then_else(le(_if_then_else(False, 3, ones_diff_rows), _if_then_else(False, 3, 4)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, max_row_clue))), compare_blocks_cols)), or_(False, True)))
ge(_if_then_else(and_(False, False), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, 0, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, 0, ones_diff_rows)))
or_(and_(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue)), or_(and_(False, False), ge(ones_diff_cols, zeros_diff_cols))), or_(False, and_(or_(True, True), le(3, zeros_diff_rows)))), ge(_if_then_else(or_(ge(1, ones_diff_rows), or_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 0, _if_then_else(and_(False, False), _if_then_else(False, 4, 0), _if_then_else(True, max_col_clue, max_row_clue)))), _if_then_else(and_(False, False), _if_then_else(False, 4, 0), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(compare_blocks_rows, ones_diff_cols), ge(zeros_diff_cols, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, zeros_diff_cols)))))
and_(False, True)
ge(_if_then_else(and_(ge(3, max_col_clue), ge(ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(False, True), zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(or_(False, True), _if_then_else(False, 4, _if_then_else(False, 0, 4)), _if_then_else(False, 0, 2)))
and_(and_(le(zeros_diff_rows, compare_blocks_cols), ge(_if_then_else(True, zeros_diff_rows, zeros_diff_rows), 4)), le(max_col_clue, _if_then_else(False, ones_diff_cols, max_col_clue)))
le(zeros_diff_rows, _if_then_else(or_(True, False), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(False, max_row_clue, max_col_clue)))
le(_if_then_else(False, _if_then_else(True, 2, 2), _if_then_else(True, 3, 4)), _if_then_else(or_(False, True), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, 0, 3)))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))))
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))))
COND TREES:
or_(ge(_if_then_else(False, 3, 4), _if_then_else(True, _if_then_else(True, ones_diff_rows, 0), 0)), or_(and_(True, ge(_if_then_else(le(_if_then_else(False, 3, ones_diff_rows), _if_then_else(False, 3, 4)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols))), compare_blocks_cols)), or_(False, True)))
ge(_if_then_else(and_(False, False), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, 0, ones_diff_rows)), _if_then_else(True, _if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)))
or_(and_(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue)), or_(and_(False, False), ge(ones_diff_cols, zeros_diff_cols))), or_(False, and_(or_(True, True), le(3, zeros_diff_rows)))), ge(_if_then_else(or_(ge(1, ones_diff_rows), or_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 0, 1)), _if_then_else(and_(False, False), _if_then_else(False, 4, 0), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(compare_blocks_rows, ones_diff_cols), ge(zeros_diff_cols, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, zeros_diff_cols)))))
and_(or_(ge(_if_then_else(le(zeros_diff_cols, 1), zeros_diff_rows, 3), compare_blocks_cols), ge(0, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), True)
ge(_if_then_else(and_(ge(3, max_col_clue), ge(ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(False, True), zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(or_(False, True), _if_then_else(False, 4, _if_then_else(False, 0, 4)), _if_then_else(False, 0, 2)))
and_(and_(le(1, compare_blocks_cols), ge(_if_then_else(True, 1, zeros_diff_rows), 4)), le(max_col_clue, _if_then_else(False, ones_diff_cols, max_col_clue)))
le(_if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, 4)), _if_then_else(or_(True, False), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(False, 0, max_col_clue)))
le(_if_then_else(False, _if_then_else(True, 2, 2), _if_then_else(False, 3, 4)), _if_then_else(or_(False, True), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, 0, 3)))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))))
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))))
COND TREES:
or_(ge(_if_then_else(False, 3, 4), _if_then_else(True, _if_then_else(True, ones_diff_rows, 0), 0)), or_(and_(True, ge(_if_then_else(le(_if_then_else(False, 3, ones_diff_rows), _if_then_else(False, 3, 4)), _if_then_else(True, _if_then_else(False, 2, max_row_clue), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols))), compare_blocks_cols)), or_(False, True)))
ge(_if_then_else(and_(False, False), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, 0, ones_diff_rows)), _if_then_else(True, _if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)))
or_(and_(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue)), or_(and_(False, False), ge(ones_diff_cols, zeros_diff_cols))), or_(False, and_(or_(True, True), le(3, zeros_diff_rows)))), ge(_if_then_else(or_(ge(1, ones_diff_rows), or_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 0, 1)), _if_then_else(and_(False, False), _if_then_else(False, 4, 0), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(compare_blocks_rows, ones_diff_cols), ge(zeros_diff_cols, ones_diff_cols)), max_col_clue, _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, zeros_diff_cols)))))
and_(or_(ge(_if_then_else(le(zeros_diff_cols, 1), zeros_diff_rows, 3), compare_blocks_cols), ge(0, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), True)
ge(_if_then_else(and_(ge(3, max_col_clue), ge(ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(False, True), zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(or_(False, True), _if_then_else(True, 4, _if_then_else(False, 0, 4)), _if_then_else(False, 0, 2)))
and_(and_(le(1, compare_blocks_cols), ge(_if_then_else(True, 1, zeros_diff_rows), 4)), le(max_col_clue, _if_then_else(False, ones_diff_cols, max_col_clue)))
le(_if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, 4)), _if_then_else(or_(True, False), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(False, 0, max_col_clue)))
le(_if_then_else(False, _if_then_else(True, 2, 2), _if_then_else(False, 3, 4)), _if_then_else(or_(False, True), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(True, 2, 2)))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))))
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))))
COND TREES:
or_(ge(_if_then_else(False, 3, 4), _if_then_else(True, _if_then_else(True, ones_diff_rows, 0), 0)), or_(and_(True, ge(_if_then_else(le(_if_then_else(False, 3, ones_diff_rows), _if_then_else(False, 3, 4)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(False, 3, 4))), compare_blocks_cols)), or_(False, True)))
ge(_if_then_else(and_(False, False), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, 0, ones_diff_rows)), _if_then_else(True, _if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)))
or_(True, ge(_if_then_else(or_(ge(1, ones_diff_rows), or_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 0, 1)), _if_then_else(and_(False, False), _if_then_else(False, 4, 0), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(compare_blocks_rows, ones_diff_cols), ge(zeros_diff_cols, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, zeros_diff_cols)))))
and_(True, True)
ge(_if_then_else(and_(ge(3, max_col_clue), ge(ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(False, True), zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(or_(False, True), _if_then_else(False, 4, _if_then_else(False, 0, 4)), _if_then_else(False, 0, 2)))
and_(and_(False, ge(_if_then_else(True, 1, zeros_diff_rows), 4)), le(max_col_clue, _if_then_else(False, ones_diff_cols, max_col_clue)))
le(_if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, 4)), _if_then_else(or_(or_(le(zeros_diff_cols, 4), False), False), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(False, 0, max_col_clue)))
le(_if_then_else(False, _if_then_else(True, 2, 2), _if_then_else(False, 3, 4)), _if_then_else(or_(False, True), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, 0, 3)))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)), mul(add(add(add(mul(add(zeros_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(ones_diff_cols, mul(compare_blocks_cols, ones_diff_rows))), mul(add(ones_diff_rows, ones_diff_rows), mul(mul(mul(zeros_diff_cols, ones_diff_cols), compare_blocks_rows), ones_diff_cols))), compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), mul(add(mul(mul(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), add(mul(ones_diff_cols, zeros_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_rows), add(ones_diff_cols, zeros_diff_cols))))))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(add(mul(add(ones_diff_cols, mul(ones_diff_cols, ones_diff_cols)), mul(zeros_diff_rows, compare_blocks_rows)), add(add(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_cols))), ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))))
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(mul(add(add(add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, zeros_diff_cols))), mul(mul(add(ones_diff_rows, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)))), mul(add(mul(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), mul(add(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), add(add(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, ones_diff_cols), add(compare_blocks_rows, ones_diff_cols))))), add(compare_blocks_rows, compare_blocks_cols)))
add(add(mul(add(add(mul(add(mul(zeros_diff_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)), mul(mul(compare_blocks_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_rows))), mul(mul(mul(zeros_diff_cols, zeros_diff_rows), add(ones_diff_cols, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), add(ones_diff_cols, ones_diff_rows)))), add(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, ones_diff_cols))), mul(add(add(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_cols)), mul(add(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_rows))))), zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))))
COND TREES:
or_(ge(_if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(True, _if_then_else(True, 1, 0), 0)), or_(and_(True, ge(_if_then_else(le(_if_then_else(False, 3, ones_diff_rows), _if_then_else(False, 3, 4)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, 2, max_row_clue), 1), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols))), compare_blocks_cols)), and_(ge(_if_then_else(ge(zeros_diff_cols, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_cols), _if_then_else(False, 0, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(False, 3, ones_diff_cols), _if_then_else(False, compare_blocks_cols, zeros_diff_rows))), or_(or_(or_(False, True), le(3, 1)), ge(_if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(False, max_col_clue, ones_diff_cols))))))
ge(_if_then_else(and_(False, False), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, 0, ones_diff_rows)), ones_diff_rows)
or_(and_(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue)), or_(and_(False, False), ge(ones_diff_cols, zeros_diff_cols))), or_(False, and_(or_(True, True), le(3, zeros_diff_rows)))), ge(_if_then_else(or_(ge(1, ones_diff_rows), or_(and_(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue)), or_(and_(False, False), ge(ones_diff_cols, zeros_diff_cols))), or_(False, and_(or_(True, True), le(3, zeros_diff_rows)))), True)), compare_blocks_rows, _if_then_else(and_(False, False), _if_then_else(False, 4, 0), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(compare_blocks_rows, ones_diff_cols), ge(zeros_diff_cols, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, zeros_diff_cols)))))
and_(or_(ge(_if_then_else(le(zeros_diff_cols, 1), zeros_diff_rows, 3), compare_blocks_cols), ge(0, _if_then_else(False, _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(le(_if_then_else(True, _if_then_else(and_(and_(True, ge(2, 1)), le(ones_diff_rows, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(False, _if_then_else(False, 3, max_row_clue), 0), _if_then_else(True, _if_then_else(False, _if_then_else(True, ones_diff_rows, 0), max_col_clue), 3)), _if_then_else(and_(False, False), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(True, _if_then_else(False, _if_then_else(True, 1, max_col_clue), 0), _if_then_else(True, compare_blocks_rows, ones_diff_cols)))), zeros_diff_rows), max_row_clue), _if_then_else(or_(ge(_if_then_else(le(zeros_diff_cols, 1), zeros_diff_rows, 3), compare_blocks_cols), ge(0, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), max_row_clue, _if_then_else(False, ones_diff_cols, zeros_diff_cols)), _if_then_else(True, zeros_diff_rows, compare_blocks_cols))))), True)
ge(_if_then_else(and_(ge(3, max_col_clue), ge(ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(False, True), zeros_diff_rows, compare_blocks_cols), _if_then_else(False, _if_then_else(False, zeros_diff_cols, 4), _if_then_else(ge(_if_then_else(le(4, zeros_diff_cols), _if_then_else(False, 0, compare_blocks_rows), _if_then_else(False, ones_diff_rows, 2)), _if_then_else(and_(True, True), _if_then_else(True, max_row_clue, 2), _if_then_else(False, compare_blocks_cols, 3))), _if_then_else(or_(or_(True, True), or_(False, True)), _if_then_else(ge(ones_diff_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(True, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(True, 3, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows))), _if_then_else(ge(_if_then_else(False, 3, zeros_diff_rows), _if_then_else(True, ones_diff_cols, compare_blocks_cols)), _if_then_else(and_(False, False), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, 3)), _if_then_else(and_(True, True), _if_then_else(False, 3, 1), _if_then_else(False, 4, 4)))))), _if_then_else(or_(False, True), _if_then_else(False, 4, _if_then_else(False, 0, 4)), _if_then_else(False, 0, 2)))
and_(le(_if_then_else(True, 1, zeros_diff_rows), _if_then_else(False, ones_diff_cols, max_col_clue)), le(max_col_clue, _if_then_else(le(_if_then_else(or_(ge(_if_then_else(True, compare_blocks_rows, 4), _if_then_else(True, ones_diff_rows, 4)), ge(zeros_diff_cols, _if_then_else(False, compare_blocks_cols, 1))), _if_then_else(ge(0, 2), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, 2, max_col_clue)), _if_then_else(and_(True, False), _if_then_else(False, _if_then_else(True, ones_diff_rows, compare_blocks_rows), 4), _if_then_else(True, _if_then_else(True, ones_diff_rows, 0), max_col_clue))), compare_blocks_cols), ones_diff_cols, max_col_clue)))
le(_if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, 4)), _if_then_else(True, _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(or_(or_(True, False), and_(False, False)), _if_then_else(and_(False, True), _if_then_else(False, 4, zeros_diff_cols), _if_then_else(True, compare_blocks_cols, 1)), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_cols, max_col_clue), _if_then_else(False, max_col_clue, 0)))))
le(3, _if_then_else(or_(False, True), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(ge(_if_then_else(False, compare_blocks_rows, _if_then_else(True, ones_diff_cols, ones_diff_cols)), _if_then_else(False, _if_then_else(True, ones_diff_cols, max_col_clue), 1)), _if_then_else(ge(compare_blocks_cols, _if_then_else(False, 4, zeros_diff_cols)), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(or_(True, False), 0, 4)), _if_then_else(and_(True, False), _if_then_else(True, _if_then_else(True, 0, zeros_diff_rows), 2), _if_then_else(ge(3, max_col_clue), zeros_diff_cols, compare_blocks_cols)))))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_rows), add(mul(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), add(mul(compare_blocks_cols, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_cols))))), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), add(add(add(zeros_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_rows)))))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(add(add(add(ones_diff_cols, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_rows)), add(add(compare_blocks_cols, mul(ones_diff_cols, compare_blocks_cols)), add(compare_blocks_rows, ones_diff_rows))), ones_diff_rows))))
mul(mul(add(mul(mul(add(ones_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_cols)), add(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_rows))), ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))))
COND TREES:
or_(ge(_if_then_else(False, 3, 4), _if_then_else(True, _if_then_else(True, ones_diff_rows, 0), 0)), or_(and_(True, ge(_if_then_else(le(_if_then_else(False, 3, ones_diff_rows), _if_then_else(False, 3, 4)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols))), compare_blocks_cols)), or_(False, True)))
ge(_if_then_else(and_(False, False), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, 0, ones_diff_rows)), _if_then_else(True, _if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)))
or_(and_(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue)), or_(and_(False, False), ge(ones_diff_cols, zeros_diff_cols))), or_(False, and_(or_(True, True), le(3, zeros_diff_rows)))), ge(_if_then_else(or_(ge(1, ones_diff_rows), or_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 0, 1)), _if_then_else(and_(False, False), _if_then_else(False, 4, 0), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(compare_blocks_rows, _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 0, 1))), ge(zeros_diff_cols, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, zeros_diff_cols)))))
and_(or_(ge(_if_then_else(ge(_if_then_else(le(zeros_diff_cols, 1), zeros_diff_rows, 3), compare_blocks_cols), zeros_diff_rows, 3), compare_blocks_cols), ge(0, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), True)
ge(_if_then_else(and_(ge(3, max_col_clue), False), _if_then_else(and_(False, True), zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(or_(False, True), _if_then_else(False, 4, _if_then_else(False, 0, 4)), _if_then_else(False, 0, 2)))
and_(and_(le(1, compare_blocks_cols), ge(_if_then_else(True, 1, zeros_diff_rows), 4)), le(max_col_clue, _if_then_else(False, ones_diff_cols, max_col_clue)))
le(_if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, 4)), _if_then_else(or_(True, False), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(False, 0, max_col_clue)))
le(_if_then_else(False, _if_then_else(True, 2, 2), _if_then_else(False, 3, 4)), _if_then_else(or_(False, True), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(or_(False, True), 0, 3)))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))))
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))))
COND TREES:
or_(ge(_if_then_else(False, 3, 4), _if_then_else(True, _if_then_else(True, ones_diff_rows, 0), 0)), or_(and_(True, ge(_if_then_else(le(_if_then_else(False, 3, ones_diff_rows), _if_then_else(False, 3, 4)), _if_then_else(True, _if_then_else(False, 2, max_row_clue), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols))), compare_blocks_cols)), or_(False, True)))
ge(_if_then_else(and_(False, False), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, 0, ones_diff_rows)), _if_then_else(True, _if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)))
or_(and_(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue)), or_(and_(False, False), ge(ones_diff_cols, zeros_diff_cols))), or_(False, and_(or_(True, True), le(3, zeros_diff_rows)))), ge(_if_then_else(or_(ge(1, ones_diff_rows), or_(True, True)), ones_diff_cols, _if_then_else(and_(False, False), _if_then_else(False, 4, 0), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(compare_blocks_rows, ones_diff_cols), ge(zeros_diff_cols, ones_diff_cols)), max_col_clue, _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, zeros_diff_cols)))))
and_(or_(le(zeros_diff_cols, 1), ge(0, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), True)
ge(_if_then_else(and_(ge(3, max_col_clue), ge(ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(False, True), zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(or_(ge(ones_diff_rows, compare_blocks_cols), True), _if_then_else(True, 4, _if_then_else(False, 0, 4)), _if_then_else(False, 0, 2)))
and_(and_(le(1, compare_blocks_cols), ge(_if_then_else(True, 1, zeros_diff_rows), 4)), le(max_col_clue, _if_then_else(False, ones_diff_cols, max_col_clue)))
le(_if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, 4)), _if_then_else(or_(True, False), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(False, 0, max_col_clue)))
le(_if_then_else(False, _if_then_else(True, 2, 2), _if_then_else(False, 3, 4)), _if_then_else(False, _if_then_else(True, 4, zeros_diff_cols), _if_then_else(True, 2, 2)))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))))
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))))
COND TREES:
or_(ge(_if_then_else(False, 3, 4), _if_then_else(True, _if_then_else(True, ones_diff_rows, 0), 0)), or_(and_(True, ge(_if_then_else(le(_if_then_else(False, 3, ones_diff_rows), _if_then_else(False, 3, 4)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols))), compare_blocks_cols)), or_(False, True)))
ge(_if_then_else(and_(False, False), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, 0, ones_diff_rows)), _if_then_else(True, _if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)))
or_(and_(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue)), or_(and_(False, False), ge(ones_diff_cols, zeros_diff_cols))), or_(False, and_(or_(True, True), le(3, zeros_diff_rows)))), ge(_if_then_else(or_(ge(1, ones_diff_rows), or_(True, True)), _if_then_else(and_(True, or_(and_(False, False), or_(True, False))), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 0, 1)), _if_then_else(and_(False, False), _if_then_else(False, 4, 0), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(compare_blocks_rows, ones_diff_cols), ge(zeros_diff_cols, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, zeros_diff_cols)))))
and_(or_(ge(_if_then_else(True, zeros_diff_rows, 3), compare_blocks_cols), ge(0, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), True)
ge(_if_then_else(and_(False, ge(ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(False, True), zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(or_(False, True), _if_then_else(False, 4, _if_then_else(False, 0, 4)), _if_then_else(False, 0, 2)))
and_(and_(and_(le(1, 0), or_(False, False)), ge(_if_then_else(True, 1, zeros_diff_rows), 4)), le(max_col_clue, _if_then_else(False, ones_diff_cols, max_col_clue)))
le(_if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(False, 0, max_col_clue)))
le(_if_then_else(False, _if_then_else(True, 2, 2), _if_then_else(False, 3, 4)), _if_then_else(or_(False, True), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, 0, 3)))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(mul(add(mul(mul(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), ones_diff_rows), mul(ones_diff_cols, zeros_diff_cols)), add(add(zeros_diff_cols, mul(add(add(ones_diff_rows, zeros_diff_rows), mul(ones_diff_rows, mul(ones_diff_rows, ones_diff_cols))), add(add(ones_diff_cols, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_cols), compare_blocks_rows)))), mul(ones_diff_cols, add(zeros_diff_cols, compare_blocks_cols)))), ones_diff_rows)))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(add(mul(add(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_cols)), mul(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols))), add(mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, zeros_diff_rows)), mul(mul(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)))), ones_diff_rows)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), mul(add(mul(add(mul(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), add(mul(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, ones_diff_cols)))), add(mul(mul(add(ones_diff_cols, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_rows)), add(mul(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_rows))), mul(mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_cols)))))))
mul(mul(mul(add(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, compare_blocks_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(mul(zeros_diff_rows, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, compare_blocks_rows), mul(add(add(add(ones_diff_rows, ones_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_cols, ones_diff_rows))), compare_blocks_cols)))), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, add(add(mul(mul(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows))), mul(mul(add(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, ones_diff_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_rows)))))), mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))))
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))))
COND TREES:
or_(ge(_if_then_else(False, 3, 4), _if_then_else(True, _if_then_else(True, ones_diff_rows, 0), 0)), or_(and_(True, ge(_if_then_else(le(_if_then_else(False, 3, ones_diff_rows), _if_then_else(False, 3, 4)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols))), compare_blocks_cols)), or_(False, True)))
ge(_if_then_else(and_(False, False), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, 0, ones_diff_rows)), compare_blocks_rows)
or_(and_(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue)), or_(and_(False, False), ge(ones_diff_cols, zeros_diff_cols))), or_(False, and_(or_(True, True), le(3, zeros_diff_rows)))), ge(_if_then_else(or_(ge(1, ones_diff_rows), or_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 0, 1)), _if_then_else(and_(False, False), 0, _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(compare_blocks_rows, ones_diff_cols), ge(zeros_diff_cols, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, zeros_diff_cols)))))
and_(or_(ge(_if_then_else(le(zeros_diff_cols, 1), zeros_diff_rows, 3), compare_blocks_cols), ge(0, compare_blocks_rows)), or_(False, True))
ge(_if_then_else(and_(False, ge(4, compare_blocks_cols)), _if_then_else(and_(False, True), zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(or_(False, True), _if_then_else(False, 4, _if_then_else(False, 0, 4)), _if_then_else(False, 0, 2)))
and_(and_(le(1, compare_blocks_cols), ge(_if_then_else(True, 1, zeros_diff_rows), 4)), le(max_col_clue, _if_then_else(False, ones_diff_cols, max_col_clue)))
le(_if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, 4)), _if_then_else(or_(True, False), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(False, 0, max_col_clue)))
le(_if_then_else(False, _if_then_else(True, 2, 2), _if_then_else(True, 3, 4)), _if_then_else(or_(False, True), _if_then_else(True, 4, _if_then_else(False, 0, 3)), _if_then_else(False, 0, 3)))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_cols)), mul(add(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_cols, zeros_diff_rows))), mul(mul(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_rows)))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))))
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(add(mul(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_cols)), add(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, compare_blocks_rows))), zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)))
add(add(add(mul(ones_diff_rows, ones_diff_cols), mul(ones_diff_rows, ones_diff_rows)), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))), mul(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows))), mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_rows)), add(add(compare_blocks_rows, compare_blocks_cols), add(zeros_diff_rows, compare_blocks_cols))), add(add(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)), add(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, ones_diff_cols)))))
COND TREES:
or_(ge(_if_then_else(False, 3, 4), _if_then_else(True, _if_then_else(True, ones_diff_rows, 0), 0)), or_(and_(True, ge(_if_then_else(le(_if_then_else(False, 3, ones_diff_rows), _if_then_else(False, 3, 4)), _if_then_else(le(1, _if_then_else(ge(_if_then_else(le(4, 3), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, ones_diff_cols, compare_blocks_cols)), _if_then_else(ge(compare_blocks_rows, max_row_clue), _if_then_else(True, zeros_diff_cols, 2), _if_then_else(False, 1, 2))), _if_then_else(le(_if_then_else(False, 4, zeros_diff_cols), _if_then_else(False, max_row_clue, 1)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, ones_diff_rows, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 2)), _if_then_else(or_(False, False), _if_then_else(True, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, 0, 0))), _if_then_else(and_(ge(zeros_diff_cols, zeros_diff_cols), and_(True, False)), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_cols, 0), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), _if_then_else(ge(1, 3), _if_then_else(False, ones_diff_cols, 3), _if_then_else(False, 0, compare_blocks_rows))))), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols))), compare_blocks_cols)), or_(False, True)))
ge(_if_then_else(and_(False, False), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, 0, ones_diff_rows)), _if_then_else(True, _if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)))
or_(and_(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue)), or_(and_(False, False), ge(ones_diff_cols, zeros_diff_cols))), or_(False, and_(or_(True, True), le(3, zeros_diff_rows)))), ge(_if_then_else(or_(ge(1, ones_diff_rows), or_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 0, 1)), _if_then_else(and_(False, False), _if_then_else(False, 4, 0), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(compare_blocks_rows, ones_diff_cols), ge(zeros_diff_cols, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, zeros_diff_cols)))))
and_(or_(or_(le(_if_then_else(True, max_row_clue, 4), _if_then_else(False, ones_diff_rows, ones_diff_cols)), le(_if_then_else(le(4, _if_then_else(False, ones_diff_cols, 3)), zeros_diff_rows, max_col_clue), _if_then_else(or_(or_(True, True), True), _if_then_else(False, 0, max_col_clue), max_row_clue))), ge(0, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), True)
ge(_if_then_else(and_(ge(3, max_col_clue), ge(ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(False, True), zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(or_(False, True), _if_then_else(False, 4, _if_then_else(False, 0, 4)), _if_then_else(False, 0, 2)))
and_(and_(le(1, compare_blocks_cols), ge(_if_then_else(True, 1, zeros_diff_rows), 4)), le(max_col_clue, _if_then_else(False, ones_diff_cols, max_col_clue)))
le(_if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, 4)), _if_then_else(or_(True, False), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(False, 0, max_col_clue)))
le(_if_then_else(False, _if_then_else(True, 2, 2), _if_then_else(False, 3, 4)), _if_then_else(or_(False, True), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, 0, 3)))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))))
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))))
COND TREES:
or_(ge(_if_then_else(False, 3, 4), _if_then_else(True, _if_then_else(True, ones_diff_rows, 0), 0)), or_(and_(True, ge(_if_then_else(le(_if_then_else(False, 3, ones_diff_rows), _if_then_else(False, 3, _if_then_else(or_(or_(le(_if_then_else(False, zeros_diff_rows, 0), max_row_clue), True), or_(False, True)), _if_then_else(le(max_row_clue, 0), _if_then_else(or_(True, False), _if_then_else(True, _if_then_else(True, ones_diff_rows, 4), compare_blocks_rows), _if_then_else(and_(True, False), max_row_clue, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, max_col_clue)), _if_then_else(or_(True, False), _if_then_else(or_(False, True), compare_blocks_cols, 4), _if_then_else(True, ones_diff_cols, ones_diff_rows))))), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, compare_blocks_rows, _if_then_else(False, 3, ones_diff_rows)))), compare_blocks_cols)), or_(False, True)))
or_(and_(or_(True, False), le(_if_then_else(True, 3, compare_blocks_rows), max_row_clue)), or_(ge(_if_then_else(True, max_col_clue, ones_diff_rows), ones_diff_rows), and_(False, le(1, compare_blocks_cols))))
or_(and_(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue)), or_(and_(False, False), ge(ones_diff_cols, zeros_diff_cols))), or_(False, and_(or_(True, True), le(3, zeros_diff_rows)))), ge(_if_then_else(or_(ge(1, ones_diff_rows), or_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 0, 1)), _if_then_else(and_(False, False), _if_then_else(False, 4, 0), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(compare_blocks_rows, ones_diff_cols), ge(zeros_diff_cols, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), compare_blocks_cols), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, zeros_diff_cols)))))
ge(_if_then_else(or_(True, True), _if_then_else(False, zeros_diff_cols, max_row_clue), _if_then_else(True, 2, 3)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, ones_diff_rows, zeros_diff_cols)))
ge(_if_then_else(le(_if_then_else(and_(True, True), _if_then_else(True, compare_blocks_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, ones_diff_rows)), _if_then_else(ge(compare_blocks_rows, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_rows), _if_then_else(True, 0, 3))), _if_then_else(ge(_if_then_else(True, max_col_clue, 3), _if_then_else(True, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(True, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 0, ones_diff_rows))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, 4, 4)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(True, 0, 1)), _if_then_else(le(compare_blocks_rows, max_row_clue), _if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(True, zeros_diff_cols, 1)))), _if_then_else(or_(False, True), _if_then_else(False, 4, _if_then_else(False, 0, 4)), _if_then_else(False, 0, 2)))
and_(and_(le(1, compare_blocks_cols), ge(_if_then_else(True, 1, zeros_diff_rows), 4)), le(max_col_clue, _if_then_else(False, ones_diff_cols, max_col_clue)))
le(_if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, _if_then_else(le(_if_then_else(True, 0, _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(or_(and_(False, False), or_(False, True)), _if_then_else(False, _if_then_else(False, compare_blocks_cols, ones_diff_cols), compare_blocks_rows), _if_then_else(ge(4, 4), _if_then_else(False, max_col_clue, ones_diff_cols), compare_blocks_rows))), _if_then_else(and_(True, True), _if_then_else(True, _if_then_else(le(2, compare_blocks_cols), compare_blocks_rows, max_row_clue), _if_then_else(False, _if_then_else(True, zeros_diff_cols, 4), 2)), _if_then_else(False, zeros_diff_cols, 3)), _if_then_else(and_(False, False), _if_then_else(True, ones_diff_rows, zeros_diff_rows), _if_then_else(False, ones_diff_rows, _if_then_else(True, max_col_clue, 2)))), zeros_diff_rows), _if_then_else(False, max_row_clue, 4)), _if_then_else(or_(True, False), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(False, 0, max_col_clue)))
le(_if_then_else(False, _if_then_else(True, 2, 2), _if_then_else(False, 3, 4)), _if_then_else(or_(False, True), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, _if_then_else(or_(or_(le(_if_then_else(True, ones_diff_cols, 3), _if_then_else(False, 0, 1)), and_(ge(1, zeros_diff_cols), or_(False, False))), or_(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, 4, 3)), or_(ge(2, 1), le(ones_diff_cols, compare_blocks_rows)))), _if_then_else(and_(or_(ge(max_col_clue, zeros_diff_rows), or_(True, True)), ge(_if_then_else(False, 2, compare_blocks_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols))), _if_then_else(or_(or_(True, True), or_(True, False)), _if_then_else(le(1, zeros_diff_cols), _if_then_else(True, 2, 2), _if_then_else(False, 4, compare_blocks_cols)), _if_then_else(and_(False, True), _if_then_else(False, 1, compare_blocks_cols), _if_then_else(False, max_col_clue, 1))), _if_then_else(and_(le(0, zeros_diff_rows), or_(True, True)), _if_then_else(ge(2, 0), _if_then_else(True, 3, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(ge(1, 3), _if_then_else(False, ones_diff_cols, 2), _if_then_else(True, zeros_diff_cols, compare_blocks_cols)))), _if_then_else(le(_if_then_else(ge(max_col_clue, ones_diff_cols), _if_then_else(False, compare_blocks_cols, 0), _if_then_else(False, 4, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, ones_diff_rows, zeros_diff_cols))), _if_then_else(le(_if_then_else(True, compare_blocks_rows, 1), _if_then_else(False, compare_blocks_cols, ones_diff_rows)), _if_then_else(ge(zeros_diff_rows, zeros_diff_cols), _if_then_else(True, max_row_clue, 1), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(ge(zeros_diff_cols, 1), _if_then_else(False, 3, max_row_clue), _if_then_else(False, ones_diff_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(True, max_col_clue, 4)), _if_then_else(or_(False, True), _if_then_else(True, 1, 1), _if_then_else(True, 2, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(False, ones_diff_cols, max_col_clue), _if_then_else(False, zeros_diff_rows, ones_diff_rows))))), 3)))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))))
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))))
COND TREES:
or_(ge(_if_then_else(False, 3, 4), _if_then_else(True, _if_then_else(True, ones_diff_rows, 0), 0)), or_(and_(True, ge(_if_then_else(le(_if_then_else(False, 3, ones_diff_rows), _if_then_else(False, 3, 4)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, max_row_clue))), compare_blocks_cols)), or_(False, True)))
ge(_if_then_else(and_(False, False), _if_then_else(True, 3, zeros_diff_cols), _if_then_else(False, 0, ones_diff_rows)), _if_then_else(True, _if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)))
or_(and_(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue)), or_(and_(False, False), ge(ones_diff_cols, zeros_diff_cols))), or_(False, and_(or_(True, True), le(3, zeros_diff_rows)))), ge(_if_then_else(or_(ge(1, ones_diff_rows), or_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 0, _if_then_else(and_(False, False), _if_then_else(False, 4, 0), _if_then_else(True, max_col_clue, max_row_clue)))), _if_then_else(and_(False, False), _if_then_else(False, 4, 0), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(compare_blocks_rows, ones_diff_cols), ge(zeros_diff_cols, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(and_(or_(True, True), le(3, zeros_diff_rows)), 4, zeros_diff_cols)))))
and_(False, True)
ge(_if_then_else(and_(ge(3, max_col_clue), ge(ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(False, True), zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(or_(False, True), _if_then_else(False, 4, _if_then_else(False, 0, 4)), _if_then_else(ge(3, max_col_clue), 0, 2)))
and_(and_(le(1, compare_blocks_cols), ge(_if_then_else(True, zeros_diff_rows, zeros_diff_rows), 4)), le(zeros_diff_rows, _if_then_else(False, ones_diff_cols, max_col_clue)))
le(_if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, 4)), _if_then_else(or_(True, False), _if_then_else(and_(True, and_(True, True)), zeros_diff_rows, max_col_clue), _if_then_else(False, max_row_clue, max_col_clue)))
le(_if_then_else(False, _if_then_else(True, 2, 2), _if_then_else(False, 3, 4)), _if_then_else(or_(or_(or_(le(0, 4), True), or_(True, True)), True), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, 0, 3)))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
mul(mul(mul(mul(mul(add(mul(zeros_diff_cols, ones_diff_cols), mul(add(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols)), mul(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows))), ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))))
mul(mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)), add(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_cols)))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, add(add(add(compare_blocks_rows, zeros_diff_rows), add(add(zeros_diff_rows, ones_diff_cols), zeros_diff_rows)), add(mul(mul(ones_diff_rows, zeros_diff_cols), compare_blocks_rows), mul(ones_diff_cols, add(compare_blocks_rows, zeros_diff_cols)))))))
COND TREES:
or_(ge(_if_then_else(False, 3, 4), _if_then_else(True, _if_then_else(True, ones_diff_rows, 0), 0)), or_(and_(True, ge(_if_then_else(le(_if_then_else(False, 3, ones_diff_rows), _if_then_else(False, 3, 4)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols))), compare_blocks_cols)), or_(False, ge(_if_then_else(or_(and_(False, True), or_(False, False)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, 0, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(True, 1, 3), _if_then_else(False, zeros_diff_rows, compare_blocks_cols))), _if_then_else(le(_if_then_else(True, ones_diff_rows, 2), _if_then_else(False, 1, zeros_diff_cols)), _if_then_else(ge(zeros_diff_rows, 3), _if_then_else(False, 1, 1), _if_then_else(True, compare_blocks_cols, zeros_diff_cols)), _if_then_else(ge(zeros_diff_rows, max_row_clue), _if_then_else(True, 4, 3), _if_then_else(False, 1, ones_diff_rows)))))))
ge(_if_then_else(ge(_if_then_else(True, _if_then_else(True, compare_blocks_cols, 0), ones_diff_rows), _if_then_else(and_(False, False), _if_then_else(True, 4, compare_blocks_cols), 4)), _if_then_else(and_(True, and_(False, True)), _if_then_else(False, _if_then_else(False, _if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(False, 4, ones_diff_rows)), _if_then_else(True, 1, _if_then_else(False, max_row_clue, 2))), _if_then_else(False, max_row_clue, _if_then_else(True, ones_diff_rows, _if_then_else(True, 1, ones_diff_cols)))), _if_then_else(ge(compare_blocks_cols, zeros_diff_rows), _if_then_else(True, _if_then_else(True, max_col_clue, _if_then_else(True, ones_diff_cols, ones_diff_cols)), _if_then_else(and_(False, True), 0, max_row_clue)), _if_then_else(or_(and_(True, True), True), max_row_clue, _if_then_else(le(zeros_diff_cols, 4), _if_then_else(False, 4, ones_diff_cols), compare_blocks_cols)))), _if_then_else(True, _if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)))
or_(and_(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue)), or_(and_(False, False), ge(ones_diff_cols, zeros_diff_cols))), or_(False, True)), ge(_if_then_else(or_(ge(1, ones_diff_rows), or_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 0, 1)), _if_then_else(and_(False, False), _if_then_else(False, 4, 0), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(compare_blocks_rows, ones_diff_cols), ge(zeros_diff_cols, _if_then_else(ge(_if_then_else(ge(1, zeros_diff_rows), _if_then_else(False, 2, 3), _if_then_else(False, 2, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(True, 3, compare_blocks_rows))), _if_then_else(ge(_if_then_else(True, 1, 2), _if_then_else(True, 2, 0)), _if_then_else(and_(True, False), _if_then_else(False, 4, 4), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, 0))), _if_then_else(le(_if_then_else(True, ones_diff_rows, 0), _if_then_else(False, 1, 4)), _if_then_else(or_(True, True), _if_then_else(True, max_row_clue, 3), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, ones_diff_rows), _if_then_else(True, 2, 3), _if_then_else(True, 4, max_col_clue)))))), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, zeros_diff_cols)))))
and_(or_(ge(_if_then_else(le(zeros_diff_cols, 1), zeros_diff_rows, 3), compare_blocks_cols), ge(0, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), True)
ge(_if_then_else(and_(False, ge(ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(False, True), zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(or_(False, True), _if_then_else(False, 4, _if_then_else(False, 0, 4)), _if_then_else(False, 0, 2)))
and_(and_(and_(le(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(False, 2, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, ones_diff_rows, 4), _if_then_else(True, ones_diff_rows, max_col_clue))), ge(_if_then_else(and_(False, False), _if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(True, max_col_clue, 4)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, zeros_diff_cols, max_col_clue)))), ge(_if_then_else(True, 1, zeros_diff_rows), 4)), le(max_col_clue, _if_then_else(False, ones_diff_cols, max_col_clue)))
le(_if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, 4)), _if_then_else(or_(True, False), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(or_(and_(True, False), ge(2, max_col_clue)), _if_then_else(and_(le(1, zeros_diff_rows), True), _if_then_else(and_(False, True), compare_blocks_cols, 0), _if_then_else(True, max_col_clue, max_col_clue)), _if_then_else(ge(4, ones_diff_rows), _if_then_else(or_(True, True), max_row_clue, 3), _if_then_else(False, max_col_clue, zeros_diff_rows)))))
le(_if_then_else(False, _if_then_else(True, 2, 2), _if_then_else(False, 3, 4)), _if_then_else(or_(False, or_(False, ge(_if_then_else(False, _if_then_else(True, 3, 4), ones_diff_rows), _if_then_else(False, 3, 4)))), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, 0, 3)))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))))
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))))
COND TREES:
or_(ge(_if_then_else(False, 3, 4), _if_then_else(True, _if_then_else(True, ones_diff_rows, 0), 0)), or_(and_(True, ge(_if_then_else(le(_if_then_else(False, 3, ones_diff_rows), _if_then_else(False, 3, 4)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols))), compare_blocks_cols)), or_(False, True)))
ge(_if_then_else(and_(False, False), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, 0, ones_diff_rows)), _if_then_else(True, _if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)))
or_(and_(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue)), or_(and_(False, False), ge(ones_diff_cols, zeros_diff_cols))), or_(False, and_(or_(True, True), le(3, zeros_diff_rows)))), ge(_if_then_else(or_(ge(1, ones_diff_rows), or_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 0, 1)), _if_then_else(and_(False, False), _if_then_else(False, 4, 0), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(compare_blocks_rows, ones_diff_cols), ge(zeros_diff_cols, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, zeros_diff_cols)))))
and_(or_(ge(_if_then_else(le(zeros_diff_cols, 1), zeros_diff_rows, 3), compare_blocks_cols), ge(0, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), True)
ge(_if_then_else(and_(ge(3, max_col_clue), ge(ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(False, True), zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(or_(False, True), _if_then_else(False, 4, _if_then_else(False, 0, 4)), _if_then_else(False, 0, 2)))
and_(and_(le(1, compare_blocks_cols), ge(_if_then_else(True, 1, zeros_diff_rows), 4)), le(max_col_clue, _if_then_else(False, ones_diff_cols, max_col_clue)))
le(_if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, 4)), _if_then_else(or_(True, False), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(False, 0, max_col_clue)))
le(_if_then_else(False, _if_then_else(True, 2, 2), _if_then_else(False, 3, 4)), _if_then_else(or_(False, True), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, 0, 3)))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(add(add(add(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_cols, ones_diff_cols)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows))), ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_cols, mul(compare_blocks_rows, ones_diff_rows))), add(mul(add(zeros_diff_rows, compare_blocks_rows), ones_diff_cols), mul(zeros_diff_rows, compare_blocks_rows)))))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))))
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, add(add(mul(add(ones_diff_cols, ones_diff_rows), add(ones_diff_cols, zeros_diff_cols)), mul(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_cols))), add(zeros_diff_rows, compare_blocks_cols)))))
COND TREES:
or_(ge(_if_then_else(False, 3, 4), _if_then_else(True, _if_then_else(True, ones_diff_rows, 0), 0)), or_(and_(True, ge(_if_then_else(le(_if_then_else(False, 3, ones_diff_rows), _if_then_else(False, 3, 4)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols))), compare_blocks_cols)), or_(False, True)))
ge(_if_then_else(and_(False, False), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, 0, ones_diff_rows)), _if_then_else(True, _if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)))
or_(and_(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue)), or_(and_(False, False), ge(ones_diff_cols, zeros_diff_cols))), or_(False, and_(or_(True, True), le(3, zeros_diff_rows)))), ge(_if_then_else(or_(ge(1, ones_diff_rows), or_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 0, 1)), _if_then_else(and_(False, False), _if_then_else(False, 4, 0), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(compare_blocks_rows, ones_diff_cols), ge(zeros_diff_cols, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, zeros_diff_cols)))))
and_(or_(ge(_if_then_else(le(zeros_diff_cols, 1), zeros_diff_rows, 3), compare_blocks_cols), ge(0, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), True)
ge(_if_then_else(and_(ge(3, max_col_clue), ge(ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(False, True), zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(or_(False, True), _if_then_else(False, 4, _if_then_else(False, 0, 4)), _if_then_else(False, 0, 2)))
and_(and_(le(1, compare_blocks_cols), ge(_if_then_else(True, 1, zeros_diff_rows), 4)), le(max_col_clue, _if_then_else(False, ones_diff_cols, max_col_clue)))
le(_if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, 4)), _if_then_else(or_(True, False), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(False, 0, max_col_clue)))
le(_if_then_else(False, _if_then_else(True, 2, 2), _if_then_else(False, 3, 4)), _if_then_else(or_(False, True), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, 0, 3)))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))))
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))))
COND TREES:
or_(ge(_if_then_else(False, 3, 4), 4), or_(and_(True, ge(_if_then_else(le(_if_then_else(False, 3, ones_diff_rows), _if_then_else(False, 3, 4)), 2, _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols))), compare_blocks_cols)), or_(False, True)))
ge(_if_then_else(and_(False, False), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(ge(_if_then_else(and_(False, False), _if_then_else(False, 1, 2), _if_then_else(True, 1, ones_diff_cols)), _if_then_else(ge(zeros_diff_rows, 3), _if_then_else(True, max_row_clue, 1), _if_then_else(False, ones_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), le(max_row_clue, 3)), _if_then_else(and_(False, False), _if_then_else(True, 4, 4), _if_then_else(True, 4, zeros_diff_cols)), _if_then_else(le(2, 3), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(True, ones_diff_cols, compare_blocks_cols))), _if_then_else(or_(and_(False, True), ge(zeros_diff_rows, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(False, zeros_diff_rows, ones_diff_cols), _if_then_else(False, 1, 0)), _if_then_else(True, _if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows))))), _if_then_else(True, _if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)))
or_(and_(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue)), or_(and_(ge(_if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), _if_then_else(True, _if_then_else(False, 1, 0), 3), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(or_(False, True), _if_then_else(True, zeros_diff_rows, zeros_diff_cols), _if_then_else(False, _if_then_else(True, ones_diff_cols, max_col_clue), 1))), False), ge(ones_diff_cols, zeros_diff_cols))), or_(False, and_(or_(True, True), le(3, zeros_diff_rows)))), ge(_if_then_else(or_(ge(1, ones_diff_rows), or_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 0, 1)), _if_then_else(and_(False, False), _if_then_else(False, 4, 0), _if_then_else(True, _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 0, 1)), max_row_clue))), _if_then_else(and_(le(compare_blocks_rows, ones_diff_cols), ge(zeros_diff_cols, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, zeros_diff_cols)))))
and_(or_(ge(_if_then_else(le(zeros_diff_cols, _if_then_else(ge(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, compare_blocks_cols)), _if_then_else(le(1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, zeros_diff_cols), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(ge(0, ones_diff_cols), _if_then_else(False, max_row_clue, zeros_diff_rows), _if_then_else(True, 3, max_col_clue)))), zeros_diff_rows, 3), compare_blocks_cols), ge(0, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), True)
ge(_if_then_else(and_(ge(3, max_col_clue), ge(ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(False, True), zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(or_(False, True), _if_then_else(ge(_if_then_else(ge(_if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_rows)), _if_then_else(ge(compare_blocks_rows, 1), _if_then_else(False, 4, 4), _if_then_else(False, 3, max_row_clue)), _if_then_else(and_(False, True), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, 2, 2))), _if_then_else(and_(ge(2, 0), and_(False, True)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(True, max_row_clue, ones_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, 2), _if_then_else(True, 3, ones_diff_cols)))), 4, _if_then_else(False, 0, 4)), _if_then_else(False, 0, 2)))
and_(and_(and_(and_(and_(True, False), or_(False, True)), ge(1, _if_then_else(or_(True, False), compare_blocks_rows, 4))), ge(_if_then_else(True, 1, zeros_diff_rows), 4)), le(max_col_clue, _if_then_else(False, ones_diff_cols, max_col_clue)))
le(_if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(le(zeros_diff_cols, 4), compare_blocks_rows, zeros_diff_rows), _if_then_else(le(_if_then_else(le(zeros_diff_rows, compare_blocks_cols), _if_then_else(True, max_col_clue, max_row_clue), _if_then_else(False, zeros_diff_cols, max_row_clue)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 2, ones_diff_cols), _if_then_else(False, 0, 1))), _if_then_else(and_(ge(2, zeros_diff_rows), and_(False, False)), _if_then_else(or_(True, False), _if_then_else(False, max_row_clue, max_row_clue), _if_then_else(False, 4, zeros_diff_rows)), _if_then_else(and_(True, True), 0, _if_then_else(False, max_col_clue, zeros_diff_cols))), _if_then_else(and_(ge(zeros_diff_rows, max_row_clue), or_(True, True)), _if_then_else(ge(4, compare_blocks_cols), _if_then_else(True, 1, 0), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)), _if_then_else(ge(1, 0), _if_then_else(True, 4, 2), _if_then_else(True, ones_diff_cols, 1))))), _if_then_else(or_(True, False), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(False, 0, max_col_clue)))
le(_if_then_else(False, _if_then_else(True, 2, 2), _if_then_else(False, 3, 4)), _if_then_else(or_(False, True), _if_then_else(True, 4, zeros_diff_cols), 2))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))))
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))))
COND TREES:
or_(ge(_if_then_else(or_(and_(and_(and_(False, True), or_(False, False)), and_(or_(False, True), le(zeros_diff_cols, 4))), and_(le(_if_then_else(False, zeros_diff_cols, max_col_clue), _if_then_else(True, max_col_clue, max_row_clue)), le(_if_then_else(True, ones_diff_cols, 4), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)))), _if_then_else(or_(and_(ge(ones_diff_rows, 0), or_(False, False)), or_(ge(2, 4), or_(True, False))), _if_then_else(or_(ge(compare_blocks_cols, max_row_clue), and_(False, True)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_rows, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, zeros_diff_cols)), _if_then_else(ge(compare_blocks_cols, compare_blocks_rows), _if_then_else(False, max_row_clue, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, max_row_clue))), _if_then_else(and_(le(compare_blocks_cols, 2), and_(True, False)), _if_then_else(or_(True, True), _if_then_else(True, 2, 3), _if_then_else(False, 0, ones_diff_cols)), _if_then_else(ge(max_row_clue, max_row_clue), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(False, 4, ones_diff_cols)))), _if_then_else(le(_if_then_else(ge(0, 1), _if_then_else(False, 0, 0), _if_then_else(False, compare_blocks_cols, max_col_clue)), _if_then_else(and_(False, False), _if_then_else(True, max_row_clue, ones_diff_cols), _if_then_else(True, zeros_diff_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, max_row_clue, ones_diff_rows), _if_then_else(False, 4, 3)), _if_then_else(or_(False, False), _if_then_else(False, ones_diff_rows, 1), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, 4, max_row_clue))), _if_then_else(and_(or_(False, False), ge(compare_blocks_rows, max_col_clue)), _if_then_else(and_(True, False), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(True, 0, zeros_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, 0, ones_diff_cols), _if_then_else(True, 1, max_row_clue))))), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_rows, 0), 0)), or_(and_(True, ge(_if_then_else(le(_if_then_else(False, 3, ones_diff_rows), _if_then_else(False, 3, 4)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 3, zeros_diff_rows)), max_row_clue), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols))), compare_blocks_cols)), or_(False, True)))
ge(_if_then_else(and_(False, False), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, 0, ones_diff_rows)), _if_then_else(ge(zeros_diff_rows, 3), _if_then_else(False, ones_diff_cols, 0), _if_then_else(False, ones_diff_cols, ones_diff_rows)))
or_(and_(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue)), or_(and_(False, False), ge(ones_diff_cols, zeros_diff_cols))), or_(False, and_(or_(True, True), le(3, zeros_diff_rows)))), ge(_if_then_else(or_(ge(1, ones_diff_rows), or_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 0, 1)), _if_then_else(and_(False, False), _if_then_else(False, 4, 0), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(compare_blocks_rows, ones_diff_cols), ge(zeros_diff_cols, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, zeros_diff_cols)))))
and_(or_(ge(_if_then_else(le(zeros_diff_cols, 1), zeros_diff_rows, 3), zeros_diff_rows), ge(3, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), True)
ge(3, _if_then_else(or_(False, True), _if_then_else(le(_if_then_else(le(_if_then_else(False, compare_blocks_cols, zeros_diff_cols), compare_blocks_rows), _if_then_else(ge(compare_blocks_cols, 2), _if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(True, 2, 2)), _if_then_else(False, 0, max_col_clue)), _if_then_else(or_(ge(compare_blocks_rows, max_row_clue), True), _if_then_else(or_(True, True), 1, ones_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(False, 2, ones_diff_rows)))), 4, _if_then_else(False, 0, 4)), _if_then_else(False, 0, 2)))
and_(and_(le(_if_then_else(and_(True, False), compare_blocks_rows, _if_then_else(ge(_if_then_else(and_(True, False), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, 1, 0)), _if_then_else(ge(1, 4), _if_then_else(False, 2, ones_diff_rows), _if_then_else(False, max_row_clue, 3))), max_col_clue, ones_diff_cols)), compare_blocks_cols), ge(_if_then_else(True, 1, zeros_diff_rows), 4)), le(max_col_clue, _if_then_else(False, ones_diff_cols, max_col_clue)))
le(_if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, 4)), _if_then_else(or_(False, False), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(False, _if_then_else(False, 4, zeros_diff_rows), max_col_clue)))
le(_if_then_else(False, _if_then_else(True, 2, _if_then_else(False, 0, 3)), _if_then_else(False, 3, 4)), _if_then_else(or_(False, True), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, 0, 3)))
VAL TREES:
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))))
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))))


INFO:root:hof: COND TREES:
ge(_if_then_else(or_(le(ones_diff_cols, 3), ge(max_col_clue, compare_blocks_cols)), _if_then_else(ge(compare_blocks_cols, 4), _if_then_else(True, max_col_clue, 1), _if_then_else(True, ones_diff_cols, 2)), _if_then_else(le(zeros_diff_rows, 3), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, 3, compare_blocks_rows))), _if_then_else(ge(_if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(False, ones_diff_cols, zeros_diff_cols)), _if_then_else(le(1, max_col_clue), _if_then_else(False, 1, 3), _if_then_else(True, max_col_clue, compare_blocks_rows)), _if_then_else(le(compare_blocks_rows, 4), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(False, 0, max_col_clue))))
le(_if_then_else(le(compare_blocks_rows, ones_diff_rows), _if_then_else(and_(le(zeros_diff_rows, 0), True), zeros_diff_cols, 1), _if_then_else(True, zeros_diff_rows, _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(False, 2, _if_then_else(or_(True, True), compare_blocks_cols, ones_diff_rows)), _if_then_else(True, 2, max_row_clue)))
ge(_if_then_else(and_(le(_if_then_else(False, ones_diff_cols, 4), _if_then_else(False, zeros_diff_rows, compare_blocks_cols)), or_(and_(True, False), ge(2, compare_blocks_cols))), _if_then_else(ge(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, max_col_clue, compare_blocks_cols)), _if_then_else(ge(0, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 0), _if_then_else(False, 2, zeros_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, 2, max_row_clue))), _if_then_else(and_(ge(compare_blocks_cols, max_row_clue), and_(True, False)), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(True, max_col_clue, ones_diff_cols), _if_then_else(False, zeros_diff_rows, ones_diff_rows)), _if_then_else(and_(True, False), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(True, 2, max_col_clue)))), _if_then_else(ge(_if_then_else(and_(False, False), _if_then_else(True, 1, 2), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(ge(zeros_diff_rows, compare_blocks_cols), _if_then_else(False, 0, ones_diff_cols), _if_then_else(False, 2, zeros_diff_rows))), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), _if_then_else(le(compare_blocks_rows, max_col_clue), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(True, 3, compare_blocks_rows), _if_then_else(True, 4, 1))), _if_then_else(or_(or_(True, True), le(3, zeros_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, compare_blocks_cols, 0), _if_then_else(True, ones_diff_cols, 3)), _if_then_else(le(zeros_diff_cols, 0), _if_then_else(True, 0, ones_diff_rows), _if_then_else(False, max_row_clue, max_row_clue)))))
ge(_if_then_else(ge(4, compare_blocks_cols), _if_then_else(True, compare_blocks_cols, 2), _if_then_else(True, max_row_clue, 4)), _if_then_else(or_(False, True), _if_then_else(False, zeros_diff_rows, max_row_clue), _if_then_else(False, 4, compare_blocks_cols)))
le(_if_then_else(and_(le(_if_then_else(True, 3, compare_blocks_rows), _if_then_else(False, 3, zeros_diff_cols)), le(_if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(True, ones_diff_rows, 1))), _if_then_else(ge(_if_then_else(False, ones_diff_cols, max_row_clue), _if_then_else(True, ones_diff_rows, compare_blocks_cols)), _if_then_else(le(max_row_clue, ones_diff_cols), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(True, max_row_clue, 1)), _if_then_else(or_(False, True), _if_then_else(False, max_col_clue, zeros_diff_cols), _if_then_else(True, 1, 3))), _if_then_else(ge(_if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 1, compare_blocks_rows)), _if_then_else(and_(False, False), _if_then_else(True, 3, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_cols)), _if_then_else(ge(ones_diff_rows, 3), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 2, max_col_clue)))), _if_then_else(le(_if_then_else(ge(ones_diff_rows, ones_diff_rows), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, 1, max_col_clue)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, max_row_clue), _if_then_else(True, zeros_diff_cols, 0))), _if_then_else(le(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, 2, 1)), _if_then_else(or_(False, False), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(True, 2, 3)), _if_then_else(and_(False, False), _if_then_else(False, 3, ones_diff_cols), _if_then_else(True, compare_blocks_rows, max_col_clue))), _if_then_else(and_(le(1, 4), or_(False, False)), _if_then_else(or_(False, True), _if_then_else(True, max_row_clue, 3), _if_then_else(False, ones_diff_cols, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(False, max_col_clue, 1)))))
le(_if_then_else(or_(False, True), _if_then_else(False, max_row_clue, max_row_clue), _if_then_else(True, 3, 0)), _if_then_else(or_(False, True), _if_then_else(or_(True, False), 3, 1), _if_then_else(False, _if_then_else(True, zeros_diff_rows, compare_blocks_rows), ones_diff_rows)))
ge(_if_then_else(ge(zeros_diff_rows, max_col_clue), _if_then_else(and_(False, and_(False, True)), _if_then_else(False, max_row_clue, 1), compare_blocks_rows), _if_then_else(False, max_row_clue, zeros_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)))
le(_if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, _if_then_else(True, compare_blocks_rows, zeros_diff_rows)), _if_then_else(True, 3, 1)), _if_then_else(or_(True, False), _if_then_else(True, compare_blocks_rows, 1), _if_then_else(True, ones_diff_cols, _if_then_else(True, 3, max_row_clue))))
VAL TREES:
mul(add(mul(ones_diff_cols, zeros_diff_rows), add(ones_diff_rows, compare_blocks_cols)), add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(zeros_diff_cols, zeros_diff_rows), add(add(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_rows))))
add(mul(mul(zeros_diff_cols, mul(compare_blocks_rows, compare_blocks_cols)), mul(zeros_diff_rows, compare_blocks_cols)), add(mul(add(ones_diff_cols, ones_diff_cols), zeros_diff_cols), add(mul(compare_blocks_cols, ones_diff_cols), zeros_diff_rows)))
mul(mul(mul(add(add(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols))), mul(mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)))), mul(add(mul(mul(zeros_diff_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_cols)), add(mul(zeros_diff_cols, zeros_diff_rows), mul(compare_blocks_rows, ones_diff_cols))), mul(mul(add(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, zeros_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(ones_diff_cols, ones_diff_rows)))))
mul(add(add(compare_blocks_cols, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)))
mul(mul(mul(compare_blocks_cols, zeros_diff_cols), add(add(zeros_diff_cols, ones_diff_rows), zeros_diff_cols)), mul(mul(ones_diff_rows, compare_blocks_rows), mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, mul(ones_diff_rows, ones_diff_rows)))))
mul(add(mul(ones_diff_cols, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(compare_blocks_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_rows)))
add(mul(mul(add(ones_diff_rows, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_rows), add(zeros_diff_rows, ones_diff_cols))), add(mul(add(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, ones_diff_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_rows)), add(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))


INFO:root:stats: {'fitness': <deap.tools.support.Statistics object at 0x00000180FF715AC8>, 'size': <deap.tools.support.Statistics object at 0x00000180FF715A58>}

