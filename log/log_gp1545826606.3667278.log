INFO:root:

*******STARTING!!!******


INFO:root:

*******Configuration******


INFO:root:import time


INFO:root:# NUM_ROWS = 20


INFO:root:NUM_ROWS = 5


INFO:root:# NUM_COLS = 20


INFO:root:NUM_COLS = 5


INFO:root:empty_in_split = '\xa0'


INFO:root:pickle_unsolved_file_path = 'data/%dx%d_nonograms.pkl' % (NUM_ROWS, NUM_COLS)


INFO:root:pickle_solved_file_path = 'data/%dx%d_nonograms_solved.pkl' % (NUM_ROWS, NUM_COLS)


INFO:root:pickle_row_options_path = 'data/%dx%d_row_options.pkl' % (NUM_ROWS, NUM_ROWS)


INFO:root:fitness_plot_path = 'plots/fitness' + str(time.time()) + '.pkl'


INFO:root:nums_plot_path = 'plots/nums' + str(time.time()) + '.pkl'


INFO:root:


INFO:root:convert_to_sat = True


INFO:root:should_run_in_parallel = True


INFO:root:print_individual_fitness = False


INFO:root:


INFO:root:NUM_COND_TREES = 5


INFO:root:NUM_VAL_TREES = NUM_COND_TREES + 1


INFO:root:prob_crossover_global = 0.8  # global probability for cx


INFO:root:prob_crossover_individual_cond = 0.7  # probability to cx a specific cond tree in an individual


INFO:root:prob_crossover_individual_val = 0.7  # probability to cx a specific cond tree in an individual


INFO:root:prob_mutate_global = 0.2


INFO:root:prob_mutate_individual_cond = 1


INFO:root:prob_mutate_individual_val = 1


INFO:root:


INFO:root:points_correct_box = 5


INFO:root:points_incorrect_box = 0


INFO:root:# points_incorrect_box = -2


INFO:root:pop_size = 30


INFO:root:hof_size = 1


INFO:root:# num_gen = 40


INFO:root:num_gen = 4


INFO:root:train_size = 3


INFO:root:

*******DONE!!!******


INFO:root:run time: 508 sec

INFO:root:max possible fitness for the nonograms ran: %d

INFO:root:log:    	      	                                    fitness                                    
   	      	-------------------------------------------------------------------------------
gen	nevals	avg    	max 	median	min	most common	num max	num min	size	std    
0  	30    	342    	342 	342   	342	342        	30     	30     	30  	0      
1  	26    	758.733	1000	1000  	342	1000       	19     	11     	30  	317.087
2  	26    	539.4  	1000	342   	342	1000       	9      	21     	30  	301.533
3  	26    	363.933	1000	342   	342	1000       	1      	29     	30  	118.115
4  	28    	407.8  	1000	342   	342	1000       	3      	27     	30  	197.4  

INFO:root:pop: COND TREES:
and_(and_(or_(False, ge(_if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, ones_diff_cols, 65))), ge(_if_then_else(and_(False, True), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), compare_blocks_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(ge(max_col_clue, 17), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, zeros_diff_rows, zeros_diff_cols)))), le(_if_then_else(and_(le(compare_blocks_cols, compare_blocks_cols), or_(False, True)), _if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, ones_diff_cols))), _if_then_else(and_(and_(False, False), le(max_row_clue, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(True, 81, zeros_diff_rows)))))
or_(or_(True, True), or_(False, True))
le(_if_then_else(or_(True, True), compare_blocks_rows, compare_blocks_cols), _if_then_else(ge(82, compare_blocks_rows), compare_blocks_cols, max_row_clue))
le(30, _if_then_else(True, _if_then_else(False, ones_diff_rows, _if_then_else(False, compare_blocks_rows, 57)), _if_then_else(False, ones_diff_rows, ones_diff_cols)))
le(_if_then_else(or_(or_(ge(zeros_diff_cols, zeros_diff_rows), ge(zeros_diff_cols, compare_blocks_cols)), ge(_if_then_else(True, zeros_diff_cols, ones_diff_cols), _if_then_else(True, ones_diff_rows, zeros_diff_cols))), max_col_clue, 78), _if_then_else(False, ones_diff_cols, _if_then_else(True, compare_blocks_rows, compare_blocks_cols)))
VAL TREES:
add(add(max_row_clue, zeros_diff_cols), add(max_col_clue, max_row_clue))
mul(mul(max_row_clue, compare_blocks_cols), add(ones_diff_cols, 53))
mul(mul(46, ones_diff_cols), add(compare_blocks_cols, 82))
mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows))
add(add(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows))
add(add(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, max_row_clue))
COND TREES:
and_(and_(or_(and_(ge(compare_blocks_rows, ones_diff_cols), and_(False, False)), ge(_if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, ones_diff_cols, 65))), ge(_if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(ge(max_col_clue, 17), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, zeros_diff_rows, zeros_diff_cols)))), le(_if_then_else(and_(False, or_(False, False)), _if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, ones_diff_cols))), _if_then_else(and_(and_(False, False), le(max_row_clue, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(True, 81, zeros_diff_rows)))))
or_(or_(or_(False, True), True), le(ones_diff_cols, compare_blocks_cols))
le(_if_then_else(False, compare_blocks_rows, _if_then_else(False, _if_then_else(True, compare_blocks_rows, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols))), _if_then_else(True, zeros_diff_cols, max_row_clue))
le(_if_then_else(ge(zeros_diff_cols, 79), max_row_clue, ones_diff_rows), _if_then_else(True, _if_then_else(False, ones_diff_rows, _if_then_else(False, compare_blocks_rows, 57)), _if_then_else(or_(False, True), ones_diff_rows, ones_diff_cols)))
le(_if_then_else(False, max_col_clue, 78), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_cols, max_row_clue), max_row_clue), _if_then_else(and_(True, False), compare_blocks_rows, compare_blocks_cols)))
VAL TREES:
add(add(max_row_clue, zeros_diff_cols), add(max_col_clue, max_row_clue))
mul(mul(max_row_clue, compare_blocks_cols), add(ones_diff_cols, 53))
mul(mul(46, ones_diff_cols), add(compare_blocks_cols, 82))
mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows))
add(add(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows))
add(add(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, max_row_clue))
COND TREES:
and_(and_(or_(and_(ge(compare_blocks_rows, ones_diff_cols), and_(False, False)), ge(_if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, ones_diff_cols, 65))), ge(_if_then_else(and_(False, True), _if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(ge(max_col_clue, 17), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, zeros_diff_rows, zeros_diff_cols)))), le(_if_then_else(and_(le(compare_blocks_cols, compare_blocks_cols), or_(False, True)), _if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, ones_diff_cols))), _if_then_else(and_(and_(False, False), le(max_row_clue, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(True, 81, zeros_diff_rows)))))
or_(le(_if_then_else(True, zeros_diff_cols, compare_blocks_cols), compare_blocks_cols), le(ones_diff_cols, compare_blocks_cols))
le(_if_then_else(False, compare_blocks_rows, ones_diff_rows), max_row_clue)
le(_if_then_else(le(ones_diff_rows, _if_then_else(False, 86, max_row_clue)), ones_diff_cols, ones_diff_rows), _if_then_else(True, _if_then_else(False, ones_diff_rows, _if_then_else(False, compare_blocks_rows, 57)), _if_then_else(or_(False, True), ones_diff_rows, ones_diff_cols)))
le(max_col_clue, _if_then_else(False, _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols)))
VAL TREES:
add(add(max_row_clue, zeros_diff_cols), add(max_col_clue, max_row_clue))
mul(mul(max_row_clue, compare_blocks_cols), add(ones_diff_cols, 53))
mul(mul(46, ones_diff_cols), add(compare_blocks_cols, 82))
mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows))
add(add(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows))
add(add(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, max_row_clue))
COND TREES:
and_(and_(or_(and_(ge(compare_blocks_rows, ones_diff_cols), and_(False, True)), ge(_if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, ones_diff_cols, 65))), ge(_if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(ge(max_col_clue, 17), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, zeros_diff_rows, zeros_diff_cols)))), le(_if_then_else(and_(le(compare_blocks_cols, compare_blocks_cols), or_(False, True)), _if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, ones_diff_cols))), _if_then_else(and_(and_(False, False), le(max_row_clue, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, 81, zeros_diff_rows)))))
or_(or_(True, True), True)
le(_if_then_else(le(zeros_diff_rows, ones_diff_rows), compare_blocks_rows, compare_blocks_cols), _if_then_else(True, compare_blocks_cols, _if_then_else(False, zeros_diff_cols, max_row_clue)))
le(_if_then_else(False, max_row_clue, ones_diff_rows), _if_then_else(and_(le(zeros_diff_rows, compare_blocks_rows), and_(True, True)), ones_diff_cols, compare_blocks_cols))
le(_if_then_else(False, max_col_clue, 78), _if_then_else(False, _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)))
VAL TREES:
add(add(max_row_clue, zeros_diff_cols), add(max_col_clue, max_row_clue))
mul(mul(max_row_clue, compare_blocks_cols), add(ones_diff_cols, 53))
mul(mul(46, ones_diff_cols), add(compare_blocks_cols, 82))
mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows))
add(add(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows))
add(add(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, max_row_clue))
COND TREES:
or_(ge(_if_then_else(or_(False, True), _if_then_else(False, compare_blocks_cols, max_col_clue), _if_then_else(True, 76, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, 17, ones_diff_rows), _if_then_else(False, compare_blocks_cols, max_row_clue))), le(_if_then_else(and_(False, False), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, ones_diff_cols))))
le(_if_then_else(le(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(or_(True, True), compare_blocks_rows, compare_blocks_rows)), _if_then_else(ge(47, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows), _if_then_else(True, max_row_clue, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(True, ones_diff_cols, ones_diff_cols))), _if_then_else(or_(le(46, max_col_clue), or_(True, False)), _if_then_else(le(max_row_clue, ones_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, max_col_clue, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, 52, 30))))
and_(le(zeros_diff_cols, compare_blocks_cols), ge(82, compare_blocks_rows))
le(_if_then_else(le(ones_diff_rows, _if_then_else(False, 86, max_row_clue)), max_row_clue, ones_diff_rows), _if_then_else(or_(False, True), zeros_diff_rows, ones_diff_cols))
ge(_if_then_else(or_(True, True), max_row_clue, _if_then_else(False, 54, ones_diff_cols)), _if_then_else(True, _if_then_else(False, _if_then_else(False, _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), max_row_clue), _if_then_else(False, _if_then_else(False, _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), ones_diff_cols)))
VAL TREES:
mul(add(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, max_col_clue)), add(add(max_row_clue, ones_diff_rows), mul(97, ones_diff_cols)))
mul(add(ones_diff_rows, zeros_diff_rows), add(compare_blocks_cols, add(zeros_diff_cols, ones_diff_rows)))
add(add(mul(add(max_col_clue, compare_blocks_cols), max_col_clue), zeros_diff_rows), add(zeros_diff_rows, max_col_clue))
add(mul(zeros_diff_cols, max_col_clue), add(ones_diff_rows, ones_diff_rows))
add(add(mul(add(add(zeros_diff_cols, max_col_clue), mul(max_col_clue, compare_blocks_rows)), add(mul(max_row_clue, ones_diff_cols), add(zeros_diff_cols, 16))), add(add(add(ones_diff_cols, max_row_clue), mul(28, max_col_clue)), add(mul(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)))), add(mul(add(add(compare_blocks_cols, max_row_clue), mul(ones_diff_cols, zeros_diff_rows)), add(mul(compare_blocks_cols, max_col_clue), mul(compare_blocks_cols, compare_blocks_cols))), mul(mul(add(compare_blocks_cols, max_col_clue), mul(ones_diff_rows, 57)), mul(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_cols, max_col_clue)))))
add(mul(ones_diff_rows, add(max_col_clue, compare_blocks_rows)), mul(ones_diff_rows, ones_diff_rows))
COND TREES:
and_(and_(or_(and_(ge(compare_blocks_rows, ones_diff_cols), and_(False, True)), ge(_if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, ones_diff_cols, 65))), ge(_if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(ge(max_col_clue, 17), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, zeros_diff_rows, zeros_diff_cols)))), le(_if_then_else(and_(le(compare_blocks_cols, compare_blocks_cols), or_(False, True)), _if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, ones_diff_cols))), _if_then_else(and_(and_(False, False), le(max_row_clue, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, 81, zeros_diff_rows)))))
or_(or_(True, True), le(_if_then_else(True, zeros_diff_cols, compare_blocks_cols), compare_blocks_cols))
le(_if_then_else(le(zeros_diff_rows, ones_diff_rows), compare_blocks_rows, compare_blocks_cols), _if_then_else(True, compare_blocks_cols, max_row_clue))
le(_if_then_else(False, max_row_clue, ones_diff_rows), _if_then_else(and_(le(zeros_diff_rows, compare_blocks_rows), and_(True, True)), ones_diff_cols, compare_blocks_cols))
le(_if_then_else(False, max_col_clue, 78), _if_then_else(False, _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)))
VAL TREES:
add(add(max_row_clue, zeros_diff_cols), add(max_col_clue, max_row_clue))
mul(mul(max_row_clue, compare_blocks_cols), add(ones_diff_cols, 53))
mul(mul(46, ones_diff_cols), add(compare_blocks_cols, 82))
mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows))
add(add(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows))
add(add(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, max_row_clue))
COND TREES:
and_(and_(or_(and_(ge(compare_blocks_rows, ones_diff_cols), and_(False, False)), ge(_if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, ones_diff_cols, 65))), ge(_if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(ge(max_col_clue, 17), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, zeros_diff_rows, zeros_diff_cols)))), le(_if_then_else(and_(le(compare_blocks_cols, compare_blocks_cols), or_(False, True)), _if_then_else(or_(True, ge(compare_blocks_rows, ones_diff_cols)), _if_then_else(ge(zeros_diff_cols, zeros_diff_rows), ones_diff_cols, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, ones_diff_cols))), _if_then_else(and_(and_(False, False), le(max_row_clue, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(True, 81, zeros_diff_rows)))))
or_(True, le(compare_blocks_cols, compare_blocks_cols))
le(_if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, max_row_clue))
le(_if_then_else(le(ones_diff_rows, _if_then_else(False, 86, max_row_clue)), ones_diff_cols, ones_diff_rows), _if_then_else(False, _if_then_else(False, ones_diff_rows, _if_then_else(False, compare_blocks_rows, 57)), _if_then_else(or_(False, False), ones_diff_rows, ones_diff_cols)))
le(_if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_cols, 78), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)))
VAL TREES:
add(add(max_row_clue, zeros_diff_cols), add(max_col_clue, max_row_clue))
mul(mul(max_row_clue, compare_blocks_cols), add(ones_diff_cols, 53))
mul(mul(46, ones_diff_cols), add(compare_blocks_cols, 82))
mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows))
add(add(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows))
add(add(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, max_row_clue))
COND TREES:
and_(and_(or_(and_(ge(compare_blocks_rows, ones_diff_cols), and_(False, False)), ge(_if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, ones_diff_cols, 65))), ge(_if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(ge(max_col_clue, 17), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, zeros_diff_rows, zeros_diff_cols)))), le(_if_then_else(and_(False, or_(False, False)), _if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(True, _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, ones_diff_cols))), _if_then_else(and_(and_(False, False), le(max_row_clue, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(True, 81, zeros_diff_rows)))))
or_(or_(True, or_(False, True)), le(ones_diff_cols, compare_blocks_cols))
le(_if_then_else(False, compare_blocks_rows, _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols))), _if_then_else(True, zeros_diff_cols, max_row_clue))
le(_if_then_else(ge(zeros_diff_cols, 79), max_row_clue, ones_diff_rows), _if_then_else(True, _if_then_else(False, ones_diff_rows, _if_then_else(False, compare_blocks_rows, 57)), _if_then_else(or_(True, True), ones_diff_rows, ones_diff_cols)))
le(_if_then_else(False, max_col_clue, max_row_clue), _if_then_else(False, _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(and_(True, False), compare_blocks_rows, compare_blocks_cols)))
VAL TREES:
add(add(max_row_clue, zeros_diff_cols), add(max_col_clue, max_row_clue))
mul(mul(max_row_clue, compare_blocks_cols), add(ones_diff_cols, 53))
mul(mul(46, ones_diff_cols), add(compare_blocks_cols, 82))
mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows))
add(add(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows))
add(add(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, max_row_clue))
COND TREES:
or_(ge(_if_then_else(le(compare_blocks_cols, _if_then_else(ge(_if_then_else(False, ones_diff_cols, max_row_clue), compare_blocks_rows), _if_then_else(False, compare_blocks_rows, _if_then_else(True, zeros_diff_rows, compare_blocks_rows)), _if_then_else(False, max_col_clue, 67))), _if_then_else(False, compare_blocks_cols, max_col_clue), _if_then_else(True, 76, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, 17, ones_diff_rows), _if_then_else(False, compare_blocks_cols, max_row_clue))), le(_if_then_else(and_(False, False), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, ones_diff_cols))))
le(_if_then_else(le(_if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)), _if_then_else(ge(47, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows), _if_then_else(True, max_row_clue, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(True, ones_diff_cols, ones_diff_cols))), _if_then_else(or_(le(46, max_col_clue), le(ones_diff_cols, compare_blocks_cols)), _if_then_else(le(max_row_clue, ones_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, max_col_clue, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, 52, 30))))
and_(False, ge(82, compare_blocks_cols))
le(_if_then_else(False, max_row_clue, ones_diff_rows), ones_diff_rows)
ge(_if_then_else(or_(True, True), max_row_clue, _if_then_else(False, 54, ones_diff_cols)), _if_then_else(True, _if_then_else(False, _if_then_else(False, _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), max_row_clue), _if_then_else(False, zeros_diff_cols, _if_then_else(False, max_col_clue, 78))))
VAL TREES:
mul(add(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, max_col_clue)), add(add(max_row_clue, ones_diff_rows), mul(97, ones_diff_cols)))
mul(add(ones_diff_rows, zeros_diff_rows), add(compare_blocks_cols, add(zeros_diff_cols, ones_diff_rows)))
add(add(mul(add(max_col_clue, compare_blocks_cols), max_col_clue), zeros_diff_rows), add(zeros_diff_rows, max_col_clue))
add(mul(zeros_diff_cols, max_col_clue), add(ones_diff_rows, ones_diff_rows))
add(add(mul(add(add(zeros_diff_cols, max_col_clue), mul(max_col_clue, compare_blocks_rows)), add(mul(max_row_clue, ones_diff_cols), add(zeros_diff_cols, 16))), add(add(add(ones_diff_cols, max_row_clue), mul(28, max_col_clue)), add(mul(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)))), add(mul(add(add(compare_blocks_cols, max_row_clue), mul(ones_diff_cols, zeros_diff_rows)), add(mul(compare_blocks_cols, max_col_clue), mul(compare_blocks_cols, compare_blocks_cols))), mul(mul(add(compare_blocks_cols, max_col_clue), mul(ones_diff_rows, 57)), mul(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_cols, max_col_clue)))))
add(mul(ones_diff_rows, add(max_col_clue, compare_blocks_rows)), mul(ones_diff_rows, ones_diff_rows))
COND TREES:
and_(and_(or_(and_(ge(compare_blocks_rows, ones_diff_cols), and_(False, False)), ge(_if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, ones_diff_cols, 65))), ge(_if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(ge(max_col_clue, 17), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, zeros_diff_rows, zeros_diff_cols)))), le(_if_then_else(and_(le(compare_blocks_cols, compare_blocks_cols), or_(False, and_(False, True))), _if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, ones_diff_cols))), _if_then_else(and_(and_(False, False), le(max_row_clue, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows, _if_then_else(True, 81, zeros_diff_rows)))))
or_(or_(True, or_(True, False)), le(ones_diff_cols, compare_blocks_cols))
le(_if_then_else(le(zeros_diff_cols, ones_diff_cols), compare_blocks_rows, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, max_row_clue))
le(_if_then_else(le(_if_then_else(or_(False, True), zeros_diff_rows, ones_diff_cols), _if_then_else(False, 86, max_row_clue)), max_row_clue, ones_diff_rows), _if_then_else(True, _if_then_else(False, ones_diff_rows, _if_then_else(False, compare_blocks_rows, 57)), _if_then_else(or_(False, True), ones_diff_rows, ones_diff_cols)))
le(ones_diff_cols, _if_then_else(False, _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)))
VAL TREES:
add(add(max_row_clue, zeros_diff_cols), add(max_col_clue, max_row_clue))
mul(mul(max_row_clue, compare_blocks_cols), add(ones_diff_cols, 53))
mul(mul(46, ones_diff_cols), add(compare_blocks_cols, 82))
mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows))
add(add(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows))
add(add(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, max_row_clue))
COND TREES:
and_(and_(or_(and_(ge(compare_blocks_rows, ones_diff_cols), and_(False, False)), ge(_if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, ones_diff_cols, 65))), ge(_if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(ge(max_col_clue, 17), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, zeros_diff_rows, _if_then_else(or_(ge(_if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)), le(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, ones_diff_cols, max_col_clue))), _if_then_else(le(_if_then_else(True, 62, 72), _if_then_else(False, 33, compare_blocks_cols)), _if_then_else(and_(False, True), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(False, ones_diff_rows, max_col_clue)), _if_then_else(and_(True, True), _if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(False, 84, ones_diff_cols))), _if_then_else(and_(ge(ones_diff_rows, max_col_clue), and_(True, True)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, compare_blocks_cols), _if_then_else(True, ones_diff_cols, ones_diff_rows)), _if_then_else(ge(ones_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_cols, compare_blocks_cols), _if_then_else(False, max_col_clue, zeros_diff_rows)))))))), le(_if_then_else(and_(le(compare_blocks_cols, compare_blocks_cols), or_(False, True)), _if_then_else(or_(True, ge(compare_blocks_rows, ones_diff_cols)), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, ones_diff_cols))), _if_then_else(and_(and_(False, False), le(max_row_clue, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(True, 81, zeros_diff_rows)))))
or_(or_(False, True), le(_if_then_else(le(max_row_clue, zeros_diff_cols), _if_then_else(False, _if_then_else(False, ones_diff_rows, _if_then_else(True, compare_blocks_rows, max_row_clue)), compare_blocks_rows), _if_then_else(ge(compare_blocks_rows, compare_blocks_cols), _if_then_else(True, _if_then_else(False, _if_then_else(True, ones_diff_rows, max_row_clue), ones_diff_cols), _if_then_else(le(compare_blocks_cols, 21), zeros_diff_cols, compare_blocks_cols)), ones_diff_cols)), compare_blocks_cols))
le(_if_then_else(or_(le(_if_then_else(and_(True, and_(False, True)), _if_then_else(True, _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(True, ones_diff_cols, max_col_clue)), ones_diff_cols), _if_then_else(and_(le(ones_diff_rows, compare_blocks_cols), False), _if_then_else(False, _if_then_else(False, zeros_diff_rows, ones_diff_rows), ones_diff_rows), max_row_clue)), ge(compare_blocks_rows, zeros_diff_cols)), compare_blocks_rows, compare_blocks_cols), _if_then_else(and_(True, True), zeros_diff_cols, max_row_clue))
le(_if_then_else(le(ones_diff_rows, _if_then_else(False, 86, max_row_clue)), ones_diff_cols, ones_diff_rows), _if_then_else(True, _if_then_else(False, ones_diff_rows, _if_then_else(False, compare_blocks_rows, 57)), _if_then_else(le(max_col_clue, max_col_clue), _if_then_else(le(_if_then_else(or_(False, True), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), max_row_clue), compare_blocks_cols), compare_blocks_rows, _if_then_else(False, compare_blocks_cols, _if_then_else(True, max_row_clue, _if_then_else(True, compare_blocks_rows, zeros_diff_rows)))), _if_then_else(and_(False, le(zeros_diff_cols, _if_then_else(False, ones_diff_cols, ones_diff_cols))), 64, max_row_clue))))
le(_if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(ge(_if_then_else(and_(False, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(True, max_col_clue, 36))), _if_then_else(le(_if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_rows)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, 12, 24), _if_then_else(False, 93, ones_diff_cols))), _if_then_else(and_(or_(False, True), and_(False, True)), _if_then_else(or_(False, True), _if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(False, 40, 20)), _if_then_else(le(max_col_clue, ones_diff_rows), _if_then_else(False, 48, compare_blocks_rows), _if_then_else(True, ones_diff_cols, compare_blocks_rows)))))
VAL TREES:
add(add(max_row_clue, zeros_diff_cols), add(max_col_clue, max_row_clue))
mul(mul(max_row_clue, compare_blocks_cols), add(ones_diff_cols, 53))
mul(mul(46, ones_diff_cols), add(compare_blocks_cols, 82))
mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows))
add(add(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows))
add(add(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, max_row_clue))
COND TREES:
and_(and_(or_(and_(ge(compare_blocks_rows, ones_diff_cols), and_(False, False)), ge(_if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, ones_diff_cols, 65))), True), le(_if_then_else(and_(le(compare_blocks_cols, compare_blocks_cols), or_(False, True)), _if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, ones_diff_cols))), _if_then_else(and_(and_(False, False), le(max_row_clue, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(True, 81, zeros_diff_rows)))))
or_(or_(False, True), le(zeros_diff_rows, zeros_diff_rows))
le(_if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, ones_diff_cols))
le(_if_then_else(le(ones_diff_rows, _if_then_else(False, 86, zeros_diff_rows)), ones_diff_cols, ones_diff_rows), _if_then_else(True, _if_then_else(False, ones_diff_rows, _if_then_else(False, compare_blocks_rows, 57)), _if_then_else(False, ones_diff_rows, ones_diff_cols)))
le(_if_then_else(or_(True, True), compare_blocks_rows, compare_blocks_rows), 91)
VAL TREES:
add(add(max_row_clue, zeros_diff_cols), add(max_col_clue, max_row_clue))
mul(mul(max_row_clue, compare_blocks_cols), add(ones_diff_cols, 53))
mul(mul(46, ones_diff_cols), add(compare_blocks_cols, 82))
mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows))
add(add(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows))
add(add(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, max_row_clue))
COND TREES:
and_(and_(or_(and_(ge(compare_blocks_rows, ones_diff_cols), and_(False, False)), ge(_if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, ones_diff_cols, 65))), True), le(_if_then_else(and_(le(compare_blocks_cols, compare_blocks_cols), or_(False, True)), _if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, ones_diff_cols))), _if_then_else(and_(and_(False, False), le(max_row_clue, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(True, 81, zeros_diff_rows)))))
or_(or_(False, True), le(zeros_diff_rows, ones_diff_cols))
le(82, _if_then_else(and_(True, True), zeros_diff_cols, ones_diff_cols))
le(_if_then_else(le(ones_diff_rows, _if_then_else(False, 86, zeros_diff_rows)), ones_diff_cols, ones_diff_rows), _if_then_else(True, _if_then_else(False, ones_diff_rows, _if_then_else(False, compare_blocks_rows, 57)), _if_then_else(False, ones_diff_rows, ones_diff_cols)))
le(_if_then_else(or_(True, True), max_col_clue, compare_blocks_rows), compare_blocks_cols)
VAL TREES:
add(add(max_row_clue, zeros_diff_cols), add(max_col_clue, max_row_clue))
mul(mul(max_row_clue, compare_blocks_cols), add(ones_diff_cols, 53))
mul(mul(46, ones_diff_cols), add(compare_blocks_cols, 82))
mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows))
add(add(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows))
add(add(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, max_row_clue))
COND TREES:
or_(ge(_if_then_else(or_(False, True), _if_then_else(False, compare_blocks_cols, max_col_clue), _if_then_else(True, 76, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, 17, ones_diff_rows), _if_then_else(False, compare_blocks_cols, max_row_clue))), le(_if_then_else(and_(False, False), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, ones_diff_cols))))
le(_if_then_else(le(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(or_(True, True), compare_blocks_rows, compare_blocks_rows)), _if_then_else(ge(47, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows), _if_then_else(True, max_row_clue, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, ones_diff_cols))), _if_then_else(or_(le(46, max_col_clue), or_(True, False)), _if_then_else(le(max_row_clue, ones_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, max_col_clue, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, 52, 30))))
and_(le(zeros_diff_cols, compare_blocks_cols), ge(_if_then_else(False, compare_blocks_rows, compare_blocks_cols), compare_blocks_rows))
le(_if_then_else(le(ones_diff_rows, _if_then_else(False, 86, max_row_clue)), max_row_clue, ones_diff_rows), _if_then_else(or_(False, True), zeros_diff_rows, ones_diff_cols))
ge(_if_then_else(or_(True, True), max_row_clue, _if_then_else(False, 54, ones_diff_cols)), _if_then_else(True, _if_then_else(False, _if_then_else(False, _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, 91)), max_row_clue), _if_then_else(False, _if_then_else(False, _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), ones_diff_cols)))
VAL TREES:
mul(add(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, max_col_clue)), add(add(max_row_clue, ones_diff_rows), mul(97, ones_diff_cols)))
mul(add(ones_diff_rows, zeros_diff_rows), add(compare_blocks_cols, add(zeros_diff_cols, ones_diff_rows)))
add(add(mul(add(max_col_clue, compare_blocks_cols), max_col_clue), zeros_diff_rows), add(zeros_diff_rows, max_col_clue))
add(mul(zeros_diff_cols, max_col_clue), add(ones_diff_rows, ones_diff_rows))
add(add(mul(add(add(zeros_diff_cols, max_col_clue), mul(max_col_clue, compare_blocks_rows)), add(mul(max_row_clue, ones_diff_cols), add(zeros_diff_cols, 16))), add(add(add(ones_diff_cols, max_row_clue), mul(28, max_col_clue)), add(mul(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)))), add(mul(add(add(compare_blocks_cols, max_row_clue), mul(ones_diff_cols, zeros_diff_rows)), add(mul(compare_blocks_cols, max_col_clue), mul(compare_blocks_cols, compare_blocks_cols))), mul(mul(add(compare_blocks_cols, max_col_clue), mul(ones_diff_rows, 57)), mul(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_cols, max_col_clue)))))
add(mul(ones_diff_rows, add(max_col_clue, compare_blocks_rows)), mul(ones_diff_rows, ones_diff_rows))
COND TREES:
and_(and_(or_(and_(ge(compare_blocks_rows, ones_diff_cols), and_(False, False)), ge(_if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, ones_diff_cols, 65))), ge(_if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(ge(max_col_clue, 17), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, zeros_diff_rows, zeros_diff_cols)))), le(_if_then_else(True, _if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, ones_diff_cols))), _if_then_else(and_(and_(False, False), le(max_row_clue, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows, _if_then_else(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), 81, zeros_diff_rows)))))
or_(or_(True, True), le(compare_blocks_cols, _if_then_else(le(compare_blocks_cols, compare_blocks_cols), _if_then_else(and_(False, False), compare_blocks_rows, max_row_clue), _if_then_else(False, max_row_clue, zeros_diff_rows))))
le(_if_then_else(le(_if_then_else(False, 63, _if_then_else(False, _if_then_else(ge(compare_blocks_rows, zeros_diff_cols), max_row_clue, ones_diff_cols), ones_diff_rows)), _if_then_else(False, _if_then_else(True, zeros_diff_cols, zeros_diff_rows), max_col_clue)), compare_blocks_rows, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, max_row_clue))
or_(le(_if_then_else(and_(and_(False, False), ge(ones_diff_rows, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, 50, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, compare_blocks_cols)), _if_then_else(ge(compare_blocks_cols, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, zeros_diff_cols, 89))), _if_then_else(and_(and_(False, True), and_(False, True)), _if_then_else(and_(True, True), _if_then_else(True, max_row_clue, max_col_clue), _if_then_else(False, zeros_diff_rows, ones_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, ones_diff_rows)))), ge(_if_then_else(or_(ge(max_col_clue, 44), le(max_row_clue, compare_blocks_cols)), _if_then_else(le(compare_blocks_cols, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, 10, compare_blocks_rows)), _if_then_else(ge(max_col_clue, max_row_clue), _if_then_else(True, compare_blocks_rows, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, zeros_diff_cols))), _if_then_else(le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, ones_diff_cols), _if_then_else(False, compare_blocks_cols, max_col_clue)), _if_then_else(ge(16, max_col_clue), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, 20)))))
le(_if_then_else(False, max_col_clue, _if_then_else(ge(89, _if_then_else(True, max_col_clue, 23)), _if_then_else(True, ones_diff_rows, _if_then_else(True, ones_diff_rows, ones_diff_rows)), _if_then_else(True, _if_then_else(False, compare_blocks_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, ones_diff_rows)))), _if_then_else(True, _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)))
VAL TREES:
add(add(max_row_clue, zeros_diff_cols), add(max_col_clue, max_row_clue))
mul(mul(max_row_clue, compare_blocks_cols), add(ones_diff_cols, 53))
mul(mul(46, ones_diff_cols), add(compare_blocks_cols, 82))
mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows))
add(add(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows))
add(add(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, max_row_clue))
COND TREES:
and_(and_(or_(and_(ge(compare_blocks_rows, ones_diff_cols), and_(False, True)), ge(_if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, ones_diff_cols, 65))), ge(_if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(ge(max_col_clue, 17), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, zeros_diff_rows, zeros_diff_cols)))), le(_if_then_else(and_(le(compare_blocks_cols, compare_blocks_cols), or_(False, True)), _if_then_else(or_(True, False), _if_then_else(and_(le(compare_blocks_cols, compare_blocks_cols), or_(False, True)), ones_diff_cols, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, ones_diff_cols))), _if_then_else(and_(and_(False, False), le(max_row_clue, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, 81, zeros_diff_rows)))))
or_(or_(True, True), le(_if_then_else(True, zeros_diff_cols, compare_blocks_cols), ones_diff_cols))
le(_if_then_else(le(zeros_diff_rows, ones_diff_rows), compare_blocks_rows, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, max_row_clue))
le(_if_then_else(False, max_row_clue, ones_diff_rows), _if_then_else(and_(le(zeros_diff_rows, ones_diff_rows), and_(True, True)), ones_diff_cols, compare_blocks_cols))
le(_if_then_else(False, max_col_clue, 78), _if_then_else(False, _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, compare_blocks_cols)))
VAL TREES:
add(add(max_row_clue, zeros_diff_cols), add(max_col_clue, max_row_clue))
mul(mul(max_row_clue, compare_blocks_cols), add(ones_diff_cols, 53))
mul(mul(46, ones_diff_cols), add(compare_blocks_cols, 82))
mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows))
add(add(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows))
add(add(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, max_row_clue))
COND TREES:
and_(and_(or_(and_(ge(compare_blocks_rows, ones_diff_cols), and_(False, False)), ge(_if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, ones_diff_cols, 65))), ge(_if_then_else(and_(False, True), _if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(ge(max_col_clue, 17), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, zeros_diff_rows, zeros_diff_cols)))), le(_if_then_else(and_(le(compare_blocks_cols, compare_blocks_cols), or_(False, True)), _if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, ones_diff_cols))), _if_then_else(and_(and_(False, False), le(max_row_clue, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(True, 81, zeros_diff_rows)))))
or_(True, le(ones_diff_cols, compare_blocks_cols))
le(_if_then_else(False, compare_blocks_rows, ones_diff_rows), _if_then_else(False, zeros_diff_cols, max_row_clue))
le(_if_then_else(le(ones_diff_rows, _if_then_else(False, 86, max_row_clue)), ones_diff_rows, ones_diff_rows), _if_then_else(True, _if_then_else(False, ones_diff_rows, _if_then_else(False, compare_blocks_rows, 57)), _if_then_else(or_(False, True), ones_diff_rows, ones_diff_cols)))
le(max_col_clue, _if_then_else(False, _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)))
VAL TREES:
add(add(max_row_clue, zeros_diff_cols), add(max_col_clue, max_row_clue))
mul(mul(max_row_clue, compare_blocks_cols), add(ones_diff_cols, 53))
mul(mul(46, ones_diff_cols), add(compare_blocks_cols, 82))
mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows))
add(add(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows))
add(add(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, max_row_clue))
COND TREES:
and_(and_(or_(and_(ge(compare_blocks_rows, ones_diff_cols), and_(False, False)), ge(_if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, ones_diff_cols, 65))), True), le(_if_then_else(and_(le(compare_blocks_cols, compare_blocks_cols), or_(False, True)), _if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, ones_diff_cols))), _if_then_else(and_(and_(False, False), le(max_row_clue, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(True, 81, zeros_diff_rows)))))
or_(or_(False, True), le(zeros_diff_rows, zeros_diff_rows))
le(_if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(and_(True, True), zeros_diff_cols, ones_diff_cols))
le(_if_then_else(le(ones_diff_rows, _if_then_else(False, 86, zeros_diff_rows)), ones_diff_cols, ones_diff_rows), _if_then_else(True, _if_then_else(False, ones_diff_cols, _if_then_else(False, compare_blocks_rows, 57)), _if_then_else(False, ones_diff_rows, ones_diff_cols)))
le(_if_then_else(or_(True, True), max_col_clue, compare_blocks_rows), 91)
VAL TREES:
add(add(max_row_clue, zeros_diff_cols), add(max_col_clue, max_row_clue))
mul(mul(max_row_clue, compare_blocks_cols), add(ones_diff_cols, 53))
mul(mul(46, ones_diff_cols), add(compare_blocks_cols, 82))
mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows))
add(add(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows))
add(add(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, max_row_clue))
COND TREES:
and_(and_(or_(and_(le(_if_then_else(True, zeros_diff_cols, _if_then_else(False, zeros_diff_rows, _if_then_else(True, compare_blocks_rows, ones_diff_cols))), _if_then_else(False, _if_then_else(and_(False, False), ones_diff_rows, _if_then_else(False, 60, max_col_clue)), zeros_diff_cols)), and_(False, False)), ge(_if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, ones_diff_cols, 65))), True), le(_if_then_else(and_(le(compare_blocks_cols, compare_blocks_cols), or_(False, True)), _if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, ones_diff_cols))), _if_then_else(and_(and_(False, False), le(max_row_clue, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(True, 81, zeros_diff_rows)))))
and_(and_(or_(False, True), le(ones_diff_rows, max_row_clue)), ge(_if_then_else(True, max_row_clue, max_col_clue), _if_then_else(False, 94, 36)))
le(_if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(and_(le(_if_then_else(True, max_row_clue, 27), _if_then_else(False, max_col_clue, 82)), True), zeros_diff_cols, ones_diff_cols))
le(_if_then_else(le(ones_diff_rows, _if_then_else(False, 86, zeros_diff_rows)), ones_diff_cols, ones_diff_rows), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), _if_then_else(True, ones_diff_rows, _if_then_else(or_(False, False), _if_then_else(True, max_col_clue, max_row_clue), max_col_clue))), ones_diff_rows, _if_then_else(False, ones_diff_rows, ones_diff_cols)))
and_(and_(ge(_if_then_else(True, 26, compare_blocks_cols), _if_then_else(True, compare_blocks_cols, max_col_clue)), le(_if_then_else(False, ones_diff_rows, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, 53))), or_(ge(_if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(False, ones_diff_rows, zeros_diff_rows)), ge(_if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(False, compare_blocks_cols, 31))))
VAL TREES:
add(add(max_row_clue, zeros_diff_cols), add(max_col_clue, max_row_clue))
mul(mul(max_row_clue, compare_blocks_cols), add(ones_diff_cols, 53))
mul(mul(46, ones_diff_cols), add(compare_blocks_cols, 82))
mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows))
add(add(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows))
add(add(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, max_row_clue))
COND TREES:
and_(and_(or_(and_(ge(compare_blocks_rows, ones_diff_cols), and_(False, False)), ge(_if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, ones_diff_cols, 65))), ge(_if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(ge(max_col_clue, 17), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, zeros_diff_rows, zeros_diff_cols)))), le(_if_then_else(and_(le(compare_blocks_cols, compare_blocks_cols), or_(False, True)), _if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, ones_diff_cols))), _if_then_else(and_(and_(False, False), le(max_row_clue, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(True, 81, zeros_diff_rows)))))
or_(True, le(ones_diff_cols, zeros_diff_rows))
le(_if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(True, zeros_diff_cols, max_row_clue))
le(_if_then_else(False, max_row_clue, ones_diff_rows), _if_then_else(True, _if_then_else(False, ones_diff_rows, _if_then_else(False, compare_blocks_rows, 57)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_rows, _if_then_else(False, compare_blocks_rows, 57)), ones_diff_cols)))
le(_if_then_else(True, max_col_clue, 78), zeros_diff_cols)
VAL TREES:
add(add(max_row_clue, zeros_diff_cols), add(max_col_clue, max_row_clue))
mul(mul(max_row_clue, compare_blocks_cols), add(ones_diff_cols, 53))
mul(mul(46, ones_diff_cols), add(compare_blocks_cols, 82))
mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows))
add(add(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows))
add(add(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, max_row_clue))
COND TREES:
and_(and_(or_(False, ge(_if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, ones_diff_cols, 65))), ge(_if_then_else(and_(False, True), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), compare_blocks_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(ge(max_col_clue, 17), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, zeros_diff_rows, zeros_diff_cols)))), le(_if_then_else(and_(le(compare_blocks_cols, compare_blocks_cols), or_(False, True)), _if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, ones_diff_cols))), _if_then_else(and_(and_(False, False), le(max_row_clue, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(True, 81, zeros_diff_rows)))))
or_(le(zeros_diff_rows, zeros_diff_rows), or_(False, or_(False, True)))
le(_if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(ge(82, compare_blocks_rows), compare_blocks_cols, max_row_clue))
le(30, _if_then_else(True, _if_then_else(False, ones_diff_rows, _if_then_else(False, compare_blocks_rows, 57)), _if_then_else(False, ones_diff_rows, ones_diff_cols)))
le(_if_then_else(or_(or_(ge(zeros_diff_cols, zeros_diff_rows), ge(zeros_diff_cols, compare_blocks_cols)), ge(_if_then_else(True, zeros_diff_cols, ones_diff_cols), _if_then_else(True, ones_diff_rows, compare_blocks_rows))), max_col_clue, 78), _if_then_else(False, _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)))
VAL TREES:
add(add(max_row_clue, zeros_diff_cols), add(max_col_clue, max_row_clue))
mul(mul(max_row_clue, compare_blocks_cols), add(ones_diff_cols, 53))
mul(mul(46, ones_diff_cols), add(compare_blocks_cols, 82))
mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows))
add(add(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows))
add(add(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, max_row_clue))
COND TREES:
and_(and_(or_(and_(ge(compare_blocks_rows, ones_diff_cols), and_(False, False)), ge(_if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, ones_diff_cols, 65))), True), le(_if_then_else(and_(le(compare_blocks_cols, compare_blocks_cols), or_(False, True)), _if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, ones_diff_cols))), _if_then_else(and_(and_(False, False), le(max_row_clue, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(True, 81, zeros_diff_rows)))))
or_(or_(False, True), or_(True, True))
le(_if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(and_(False, True), zeros_diff_cols, ones_diff_cols))
le(_if_then_else(le(ones_diff_rows, _if_then_else(False, 86, zeros_diff_rows)), ones_diff_cols, ones_diff_rows), _if_then_else(True, _if_then_else(False, ones_diff_rows, _if_then_else(False, compare_blocks_rows, 57)), _if_then_else(False, ones_diff_rows, ones_diff_cols)))
le(_if_then_else(or_(True, True), max_col_clue, zeros_diff_cols), 91)
VAL TREES:
add(add(max_row_clue, zeros_diff_cols), add(max_col_clue, max_row_clue))
mul(mul(max_row_clue, compare_blocks_cols), add(ones_diff_cols, 53))
mul(mul(46, ones_diff_cols), add(compare_blocks_cols, 82))
mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows))
add(add(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows))
add(add(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, max_row_clue))
COND TREES:
and_(and_(or_(False, ge(_if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, ones_diff_cols, 65))), ge(_if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(ge(max_col_clue, 17), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, zeros_diff_rows, zeros_diff_cols)))), le(_if_then_else(and_(and_(False, False), ge(ones_diff_cols, max_col_clue)), _if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, ones_diff_cols))), _if_then_else(and_(and_(False, False), le(max_row_clue, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(True, 81, zeros_diff_rows)))))
or_(or_(or_(ge(_if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, 34, _if_then_else(False, ones_diff_rows, compare_blocks_cols))), ge(_if_then_else(True, _if_then_else(False, 85, compare_blocks_cols), max_col_clue), _if_then_else(le(ones_diff_cols, ones_diff_cols), 32, compare_blocks_cols))), True), le(ones_diff_cols, max_row_clue))
le(_if_then_else(ge(_if_then_else(True, max_row_clue, max_col_clue), _if_then_else(le(_if_then_else(False, ones_diff_cols, ones_diff_rows), max_col_clue), 3, _if_then_else(True, compare_blocks_cols, zeros_diff_cols))), compare_blocks_rows, 50), _if_then_else(True, zeros_diff_cols, max_row_clue))
le(_if_then_else(False, max_row_clue, ones_diff_rows), _if_then_else(True, _if_then_else(False, ones_diff_rows, _if_then_else(le(_if_then_else(and_(False, True), _if_then_else(True, max_row_clue, zeros_diff_rows), _if_then_else(True, 37, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, max_row_clue), _if_then_else(True, max_col_clue, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, max_col_clue, ones_diff_rows), _if_then_else(True, ones_diff_rows, ones_diff_cols)), _if_then_else(le(compare_blocks_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, 51), _if_then_else(False, compare_blocks_cols, max_col_clue)), _if_then_else(le(max_col_clue, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), _if_then_else(le(_if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, max_col_clue, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, ones_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_rows, zeros_diff_rows), _if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, max_col_clue, compare_blocks_rows))))), _if_then_else(or_(False, False), ones_diff_rows, ones_diff_cols)))
le(_if_then_else(True, _if_then_else(False, _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), max_row_clue), _if_then_else(False, _if_then_else(or_(ge(max_col_clue, zeros_diff_rows), and_(False, False)), _if_then_else(or_(True, False), _if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, ones_diff_rows, max_row_clue)), _if_then_else(le(max_col_clue, compare_blocks_rows), _if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, ones_diff_rows))), _if_then_else(le(zeros_diff_rows, 29), compare_blocks_rows, compare_blocks_cols)))
VAL TREES:
add(add(max_row_clue, zeros_diff_cols), add(max_col_clue, max_row_clue))
mul(mul(max_row_clue, compare_blocks_cols), add(ones_diff_cols, 53))
mul(mul(46, ones_diff_cols), add(compare_blocks_cols, 82))
mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows))
add(add(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows))
add(add(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, max_row_clue))
COND TREES:
and_(and_(or_(and_(ge(compare_blocks_rows, ones_diff_cols), and_(False, False)), ge(_if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, ones_diff_cols, 65))), ge(_if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(ge(max_col_clue, 17), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, zeros_diff_rows, zeros_diff_cols)))), le(_if_then_else(and_(False, or_(False, True)), _if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, ones_diff_cols))), _if_then_else(and_(and_(False, False), le(max_row_clue, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(True, 81, zeros_diff_rows)))))
or_(or_(True, True), le(ones_diff_cols, compare_blocks_cols))
le(_if_then_else(False, compare_blocks_rows, _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, ones_diff_rows), ones_diff_cols)), _if_then_else(True, zeros_diff_cols, max_row_clue))
le(_if_then_else(ge(zeros_diff_cols, 79), max_row_clue, ones_diff_rows), _if_then_else(True, _if_then_else(False, ones_diff_rows, _if_then_else(False, compare_blocks_rows, 57)), _if_then_else(or_(False, True), ones_diff_rows, ones_diff_cols)))
le(_if_then_else(False, max_col_clue, 78), _if_then_else(False, _if_then_else(False, max_col_clue, 78), _if_then_else(and_(True, False), compare_blocks_rows, compare_blocks_cols)))
VAL TREES:
add(add(max_row_clue, zeros_diff_cols), add(max_col_clue, max_row_clue))
mul(mul(max_row_clue, compare_blocks_cols), add(ones_diff_cols, 53))
mul(mul(46, ones_diff_cols), add(compare_blocks_cols, 82))
mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows))
add(add(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows))
add(add(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, max_row_clue))
COND TREES:
and_(and_(or_(and_(ge(compare_blocks_rows, ones_diff_cols), and_(le(_if_then_else(False, compare_blocks_cols, 64), _if_then_else(True, max_col_clue, ones_diff_rows)), ge(_if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_cols)))), ge(_if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, ones_diff_cols, 65))), ge(_if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(ge(max_col_clue, 17), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, zeros_diff_rows, zeros_diff_cols)))), le(_if_then_else(and_(le(compare_blocks_cols, compare_blocks_cols), or_(False, True)), _if_then_else(or_(True, False), _if_then_else(ge(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, ones_diff_cols)), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, ones_diff_cols))), _if_then_else(and_(and_(False, False), le(max_row_clue, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows, _if_then_else(True, 81, zeros_diff_rows)))))
or_(or_(False, True), ge(_if_then_else(True, max_row_clue, ones_diff_cols), _if_then_else(False, max_col_clue, compare_blocks_cols)))
le(_if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, max_row_clue, 50), _if_then_else(False, ones_diff_rows, ones_diff_rows)))
le(_if_then_else(le(ones_diff_cols, _if_then_else(False, 86, max_row_clue)), max_row_clue, ones_diff_rows), _if_then_else(True, _if_then_else(False, ones_diff_rows, _if_then_else(False, compare_blocks_rows, 57)), _if_then_else(or_(False, True), _if_then_else(le(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)), _if_then_else(and_(False, False), _if_then_else(False, max_row_clue, zeros_diff_rows), _if_then_else(False, max_row_clue, zeros_diff_rows)), _if_then_else(le(ones_diff_rows, compare_blocks_rows), _if_then_else(False, zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, max_row_clue))), ones_diff_cols)))
le(_if_then_else(False, max_col_clue, 78), _if_then_else(ge(_if_then_else(False, ones_diff_rows, compare_blocks_rows), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)))
VAL TREES:
add(add(max_row_clue, zeros_diff_cols), add(max_col_clue, max_row_clue))
mul(mul(max_row_clue, compare_blocks_cols), add(ones_diff_cols, 53))
mul(mul(46, ones_diff_cols), add(compare_blocks_cols, 82))
mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows))
add(add(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows))
add(add(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, max_row_clue))
COND TREES:
and_(and_(or_(and_(ge(compare_blocks_rows, ones_diff_cols), and_(False, False)), ge(_if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, ones_diff_cols, 65))), ge(_if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(ge(max_col_clue, 17), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, zeros_diff_rows, zeros_diff_cols)))), le(_if_then_else(and_(le(compare_blocks_cols, compare_blocks_cols), or_(False, True)), _if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(True, ones_diff_cols, zeros_diff_rows)), _if_then_else(and_(and_(False, False), le(max_row_clue, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(True, 81, zeros_diff_rows)))))
or_(or_(True, True), le(ones_diff_cols, compare_blocks_cols))
le(_if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(ge(82, compare_blocks_rows), zeros_diff_cols, max_row_clue))
le(_if_then_else(le(ones_diff_rows, _if_then_else(False, 86, max_row_clue)), ones_diff_rows, ones_diff_rows), _if_then_else(True, _if_then_else(False, ones_diff_rows, _if_then_else(False, compare_blocks_rows, 57)), _if_then_else(or_(False, True), ones_diff_rows, ones_diff_cols)))
le(_if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)))
VAL TREES:
add(add(max_row_clue, zeros_diff_cols), add(add(mul(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, max_row_clue)), max_row_clue))
mul(mul(max_row_clue, max_col_clue), add(zeros_diff_rows, add(ones_diff_rows, zeros_diff_cols)))
mul(mul(46, ones_diff_cols), add(compare_blocks_cols, add(add(ones_diff_cols, max_col_clue), add(compare_blocks_rows, ones_diff_rows))))
mul(mul(zeros_diff_rows, ones_diff_cols), add(mul(mul(add(max_row_clue, zeros_diff_rows), compare_blocks_cols), mul(add(zeros_diff_cols, 76), zeros_diff_cols)), compare_blocks_rows))
add(add(ones_diff_cols, compare_blocks_cols), add(add(mul(max_row_clue, compare_blocks_rows), add(max_col_clue, zeros_diff_rows)), add(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_cols, compare_blocks_cols))))
add(add(zeros_diff_rows, ones_diff_cols), mul(add(add(max_col_clue, ones_diff_rows), add(add(add(compare_blocks_cols, compare_blocks_cols), ones_diff_rows), max_row_clue)), max_row_clue))
COND TREES:
and_(and_(or_(and_(ge(compare_blocks_rows, ones_diff_cols), and_(False, False)), ge(_if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, ones_diff_cols, 65))), ge(_if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(ge(max_col_clue, 17), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, zeros_diff_rows, zeros_diff_cols)))), le(_if_then_else(and_(le(compare_blocks_cols, compare_blocks_cols), or_(False, True)), _if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, ones_diff_cols))), _if_then_else(and_(and_(False, False), le(max_row_clue, zeros_diff_cols)), _if_then_else(False, _if_then_else(True, _if_then_else(and_(True, and_(True, and_(False, False))), _if_then_else(True, _if_then_else(True, max_col_clue, ones_diff_rows), _if_then_else(True, max_col_clue, 56)), _if_then_else(False, _if_then_else(True, _if_then_else(False, max_col_clue, max_row_clue), _if_then_else(False, 20, 2)), _if_then_else(False, compare_blocks_cols, 59))), max_col_clue), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows, _if_then_else(True, 81, zeros_diff_rows)))))
or_(or_(True, True), le(_if_then_else(or_(True, True), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, zeros_diff_cols, 77)), compare_blocks_cols))
le(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_rows)), _if_then_else(False, zeros_diff_cols, max_row_clue))
le(_if_then_else(le(ones_diff_rows, _if_then_else(False, _if_then_else(False, ones_diff_rows, _if_then_else(False, compare_blocks_rows, 57)), max_row_clue)), 79, ones_diff_rows), _if_then_else(True, _if_then_else(False, _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, max_col_clue)), _if_then_else(False, compare_blocks_rows, 57)), _if_then_else(or_(False, True), ones_diff_rows, ones_diff_cols)))
le(_if_then_else(True, _if_then_else(le(zeros_diff_rows, max_col_clue), _if_then_else(False, max_col_clue, zeros_diff_cols), _if_then_else(False, ones_diff_cols, zeros_diff_cols)), 78), _if_then_else(False, _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)))
VAL TREES:
add(add(max_row_clue, zeros_diff_cols), add(max_col_clue, max_row_clue))
mul(mul(max_row_clue, compare_blocks_cols), add(ones_diff_cols, 53))
mul(mul(46, ones_diff_cols), add(compare_blocks_cols, 82))
mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows))
add(add(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows))
add(add(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, max_row_clue))
COND TREES:
and_(and_(or_(and_(False, and_(False, False)), ge(_if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, ones_diff_cols, 65))), ge(_if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(ge(max_col_clue, 17), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, zeros_diff_rows, zeros_diff_cols)))), le(_if_then_else(and_(False, or_(False, True)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, ones_diff_cols))), _if_then_else(and_(and_(False, False), le(max_row_clue, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(True, 81, zeros_diff_rows)))))
or_(or_(True, True), le(ones_diff_cols, ones_diff_cols))
le(_if_then_else(False, compare_blocks_rows, _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, ones_diff_rows), _if_then_else(ge(82, compare_blocks_rows), ones_diff_cols, ones_diff_rows))), _if_then_else(True, zeros_diff_cols, max_row_clue))
le(_if_then_else(ge(zeros_diff_cols, max_row_clue), max_row_clue, ones_diff_rows), _if_then_else(True, _if_then_else(True, ones_diff_rows, _if_then_else(False, compare_blocks_rows, 57)), _if_then_else(or_(False, True), ones_diff_rows, ones_diff_cols)))
le(_if_then_else(False, max_col_clue, 78), _if_then_else(False, _if_then_else(False, ones_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, compare_blocks_cols)))
VAL TREES:
add(add(max_row_clue, zeros_diff_cols), add(mul(add(add(mul(add(zeros_diff_cols, max_col_clue), add(11, ones_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), mul(add(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, max_row_clue)))), mul(add(mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, 88)), mul(add(max_col_clue, compare_blocks_cols), mul(ones_diff_cols, max_col_clue))), mul(add(mul(zeros_diff_cols, zeros_diff_cols), mul(max_row_clue, ones_diff_rows)), mul(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, zeros_diff_rows))))), max_row_clue))
mul(mul(zeros_diff_cols, add(max_row_clue, zeros_diff_cols)), mul(ones_diff_cols, add(zeros_diff_cols, ones_diff_cols)))
mul(mul(46, ones_diff_cols), add(compare_blocks_cols, mul(add(mul(ones_diff_rows, zeros_diff_cols), max_row_clue), add(zeros_diff_cols, 1))))
mul(mul(add(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, max_col_clue)), ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(ones_diff_cols, 94), add(zeros_diff_cols, zeros_diff_rows)), mul(ones_diff_cols, compare_blocks_rows))
add(add(zeros_diff_rows, mul(mul(ones_diff_cols, max_col_clue), add(zeros_diff_cols, mul(ones_diff_cols, 87)))), mul(ones_diff_rows, max_row_clue))
COND TREES:
and_(and_(or_(and_(ge(compare_blocks_rows, ones_diff_cols), and_(False, False)), ge(_if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, ones_diff_cols, 65))), ge(_if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(ge(max_col_clue, 17), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, zeros_diff_rows, zeros_diff_cols)))), le(_if_then_else(and_(False, or_(False, False)), _if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, ones_diff_cols))), _if_then_else(and_(and_(False, False), le(max_row_clue, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(False, max_col_clue, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(True, 81, zeros_diff_rows)))))
or_(or_(True, True), le(ones_diff_cols, ones_diff_cols))
le(_if_then_else(False, compare_blocks_rows, _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols))), _if_then_else(True, zeros_diff_cols, max_row_clue))
le(_if_then_else(ge(zeros_diff_cols, 79), max_row_clue, ones_diff_rows), _if_then_else(True, _if_then_else(False, ones_diff_rows, _if_then_else(False, compare_blocks_rows, 57)), _if_then_else(or_(False, True), ones_diff_rows, ones_diff_cols)))
le(_if_then_else(False, max_col_clue, 78), _if_then_else(False, _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(and_(True, False), ones_diff_cols, compare_blocks_cols)))
VAL TREES:
add(add(max_row_clue, zeros_diff_cols), add(max_col_clue, max_row_clue))
mul(mul(max_row_clue, compare_blocks_cols), add(ones_diff_cols, 53))
mul(mul(46, ones_diff_cols), add(compare_blocks_cols, 82))
mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows))
add(add(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows))
add(add(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, max_row_clue))
COND TREES:
and_(and_(or_(and_(ge(compare_blocks_rows, ones_diff_cols), and_(False, False)), ge(_if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, ones_diff_cols, 65))), ge(_if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(ge(max_col_clue, 17), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, zeros_diff_rows, zeros_diff_cols)))), le(_if_then_else(and_(le(compare_blocks_cols, max_row_clue), or_(False, and_(False, True))), _if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, ones_diff_cols))), _if_then_else(and_(and_(False, False), le(max_row_clue, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows, _if_then_else(True, 81, zeros_diff_rows)))))
or_(or_(True, le(ones_diff_cols, compare_blocks_cols)), le(compare_blocks_cols, compare_blocks_cols))
le(_if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, max_row_clue))
le(_if_then_else(le(ones_diff_rows, _if_then_else(False, 86, max_row_clue)), max_row_clue, ones_diff_rows), _if_then_else(True, _if_then_else(False, ones_diff_rows, _if_then_else(False, compare_blocks_rows, 57)), _if_then_else(or_(False, True), ones_diff_rows, ones_diff_cols)))
le(_if_then_else(False, max_col_clue, 78), _if_then_else(False, _if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)))
VAL TREES:
add(add(max_row_clue, zeros_diff_cols), add(max_col_clue, max_row_clue))
mul(mul(max_row_clue, compare_blocks_cols), add(ones_diff_cols, 53))
mul(mul(46, ones_diff_cols), add(compare_blocks_cols, 82))
mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows))
add(add(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows))
add(add(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, max_row_clue))


INFO:root:hof: COND TREES:
le(_if_then_else(and_(le(compare_blocks_rows, compare_blocks_cols), and_(False, True)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_cols, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(True, 82, max_row_clue))), _if_then_else(le(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, max_row_clue, zeros_diff_cols)), _if_then_else(le(compare_blocks_rows, zeros_diff_rows), _if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(True, zeros_diff_rows, ones_diff_cols))))
le(_if_then_else(True, max_col_clue, max_col_clue), _if_then_else(False, zeros_diff_cols, ones_diff_cols))
and_(le(max_row_clue, _if_then_else(True, max_col_clue, ones_diff_rows)), or_(ge(zeros_diff_cols, ones_diff_cols), False))
le(_if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, max_row_clue))
and_(ge(29, max_row_clue), or_(True, True))
VAL TREES:
mul(mul(mul(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_rows)), add(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_rows, max_row_clue))), add(mul(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_rows)), add(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, ones_diff_rows))))
add(mul(ones_diff_rows, zeros_diff_rows), add(add(compare_blocks_rows, compare_blocks_cols), compare_blocks_rows))
add(add(mul(max_row_clue, ones_diff_cols), mul(zeros_diff_cols, max_row_clue)), add(mul(compare_blocks_rows, compare_blocks_cols), mul(max_col_clue, max_col_clue)))
add(add(ones_diff_rows, compare_blocks_rows), mul(max_col_clue, compare_blocks_cols))
add(mul(ones_diff_rows, max_row_clue), mul(compare_blocks_cols, max_row_clue))
mul(mul(compare_blocks_cols, ones_diff_rows), mul(add(98, max_row_clue), max_row_clue))


INFO:root:stats: {'fitness': <deap.tools.support.Statistics object at 0x00000228914E1DD8>}

DEBUG:matplotlib.axes._base:update_title_pos
DEBUG:matplotlib.font_manager:findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\Itay Gabbay\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.axes._base:update_title_pos
