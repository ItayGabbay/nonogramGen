INFO:root:

*******STARTING!!!******


INFO:root:

*******Configuration******


INFO:root:# NUM_ROWS = 20


INFO:root:NUM_ROWS = 5


INFO:root:# NUM_COLS = 20


INFO:root:NUM_COLS = 5


INFO:root:empty_in_split = '\xa0'


INFO:root:


INFO:root:pickle_unsolved_file_path = 'data/%dx%d_nonograms.pkl' % (NUM_ROWS, NUM_COLS)


INFO:root:pickle_solved_file_path = 'data/%dx%d_nonograms_solved.pkl' % (NUM_ROWS, NUM_COLS)


INFO:root:pickle_row_options_path = 'data/%dx%d_row_options.pkl' % (NUM_ROWS, NUM_ROWS)


INFO:root:should_run_in_parallel = False


INFO:root:


INFO:root:NUM_COND_TREES = 5


INFO:root:NUM_VAL_TREES = NUM_COND_TREES + 1


INFO:root:prob_crossover_global = 0.7  # global probability for cx


INFO:root:prob_crossover_individual_cond = 0.8  # probability to cx a specific cond tree in an individual


INFO:root:prob_crossover_individual_val = 0.8  # probability to cx a specific cond tree in an individual


INFO:root:prob_mutate_global = 0.3


INFO:root:prob_mutate_individual_cond = 0.7


INFO:root:prob_mutate_individual_val = 0.7


INFO:root:


INFO:root:points_correct_box = 5


INFO:root:points_incorrect_box = 0


INFO:root:# points_incorrect_box = -2


INFO:root:pop_size = 100


INFO:root:hof_size = 1


INFO:root:# num_gen = 40


INFO:root:num_gen = 10


INFO:root:train_size = 3


INFO:root:

*******DONE!!!******


INFO:root:run time: 476 sec

INFO:root:max possible fitness for the nonograms ran: 70

INFO:root:log:    	      	                          fitness                          	              size              
   	      	-----------------------------------------------------------	--------------------------------
gen	nevals	avg     	max     	min     	std        	avg 	max	min	std     
0  	100   	0.672   	0.672   	0.672   	3.33067e-16	7.43	9  	6  	0.620564
1  	79    	0.67768 	0.698667	0.661333	0.0107176  	7.89	11 	6  	1.00891 
2  	79    	0.683813	0.698667	0.672   	0.0125773  	8.28	13 	6  	1.32725 
3  	83    	0.689893	0.698667	0.661333	0.0120402  	8.77	13 	6  	1.48226 
4  	75    	0.695707	0.698667	0.664   	0.00789167 	8.94	13 	6  	1.39871 
5  	81    	0.69496 	0.698667	0.666667	0.00912058 	9.13	13 	7  	1.44675 
6  	80    	0.694107	0.698667	0.672   	0.0100083  	9.55	14 	7  	1.72844 
7  	76    	0.69608 	0.698667	0.672   	0.007659   	9.57	16 	7  	1.81799 
8  	89    	0.69536 	0.698667	0.672   	0.00841687 	9.63	16 	7  	1.80364 
9  	72    	0.695973	0.698667	0.672   	0.00799551 	9.63	14 	7  	1.62883 
10 	80    	0.6956  	0.698667	0.672   	0.00836819 	9.62	15 	7  	1.5348  

INFO:root:pop: COND TREES:
or_(or_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, max_row_clue, ones_diff_cols)), True), ge(_if_then_else(or_(False, True), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(True, _if_then_else(False, 2, 2), compare_blocks_cols)), _if_then_else(and_(False, False), _if_then_else(True, max_col_clue, max_row_clue), _if_then_else(True, 4, 1))))
ge(_if_then_else(or_(False, False), _if_then_else(True, _if_then_else(True, compare_blocks_cols, compare_blocks_rows), compare_blocks_rows), _if_then_else(True, ones_diff_cols, 1)), _if_then_else(or_(True, False), _if_then_else(False, 3, zeros_diff_cols), 2))
or_(and_(and_(False, or_(True, True)), True), ge(1, _if_then_else(le(compare_blocks_cols, 4), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, _if_then_else(or_(False, True), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 1, compare_blocks_cols))), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(False, compare_blocks_cols, compare_blocks_cols), ones_diff_rows), _if_then_else(le(3, 3), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(compare_blocks_cols, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), True)))
or_(ge(1, _if_then_else(True, _if_then_else(False, 1, _if_then_else(False, 1, 3)), _if_then_else(False, zeros_diff_cols, 4))), or_(le(compare_blocks_cols, 1), True))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
ge(_if_then_else(le(4, 2), _if_then_else(True, max_col_clue, 2), _if_then_else(or_(ge(_if_then_else(and_(or_(False, False), le(zeros_diff_cols, 1)), _if_then_else(and_(False, True), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 1, compare_blocks_cols)), _if_then_else(le(compare_blocks_cols, 4), _if_then_else(False, ones_diff_rows, 1), _if_then_else(False, 1, 4))), _if_then_else(True, max_row_clue, ones_diff_cols)), True), zeros_diff_cols, max_col_clue)), _if_then_else(True, _if_then_else(False, 3, 1), _if_then_else(or_(False, False), _if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, 4))))
le(_if_then_else(le(ones_diff_rows, compare_blocks_cols), _if_then_else(or_(False, False), 3, _if_then_else(le(zeros_diff_cols, max_row_clue), 3, 0)), _if_then_else(True, _if_then_else(le(_if_then_else(or_(and_(True, False), le(ones_diff_rows, max_row_clue)), _if_then_else(or_(True, False), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(True, 4, compare_blocks_cols)), _if_then_else(ge(max_row_clue, zeros_diff_rows), _if_then_else(True, 4, 3), _if_then_else(False, compare_blocks_cols, max_row_clue))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, 3), _if_then_else(False, 1, zeros_diff_rows)), _if_then_else(and_(False, True), _if_then_else(False, 2, 2), _if_then_else(False, 0, 1)), _if_then_else(ge(1, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, max_col_clue)))), _if_then_else(and_(ge(_if_then_else(True, 0, 0), _if_then_else(True, zeros_diff_cols, zeros_diff_cols)), ge(_if_then_else(False, zeros_diff_cols, max_col_clue), _if_then_else(True, max_row_clue, 1))), _if_then_else(or_(or_(or_(False, False), le(zeros_diff_cols, max_col_clue)), le(ones_diff_cols, 0)), _if_then_else(and_(True, False), _if_then_else(False, 4, 2), _if_then_else(False, max_col_clue, zeros_diff_rows)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(False, max_row_clue, compare_blocks_rows))), _if_then_else(False, _if_then_else(ge(ones_diff_cols, max_row_clue), _if_then_else(False, ones_diff_cols, compare_blocks_cols), _if_then_else(False, ones_diff_cols, zeros_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, max_col_clue, 2), _if_then_else(False, max_col_clue, max_col_clue)))), _if_then_else(le(_if_then_else(and_(False, True), _if_then_else(False, compare_blocks_rows, 2), _if_then_else(True, max_row_clue, max_row_clue)), _if_then_else(ge(4, 2), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(False, 1, 4))), _if_then_else(ge(_if_then_else(False, 2, ones_diff_rows), _if_then_else(True, compare_blocks_cols, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(False, 3, 0)), _if_then_else(or_(False, True), _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(False, 4, ones_diff_cols))), _if_then_else(and_(or_(True, False), ge(4, zeros_diff_rows)), _if_then_else(le(max_col_clue, 2), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, max_row_clue, 0)), _if_then_else(and_(False, True), _if_then_else(False, ones_diff_rows, 4), _if_then_else(False, _if_then_else(or_(ge(zeros_diff_rows, ones_diff_rows), or_(False, ge(zeros_diff_rows, compare_blocks_cols))), _if_then_else(and_(True, True), _if_then_else(True, compare_blocks_rows, 0), _if_then_else(and_(True, False), ones_diff_cols, 1)), _if_then_else(or_(False, False), _if_then_else(and_(le(max_row_clue, 0), False), 3, _if_then_else(and_(False, True), ones_diff_rows, _if_then_else(False, zeros_diff_cols, ones_diff_rows))), _if_then_else(True, max_col_clue, compare_blocks_cols))), compare_blocks_rows))))), 2)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, ones_diff_cols), _if_then_else(ge(max_col_clue, zeros_diff_rows), _if_then_else(False, 3, ones_diff_rows), compare_blocks_cols)))
or_(le(_if_then_else(le(3, ones_diff_rows), _if_then_else(True, 0, max_col_clue), _if_then_else(False, ones_diff_cols, zeros_diff_cols)), _if_then_else(le(ones_diff_rows, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols), _if_then_else(True, _if_then_else(True, ones_diff_rows, 4), zeros_diff_rows))), le(_if_then_else(and_(False, or_(False, True)), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, _if_then_else(ge(_if_then_else(ge(_if_then_else(True, 2, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, ones_diff_rows)), _if_then_else(ge(ones_diff_cols, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_rows), _if_then_else(True, max_col_clue, max_row_clue)), _if_then_else(or_(True, True), _if_then_else(True, 3, 1), _if_then_else(True, 4, zeros_diff_cols))), _if_then_else(or_(ge(zeros_diff_rows, max_col_clue), and_(False, True)), _if_then_else(or_(True, False), _if_then_else(True, 4, max_col_clue), _if_then_else(True, compare_blocks_cols, 3)), _if_then_else(le(zeros_diff_rows, ones_diff_cols), _if_then_else(True, 1, max_row_clue), _if_then_else(False, zeros_diff_cols, 3)))), _if_then_else(or_(ge(_if_then_else(True, 2, 1), _if_then_else(True, 2, max_col_clue)), ge(_if_then_else(False, 0, ones_diff_cols), _if_then_else(False, 4, 3))), _if_then_else(and_(and_(True, True), le(4, 1)), _if_then_else(le(4, ones_diff_cols), _if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(True, 4, 0)), _if_then_else(and_(True, False), _if_then_else(False, 2, ones_diff_cols), _if_then_else(True, zeros_diff_cols, ones_diff_rows))), _if_then_else(and_(and_(False, False), le(ones_diff_cols, zeros_diff_rows)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, ones_diff_cols, zeros_diff_rows)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_cols, 4), _if_then_else(True, 4, max_row_clue)))), _if_then_else(ge(_if_then_else(ge(max_row_clue, compare_blocks_rows), _if_then_else(True, ones_diff_cols, 3), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(le(4, zeros_diff_cols), _if_then_else(False, 2, 2), _if_then_else(False, 4, max_row_clue))), _if_then_else(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, 4, 0)), _if_then_else(le(zeros_diff_rows, ones_diff_cols), _if_then_else(False, max_row_clue, 4), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(or_(False, False), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, zeros_diff_cols, ones_diff_rows))), _if_then_else(or_(le(zeros_diff_rows, max_row_clue), le(ones_diff_cols, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(and_(True, False), _if_then_else(False, max_row_clue, max_row_clue), _if_then_else(False, zeros_diff_cols, zeros_diff_rows))))), ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(True, max_col_clue, 4))))
and_(ge(_if_then_else(or_(le(max_col_clue, ones_diff_cols), le(max_col_clue, max_row_clue)), compare_blocks_rows, _if_then_else(or_(and_(True, False), ge(max_row_clue, zeros_diff_cols)), _if_then_else(True, 0, zeros_diff_cols), _if_then_else(True, max_col_clue, 0))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, _if_then_else(and_(or_(and_(True, False), ge(0, zeros_diff_rows)), le(_if_then_else(False, 0, zeros_diff_cols), _if_then_else(True, max_col_clue, 1))), _if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(True, compare_blocks_cols, zeros_diff_rows)), _if_then_else(le(zeros_diff_cols, ones_diff_rows), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), _if_then_else(and_(True, False), _if_then_else(True, zeros_diff_rows, 1), _if_then_else(False, zeros_diff_rows, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, max_col_clue, compare_blocks_rows)), _if_then_else(ge(ones_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 2), _if_then_else(True, max_row_clue, 4)), _if_then_else(le(2, zeros_diff_rows), _if_then_else(False, 2, 1), _if_then_else(True, 2, 3))))), _if_then_else(False, _if_then_else(True, compare_blocks_rows, max_row_clue), ones_diff_rows)), _if_then_else(le(zeros_diff_rows, max_col_clue), _if_then_else(ge(_if_then_else(False, 0, max_row_clue), _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, ones_diff_rows, 1)), _if_then_else(and_(True, False), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows))), _if_then_else(True, 0, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_cols, ones_diff_rows)))), and_(ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(True, 1, zeros_diff_cols)), _if_then_else(True, _if_then_else(False, ones_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, max_col_clue))), and_(and_(True, or_(True, True)), and_(le(ones_diff_rows, 2), ge(ones_diff_cols, ones_diff_rows)))))
ge(_if_then_else(False, zeros_diff_rows, compare_blocks_cols), _if_then_else(ge(zeros_diff_rows, _if_then_else(and_(le(_if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(False, max_row_clue, ones_diff_rows)), ge(_if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, compare_blocks_cols))), _if_then_else(le(max_col_clue, zeros_diff_rows), 2, zeros_diff_cols), _if_then_else(or_(or_(False, False), and_(True, True)), _if_then_else(and_(True, False), _if_then_else(False, 2, 3), _if_then_else(True, ones_diff_rows, _if_then_else(or_(or_(False, True), and_(False, False)), _if_then_else(and_(True, False), _if_then_else(True, zeros_diff_cols, 2), _if_then_else(False, zeros_diff_rows, ones_diff_cols)), _if_then_else(le(max_row_clue, ones_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_rows))))), _if_then_else(ge(1, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, 0), _if_then_else(True, 3, max_col_clue))))), _if_then_else(False, 2, 4), _if_then_else(True, compare_blocks_rows, max_col_clue)))
VAL TREES:
add(mul(add(mul(zeros_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(mul(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, ones_diff_cols))), add(add(add(ones_diff_rows, ones_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
add(add(mul(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))
mul(add(add(ones_diff_cols, ones_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)), mul(mul(zeros_diff_cols, zeros_diff_rows), add(ones_diff_cols, compare_blocks_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_rows, add(compare_blocks_cols, compare_blocks_cols))), add(add(zeros_diff_rows, add(ones_diff_cols, ones_diff_cols)), add(zeros_diff_rows, ones_diff_rows)))
add(mul(mul(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, compare_blocks_cols))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols))))
mul(add(mul(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, mul(mul(zeros_diff_rows, ones_diff_rows), ones_diff_cols))))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, _if_then_else(le(_if_then_else(True, 2, max_col_clue), _if_then_else(True, compare_blocks_rows, zeros_diff_rows)), _if_then_else(le(4, 1), _if_then_else(False, max_col_clue, 4), _if_then_else(True, _if_then_else(True, 3, max_col_clue), 0)), _if_then_else(ge(4, compare_blocks_cols), _if_then_else(False, 1, ones_diff_rows), _if_then_else(True, 1, zeros_diff_rows)))), _if_then_else(False, max_row_clue, ones_diff_cols)), le(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, ones_diff_rows, 4))), ge(_if_then_else(or_(False, True), _if_then_else(True, max_col_clue, compare_blocks_rows), max_col_clue), _if_then_else(and_(True, False), _if_then_else(le(max_col_clue, compare_blocks_rows), 4, zeros_diff_rows), _if_then_else(and_(le(max_col_clue, ones_diff_rows), True), 4, 1))))
ge(_if_then_else(False, max_col_clue, ones_diff_cols), 4)
or_(and_(and_(False, or_(True, True)), and_(ge(max_col_clue, max_col_clue), or_(False, True))), ge(_if_then_else(ge(zeros_diff_cols, 4), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, ones_diff_cols, max_col_clue)), _if_then_else(le(compare_blocks_cols, _if_then_else(or_(ge(_if_then_else(False, 1, compare_blocks_rows), _if_then_else(False, max_row_clue, compare_blocks_rows)), or_(le(2, ones_diff_cols), and_(True, True))), _if_then_else(or_(le(4, 4), le(compare_blocks_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(False, 3, zeros_diff_rows)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, 2, compare_blocks_cols))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_col_clue), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(ge(4, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_row_clue, zeros_diff_rows))))), max_col_clue, _if_then_else(True, 0, ones_diff_rows))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, 2), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(True, max_row_clue, _if_then_else(and_(and_(False, True), le(2, zeros_diff_rows)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, 4, 3)), _if_then_else(le(1, 1), _if_then_else(False, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, ones_diff_cols, ones_diff_rows)))), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(True, False), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, _if_then_else(False, 4, zeros_diff_cols), 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(zeros_diff_rows, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), or_(or_(True, False), and_(False, False)))))
le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(ge(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, ones_diff_cols, zeros_diff_cols)), ones_diff_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, ones_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, max_row_clue)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
or_(le(_if_then_else(True, 4, 1), 2), le(_if_then_else(and_(False, True), _if_then_else(False, ones_diff_rows, max_col_clue), _if_then_else(True, zeros_diff_rows, 2)), _if_then_else(le(compare_blocks_rows, 1), _if_then_else(True, 4, 4), _if_then_else(False, zeros_diff_rows, ones_diff_rows))))
ge(_if_then_else(le(max_col_clue, ones_diff_rows), _if_then_else(True, 0, zeros_diff_rows), _if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(True, 1, _if_then_else(True, zeros_diff_cols, compare_blocks_cols))), 4)), _if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(le(_if_then_else(le(0, ones_diff_cols), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(True, 2, 0), _if_then_else(False, 3, zeros_diff_rows))), 4, zeros_diff_cols), _if_then_else(False, 2, compare_blocks_cols)), _if_then_else(and_(False, False), _if_then_else(True, max_row_clue, _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(True, 1, 3))), _if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, 4, 1)))
or_(False, le(_if_then_else(True, compare_blocks_rows, ones_diff_rows), _if_then_else(le(_if_then_else(False, _if_then_else(False, 4, 0), ones_diff_rows), _if_then_else(and_(False, False), compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 2, zeros_diff_rows), _if_then_else(True, 4, zeros_diff_rows)), _if_then_else(True, 0, ones_diff_rows), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), 2, zeros_diff_cols)), _if_then_else(le(0, 4), _if_then_else(True, _if_then_else(True, max_row_clue, 0), max_row_clue), _if_then_else(False, ones_diff_cols, 3)))))
ge(_if_then_else(False, _if_then_else(False, 4, compare_blocks_cols), _if_then_else(le(_if_then_else(and_(le(zeros_diff_rows, ones_diff_cols), ge(4, max_col_clue)), _if_then_else(ge(max_col_clue, 0), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, compare_blocks_rows, 4)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, max_col_clue), _if_then_else(False, max_col_clue, zeros_diff_rows))), _if_then_else(and_(le(ones_diff_cols, 3), ge(zeros_diff_rows, compare_blocks_cols)), _if_then_else(le(3, 1), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(and_(True, True), _if_then_else(True, 1, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_cols)))), _if_then_else(ge(_if_then_else(or_(True, False), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(False, max_col_clue, 4)), _if_then_else(and_(True, False), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(True, compare_blocks_cols, zeros_diff_rows))), _if_then_else(or_(ge(4, zeros_diff_cols), ge(max_row_clue, 3)), _if_then_else(and_(True, True), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, 4, zeros_diff_cols)), _if_then_else(ge(compare_blocks_rows, 3), _if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(False, zeros_diff_rows, compare_blocks_cols))), _if_then_else(le(_if_then_else(True, 3, ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)), _if_then_else(ge(ones_diff_rows, ones_diff_cols), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(False, max_row_clue, zeros_diff_cols)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_cols, compare_blocks_cols)))), _if_then_else(and_(le(_if_then_else(False, 3, 2), _if_then_else(True, ones_diff_rows, ones_diff_rows)), or_(ge(1, 3), ge(compare_blocks_cols, max_row_clue))), _if_then_else(or_(or_(True, False), ge(max_row_clue, compare_blocks_cols)), _if_then_else(ge(zeros_diff_rows, 2), _if_then_else(False, 3, compare_blocks_cols), _if_then_else(False, 0, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, max_col_clue), _if_then_else(True, compare_blocks_rows, max_col_clue))), _if_then_else(and_(ge(2, compare_blocks_cols), and_(True, True)), _if_then_else(ge(max_col_clue, compare_blocks_rows), _if_then_else(False, 4, max_col_clue), _if_then_else(False, max_col_clue, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, 4, compare_blocks_cols)))))), _if_then_else(False, _if_then_else(False, zeros_diff_rows, ones_diff_cols), _if_then_else(False, compare_blocks_rows, ones_diff_cols)))
ge(_if_then_else(or_(and_(True, False), ge(2, 4)), _if_then_else(or_(False, False), compare_blocks_rows, _if_then_else(True, max_col_clue, max_col_clue)), _if_then_else(and_(False, True), _if_then_else(True, 1, ones_diff_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(_if_then_else(or_(and_(False, True), and_(True, True)), _if_then_else(le(2, 1), _if_then_else(False, ones_diff_cols, compare_blocks_cols), _if_then_else(False, 4, 0)), _if_then_else(or_(False, True), _if_then_else(True, 3, 0), _if_then_else(True, 3, 1))), _if_then_else(le(_if_then_else(False, max_col_clue, 0), _if_then_else(False, compare_blocks_cols, max_col_clue)), _if_then_else(and_(False, False), _if_then_else(True, max_row_clue, ones_diff_rows), _if_then_else(False, 4, zeros_diff_rows)), _if_then_else(le(3, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(True, ones_diff_cols, 2)))), _if_then_else(or_(and_(ge(compare_blocks_rows, max_col_clue), le(compare_blocks_rows, 3)), le(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, 4, compare_blocks_rows))), _if_then_else(ge(_if_then_else(True, 3, ones_diff_rows), _if_then_else(True, 3, 2)), _if_then_else(and_(True, False), _if_then_else(False, 1, max_col_clue), _if_then_else(True, 0, 3)), _if_then_else(le(ones_diff_cols, zeros_diff_cols), _if_then_else(True, zeros_diff_rows, 0), _if_then_else(True, compare_blocks_rows, compare_blocks_rows))), _if_then_else(le(_if_then_else(True, 1, ones_diff_cols), _if_then_else(True, compare_blocks_rows, zeros_diff_rows)), _if_then_else(le(3, max_col_clue), _if_then_else(False, compare_blocks_rows, 4), _if_then_else(False, compare_blocks_rows, 3)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(False, max_col_clue, max_row_clue)))), _if_then_else(and_(le(_if_then_else(True, 2, 0), _if_then_else(False, max_row_clue, compare_blocks_cols)), le(_if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(True, 1, 3))), _if_then_else(ge(_if_then_else(True, ones_diff_rows, max_col_clue), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), _if_then_else(ge(1, max_col_clue), _if_then_else(True, compare_blocks_cols, 3), _if_then_else(True, max_col_clue, zeros_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, 2), _if_then_else(False, ones_diff_rows, max_row_clue))), _if_then_else(ge(_if_then_else(False, 0, ones_diff_cols), _if_then_else(True, 2, ones_diff_cols)), _if_then_else(le(compare_blocks_rows, ones_diff_rows), _if_then_else(False, compare_blocks_rows, 4), _if_then_else(True, 1, zeros_diff_rows)), _if_then_else(le(compare_blocks_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_rows, 1)))))))), _if_then_else(and_(and_(True, le(1, 4)), le(compare_blocks_cols, max_col_clue)), _if_then_else(le(zeros_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 1, compare_blocks_cols)), _if_then_else(ge(1, compare_blocks_rows), _if_then_else(False, 3, 2), _if_then_else(True, compare_blocks_cols, ones_diff_cols))))
VAL TREES:
mul(mul(mul(add(mul(compare_blocks_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_rows, compare_blocks_rows))), mul(add(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_rows)), add(mul(compare_blocks_cols, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_cols)))), mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows))), add(add(mul(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))))
add(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols)), add(add(zeros_diff_cols, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows)))
mul(add(add(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows)))
add(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_cols, mul(compare_blocks_cols, zeros_diff_rows))), mul(mul(mul(compare_blocks_cols, compare_blocks_cols), add(zeros_diff_cols, ones_diff_rows)), mul(compare_blocks_cols, mul(compare_blocks_rows, ones_diff_rows))))
add(add(mul(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, max_row_clue, ones_diff_cols)), le(_if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(True, ones_diff_rows, _if_then_else(and_(True, False), _if_then_else(True, max_col_clue, max_row_clue), _if_then_else(True, 4, 1))))), ge(_if_then_else(or_(False, True), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(True, _if_then_else(False, 2, 2), 1)), _if_then_else(and_(True, True), _if_then_else(True, max_col_clue, max_row_clue), _if_then_else(True, 4, 1))))
ge(_if_then_else(or_(False, False), _if_then_else(True, _if_then_else(True, compare_blocks_cols, compare_blocks_rows), compare_blocks_rows), _if_then_else(True, ones_diff_cols, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, 1, ones_diff_rows)))
or_(False, ge(1, _if_then_else(le(compare_blocks_cols, 4), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, 2, 4))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, _if_then_else(or_(False, True), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 1, compare_blocks_cols))), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), ones_diff_rows), _if_then_else(le(3, 3), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(compare_blocks_cols, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(ge(_if_then_else(or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), or_(or_(True, False), and_(False, False))), max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), True)))
or_(ge(1, _if_then_else(True, _if_then_else(or_(le(3, max_row_clue), or_(False, True)), 1, max_row_clue), _if_then_else(False, zeros_diff_cols, max_row_clue))), or_(le(compare_blocks_cols, 1), False))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, mul(add(add(add(zeros_diff_rows, zeros_diff_cols), ones_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows))))))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, add(add(mul(zeros_diff_cols, zeros_diff_rows), add(ones_diff_cols, compare_blocks_rows)), add(add(add(compare_blocks_rows, ones_diff_rows), ones_diff_cols), mul(ones_diff_cols, zeros_diff_cols)))), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), mul(add(add(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_cols)), mul(mul(zeros_diff_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows))), add(add(mul(compare_blocks_rows, zeros_diff_rows), add(ones_diff_rows, zeros_diff_rows)), add(add(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_cols, compare_blocks_cols))))), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
le(_if_then_else(ge(_if_then_else(True, max_col_clue, compare_blocks_rows), max_row_clue), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(True, _if_then_else(False, compare_blocks_rows, max_row_clue), compare_blocks_cols)), _if_then_else(True, _if_then_else(True, 2, _if_then_else(False, max_col_clue, zeros_diff_rows)), _if_then_else(ge(_if_then_else(True, max_col_clue, compare_blocks_rows), max_row_clue), 0, zeros_diff_cols)))
or_(or_(or_(False, False), ge(0, _if_then_else(True, max_col_clue, 4))), or_(or_(True, and_(or_(True, True), True)), and_(and_(or_(True, True), True), True)))
and_(or_(ge(_if_then_else(ge(3, compare_blocks_rows), _if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(False, ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, max_row_clue, ones_diff_cols))), le(_if_then_else(ge(compare_blocks_rows, ones_diff_rows), _if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(False, 1, ones_diff_rows)), _if_then_else(ge(0, 2), _if_then_else(True, zeros_diff_rows, zeros_diff_cols), _if_then_else(False, ones_diff_rows, zeros_diff_rows)))), and_(ge(_if_then_else(and_(True, True), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(False, 4, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(True, 4, 0), _if_then_else(True, compare_blocks_rows, compare_blocks_cols))), and_(ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), and_(le(compare_blocks_cols, zeros_diff_cols), and_(False, False)))))
le(_if_then_else(le(_if_then_else(ge(ones_diff_cols, max_col_clue), _if_then_else(True, zeros_diff_rows, 2), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(or_(False, True), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(ge(_if_then_else(ge(ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(ge(3, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(True, 0, 4))), _if_then_else(and_(or_(False, True), ge(ones_diff_cols, max_row_clue)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_cols, 4), _if_then_else(False, zeros_diff_rows, max_col_clue)), _if_then_else(ge(compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 0, 3), _if_then_else(False, zeros_diff_cols, max_col_clue))), _if_then_else(ge(_if_then_else(False, 1, ones_diff_rows), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(False, 4, 2), _if_then_else(True, ones_diff_cols, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_rows, 0), _if_then_else(False, 4, 4)))))), _if_then_else(or_(and_(True, True), le(compare_blocks_rows, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(True, 2, 3), _if_then_else(False, 4, 2)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 2, 2))), _if_then_else(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(True, max_col_clue, _if_then_else(False, max_row_clue, 2))), _if_then_else(ge(zeros_diff_rows, 0), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, compare_blocks_rows, 3)), _if_then_else(or_(True, True), max_col_clue, _if_then_else(False, ones_diff_rows, max_row_clue)))), _if_then_else(ge(_if_then_else(ge(ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(ge(3, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(True, 0, 4))), _if_then_else(and_(or_(False, True), ge(ones_diff_cols, max_row_clue)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_cols, 4), _if_then_else(False, zeros_diff_rows, max_col_clue)), _if_then_else(ge(compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 0, 3), _if_then_else(False, zeros_diff_cols, max_col_clue))), _if_then_else(False, _if_then_else(or_(True, True), _if_then_else(False, 4, 2), _if_then_else(True, ones_diff_cols, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_rows, 0), _if_then_else(False, 4, 4)))))
and_(and_(le(compare_blocks_rows, 4), or_(True, False)), or_(le(compare_blocks_cols, 1), or_(True, True)))
VAL TREES:
mul(add(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols)), add(mul(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, zeros_diff_rows)))
mul(add(add(mul(mul(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows))), add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)))), mul(mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(ones_diff_rows, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows))), add(add(add(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)))))
mul(mul(add(mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)))), add(mul(mul(mul(ones_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_cols)), mul(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols))), add(add(add(compare_blocks_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)))))
mul(mul(add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows))), mul(mul(add(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols))))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_cols)), add(add(ones_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, max_row_clue, ones_diff_cols)), le(_if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(True, ones_diff_rows, max_row_clue))), ge(_if_then_else(or_(False, True), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, max_col_clue, compare_blocks_cols)), _if_then_else(le(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, ones_diff_rows, 4)), _if_then_else(False, max_col_clue, _if_then_else(or_(False, True), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(ge(ones_diff_rows, ones_diff_rows), _if_then_else(False, 2, 2), compare_blocks_cols))), _if_then_else(True, 4, 1))))
ge(_if_then_else(True, _if_then_else(True, _if_then_else(True, compare_blocks_cols, compare_blocks_rows), compare_blocks_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(or_(False, False), _if_then_else(or_(False, False), compare_blocks_cols, zeros_diff_cols), _if_then_else(False, _if_then_else(True, max_col_clue, 4), ones_diff_rows)))
or_(and_(le(_if_then_else(le(1, 3), _if_then_else(ge(2, max_row_clue), _if_then_else(False, max_row_clue, compare_blocks_rows), _if_then_else(False, max_row_clue, _if_then_else(False, 2, max_row_clue))), _if_then_else(and_(False, and_(True, False)), 1, _if_then_else(True, ones_diff_rows, ones_diff_cols))), _if_then_else(ge(1, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, _if_then_else(True, compare_blocks_rows, _if_then_else(False, compare_blocks_rows, zeros_diff_rows))), _if_then_else(True, compare_blocks_rows, _if_then_else(False, 4, zeros_diff_rows)))), and_(ge(max_col_clue, max_col_clue), or_(False, True))), ge(compare_blocks_cols, _if_then_else(le(compare_blocks_cols, 4), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(compare_blocks_rows, compare_blocks_cols), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(True, False), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, _if_then_else(or_(ge(_if_then_else(ge(2, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, 4), _if_then_else(True, max_col_clue, compare_blocks_cols)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, 4, ones_diff_cols), _if_then_else(True, compare_blocks_cols, 4))), and_(and_(ge(ones_diff_cols, max_col_clue), or_(True, True)), le(_if_then_else(False, 3, 4), _if_then_else(False, compare_blocks_rows, max_row_clue)))), _if_then_else(le(_if_then_else(and_(False, True), _if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(True, ones_diff_rows, 1)), _if_then_else(or_(False, False), _if_then_else(False, 3, 0), _if_then_else(False, ones_diff_rows, max_row_clue))), _if_then_else(or_(le(max_col_clue, 0), le(max_row_clue, compare_blocks_cols)), _if_then_else(le(max_col_clue, 2), _if_then_else(False, compare_blocks_cols, max_col_clue), _if_then_else(True, 2, 2)), _if_then_else(le(ones_diff_rows, 3), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(True, max_col_clue, 1))), _if_then_else(and_(and_(True, False), or_(True, True)), _if_then_else(le(max_col_clue, compare_blocks_cols), _if_then_else(False, ones_diff_cols, max_row_clue), _if_then_else(False, 2, max_col_clue)), _if_then_else(le(ones_diff_rows, ones_diff_cols), _if_then_else(True, 3, 2), _if_then_else(False, zeros_diff_cols, 4)))), _if_then_else(le(_if_then_else(ge(2, zeros_diff_rows), _if_then_else(False, 2, max_col_clue), _if_then_else(True, 2, 2)), _if_then_else(and_(True, True), _if_then_else(True, 2, 2), _if_then_else(True, 0, ones_diff_rows))), _if_then_else(ge(_if_then_else(False, ones_diff_cols, 0), _if_then_else(True, 1, 1)), _if_then_else(and_(True, False), _if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(True, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(False, 1, 1), _if_then_else(True, 1, max_row_clue))), _if_then_else(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(True, 3, 4)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_cols, ones_diff_rows), _if_then_else(False, compare_blocks_rows, 0)), _if_then_else(or_(False, False), _if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(True, 1, 2)))))), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), or_(or_(or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), True), False), and_(False, False)))))
or_(True, ge(_if_then_else(and_(False, False), _if_then_else(ge(ones_diff_rows, 1), zeros_diff_rows, zeros_diff_cols), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(le(_if_then_else(False, compare_blocks_cols, max_col_clue), 3), _if_then_else(True, ones_diff_rows, _if_then_else(False, 0, max_row_clue)), _if_then_else(False, 0, _if_then_else(True, ones_diff_rows, 4)))))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, _if_then_else(le(_if_then_else(True, 2, max_col_clue), _if_then_else(True, compare_blocks_rows, zeros_diff_rows)), _if_then_else(le(4, 1), _if_then_else(False, max_col_clue, 4), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(ge(4, compare_blocks_cols), _if_then_else(False, 1, ones_diff_rows), _if_then_else(True, 1, zeros_diff_rows)))), _if_then_else(False, max_row_clue, ones_diff_cols)), and_(True, False)), ge(_if_then_else(or_(False, True), _if_then_else(True, max_col_clue, compare_blocks_rows), max_col_clue), _if_then_else(and_(True, False), _if_then_else(le(max_col_clue, compare_blocks_rows), 4, zeros_diff_rows), _if_then_else(True, 4, 1))))
ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(True, 1, _if_then_else(True, zeros_diff_cols, compare_blocks_cols))))
or_(and_(and_(True, or_(True, True)), and_(ge(max_col_clue, max_col_clue), or_(False, True))), ge(_if_then_else(ge(zeros_diff_cols, 4), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, ones_diff_cols, max_col_clue)), _if_then_else(le(compare_blocks_cols, 4), max_col_clue, _if_then_else(True, 0, ones_diff_rows))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, 2), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(True, max_row_clue, _if_then_else(and_(and_(False, True), le(2, zeros_diff_rows)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, 4, 3)), _if_then_else(le(1, 1), _if_then_else(False, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, ones_diff_cols, ones_diff_rows)))), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(zeros_diff_rows, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), or_(or_(True, False), and_(False, False)))))
le(_if_then_else(le(compare_blocks_cols, 4), _if_then_else(ge(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, ones_diff_cols, zeros_diff_cols)), ones_diff_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, ones_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, max_row_clue)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), add(mul(mul(ones_diff_cols, mul(zeros_diff_cols, zeros_diff_rows)), add(compare_blocks_cols, ones_diff_rows)), mul(add(add(ones_diff_rows, mul(compare_blocks_cols, compare_blocks_cols)), mul(mul(zeros_diff_cols, compare_blocks_rows), ones_diff_cols)), add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), add(add(mul(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_cols)), mul(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, compare_blocks_cols))))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(add(add(add(ones_diff_cols, mul(mul(compare_blocks_rows, compare_blocks_cols), zeros_diff_rows)), add(compare_blocks_rows, compare_blocks_rows)), add(mul(add(zeros_diff_cols, mul(zeros_diff_rows, zeros_diff_rows)), zeros_diff_cols), mul(ones_diff_cols, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows)))), compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, max_row_clue, ones_diff_cols)), le(_if_then_else(and_(and_(True, True), ge(ones_diff_cols, 2)), _if_then_else(and_(True, True), _if_then_else(False, 0, 1), _if_then_else(True, ones_diff_rows, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_cols, 0), _if_then_else(True, ones_diff_cols, compare_blocks_rows))), _if_then_else(True, ones_diff_rows, max_row_clue))), ge(_if_then_else(or_(False, True), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, _if_then_else(False, 2, 2), compare_blocks_cols)), max_col_clue))
ge(_if_then_else(or_(False, False), _if_then_else(False, _if_then_else(True, compare_blocks_cols, compare_blocks_rows), compare_blocks_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(or_(False, False), _if_then_else(False, _if_then_else(or_(ge(2, compare_blocks_rows), ge(compare_blocks_rows, compare_blocks_cols)), _if_then_else(ge(zeros_diff_rows, 3), _if_then_else(False, 0, 0), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)), _if_then_else(ge(ones_diff_cols, max_row_clue), _if_then_else(True, max_col_clue, compare_blocks_cols), _if_then_else(True, max_col_clue, 1))), zeros_diff_cols), _if_then_else(False, 1, ones_diff_rows)))
or_(and_(and_(False, or_(True, True)), le(_if_then_else(le(3, ones_diff_cols), _if_then_else(True, 3, ones_diff_rows), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(le(3, _if_then_else(True, 0, _if_then_else(True, zeros_diff_cols, max_row_clue))), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, max_col_clue, zeros_diff_rows)))), ge(1, _if_then_else(le(compare_blocks_cols, 4), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, ones_diff_cols), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), False), or_(True, True)))
or_(ge(zeros_diff_rows, _if_then_else(True, 1, max_row_clue)), or_(le(compare_blocks_cols, 1), ge(zeros_diff_rows, ones_diff_rows)))
VAL TREES:
mul(mul(add(add(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_rows)), mul(mul(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows))), add(add(add(compare_blocks_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols)), add(mul(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, compare_blocks_cols)))), mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), add(mul(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows))), mul(mul(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, ones_diff_cols)))))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, mul(mul(mul(ones_diff_cols, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)))), add(compare_blocks_rows, zeros_diff_rows)))
mul(mul(add(zeros_diff_rows, compare_blocks_rows), add(ones_diff_rows, add(add(mul(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))), add(ones_diff_cols, compare_blocks_rows)))), add(mul(zeros_diff_rows, zeros_diff_cols), add(add(zeros_diff_rows, compare_blocks_rows), zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), mul(add(mul(add(ones_diff_cols, zeros_diff_rows), ones_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), add(add(zeros_diff_rows, ones_diff_rows), mul(mul(mul(ones_diff_cols, compare_blocks_cols), zeros_diff_rows), ones_diff_rows)))))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(mul(add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_rows)), add(mul(ones_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols))), ones_diff_rows), add(zeros_diff_cols, mul(mul(mul(ones_diff_cols, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows)), mul(mul(ones_diff_rows, add(ones_diff_rows, ones_diff_rows)), mul(ones_diff_cols, zeros_diff_cols))))))
mul(mul(add(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols))), add(mul(mul(mul(add(add(mul(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, ones_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_cols))), add(mul(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_cols, zeros_diff_rows)))), mul(mul(mul(add(zeros_diff_rows, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)), mul(mul(ones_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols))), mul(mul(add(ones_diff_cols, zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)), add(mul(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_rows))))), zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)), add(mul(ones_diff_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols)))), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
and_(or_(le(_if_then_else(or_(True, False), _if_then_else(True, 0, ones_diff_cols), _if_then_else(True, 3, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, 4))), ge(_if_then_else(or_(False, True), _if_then_else(False, 2, 2), _if_then_else(True, zeros_diff_cols, 1)), _if_then_else(ge(zeros_diff_rows, max_col_clue), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, 1)))), ge(_if_then_else(and_(and_(False, True), le(3, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(True, 2, 4)), _if_then_else(ge(max_col_clue, 4), _if_then_else(True, ones_diff_cols, 1), _if_then_else(True, ones_diff_cols, 0))), _if_then_else(le(_if_then_else(True, ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, 1)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(False, _if_then_else(False, zeros_diff_cols, 4), 4)), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_rows, max_col_clue), _if_then_else(True, compare_blocks_cols, ones_diff_cols)))))
ge(_if_then_else(ge(max_col_clue, 0), _if_then_else(False, 3, 1), 0), _if_then_else(ge(max_row_clue, 2), _if_then_else(True, 3, 2), _if_then_else(False, 2, max_col_clue)))
le(_if_then_else(or_(ge(_if_then_else(False, 1, compare_blocks_rows), _if_then_else(False, max_row_clue, compare_blocks_rows)), or_(le(2, ones_diff_cols), and_(True, True))), _if_then_else(or_(le(4, 4), le(compare_blocks_rows, ones_diff_rows)), _if_then_else(and_(False, le(compare_blocks_cols, 4)), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(False, 3, zeros_diff_rows)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, 2, compare_blocks_cols))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_col_clue), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(ge(4, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_row_clue, zeros_diff_rows)))), _if_then_else(or_(le(_if_then_else(True, compare_blocks_rows, 3), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)), le(_if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, max_row_clue, 3))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(True, 0, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(False, 1, 3), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(ge(ones_diff_cols, 1), _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, max_row_clue, zeros_diff_rows))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 1, 0)), _if_then_else(or_(True, False), _if_then_else(False, 1, compare_blocks_cols), _if_then_else(False, max_row_clue, zeros_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 4, 3)))))
le(_if_then_else(and_(True, True), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), 2)
or_(and_(le(ones_diff_cols, 1), le(compare_blocks_cols, 1)), ge(_if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(True, 1, zeros_diff_rows)))
VAL TREES:
add(add(add(compare_blocks_cols, mul(ones_diff_rows, compare_blocks_cols)), add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_cols))), mul(add(zeros_diff_cols, add(zeros_diff_rows, compare_blocks_cols)), add(zeros_diff_cols, ones_diff_rows)))
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), mul(add(add(mul(add(mul(add(mul(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, compare_blocks_cols)), add(add(compare_blocks_rows, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_rows))), mul(mul(mul(compare_blocks_cols, compare_blocks_cols), mul(zeros_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)))), mul(add(add(add(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows)), add(add(compare_blocks_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows))), add(mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols)), mul(add(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows))))), ones_diff_rows), add(compare_blocks_rows, ones_diff_rows)), add(add(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows)))))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, compare_blocks_cols)))
mul(add(add(add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_cols, ones_diff_cols)), mul(mul(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows))), mul(mul(mul(ones_diff_cols, compare_blocks_rows), add(mul(add(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_rows)), add(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows))), zeros_diff_cols)), add(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, zeros_diff_cols)))), mul(add(mul(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)), add(mul(ones_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(add(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_rows)))))
add(mul(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_rows)))
add(mul(mul(ones_diff_cols, add(ones_diff_rows, zeros_diff_cols)), add(compare_blocks_cols, compare_blocks_cols)), mul(add(ones_diff_rows, mul(compare_blocks_cols, zeros_diff_rows)), mul(zeros_diff_cols, mul(mul(add(add(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, ones_diff_cols))), mul(mul(mul(add(add(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols))), add(add(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_cols, compare_blocks_cols)), mul(add(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_cols)))), mul(mul(add(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows))), mul(add(mul(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_cols, compare_blocks_cols)))))))))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, max_row_clue, ones_diff_cols)), le(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, ones_diff_rows, max_row_clue))), ge(_if_then_else(or_(False, True), _if_then_else(True, max_col_clue, compare_blocks_rows), max_col_clue), _if_then_else(True, zeros_diff_cols, ones_diff_rows)))
ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, 0, 2)))
or_(and_(and_(False, or_(True, True)), and_(True, or_(False, True))), ge(_if_then_else(ge(zeros_diff_cols, 4), _if_then_else(True, _if_then_else(True, 1, zeros_diff_rows), ones_diff_rows), _if_then_else(False, ones_diff_cols, max_col_clue)), _if_then_else(le(compare_blocks_cols, 4), max_col_clue, _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, 2), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(ge(_if_then_else(True, ones_diff_cols, compare_blocks_cols), _if_then_else(False, 3, ones_diff_rows)), False), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), 1)), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), or_(or_(True, False), and_(False, False)))))
or_(ge(_if_then_else(ge(4, compare_blocks_cols), 3, zeros_diff_cols), _if_then_else(True, _if_then_else(True, _if_then_else(False, _if_then_else(False, 2, 4), max_row_clue), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(True, zeros_diff_cols, 4))), or_(or_(False, ge(max_col_clue, ones_diff_cols)), ge(zeros_diff_rows, ones_diff_rows)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(True, max_row_clue, ones_diff_cols)), le(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, ones_diff_rows, max_row_clue))), ge(_if_then_else(or_(False, True), _if_then_else(True, max_col_clue, compare_blocks_rows), max_col_clue), _if_then_else(and_(True, False), _if_then_else(le(max_col_clue, compare_blocks_rows), 4, zeros_diff_rows), _if_then_else(True, 4, 1))))
ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, 1, _if_then_else(True, zeros_diff_cols, 0))))
or_(and_(and_(False, or_(or_(True, True), True)), and_(ge(max_col_clue, max_col_clue), or_(False, True))), ge(_if_then_else(ge(zeros_diff_cols, 4), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, ones_diff_cols, max_col_clue)), _if_then_else(le(compare_blocks_cols, 4), max_col_clue, _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, 2), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(True, _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(True, _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), or_(or_(True, False), and_(False, False)))))
or_(ge(_if_then_else(ge(4, _if_then_else(or_(True, ge(_if_then_else(True, 1, 0), _if_then_else(True, compare_blocks_rows, max_col_clue))), _if_then_else(False, 1, max_row_clue), _if_then_else(True, zeros_diff_cols, 4))), 3, zeros_diff_cols), _if_then_else(True, _if_then_else(False, _if_then_else(False, 2, ones_diff_rows), max_row_clue), _if_then_else(True, zeros_diff_cols, 4))), or_(or_(False, ge(max_col_clue, ones_diff_cols)), ge(zeros_diff_rows, ones_diff_rows)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
and_(or_(True, ge(_if_then_else(or_(False, True), _if_then_else(False, 2, 2), _if_then_else(True, zeros_diff_cols, 1)), _if_then_else(ge(2, 2), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, 1)))), ge(_if_then_else(and_(and_(False, True), le(3, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(True, 2, 4)), _if_then_else(ge(max_col_clue, 4), _if_then_else(True, ones_diff_cols, 1), _if_then_else(True, ones_diff_cols, 0))), _if_then_else(le(_if_then_else(True, ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, 1)), _if_then_else(True, _if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4)), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_cols)))))
ge(_if_then_else(ge(max_col_clue, 0), _if_then_else(False, 3, 1), _if_then_else(True, _if_then_else(False, max_col_clue, zeros_diff_rows), compare_blocks_rows)), _if_then_else(True, _if_then_else(True, 3, 2), _if_then_else(False, 2, max_col_clue)))
le(_if_then_else(or_(ge(_if_then_else(True, compare_blocks_rows, zeros_diff_cols), compare_blocks_cols), or_(le(2, ones_diff_cols), and_(True, True))), _if_then_else(or_(le(4, 4), le(compare_blocks_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(False, 3, zeros_diff_rows)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, 2, compare_blocks_cols))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_col_clue), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(ge(4, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(False, ones_diff_cols, zeros_diff_cols))), _if_then_else(or_(le(_if_then_else(True, compare_blocks_rows, 3), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)), le(_if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, max_row_clue, 3))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(True, 0, compare_blocks_cols)), _if_then_else(ge(zeros_diff_cols, 4), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, ones_diff_cols, max_col_clue)), _if_then_else(ge(ones_diff_cols, 1), _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, zeros_diff_cols, zeros_diff_rows))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 1, 0)), _if_then_else(or_(True, False), _if_then_else(False, 1, compare_blocks_cols), _if_then_else(False, max_row_clue, zeros_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 4, 3)))))
le(_if_then_else(and_(True, True), max_row_clue, _if_then_else(False, _if_then_else(False, 4, zeros_diff_cols), zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 1, compare_blocks_cols)))
or_(True, ge(_if_then_else(False, _if_then_else(True, zeros_diff_rows, compare_blocks_cols), ones_diff_cols), _if_then_else(False, 1, 3)))
VAL TREES:
add(add(add(compare_blocks_cols, mul(ones_diff_rows, compare_blocks_cols)), add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_cols))), mul(add(zeros_diff_cols, add(zeros_diff_rows, compare_blocks_cols)), add(zeros_diff_cols, ones_diff_rows)))
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), mul(add(add(zeros_diff_rows, ones_diff_rows), add(compare_blocks_rows, ones_diff_rows)), add(add(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows)))))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, compare_blocks_cols)))
mul(add(add(add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_cols, ones_diff_cols)), mul(mul(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows))), mul(mul(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols)), add(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, zeros_diff_cols)))), mul(add(mul(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)), add(mul(ones_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(add(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_rows)))))
add(mul(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_rows)))
add(mul(mul(ones_diff_cols, add(ones_diff_rows, zeros_diff_cols)), add(compare_blocks_cols, compare_blocks_cols)), mul(add(ones_diff_rows, mul(compare_blocks_cols, zeros_diff_rows)), mul(zeros_diff_cols, mul(mul(add(add(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, ones_diff_cols))), compare_blocks_cols))))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, max_row_clue, ones_diff_cols)), le(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, ones_diff_rows, max_row_clue))), ge(_if_then_else(or_(False, True), _if_then_else(True, max_col_clue, compare_blocks_cols), max_col_clue), _if_then_else(True, zeros_diff_cols, ones_diff_rows)))
ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(or_(False, False), compare_blocks_cols, _if_then_else(False, 0, 2)))
or_(and_(and_(False, or_(True, True)), and_(True, or_(False, True))), ge(_if_then_else(ge(zeros_diff_cols, 4), _if_then_else(True, _if_then_else(True, 1, zeros_diff_rows), ones_diff_rows), _if_then_else(False, ones_diff_cols, max_row_clue)), _if_then_else(le(compare_blocks_cols, 4), max_col_clue, _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, 2), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(ge(_if_then_else(True, ones_diff_cols, compare_blocks_cols), _if_then_else(False, 3, ones_diff_rows)), False), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), 1)), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), or_(or_(True, False), and_(False, False)))))
or_(ge(_if_then_else(ge(4, compare_blocks_cols), 3, zeros_diff_cols), _if_then_else(True, _if_then_else(True, _if_then_else(False, _if_then_else(False, 2, 4), max_row_clue), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(True, zeros_diff_cols, 4))), or_(or_(False, ge(max_col_clue, ones_diff_cols)), ge(zeros_diff_rows, ones_diff_rows)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, max_row_clue, ones_diff_cols)), le(_if_then_else(and_(and_(True, True), ge(ones_diff_cols, 2)), _if_then_else(and_(True, True), _if_then_else(False, 0, 1), _if_then_else(True, ones_diff_rows, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_cols, 0), _if_then_else(True, ones_diff_cols, compare_blocks_rows))), _if_then_else(True, ones_diff_rows, max_row_clue))), ge(_if_then_else(or_(False, True), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, _if_then_else(False, 2, 2), compare_blocks_cols)), 3))
ge(_if_then_else(or_(False, False), _if_then_else(True, _if_then_else(True, compare_blocks_cols, compare_blocks_rows), compare_blocks_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(or_(False, False), _if_then_else(False, _if_then_else(or_(ge(2, compare_blocks_rows), ge(compare_blocks_rows, compare_blocks_cols)), _if_then_else(ge(zeros_diff_rows, 3), _if_then_else(False, 0, 0), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)), _if_then_else(ge(ones_diff_cols, max_row_clue), _if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, max_col_clue, 1))), zeros_diff_cols), _if_then_else(False, 1, ones_diff_rows)))
or_(and_(and_(False, le(_if_then_else(and_(False, or_(False, True)), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, 2, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(True, max_col_clue, 4)))), le(_if_then_else(le(3, ones_diff_cols), _if_then_else(True, 3, ones_diff_rows), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(le(3, _if_then_else(True, 0, _if_then_else(True, zeros_diff_cols, max_row_clue))), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, max_col_clue, 0)))), ge(1, _if_then_else(le(compare_blocks_cols, 4), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, ones_diff_cols), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(ge(_if_then_else(False, 0, max_row_clue), _if_then_else(False, max_col_clue, zeros_diff_cols)), max_row_clue, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), or_(or_(True, False), and_(False, False))), or_(True, True)))
or_(ge(zeros_diff_rows, ones_diff_rows), or_(le(compare_blocks_cols, 1), ge(zeros_diff_rows, 2)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(or_(le(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, ones_diff_rows, max_row_clue)), True), max_row_clue, ones_diff_cols)), le(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, ones_diff_rows, max_row_clue))), ge(_if_then_else(or_(False, True), _if_then_else(True, max_col_clue, compare_blocks_rows), max_col_clue), _if_then_else(True, zeros_diff_cols, ones_diff_rows)))
ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, 0, 2)))
or_(and_(and_(False, or_(True, True)), and_(True, or_(False, True))), ge(_if_then_else(ge(zeros_diff_cols, 4), _if_then_else(True, _if_then_else(True, 1, zeros_diff_rows), ones_diff_rows), _if_then_else(False, ones_diff_cols, max_col_clue)), _if_then_else(le(compare_blocks_cols, compare_blocks_cols), max_col_clue, _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, 2), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(ge(_if_then_else(True, ones_diff_cols, compare_blocks_cols), _if_then_else(False, 3, ones_diff_rows)), False), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), 1)), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), le(_if_then_else(True, max_col_clue, 2), _if_then_else(True, max_row_clue, ones_diff_rows)))))
or_(ge(_if_then_else(ge(4, compare_blocks_cols), 3, zeros_diff_cols), _if_then_else(True, _if_then_else(True, _if_then_else(False, _if_then_else(False, 2, 4), max_row_clue), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(True, zeros_diff_cols, 4))), or_(or_(False, False), ge(zeros_diff_rows, ones_diff_rows)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, zeros_diff_rows))), ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(add(add(ones_diff_rows, add(ones_diff_rows, zeros_diff_cols)), add(ones_diff_cols, zeros_diff_rows)), add(mul(compare_blocks_rows, ones_diff_rows), add(mul(ones_diff_rows, ones_diff_cols), compare_blocks_cols)))), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(mul(add(mul(compare_blocks_rows, ones_diff_cols), mul(ones_diff_rows, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, max_row_clue, ones_diff_cols)), False), ge(_if_then_else(or_(le(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, ones_diff_rows, max_row_clue)), True), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, max_col_clue, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(True, max_col_clue, max_row_clue), _if_then_else(True, _if_then_else(or_(and_(False, and_(False, False)), and_(le(_if_then_else(False, compare_blocks_cols, 1), 0), and_(False, False))), zeros_diff_cols, zeros_diff_cols), 1))))
ge(_if_then_else(or_(False, True), _if_then_else(True, 0, compare_blocks_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_cols, _if_then_else(or_(or_(or_(False, False), False), or_(or_(False, False), le(zeros_diff_cols, max_col_clue))), _if_then_else(and_(or_(False, False), ge(zeros_diff_cols, zeros_diff_cols)), _if_then_else(le(max_row_clue, ones_diff_rows), _if_then_else(False, 2, 2), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, 0, 1), _if_then_else(True, compare_blocks_cols, ones_diff_rows))), _if_then_else(le(_if_then_else(False, 3, 2), _if_then_else(False, 2, ones_diff_rows)), _if_then_else(le(compare_blocks_cols, 0), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(ge(max_col_clue, 0), _if_then_else(True, 2, max_col_clue), _if_then_else(False, 0, 2))))), _if_then_else(False, 2, ones_diff_rows)))
or_(and_(and_(False, or_(True, True)), and_(ge(max_col_clue, max_col_clue), or_(False, or_(or_(and_(or_(False, True), or_(True, False)), le(_if_then_else(False, zeros_diff_cols, max_col_clue), _if_then_else(True, max_col_clue, 3))), le(compare_blocks_cols, _if_then_else(or_(False, False), _if_then_else(False, 0, 4), _if_then_else(False, max_row_clue, ones_diff_rows))))))), ge(_if_then_else(ge(zeros_diff_cols, 4), _if_then_else(True, 0, ones_diff_rows), _if_then_else(True, ones_diff_cols, max_col_clue)), _if_then_else(le(compare_blocks_cols, 4), max_col_clue, _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, 2), _if_then_else(True, max_row_clue, _if_then_else(False, _if_then_else(True, compare_blocks_rows, 3), zeros_diff_cols))), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), _if_then_else(False, _if_then_else(or_(le(3, zeros_diff_rows), or_(False, False)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(max_col_clue, 1), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(False, 3, 1))), zeros_diff_cols)), _if_then_else(or_(True, ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows))), _if_then_else(False, ones_diff_rows, zeros_diff_cols), zeros_diff_cols), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), ge(1, 0)))
or_(ge(_if_then_else(ge(4, compare_blocks_cols), ones_diff_cols, zeros_diff_cols), _if_then_else(ge(_if_then_else(le(max_col_clue, zeros_diff_rows), 2, zeros_diff_cols), _if_then_else(False, _if_then_else(True, max_col_clue, 3), max_row_clue)), _if_then_else(le(4, zeros_diff_cols), 2, _if_then_else(True, max_row_clue, 3)), _if_then_else(True, _if_then_else(False, _if_then_else(False, 2, 4), max_row_clue), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)))), or_(or_(False, le(compare_blocks_cols, 0)), ge(zeros_diff_rows, ones_diff_rows)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(or_(False, False), max_row_clue, ones_diff_cols)), le(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, _if_then_else(or_(and_(False, True), and_(False, True)), _if_then_else(and_(True, False), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(le(_if_then_else(False, ones_diff_cols, max_row_clue), compare_blocks_cols), 2, max_col_clue)), _if_then_else(and_(False, False), _if_then_else(True, _if_then_else(False, 0, 2), zeros_diff_rows), _if_then_else(True, max_col_clue, _if_then_else(True, max_col_clue, _if_then_else(False, 0, 3))))), max_row_clue))), ge(_if_then_else(or_(False, True), _if_then_else(True, max_col_clue, compare_blocks_cols), max_col_clue), _if_then_else(True, zeros_diff_cols, ones_diff_rows)))
ge(_if_then_else(False, max_col_clue, _if_then_else(ge(_if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(True, _if_then_else(and_(True, True), 3, zeros_diff_rows), _if_then_else(ge(ones_diff_cols, 4), 2, _if_then_else(False, compare_blocks_rows, max_col_clue)))), _if_then_else(or_(False, False), _if_then_else(False, _if_then_else(True, ones_diff_rows, ones_diff_rows), 3), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(or_(True, True), compare_blocks_cols, zeros_diff_rows), _if_then_else(True, ones_diff_rows, 1)))), _if_then_else(or_(False, False), compare_blocks_cols, _if_then_else(False, 0, 2)))
or_(and_(and_(False, and_(le(_if_then_else(le(_if_then_else(True, zeros_diff_cols, ones_diff_cols), ones_diff_rows), ones_diff_rows, compare_blocks_rows), _if_then_else(False, _if_then_else(False, ones_diff_rows, max_row_clue), 2)), and_(ge(ones_diff_cols, _if_then_else(le(2, compare_blocks_cols), 3, 0)), ge(4, compare_blocks_cols)))), and_(True, le(ones_diff_rows, 0))), ge(_if_then_else(ge(zeros_diff_cols, 4), _if_then_else(True, _if_then_else(True, 1, zeros_diff_rows), ones_diff_rows), _if_then_else(False, ones_diff_cols, max_row_clue)), _if_then_else(le(compare_blocks_cols, 4), max_col_clue, _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, 2), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(ge(_if_then_else(True, ones_diff_cols, compare_blocks_cols), _if_then_else(False, 3, ones_diff_rows)), ge(_if_then_else(le(compare_blocks_rows, compare_blocks_cols), _if_then_else(True, 1, max_row_clue), _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)))), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), 1)), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(True, or_(or_(True, False), and_(False, False)))))
or_(ge(_if_then_else(ge(4, compare_blocks_cols), 3, zeros_diff_cols), _if_then_else(True, _if_then_else(ge(max_row_clue, ones_diff_rows), compare_blocks_cols, _if_then_else(and_(False, False), _if_then_else(False, 0, compare_blocks_rows), zeros_diff_rows)), _if_then_else(True, zeros_diff_cols, 4))), or_(or_(False, ge(max_col_clue, ones_diff_cols)), ge(zeros_diff_rows, ones_diff_rows)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, max_row_clue, ones_diff_cols)), le(_if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(True, ones_diff_rows, max_row_clue))), ge(_if_then_else(True, _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, max_col_clue, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(True, max_col_clue, max_row_clue), _if_then_else(True, 4, 1))))
ge(_if_then_else(or_(False, True), _if_then_else(True, _if_then_else(True, compare_blocks_cols, compare_blocks_rows), compare_blocks_rows), _if_then_else(False, ones_diff_cols, 0)), _if_then_else(or_(False, False), _if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 1, ones_diff_rows)))
or_(and_(False, le(compare_blocks_cols, _if_then_else(or_(and_(False, True), or_(False, True)), _if_then_else(and_(False, True), _if_then_else(True, 2, 1), _if_then_else(False, 2, compare_blocks_cols)), _if_then_else(ge(max_col_clue, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_rows), _if_then_else(False, max_col_clue, 1))))), ge(_if_then_else(ge(zeros_diff_cols, 4), _if_then_else(True, 0, ones_diff_rows), _if_then_else(False, ones_diff_cols, max_col_clue)), _if_then_else(le(compare_blocks_cols, 4), _if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, _if_then_else(or_(False, True), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 1, compare_blocks_cols))), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, max_col_clue), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), or_(or_(True, False), and_(False, False)))))
or_(ge(_if_then_else(ge(4, compare_blocks_cols), 3, zeros_diff_cols), _if_then_else(False, _if_then_else(False, 2, ones_diff_rows), max_row_clue)), False)
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, max_row_clue, ones_diff_cols)), le(_if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(True, ones_diff_rows, max_row_clue))), ge(_if_then_else(and_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, max_row_clue, ones_diff_cols)), True), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, max_col_clue, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(True, max_col_clue, max_row_clue), _if_then_else(True, 4, 1))))
ge(_if_then_else(or_(False, False), _if_then_else(True, _if_then_else(True, compare_blocks_cols, compare_blocks_rows), compare_blocks_rows), _if_then_else(False, ones_diff_cols, 0)), _if_then_else(False, _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, 1, ones_diff_rows)))
or_(and_(and_(False, or_(True, True)), and_(or_(True, False), or_(False, True))), ge(_if_then_else(ge(zeros_diff_cols, 4), _if_then_else(True, 0, ones_diff_rows), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(le(compare_blocks_cols, 4), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(_if_then_else(True, 4, _if_then_else(True, _if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 1, compare_blocks_cols))), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(or_(True, False), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, _if_then_else(or_(False, True), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 1, compare_blocks_cols)), 4))), or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), or_(or_(True, False), and_(False, False)))))
or_(ge(1, _if_then_else(True, _if_then_else(False, 3, 2), _if_then_else(or_(or_(True, ge(max_col_clue, ones_diff_cols)), ge(zeros_diff_rows, ones_diff_rows)), zeros_diff_cols, 4))), or_(or_(True, ge(max_col_clue, ones_diff_cols)), ge(ones_diff_rows, _if_then_else(True, _if_then_else(False, 1, max_row_clue), ones_diff_rows))))
VAL TREES:
add(mul(mul(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), add(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols))), zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(mul(mul(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols))), zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(add(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)), add(mul(ones_diff_cols, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))), add(mul(mul(compare_blocks_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows)))))
mul(mul(add(compare_blocks_cols, add(add(add(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols)))), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(mul(mul(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows))), mul(add(mul(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_cols, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)))), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, max_row_clue, ones_diff_cols)), le(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, ones_diff_rows, max_row_clue))), ge(_if_then_else(le(2, 1), _if_then_else(True, max_col_clue, compare_blocks_rows), max_col_clue), _if_then_else(True, zeros_diff_cols, ones_diff_rows)))
ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, 4, 4))
or_(and_(and_(False, or_(True, True)), and_(ge(max_col_clue, max_col_clue), or_(False, True))), ge(_if_then_else(ge(zeros_diff_cols, 4), _if_then_else(True, _if_then_else(True, 1, zeros_diff_rows), ones_diff_rows), _if_then_else(False, ones_diff_rows, max_col_clue)), _if_then_else(le(compare_blocks_cols, 4), max_col_clue, _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(4, _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(ge(_if_then_else(True, ones_diff_cols, compare_blocks_cols), _if_then_else(False, 3, ones_diff_rows)), False), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), or_(or_(True, False), and_(False, False)))))
or_(ge(_if_then_else(ge(4, compare_blocks_cols), 3, zeros_diff_cols), _if_then_else(True, _if_then_else(True, _if_then_else(False, _if_then_else(False, 2, 4), max_row_clue), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(True, zeros_diff_cols, 4))), or_(or_(False, ge(max_col_clue, ones_diff_cols)), ge(max_col_clue, ones_diff_rows)))
VAL TREES:
mul(add(mul(add(ones_diff_cols, compare_blocks_rows), zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(mul(mul(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(add(add(add(compare_blocks_cols, ones_diff_cols), add(zeros_diff_rows, ones_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_cols))), ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_rows), mul(zeros_diff_cols, zeros_diff_rows))), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(add(add(mul(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(mul(mul(compare_blocks_rows, compare_blocks_rows), ones_diff_cols), add(ones_diff_rows, compare_blocks_rows))), zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, max_row_clue, ones_diff_cols)), le(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(or_(le(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, ones_diff_rows, max_row_clue)), or_(and_(or_(False, False), and_(or_(le(ones_diff_cols, ones_diff_cols), True), True)), ge(_if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(and_(False, True), 4, 4)))), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, max_col_clue, compare_blocks_cols)))), ge(_if_then_else(or_(False, True), _if_then_else(True, max_col_clue, compare_blocks_rows), max_col_clue), _if_then_else(and_(True, False), _if_then_else(le(max_col_clue, compare_blocks_rows), 4, zeros_diff_rows), _if_then_else(True, 4, 1))))
ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_cols, _if_then_else(and_(ge(3, 1), le(1, 0)), _if_then_else(or_(ge(0, 1), False), _if_then_else(le(0, zeros_diff_cols), ones_diff_cols, _if_then_else(False, compare_blocks_rows, max_row_clue)), _if_then_else(True, 2, _if_then_else(True, 0, 4))), _if_then_else(ge(zeros_diff_rows, 3), _if_then_else(False, ones_diff_rows, _if_then_else(True, 0, max_col_clue)), _if_then_else(True, 2, compare_blocks_rows)))), ones_diff_rows))
or_(and_(and_(False, or_(True, or_(True, True))), and_(ge(max_col_clue, max_col_clue), or_(False, True))), ge(_if_then_else(ge(zeros_diff_cols, 4), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, ones_diff_cols, max_col_clue)), _if_then_else(le(compare_blocks_cols, 4), max_col_clue, _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, 2), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, _if_then_else(ge(_if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, max_col_clue), _if_then_else(True, max_row_clue, 1)), _if_then_else(or_(True, True), _if_then_else(False, 4, max_col_clue), _if_then_else(False, max_row_clue, zeros_diff_rows))), _if_then_else(and_(or_(False, True), ge(max_col_clue, 2)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, 3)), _if_then_else(ge(0, 3), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(False, zeros_diff_cols, zeros_diff_rows))), _if_then_else(ge(_if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, 4, 1)), _if_then_else(ge(compare_blocks_cols, zeros_diff_cols), _if_then_else(False, max_col_clue, 2), _if_then_else(False, max_col_clue, 1)), _if_then_else(ge(compare_blocks_rows, max_row_clue), _if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(True, 0, 4))))), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(True, False), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), or_(or_(True, False), and_(False, True)))))
or_(ge(_if_then_else(ge(4, compare_blocks_cols), 3, zeros_diff_cols), _if_then_else(True, _if_then_else(True, _if_then_else(False, 1, max_row_clue), _if_then_else(or_(or_(or_(and_(or_(False, False), le(zeros_diff_rows, compare_blocks_cols)), and_(le(compare_blocks_cols, max_row_clue), and_(False, False))), le(_if_then_else(le(3, 1), _if_then_else(True, 4, 1), _if_then_else(True, 0, max_row_clue)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, 4, compare_blocks_cols)))), ge(_if_then_else(and_(and_(False, True), le(max_col_clue, max_col_clue)), _if_then_else(le(3, ones_diff_rows), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, max_col_clue, 0)), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, 3))), _if_then_else(ge(_if_then_else(False, 0, 2), _if_then_else(True, max_col_clue, compare_blocks_rows)), _if_then_else(le(2, max_col_clue), _if_then_else(True, 3, zeros_diff_cols), _if_then_else(True, ones_diff_rows, 2)), _if_then_else(le(compare_blocks_rows, 1), _if_then_else(True, 0, max_row_clue), _if_then_else(True, 4, compare_blocks_cols))))), zeros_diff_cols, zeros_diff_rows)), zeros_diff_rows)), or_(or_(False, ge(max_col_clue, ones_diff_cols)), ge(zeros_diff_rows, ones_diff_rows)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
le(_if_then_else(ge(_if_then_else(True, max_col_clue, compare_blocks_rows), max_row_clue), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(True, _if_then_else(False, max_row_clue, max_col_clue), 1)), _if_then_else(le(_if_then_else(and_(True, False), _if_then_else(le(max_col_clue, compare_blocks_rows), 4, zeros_diff_rows), _if_then_else(True, 4, 1)), _if_then_else(False, max_col_clue, ones_diff_rows)), _if_then_else(True, 2, _if_then_else(False, max_col_clue, zeros_diff_rows)), _if_then_else(ge(ones_diff_rows, ones_diff_rows), 0, zeros_diff_cols)))
or_(or_(or_(False, False), ge(zeros_diff_cols, _if_then_else(True, max_col_clue, _if_then_else(False, 2, ones_diff_rows)))), or_(or_(True, True), and_(or_(False, False), True)))
and_(or_(ge(_if_then_else(ge(3, compare_blocks_rows), _if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(False, ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, max_row_clue, ones_diff_cols))), le(_if_then_else(ge(compare_blocks_rows, ones_diff_rows), _if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(False, 1, ones_diff_rows)), _if_then_else(ge(0, 2), _if_then_else(True, zeros_diff_rows, 2), _if_then_else(False, ones_diff_rows, zeros_diff_rows)))), and_(ge(_if_then_else(and_(True, True), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(False, 4, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(True, 4, 0), _if_then_else(True, compare_blocks_rows, compare_blocks_cols))), and_(ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), and_(le(compare_blocks_cols, zeros_diff_cols), and_(False, False)))))
le(_if_then_else(le(_if_then_else(ge(ones_diff_cols, max_col_clue), _if_then_else(True, zeros_diff_rows, 2), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(or_(False, True), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(False, 3, zeros_diff_cols))), _if_then_else(or_(and_(True, True), le(compare_blocks_rows, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(True, 2, 3), _if_then_else(False, 4, 2)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 2, 2))), _if_then_else(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(True, max_col_clue, _if_then_else(False, max_row_clue, 2))), _if_then_else(ge(zeros_diff_rows, 0), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, compare_blocks_rows, 3)), _if_then_else(or_(True, True), max_col_clue, _if_then_else(False, ones_diff_rows, max_row_clue)))), _if_then_else(ge(_if_then_else(ge(ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(ge(3, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(True, 0, 4))), _if_then_else(and_(or_(False, True), ge(ones_diff_cols, max_row_clue)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_cols, 4), _if_then_else(False, zeros_diff_rows, max_col_clue)), _if_then_else(ge(compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 0, 3), _if_then_else(False, zeros_diff_cols, max_col_clue))), _if_then_else(ge(_if_then_else(False, 1, ones_diff_rows), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(False, 4, 2), _if_then_else(False, 4, 2)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_rows, 0), _if_then_else(False, 4, 4)))))
and_(le(4, zeros_diff_cols), ge(_if_then_else(False, 4, ones_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)))
VAL TREES:
mul(add(add(add(mul(add(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(zeros_diff_cols, ones_diff_cols), add(add(compare_blocks_cols, compare_blocks_cols), add(add(compare_blocks_cols, zeros_diff_cols), zeros_diff_cols)))), ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols)), add(mul(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, zeros_diff_rows)))
mul(add(add(mul(mul(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows))), add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)))), mul(mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(ones_diff_rows, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows))), add(add(add(zeros_diff_cols, zeros_diff_cols), mul(mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), add(add(add(ones_diff_rows, zeros_diff_cols), zeros_diff_rows), add(zeros_diff_rows, zeros_diff_rows)))), mul(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)))))
mul(mul(add(mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)))), add(mul(mul(mul(ones_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_cols)), mul(add(ones_diff_cols, zeros_diff_cols), mul(add(mul(ones_diff_cols, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_cols)), mul(mul(mul(mul(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows))))), add(add(add(compare_blocks_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)))))
mul(mul(mul(add(add(mul(add(compare_blocks_rows, compare_blocks_cols), mul(ones_diff_rows, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_cols, compare_blocks_rows))), add(mul(mul(compare_blocks_rows, zeros_diff_rows), add(ones_diff_rows, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_rows)))), add(mul(add(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, compare_blocks_rows))), add(add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows))))), mul(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows))), mul(mul(add(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols))))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_cols)), add(add(add(add(mul(add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows))), mul(mul(mul(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), mul(ones_diff_cols, zeros_diff_cols)))), mul(add(mul(mul(compare_blocks_cols, zeros_diff_cols), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_rows, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols))))), compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, max_row_clue, ones_diff_cols)), le(_if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(True, ones_diff_rows, max_row_clue))), ge(_if_then_else(or_(False, True), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, max_col_clue, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(False, max_col_clue, _if_then_else(or_(False, True), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(ge(ones_diff_rows, ones_diff_rows), _if_then_else(False, 2, 2), compare_blocks_cols))), _if_then_else(True, 4, 1))))
ge(_if_then_else(True, _if_then_else(True, _if_then_else(True, compare_blocks_cols, compare_blocks_rows), compare_blocks_rows), _if_then_else(ge(_if_then_else(le(zeros_diff_rows, 1), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, max_row_clue, zeros_diff_cols))), ones_diff_cols, 0)), _if_then_else(or_(False, False), _if_then_else(or_(False, False), compare_blocks_cols, zeros_diff_cols), _if_then_else(False, _if_then_else(True, max_col_clue, 4), ones_diff_rows)))
or_(and_(and_(False, True), and_(ge(max_col_clue, max_col_clue), or_(False, ge(_if_then_else(ge(zeros_diff_cols, 1), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, 2, compare_blocks_rows)), _if_then_else(le(4, compare_blocks_rows), _if_then_else(False, zeros_diff_cols, 4), _if_then_else(False, 4, 3)))))), ge(compare_blocks_cols, _if_then_else(le(compare_blocks_cols, 4), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(compare_blocks_rows, compare_blocks_cols), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), or_(or_(or_(ge(_if_then_else(True, _if_then_else(le(_if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(True, 3, 1), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(and_(True, False), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, ones_diff_cols, 4))), 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), True), False), and_(False, False)))))
or_(True, or_(and_(ge(ones_diff_cols, max_row_clue), le(zeros_diff_cols, 1)), le(_if_then_else(True, 3, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, _if_then_else(True, 4, 2)))))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
or_(or_(ge(_if_then_else(False, compare_blocks_cols, max_col_clue), _if_then_else(False, max_row_clue, ones_diff_cols)), True), ge(_if_then_else(or_(True, ge(zeros_diff_rows, max_col_clue)), _if_then_else(True, max_col_clue, 3), _if_then_else(False, max_col_clue, 4)), _if_then_else(and_(True, False), _if_then_else(True, max_col_clue, max_row_clue), _if_then_else(False, 1, 1))))
ge(_if_then_else(or_(False, True), _if_then_else(True, 0, compare_blocks_rows), _if_then_else(le(_if_then_else(or_(False, True), 1, _if_then_else(False, 3, 1)), compare_blocks_cols), ones_diff_cols, 0)), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(True, 2, ones_diff_rows)))
or_(and_(and_(and_(True, ge(max_col_clue, max_col_clue)), False), and_(ge(_if_then_else(False, ones_diff_cols, _if_then_else(False, 4, _if_then_else(ge(zeros_diff_cols, 4), _if_then_else(True, zeros_diff_rows, zeros_diff_cols), _if_then_else(False, ones_diff_cols, max_col_clue)))), max_col_clue), or_(False, True))), False)
and_(le(_if_then_else(le(_if_then_else(True, compare_blocks_rows, 2), _if_then_else(True, 2, ones_diff_rows)), _if_then_else(ge(4, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, _if_then_else(ge(_if_then_else(True, ones_diff_cols, compare_blocks_cols), _if_then_else(False, 3, ones_diff_rows)), _if_then_else(or_(ge(_if_then_else(True, 0, _if_then_else(or_(True, True), 3, ones_diff_rows)), _if_then_else(False, compare_blocks_rows, max_row_clue)), or_(and_(False, True), or_(le(zeros_diff_cols, 0), and_(False, True)))), _if_then_else(False, 3, compare_blocks_cols), _if_then_else(True, 0, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, max_row_clue), _if_then_else(True, compare_blocks_cols, ones_diff_rows))), max_row_clue), _if_then_else(False, max_row_clue, zeros_diff_cols)), _if_then_else(or_(True, True), 4, _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(_if_then_else(and_(True, True), _if_then_else(True, 3, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), or_(or_(False, True), and_(False, False)))))
or_(ge(_if_then_else(ge(4, compare_blocks_cols), 3, zeros_diff_cols), _if_then_else(True, _if_then_else(False, 1, max_row_clue), _if_then_else(True, _if_then_else(True, _if_then_else(True, 1, max_row_clue), _if_then_else(ge(ones_diff_cols, ones_diff_rows), _if_then_else(ge(_if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(False, _if_then_else(False, 1, 4), max_row_clue)), _if_then_else(le(zeros_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 0, compare_blocks_cols)), _if_then_else(or_(True, and_(False, False)), _if_then_else(True, _if_then_else(True, _if_then_else(True, 2, 4), _if_then_else(False, 2, 3)), zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 1))), 4)), 4))), or_(or_(False, le(compare_blocks_cols, 0)), ge(zeros_diff_rows, _if_then_else(False, zeros_diff_rows, zeros_diff_cols))))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, max_row_clue, ones_diff_cols)), le(_if_then_else(le(2, _if_then_else(True, ones_diff_rows, _if_then_else(ge(compare_blocks_rows, ones_diff_rows), ones_diff_cols, 1))), max_row_clue, max_col_clue), _if_then_else(True, ones_diff_rows, max_row_clue))), ge(_if_then_else(or_(False, True), _if_then_else(True, max_col_clue, compare_blocks_rows), max_col_clue), _if_then_else(and_(True, False), _if_then_else(le(max_col_clue, compare_blocks_rows), 4, zeros_diff_rows), _if_then_else(True, 4, 1))))
ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, _if_then_else(True, ones_diff_rows, 2), _if_then_else(True, zeros_diff_cols, 0))))
or_(and_(and_(False, or_(or_(True, True), True)), and_(ge(max_col_clue, max_col_clue), or_(False, True))), ge(zeros_diff_rows, _if_then_else(le(compare_blocks_cols, 4), max_col_clue, _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, max_row_clue), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(True, _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(True, False), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(and_(True, True), zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), or_(or_(True, False), and_(False, False)))))
or_(ge(_if_then_else(ge(4, _if_then_else(or_(True, ge(_if_then_else(False, 1, 0), _if_then_else(True, compare_blocks_rows, max_col_clue))), _if_then_else(False, 1, max_row_clue), _if_then_else(True, zeros_diff_cols, 4))), 3, zeros_diff_cols), _if_then_else(True, _if_then_else(False, _if_then_else(False, 2, ones_diff_rows), max_row_clue), _if_then_else(True, zeros_diff_cols, 4))), or_(or_(False, ge(max_col_clue, ones_diff_cols)), ge(zeros_diff_rows, ones_diff_rows)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_cols)), mul(add(zeros_diff_cols, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols))), mul(add(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_rows)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)))), mul(mul(add(mul(ones_diff_cols, zeros_diff_rows), add(zeros_diff_rows, ones_diff_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_cols, zeros_diff_rows))))), zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), mul(add(add(add(mul(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, compare_blocks_cols))), add(add(add(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, ones_diff_cols)), add(mul(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_cols, compare_blocks_cols)))), add(mul(mul(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(add(add(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_cols)), mul(add(zeros_diff_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)))))))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(mul(add(mul(mul(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, zeros_diff_cols))), add(mul(mul(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), add(add(ones_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)))), mul(add(mul(mul(compare_blocks_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, ones_diff_cols), mul(compare_blocks_rows, compare_blocks_rows)), mul(mul(zeros_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_cols))))), zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, add(mul(add(mul(ones_diff_cols, ones_diff_rows), zeros_diff_cols), add(mul(zeros_diff_rows, zeros_diff_rows), mul(mul(ones_diff_rows, compare_blocks_rows), ones_diff_rows))), mul(mul(mul(zeros_diff_cols, add(compare_blocks_cols, zeros_diff_cols)), compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_cols)))), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
or_(or_(le(_if_then_else(ge(_if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, zeros_diff_rows)), _if_then_else(and_(True, False), _if_then_else(False, 0, ones_diff_cols), _if_then_else(False, 0, 3)), _if_then_else(le(ones_diff_cols, 0), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, zeros_diff_rows, compare_blocks_rows))), _if_then_else(and_(and_(True, True), ge(ones_diff_rows, max_row_clue)), _if_then_else(le(zeros_diff_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, max_row_clue, 2)), _if_then_else(le(compare_blocks_cols, max_col_clue), _if_then_else(False, max_col_clue, 2), _if_then_else(False, ones_diff_rows, ones_diff_cols)))), le(_if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(True, ones_diff_rows, max_row_clue))), ge(_if_then_else(or_(False, True), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, max_col_clue, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(False, max_col_clue, _if_then_else(or_(False, True), _if_then_else(True, max_col_clue, compare_blocks_rows), 4)), _if_then_else(True, 4, 1))))
ge(_if_then_else(le(_if_then_else(or_(False, False), _if_then_else(False, 4, 4), _if_then_else(True, 2, 3)), _if_then_else(and_(True, False), _if_then_else(True, 3, ones_diff_cols), _if_then_else(False, 2, ones_diff_rows))), _if_then_else(True, _if_then_else(True, compare_blocks_cols, compare_blocks_rows), compare_blocks_rows), _if_then_else(ge(_if_then_else(le(zeros_diff_rows, 1), _if_then_else(False, _if_then_else(True, compare_blocks_cols, compare_blocks_rows), compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, max_row_clue, zeros_diff_cols))), ones_diff_cols, 0)), _if_then_else(or_(False, False), _if_then_else(or_(False, False), compare_blocks_cols, zeros_diff_cols), _if_then_else(False, _if_then_else(True, max_col_clue, 4), ones_diff_rows)))
or_(and_(and_(False, True), and_(ge(max_col_clue, max_col_clue), le(_if_then_else(ge(zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 2, 0), _if_then_else(True, 1, zeros_diff_cols)), _if_then_else(ge(compare_blocks_rows, ones_diff_rows), _if_then_else(False, 3, 3), _if_then_else(True, max_col_clue, 3))))), ge(compare_blocks_cols, _if_then_else(le(compare_blocks_cols, 4), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(compare_blocks_rows, compare_blocks_cols), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(ge(_if_then_else(and_(le(max_row_clue, 4), or_(True, False)), _if_then_else(ge(max_col_clue, max_col_clue), _if_then_else(True, zeros_diff_rows, 4), _if_then_else(True, 2, 3)), _if_then_else(and_(False, True), _if_then_else(True, ones_diff_rows, 4), _if_then_else(False, 2, zeros_diff_cols))), _if_then_else(le(_if_then_else(False, 2, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(2, max_row_clue), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(True, 3, 1)), _if_then_else(le(0, max_row_clue), _if_then_else(True, 4, 0), _if_then_else(True, compare_blocks_rows, 0)))), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), or_(or_(or_(ge(_if_then_else(True, _if_then_else(le(_if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(True, 3, 1), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(and_(True, False), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, ones_diff_cols, 4))), 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), True), False), and_(False, False)))))
or_(True, or_(and_(ge(ones_diff_cols, _if_then_else(ge(_if_then_else(ge(4, zeros_diff_rows), _if_then_else(False, ones_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, ones_diff_rows)), _if_then_else(and_(True, False), _if_then_else(False, max_col_clue, max_col_clue), _if_then_else(False, 1, 4))), _if_then_else(ge(_if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, 4, 2)), _if_then_else(ge(zeros_diff_rows, compare_blocks_cols), _if_then_else(True, compare_blocks_cols, 4), _if_then_else(False, 2, 3)), _if_then_else(or_(True, True), _if_then_else(False, max_row_clue, 3), _if_then_else(False, compare_blocks_cols, 2))), _if_then_else(or_(le(compare_blocks_rows, compare_blocks_cols), ge(zeros_diff_rows, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, max_col_clue, zeros_diff_rows)), _if_then_else(ge(ones_diff_cols, 4), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_rows, max_row_clue))))), le(zeros_diff_cols, 1)), le(_if_then_else(True, 3, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, _if_then_else(True, 4, 2)))))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
or_(or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(False, max_row_clue, ones_diff_cols)), le(_if_then_else(False, 1, max_col_clue), _if_then_else(True, ones_diff_rows, max_row_clue))), ge(_if_then_else(or_(False, True), _if_then_else(True, max_col_clue, compare_blocks_rows), max_col_clue), _if_then_else(and_(True, False), max_row_clue, _if_then_else(ge(ones_diff_rows, ones_diff_rows), _if_then_else(False, 2, 2), compare_blocks_cols))))
ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(or_(and_(True, False), False), _if_then_else(True, _if_then_else(True, zeros_diff_cols, compare_blocks_rows), zeros_diff_cols), _if_then_else(False, 1, _if_then_else(True, zeros_diff_cols, compare_blocks_cols))))
or_(and_(and_(False, or_(True, or_(True, True))), and_(ge(max_col_clue, max_col_clue), or_(False, True))), ge(_if_then_else(ge(zeros_diff_cols, 4), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, ones_diff_cols, max_col_clue)), _if_then_else(le(_if_then_else(and_(or_(False, ge(_if_then_else(ge(zeros_diff_cols, 1), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, 2, compare_blocks_rows)), _if_then_else(le(4, compare_blocks_rows), _if_then_else(False, zeros_diff_cols, 4), _if_then_else(False, 4, 3)))), ge(_if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, compare_blocks_rows))), _if_then_else(and_(and_(False, False), ge(4, 4)), _if_then_else(ge(zeros_diff_cols, 1), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(ge(_if_then_else(True, ones_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue)), 4, ones_diff_cols)), _if_then_else(le(3, max_row_clue), _if_then_else(True, 4, 0), _if_then_else(False, zeros_diff_cols, ones_diff_rows))), _if_then_else(le(_if_then_else(True, 4, 4), _if_then_else(True, compare_blocks_cols, compare_blocks_rows)), _if_then_else(and_(False, False), _if_then_else(False, 4, 1), _if_then_else(True, 3, 0)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, ones_diff_rows)))), 4), max_col_clue, _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, 2), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(or_(ge(_if_then_else(True, zeros_diff_rows, _if_then_else(False, 1, 1)), 2), and_(True, False)), _if_then_else(or_(False, True), _if_then_else(False, zeros_diff_rows, 0), _if_then_else(False, 4, compare_blocks_cols)), _if_then_else(ge(ones_diff_cols, ones_diff_cols), _if_then_else(True, max_row_clue, _if_then_else(False, _if_then_else(False, 3, zeros_diff_cols), ones_diff_rows)), _if_then_else(False, ones_diff_rows, _if_then_else(False, 1, 2))))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(True, False), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(False, or_(or_(True, False), and_(False, False)))))
and_(and_(and_(True, True), ge(max_col_clue, ones_diff_rows)), ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(True, max_row_clue, ones_diff_rows)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_cols)), mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_cols)))))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, mul(add(add(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_cols, ones_diff_rows))))))
mul(add(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_cols, add(ones_diff_rows, mul(compare_blocks_rows, ones_diff_rows)))), add(add(add(ones_diff_rows, compare_blocks_cols), mul(add(compare_blocks_cols, zeros_diff_cols), ones_diff_cols)), mul(ones_diff_cols, ones_diff_rows))), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(add(mul(compare_blocks_cols, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols)), add(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols))), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), mul(mul(mul(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, zeros_diff_cols)), mul(add(mul(zeros_diff_rows, ones_diff_rows), compare_blocks_cols), add(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, ones_diff_rows))))))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(mul(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, zeros_diff_cols))), compare_blocks_rows), zeros_diff_rows))))
COND TREES:
and_(or_(le(_if_then_else(or_(True, False), _if_then_else(True, 0, ones_diff_cols), _if_then_else(True, 3, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, 4))), ge(_if_then_else(or_(False, False), _if_then_else(False, 2, 2), _if_then_else(True, zeros_diff_cols, 1)), _if_then_else(ge(zeros_diff_rows, max_col_clue), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, 1)))), ge(_if_then_else(and_(and_(False, True), le(3, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(True, 2, 4)), _if_then_else(ge(max_col_clue, 4), _if_then_else(True, ones_diff_cols, 1), _if_then_else(True, ones_diff_cols, 0))), _if_then_else(le(_if_then_else(True, ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, 1)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(False, _if_then_else(ge(ones_diff_rows, ones_diff_rows), 0, zeros_diff_cols), 4)), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_rows, max_col_clue), _if_then_else(True, compare_blocks_cols, ones_diff_cols)))))
ge(_if_then_else(ge(max_col_clue, 0), _if_then_else(False, 3, 1), 0), _if_then_else(ge(max_row_clue, 2), _if_then_else(False, 3, 2), _if_then_else(False, 2, _if_then_else(False, 1, ones_diff_rows))))
le(_if_then_else(or_(ge(_if_then_else(False, 1, compare_blocks_rows), _if_then_else(False, max_row_clue, compare_blocks_rows)), or_(le(2, ones_diff_cols), and_(True, True))), _if_then_else(or_(le(4, 4), le(compare_blocks_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(False, 3, zeros_diff_rows)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, 2, compare_blocks_cols))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_col_clue), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(ge(4, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_row_clue, zeros_diff_rows)))), _if_then_else(or_(le(_if_then_else(True, compare_blocks_rows, 3), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)), le(_if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, max_row_clue, 3))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(True, 0, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(False, 1, 3), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(ge(ones_diff_cols, 1), _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, max_row_clue, zeros_diff_rows))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 1, 0)), _if_then_else(or_(True, ge(zeros_diff_cols, 4)), _if_then_else(False, 1, compare_blocks_cols), _if_then_else(False, max_row_clue, zeros_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 4, 3)))))
le(_if_then_else(and_(ge(ones_diff_cols, max_row_clue), True), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(False, 4, zeros_diff_cols)), 2)
or_(and_(le(1, 1), False), ge(_if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(True, 1, 3)))
VAL TREES:
add(add(add(compare_blocks_cols, mul(ones_diff_rows, compare_blocks_cols)), add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_cols))), mul(add(zeros_diff_cols, add(zeros_diff_rows, compare_blocks_cols)), add(zeros_diff_cols, ones_diff_rows)))
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), mul(add(add(zeros_diff_rows, ones_diff_rows), add(compare_blocks_rows, ones_diff_rows)), add(add(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows)))))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, compare_blocks_cols)))
mul(add(add(add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_cols, ones_diff_cols)), mul(mul(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows))), mul(mul(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols)), add(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, zeros_diff_cols)))), mul(add(mul(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)), add(mul(ones_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(add(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_rows)))))
add(mul(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_rows)))
add(mul(mul(ones_diff_cols, add(ones_diff_rows, zeros_diff_cols)), add(compare_blocks_cols, compare_blocks_cols)), mul(add(ones_diff_rows, mul(compare_blocks_cols, zeros_diff_rows)), mul(zeros_diff_cols, mul(mul(add(add(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, ones_diff_cols))), compare_blocks_cols))))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, max_row_clue, ones_diff_cols)), le(_if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(True, ones_diff_rows, max_row_clue))), ge(_if_then_else(or_(False, True), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(True, max_col_clue, 4)), _if_then_else(and_(True, False), _if_then_else(False, max_col_clue, max_row_clue), _if_then_else(True, 4, 1))))
ge(_if_then_else(True, _if_then_else(True, _if_then_else(True, compare_blocks_cols, 3), 0), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), max_col_clue))
or_(and_(and_(False, or_(True, True)), and_(ge(max_col_clue, max_col_clue), or_(False, True))), ge(_if_then_else(False, _if_then_else(True, 0, 4), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(le(compare_blocks_cols, 4), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, _if_then_else(or_(False, True), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 1, compare_blocks_cols))), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(ge(_if_then_else(and_(True, True), _if_then_else(or_(False, True), compare_blocks_rows, max_row_clue), _if_then_else(False, 4, zeros_diff_cols)), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), or_(or_(True, False), False))))
or_(le(compare_blocks_cols, ones_diff_cols), False)
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, _if_then_else(le(_if_then_else(True, 2, max_col_clue), _if_then_else(True, compare_blocks_rows, zeros_diff_rows)), _if_then_else(le(4, 1), _if_then_else(False, max_col_clue, 4), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(ge(4, compare_blocks_cols), _if_then_else(False, 1, ones_diff_rows), _if_then_else(True, 1, zeros_diff_rows)))), _if_then_else(False, max_row_clue, ones_diff_cols)), le(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, ones_diff_rows, 4))), ge(_if_then_else(or_(False, True), _if_then_else(True, max_col_clue, compare_blocks_rows), max_col_clue), _if_then_else(and_(True, False), _if_then_else(le(max_col_clue, compare_blocks_rows), 4, zeros_diff_rows), _if_then_else(True, 4, 1))))
ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(True, 1, _if_then_else(True, zeros_diff_cols, compare_blocks_cols))))
or_(and_(and_(False, or_(True, True)), and_(ge(max_col_clue, max_col_clue), or_(False, True))), ge(_if_then_else(ge(zeros_diff_cols, 4), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, ones_diff_cols, max_col_clue)), _if_then_else(le(compare_blocks_cols, 4), max_col_clue, _if_then_else(True, 0, ones_diff_rows))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, 2), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(True, max_row_clue, _if_then_else(and_(and_(False, True), le(2, zeros_diff_rows)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, 4, 3)), _if_then_else(le(1, 1), _if_then_else(False, zeros_diff_rows, compare_blocks_rows), _if_then_else(le(_if_then_else(le(_if_then_else(ge(4, 1), _if_then_else(True, 2, 0), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(ones_diff_rows, compare_blocks_cols), _if_then_else(False, max_row_clue, 4), _if_then_else(False, 2, ones_diff_rows))), _if_then_else(le(_if_then_else(True, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, 0, 4)), _if_then_else(or_(False, False), _if_then_else(True, 2, 0), _if_then_else(True, 1, ones_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, 0, ones_diff_rows), _if_then_else(False, max_row_clue, 0))), _if_then_else(ge(_if_then_else(True, zeros_diff_cols, 0), _if_then_else(False, 0, 0)), _if_then_else(ge(1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, 4, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(True, compare_blocks_cols, 2), _if_then_else(True, max_col_clue, compare_blocks_cols)))), _if_then_else(le(_if_then_else(or_(True, True), _if_then_else(True, 4, 1), _if_then_else(False, compare_blocks_rows, 3)), _if_then_else(and_(True, True), _if_then_else(True, 2, 2), _if_then_else(True, ones_diff_rows, 1))), _if_then_else(or_(ge(4, ones_diff_rows), or_(False, False)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_rows, ones_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(False, max_row_clue, 4))), _if_then_else(ge(_if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, ones_diff_cols, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(False, 0, ones_diff_cols), _if_then_else(False, ones_diff_rows, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_cols, ones_diff_cols), _if_then_else(True, ones_diff_cols, ones_diff_cols))))), ones_diff_cols, ones_diff_rows)))), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(True, False), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(zeros_diff_rows, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), or_(or_(True, False), and_(False, False)))))
le(_if_then_else(le(compare_blocks_cols, 4), _if_then_else(ge(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, ones_diff_cols, zeros_diff_cols)), ones_diff_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, ones_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, max_row_clue)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
le(_if_then_else(ge(_if_then_else(True, max_col_clue, compare_blocks_rows), max_row_clue), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(True, _if_then_else(False, max_row_clue, max_col_clue), 1)), _if_then_else(le(_if_then_else(and_(True, False), _if_then_else(le(max_col_clue, compare_blocks_rows), 4, zeros_diff_rows), _if_then_else(True, 4, 1)), _if_then_else(False, max_col_clue, ones_diff_rows)), _if_then_else(True, 2, _if_then_else(False, max_col_clue, zeros_diff_rows)), _if_then_else(ge(ones_diff_rows, ones_diff_rows), 0, zeros_diff_cols)))
or_(or_(or_(False, False), ge(zeros_diff_cols, _if_then_else(True, max_col_clue, _if_then_else(False, 2, ones_diff_rows)))), or_(or_(True, True), and_(or_(False, False), True)))
and_(or_(ge(_if_then_else(ge(3, compare_blocks_rows), _if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(False, ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, max_row_clue, ones_diff_cols))), le(_if_then_else(ge(compare_blocks_rows, ones_diff_rows), _if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(False, 1, ones_diff_rows)), _if_then_else(ge(0, 2), _if_then_else(True, zeros_diff_rows, 2), _if_then_else(False, ones_diff_rows, zeros_diff_rows)))), and_(ge(_if_then_else(and_(True, True), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(False, 4, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(True, 4, 0), _if_then_else(True, compare_blocks_rows, compare_blocks_cols))), and_(ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), and_(le(compare_blocks_cols, _if_then_else(ge(_if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, 0)), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(and_(False, False), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, 0, compare_blocks_rows)))), and_(False, False)))))
le(_if_then_else(le(_if_then_else(ge(ones_diff_cols, max_col_clue), _if_then_else(True, zeros_diff_rows, 2), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(or_(False, True), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(False, 3, zeros_diff_cols))), _if_then_else(or_(and_(True, True), le(compare_blocks_rows, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(True, 2, 3), _if_then_else(False, 4, 2)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 2, 2))), _if_then_else(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(True, max_col_clue, _if_then_else(False, max_row_clue, 2))), _if_then_else(ge(zeros_diff_rows, 0), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, compare_blocks_rows, 3)), _if_then_else(or_(True, True), max_col_clue, _if_then_else(False, ones_diff_rows, max_row_clue)))), _if_then_else(ge(_if_then_else(ge(ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(ge(3, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(True, 0, 4))), _if_then_else(and_(or_(False, True), ge(ones_diff_cols, max_row_clue)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_cols, 4), _if_then_else(False, zeros_diff_rows, max_col_clue)), _if_then_else(ge(compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 0, 3), _if_then_else(False, zeros_diff_cols, max_col_clue))), _if_then_else(ge(_if_then_else(False, 1, ones_diff_rows), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(False, 4, 2), _if_then_else(False, 4, 2)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_rows, 0), _if_then_else(False, 4, 4)))))
and_(ge(_if_then_else(ge(_if_then_else(and_(False, False), _if_then_else(True, 3, ones_diff_cols), _if_then_else(False, 0, 4)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(False, 1, 1), _if_then_else(False, ones_diff_rows, compare_blocks_cols))), _if_then_else(or_(or_(True, True), ge(0, zeros_diff_rows)), _if_then_else(ge(2, 3), _if_then_else(False, 1, 1), _if_then_else(True, 1, max_row_clue)), _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, compare_blocks_rows, 0), _if_then_else(True, 4, max_row_clue))), _if_then_else(or_(or_(True, True), le(0, 2)), _if_then_else(and_(True, False), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 0)), _if_then_else(and_(False, False), _if_then_else(False, max_row_clue, 0), _if_then_else(True, compare_blocks_cols, 4)))), _if_then_else(and_(and_(and_(False, True), le(max_row_clue, 1)), le(_if_then_else(True, 0, max_row_clue), _if_then_else(False, ones_diff_cols, 3))), _if_then_else(and_(and_(True, False), ge(1, max_row_clue)), _if_then_else(and_(False, True), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(True, 1, 3)), _if_then_else(le(max_row_clue, 3), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, max_col_clue))), _if_then_else(ge(_if_then_else(True, 3, max_col_clue), _if_then_else(False, 3, 0)), _if_then_else(or_(True, True), _if_then_else(False, 0, compare_blocks_cols), _if_then_else(False, ones_diff_rows, 4)), _if_then_else(ge(zeros_diff_cols, ones_diff_rows), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, zeros_diff_cols, max_row_clue))))), ge(_if_then_else(False, 4, ones_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)))
VAL TREES:
mul(add(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols)), add(mul(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, zeros_diff_rows)))
mul(add(add(mul(mul(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows))), add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)))), mul(mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(ones_diff_rows, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows))), add(add(add(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)))))
mul(mul(add(mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)))), add(mul(mul(mul(ones_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_cols)), mul(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols))), add(add(add(compare_blocks_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)))))
mul(mul(add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows))), mul(mul(add(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols))))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_cols)), add(add(ones_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(or_(le(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, ones_diff_rows, max_row_clue)), True), max_row_clue, ones_diff_cols)), le(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, ones_diff_rows, max_row_clue))), ge(_if_then_else(or_(False, True), _if_then_else(True, max_col_clue, compare_blocks_rows), max_col_clue), _if_then_else(True, zeros_diff_cols, ones_diff_rows)))
ge(_if_then_else(False, max_col_clue, _if_then_else(or_(False, True), _if_then_else(True, 0, compare_blocks_rows), _if_then_else(True, ones_diff_cols, 0))), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, 0, 2)))
or_(and_(and_(False, or_(True, True)), and_(True, or_(False, True))), ge(_if_then_else(or_(False, or_(or_(and_(le(ones_diff_rows, 0), or_(True, False)), le(_if_then_else(False, zeros_diff_cols, max_col_clue), _if_then_else(True, max_col_clue, 3))), le(compare_blocks_cols, _if_then_else(or_(False, False), _if_then_else(False, 0, 4), _if_then_else(False, max_row_clue, ones_diff_rows))))), _if_then_else(True, _if_then_else(True, 1, zeros_diff_rows), ones_diff_rows), _if_then_else(False, ones_diff_cols, max_col_clue)), _if_then_else(le(compare_blocks_cols, compare_blocks_cols), max_col_clue, _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, 2), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(ge(_if_then_else(True, ones_diff_cols, compare_blocks_cols), _if_then_else(False, 3, ones_diff_rows)), False), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), 1)), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), le(_if_then_else(True, max_col_clue, 2), _if_then_else(True, max_row_clue, ones_diff_rows)))))
or_(ge(_if_then_else(ge(4, compare_blocks_cols), 3, zeros_diff_cols), _if_then_else(True, _if_then_else(True, _if_then_else(False, _if_then_else(False, 2, 4), max_row_clue), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(ge(_if_then_else(le(max_col_clue, zeros_diff_rows), 2, zeros_diff_cols), _if_then_else(False, _if_then_else(True, max_col_clue, 3), max_row_clue)), zeros_diff_cols, 4))), or_(or_(False, False), ge(zeros_diff_rows, ones_diff_rows)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, zeros_diff_rows))), ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(add(add(ones_diff_rows, add(ones_diff_rows, zeros_diff_cols)), add(ones_diff_cols, zeros_diff_rows)), add(mul(compare_blocks_rows, ones_diff_rows), add(mul(ones_diff_rows, ones_diff_cols), compare_blocks_cols)))), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(mul(add(mul(compare_blocks_rows, ones_diff_cols), mul(ones_diff_rows, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
or_(or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(False, max_row_clue, 4)), False), ge(_if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(and_(True, False), _if_then_else(True, max_col_clue, max_row_clue), _if_then_else(True, 4, 1))))
ge(ones_diff_cols, _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_cols, _if_then_else(or_(or_(or_(False, False), and_(True, False)), or_(or_(False, False), le(zeros_diff_cols, max_col_clue))), _if_then_else(and_(or_(False, False), ge(zeros_diff_cols, zeros_diff_cols)), 4, _if_then_else(and_(False, True), _if_then_else(True, 0, 1), _if_then_else(True, compare_blocks_cols, _if_then_else(True, 1, _if_then_else(True, zeros_diff_cols, compare_blocks_cols))))), _if_then_else(le(_if_then_else(True, 0, zeros_diff_cols), _if_then_else(False, 2, ones_diff_rows)), _if_then_else(le(compare_blocks_cols, 0), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(ge(max_col_clue, 0), _if_then_else(True, 2, max_col_clue), _if_then_else(False, 1, 2))))), _if_then_else(False, 2, ones_diff_rows)))
or_(and_(and_(False, or_(True, True)), and_(ge(max_col_clue, max_col_clue), ge(zeros_diff_cols, 4))), ge(_if_then_else(ge(zeros_diff_cols, 4), _if_then_else(True, 0, ones_diff_rows), _if_then_else(le(_if_then_else(True, 2, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)), ones_diff_cols, max_col_clue)), _if_then_else(le(compare_blocks_cols, 4), max_col_clue, _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, 2), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), _if_then_else(False, _if_then_else(or_(le(3, zeros_diff_rows), or_(False, False)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(max_col_clue, 1), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(False, 3, 1))), zeros_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, zeros_diff_cols), zeros_diff_cols), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(False, ones_diff_cols, 4))), True))
or_(ge(_if_then_else(ge(4, compare_blocks_cols), ones_diff_cols, zeros_diff_cols), _if_then_else(True, _if_then_else(le(4, zeros_diff_cols), 2, _if_then_else(True, max_row_clue, 3)), _if_then_else(ge(max_row_clue, ones_diff_rows), compare_blocks_cols, _if_then_else(and_(or_(True, False), True), _if_then_else(False, 0, compare_blocks_rows), zeros_diff_rows)))), or_(or_(False, le(compare_blocks_cols, 0)), ge(zeros_diff_rows, ones_diff_rows)))
VAL TREES:
add(add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(add(add(add(ones_diff_rows, zeros_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_cols, mul(zeros_diff_cols, compare_blocks_rows)))), zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(mul(mul(add(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows)), mul(ones_diff_rows, ones_diff_cols)), add(mul(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_cols))), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), mul(add(mul(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_cols, ones_diff_rows)), add(mul(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_rows))), mul(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows))))))
COND TREES:
or_(or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(False, max_row_clue, ones_diff_cols)), or_(False, True)), ge(_if_then_else(False, _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, max_col_clue, compare_blocks_cols)), _if_then_else(and_(and_(True, and_(or_(ge(compare_blocks_cols, compare_blocks_cols), le(2, 3)), and_(and_(False, False), ge(zeros_diff_cols, ones_diff_cols)))), False), _if_then_else(True, max_col_clue, max_row_clue), _if_then_else(True, 4, 1))))
ge(_if_then_else(or_(False, True), _if_then_else(True, 0, compare_blocks_rows), 3), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_cols, _if_then_else(or_(or_(or_(False, False), and_(True, False)), or_(or_(False, False), le(zeros_diff_cols, max_col_clue))), _if_then_else(and_(or_(False, False), ge(zeros_diff_cols, zeros_diff_cols)), _if_then_else(le(max_row_clue, ones_diff_rows), ones_diff_cols, _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, 0, 1), _if_then_else(True, compare_blocks_cols, ones_diff_rows))), _if_then_else(le(_if_then_else(True, 0, zeros_diff_cols), _if_then_else(False, 2, ones_diff_rows)), _if_then_else(le(compare_blocks_cols, 0), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(le(3, compare_blocks_rows), _if_then_else(True, ones_diff_rows, 2), _if_then_else(True, zeros_diff_rows, 0))))), _if_then_else(False, 2, ones_diff_rows)))
or_(and_(and_(False, or_(True, True)), and_(ge(max_col_clue, max_col_clue), or_(False, or_(or_(and_(le(ones_diff_rows, 0), or_(True, False)), le(_if_then_else(False, zeros_diff_cols, max_col_clue), _if_then_else(True, max_col_clue, 3))), le(4, _if_then_else(or_(False, False), _if_then_else(and_(and_(False, True), and_(ge(max_col_clue, max_col_clue), or_(False, True))), 0, 4), _if_then_else(False, max_row_clue, ones_diff_rows))))))), ge(_if_then_else(ge(zeros_diff_cols, 4), _if_then_else(True, 0, ones_diff_rows), _if_then_else(le(_if_then_else(True, 2, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)), ones_diff_cols, zeros_diff_rows)), _if_then_else(le(compare_blocks_cols, 4), max_col_clue, _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(or_(or_(True, False), and_(False, False)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_row_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), _if_then_else(False, _if_then_else(or_(le(3, zeros_diff_rows), or_(False, False)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(max_col_clue, 1), _if_then_else(True, 1, zeros_diff_rows), 0)), zeros_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, zeros_diff_cols), zeros_diff_cols), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), or_(or_(True, and_(or_(le(compare_blocks_rows, ones_diff_rows), and_(True, False)), le(_if_then_else(and_(True, True), zeros_diff_rows, zeros_diff_cols), _if_then_else(True, _if_then_else(and_(False, True), 1, max_col_clue), _if_then_else(True, _if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(False, 4, 2)))))), and_(False, False)))))
or_(ge(_if_then_else(ge(4, compare_blocks_cols), ones_diff_cols, zeros_diff_cols), _if_then_else(ge(_if_then_else(le(max_col_clue, zeros_diff_rows), 2, zeros_diff_cols), _if_then_else(or_(False, le(compare_blocks_cols, 0)), _if_then_else(True, max_col_clue, 3), max_row_clue)), _if_then_else(ge(4, compare_blocks_cols), 2, _if_then_else(False, max_row_clue, 3)), _if_then_else(ge(max_row_clue, ones_diff_rows), compare_blocks_cols, _if_then_else(and_(ge(_if_then_else(ge(_if_then_else(and_(False, True), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, ones_diff_rows, 1)), _if_then_else(ge(ones_diff_cols, 2), _if_then_else(True, 4, 0), _if_then_else(True, 4, ones_diff_rows))), _if_then_else(le(_if_then_else(False, max_row_clue, compare_blocks_rows), _if_then_else(True, 3, 2)), _if_then_else(and_(False, True), _if_then_else(True, 0, compare_blocks_cols), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(and_(False, True), _if_then_else(True, 3, 1), _if_then_else(True, zeros_diff_cols, ones_diff_cols))), _if_then_else(and_(le(compare_blocks_rows, max_row_clue), ge(compare_blocks_cols, ones_diff_rows)), _if_then_else(or_(False, True), _if_then_else(False, max_row_clue, max_col_clue), _if_then_else(False, 0, 2)), _if_then_else(le(ones_diff_rows, 2), _if_then_else(True, 2, 4), _if_then_else(True, compare_blocks_cols, 4)))), _if_then_else(ge(_if_then_else(ge(4, 2), _if_then_else(True, ones_diff_cols, 4), _if_then_else(True, max_row_clue, 3)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_cols), _if_then_else(True, compare_blocks_cols, 1))), _if_then_else(or_(le(2, 4), and_(True, False)), _if_then_else(le(ones_diff_rows, 0), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(False, ones_diff_cols, zeros_diff_cols)), _if_then_else(and_(False, False), _if_then_else(True, 4, ones_diff_cols), _if_then_else(True, compare_blocks_cols, 4))), _if_then_else(and_(le(ones_diff_cols, ones_diff_rows), or_(False, False)), _if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 3), _if_then_else(True, max_col_clue, ones_diff_rows)), _if_then_else(le(3, max_row_clue), _if_then_else(True, ones_diff_cols, 2), _if_then_else(True, max_row_clue, 3))))), True), _if_then_else(False, 0, compare_blocks_rows), zeros_diff_rows)))), or_(or_(ge(max_col_clue, ones_diff_cols), le(compare_blocks_cols, 0)), ge(zeros_diff_rows, ones_diff_rows)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(mul(add(ones_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols)), add(add(add(zeros_diff_rows, zeros_diff_cols), ones_diff_cols), mul(zeros_diff_rows, mul(zeros_diff_rows, compare_blocks_cols)))), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, add(mul(add(ones_diff_cols, mul(zeros_diff_rows, ones_diff_rows)), mul(compare_blocks_rows, mul(zeros_diff_cols, compare_blocks_cols))), add(add(add(zeros_diff_rows, ones_diff_rows), ones_diff_rows), mul(mul(compare_blocks_cols, compare_blocks_rows), compare_blocks_rows))))))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(add(mul(ones_diff_rows, ones_diff_rows), add(ones_diff_rows, ones_diff_cols)), add(mul(add(zeros_diff_cols, compare_blocks_rows), ones_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, compare_blocks_cols)), add(add(compare_blocks_rows, zeros_diff_cols), zeros_diff_rows))))), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, add(add(mul(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, max_row_clue, ones_diff_cols)), le(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, ones_diff_rows, max_row_clue))), ge(_if_then_else(False, _if_then_else(True, max_col_clue, compare_blocks_rows), max_col_clue), _if_then_else(and_(True, False), _if_then_else(le(max_col_clue, compare_blocks_rows), 4, zeros_diff_rows), _if_then_else(True, 4, 1))))
ge(_if_then_else(False, max_col_clue, _if_then_else(False, 2, 2)), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(True, 1, _if_then_else(True, zeros_diff_cols, compare_blocks_cols))))
or_(False, ge(_if_then_else(ge(zeros_diff_cols, 4), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, ones_diff_cols, max_col_clue)), _if_then_else(le(compare_blocks_cols, 4), max_col_clue, _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, 2), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(True, False), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, 3), or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), or_(or_(True, False), and_(False, False)))))
or_(ge(_if_then_else(le(4, zeros_diff_cols), 3, zeros_diff_cols), _if_then_else(True, _if_then_else(True, _if_then_else(False, 1, max_row_clue), _if_then_else(False, zeros_diff_cols, _if_then_else(True, zeros_diff_cols, 4))), _if_then_else(True, zeros_diff_cols, 4))), or_(or_(False, ge(max_col_clue, ones_diff_cols)), ge(zeros_diff_rows, ones_diff_rows)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, mul(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_rows)), mul(add(zeros_diff_cols, zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows))))))
mul(add(mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_rows)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, max_row_clue, _if_then_else(and_(ge(_if_then_else(or_(False, True), _if_then_else(True, 2, 0), _if_then_else(False, 0, 4)), _if_then_else(le(4, ones_diff_rows), _if_then_else(False, 0, max_row_clue), _if_then_else(False, ones_diff_rows, 4))), or_(or_(and_(False, False), and_(True, False)), le(_if_then_else(True, 2, 3), _if_then_else(False, 3, compare_blocks_cols)))), _if_then_else(and_(or_(le(1, max_row_clue), or_(False, True)), le(_if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 2, compare_blocks_rows))), _if_then_else(ge(_if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, ones_diff_rows, 0)), _if_then_else(or_(False, False), _if_then_else(False, 0, max_col_clue), _if_then_else(False, 3, zeros_diff_cols)), _if_then_else(le(4, 1), _if_then_else(True, max_row_clue, max_col_clue), _if_then_else(True, zeros_diff_cols, 2))), _if_then_else(or_(or_(False, True), or_(False, True)), _if_then_else(le(ones_diff_cols, 4), _if_then_else(False, ones_diff_rows, 3), _if_then_else(False, 2, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, 1, ones_diff_rows), _if_then_else(False, max_row_clue, zeros_diff_cols)))), _if_then_else(ge(_if_then_else(le(0, 2), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_cols, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, ones_diff_rows))), _if_then_else(le(_if_then_else(True, 0, ones_diff_rows), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, ones_diff_cols, ones_diff_cols)), _if_then_else(and_(False, False), _if_then_else(True, ones_diff_rows, 3), _if_then_else(False, max_col_clue, zeros_diff_cols))), _if_then_else(and_(and_(False, True), or_(True, False)), _if_then_else(le(ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 0, 4)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_cols, 0), _if_then_else(False, ones_diff_cols, 4))))))), le(_if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(True, ones_diff_rows, max_row_clue))), ge(_if_then_else(and_(True, True), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, max_col_clue, compare_blocks_cols)), _if_then_else(and_(le(1, ones_diff_rows), True), _if_then_else(True, max_col_clue, max_row_clue), _if_then_else(True, 4, 1))))
ge(_if_then_else(or_(le(_if_then_else(le(4, compare_blocks_rows), _if_then_else(True, ones_diff_rows, 2), _if_then_else(True, zeros_diff_rows, 0)), 4), False), _if_then_else(True, _if_then_else(True, compare_blocks_cols, compare_blocks_rows), compare_blocks_rows), _if_then_else(False, ones_diff_cols, 0)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), compare_blocks_cols))
or_(and_(and_(False, or_(True, True)), and_(ge(max_col_clue, max_col_clue), or_(False, True))), ge(max_col_clue, _if_then_else(le(compare_blocks_cols, 4), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, _if_then_else(True, _if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 1, compare_blocks_cols))), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(and_(and_(and_(or_(True, True), le(3, compare_blocks_cols)), or_(or_(True, False), ge(zeros_diff_cols, 2))), le(_if_then_else(ge(compare_blocks_rows, max_col_clue), _if_then_else(True, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, 2, ones_diff_rows), _if_then_else(True, 4, ones_diff_cols)))), _if_then_else(ge(_if_then_else(le(0, max_row_clue), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(ge(zeros_diff_rows, zeros_diff_cols), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, max_row_clue))), _if_then_else(or_(or_(False, True), ge(4, ones_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, 0, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, 4, ones_diff_cols), _if_then_else(False, 4, 4))), _if_then_else(le(_if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(True, max_row_clue, zeros_diff_rows)), _if_then_else(and_(False, True), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, max_col_clue, 4)), _if_then_else(ge(zeros_diff_rows, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(True, 2, zeros_diff_rows)))), _if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(True, 3, zeros_diff_cols), _if_then_else(False, max_row_clue, 0)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_rows, 0), _if_then_else(True, 2, 0))), _if_then_else(ge(_if_then_else(False, _if_then_else(True, ones_diff_cols, 4), ones_diff_rows), _if_then_else(True, zeros_diff_rows, ones_diff_cols)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_cols, max_col_clue), _if_then_else(True, 0, 1)), _if_then_else(ge(4, 4), _if_then_else(False, 1, 1), _if_then_else(True, 0, 3))), _if_then_else(le(_if_then_else(True, zeros_diff_cols, 1), _if_then_else(True, ones_diff_rows, 4)), _if_then_else(ge(ones_diff_rows, 1), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)), _if_then_else(ge(compare_blocks_rows, 0), _if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(False, ones_diff_rows, 2))))), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), or_(or_(True, False), and_(False, False)))))
or_(ge(_if_then_else(and_(ge(3, zeros_diff_rows), and_(False, True)), _if_then_else(and_(False, False), _if_then_else(False, 2, max_row_clue), _if_then_else(True, compare_blocks_cols, 0)), _if_then_else(or_(False, False), _if_then_else(True, 1, ones_diff_cols), _if_then_else(True, 0, ones_diff_rows))), _if_then_else(True, _if_then_else(False, 3, 2), _if_then_else(False, zeros_diff_cols, 4))), or_(or_(True, ge(max_col_clue, zeros_diff_rows)), ge(zeros_diff_rows, ones_diff_rows)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, max_row_clue, ones_diff_cols)), le(_if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(True, ones_diff_rows, max_row_clue))), ge(_if_then_else(or_(False, True), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, max_col_clue, 4)), _if_then_else(and_(True, False), _if_then_else(False, max_col_clue, max_row_clue), _if_then_else(True, 4, 1))))
ge(_if_then_else(True, _if_then_else(True, _if_then_else(True, compare_blocks_cols, 3), compare_blocks_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, 1, ones_diff_rows)))
or_(and_(and_(False, or_(True, True)), and_(ge(max_col_clue, max_col_clue), or_(False, True))), ge(_if_then_else(ge(zeros_diff_cols, 4), _if_then_else(True, 0, 4), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(le(compare_blocks_cols, 4), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, _if_then_else(or_(False, True), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 1, compare_blocks_cols))), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(ge(_if_then_else(and_(True, True), _if_then_else(or_(False, True), compare_blocks_rows, max_row_clue), _if_then_else(False, 4, zeros_diff_cols)), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), or_(or_(True, False), False))))
or_(le(compare_blocks_cols, 1), False)
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(mul(mul(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols))), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_cols, ones_diff_cols), mul(mul(ones_diff_cols, compare_blocks_rows), ones_diff_cols)), mul(add(zeros_diff_rows, zeros_diff_cols), add(mul(ones_diff_cols, compare_blocks_cols), ones_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, mul(mul(mul(add(zeros_diff_rows, compare_blocks_cols), mul(compare_blocks_rows, compare_blocks_cols)), add(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols))), mul(add(mul(ones_diff_cols, ones_diff_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, compare_blocks_rows)))))), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(add(add(add(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)), mul(mul(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_rows))), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
le(_if_then_else(ge(_if_then_else(True, max_col_clue, compare_blocks_rows), max_row_clue), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(True, 4, 1)), _if_then_else(le(compare_blocks_cols, _if_then_else(False, max_col_clue, ones_diff_rows)), _if_then_else(True, 2, _if_then_else(False, max_col_clue, zeros_diff_rows)), _if_then_else(False, 0, zeros_diff_cols)))
or_(or_(or_(False, False), ge(zeros_diff_cols, 1)), or_(or_(True, True), True))
and_(or_(ge(max_col_clue, _if_then_else(and_(True, False), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, max_row_clue, ones_diff_cols))), le(_if_then_else(ge(compare_blocks_rows, ones_diff_rows), _if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(False, 1, ones_diff_rows)), _if_then_else(ge(0, 2), _if_then_else(True, zeros_diff_rows, 2), _if_then_else(False, ones_diff_rows, zeros_diff_rows)))), and_(ge(_if_then_else(and_(True, True), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(False, 4, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(True, 4, 0), _if_then_else(True, compare_blocks_rows, _if_then_else(ge(zeros_diff_cols, 4), _if_then_else(True, 0, ones_diff_rows), _if_then_else(False, ones_diff_cols, 4))))), and_(ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), and_(le(compare_blocks_cols, zeros_diff_cols), and_(False, False)))))
le(_if_then_else(le(_if_then_else(ge(ones_diff_cols, max_col_clue), _if_then_else(True, zeros_diff_rows, 2), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(or_(False, True), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(False, 3, zeros_diff_cols))), _if_then_else(or_(and_(True, True), le(_if_then_else(True, max_col_clue, _if_then_else(or_(False, True), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 1, compare_blocks_cols))), _if_then_else(True, max_row_clue, ones_diff_rows))), _if_then_else(and_(True, False), _if_then_else(True, 2, 3), _if_then_else(False, 4, 2)), _if_then_else(and_(True, or_(True, False)), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 2, 2))), _if_then_else(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(True, max_col_clue, _if_then_else(False, max_row_clue, 2))), _if_then_else(ge(zeros_diff_rows, 0), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, compare_blocks_rows, 3)), _if_then_else(or_(True, True), max_col_clue, _if_then_else(False, ones_diff_rows, max_row_clue)))), _if_then_else(ge(_if_then_else(ge(ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(ge(3, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(True, 0, 4))), _if_then_else(and_(or_(False, True), ge(ones_diff_cols, max_row_clue)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_cols, 4), _if_then_else(False, zeros_diff_rows, max_col_clue)), _if_then_else(ge(compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 0, 3), _if_then_else(False, zeros_diff_cols, max_col_clue))), _if_then_else(ge(_if_then_else(False, 1, ones_diff_rows), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(False, 4, 2), _if_then_else(True, ones_diff_cols, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_rows, 0), _if_then_else(False, 4, 4)))))
and_(and_(le(compare_blocks_rows, max_row_clue), or_(le(compare_blocks_cols, 1), False)), ge(_if_then_else(ge(max_col_clue, ones_diff_cols), 4, compare_blocks_cols), _if_then_else(False, _if_then_else(False, 2, compare_blocks_cols), zeros_diff_rows)))
VAL TREES:
mul(add(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols)), add(mul(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, zeros_diff_rows)))
mul(add(add(mul(mul(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows))), add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)))), mul(mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(ones_diff_rows, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows))), add(add(add(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)))))
mul(mul(add(mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)))), add(mul(mul(mul(ones_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_cols)), mul(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols))), add(add(add(compare_blocks_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)))))
mul(mul(add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows))), mul(mul(add(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols))))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_cols)), add(add(ones_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(ge(_if_then_else(ge(ones_diff_cols, 0), compare_blocks_cols, 0), _if_then_else(False, _if_then_else(True, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, max_row_clue, zeros_diff_rows))), _if_then_else(le(2, _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(True, compare_blocks_cols, 4), _if_then_else(True, 4, 1)), _if_then_else(le(max_col_clue, compare_blocks_cols), _if_then_else(False, 2, 0), _if_then_else(False, zeros_diff_rows, ones_diff_cols)))), le(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, ones_diff_rows, max_row_clue))), ge(_if_then_else(and_(or_(False, le(max_row_clue, compare_blocks_rows)), and_(False, and_(False, False))), _if_then_else(le(3, _if_then_else(True, compare_blocks_cols, 4)), _if_then_else(ge(2, 1), ones_diff_rows, 1), _if_then_else(False, _if_then_else(False, zeros_diff_rows, zeros_diff_rows), max_row_clue)), _if_then_else(le(compare_blocks_cols, ones_diff_cols), _if_then_else(False, _if_then_else(True, ones_diff_cols, 1), max_col_clue), _if_then_else(ge(ones_diff_rows, ones_diff_rows), _if_then_else(False, ones_diff_cols, zeros_diff_rows), _if_then_else(True, 4, zeros_diff_rows)))), compare_blocks_cols))
ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(and_(or_(True, True), True), _if_then_else(and_(le(0, 4), le(compare_blocks_cols, max_col_clue)), _if_then_else(le(3, ones_diff_rows), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(False, compare_blocks_rows, ones_diff_cols)), _if_then_else(or_(and_(and_(or_(True, True), True), True), True), _if_then_else(or_(ge(_if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, compare_blocks_rows, max_col_clue)), and_(or_(True, False), and_(False, True))), _if_then_else(and_(and_(True, False), le(3, 4)), _if_then_else(and_(True, True), _if_then_else(False, 2, max_row_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, 2, 1), _if_then_else(False, 3, 0))), _if_then_else(or_(and_(True, True), ge(2, zeros_diff_rows)), _if_then_else(ge(3, 4), _if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, max_row_clue, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(True, 3, ones_diff_rows), _if_then_else(False, compare_blocks_cols, ones_diff_cols)))), _if_then_else(False, zeros_diff_cols, 0))), _if_then_else(False, 1, _if_then_else(True, zeros_diff_cols, 0))))
or_(ge(_if_then_else(or_(or_(ge(zeros_diff_cols, ones_diff_cols), le(2, 1)), and_(or_(False, True), or_(True, True))), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(False, 2, max_row_clue)), _if_then_else(ge(compare_blocks_rows, 2), _if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 3)), _if_then_else(ge(compare_blocks_cols, zeros_diff_rows), _if_then_else(True, max_row_clue, max_col_clue), _if_then_else(False, ones_diff_rows, compare_blocks_rows))), _if_then_else(or_(or_(False, True), le(ones_diff_cols, compare_blocks_cols)), _if_then_else(le(compare_blocks_cols, 3), _if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 2, compare_blocks_rows)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, zeros_diff_cols)))), _if_then_else(le(_if_then_else(ge(zeros_diff_rows, compare_blocks_cols), _if_then_else(True, max_row_clue, max_col_clue), _if_then_else(False, max_col_clue, ones_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, 0, 1), _if_then_else(True, 3, zeros_diff_cols))), _if_then_else(le(_if_then_else(False, zeros_diff_rows, max_row_clue), _if_then_else(False, 4, compare_blocks_rows)), _if_then_else(le(1, max_col_clue), _if_then_else(True, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, 3, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, 0), _if_then_else(False, ones_diff_cols, 0), _if_then_else(True, compare_blocks_rows, ones_diff_rows))), _if_then_else(and_(ge(2, max_col_clue), le(ones_diff_cols, zeros_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 3)), _if_then_else(le(0, max_col_clue), _if_then_else(False, 1, zeros_diff_cols), _if_then_else(False, ones_diff_cols, max_row_clue))))), ge(_if_then_else(and_(True, True), _if_then_else(False, 1, 3), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(le(compare_blocks_cols, 4), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(False, ones_diff_rows, compare_blocks_cols)), _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, 2), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(True, _if_then_else(True, _if_then_else(True, compare_blocks_rows, max_row_clue), compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(True, False), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(True, ones_diff_cols, ones_diff_rows)))), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(or_(ge(_if_then_else(and_(True, True), _if_then_else(True, 2, 0), _if_then_else(False, compare_blocks_cols, 2)), _if_then_else(or_(True, True), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, max_col_clue, 4))), and_(le(_if_then_else(False, compare_blocks_rows, max_col_clue), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), ge(_if_then_else(True, 2, zeros_diff_cols), _if_then_else(True, compare_blocks_cols, 3)))), or_(True, and_(False, False)))))
or_(ge(_if_then_else(or_(ge(_if_then_else(False, _if_then_else(False, max_col_clue, 1), zeros_diff_rows), _if_then_else(False, _if_then_else(False, ones_diff_rows, compare_blocks_cols), 4)), and_(ge(ones_diff_rows, ones_diff_rows), or_(False, False))), 3, zeros_diff_cols), _if_then_else(True, _if_then_else(False, zeros_diff_rows, max_row_clue), _if_then_else(ge(4, _if_then_else(le(_if_then_else(True, max_col_clue, 1), _if_then_else(True, 0, 1)), _if_then_else(ge(ones_diff_rows, max_col_clue), _if_then_else(False, 0, ones_diff_cols), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, 0), _if_then_else(False, ones_diff_rows, 1)))), zeros_diff_cols, 4))), or_(or_(False, ge(max_col_clue, ones_diff_cols)), ge(zeros_diff_rows, ones_diff_rows)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), mul(add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)), mul(add(zeros_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols)))), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(add(add(add(mul(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, zeros_diff_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_cols)))), mul(mul(mul(mul(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), mul(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_cols, zeros_diff_rows))))), compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, max_row_clue, ones_diff_cols)), le(_if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(True, ones_diff_rows, max_row_clue))), ge(_if_then_else(or_(False, True), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, max_col_clue, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(False, max_col_clue, _if_then_else(or_(False, True), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(ge(ones_diff_rows, ones_diff_rows), _if_then_else(False, 2, 2), compare_blocks_cols))), _if_then_else(True, 4, 1))))
ge(_if_then_else(True, _if_then_else(True, _if_then_else(True, compare_blocks_cols, compare_blocks_rows), compare_blocks_rows), _if_then_else(ge(_if_then_else(le(zeros_diff_rows, 1), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, max_row_clue, zeros_diff_cols))), ones_diff_cols, 0)), _if_then_else(or_(False, False), _if_then_else(or_(False, False), compare_blocks_cols, compare_blocks_cols), _if_then_else(False, _if_then_else(True, max_col_clue, 4), ones_diff_rows)))
or_(and_(and_(False, True), and_(ge(max_col_clue, max_col_clue), or_(False, ge(_if_then_else(ge(zeros_diff_cols, 1), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, 2, 0)), _if_then_else(le(4, compare_blocks_rows), _if_then_else(False, zeros_diff_cols, 4), _if_then_else(False, 4, 3)))))), ge(compare_blocks_cols, _if_then_else(le(compare_blocks_cols, 4), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(compare_blocks_rows, compare_blocks_cols), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(True, _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), or_(or_(or_(ge(_if_then_else(True, _if_then_else(le(_if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(True, 3, 1), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(and_(True, False), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, ones_diff_cols, 4))), 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), True), False), and_(False, False)))))
or_(True, or_(ge(1, _if_then_else(True, _if_then_else(False, 3, 2), _if_then_else(or_(True, False), zeros_diff_cols, 4))), le(_if_then_else(True, 3, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, _if_then_else(True, 4, 2)))))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
or_(or_(True, le(_if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(True, ones_diff_rows, max_row_clue))), ge(_if_then_else(and_(True, True), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, max_col_clue, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(or_(le(_if_then_else(False, 1, 2), _if_then_else(False, 0, compare_blocks_cols)), ge(_if_then_else(or_(True, True), ones_diff_rows, 1), _if_then_else(False, zeros_diff_rows, 3))), max_col_clue, max_row_clue), _if_then_else(True, 4, 1))))
ge(_if_then_else(or_(False, False), _if_then_else(True, _if_then_else(True, compare_blocks_cols, compare_blocks_rows), compare_blocks_rows), _if_then_else(False, ones_diff_cols, 0)), _if_then_else(or_(False, or_(True, or_(True, False))), _if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 1, ones_diff_rows)))
or_(and_(and_(False, or_(True, True)), and_(ge(max_col_clue, max_col_clue), or_(False, True))), ge(_if_then_else(ge(ones_diff_cols, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(le(compare_blocks_cols, 4), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, _if_then_else(True, _if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 1, compare_blocks_cols))), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), 2))), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(ge(compare_blocks_cols, ones_diff_rows), ones_diff_cols, 4))), or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), or_(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), and_(False, False)))))
or_(and_(ge(ones_diff_cols, _if_then_else(and_(and_(True, True), or_(False, True)), _if_then_else(and_(le(2, compare_blocks_rows), True), _if_then_else(ge(zeros_diff_rows, ones_diff_rows), 2, ones_diff_rows), _if_then_else(False, max_row_clue, 3)), _if_then_else(le(compare_blocks_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 0), _if_then_else(and_(le(max_row_clue, ones_diff_cols), le(1, 2)), 2, 2)))), le(zeros_diff_cols, 1)), or_(or_(True, ge(max_col_clue, ones_diff_cols)), ge(zeros_diff_rows, 1)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, max_row_clue, ones_diff_cols)), le(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, _if_then_else(le(max_col_clue, compare_blocks_rows), 4, zeros_diff_rows), max_row_clue))), ge(_if_then_else(or_(False, True), _if_then_else(True, max_col_clue, compare_blocks_cols), max_col_clue), _if_then_else(True, zeros_diff_cols, ones_diff_rows)))
ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(or_(False, False), compare_blocks_cols, _if_then_else(False, 0, 2)))
or_(and_(and_(False, or_(True, True)), and_(True, or_(False, True))), ge(_if_then_else(ge(zeros_diff_cols, 4), _if_then_else(True, _if_then_else(True, 1, zeros_diff_rows), ones_diff_rows), _if_then_else(False, ones_diff_cols, max_row_clue)), _if_then_else(le(compare_blocks_cols, 4), max_col_clue, _if_then_else(and_(ge(max_col_clue, max_col_clue), or_(False, True)), zeros_diff_cols, 4))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, 2), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(ge(_if_then_else(True, ones_diff_cols, compare_blocks_cols), _if_then_else(False, 3, ones_diff_rows)), False), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), 1)), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), or_(or_(True, False), and_(False, False)))))
or_(ge(_if_then_else(ge(4, compare_blocks_cols), 3, zeros_diff_cols), _if_then_else(True, _if_then_else(True, _if_then_else(False, _if_then_else(False, 2, 4), max_row_clue), _if_then_else(True, zeros_diff_cols, zeros_diff_rows)), _if_then_else(True, zeros_diff_cols, 4))), or_(or_(False, ge(max_col_clue, ones_diff_cols)), ge(zeros_diff_rows, ones_diff_rows)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, _if_then_else(le(_if_then_else(True, 2, max_col_clue), _if_then_else(True, compare_blocks_rows, zeros_diff_rows)), _if_then_else(le(4, 1), _if_then_else(False, max_col_clue, 4), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(ge(4, compare_blocks_cols), _if_then_else(False, 1, ones_diff_rows), _if_then_else(True, 1, zeros_diff_rows)))), _if_then_else(False, max_row_clue, ones_diff_cols)), le(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, ones_diff_rows, 4))), ge(_if_then_else(or_(False, True), _if_then_else(True, max_col_clue, compare_blocks_rows), max_col_clue), _if_then_else(and_(True, False), ones_diff_rows, _if_then_else(True, 4, 1))))
ge(1, _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(True, 1, _if_then_else(True, zeros_diff_cols, compare_blocks_cols))))
or_(and_(and_(False, or_(True, True)), False), ge(zeros_diff_cols, 4))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, 2), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(True, max_row_clue, _if_then_else(and_(and_(False, True), le(2, zeros_diff_rows)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, 4, 3)), _if_then_else(le(1, 1), _if_then_else(False, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, ones_diff_cols, ones_diff_rows)))), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(True, False), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(4, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(zeros_diff_rows, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), or_(or_(True, False), and_(False, False)))))
le(_if_then_else(le(compare_blocks_cols, 4), _if_then_else(ge(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, ones_diff_cols, zeros_diff_cols)), ones_diff_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, ones_diff_cols)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_rows, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, max_row_clue)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(mul(mul(mul(add(mul(compare_blocks_rows, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), mul(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)))), add(add(add(add(compare_blocks_cols, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_cols)), add(mul(ones_diff_cols, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_rows))), mul(mul(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows)), mul(add(zeros_diff_rows, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows))))), zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), add(add(add(add(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_cols, ones_diff_cols)), mul(mul(ones_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows))), add(mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_cols)))), mul(add(mul(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), mul(compare_blocks_rows, compare_blocks_cols))), add(add(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_rows, zeros_diff_rows)), add(add(zeros_diff_cols, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))))), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, mul(add(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_rows)))), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
and_(or_(le(_if_then_else(or_(True, False), _if_then_else(True, 0, ones_diff_cols), _if_then_else(True, 3, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, 4))), ge(_if_then_else(or_(False, True), _if_then_else(False, 2, 2), _if_then_else(True, zeros_diff_cols, 1)), _if_then_else(ge(zeros_diff_rows, max_col_clue), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, 1)))), ge(_if_then_else(and_(and_(False, True), le(3, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(True, 2, 4)), _if_then_else(ge(max_col_clue, 4), _if_then_else(True, ones_diff_cols, 1), _if_then_else(True, ones_diff_cols, 0))), _if_then_else(le(_if_then_else(True, ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, 1)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(False, _if_then_else(False, zeros_diff_cols, 4), 4)), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_rows, max_col_clue), _if_then_else(True, compare_blocks_cols, ones_diff_cols)))))
ge(_if_then_else(False, _if_then_else(False, 3, 1), 0), _if_then_else(ge(max_row_clue, 2), _if_then_else(False, 3, 2), _if_then_else(False, 2, max_col_clue)))
le(_if_then_else(or_(ge(_if_then_else(False, 1, compare_blocks_rows), _if_then_else(False, max_row_clue, compare_blocks_rows)), or_(le(2, ones_diff_cols), and_(True, True))), _if_then_else(or_(le(4, 4), le(compare_blocks_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(False, 3, zeros_diff_rows)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, 2, compare_blocks_cols))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_col_clue), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(ge(4, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_row_clue, zeros_diff_rows)))), _if_then_else(or_(le(_if_then_else(True, compare_blocks_rows, 3), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)), and_(False, True)), _if_then_else(ge(_if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(True, 0, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(False, 1, 3), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(ge(ones_diff_cols, 1), _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, max_row_clue, zeros_diff_rows))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 1, 0)), _if_then_else(or_(True, False), _if_then_else(False, 1, compare_blocks_cols), _if_then_else(False, max_row_clue, zeros_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 4, 3)))))
le(_if_then_else(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(False, 4, zeros_diff_cols)), 2)
or_(and_(True, le(compare_blocks_cols, 1)), ge(_if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(True, 1, 3)))
VAL TREES:
add(add(add(compare_blocks_cols, mul(ones_diff_rows, compare_blocks_cols)), add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_cols))), mul(add(zeros_diff_cols, add(zeros_diff_rows, compare_blocks_cols)), add(zeros_diff_cols, ones_diff_rows)))
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), mul(add(add(zeros_diff_rows, ones_diff_rows), add(compare_blocks_rows, ones_diff_rows)), add(add(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows)))))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, compare_blocks_cols)))
mul(add(add(add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_cols, ones_diff_cols)), mul(mul(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows))), mul(mul(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols)), add(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, zeros_diff_cols)))), mul(add(mul(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)), add(mul(ones_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(add(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_rows)))))
add(mul(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_rows)))
add(mul(mul(ones_diff_cols, add(ones_diff_rows, zeros_diff_cols)), add(compare_blocks_cols, compare_blocks_cols)), mul(add(ones_diff_rows, mul(compare_blocks_cols, zeros_diff_rows)), mul(zeros_diff_cols, mul(mul(add(add(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, ones_diff_cols))), compare_blocks_cols))))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, max_row_clue, ones_diff_cols)), le(_if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(True, ones_diff_rows, max_row_clue))), ge(_if_then_else(or_(False, True), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, max_col_clue, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(False, max_col_clue, _if_then_else(or_(False, True), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(ge(ones_diff_rows, ones_diff_rows), _if_then_else(False, 2, 2), compare_blocks_cols))), _if_then_else(True, 4, 1))))
ge(_if_then_else(True, _if_then_else(True, _if_then_else(True, compare_blocks_cols, compare_blocks_rows), compare_blocks_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(or_(False, False), _if_then_else(or_(ge(max_col_clue, 0), False), compare_blocks_cols, zeros_diff_cols), _if_then_else(False, _if_then_else(True, max_col_clue, 4), ones_diff_rows)))
or_(and_(le(_if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, max_row_clue, 3)), and_(ge(max_col_clue, max_col_clue), or_(False, True))), ge(compare_blocks_cols, _if_then_else(le(compare_blocks_cols, 4), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(compare_blocks_rows, compare_blocks_cols), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(and_(True, True), or_(or_(or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), True), False), and_(False, False)))))
or_(True, le(ones_diff_cols, 1))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
or_(or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(or_(le(_if_then_else(True, 3, max_row_clue), _if_then_else(False, ones_diff_cols, compare_blocks_cols)), le(_if_then_else(False, ones_diff_rows, max_row_clue), _if_then_else(True, 4, zeros_diff_cols))), _if_then_else(le(max_row_clue, max_row_clue), _if_then_else(False, max_col_clue, 0), _if_then_else(ge(ones_diff_cols, zeros_diff_rows), _if_then_else(True, 1, 0), _if_then_else(False, max_col_clue, 2))), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(True, 3, 4)))), False), ge(_if_then_else(or_(le(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, ones_diff_rows, max_row_clue)), True), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, max_col_clue, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(True, max_col_clue, max_row_clue), _if_then_else(True, _if_then_else(or_(and_(or_(False, False), and_(False, False)), and_(True, and_(False, False))), zeros_diff_cols, zeros_diff_cols), max_row_clue))))
ge(_if_then_else(or_(False, True), _if_then_else(True, _if_then_else(or_(le(_if_then_else(False, 4, 0), _if_then_else(True, zeros_diff_rows, 3)), or_(and_(True, False), or_(False, False))), _if_then_else(le(_if_then_else(False, max_col_clue, 4), _if_then_else(True, 0, 2)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, 4), _if_then_else(False, max_row_clue, compare_blocks_rows)), _if_then_else(le(0, ones_diff_cols), _if_then_else(False, zeros_diff_cols, 0), _if_then_else(True, 3, ones_diff_cols))), _if_then_else(and_(le(0, 4), le(4, ones_diff_cols)), _if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_cols, 2), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 3)))), compare_blocks_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_cols, _if_then_else(or_(or_(or_(False, False), and_(True, False)), or_(or_(False, False), le(zeros_diff_cols, max_col_clue))), _if_then_else(and_(or_(False, False), ge(zeros_diff_cols, zeros_diff_cols)), _if_then_else(le(max_row_clue, ones_diff_rows), _if_then_else(False, 2, 2), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, 0, 1), _if_then_else(True, compare_blocks_cols, ones_diff_rows))), _if_then_else(le(_if_then_else(True, 0, zeros_diff_cols), _if_then_else(False, 2, ones_diff_rows)), _if_then_else(le(compare_blocks_cols, 0), _if_then_else(False, max_row_clue, max_row_clue), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(ge(max_col_clue, 0), _if_then_else(True, 2, max_col_clue), _if_then_else(False, 0, 2))))), _if_then_else(False, 2, ones_diff_rows)))
or_(and_(and_(False, True), and_(ge(max_col_clue, max_col_clue), or_(False, or_(or_(and_(le(ones_diff_rows, 0), or_(True, False)), le(_if_then_else(False, zeros_diff_cols, max_col_clue), _if_then_else(True, max_col_clue, 3))), le(compare_blocks_cols, _if_then_else(or_(False, False), _if_then_else(False, 0, 4), _if_then_else(False, max_row_clue, ones_diff_rows))))))), ge(_if_then_else(ge(_if_then_else(False, zeros_diff_cols, 4), 4), _if_then_else(True, 0, ones_diff_rows), _if_then_else(le(_if_then_else(or_(True, True), 2, 1), _if_then_else(True, ones_diff_rows, compare_blocks_cols)), ones_diff_cols, max_col_clue)), _if_then_else(le(compare_blocks_cols, 4), max_col_clue, _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, 2), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), _if_then_else(False, _if_then_else(or_(le(3, zeros_diff_rows), or_(False, ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)))), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(max_col_clue, 1), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(False, 3, 1))), zeros_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, zeros_diff_cols), zeros_diff_cols), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(ge(_if_then_else(le(_if_then_else(ge(max_col_clue, 0), _if_then_else(False, max_col_clue, max_col_clue), _if_then_else(False, 4, zeros_diff_cols)), _if_then_else(ge(3, max_col_clue), _if_then_else(True, compare_blocks_cols, 4), _if_then_else(True, compare_blocks_rows, zeros_diff_rows))), _if_then_else(le(_if_then_else(False, 0, 0), _if_then_else(True, zeros_diff_rows, max_col_clue)), _if_then_else(or_(True, False), _if_then_else(False, 2, 0), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, 0), _if_then_else(False, max_col_clue, 2))), _if_then_else(or_(and_(False, True), and_(True, False)), _if_then_else(or_(True, True), _if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 2, 0)), _if_then_else(or_(False, False), _if_then_else(True, max_col_clue, _if_then_else(True, 4, _if_then_else(True, 1, compare_blocks_cols))), _if_then_else(True, ones_diff_rows, 0)))), _if_then_else(le(_if_then_else(ge(max_row_clue, 2), _if_then_else(False, 0, zeros_diff_cols), _if_then_else(False, 3, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(False, zeros_diff_rows, max_row_clue), _if_then_else(False, 1, ones_diff_cols))), _if_then_else(le(_if_then_else(True, 0, zeros_diff_cols), _if_then_else(False, 2, max_row_clue)), _if_then_else(le(1, ones_diff_cols), _if_then_else(False, 2, ones_diff_rows), _if_then_else(False, ones_diff_rows, zeros_diff_rows)), _if_then_else(or_(False, True), _if_then_else(False, 1, compare_blocks_rows), _if_then_else(True, max_row_clue, 0))), _if_then_else(or_(le(compare_blocks_cols, 1), ge(zeros_diff_cols, zeros_diff_cols)), _if_then_else(ge(1, 3), _if_then_else(True, 4, 4), _if_then_else(True, ones_diff_cols, max_row_clue)), _if_then_else(or_(True, True), _if_then_else(False, 2, 3), _if_then_else(True, compare_blocks_cols, max_col_clue))))), ones_diff_cols, 4))), ge(1, 0)))
or_(ge(_if_then_else(ge(4, compare_blocks_cols), ones_diff_cols, zeros_diff_cols), _if_then_else(ge(_if_then_else(le(max_col_clue, zeros_diff_rows), 2, zeros_diff_cols), _if_then_else(False, _if_then_else(True, max_col_clue, 3), max_row_clue)), _if_then_else(le(_if_then_else(le(_if_then_else(True, max_col_clue, compare_blocks_cols), _if_then_else(True, _if_then_else(True, 2, ones_diff_rows), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(or_(or_(False, False), False), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(False, 2, _if_then_else(True, max_col_clue, 3))), _if_then_else(and_(True, False), _if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(and_(True, True), zeros_diff_cols, 4))), zeros_diff_cols), 2, _if_then_else(True, max_row_clue, 3)), _if_then_else(ge(max_row_clue, ones_diff_rows), compare_blocks_cols, _if_then_else(and_(ge(_if_then_else(ge(4, compare_blocks_cols), 3, zeros_diff_cols), max_row_clue), True), _if_then_else(False, 0, compare_blocks_rows), zeros_diff_rows)))), or_(or_(False, le(compare_blocks_cols, 0)), ge(zeros_diff_rows, ones_diff_rows)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, max_row_clue, zeros_diff_cols)), le(_if_then_else(False, 1, max_col_clue), _if_then_else(le(3, 0), ones_diff_rows, max_row_clue))), ge(_if_then_else(or_(False, True), _if_then_else(True, max_col_clue, compare_blocks_rows), max_col_clue), _if_then_else(and_(True, False), max_row_clue, _if_then_else(True, 4, 1))))
ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(or_(False, False), _if_then_else(True, _if_then_else(True, _if_then_else(True, compare_blocks_cols, compare_blocks_rows), compare_blocks_rows), zeros_diff_cols), _if_then_else(False, zeros_diff_cols, _if_then_else(True, zeros_diff_cols, compare_blocks_cols))))
or_(and_(and_(False, or_(True, or_(True, True))), and_(ge(max_col_clue, max_col_clue), or_(False, True))), ge(_if_then_else(ge(zeros_diff_cols, 4), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, ones_diff_cols, max_col_clue)), _if_then_else(le(_if_then_else(and_(or_(ge(3, zeros_diff_rows), or_(False, False)), ge(_if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, compare_blocks_rows))), _if_then_else(and_(and_(False, False), ge(4, 4)), _if_then_else(ge(zeros_diff_cols, 1), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(False, 4, ones_diff_cols)), _if_then_else(le(3, max_row_clue), _if_then_else(True, 4, 0), _if_then_else(False, zeros_diff_cols, ones_diff_rows))), _if_then_else(le(_if_then_else(True, 4, 4), _if_then_else(True, compare_blocks_cols, compare_blocks_rows)), _if_then_else(and_(False, and_(True, True)), _if_then_else(False, 4, 1), _if_then_else(True, 3, 0)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, ones_diff_rows)))), 4), max_col_clue, zeros_diff_cols)))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, 2), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(or_(ge(_if_then_else(True, zeros_diff_rows, _if_then_else(False, 1, 1)), 2), and_(True, False)), _if_then_else(or_(False, True), _if_then_else(False, zeros_diff_rows, 0), _if_then_else(False, 4, compare_blocks_cols)), _if_then_else(ge(ones_diff_cols, ones_diff_cols), _if_then_else(True, max_row_clue, _if_then_else(False, _if_then_else(False, 3, zeros_diff_cols), ones_diff_rows)), _if_then_else(le(_if_then_else(True, compare_blocks_rows, 2), _if_then_else(True, max_row_clue, ones_diff_rows)), ones_diff_rows, _if_then_else(False, 1, 2))))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(True, False), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, _if_then_else(True, zeros_diff_rows, 3)), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(False, or_(or_(True, False), and_(False, False)))))
and_(and_(and_(False, True), ge(max_col_clue, ones_diff_rows)), ge(_if_then_else(True, zeros_diff_rows, 2), _if_then_else(True, _if_then_else(True, _if_then_else(False, _if_then_else(False, 2, ones_diff_rows), max_row_clue), _if_then_else(True, zeros_diff_cols, 4)), ones_diff_rows)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
le(_if_then_else(ge(_if_then_else(True, max_col_clue, compare_blocks_rows), max_row_clue), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(True, _if_then_else(False, max_row_clue, max_col_clue), 1)), _if_then_else(le(_if_then_else(and_(True, False), _if_then_else(le(max_col_clue, compare_blocks_rows), 4, zeros_diff_rows), _if_then_else(True, 4, 1)), _if_then_else(False, max_col_clue, ones_diff_rows)), _if_then_else(True, 2, _if_then_else(False, max_col_clue, zeros_diff_rows)), _if_then_else(ge(ones_diff_rows, ones_diff_rows), 0, zeros_diff_cols)))
or_(or_(or_(False, False), ge(zeros_diff_cols, _if_then_else(True, max_col_clue, _if_then_else(False, 2, ones_diff_rows)))), or_(or_(True, True), and_(or_(False, False), True)))
and_(or_(ge(_if_then_else(ge(3, compare_blocks_rows), _if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(False, ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, max_row_clue, ones_diff_cols))), le(_if_then_else(ge(compare_blocks_rows, ones_diff_rows), _if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(False, 1, ones_diff_rows)), _if_then_else(ge(0, 2), _if_then_else(True, zeros_diff_rows, 2), _if_then_else(False, ones_diff_rows, zeros_diff_rows)))), and_(ge(_if_then_else(and_(True, True), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(False, 4, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(True, 4, 0), _if_then_else(True, compare_blocks_rows, compare_blocks_cols))), and_(ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), and_(le(compare_blocks_cols, zeros_diff_cols), and_(False, False)))))
le(_if_then_else(le(_if_then_else(ge(ones_diff_cols, max_col_clue), _if_then_else(True, zeros_diff_rows, 2), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(or_(False, True), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(False, 3, zeros_diff_cols))), _if_then_else(or_(and_(True, True), le(compare_blocks_rows, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(True, 2, 3), _if_then_else(False, 4, 2)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 2, 2))), _if_then_else(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(True, max_col_clue, _if_then_else(False, max_row_clue, 2))), _if_then_else(ge(zeros_diff_rows, 0), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, compare_blocks_rows, 3)), _if_then_else(or_(True, True), max_col_clue, _if_then_else(False, ones_diff_rows, max_row_clue)))), _if_then_else(ge(_if_then_else(ge(ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(ge(3, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(True, 0, 4))), _if_then_else(and_(or_(False, True), ge(ones_diff_cols, max_row_clue)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_cols, 4), _if_then_else(False, zeros_diff_rows, max_col_clue)), _if_then_else(ge(compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 0, 3), _if_then_else(False, zeros_diff_cols, max_col_clue))), _if_then_else(ge(_if_then_else(False, 1, ones_diff_rows), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(False, 4, 2), _if_then_else(False, 4, 2)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_rows, 0), _if_then_else(False, 4, 4)))))
and_(le(4, zeros_diff_cols), ge(_if_then_else(False, 4, ones_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)))
VAL TREES:
mul(add(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols)), add(mul(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, zeros_diff_rows)))
mul(add(add(mul(mul(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows))), add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)))), mul(mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(ones_diff_rows, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows))), add(add(add(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)))))
mul(mul(add(mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)))), add(mul(mul(mul(ones_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_cols)), mul(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols))), add(add(add(compare_blocks_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)))))
mul(mul(add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows))), mul(mul(add(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols))))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_cols)), add(add(ones_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, max_row_clue, ones_diff_cols)), le(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, ones_diff_rows, max_row_clue))), ge(_if_then_else(or_(False, True), _if_then_else(True, max_col_clue, compare_blocks_rows), max_col_clue), _if_then_else(and_(True, False), _if_then_else(le(max_col_clue, compare_blocks_rows), 4, zeros_diff_rows), _if_then_else(True, 4, 1))))
ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(True, _if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols))))
or_(and_(and_(False, or_(True, True)), and_(ge(max_col_clue, max_col_clue), or_(False, True))), ge(_if_then_else(ge(_if_then_else(ge(zeros_diff_cols, 4), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, ones_diff_cols, max_col_clue)), _if_then_else(le(compare_blocks_cols, 4), max_col_clue, _if_then_else(True, 0, ones_diff_rows))), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, ones_diff_cols, max_col_clue)), _if_then_else(le(compare_blocks_cols, 4), max_col_clue, _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, 2), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(True, False), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 1))), or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), or_(or_(True, False), and_(False, False)))))
or_(ge(_if_then_else(ge(4, compare_blocks_cols), 3, zeros_diff_cols), _if_then_else(True, _if_then_else(True, _if_then_else(False, 1, max_row_clue), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(True, zeros_diff_cols, 4))), or_(or_(False, ge(max_col_clue, ones_diff_cols)), ge(zeros_diff_rows, ones_diff_rows)))
VAL TREES:
add(mul(add(mul(mul(ones_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_rows, compare_blocks_rows))), add(add(add(mul(ones_diff_cols, mul(mul(ones_diff_rows, ones_diff_rows), compare_blocks_cols)), mul(add(compare_blocks_cols, mul(zeros_diff_rows, zeros_diff_rows)), zeros_diff_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_cols), add(ones_diff_cols, zeros_diff_cols))), zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(mul(mul(mul(zeros_diff_rows, ones_diff_rows), add(add(compare_blocks_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_cols))), add(add(add(add(add(zeros_diff_rows, mul(compare_blocks_cols, ones_diff_cols)), mul(ones_diff_rows, ones_diff_rows)), mul(mul(mul(zeros_diff_rows, compare_blocks_cols), ones_diff_rows), add(add(ones_diff_cols, ones_diff_rows), compare_blocks_cols))), add(ones_diff_cols, ones_diff_rows)), mul(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols))), compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, mul(add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(ones_diff_rows, ones_diff_cols), add(zeros_diff_cols, compare_blocks_cols)))), add(compare_blocks_cols, ones_diff_rows)), add(add(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_rows, zeros_diff_rows)), add(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows))))
mul(mul(add(compare_blocks_cols, add(add(mul(add(compare_blocks_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_cols)), mul(mul(compare_blocks_cols, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), mul(add(add(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, ones_diff_rows)), add(add(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols))))), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, add(add(mul(ones_diff_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), add(mul(zeros_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))))))
mul(mul(mul(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, mul(mul(mul(ones_diff_cols, mul(compare_blocks_cols, compare_blocks_cols)), mul(ones_diff_rows, add(add(ones_diff_cols, ones_diff_rows), zeros_diff_rows))), mul(add(ones_diff_rows, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)))), mul(ones_diff_cols, ones_diff_cols)))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, max_row_clue, ones_diff_cols)), le(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(or_(le(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, ones_diff_rows, max_row_clue)), True), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, max_col_clue, compare_blocks_cols)))), ge(_if_then_else(or_(False, True), _if_then_else(True, max_col_clue, compare_blocks_rows), max_col_clue), _if_then_else(and_(True, False), _if_then_else(le(max_col_clue, compare_blocks_rows), 4, zeros_diff_rows), _if_then_else(True, 4, zeros_diff_cols))))
ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, 4, 4))
or_(and_(and_(False, or_(True, or_(True, True))), and_(ge(max_col_clue, max_col_clue), or_(False, True))), False)
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, 2), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(True, False), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), or_(or_(True, False), and_(False, True)))))
or_(ge(_if_then_else(ge(4, compare_blocks_cols), 3, zeros_diff_cols), _if_then_else(True, _if_then_else(True, _if_then_else(False, 1, max_row_clue), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), zeros_diff_rows)), or_(or_(False, ge(max_col_clue, ones_diff_cols)), ge(zeros_diff_rows, ones_diff_rows)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, add(add(add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows))), add(add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_cols)), add(mul(ones_diff_cols, ones_diff_cols), mul(zeros_diff_rows, compare_blocks_rows)))))), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(mul(mul(mul(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), mul(ones_diff_rows, compare_blocks_cols))), mul(mul(mul(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols)), add(mul(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)))), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)), add(add(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_cols, compare_blocks_rows))), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(add(add(ones_diff_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols))), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), mul(mul(add(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, zeros_diff_rows))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(zeros_diff_rows, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))))))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, max_row_clue, ones_diff_cols)), True), ge(_if_then_else(le(2, 1), _if_then_else(True, max_col_clue, compare_blocks_rows), max_col_clue), _if_then_else(True, 1, ones_diff_rows)))
ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), ones_diff_rows))
or_(and_(and_(False, or_(True, True)), ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, zeros_diff_cols))), ge(_if_then_else(ge(zeros_diff_cols, 4), _if_then_else(True, _if_then_else(True, 1, zeros_diff_rows), ones_diff_rows), _if_then_else(False, ones_diff_rows, max_col_clue)), _if_then_else(le(compare_blocks_cols, 4), max_col_clue, _if_then_else(ge(_if_then_else(ge(zeros_diff_cols, 4), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, ones_diff_cols, max_col_clue)), _if_then_else(le(compare_blocks_cols, 4), max_col_clue, _if_then_else(False, zeros_diff_cols, 4))), zeros_diff_cols, 4))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, 2), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(ge(_if_then_else(True, ones_diff_cols, compare_blocks_cols), _if_then_else(False, 3, ones_diff_rows)), False), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(ge(_if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), or_(or_(True, False), and_(False, False)))))
or_(ge(_if_then_else(ge(4, compare_blocks_cols), 3, zeros_diff_cols), _if_then_else(True, _if_then_else(True, _if_then_else(False, _if_then_else(False, 2, 4), max_row_clue), _if_then_else(False, 4, compare_blocks_cols)), _if_then_else(True, zeros_diff_cols, 4))), or_(or_(False, ge(max_col_clue, ones_diff_cols)), ge(max_col_clue, ones_diff_rows)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
and_(or_(le(_if_then_else(or_(True, False), _if_then_else(True, 0, ones_diff_cols), _if_then_else(True, 3, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, 4))), ge(_if_then_else(or_(False, True), _if_then_else(False, 2, 2), _if_then_else(True, zeros_diff_cols, 1)), _if_then_else(ge(zeros_diff_rows, max_col_clue), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, 1)))), ge(_if_then_else(and_(and_(False, True), le(_if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_cols, compare_blocks_rows), _if_then_else(True, 3, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_cols), _if_then_else(False, 0, 4), _if_then_else(False, 2, ones_diff_cols))), _if_then_else(and_(ge(1, zeros_diff_cols), or_(True, False)), _if_then_else(or_(False, False), _if_then_else(False, ones_diff_cols, 3), _if_then_else(True, zeros_diff_cols, zeros_diff_cols)), _if_then_else(le(compare_blocks_cols, ones_diff_rows), _if_then_else(False, compare_blocks_rows, 1), _if_then_else(False, zeros_diff_rows, zeros_diff_rows))), _if_then_else(or_(or_(False, False), and_(True, False)), _if_then_else(ge(ones_diff_cols, 1), _if_then_else(True, max_row_clue, 1), _if_then_else(True, 0, 2)), _if_then_else(and_(True, False), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(True, zeros_diff_cols, max_col_clue)))), zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(True, 2, 4)), _if_then_else(ge(max_col_clue, 4), _if_then_else(True, ones_diff_cols, 1), _if_then_else(True, ones_diff_cols, 0))), _if_then_else(le(_if_then_else(True, ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, 1)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(False, _if_then_else(False, zeros_diff_cols, 4), 4)), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_rows, max_col_clue), _if_then_else(True, compare_blocks_cols, ones_diff_cols)))))
ge(_if_then_else(ge(max_col_clue, 0), _if_then_else(False, 3, 1), 0), _if_then_else(ge(max_row_clue, 2), _if_then_else(False, 3, 2), _if_then_else(False, 2, _if_then_else(le(_if_then_else(False, zeros_diff_rows, 0), _if_then_else(True, 0, 1)), _if_then_else(and_(True, False), _if_then_else(True, 0, 1), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(True, 0, 0), _if_then_else(False, ones_diff_cols, 4))))))
le(_if_then_else(or_(ge(_if_then_else(False, 1, compare_blocks_rows), _if_then_else(False, max_row_clue, compare_blocks_rows)), or_(le(2, ones_diff_cols), and_(True, True))), _if_then_else(or_(le(4, 4), le(compare_blocks_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(False, 3, zeros_diff_rows)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, 2, compare_blocks_cols))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_col_clue), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(ge(4, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_row_clue, zeros_diff_rows)))), _if_then_else(or_(le(_if_then_else(True, compare_blocks_rows, 3), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)), le(_if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, max_row_clue, 3))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(True, 0, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(False, 1, 3), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(ge(ones_diff_cols, 1), _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, max_row_clue, zeros_diff_rows))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 1, 0)), _if_then_else(or_(True, False), _if_then_else(False, 1, compare_blocks_cols), _if_then_else(False, max_row_clue, zeros_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 4, 3)))))
le(_if_then_else(or_(and_(le(compare_blocks_cols, ones_diff_rows), or_(True, False)), ge(_if_then_else(False, 0, 1), _if_then_else(True, _if_then_else(True, max_row_clue, zeros_diff_cols), 4))), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(False, max_row_clue, zeros_diff_cols)), 2)
or_(and_(le(_if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(True, max_col_clue, 0)), ge(_if_then_else(False, compare_blocks_rows, 1), _if_then_else(False, zeros_diff_rows, 0))), ge(_if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(True, 1, 3)))
VAL TREES:
add(add(add(compare_blocks_cols, mul(ones_diff_rows, compare_blocks_cols)), add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_cols))), mul(add(zeros_diff_cols, add(zeros_diff_rows, compare_blocks_cols)), add(zeros_diff_cols, ones_diff_rows)))
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), mul(add(add(zeros_diff_rows, ones_diff_rows), add(compare_blocks_rows, ones_diff_rows)), add(add(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows)))))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, compare_blocks_cols)))
mul(add(add(add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_cols, ones_diff_cols)), mul(mul(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows))), mul(mul(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols)), add(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, zeros_diff_cols)))), mul(add(mul(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)), add(mul(ones_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(add(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_rows)))))
add(mul(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_rows)))
add(mul(mul(ones_diff_cols, add(ones_diff_rows, zeros_diff_cols)), add(compare_blocks_cols, compare_blocks_cols)), mul(add(ones_diff_rows, mul(compare_blocks_cols, zeros_diff_rows)), mul(zeros_diff_cols, mul(mul(add(add(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, ones_diff_cols))), compare_blocks_cols))))
COND TREES:
le(_if_then_else(ge(_if_then_else(True, max_col_clue, compare_blocks_rows), max_row_clue), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(True, 4, 1)), _if_then_else(le(compare_blocks_cols, _if_then_else(False, max_col_clue, ones_diff_rows)), _if_then_else(True, 2, _if_then_else(False, max_col_clue, zeros_diff_rows)), _if_then_else(False, 0, zeros_diff_cols)))
or_(or_(or_(False, False), ge(zeros_diff_cols, 1)), or_(or_(True, True), and_(and_(or_(True, True), True), True)))
and_(or_(ge(_if_then_else(ge(3, compare_blocks_rows), _if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(False, ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, max_row_clue, ones_diff_cols))), le(_if_then_else(ge(compare_blocks_rows, ones_diff_rows), _if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(False, 1, ones_diff_rows)), _if_then_else(ge(0, 2), _if_then_else(True, zeros_diff_rows, 2), _if_then_else(False, ones_diff_rows, zeros_diff_rows)))), and_(ge(_if_then_else(and_(True, True), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(False, 4, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(True, 4, 0), _if_then_else(True, compare_blocks_rows, _if_then_else(ge(zeros_diff_cols, 4), _if_then_else(True, 0, ones_diff_rows), _if_then_else(False, ones_diff_cols, 4))))), and_(ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), and_(le(compare_blocks_cols, zeros_diff_cols), and_(False, False)))))
le(_if_then_else(le(_if_then_else(ge(ones_diff_cols, max_col_clue), _if_then_else(True, zeros_diff_rows, 2), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(or_(False, True), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(False, 3, zeros_diff_cols))), _if_then_else(or_(and_(True, True), le(_if_then_else(True, max_col_clue, _if_then_else(or_(False, True), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 1, compare_blocks_cols))), _if_then_else(True, max_row_clue, ones_diff_rows))), _if_then_else(and_(True, False), _if_then_else(True, 2, 3), _if_then_else(False, 4, 2)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 2, 2))), _if_then_else(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(True, max_col_clue, _if_then_else(False, max_row_clue, 2))), _if_then_else(ge(zeros_diff_rows, 0), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, compare_blocks_rows, 3)), _if_then_else(or_(True, True), max_col_clue, _if_then_else(False, ones_diff_rows, 4)))), _if_then_else(ge(_if_then_else(ge(ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(ge(3, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(True, 0, 4))), _if_then_else(and_(or_(False, True), ge(ones_diff_cols, max_row_clue)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_cols, 4), _if_then_else(False, zeros_diff_rows, max_col_clue)), _if_then_else(ge(compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 0, 3), _if_then_else(False, zeros_diff_cols, max_col_clue))), _if_then_else(ge(_if_then_else(False, 1, ones_diff_rows), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(False, 4, 2), _if_then_else(True, ones_diff_cols, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_rows, 0), _if_then_else(False, 4, 4)))))
and_(and_(le(compare_blocks_rows, max_row_clue), or_(le(compare_blocks_cols, 1), False)), ge(_if_then_else(le(compare_blocks_cols, 1), 4, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)))
VAL TREES:
mul(add(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols)), add(mul(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, zeros_diff_rows)))
mul(add(add(mul(mul(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows))), add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)))), mul(mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(ones_diff_rows, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows))), add(add(add(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)))))
mul(mul(add(mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)))), add(mul(mul(mul(ones_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_cols)), mul(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols))), add(add(add(compare_blocks_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)))))
mul(mul(add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows))), mul(mul(add(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols))))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_cols)), add(add(ones_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)))
COND TREES:
or_(le(_if_then_else(True, 4, 1), 2), and_(and_(True, False), and_(le(max_col_clue, ones_diff_rows), True)))
ge(_if_then_else(le(max_col_clue, ones_diff_rows), _if_then_else(True, 0, zeros_diff_rows), _if_then_else(le(zeros_diff_cols, max_row_clue), 4, 4)), _if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(or_(False, False), 4, zeros_diff_cols), _if_then_else(False, 2, compare_blocks_cols)), _if_then_else(and_(False, False), _if_then_else(True, max_row_clue, _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(True, 1, 3))), _if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, 4, 1)))
or_(False, le(_if_then_else(True, compare_blocks_rows, ones_diff_rows), _if_then_else(False, ones_diff_cols, max_col_clue)))
ge(_if_then_else(False, _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, 2, 1)), _if_then_else(False, _if_then_else(False, zeros_diff_rows, ones_diff_cols), _if_then_else(False, compare_blocks_rows, ones_diff_cols)))
ge(_if_then_else(or_(and_(True, False), ge(2, 4)), _if_then_else(or_(False, False), compare_blocks_rows, _if_then_else(True, max_col_clue, max_col_clue)), _if_then_else(and_(False, True), _if_then_else(True, 1, ones_diff_rows), _if_then_else(False, ones_diff_rows, 1))), _if_then_else(and_(and_(True, le(1, 4)), le(compare_blocks_cols, max_col_clue)), _if_then_else(le(zeros_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 1, compare_blocks_cols)), _if_then_else(ge(1, compare_blocks_rows), _if_then_else(False, 3, 2), _if_then_else(True, compare_blocks_cols, ones_diff_cols))))
VAL TREES:
mul(mul(mul(add(mul(compare_blocks_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_rows, compare_blocks_rows))), mul(add(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_rows)), add(mul(compare_blocks_cols, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_cols)))), mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows))), add(add(mul(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))))
add(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols)), add(add(zeros_diff_cols, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows)))
mul(add(add(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows)))
add(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_cols, mul(compare_blocks_cols, zeros_diff_rows))), mul(mul(mul(compare_blocks_cols, compare_blocks_cols), add(zeros_diff_cols, ones_diff_rows)), mul(compare_blocks_cols, mul(compare_blocks_rows, ones_diff_rows))))
add(add(mul(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, max_row_clue, _if_then_else(and_(ge(_if_then_else(or_(False, True), _if_then_else(True, 2, 0), _if_then_else(False, 0, 4)), _if_then_else(le(4, ones_diff_rows), _if_then_else(False, 0, max_row_clue), _if_then_else(False, ones_diff_rows, 4))), or_(or_(and_(False, False), and_(True, False)), le(_if_then_else(True, 2, 3), _if_then_else(False, 3, compare_blocks_cols)))), _if_then_else(and_(or_(le(1, max_row_clue), or_(False, True)), le(_if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 2, compare_blocks_rows))), _if_then_else(ge(_if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, ones_diff_rows, 0)), _if_then_else(or_(False, False), _if_then_else(False, 0, max_col_clue), _if_then_else(False, 3, zeros_diff_cols)), _if_then_else(le(4, 1), _if_then_else(True, max_row_clue, max_col_clue), _if_then_else(True, zeros_diff_cols, 2))), _if_then_else(or_(or_(False, True), or_(False, True)), _if_then_else(le(ones_diff_cols, 4), _if_then_else(False, ones_diff_rows, 3), _if_then_else(False, 2, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, 1, ones_diff_rows), _if_then_else(False, max_row_clue, zeros_diff_cols)))), _if_then_else(ge(_if_then_else(le(0, 2), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_cols, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, ones_diff_rows))), _if_then_else(le(_if_then_else(True, 0, ones_diff_rows), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, ones_diff_cols, ones_diff_cols)), _if_then_else(and_(False, False), _if_then_else(True, ones_diff_rows, 3), _if_then_else(False, max_col_clue, zeros_diff_cols))), _if_then_else(and_(and_(False, True), or_(True, False)), _if_then_else(le(ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 0, 4)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_cols, 0), _if_then_else(False, ones_diff_cols, 4))))))), le(_if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(True, ones_diff_rows, max_row_clue))), ge(_if_then_else(and_(True, True), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, max_col_clue, compare_blocks_cols)), _if_then_else(and_(le(1, ones_diff_rows), True), _if_then_else(True, max_col_clue, max_row_clue), _if_then_else(True, 4, 1))))
ge(_if_then_else(or_(le(_if_then_else(le(4, compare_blocks_rows), _if_then_else(True, ones_diff_rows, 2), _if_then_else(True, zeros_diff_rows, 0)), 4), False), _if_then_else(True, _if_then_else(True, compare_blocks_cols, compare_blocks_rows), compare_blocks_rows), _if_then_else(False, ones_diff_cols, 0)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), compare_blocks_cols))
or_(and_(and_(False, or_(True, True)), and_(ge(max_col_clue, max_col_clue), or_(False, True))), ge(max_col_clue, _if_then_else(le(compare_blocks_cols, 4), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, _if_then_else(True, _if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 1, compare_blocks_cols))), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(and_(and_(and_(or_(True, True), le(3, compare_blocks_cols)), or_(or_(True, False), ge(zeros_diff_cols, 2))), le(_if_then_else(ge(compare_blocks_rows, max_col_clue), _if_then_else(True, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, 2, ones_diff_rows), _if_then_else(True, 4, ones_diff_cols)))), _if_then_else(ge(_if_then_else(le(0, max_row_clue), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(ge(zeros_diff_rows, zeros_diff_cols), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, max_row_clue))), _if_then_else(or_(or_(False, True), ge(4, ones_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, 0, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, 4, ones_diff_cols), _if_then_else(False, 4, 4))), _if_then_else(le(_if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(True, max_row_clue, zeros_diff_rows)), _if_then_else(and_(False, True), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, max_col_clue, 4)), _if_then_else(ge(zeros_diff_rows, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(True, 2, zeros_diff_rows)))), _if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(True, 3, zeros_diff_cols), _if_then_else(False, max_row_clue, 0)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_rows, 0), _if_then_else(True, 2, 0))), _if_then_else(ge(_if_then_else(False, _if_then_else(True, ones_diff_cols, 4), ones_diff_rows), _if_then_else(True, zeros_diff_rows, ones_diff_cols)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_cols, max_col_clue), _if_then_else(True, 0, 1)), _if_then_else(ge(4, 4), _if_then_else(False, 1, 1), _if_then_else(True, 0, 3))), _if_then_else(le(_if_then_else(True, zeros_diff_cols, 1), _if_then_else(True, ones_diff_rows, 4)), _if_then_else(ge(ones_diff_rows, 1), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)), _if_then_else(ge(compare_blocks_rows, 0), _if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(False, ones_diff_rows, 2))))), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), or_(or_(True, False), and_(False, False)))))
or_(ge(_if_then_else(and_(ge(3, zeros_diff_rows), and_(False, True)), _if_then_else(and_(False, False), _if_then_else(False, 2, max_row_clue), _if_then_else(True, compare_blocks_cols, 0)), _if_then_else(or_(False, False), _if_then_else(True, 1, ones_diff_cols), _if_then_else(True, 0, ones_diff_rows))), _if_then_else(True, _if_then_else(False, 3, 2), _if_then_else(False, zeros_diff_cols, 4))), or_(or_(True, ge(max_col_clue, zeros_diff_rows)), ge(zeros_diff_rows, ones_diff_rows)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
add(mul(add(add(add(ones_diff_rows, ones_diff_cols), mul(compare_blocks_rows, compare_blocks_cols)), add(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))), mul(mul(mul(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_cols, compare_blocks_rows)), add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_rows)))), mul(add(add(add(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), add(mul(ones_diff_rows, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows))), mul(add(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_cols, compare_blocks_cols)), add(mul(zeros_diff_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))))
mul(add(add(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), add(add(zeros_diff_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols))), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, mul(add(add(add(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows)), add(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))), add(add(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_cols, ones_diff_rows)), add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_rows, ones_diff_rows)))))))
mul(add(mul(mul(mul(mul(ones_diff_cols, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_rows)), add(add(ones_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))), add(mul(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_rows, compare_blocks_rows)), add(add(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_cols)))), mul(add(add(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_rows))), mul(mul(add(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, zeros_diff_rows), add(ones_diff_rows, compare_blocks_rows))))), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(mul(add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, zeros_diff_rows))), zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
le(_if_then_else(ge(_if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(le(_if_then_else(False, compare_blocks_rows, _if_then_else(or_(le(_if_then_else(le(1, max_col_clue), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, 2, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(False, 0, max_col_clue), _if_then_else(True, 1, ones_diff_cols))), ge(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, ones_diff_rows), _if_then_else(True, zeros_diff_rows, 3)), _if_then_else(or_(False, True), _if_then_else(False, max_col_clue, 0), _if_then_else(True, 0, max_col_clue)))), _if_then_else(le(_if_then_else(or_(True, True), _if_then_else(True, ones_diff_rows, compare_blocks_cols), _if_then_else(True, ones_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, True), _if_then_else(True, ones_diff_rows, compare_blocks_cols), _if_then_else(False, 1, ones_diff_rows))), _if_then_else(and_(ge(ones_diff_cols, max_row_clue), ge(compare_blocks_cols, 1)), _if_then_else(and_(True, True), _if_then_else(True, 2, max_row_clue), _if_then_else(False, 0, 2)), _if_then_else(ge(max_col_clue, compare_blocks_cols), _if_then_else(False, 3, 3), _if_then_else(and_(True, False), zeros_diff_cols, 0))), _if_then_else(ge(_if_then_else(False, max_row_clue, zeros_diff_rows), _if_then_else(False, 2, 3)), _if_then_else(le(zeros_diff_cols, 0), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(False, _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, 3, max_col_clue)))), _if_then_else(and_(and_(and_(True, True), le(zeros_diff_rows, compare_blocks_cols)), or_(and_(False, True), or_(True, True))), _if_then_else(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(False, ones_diff_cols, max_col_clue)), _if_then_else(le(3, max_row_clue), _if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(ge(4, 3), _if_then_else(False, ones_diff_rows, max_row_clue), _if_then_else(False, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(2, 3), or_(False, True)), _if_then_else(le(max_row_clue, max_col_clue), _if_then_else(False, 4, 1), _if_then_else(False, 2, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, 1, 4), _if_then_else(True, 2, zeros_diff_rows)))))), _if_then_else(False, 4, 1)), _if_then_else(ge(zeros_diff_cols, 0), _if_then_else(False, 1, 2), _if_then_else(True, ones_diff_cols, ones_diff_cols)), _if_then_else(ge(1, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, ones_diff_cols, max_row_clue)))), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(True, 4, 1)), _if_then_else(le(compare_blocks_cols, _if_then_else(False, max_col_clue, 0)), 2, _if_then_else(ge(ones_diff_rows, ones_diff_rows), 0, zeros_diff_cols)))
or_(or_(or_(False, False), ge(compare_blocks_cols, 4)), or_(or_(True, True), and_(and_(or_(or_(ge(_if_then_else(True, _if_then_else(True, _if_then_else(False, max_row_clue, zeros_diff_cols), 3), compare_blocks_rows), _if_then_else(and_(ge(zeros_diff_rows, ones_diff_cols), or_(False, False)), 4, max_col_clue)), and_(le(compare_blocks_cols, _if_then_else(True, compare_blocks_cols, zeros_diff_cols)), and_(True, True))), True), True), True)))
and_(or_(ge(_if_then_else(ge(3, compare_blocks_rows), _if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(False, ones_diff_rows, _if_then_else(and_(le(_if_then_else(True, 1, compare_blocks_rows), _if_then_else(True, 2, 2)), or_(and_(False, False), and_(True, False))), _if_then_else(or_(and_(True, False), ge(compare_blocks_rows, 1)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_rows, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)), _if_then_else(le(ones_diff_cols, max_col_clue), _if_then_else(False, ones_diff_cols, 3), _if_then_else(True, 0, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, 4, 1), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, 4, 2), _if_then_else(True, 1, compare_blocks_rows)), _if_then_else(and_(False, False), _if_then_else(False, 0, compare_blocks_cols), _if_then_else(True, 2, 1)))))), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_rows, 1), _if_then_else(True, max_row_clue, ones_diff_cols))), le(_if_then_else(ge(max_col_clue, ones_diff_rows), _if_then_else(le(_if_then_else(le(0, 2), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(True, ones_diff_rows, max_row_clue)), _if_then_else(le(zeros_diff_rows, max_col_clue), _if_then_else(True, ones_diff_cols, 3), _if_then_else(False, 0, ones_diff_cols))), ones_diff_rows, ones_diff_cols), _if_then_else(False, 1, max_row_clue)), _if_then_else(ge(0, 2), _if_then_else(True, zeros_diff_rows, 2), _if_then_else(False, ones_diff_rows, zeros_diff_rows)))), and_(True, and_(ge(_if_then_else(False, zeros_diff_cols, 1), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), and_(le(compare_blocks_cols, zeros_diff_cols), and_(False, False)))))
le(_if_then_else(le(_if_then_else(ge(ones_diff_cols, max_col_clue), _if_then_else(True, zeros_diff_rows, 2), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(False, 3, zeros_diff_cols))), _if_then_else(or_(and_(True, True), le(compare_blocks_rows, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(True, 2, 3), _if_then_else(False, 4, 2)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 2, 2))), _if_then_else(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(True, max_col_clue, _if_then_else(False, max_row_clue, 2))), _if_then_else(ge(zeros_diff_rows, 0), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, compare_blocks_rows, 3)), _if_then_else(or_(True, True), _if_then_else(True, 3, compare_blocks_rows), _if_then_else(False, ones_diff_rows, max_row_clue)))), _if_then_else(ge(_if_then_else(ge(ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(False, 3, zeros_diff_cols)), _if_then_else(ge(3, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(True, 0, 4))), _if_then_else(and_(or_(False, True), ge(ones_diff_cols, max_row_clue)), _if_then_else(or_(False, or_(le(_if_then_else(le(_if_then_else(True, compare_blocks_rows, 4), _if_then_else(False, max_col_clue, max_col_clue)), _if_then_else(and_(True, False), _if_then_else(True, 0, 3), _if_then_else(True, 3, compare_blocks_rows)), _if_then_else(ge(ones_diff_cols, max_col_clue), _if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, ones_diff_rows))), _if_then_else(or_(le(3, compare_blocks_rows), or_(True, True)), _if_then_else(or_(True, True), _if_then_else(True, 1, 1), _if_then_else(True, zeros_diff_rows, 2)), _if_then_else(and_(True, False), _if_then_else(True, max_col_clue, 1), _if_then_else(False, max_row_clue, max_col_clue)))), le(_if_then_else(ge(_if_then_else(True, 0, compare_blocks_cols), _if_then_else(True, 2, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, 0), _if_then_else(False, ones_diff_rows, 0)), _if_then_else(le(compare_blocks_rows, 3), _if_then_else(False, compare_blocks_rows, 4), _if_then_else(True, zeros_diff_cols, ones_diff_cols))), _if_then_else(and_(or_(True, True), and_(True, False)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_cols, 1), _if_then_else(False, compare_blocks_rows, 3)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, _if_then_else(le(_if_then_else(ge(4, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, 2), _if_then_else(True, compare_blocks_cols, ones_diff_cols)), _if_then_else(and_(False, False), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(True, max_col_clue, 0))), _if_then_else(or_(and_(True, True), ge(ones_diff_rows, zeros_diff_cols)), _if_then_else(ge(1, 3), _if_then_else(True, zeros_diff_cols, 1), _if_then_else(False, max_row_clue, 0)), _if_then_else(ge(2, max_row_clue), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(True, 1, ones_diff_rows))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, ones_diff_rows)), _if_then_else(le(max_row_clue, 4), _if_then_else(False, 1, 4), _if_then_else(True, max_col_clue, zeros_diff_rows)), _if_then_else(le(max_row_clue, 0), _if_then_else(False, 0, 3), _if_then_else(True, 1, ones_diff_cols))))), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)))))), _if_then_else(False, zeros_diff_cols, 4), _if_then_else(False, zeros_diff_rows, max_col_clue)), _if_then_else(ge(2, compare_blocks_rows), _if_then_else(False, 0, 3), _if_then_else(False, zeros_diff_cols, max_col_clue))), _if_then_else(ge(_if_then_else(False, 1, ones_diff_rows), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(False, 4, 2), _if_then_else(True, ones_diff_cols, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_rows, 0), _if_then_else(False, 4, 4)))))
and_(and_(le(compare_blocks_rows, 0), or_(True, False)), ge(_if_then_else(False, 4, _if_then_else(ge(_if_then_else(le(_if_then_else(or_(True, False), _if_then_else(False, max_col_clue, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), _if_then_else(le(3, 4), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, 4, 0))), _if_then_else(or_(or_(True, False), and_(False, True)), _if_then_else(or_(False, True), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, ones_diff_rows, 2)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, ones_diff_cols))), _if_then_else(le(_if_then_else(False, max_col_clue, 2), _if_then_else(False, 1, 3)), _if_then_else(ge(0, ones_diff_cols), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, ones_diff_rows)), _if_then_else(le(compare_blocks_cols, ones_diff_cols), _if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(True, ones_diff_cols, ones_diff_cols)))), _if_then_else(ge(_if_then_else(ge(ones_diff_rows, 1), _if_then_else(True, zeros_diff_cols, 4), _if_then_else(True, zeros_diff_cols, 4)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(True, _if_then_else(False, _if_then_else(False, 1, max_row_clue), _if_then_else(False, zeros_diff_cols, 4)), ones_diff_cols))), _if_then_else(or_(ge(ones_diff_cols, compare_blocks_cols), or_(True, False)), _if_then_else(and_(True, False), _if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(False, max_row_clue, ones_diff_rows)), _if_then_else(le(2, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(True, 4, 1))), _if_then_else(or_(ge(ones_diff_cols, zeros_diff_rows), ge(0, max_col_clue)), _if_then_else(le(4, 4), _if_then_else(False, max_row_clue, 2), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(ge(4, max_row_clue), _if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, ones_diff_rows, 0))))), 3, 2)), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 1, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, ones_diff_cols), _if_then_else(False, _if_then_else(True, 2, 3), _if_then_else(True, zeros_diff_rows, zeros_diff_cols)), _if_then_else(False, ones_diff_cols, max_row_clue)), _if_then_else(or_(True, False), _if_then_else(True, compare_blocks_cols, _if_then_else(False, 2, max_col_clue)), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)))))
VAL TREES:
mul(add(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols)), add(mul(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, zeros_diff_rows)))
mul(add(add(mul(mul(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows))), add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)))), mul(mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(ones_diff_rows, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows))), add(add(add(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)))))
mul(mul(add(mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)))), add(mul(mul(mul(ones_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_cols)), mul(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols))), add(add(add(compare_blocks_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)))))
mul(mul(add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows))), mul(mul(add(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols))))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_cols)), add(add(ones_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, max_row_clue, ones_diff_cols)), le(_if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(True, ones_diff_rows, max_row_clue))), ge(_if_then_else(or_(False, True), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, max_col_clue, compare_blocks_cols)), _if_then_else(True, _if_then_else(False, max_col_clue, _if_then_else(or_(False, True), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(ge(ones_diff_rows, ones_diff_rows), _if_then_else(False, 2, 2), compare_blocks_cols))), _if_then_else(True, 4, 1))))
ge(_if_then_else(True, _if_then_else(True, _if_then_else(True, compare_blocks_cols, compare_blocks_rows), compare_blocks_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(or_(False, False), _if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, _if_then_else(True, max_col_clue, 4), ones_diff_rows)))
or_(and_(and_(False, True), and_(ge(max_col_clue, max_col_clue), or_(False, True))), ge(compare_blocks_cols, _if_then_else(le(compare_blocks_cols, 4), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, max_row_clue, 4))))
and_(le(_if_then_else(le(compare_blocks_rows, compare_blocks_cols), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(False, max_row_clue, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), or_(or_(or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), True), False), and_(False, False)))))
or_(False, True)
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_rows)))))
mul(mul(add(mul(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_rows))), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_rows)), add(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_rows, mul(zeros_diff_rows, compare_blocks_rows)))), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, mul(add(mul(add(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_cols, zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_rows), mul(zeros_diff_cols, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, ones_diff_cols), mul(zeros_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(compare_blocks_rows, compare_blocks_rows)))))))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), mul(mul(mul(zeros_diff_rows, mul(zeros_diff_rows, zeros_diff_rows)), mul(mul(compare_blocks_rows, compare_blocks_cols), zeros_diff_rows)), add(mul(zeros_diff_cols, zeros_diff_cols), add(zeros_diff_cols, zeros_diff_cols)))))
mul(mul(mul(add(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_rows))), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, max_row_clue, ones_diff_cols)), le(_if_then_else(le(2, ones_diff_rows), max_row_clue, max_col_clue), _if_then_else(True, ones_diff_rows, max_row_clue))), ge(_if_then_else(or_(False, True), _if_then_else(True, max_col_clue, compare_blocks_rows), max_col_clue), _if_then_else(and_(True, False), _if_then_else(le(max_col_clue, compare_blocks_rows), 4, zeros_diff_rows), _if_then_else(True, 4, 1))))
ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, _if_then_else(True, ones_diff_rows, 2), _if_then_else(True, zeros_diff_cols, 0))))
or_(and_(and_(False, or_(or_(True, True), True)), and_(ge(max_col_clue, max_col_clue), or_(False, True))), ge(zeros_diff_rows, _if_then_else(le(compare_blocks_cols, 4), max_col_clue, _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, max_row_clue), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(True, _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(True, False), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(and_(True, True), zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), or_(or_(True, False), and_(False, False)))))
or_(ge(_if_then_else(ge(4, _if_then_else(or_(True, ge(_if_then_else(False, 1, 0), _if_then_else(True, compare_blocks_rows, max_col_clue))), _if_then_else(False, 1, max_row_clue), _if_then_else(True, zeros_diff_cols, 4))), 3, zeros_diff_cols), _if_then_else(True, _if_then_else(False, _if_then_else(False, 2, ones_diff_rows), max_row_clue), _if_then_else(True, zeros_diff_cols, 4))), or_(or_(False, ge(max_col_clue, ones_diff_cols)), ge(zeros_diff_rows, ones_diff_rows)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, max_row_clue, ones_diff_cols)), le(_if_then_else(and_(and_(True, False), ge(ones_diff_cols, 2)), _if_then_else(and_(True, True), _if_then_else(False, 0, 1), _if_then_else(True, ones_diff_rows, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_cols, 0), _if_then_else(True, ones_diff_cols, compare_blocks_rows))), _if_then_else(True, ones_diff_rows, max_row_clue))), and_(True, le(2, _if_then_else(True, ones_diff_rows, _if_then_else(ge(compare_blocks_rows, _if_then_else(True, ones_diff_rows, _if_then_else(ge(compare_blocks_rows, ones_diff_rows), ones_diff_cols, 1))), ones_diff_cols, 1)))))
ge(_if_then_else(or_(False, False), _if_then_else(True, _if_then_else(True, compare_blocks_cols, compare_blocks_rows), compare_blocks_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(or_(False, False), _if_then_else(False, _if_then_else(or_(ge(2, compare_blocks_rows), ge(compare_blocks_rows, compare_blocks_cols)), _if_then_else(ge(zeros_diff_rows, 3), _if_then_else(False, 0, 0), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)), _if_then_else(ge(ones_diff_cols, max_row_clue), _if_then_else(True, max_col_clue, compare_blocks_cols), _if_then_else(False, max_col_clue, 1))), zeros_diff_cols), _if_then_else(False, 1, ones_diff_rows)))
or_(and_(and_(False, or_(True, True)), le(_if_then_else(le(3, ones_diff_cols), _if_then_else(True, 3, ones_diff_rows), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(le(3, _if_then_else(True, 0, _if_then_else(True, zeros_diff_cols, max_row_clue))), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, max_col_clue, 0)))), ge(1, _if_then_else(le(compare_blocks_cols, 4), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, _if_then_else(or_(False, True), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 1, compare_blocks_cols))), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 0, 2))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), True)))
or_(ge(1, _if_then_else(and_(True, le(1, 4)), _if_then_else(False, 1, max_row_clue), _if_then_else(False, zeros_diff_cols, 4))), or_(le(compare_blocks_cols, 1), ge(zeros_diff_rows, ones_diff_rows)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, max_row_clue, ones_diff_cols)), le(_if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(True, ones_diff_rows, max_row_clue))), ge(_if_then_else(and_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, max_row_clue, ones_diff_cols)), True), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, max_col_clue, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(True, max_col_clue, max_row_clue), _if_then_else(True, 4, 1))))
ge(_if_then_else(or_(False, False), _if_then_else(True, _if_then_else(True, compare_blocks_cols, compare_blocks_rows), compare_blocks_rows), _if_then_else(False, ones_diff_cols, 0)), _if_then_else(True, _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, 1, ones_diff_rows)))
or_(and_(and_(False, or_(True, True)), and_(ge(max_col_clue, max_col_clue), or_(False, True))), ge(_if_then_else(ge(zeros_diff_cols, 4), _if_then_else(True, 0, ones_diff_rows), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(le(compare_blocks_cols, 4), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, _if_then_else(True, _if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 1, compare_blocks_cols))), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(or_(True, False), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, _if_then_else(or_(False, True), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 1, compare_blocks_cols)), 4))), or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), or_(or_(True, False), and_(False, False)))))
or_(ge(1, _if_then_else(True, _if_then_else(False, 3, 2), _if_then_else(False, zeros_diff_cols, 4))), or_(or_(True, ge(max_col_clue, ones_diff_cols)), ge(ones_diff_rows, _if_then_else(True, _if_then_else(False, 1, max_row_clue), ones_diff_rows))))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
le(_if_then_else(ge(_if_then_else(True, max_col_clue, compare_blocks_rows), max_row_clue), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(True, 4, 1)), _if_then_else(True, _if_then_else(True, 2, _if_then_else(False, max_col_clue, zeros_diff_rows)), _if_then_else(ge(_if_then_else(True, max_col_clue, compare_blocks_rows), max_row_clue), 0, zeros_diff_cols)))
or_(or_(or_(False, False), ge(zeros_diff_cols, _if_then_else(True, max_col_clue, 4))), or_(or_(True, True), and_(and_(or_(True, True), True), True)))
and_(or_(ge(_if_then_else(ge(3, compare_blocks_rows), _if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(False, ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, max_row_clue, ones_diff_cols))), le(_if_then_else(ge(compare_blocks_rows, ones_diff_rows), _if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(False, 1, ones_diff_rows)), _if_then_else(ge(0, 2), _if_then_else(True, zeros_diff_rows, 2), _if_then_else(False, ones_diff_rows, zeros_diff_rows)))), and_(ge(_if_then_else(and_(True, True), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(False, 4, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(True, 4, 0), _if_then_else(True, compare_blocks_rows, compare_blocks_cols))), and_(True, and_(le(compare_blocks_cols, zeros_diff_cols), and_(False, False)))))
le(_if_then_else(le(_if_then_else(ge(ones_diff_cols, max_col_clue), _if_then_else(True, zeros_diff_rows, 2), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(or_(False, True), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(ge(_if_then_else(ge(ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(ge(3, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(True, 0, 4))), _if_then_else(and_(or_(False, True), ge(ones_diff_cols, max_row_clue)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_cols, 4), _if_then_else(False, zeros_diff_rows, max_col_clue)), _if_then_else(ge(compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 0, 3), _if_then_else(False, zeros_diff_cols, max_col_clue))), _if_then_else(ge(_if_then_else(False, 1, ones_diff_rows), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(False, 4, 2), _if_then_else(True, ones_diff_cols, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, compare_blocks_rows, 0), _if_then_else(False, 4, 4)))))), _if_then_else(or_(and_(True, True), le(compare_blocks_rows, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(True, 2, 3), _if_then_else(False, 4, 2)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 2, 2))), _if_then_else(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(True, max_col_clue, _if_then_else(False, max_row_clue, 2))), _if_then_else(ge(zeros_diff_rows, 0), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, compare_blocks_rows, 3)), _if_then_else(or_(True, True), max_col_clue, _if_then_else(False, ones_diff_rows, max_row_clue)))), _if_then_else(ge(_if_then_else(ge(ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(ge(3, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(True, 0, 4))), _if_then_else(and_(or_(False, True), ge(ones_diff_cols, max_row_clue)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_cols, 4), _if_then_else(False, zeros_diff_rows, max_col_clue)), _if_then_else(ge(compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 0, 3), _if_then_else(False, zeros_diff_cols, max_col_clue))), _if_then_else(False, _if_then_else(or_(True, True), _if_then_else(False, 4, 2), _if_then_else(True, ones_diff_cols, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_rows, 0), _if_then_else(False, 4, 4)))))
and_(and_(le(max_row_clue, max_row_clue), or_(True, False)), or_(le(compare_blocks_cols, 1), False))
VAL TREES:
mul(add(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols)), add(mul(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, zeros_diff_rows)))
mul(add(add(mul(mul(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows))), add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)))), mul(mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(ones_diff_rows, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows))), add(add(add(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)))))
mul(mul(add(mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)))), add(mul(mul(mul(ones_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_cols)), mul(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols))), add(add(add(compare_blocks_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, add(mul(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_cols)), mul(add(ones_diff_rows, ones_diff_cols), mul(compare_blocks_rows, compare_blocks_rows))))))))
mul(mul(add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows))), mul(mul(add(compare_blocks_rows, add(add(add(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, compare_blocks_rows)))), add(compare_blocks_rows, compare_blocks_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols))))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_cols, mul(mul(mul(compare_blocks_cols, add(compare_blocks_rows, compare_blocks_cols)), mul(compare_blocks_cols, zeros_diff_rows)), add(add(add(ones_diff_rows, ones_diff_rows), ones_diff_cols), mul(add(zeros_diff_rows, compare_blocks_cols), compare_blocks_rows))))), add(add(ones_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, max_row_clue, ones_diff_cols)), le(_if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(True, ones_diff_rows, max_row_clue))), ge(_if_then_else(and_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, max_row_clue, ones_diff_cols)), True), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, max_col_clue, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(True, max_col_clue, max_row_clue), _if_then_else(True, 4, 1))))
ge(_if_then_else(or_(False, False), _if_then_else(True, _if_then_else(True, compare_blocks_cols, compare_blocks_rows), compare_blocks_rows), _if_then_else(False, ones_diff_cols, 0)), _if_then_else(True, _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, 1, ones_diff_rows)))
or_(and_(and_(False, or_(True, True)), and_(ge(max_col_clue, max_col_clue), or_(False, True))), True)
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, _if_then_else(True, _if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 1, compare_blocks_cols))), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, 4, 3)), 1)), _if_then_else(le(3, 3), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(or_(True, False), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, _if_then_else(or_(False, True), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 1, compare_blocks_cols)), 4))), or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), or_(or_(True, False), and_(False, False)))))
or_(ge(1, _if_then_else(True, _if_then_else(False, 3, 2), _if_then_else(False, zeros_diff_cols, 4))), or_(or_(True, ge(max_col_clue, ones_diff_cols)), False))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, _if_then_else(le(_if_then_else(True, 2, max_col_clue), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(le(4, 1), _if_then_else(False, max_col_clue, 4), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(ge(4, compare_blocks_cols), _if_then_else(False, 1, ones_diff_rows), _if_then_else(True, 1, zeros_diff_rows)))), _if_then_else(False, max_row_clue, ones_diff_cols)), le(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, ones_diff_rows, 4))), ge(_if_then_else(or_(False, True), _if_then_else(True, max_col_clue, compare_blocks_rows), max_col_clue), _if_then_else(and_(True, False), _if_then_else(le(max_col_clue, compare_blocks_rows), 4, zeros_diff_rows), _if_then_else(True, 4, 1))))
ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(True, 1, _if_then_else(True, zeros_diff_cols, compare_blocks_cols))))
or_(and_(and_(False, or_(True, ge(_if_then_else(ge(zeros_diff_cols, 4), _if_then_else(True, 0, ones_diff_rows), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(le(compare_blocks_cols, 4), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4))))), and_(ge(max_col_clue, max_col_clue), or_(False, True))), ge(_if_then_else(ge(zeros_diff_cols, 4), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, ones_diff_cols, max_col_clue)), _if_then_else(le(compare_blocks_cols, 4), max_col_clue, _if_then_else(True, 0, ones_diff_rows))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, 2), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(True, max_row_clue, _if_then_else(and_(and_(False, True), le(2, zeros_diff_rows)), compare_blocks_rows, _if_then_else(le(1, 1), _if_then_else(False, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, ones_diff_cols, ones_diff_rows)))), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(True, False), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(zeros_diff_rows, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), or_(or_(True, False), and_(False, False)))))
le(_if_then_else(le(compare_blocks_cols, 4), _if_then_else(ge(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, ones_diff_cols, zeros_diff_cols)), ones_diff_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, ones_diff_cols)), _if_then_else(and_(True, ge(ones_diff_rows, _if_then_else(True, _if_then_else(False, 1, max_row_clue), ones_diff_rows))), _if_then_else(False, zeros_diff_rows, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, max_row_clue)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
le(_if_then_else(ge(_if_then_else(False, max_col_clue, compare_blocks_rows), max_row_clue), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(True, 4, 1)), _if_then_else(or_(or_(False, False), and_(True, True)), _if_then_else(ge(zeros_diff_rows, 3), _if_then_else(True, 0, 4), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, 1), _if_then_else(True, zeros_diff_cols, ones_diff_rows))))
or_(ge(_if_then_else(and_(False, True), _if_then_else(False, 2, ones_diff_rows), _if_then_else(False, zeros_diff_cols, compare_blocks_cols)), _if_then_else(le(4, ones_diff_cols), compare_blocks_rows, _if_then_else(False, ones_diff_cols, ones_diff_cols))), or_(or_(True, True), and_(and_(or_(True, True), True), True)))
and_(or_(ge(_if_then_else(ge(3, compare_blocks_rows), _if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(False, ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_rows, 1), _if_then_else(and_(True, True), max_row_clue, ones_diff_cols))), le(_if_then_else(ge(compare_blocks_rows, ones_diff_rows), _if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(False, 1, ones_diff_rows)), _if_then_else(ge(0, 2), _if_then_else(True, zeros_diff_rows, 2), _if_then_else(False, ones_diff_rows, zeros_diff_rows)))), and_(ge(_if_then_else(and_(True, True), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(False, 4, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(True, 4, 0), _if_then_else(True, compare_blocks_rows, compare_blocks_cols))), and_(ge(_if_then_else(False, zeros_diff_cols, 1), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), and_(le(compare_blocks_cols, zeros_diff_cols), and_(False, False)))))
le(_if_then_else(le(_if_then_else(ge(ones_diff_cols, max_col_clue), _if_then_else(True, zeros_diff_rows, 2), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(or_(False, True), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(False, 3, zeros_diff_cols))), _if_then_else(or_(and_(True, True), le(compare_blocks_rows, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(True, 2, 3), _if_then_else(False, 4, 2)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 2, 2))), _if_then_else(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(True, max_col_clue, _if_then_else(False, max_row_clue, 2))), _if_then_else(ge(zeros_diff_rows, 0), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, compare_blocks_rows, 3)), _if_then_else(or_(True, True), max_col_clue, _if_then_else(False, ones_diff_rows, max_row_clue)))), _if_then_else(ge(_if_then_else(ge(_if_then_else(ge(_if_then_else(le(compare_blocks_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, max_col_clue), _if_then_else(False, 1, 3)), _if_then_else(ge(2, ones_diff_cols), _if_then_else(True, ones_diff_cols, compare_blocks_cols), _if_then_else(False, 1, 0))), _if_then_else(and_(le(4, compare_blocks_rows), and_(False, False)), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(False, zeros_diff_cols, ones_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, 3, 4), _if_then_else(False, 0, zeros_diff_rows))), _if_then_else(and_(or_(True, True), ge(max_col_clue, zeros_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, 4), _if_then_else(False, max_row_clue, 2)), _if_then_else(ge(max_row_clue, compare_blocks_rows), _if_then_else(False, 1, 4), _if_then_else(True, max_col_clue, 1)))), _if_then_else(ge(_if_then_else(and_(False, True), _if_then_else(False, zeros_diff_cols, 2), _if_then_else(True, zeros_diff_rows, max_col_clue)), _if_then_else(ge(ones_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, 0), _if_then_else(True, ones_diff_rows, 1))), _if_then_else(le(_if_then_else(False, 1, ones_diff_rows), _if_then_else(False, 1, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, max_row_clue), _if_then_else(False, 3, 0), _if_then_else(True, 3, compare_blocks_rows)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(False, compare_blocks_cols, 2))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, 2, 2)), _if_then_else(ge(4, ones_diff_cols), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(True, 4, zeros_diff_cols)), _if_then_else(le(0, max_col_clue), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, max_row_clue))))), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(False, 3, zeros_diff_cols)), _if_then_else(ge(3, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(True, 0, 4))), _if_then_else(and_(or_(False, True), ge(ones_diff_cols, max_row_clue)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_cols, 2), _if_then_else(False, zeros_diff_rows, max_col_clue)), _if_then_else(ge(compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 0, 3), _if_then_else(False, zeros_diff_cols, max_col_clue))), _if_then_else(ge(_if_then_else(False, 1, ones_diff_rows), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(False, 4, 2), _if_then_else(True, ones_diff_cols, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_rows, 0), _if_then_else(ge(compare_blocks_cols, ones_diff_rows), 4, 4)))))
and_(and_(ge(zeros_diff_rows, ones_diff_rows), or_(False, False)), ge(_if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)))
VAL TREES:
mul(add(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols)), add(mul(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, zeros_diff_rows)))
mul(add(add(mul(mul(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows))), add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)))), mul(mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(ones_diff_rows, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows))), add(add(add(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)))))
mul(mul(add(mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)))), add(mul(mul(mul(ones_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_cols)), mul(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols))), add(add(add(compare_blocks_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)))))
mul(mul(add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows))), mul(mul(add(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols))))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_cols)), add(add(ones_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, max_row_clue, zeros_diff_cols)), le(_if_then_else(False, 1, max_col_clue), _if_then_else(True, ones_diff_rows, max_row_clue))), ge(_if_then_else(or_(False, True), _if_then_else(True, max_col_clue, compare_blocks_rows), max_col_clue), _if_then_else(and_(True, False), max_row_clue, _if_then_else(True, 4, 1))))
ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(or_(False, False), _if_then_else(True, _if_then_else(True, _if_then_else(True, compare_blocks_cols, compare_blocks_rows), compare_blocks_rows), zeros_diff_cols), _if_then_else(False, zeros_diff_cols, _if_then_else(True, zeros_diff_cols, compare_blocks_cols))))
or_(and_(and_(False, or_(True, or_(True, True))), and_(ge(max_col_clue, max_col_clue), or_(False, True))), ge(_if_then_else(ge(zeros_diff_cols, 4), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, ones_diff_cols, max_col_clue)), _if_then_else(le(_if_then_else(and_(or_(ge(3, zeros_diff_rows), or_(False, False)), ge(_if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, compare_blocks_rows))), _if_then_else(and_(and_(False, False), ge(4, 4)), _if_then_else(ge(zeros_diff_cols, 1), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(False, 4, ones_diff_cols)), _if_then_else(le(3, max_row_clue), _if_then_else(True, 4, 0), _if_then_else(False, zeros_diff_cols, ones_diff_rows))), _if_then_else(le(_if_then_else(True, 4, 4), _if_then_else(True, compare_blocks_cols, compare_blocks_rows)), _if_then_else(and_(False, and_(True, True)), _if_then_else(False, 4, 1), _if_then_else(True, 3, 0)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, ones_diff_rows)))), 4), max_col_clue, _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, 2), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(or_(ge(_if_then_else(True, zeros_diff_rows, _if_then_else(False, 1, 1)), 2), and_(True, False)), _if_then_else(or_(False, True), _if_then_else(False, zeros_diff_rows, 0), _if_then_else(False, 4, compare_blocks_cols)), _if_then_else(ge(ones_diff_cols, ones_diff_cols), _if_then_else(True, max_row_clue, _if_then_else(False, _if_then_else(False, 3, zeros_diff_cols), ones_diff_rows)), _if_then_else(le(_if_then_else(True, compare_blocks_rows, 2), _if_then_else(True, max_row_clue, ones_diff_rows)), ones_diff_rows, _if_then_else(False, 1, 2))))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(True, False), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(False, or_(or_(True, False), and_(False, False)))))
and_(and_(and_(False, True), ge(max_col_clue, ones_diff_rows)), ge(_if_then_else(True, zeros_diff_rows, 2), _if_then_else(True, max_row_clue, ones_diff_rows)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
le(_if_then_else(ge(_if_then_else(False, max_col_clue, compare_blocks_rows), max_row_clue), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(True, 4, 1)), _if_then_else(or_(or_(False, False), and_(True, True)), _if_then_else(ge(zeros_diff_rows, 3), _if_then_else(True, 0, 4), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)), 4))
or_(ge(_if_then_else(and_(False, True), _if_then_else(False, 2, ones_diff_rows), _if_then_else(False, zeros_diff_cols, compare_blocks_cols)), _if_then_else(le(4, ones_diff_cols), _if_then_else(True, max_col_clue, _if_then_else(le(_if_then_else(True, 0, zeros_diff_cols), _if_then_else(False, 2, ones_diff_rows)), _if_then_else(le(compare_blocks_cols, 0), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(le(3, compare_blocks_rows), _if_then_else(True, ones_diff_rows, 2), _if_then_else(True, zeros_diff_rows, 0)))), _if_then_else(False, ones_diff_cols, ones_diff_cols))), or_(or_(True, True), and_(and_(or_(True, True), True), True)))
and_(or_(ge(_if_then_else(ge(3, compare_blocks_rows), _if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(False, ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_rows, 1), _if_then_else(and_(True, True), max_row_clue, ones_diff_cols))), le(_if_then_else(ge(compare_blocks_rows, ones_diff_rows), _if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(False, 1, ones_diff_rows)), _if_then_else(ge(0, 2), _if_then_else(True, zeros_diff_rows, 2), _if_then_else(False, ones_diff_rows, zeros_diff_rows)))), and_(ge(_if_then_else(and_(True, True), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(False, 4, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(True, 4, 0), _if_then_else(True, compare_blocks_rows, compare_blocks_cols))), and_(ge(_if_then_else(False, zeros_diff_cols, 1), _if_then_else(and_(ge(max_col_clue, max_col_clue), or_(False, or_(or_(and_(le(ones_diff_rows, 0), or_(True, False)), le(_if_then_else(False, zeros_diff_cols, max_col_clue), _if_then_else(True, max_col_clue, 3))), le(4, _if_then_else(or_(False, False), _if_then_else(False, 0, 4), _if_then_else(False, max_row_clue, ones_diff_rows)))))), compare_blocks_rows, zeros_diff_cols)), and_(le(compare_blocks_cols, zeros_diff_cols), and_(False, False)))))
le(_if_then_else(le(_if_then_else(ge(ones_diff_cols, max_col_clue), _if_then_else(True, zeros_diff_rows, 2), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(or_(False, True), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(False, 3, zeros_diff_cols))), _if_then_else(or_(and_(True, True), le(compare_blocks_rows, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(True, 2, 3), _if_then_else(False, 4, 2)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 2, 2))), _if_then_else(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(True, max_col_clue, _if_then_else(False, max_row_clue, 2))), _if_then_else(ge(zeros_diff_rows, 0), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, compare_blocks_rows, 3)), _if_then_else(or_(True, True), max_col_clue, _if_then_else(False, ones_diff_rows, max_row_clue)))), _if_then_else(ge(_if_then_else(ge(_if_then_else(ge(_if_then_else(le(compare_blocks_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, max_col_clue), _if_then_else(False, 1, 3)), _if_then_else(ge(2, ones_diff_cols), _if_then_else(True, ones_diff_cols, compare_blocks_cols), _if_then_else(False, 1, 0))), _if_then_else(and_(le(4, compare_blocks_rows), and_(False, False)), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(False, zeros_diff_cols, ones_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, 3, 4), _if_then_else(False, 0, compare_blocks_rows))), _if_then_else(and_(or_(True, True), ge(max_col_clue, zeros_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, 4), _if_then_else(False, max_row_clue, 2)), _if_then_else(ge(max_row_clue, compare_blocks_rows), _if_then_else(False, 1, 4), _if_then_else(True, max_col_clue, 1)))), _if_then_else(ge(_if_then_else(and_(False, True), _if_then_else(False, zeros_diff_cols, 2), _if_then_else(True, zeros_diff_rows, max_col_clue)), _if_then_else(ge(ones_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, 0), _if_then_else(True, ones_diff_rows, 1))), _if_then_else(le(_if_then_else(False, 1, ones_diff_rows), _if_then_else(False, 1, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, max_row_clue), _if_then_else(False, 3, 0), _if_then_else(True, 3, compare_blocks_rows)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(False, compare_blocks_cols, 2))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, 2, 2)), _if_then_else(ge(4, ones_diff_cols), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(True, 4, zeros_diff_cols)), _if_then_else(le(0, max_col_clue), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, max_row_clue))))), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(False, 3, zeros_diff_cols)), _if_then_else(ge(3, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(True, 0, 4))), _if_then_else(and_(or_(False, True), ge(ones_diff_cols, max_row_clue)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_cols, 4), _if_then_else(False, zeros_diff_rows, max_col_clue)), _if_then_else(ge(compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 0, 3), _if_then_else(False, zeros_diff_cols, max_col_clue))), _if_then_else(ge(_if_then_else(False, 1, ones_diff_rows), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(False, 4, 2), _if_then_else(True, ones_diff_cols, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_rows, 0), _if_then_else(ge(compare_blocks_cols, ones_diff_rows), 4, 4)))))
and_(and_(ge(zeros_diff_rows, ones_diff_rows), or_(False, False)), ge(_if_then_else(False, _if_then_else(ge(_if_then_else(le(max_col_clue, zeros_diff_rows), 2, zeros_diff_cols), _if_then_else(or_(False, le(compare_blocks_cols, 0)), _if_then_else(True, max_col_clue, 3), max_row_clue)), _if_then_else(le(4, zeros_diff_cols), 2, _if_then_else(False, max_row_clue, 3)), _if_then_else(ge(max_row_clue, ones_diff_rows), compare_blocks_cols, _if_then_else(and_(False, True), _if_then_else(False, 0, compare_blocks_rows), zeros_diff_rows))), compare_blocks_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)))
VAL TREES:
mul(add(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols)), add(mul(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, zeros_diff_rows)))
mul(add(add(mul(mul(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows))), add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)))), mul(mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(ones_diff_rows, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows))), add(add(add(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)))))
mul(mul(add(mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)))), add(mul(mul(mul(ones_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_cols)), mul(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols))), add(add(add(compare_blocks_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)))))
mul(mul(add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows))), mul(mul(add(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols))))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_cols)), add(add(ones_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)))
COND TREES:
or_(or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(False, max_row_clue, ones_diff_cols)), False), ge(_if_then_else(False, _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, max_col_clue, compare_blocks_cols)), _if_then_else(and_(and_(True, True), False), _if_then_else(True, max_col_clue, max_row_clue), _if_then_else(True, _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, 1), _if_then_else(True, zeros_diff_cols, ones_diff_rows)), 1))))
ge(_if_then_else(or_(False, True), _if_then_else(True, 0, compare_blocks_rows), 3), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_cols, _if_then_else(or_(or_(or_(False, False), and_(True, False)), or_(or_(False, False), le(zeros_diff_cols, max_col_clue))), _if_then_else(and_(or_(False, False), ge(zeros_diff_cols, zeros_diff_cols)), _if_then_else(le(max_row_clue, ones_diff_rows), _if_then_else(False, 2, 2), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, 0, 1), _if_then_else(True, compare_blocks_cols, ones_diff_rows))), zeros_diff_rows)), _if_then_else(False, 2, ones_diff_rows)))
or_(and_(and_(False, or_(True, True)), True), ge(_if_then_else(ge(zeros_diff_cols, 4), _if_then_else(True, 0, ones_diff_rows), _if_then_else(le(_if_then_else(True, 2, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)), ones_diff_cols, zeros_diff_rows)), _if_then_else(le(compare_blocks_cols, 4), max_col_clue, _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(or_(or_(True, False), and_(False, False)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_row_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), _if_then_else(False, _if_then_else(or_(le(3, zeros_diff_rows), or_(False, False)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(max_col_clue, 1), _if_then_else(True, 1, zeros_diff_rows), 0)), zeros_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, zeros_diff_cols), zeros_diff_cols), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), or_(or_(True, False), and_(False, False)))))
or_(ge(_if_then_else(ge(4, compare_blocks_cols), ones_diff_cols, zeros_diff_cols), 4), or_(or_(ge(max_col_clue, ones_diff_cols), le(compare_blocks_cols, 0)), ge(zeros_diff_rows, ones_diff_rows)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(mul(add(ones_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols)), add(add(add(zeros_diff_rows, zeros_diff_cols), ones_diff_cols), mul(zeros_diff_rows, mul(zeros_diff_rows, compare_blocks_cols)))), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, add(mul(add(ones_diff_cols, mul(zeros_diff_rows, ones_diff_rows)), mul(compare_blocks_rows, mul(zeros_diff_cols, compare_blocks_cols))), add(add(add(zeros_diff_rows, ones_diff_rows), ones_diff_rows), mul(mul(compare_blocks_cols, compare_blocks_rows), compare_blocks_rows))))))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(add(mul(ones_diff_rows, ones_diff_rows), add(ones_diff_rows, ones_diff_cols)), add(mul(add(zeros_diff_cols, compare_blocks_rows), ones_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, compare_blocks_cols)), add(add(compare_blocks_rows, zeros_diff_cols), zeros_diff_rows))))), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, add(add(mul(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
and_(or_(le(_if_then_else(or_(True, False), _if_then_else(True, 0, ones_diff_cols), _if_then_else(True, 3, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, 4))), ge(_if_then_else(or_(False, True), _if_then_else(False, 2, 2), _if_then_else(True, zeros_diff_cols, 1)), _if_then_else(ge(zeros_diff_rows, max_col_clue), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, 1)))), ge(_if_then_else(and_(and_(False, True), le(3, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(True, 2, 4)), _if_then_else(ge(max_col_clue, 4), _if_then_else(True, ones_diff_cols, 1), _if_then_else(True, ones_diff_cols, 0))), _if_then_else(le(_if_then_else(True, ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, 1)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(False, _if_then_else(ge(ones_diff_rows, ones_diff_rows), 0, zeros_diff_cols), 4)), _if_then_else(True, _if_then_else(False, ones_diff_rows, max_col_clue), _if_then_else(True, compare_blocks_cols, ones_diff_cols)))))
ge(_if_then_else(ge(max_col_clue, 0), _if_then_else(False, 3, 1), 0), _if_then_else(ge(max_row_clue, 2), _if_then_else(False, 3, 2), _if_then_else(ge(zeros_diff_rows, 3), 2, max_col_clue)))
le(_if_then_else(or_(ge(_if_then_else(False, 1, compare_blocks_rows), _if_then_else(False, max_row_clue, compare_blocks_rows)), or_(le(2, ones_diff_cols), and_(True, True))), _if_then_else(or_(le(4, 4), le(compare_blocks_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(False, 3, zeros_diff_rows)), _if_then_else(or_(False, True), _if_then_else(le(3, ones_diff_cols), _if_then_else(True, 3, ones_diff_rows), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(True, 2, compare_blocks_cols))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_col_clue), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(ge(4, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_row_clue, zeros_diff_rows)))), _if_then_else(or_(le(_if_then_else(True, compare_blocks_rows, 3), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)), le(_if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, max_row_clue, 3))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(True, 0, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(False, 1, 3), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(ge(ones_diff_cols, 1), _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, max_row_clue, zeros_diff_rows))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 1, 0)), _if_then_else(or_(True, False), _if_then_else(False, 1, compare_blocks_cols), _if_then_else(False, max_row_clue, zeros_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 4, 3)))))
le(_if_then_else(and_(ge(ones_diff_cols, max_row_clue), True), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 4, zeros_diff_cols)), 2)
or_(and_(le(ones_diff_cols, 1), False), ge(_if_then_else(or_(le(compare_blocks_cols, 1), ge(zeros_diff_rows, 2)), compare_blocks_rows, ones_diff_cols), _if_then_else(True, 1, 3)))
VAL TREES:
add(add(add(compare_blocks_cols, mul(ones_diff_rows, compare_blocks_cols)), add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_cols))), mul(add(zeros_diff_cols, add(zeros_diff_rows, compare_blocks_cols)), add(zeros_diff_cols, ones_diff_rows)))
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), mul(add(add(zeros_diff_rows, ones_diff_rows), add(compare_blocks_rows, ones_diff_rows)), add(add(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows)))))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, compare_blocks_cols)))
mul(add(add(add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_cols, ones_diff_cols)), mul(mul(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows))), mul(mul(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols)), add(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, zeros_diff_cols)))), mul(add(mul(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)), add(mul(ones_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(add(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_rows)))))
add(mul(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_rows)))
add(mul(mul(ones_diff_cols, add(ones_diff_rows, zeros_diff_cols)), add(compare_blocks_cols, compare_blocks_cols)), mul(add(ones_diff_rows, mul(compare_blocks_cols, zeros_diff_rows)), mul(zeros_diff_cols, mul(mul(add(add(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, ones_diff_cols))), compare_blocks_cols))))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, max_row_clue, ones_diff_cols)), le(_if_then_else(and_(and_(True, True), ge(ones_diff_cols, 2)), _if_then_else(and_(True, True), _if_then_else(False, 0, 1), _if_then_else(True, ones_diff_rows, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_cols, 0), _if_then_else(True, ones_diff_cols, compare_blocks_rows))), _if_then_else(True, ones_diff_rows, max_row_clue))), ge(_if_then_else(or_(False, True), _if_then_else(and_(False, False), max_col_clue, compare_blocks_rows), _if_then_else(False, _if_then_else(False, 2, 2), compare_blocks_cols)), 3))
ge(_if_then_else(or_(False, False), _if_then_else(True, _if_then_else(True, compare_blocks_cols, compare_blocks_rows), compare_blocks_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(or_(False, False), _if_then_else(False, _if_then_else(or_(ge(2, compare_blocks_rows), ge(compare_blocks_rows, compare_blocks_cols)), _if_then_else(False, _if_then_else(False, 0, 0), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)), _if_then_else(ge(ones_diff_cols, max_row_clue), _if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, max_col_clue, 1))), zeros_diff_cols), _if_then_else(False, 1, ones_diff_rows)))
or_(and_(and_(False, le(_if_then_else(and_(False, or_(False, True)), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, 2, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(True, max_col_clue, 4)))), le(_if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(le(3, _if_then_else(True, 0, _if_then_else(True, zeros_diff_cols, max_row_clue))), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, max_col_clue, 0)))), ge(1, _if_then_else(le(compare_blocks_cols, 4), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, ones_diff_cols), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(ge(_if_then_else(False, 0, max_row_clue), _if_then_else(False, max_col_clue, zeros_diff_cols)), max_row_clue, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(True, 4, 2)))), and_(or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), or_(or_(True, False), and_(False, False))), or_(True, True)))
or_(ge(zeros_diff_rows, ones_diff_rows), False)
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(mul(add(mul(compare_blocks_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), add(mul(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_rows))), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(add(add(add(mul(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows))), mul(add(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_rows, zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols)))), mul(mul(add(add(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, ones_diff_cols)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows))), mul(add(mul(zeros_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, compare_blocks_cols))))), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(add(add(add(ones_diff_rows, ones_diff_rows), ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, add(compare_blocks_rows, ones_diff_rows)), mul(add(zeros_diff_cols, zeros_diff_rows), zeros_diff_cols))), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, add(mul(mul(zeros_diff_rows, ones_diff_rows), mul(mul(ones_diff_rows, ones_diff_rows), zeros_diff_cols)), mul(add(zeros_diff_rows, mul(ones_diff_rows, compare_blocks_rows)), add(ones_diff_cols, compare_blocks_rows))))))
mul(add(mul(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_rows)), mul(mul(zeros_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(add(add(mul(zeros_diff_cols, zeros_diff_rows), mul(compare_blocks_rows, ones_diff_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), compare_blocks_rows), zeros_diff_rows))))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, max_row_clue, ones_diff_cols)), le(_if_then_else(and_(and_(True, False), ge(ones_diff_cols, 2)), _if_then_else(and_(True, True), _if_then_else(False, 0, 1), _if_then_else(True, ones_diff_rows, zeros_diff_cols)), _if_then_else(True, _if_then_else(True, zeros_diff_cols, 0), _if_then_else(True, ones_diff_cols, compare_blocks_rows))), _if_then_else(True, ones_diff_rows, max_row_clue))), and_(True, le(2, _if_then_else(True, ones_diff_rows, _if_then_else(ge(compare_blocks_rows, ones_diff_rows), ones_diff_cols, 1)))))
ge(_if_then_else(or_(False, False), _if_then_else(True, _if_then_else(True, compare_blocks_cols, compare_blocks_rows), compare_blocks_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(or_(False, False), _if_then_else(False, _if_then_else(or_(ge(2, compare_blocks_rows), ge(compare_blocks_rows, compare_blocks_cols)), _if_then_else(ge(zeros_diff_rows, 3), _if_then_else(False, 0, 0), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)), _if_then_else(ge(ones_diff_cols, max_row_clue), _if_then_else(True, max_col_clue, compare_blocks_cols), _if_then_else(False, max_col_clue, 1))), zeros_diff_cols), _if_then_else(False, 1, ones_diff_rows)))
or_(and_(and_(False, or_(True, True)), le(_if_then_else(le(3, ones_diff_cols), _if_then_else(True, 3, ones_diff_rows), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(le(3, _if_then_else(True, 0, _if_then_else(True, zeros_diff_cols, max_row_clue))), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, max_col_clue, 0)))), ge(1, _if_then_else(le(compare_blocks_cols, 4), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, _if_then_else(or_(False, True), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 1, compare_blocks_cols))), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 0, 2))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(True, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), True)))
or_(ge(1, _if_then_else(and_(True, le(1, 4)), _if_then_else(or_(or_(False, ge(max_col_clue, ones_diff_cols)), ge(zeros_diff_rows, ones_diff_rows)), 1, max_row_clue), _if_then_else(False, zeros_diff_cols, 4))), or_(le(compare_blocks_cols, 1), ge(zeros_diff_rows, ones_diff_rows)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(True, max_row_clue, ones_diff_cols)), le(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, ones_diff_rows, max_row_clue))), ge(_if_then_else(or_(False, True), _if_then_else(True, max_col_clue, compare_blocks_rows), max_col_clue), _if_then_else(and_(and_(False, True), False), _if_then_else(le(max_col_clue, compare_blocks_rows), 4, zeros_diff_rows), _if_then_else(True, 4, 1))))
ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, 1, _if_then_else(True, zeros_diff_cols, 0))))
or_(and_(and_(False, or_(or_(True, True), True)), and_(ge(max_col_clue, max_col_clue), or_(False, True))), ge(_if_then_else(ge(zeros_diff_cols, 4), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, ones_diff_cols, max_col_clue)), _if_then_else(le(compare_blocks_cols, 4), max_col_clue, _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, 2), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(True, _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(True, _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(False, ones_diff_cols, 4))), or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), or_(or_(True, False), and_(False, False)))))
or_(ge(_if_then_else(ge(4, _if_then_else(or_(True, ge(_if_then_else(True, 1, 0), _if_then_else(True, compare_blocks_rows, max_col_clue))), _if_then_else(False, 1, max_row_clue), _if_then_else(True, zeros_diff_cols, 4))), 3, zeros_diff_cols), _if_then_else(True, _if_then_else(False, _if_then_else(False, 2, ones_diff_rows), max_row_clue), _if_then_else(True, zeros_diff_cols, 4))), False)
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(add(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_cols, ones_diff_cols))), mul(add(mul(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)), add(add(zeros_diff_rows, zeros_diff_rows), add(compare_blocks_cols, ones_diff_cols)))), mul(mul(add(add(ones_diff_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, zeros_diff_cols))))), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(mul(zeros_diff_rows, ones_diff_cols), mul(add(compare_blocks_rows, ones_diff_rows), zeros_diff_rows)), mul(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_cols))), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, add(mul(add(compare_blocks_rows, mul(zeros_diff_cols, zeros_diff_rows)), add(compare_blocks_rows, compare_blocks_cols)), add(add(compare_blocks_rows, compare_blocks_cols), mul(ones_diff_cols, mul(compare_blocks_rows, zeros_diff_cols)))))), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, add(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(mul(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, compare_blocks_cols))))), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
or_(or_(True, le(_if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(True, ones_diff_rows, _if_then_else(True, max_col_clue, max_row_clue)))), ge(_if_then_else(and_(True, True), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, max_col_clue, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(True, max_col_clue, max_row_clue), _if_then_else(True, 4, 1))))
ge(_if_then_else(or_(False, False), _if_then_else(True, _if_then_else(True, compare_blocks_cols, compare_blocks_rows), compare_blocks_rows), _if_then_else(False, ones_diff_cols, 0)), _if_then_else(or_(False, or_(True, or_(True, False))), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, 1, ones_diff_cols)))
or_(and_(and_(False, or_(True, True)), and_(ge(max_col_clue, max_col_clue), or_(False, True))), ge(_if_then_else(ge(ones_diff_cols, 4), _if_then_else(True, 0, ones_diff_rows), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(le(compare_blocks_cols, 4), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, _if_then_else(True, _if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 1, compare_blocks_cols))), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), 2))), and_(le(zeros_diff_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), or_(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), and_(False, False)))))
or_(ge(1, _if_then_else(True, _if_then_else(False, 3, 2), _if_then_else(or_(True, False), zeros_diff_cols, 4))), or_(or_(True, ge(max_col_clue, ones_diff_cols)), True))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), add(mul(add(compare_blocks_rows, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, add(ones_diff_rows, ones_diff_rows))), add(add(compare_blocks_cols, ones_diff_rows), ones_diff_cols))))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), mul(compare_blocks_rows, compare_blocks_rows))), ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(mul(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_cols, compare_blocks_cols)), add(mul(ones_diff_cols, mul(compare_blocks_rows, zeros_diff_rows)), add(zeros_diff_rows, mul(ones_diff_cols, ones_diff_cols)))))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, max_row_clue, ones_diff_cols)), True), ge(_if_then_else(or_(False, True), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(True, _if_then_else(False, 2, 2), compare_blocks_cols)), _if_then_else(and_(True, False), max_row_clue, _if_then_else(True, 4, 1))))
ge(_if_then_else(or_(False, False), _if_then_else(True, _if_then_else(True, compare_blocks_cols, compare_blocks_rows), compare_blocks_rows), _if_then_else(True, ones_diff_rows, 0)), _if_then_else(or_(True, False), _if_then_else(False, 3, zeros_diff_cols), 2))
or_(and_(and_(False, or_(True, True)), True), ge(1, _if_then_else(le(compare_blocks_cols, 4), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, _if_then_else(or_(False, True), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 1, compare_blocks_cols))), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), ones_diff_rows), _if_then_else(le(3, 3), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(compare_blocks_cols, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), True)))
or_(ge(1, _if_then_else(ge(zeros_diff_rows, 1), _if_then_else(False, 1, _if_then_else(False, 1, 3)), _if_then_else(False, zeros_diff_cols, 4))), or_(le(compare_blocks_cols, 1), False))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, _if_then_else(le(_if_then_else(True, 2, max_col_clue), _if_then_else(True, compare_blocks_rows, zeros_diff_rows)), _if_then_else(le(4, 1), _if_then_else(False, max_col_clue, 4), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(ge(4, compare_blocks_cols), _if_then_else(False, 1, ones_diff_rows), _if_then_else(True, 1, zeros_diff_rows)))), _if_then_else(False, max_row_clue, ones_diff_cols)), le(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, ones_diff_rows, 4))), ge(_if_then_else(or_(False, True), _if_then_else(True, max_col_clue, compare_blocks_rows), max_col_clue), _if_then_else(and_(True, False), _if_then_else(le(max_col_clue, compare_blocks_rows), 4, zeros_diff_rows), _if_then_else(True, 4, 1))))
ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(True, 1, _if_then_else(True, zeros_diff_cols, compare_blocks_cols))))
or_(and_(and_(False, or_(True, True)), and_(ge(max_col_clue, max_col_clue), or_(False, True))), ge(_if_then_else(ge(zeros_diff_cols, 4), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, ones_diff_cols, max_col_clue)), _if_then_else(le(compare_blocks_cols, 4), max_col_clue, _if_then_else(True, 0, ones_diff_rows))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, 2), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(True, max_row_clue, _if_then_else(and_(and_(False, True), le(2, zeros_diff_rows)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, 4, 3)), _if_then_else(le(1, 1), _if_then_else(False, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, ones_diff_cols, ones_diff_rows)))), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(True, False), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(zeros_diff_rows, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), or_(or_(True, False), and_(False, False)))))
le(_if_then_else(le(compare_blocks_cols, 4), _if_then_else(ge(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, ones_diff_cols, zeros_diff_cols)), ones_diff_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, ones_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, max_row_clue)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
or_(or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(False, max_row_clue, 4)), False), ge(_if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(and_(True, False), _if_then_else(True, max_col_clue, max_row_clue), _if_then_else(True, 4, 1))))
ge(_if_then_else(or_(False, True), _if_then_else(True, 0, compare_blocks_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_cols, _if_then_else(or_(or_(or_(False, False), and_(True, False)), or_(or_(False, False), le(zeros_diff_cols, max_col_clue))), _if_then_else(and_(or_(False, False), ge(zeros_diff_cols, zeros_diff_cols)), 4, _if_then_else(and_(False, True), _if_then_else(True, 0, 1), _if_then_else(True, compare_blocks_cols, _if_then_else(True, 1, _if_then_else(True, zeros_diff_cols, compare_blocks_cols))))), _if_then_else(le(_if_then_else(True, 0, zeros_diff_cols), _if_then_else(False, 2, ones_diff_rows)), _if_then_else(le(compare_blocks_cols, 0), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(ge(max_col_clue, 0), _if_then_else(True, 2, max_col_clue), _if_then_else(False, 1, 2))))), _if_then_else(False, 2, ones_diff_rows)))
or_(and_(and_(False, or_(True, True)), and_(ge(max_col_clue, max_col_clue), or_(False, or_(or_(and_(le(ones_diff_rows, 0), or_(True, False)), le(_if_then_else(False, zeros_diff_cols, max_col_clue), _if_then_else(True, max_col_clue, 3))), le(compare_blocks_cols, _if_then_else(or_(False, False), _if_then_else(False, 0, 4), _if_then_else(False, max_row_clue, ones_diff_rows))))))), ge(_if_then_else(ge(zeros_diff_cols, 4), _if_then_else(True, 0, ones_diff_rows), _if_then_else(le(_if_then_else(True, 2, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)), ones_diff_cols, max_col_clue)), _if_then_else(le(compare_blocks_cols, 4), max_col_clue, _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, 2), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), _if_then_else(False, _if_then_else(or_(le(3, zeros_diff_rows), or_(False, False)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(max_col_clue, 1), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(False, 3, 1))), zeros_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, zeros_diff_cols), zeros_diff_cols), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(False, ones_diff_cols, 4))), True))
or_(ge(_if_then_else(ge(4, compare_blocks_cols), ones_diff_cols, zeros_diff_cols), _if_then_else(ge(_if_then_else(le(max_col_clue, zeros_diff_rows), 2, zeros_diff_cols), _if_then_else(False, _if_then_else(True, max_col_clue, 3), max_row_clue)), _if_then_else(le(4, zeros_diff_cols), 2, _if_then_else(True, max_row_clue, 3)), _if_then_else(ge(max_row_clue, ones_diff_rows), compare_blocks_cols, _if_then_else(and_(or_(True, False), True), _if_then_else(False, 0, compare_blocks_rows), zeros_diff_rows)))), or_(or_(False, le(compare_blocks_cols, 0)), ge(zeros_diff_rows, ones_diff_rows)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
or_(True, ge(_if_then_else(or_(False, True), _if_then_else(True, _if_then_else(False, 3, 1), 3), _if_then_else(ge(_if_then_else(or_(False, True), _if_then_else(False, ones_diff_cols, max_col_clue), _if_then_else(True, max_col_clue, compare_blocks_rows)), _if_then_else(ge(0, 4), _if_then_else(False, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, max_col_clue))), _if_then_else(or_(or_(False, False), ge(zeros_diff_rows, compare_blocks_cols)), _if_then_else(le(1, 2), _if_then_else(True, 2, 2), _if_then_else(True, max_row_clue, 1)), _if_then_else(ge(2, ones_diff_rows), _if_then_else(False, ones_diff_rows, 1), _if_then_else(True, compare_blocks_rows, max_col_clue))), _if_then_else(and_(le(compare_blocks_rows, compare_blocks_cols), ge(4, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, max_col_clue, zeros_diff_cols), _if_then_else(True, ones_diff_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, 3, compare_blocks_cols), _if_then_else(False, ones_diff_rows, max_col_clue))))), _if_then_else(and_(False, False), _if_then_else(True, max_col_clue, max_row_clue), _if_then_else(True, _if_then_else(True, _if_then_else(le(4, 4), _if_then_else(False, 0, max_row_clue), _if_then_else(False, compare_blocks_cols, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(True, 2, 1), _if_then_else(False, ones_diff_rows, 4))), 1))))
ge(_if_then_else(or_(False, True), _if_then_else(True, 0, compare_blocks_rows), _if_then_else(le(_if_then_else(le(_if_then_else(le(_if_then_else(False, zeros_diff_rows, zeros_diff_cols), _if_then_else(False, max_row_clue, max_row_clue)), _if_then_else(le(zeros_diff_rows, compare_blocks_cols), _if_then_else(False, 0, compare_blocks_cols), _if_then_else(False, 2, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, max_row_clue, zeros_diff_cols))), compare_blocks_rows), _if_then_else(True, ones_diff_rows, 2), _if_then_else(True, _if_then_else(True, max_col_clue, max_row_clue), max_col_clue)), compare_blocks_cols), ones_diff_cols, 0)), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(True, 2, ones_diff_rows)))
or_(and_(and_(and_(True, True), or_(True, or_(False, True))), and_(ge(_if_then_else(False, ones_diff_cols, zeros_diff_cols), max_col_clue), or_(or_(or_(or_(and_(and_(and_(False, or_(True, True)), True), True), ge(zeros_diff_rows, 4)), and_(or_(True, True), or_(False, True))), le(_if_then_else(le(4, 1), _if_then_else(True, ones_diff_rows, 3), _if_then_else(False, compare_blocks_rows, 2)), _if_then_else(ge(2, 2), _if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, max_row_clue, ones_diff_cols)))), True))), False)
and_(le(_if_then_else(le(_if_then_else(True, compare_blocks_rows, 2), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(le(max_row_clue, 0), compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), _if_then_else(False, max_row_clue, zeros_diff_cols)), _if_then_else(or_(True, True), 4, _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(ge(1, 0), 4, 2)))), and_(le(_if_then_else(and_(True, True), _if_then_else(True, 3, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), True))
and_(le(_if_then_else(le(compare_blocks_rows, max_row_clue), _if_then_else(True, max_col_clue, _if_then_else(False, 1, compare_blocks_cols)), max_col_clue), _if_then_else(ge(ones_diff_rows, zeros_diff_cols), 2, max_row_clue)), and_(False, and_(False, False)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
or_(or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(False, max_row_clue, ones_diff_cols)), False), or_(ge(_if_then_else(False, compare_blocks_cols, _if_then_else(False, 3, compare_blocks_cols)), _if_then_else(False, max_row_clue, ones_diff_cols)), le(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(or_(le(_if_then_else(True, 1, ones_diff_cols), _if_then_else(or_(ge(max_row_clue, 2), and_(True, False)), 0, ones_diff_cols)), le(compare_blocks_cols, compare_blocks_cols)), _if_then_else(and_(False, le(1, compare_blocks_cols)), _if_then_else(and_(True, False), 0, compare_blocks_cols), _if_then_else(False, 2, 1)), _if_then_else(and_(False, True), _if_then_else(True, ones_diff_rows, _if_then_else(or_(True, False), _if_then_else(False, 1, ones_diff_rows), _if_then_else(True, ones_diff_rows, max_row_clue))), _if_then_else(False, compare_blocks_cols, zeros_diff_rows))))))
ge(_if_then_else(or_(False, True), _if_then_else(True, 0, compare_blocks_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_cols, _if_then_else(or_(or_(or_(False, False), and_(True, False)), or_(or_(False, False), le(zeros_diff_cols, max_col_clue))), _if_then_else(and_(or_(False, False), ge(zeros_diff_cols, zeros_diff_cols)), _if_then_else(le(max_row_clue, ones_diff_rows), _if_then_else(False, 2, 2), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, 0, 1), _if_then_else(True, compare_blocks_cols, ones_diff_rows))), _if_then_else(le(_if_then_else(True, 0, zeros_diff_cols), _if_then_else(True, 2, ones_diff_rows)), _if_then_else(le(compare_blocks_cols, 0), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(ge(max_col_clue, 0), _if_then_else(True, 2, max_col_clue), _if_then_else(False, 0, 2))))), _if_then_else(False, 2, ones_diff_rows)))
or_(and_(and_(False, or_(True, True)), and_(ge(_if_then_else(False, ones_diff_cols, max_col_clue), max_col_clue), or_(False, or_(or_(and_(le(ones_diff_rows, 0), or_(True, False)), le(_if_then_else(False, zeros_diff_cols, max_col_clue), _if_then_else(True, max_col_clue, 3))), le(compare_blocks_cols, _if_then_else(or_(False, False), _if_then_else(False, 0, 4), _if_then_else(False, max_row_clue, ones_diff_rows))))))), ge(_if_then_else(ge(zeros_diff_cols, 4), _if_then_else(True, 0, ones_diff_rows), _if_then_else(le(_if_then_else(True, 2, 1), compare_blocks_cols), ones_diff_cols, max_col_clue)), _if_then_else(le(compare_blocks_cols, ones_diff_rows), max_col_clue, _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, 2), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 2, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), _if_then_else(False, _if_then_else(or_(le(3, zeros_diff_rows), or_(False, False)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(max_col_clue, 1), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(False, 3, 1))), zeros_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, zeros_diff_cols), zeros_diff_cols), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), False))
or_(ge(_if_then_else(ge(4, compare_blocks_cols), ones_diff_cols, zeros_diff_cols), _if_then_else(ge(_if_then_else(le(max_col_clue, zeros_diff_rows), 2, zeros_diff_cols), _if_then_else(False, _if_then_else(True, max_col_clue, 3), max_row_clue)), _if_then_else(le(4, zeros_diff_cols), 2, _if_then_else(True, max_row_clue, 3)), _if_then_else(ge(max_row_clue, ones_diff_rows), compare_blocks_cols, _if_then_else(and_(False, ge(_if_then_else(False, 1, 0), _if_then_else(True, compare_blocks_rows, max_col_clue))), _if_then_else(False, 0, compare_blocks_rows), zeros_diff_rows)))), or_(or_(False, le(compare_blocks_cols, 0)), ge(zeros_diff_rows, ones_diff_rows)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
or_(or_(ge(_if_then_else(False, compare_blocks_cols, _if_then_else(True, ones_diff_cols, 0)), _if_then_else(False, max_row_clue, ones_diff_cols)), le(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, ones_diff_rows, max_row_clue))), ge(_if_then_else(True, _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, max_col_clue, compare_blocks_cols)), _if_then_else(and_(True, le(_if_then_else(True, 0, _if_then_else(False, zeros_diff_cols, 4)), _if_then_else(or_(False, True), 4, zeros_diff_rows))), _if_then_else(True, max_col_clue, _if_then_else(False, max_row_clue, ones_diff_cols)), _if_then_else(True, 4, 1))))
ge(_if_then_else(or_(False, True), _if_then_else(True, 1, compare_blocks_rows), _if_then_else(True, 3, 0)), _if_then_else(or_(ge(_if_then_else(ge(zeros_diff_cols, 1), _if_then_else(True, ones_diff_rows, ones_diff_rows), ones_diff_rows), _if_then_else(and_(False, True), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, 3, zeros_diff_cols))), False), _if_then_else(False, 0, zeros_diff_cols), max_col_clue))
or_(and_(and_(and_(True, False), or_(True, and_(False, or_(True, True)))), and_(False, or_(False, True))), ge(_if_then_else(ge(zeros_diff_cols, _if_then_else(and_(ge(_if_then_else(or_(True, True), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)), _if_then_else(le(zeros_diff_rows, 1), _if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, ones_diff_cols, zeros_diff_rows))), ge(_if_then_else(ge(ones_diff_rows, 3), _if_then_else(False, max_row_clue, 4), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, max_row_clue, zeros_diff_rows), _if_then_else(False, 0, compare_blocks_cols)))), ones_diff_rows, compare_blocks_cols)), _if_then_else(True, 0, ones_diff_rows), _if_then_else(False, ones_diff_cols, max_col_clue)), _if_then_else(le(compare_blocks_cols, 4), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, 2), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(or_(True, True), max_row_clue, compare_blocks_cols), _if_then_else(ge(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, ones_diff_cols, ones_diff_rows)), 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), _if_then_else(False, max_row_clue, zeros_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(_if_then_else(and_(True, True), _if_then_else(True, 3, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, _if_then_else(and_(and_(or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), or_(or_(True, False), and_(False, False))), or_(True, True)), le(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, 0, compare_blocks_rows))), _if_then_else(le(_if_then_else(False, 4, 2), _if_then_else(False, ones_diff_cols, max_col_clue)), _if_then_else(and_(True, False), _if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, max_row_clue, max_col_clue), _if_then_else(False, zeros_diff_rows, ones_diff_rows))), _if_then_else(ge(_if_then_else(False, compare_blocks_cols, 2), _if_then_else(True, zeros_diff_cols, ones_diff_rows)), _if_then_else(le(ones_diff_rows, max_row_clue), _if_then_else(True, 1, 2), _if_then_else(True, zeros_diff_rows, 2)), _if_then_else(ge(zeros_diff_cols, 3), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, ones_diff_rows, zeros_diff_cols)))), _if_then_else(or_(ge(_if_then_else(True, ones_diff_rows, 4), _if_then_else(False, 3, ones_diff_cols)), and_(le(compare_blocks_rows, 2), or_(False, True))), _if_then_else(or_(ge(1, max_col_clue), or_(True, True)), _if_then_else(or_(True, True), _if_then_else(True, 4, 4), _if_then_else(True, zeros_diff_rows, 3)), _if_then_else(ge(4, 1), _if_then_else(True, 4, 3), _if_then_else(False, compare_blocks_rows, max_row_clue))), _if_then_else(ge(_if_then_else(False, 4, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, ones_diff_rows, 1), _if_then_else(True, max_col_clue, 3)), _if_then_else(and_(False, False), _if_then_else(True, ones_diff_cols, compare_blocks_cols), _if_then_else(True, ones_diff_rows, ones_diff_cols)))))), or_(or_(True, False), and_(False, False)))))
or_(ge(_if_then_else(ge(compare_blocks_cols, 4), 3, zeros_diff_cols), _if_then_else(True, _if_then_else(False, 1, max_row_clue), _if_then_else(ge(ones_diff_cols, ones_diff_rows), zeros_diff_cols, 4))), or_(False, ge(compare_blocks_cols, 4)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, add(add(add(ones_diff_cols, add(mul(zeros_diff_rows, ones_diff_cols), zeros_diff_rows)), mul(ones_diff_rows, add(zeros_diff_cols, zeros_diff_cols))), mul(add(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_rows, add(zeros_diff_cols, compare_blocks_cols)))))), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), add(add(mul(mul(add(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_cols))), mul(mul(mul(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_rows)), add(add(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows)))), add(add(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_rows)), mul(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_rows, zeros_diff_cols))), add(mul(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_cols, compare_blocks_rows))))))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(mul(add(zeros_diff_rows, mul(zeros_diff_cols, ones_diff_rows)), add(compare_blocks_rows, compare_blocks_rows)), add(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_rows))), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, add(mul(mul(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, compare_blocks_rows))), mul(mul(mul(ones_diff_cols, zeros_diff_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols)))))), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
or_(or_(ge(_if_then_else(False, compare_blocks_cols, _if_then_else(True, ones_diff_cols, 0)), max_col_clue), le(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, ones_diff_rows, max_row_clue))), ge(_if_then_else(True, _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, max_col_clue, compare_blocks_cols)), _if_then_else(and_(True, le(_if_then_else(True, 0, _if_then_else(False, zeros_diff_cols, 4)), _if_then_else(or_(False, True), 4, zeros_diff_rows))), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 4, 1))))
ge(_if_then_else(or_(False, True), _if_then_else(True, 1, compare_blocks_rows), _if_then_else(True, 3, 0)), _if_then_else(or_(ge(_if_then_else(ge(zeros_diff_cols, 1), _if_then_else(True, ones_diff_rows, zeros_diff_cols), zeros_diff_cols), _if_then_else(and_(False, True), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, 3, zeros_diff_cols))), False), _if_then_else(False, 0, zeros_diff_cols), max_col_clue))
or_(and_(and_(and_(True, False), or_(True, and_(False, or_(True, True)))), and_(False, or_(False, True))), ge(_if_then_else(ge(zeros_diff_cols, _if_then_else(and_(ge(_if_then_else(or_(True, True), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)), _if_then_else(le(zeros_diff_rows, 1), _if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, ones_diff_cols, zeros_diff_rows))), ge(_if_then_else(ge(ones_diff_rows, 3), _if_then_else(False, max_row_clue, 4), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, max_row_clue, zeros_diff_rows), _if_then_else(False, 0, compare_blocks_cols)))), ones_diff_rows, compare_blocks_cols)), _if_then_else(True, 0, ones_diff_rows), _if_then_else(False, ones_diff_cols, max_col_clue)), _if_then_else(le(compare_blocks_cols, 4), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, 2), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(or_(True, True), max_row_clue, compare_blocks_cols), _if_then_else(ge(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, ones_diff_cols, ones_diff_rows)), 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), _if_then_else(False, max_row_clue, zeros_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(_if_then_else(and_(True, True), _if_then_else(True, 3, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(ge(_if_then_else(le(_if_then_else(False, 2, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(or_(True, False), _if_then_else(True, 4, 1), _if_then_else(False, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(compare_blocks_rows, max_col_clue), _if_then_else(False, ones_diff_cols, compare_blocks_cols), _if_then_else(False, 1, zeros_diff_cols))), _if_then_else(or_(ge(0, zeros_diff_rows), le(ones_diff_cols, 2)), _if_then_else(True, _if_then_else(False, 0, 4), _if_then_else(True, max_row_clue, 0)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, zeros_diff_cols, 1)))), _if_then_else(and_(and_(or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), or_(or_(True, False), and_(False, False))), or_(True, True)), le(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, 0, compare_blocks_rows))), _if_then_else(le(_if_then_else(False, 4, 2), _if_then_else(False, ones_diff_cols, max_col_clue)), _if_then_else(and_(True, False), _if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, max_row_clue, max_col_clue), _if_then_else(False, zeros_diff_rows, ones_diff_rows))), _if_then_else(ge(_if_then_else(False, compare_blocks_cols, 2), _if_then_else(True, zeros_diff_cols, ones_diff_rows)), _if_then_else(le(ones_diff_rows, max_row_clue), _if_then_else(True, 1, 2), _if_then_else(True, zeros_diff_rows, 2)), _if_then_else(ge(zeros_diff_cols, 3), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, ones_diff_rows, zeros_diff_cols)))), _if_then_else(or_(ge(_if_then_else(True, ones_diff_rows, 4), _if_then_else(False, 3, ones_diff_cols)), and_(le(compare_blocks_rows, 2), or_(False, True))), _if_then_else(or_(ge(1, max_col_clue), or_(True, True)), _if_then_else(or_(True, True), _if_then_else(True, 4, 4), _if_then_else(ge(_if_then_else(le(_if_then_else(False, 2, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(or_(True, False), _if_then_else(True, 4, 1), _if_then_else(False, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(compare_blocks_rows, max_col_clue), _if_then_else(False, ones_diff_cols, compare_blocks_cols), _if_then_else(False, 1, zeros_diff_cols))), _if_then_else(or_(ge(0, zeros_diff_rows), le(ones_diff_cols, 2)), _if_then_else(True, _if_then_else(False, 0, 4), _if_then_else(True, max_row_clue, 0)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, zeros_diff_cols, 1)))), zeros_diff_rows, 3)), _if_then_else(ge(4, 1), _if_then_else(True, 4, 3), _if_then_else(False, compare_blocks_rows, max_row_clue))), _if_then_else(ge(_if_then_else(False, 4, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, ones_diff_rows, 1), _if_then_else(True, max_col_clue, 3)), _if_then_else(and_(False, False), _if_then_else(True, ones_diff_cols, compare_blocks_cols), _if_then_else(True, ones_diff_rows, ones_diff_cols)))))), or_(or_(True, False), and_(False, False)))))
or_(ge(_if_then_else(ge(zeros_diff_rows, ones_diff_rows), 3, zeros_diff_cols), _if_then_else(True, _if_then_else(False, 1, max_row_clue), _if_then_else(ge(ones_diff_cols, ones_diff_rows), zeros_diff_cols, 4))), or_(False, ge(zeros_diff_rows, ones_diff_rows)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
le(_if_then_else(ge(_if_then_else(False, max_col_clue, compare_blocks_rows), max_row_clue), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(True, 4, 1)), _if_then_else(or_(or_(False, False), and_(True, True)), _if_then_else(ge(zeros_diff_rows, 3), _if_then_else(True, 0, 4), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, 1), _if_then_else(True, zeros_diff_cols, ones_diff_rows))))
or_(ge(_if_then_else(and_(False, True), _if_then_else(False, 2, ones_diff_rows), _if_then_else(False, zeros_diff_cols, compare_blocks_cols)), _if_then_else(le(4, ones_diff_cols), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(False, ones_diff_cols, 2))), or_(or_(True, True), and_(and_(or_(True, True), True), True)))
and_(or_(ge(_if_then_else(ge(3, compare_blocks_rows), _if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(False, ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_rows, 1), _if_then_else(and_(True, True), max_row_clue, ones_diff_cols))), le(_if_then_else(ge(compare_blocks_rows, ones_diff_rows), _if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(False, 1, ones_diff_rows)), _if_then_else(ge(0, 2), _if_then_else(True, zeros_diff_rows, 2), _if_then_else(False, ones_diff_rows, zeros_diff_rows)))), and_(ge(_if_then_else(and_(True, True), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(False, 4, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(True, _if_then_else(le(_if_then_else(False, compare_blocks_rows, _if_then_else(True, ones_diff_rows, max_row_clue)), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(or_(False, True), _if_then_else(False, 2, 4), _if_then_else(ge(_if_then_else(True, max_col_clue, compare_blocks_cols), ones_diff_cols), _if_then_else(or_(False, True), max_col_clue, zeros_diff_rows), 2)), _if_then_else(or_(and_(or_(False, False), False), True), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, _if_then_else(and_(True, False), 3, ones_diff_rows), _if_then_else(False, _if_then_else(True, 2, max_col_clue), 2)))), 0), _if_then_else(True, compare_blocks_rows, compare_blocks_cols))), and_(ge(max_col_clue, max_col_clue), and_(le(compare_blocks_cols, zeros_diff_cols), and_(False, False)))))
le(_if_then_else(le(_if_then_else(ge(ones_diff_cols, max_col_clue), _if_then_else(True, zeros_diff_rows, 2), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(or_(False, True), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(False, 3, zeros_diff_cols))), _if_then_else(or_(and_(True, True), le(compare_blocks_rows, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(True, 2, 3), _if_then_else(False, 4, 2)), _if_then_else(and_(ge(1, 2), True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 2, 2))), _if_then_else(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(True, max_col_clue, _if_then_else(False, max_row_clue, 2))), _if_then_else(ge(zeros_diff_rows, 0), _if_then_else(False, ones_diff_cols, _if_then_else(ge(_if_then_else(ge(4, ones_diff_cols), _if_then_else(True, ones_diff_rows, ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)), _if_then_else(or_(True, False), _if_then_else(True, max_row_clue, 3), _if_then_else(False, ones_diff_cols, compare_blocks_rows))), _if_then_else(le(_if_then_else(True, 0, ones_diff_cols), _if_then_else(False, ones_diff_cols, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_rows, zeros_diff_rows), _if_then_else(False, 0, max_col_clue)), _if_then_else(le(2, max_row_clue), _if_then_else(True, max_col_clue, 3), _if_then_else(True, 1, compare_blocks_rows))), _if_then_else(ge(_if_then_else(True, compare_blocks_cols, 3), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, 3, 4), _if_then_else(True, 0, max_row_clue)), _if_then_else(le(compare_blocks_rows, ones_diff_cols), _if_then_else(True, ones_diff_cols, 0), _if_then_else(False, compare_blocks_rows, max_row_clue))))), _if_then_else(True, compare_blocks_rows, 3)), _if_then_else(or_(True, True), max_col_clue, _if_then_else(False, ones_diff_rows, max_row_clue)))), _if_then_else(ge(_if_then_else(ge(_if_then_else(ge(_if_then_else(le(compare_blocks_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, max_col_clue), _if_then_else(False, 1, 3)), _if_then_else(ge(2, ones_diff_cols), _if_then_else(True, ones_diff_cols, compare_blocks_cols), _if_then_else(False, 1, 0))), _if_then_else(and_(le(4, compare_blocks_rows), and_(False, False)), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(False, zeros_diff_cols, ones_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, 3, 4), _if_then_else(False, 0, compare_blocks_rows))), _if_then_else(and_(or_(True, True), ge(max_col_clue, zeros_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, 4), _if_then_else(False, max_row_clue, 2)), _if_then_else(ge(max_row_clue, compare_blocks_rows), _if_then_else(False, 1, 4), _if_then_else(True, max_col_clue, 1)))), _if_then_else(ge(_if_then_else(and_(False, True), _if_then_else(False, zeros_diff_cols, 2), _if_then_else(True, zeros_diff_rows, max_col_clue)), _if_then_else(ge(ones_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, 0), _if_then_else(True, ones_diff_rows, 1))), _if_then_else(le(_if_then_else(False, 1, ones_diff_rows), _if_then_else(False, 1, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, max_row_clue), _if_then_else(False, 3, 0), _if_then_else(True, 3, compare_blocks_rows)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(False, compare_blocks_cols, 2))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, 2, 2)), _if_then_else(ge(4, ones_diff_cols), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(True, 4, zeros_diff_cols)), _if_then_else(le(0, max_col_clue), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, max_row_clue))))), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(False, 3, zeros_diff_cols)), _if_then_else(ge(3, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(True, 0, 4))), _if_then_else(and_(or_(False, True), ge(ones_diff_cols, max_row_clue)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_cols, 4), _if_then_else(False, zeros_diff_rows, max_col_clue)), _if_then_else(ge(compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 0, 3), _if_then_else(False, zeros_diff_cols, max_col_clue))), _if_then_else(ge(_if_then_else(False, 1, ones_diff_rows), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(False, 4, 2), _if_then_else(True, ones_diff_cols, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_rows, 0), _if_then_else(ge(compare_blocks_cols, ones_diff_rows), 4, 4)))))
and_(and_(ge(zeros_diff_rows, ones_diff_rows), or_(False, False)), ge(_if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)))
VAL TREES:
mul(add(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols)), add(mul(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, zeros_diff_rows)))
mul(add(add(mul(mul(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows))), add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)))), mul(mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(ones_diff_rows, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows))), add(add(add(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)))))
mul(mul(add(mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)))), add(mul(mul(mul(ones_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_cols)), mul(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols))), add(add(add(compare_blocks_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)))))
mul(mul(add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows))), mul(mul(add(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols))))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_cols)), add(add(ones_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, max_row_clue, ones_diff_cols)), le(_if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(True, ones_diff_rows, max_row_clue))), ge(_if_then_else(or_(False, True), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, max_col_clue, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(False, max_col_clue, _if_then_else(or_(False, True), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(ge(ones_diff_rows, ones_diff_rows), _if_then_else(False, 2, 2), compare_blocks_cols))), _if_then_else(True, 4, 1))))
ge(_if_then_else(True, _if_then_else(True, _if_then_else(True, compare_blocks_cols, compare_blocks_rows), compare_blocks_rows), _if_then_else(ge(_if_then_else(le(zeros_diff_rows, 1), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, max_row_clue, zeros_diff_cols))), ones_diff_cols, 0)), _if_then_else(or_(False, False), _if_then_else(or_(False, False), compare_blocks_cols, zeros_diff_cols), _if_then_else(False, _if_then_else(True, max_col_clue, 4), ones_diff_rows)))
or_(and_(and_(False, True), and_(ge(max_col_clue, max_col_clue), or_(False, ge(_if_then_else(ge(zeros_diff_cols, 1), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, 2, compare_blocks_rows)), _if_then_else(le(4, compare_blocks_rows), _if_then_else(False, zeros_diff_cols, 4), _if_then_else(False, 4, 3)))))), ge(compare_blocks_cols, _if_then_else(le(compare_blocks_cols, 4), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(compare_blocks_rows, compare_blocks_cols), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), or_(or_(or_(ge(_if_then_else(True, _if_then_else(le(_if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(True, 3, 1), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(and_(True, False), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, ones_diff_cols, 4))), 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), True), False), and_(False, False)))))
or_(True, or_(and_(ge(ones_diff_cols, max_row_clue), le(zeros_diff_cols, 1)), le(_if_then_else(True, 3, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, _if_then_else(True, 4, 2)))))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
le(_if_then_else(ge(_if_then_else(False, max_col_clue, compare_blocks_rows), max_row_clue), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(True, 4, 1)), _if_then_else(or_(or_(False, False), and_(True, True)), _if_then_else(ge(zeros_diff_rows, 3), _if_then_else(True, 0, 4), _if_then_else(True, 1, _if_then_else(True, 4, 1))), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, 1), _if_then_else(True, zeros_diff_cols, ones_diff_rows))))
or_(ge(_if_then_else(and_(False, True), _if_then_else(False, 2, ones_diff_rows), _if_then_else(False, zeros_diff_cols, compare_blocks_cols)), _if_then_else(le(4, ones_diff_cols), compare_blocks_rows, _if_then_else(False, ones_diff_cols, ones_diff_cols))), or_(or_(True, True), and_(and_(or_(True, True), True), True)))
and_(or_(ge(_if_then_else(ge(3, compare_blocks_rows), _if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(False, ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_rows, 1), _if_then_else(and_(True, True), max_row_clue, ones_diff_cols))), le(_if_then_else(ge(compare_blocks_rows, ones_diff_rows), _if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(False, 1, ones_diff_rows)), _if_then_else(ge(0, 2), _if_then_else(True, zeros_diff_rows, 2), _if_then_else(False, ones_diff_rows, zeros_diff_rows)))), and_(ge(_if_then_else(and_(True, True), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(False, 4, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(True, 4, 0), _if_then_else(True, compare_blocks_rows, compare_blocks_cols))), and_(ge(_if_then_else(False, zeros_diff_cols, 1), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), and_(le(compare_blocks_cols, zeros_diff_cols), and_(False, False)))))
le(_if_then_else(le(_if_then_else(ge(ones_diff_cols, max_col_clue), _if_then_else(True, zeros_diff_rows, 2), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(or_(False, True), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(False, 3, zeros_diff_cols))), _if_then_else(or_(and_(True, True), le(compare_blocks_rows, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(True, 2, 3), _if_then_else(False, 4, 2)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 2, 2))), _if_then_else(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(True, max_col_clue, _if_then_else(False, max_row_clue, 2))), _if_then_else(ge(zeros_diff_rows, 0), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, compare_blocks_rows, 3)), _if_then_else(or_(True, True), max_col_clue, _if_then_else(False, ones_diff_rows, max_row_clue)))), _if_then_else(ge(_if_then_else(ge(_if_then_else(ge(_if_then_else(le(compare_blocks_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, max_col_clue), _if_then_else(False, 1, 3)), _if_then_else(ge(2, ones_diff_cols), _if_then_else(True, ones_diff_cols, compare_blocks_cols), _if_then_else(False, 1, 0))), _if_then_else(and_(le(4, compare_blocks_rows), and_(False, False)), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(False, zeros_diff_cols, ones_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, 3, 4), _if_then_else(False, 0, compare_blocks_rows))), _if_then_else(and_(or_(True, True), ge(max_col_clue, zeros_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, 4), _if_then_else(False, max_row_clue, 2)), _if_then_else(ge(max_row_clue, compare_blocks_rows), _if_then_else(False, 1, 4), _if_then_else(True, 1, 1)))), _if_then_else(ge(_if_then_else(and_(False, True), _if_then_else(False, zeros_diff_cols, 2), _if_then_else(True, zeros_diff_rows, max_col_clue)), _if_then_else(ge(ones_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, 0), _if_then_else(True, ones_diff_rows, 1))), _if_then_else(le(_if_then_else(False, 1, ones_diff_rows), _if_then_else(False, 1, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, max_row_clue), _if_then_else(False, 3, 0), _if_then_else(True, 3, compare_blocks_rows)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(False, compare_blocks_cols, 2))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, 2, 2)), _if_then_else(ge(4, ones_diff_cols), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(True, 4, zeros_diff_cols)), _if_then_else(le(0, max_col_clue), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, max_row_clue))))), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(False, 3, zeros_diff_cols)), _if_then_else(ge(3, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(True, 0, 4))), _if_then_else(and_(or_(False, True), ge(ones_diff_cols, max_row_clue)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_cols, 2), _if_then_else(False, zeros_diff_rows, max_col_clue)), _if_then_else(ge(compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 0, 3), _if_then_else(False, zeros_diff_cols, max_col_clue))), _if_then_else(ge(_if_then_else(False, 1, ones_diff_rows), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(False, 4, 2), _if_then_else(True, ones_diff_cols, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_rows, 0), _if_then_else(ge(compare_blocks_cols, ones_diff_rows), 4, 4)))))
and_(and_(ge(zeros_diff_rows, ones_diff_rows), or_(False, False)), True)
VAL TREES:
mul(add(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols)), add(mul(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, zeros_diff_rows)))
mul(add(add(mul(mul(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows))), add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)))), mul(mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(ones_diff_rows, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows))), add(add(add(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)))))
mul(mul(add(mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)))), add(mul(mul(mul(ones_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_cols)), mul(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols))), add(add(add(compare_blocks_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)))))
mul(mul(add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows))), mul(mul(add(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols))))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_cols)), add(add(ones_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, max_row_clue, zeros_diff_cols)), le(_if_then_else(False, 1, max_col_clue), _if_then_else(True, ones_diff_rows, max_row_clue))), ge(_if_then_else(or_(False, True), _if_then_else(True, max_col_clue, compare_blocks_rows), max_col_clue), _if_then_else(and_(True, False), max_row_clue, compare_blocks_cols)))
ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(or_(False, False), _if_then_else(True, _if_then_else(True, _if_then_else(True, compare_blocks_cols, compare_blocks_rows), compare_blocks_rows), zeros_diff_cols), _if_then_else(False, zeros_diff_cols, _if_then_else(True, zeros_diff_cols, compare_blocks_cols))))
or_(and_(and_(False, or_(True, or_(True, True))), and_(ge(max_col_clue, max_col_clue), or_(False, True))), ge(_if_then_else(ge(zeros_diff_cols, 4), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, ones_diff_cols, max_col_clue)), _if_then_else(le(_if_then_else(and_(or_(ge(3, zeros_diff_rows), or_(False, False)), ge(_if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, compare_blocks_rows))), _if_then_else(and_(and_(False, False), ge(4, 4)), _if_then_else(ge(zeros_diff_cols, 1), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(False, 4, ones_diff_cols)), _if_then_else(le(3, max_row_clue), _if_then_else(True, 4, 0), _if_then_else(False, max_row_clue, ones_diff_rows))), _if_then_else(le(_if_then_else(True, 4, 4), _if_then_else(True, compare_blocks_cols, compare_blocks_rows)), _if_then_else(and_(False, and_(True, True)), _if_then_else(False, 4, 1), _if_then_else(True, 3, 0)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, ones_diff_rows)))), 4), max_col_clue, _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, 2), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(or_(ge(_if_then_else(True, zeros_diff_rows, _if_then_else(False, 1, max_col_clue)), 2), and_(True, False)), _if_then_else(or_(False, True), _if_then_else(False, zeros_diff_rows, 0), _if_then_else(False, 4, compare_blocks_cols)), _if_then_else(ge(ones_diff_cols, ones_diff_cols), _if_then_else(True, max_row_clue, _if_then_else(False, _if_then_else(False, 3, zeros_diff_cols), ones_diff_rows)), _if_then_else(le(_if_then_else(True, compare_blocks_rows, 2), _if_then_else(True, max_row_clue, ones_diff_rows)), ones_diff_rows, _if_then_else(False, 1, 2))))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(True, False), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(False, or_(or_(True, False), and_(False, False)))))
and_(and_(and_(False, True), ge(max_col_clue, ones_diff_rows)), ge(_if_then_else(True, zeros_diff_rows, 2), _if_then_else(ge(_if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), max_row_clue, ones_diff_rows)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
le(zeros_diff_cols, _if_then_else(or_(or_(False, False), and_(True, True)), _if_then_else(ge(zeros_diff_rows, 3), _if_then_else(True, 0, 4), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, 1), _if_then_else(True, zeros_diff_cols, ones_diff_rows))))
or_(ge(_if_then_else(and_(False, True), _if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, compare_blocks_cols)), _if_then_else(le(4, ones_diff_cols), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(False, ones_diff_cols, ones_diff_cols))), or_(or_(True, True), and_(and_(and_(or_(True, True), True), True), True)))
and_(or_(ge(_if_then_else(ge(3, compare_blocks_rows), _if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(False, ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(True, False), compare_blocks_cols, _if_then_else(and_(True, True), max_row_clue, ones_diff_cols))), le(_if_then_else(ge(compare_blocks_rows, ones_diff_rows), _if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(False, 1, ones_diff_rows)), _if_then_else(ge(0, 2), _if_then_else(True, zeros_diff_rows, 2), _if_then_else(False, ones_diff_rows, zeros_diff_rows)))), and_(ge(_if_then_else(and_(True, True), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(False, 4, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(True, 4, 0), _if_then_else(True, compare_blocks_rows, compare_blocks_cols))), and_(ge(_if_then_else(False, zeros_diff_cols, 1), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), and_(le(compare_blocks_cols, zeros_diff_cols), and_(False, False)))))
le(_if_then_else(le(_if_then_else(ge(ones_diff_cols, max_col_clue), _if_then_else(True, zeros_diff_rows, 2), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(or_(False, True), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(False, 3, zeros_diff_cols))), _if_then_else(or_(and_(True, True), le(compare_blocks_rows, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(True, 2, 3), _if_then_else(False, 4, 2)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 2, 2))), _if_then_else(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(True, max_col_clue, _if_then_else(False, max_row_clue, 2))), _if_then_else(ge(zeros_diff_rows, 0), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, compare_blocks_rows, 3)), _if_then_else(or_(True, True), max_col_clue, _if_then_else(False, ones_diff_rows, max_row_clue)))), _if_then_else(ge(_if_then_else(ge(_if_then_else(ge(_if_then_else(le(compare_blocks_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, max_col_clue), _if_then_else(False, 1, 3)), _if_then_else(ge(2, ones_diff_cols), _if_then_else(True, ones_diff_cols, compare_blocks_cols), _if_then_else(False, 1, 0))), _if_then_else(and_(le(4, compare_blocks_rows), and_(False, False)), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(False, zeros_diff_cols, ones_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, 3, 4), _if_then_else(False, 0, compare_blocks_rows))), _if_then_else(and_(or_(True, True), ge(max_col_clue, zeros_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, 4), _if_then_else(False, max_row_clue, 2)), _if_then_else(ge(max_row_clue, compare_blocks_rows), _if_then_else(False, 1, 4), _if_then_else(True, max_col_clue, 1)))), _if_then_else(ge(_if_then_else(and_(False, True), _if_then_else(False, zeros_diff_cols, 2), _if_then_else(True, zeros_diff_rows, max_col_clue)), _if_then_else(ge(ones_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, 0), _if_then_else(True, ones_diff_rows, 1))), _if_then_else(le(_if_then_else(False, 1, ones_diff_rows), _if_then_else(False, 1, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, max_row_clue), _if_then_else(False, 3, 0), _if_then_else(True, 3, compare_blocks_rows)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(False, compare_blocks_cols, 2))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, 2, 2)), _if_then_else(ge(4, ones_diff_cols), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(True, 4, 2)), _if_then_else(le(0, max_col_clue), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, max_row_clue))))), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(False, 3, zeros_diff_cols)), _if_then_else(ge(3, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(True, 0, 4))), _if_then_else(and_(or_(False, True), ge(ones_diff_cols, max_row_clue)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_cols, 4), _if_then_else(False, zeros_diff_rows, max_col_clue)), _if_then_else(ge(compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 0, 3), _if_then_else(False, zeros_diff_cols, max_col_clue))), _if_then_else(ge(_if_then_else(False, 1, ones_diff_rows), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(False, 4, 2), _if_then_else(True, ones_diff_cols, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_rows, 0), _if_then_else(ge(compare_blocks_cols, ones_diff_rows), 4, 4)))))
and_(and_(ge(zeros_diff_rows, ones_diff_rows), or_(False, False)), ge(_if_then_else(False, max_row_clue, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)))
VAL TREES:
mul(add(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols)), add(mul(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, zeros_diff_rows)))
mul(add(add(mul(mul(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows))), add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)))), mul(mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(ones_diff_rows, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows))), add(add(add(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)))))
mul(mul(add(mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)))), add(mul(mul(mul(ones_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_cols)), mul(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols))), add(add(add(compare_blocks_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)))))
mul(mul(add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows))), mul(mul(add(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols))))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_cols)), add(add(ones_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)))
COND TREES:
le(_if_then_else(ge(_if_then_else(True, max_col_clue, compare_blocks_rows), max_row_clue), 4, _if_then_else(True, 4, 1)), _if_then_else(True, _if_then_else(True, 2, _if_then_else(True, max_col_clue, zeros_diff_rows)), _if_then_else(ge(ones_diff_rows, ones_diff_rows), 0, _if_then_else(ge(_if_then_else(False, max_col_clue, compare_blocks_rows), max_row_clue), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(True, 4, 1)))))
or_(or_(or_(False, False), ge(zeros_diff_cols, _if_then_else(False, 2, ones_diff_rows))), or_(or_(True, True), and_(True, True)))
and_(or_(ge(_if_then_else(ge(3, compare_blocks_rows), _if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(False, ones_diff_rows, _if_then_else(True, ones_diff_rows, 1))), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, max_row_clue, ones_diff_cols))), le(_if_then_else(ge(compare_blocks_rows, ones_diff_rows), _if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(False, 1, ones_diff_rows)), _if_then_else(ge(0, 2), _if_then_else(True, zeros_diff_rows, 2), _if_then_else(False, ones_diff_rows, zeros_diff_rows)))), and_(ge(_if_then_else(and_(True, True), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(False, 4, ones_diff_rows)), _if_then_else(False, _if_then_else(True, 4, 0), _if_then_else(True, compare_blocks_rows, compare_blocks_cols))), and_(ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), and_(le(compare_blocks_cols, zeros_diff_cols), and_(False, False)))))
le(_if_then_else(le(_if_then_else(ge(ones_diff_cols, max_col_clue), _if_then_else(True, zeros_diff_rows, 2), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(or_(False, True), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(False, 3, zeros_diff_cols))), _if_then_else(or_(and_(True, True), le(compare_blocks_rows, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(True, 2, 3), _if_then_else(False, 4, 2)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 2, 2))), _if_then_else(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(True, max_col_clue, _if_then_else(False, max_row_clue, 2))), _if_then_else(ge(zeros_diff_rows, 0), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, compare_blocks_rows, 3)), _if_then_else(or_(True, True), max_col_clue, _if_then_else(False, ones_diff_rows, max_row_clue)))), _if_then_else(ge(_if_then_else(ge(ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(ge(3, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(True, 0, 4))), _if_then_else(and_(or_(False, True), ge(ones_diff_cols, max_row_clue)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_cols, 4), _if_then_else(False, zeros_diff_rows, max_col_clue)), _if_then_else(ge(compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 0, 3), _if_then_else(False, zeros_diff_cols, max_col_clue))), _if_then_else(False, _if_then_else(or_(True, True), _if_then_else(False, 4, 2), _if_then_else(True, ones_diff_cols, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_rows, 0), _if_then_else(False, 2, 4)))))
and_(and_(le(compare_blocks_rows, 4), False), ge(_if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)))
VAL TREES:
mul(add(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols)), add(mul(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, zeros_diff_rows)))
mul(add(add(mul(mul(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows))), add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)))), mul(mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(ones_diff_rows, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows))), add(add(add(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)))))
mul(mul(add(mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)))), add(mul(mul(mul(ones_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_cols)), mul(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols))), add(add(add(compare_blocks_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)))))
mul(mul(add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows))), mul(mul(add(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols))))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_cols)), add(add(ones_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, max_row_clue, _if_then_else(and_(ge(_if_then_else(or_(le(_if_then_else(or_(ge(zeros_diff_cols, compare_blocks_cols), True), 1, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, max_col_clue)), or_(ge(compare_blocks_cols, 0), and_(False, True))), _if_then_else(True, 2, 0), _if_then_else(False, 0, 4)), _if_then_else(le(4, ones_diff_rows), _if_then_else(False, 0, max_row_clue), _if_then_else(False, ones_diff_rows, 4))), or_(or_(and_(False, False), and_(True, False)), le(_if_then_else(True, 2, 3), _if_then_else(False, 3, compare_blocks_cols)))), _if_then_else(and_(or_(le(1, max_row_clue), or_(False, True)), le(_if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 2, compare_blocks_rows))), _if_then_else(ge(_if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, ones_diff_rows, 0)), _if_then_else(or_(False, False), _if_then_else(False, 0, max_col_clue), _if_then_else(False, 3, zeros_diff_cols)), _if_then_else(le(4, 1), _if_then_else(True, max_row_clue, max_col_clue), _if_then_else(True, zeros_diff_cols, 2))), _if_then_else(or_(or_(False, True), or_(False, True)), _if_then_else(le(ones_diff_cols, 4), _if_then_else(False, ones_diff_rows, 3), _if_then_else(False, 2, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, 1, ones_diff_rows), _if_then_else(False, max_row_clue, zeros_diff_cols)))), _if_then_else(ge(_if_then_else(le(0, 2), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_cols, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, ones_diff_rows))), _if_then_else(le(_if_then_else(True, 0, ones_diff_rows), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, ones_diff_cols, ones_diff_cols)), _if_then_else(and_(False, False), _if_then_else(True, ones_diff_rows, 3), _if_then_else(False, max_col_clue, zeros_diff_cols))), _if_then_else(and_(and_(False, True), or_(True, False)), _if_then_else(le(ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 0, 4)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_cols, 0), _if_then_else(False, ones_diff_cols, 4))))))), le(_if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(True, ones_diff_rows, max_row_clue))), ge(_if_then_else(and_(True, True), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, max_col_clue, compare_blocks_cols)), _if_then_else(and_(le(1, ones_diff_rows), True), _if_then_else(True, max_col_clue, max_row_clue), _if_then_else(True, 4, 1))))
ge(_if_then_else(or_(le(_if_then_else(le(4, compare_blocks_rows), _if_then_else(True, ones_diff_rows, 2), _if_then_else(True, zeros_diff_rows, 0)), 4), False), _if_then_else(True, _if_then_else(True, compare_blocks_cols, compare_blocks_rows), compare_blocks_rows), _if_then_else(False, ones_diff_cols, 0)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), compare_blocks_cols))
le(_if_then_else(ge(_if_then_else(le(zeros_diff_rows, ones_diff_cols), _if_then_else(False, 1, 1), _if_then_else(True, max_row_clue, compare_blocks_rows)), _if_then_else(ge(compare_blocks_rows, max_col_clue), _if_then_else(False, ones_diff_rows, max_row_clue), _if_then_else(False, 4, zeros_diff_rows))), _if_then_else(or_(and_(True, False), le(1, 3)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, max_col_clue, 3), _if_then_else(False, max_row_clue, zeros_diff_cols)), _if_then_else(le(1, 2), _if_then_else(True, 4, compare_blocks_cols), _if_then_else(False, 0, max_col_clue))), _if_then_else(and_(le(0, ones_diff_rows), and_(True, False)), _if_then_else(and_(True, False), _if_then_else(True, 3, compare_blocks_rows), _if_then_else(True, 3, compare_blocks_rows)), _if_then_else(ge(max_col_clue, ones_diff_cols), _if_then_else(True, 0, compare_blocks_rows), _if_then_else(False, 0, compare_blocks_rows)))), _if_then_else(le(_if_then_else(or_(False, False), _if_then_else(False, 2, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)), _if_then_else(ge(compare_blocks_rows, max_row_clue), _if_then_else(False, 0, 2), _if_then_else(True, compare_blocks_cols, max_row_clue))), _if_then_else(le(_if_then_else(True, 0, compare_blocks_cols), _if_then_else(True, 4, compare_blocks_rows)), _if_then_else(and_(True, False), _if_then_else(False, 3, 4), _if_then_else(False, max_row_clue, compare_blocks_rows)), _if_then_else(ge(2, 4), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_cols, max_row_clue))), _if_then_else(ge(_if_then_else(True, 2, 3), _if_then_else(True, zeros_diff_cols, 3)), _if_then_else(ge(0, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, 2), _if_then_else(True, ones_diff_cols, zeros_diff_rows)), _if_then_else(or_(False, True), _if_then_else(False, max_row_clue, 4), _if_then_else(False, zeros_diff_rows, ones_diff_cols)))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, _if_then_else(True, _if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 1, compare_blocks_cols))), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(and_(and_(and_(or_(True, True), le(3, compare_blocks_cols)), or_(or_(True, False), ge(zeros_diff_cols, 2))), le(_if_then_else(ge(compare_blocks_rows, max_col_clue), _if_then_else(True, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, 2, ones_diff_rows), _if_then_else(True, 4, ones_diff_cols)))), _if_then_else(ge(_if_then_else(le(0, max_row_clue), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(ge(zeros_diff_rows, zeros_diff_cols), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, max_row_clue))), _if_then_else(or_(or_(False, True), ge(4, ones_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, 0, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, 4, ones_diff_cols), _if_then_else(False, 4, 4))), _if_then_else(le(_if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(True, max_row_clue, zeros_diff_rows)), _if_then_else(and_(False, True), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, max_col_clue, 4)), _if_then_else(ge(_if_then_else(ge(_if_then_else(True, ones_diff_rows, _if_then_else(False, max_col_clue, compare_blocks_cols)), _if_then_else(True, _if_then_else(False, max_row_clue, _if_then_else(True, ones_diff_cols, max_row_clue)), max_row_clue)), _if_then_else(le(compare_blocks_cols, 3), _if_then_else(or_(True, and_(True, False)), _if_then_else(False, compare_blocks_cols, 4), ones_diff_rows), _if_then_else(True, ones_diff_cols, zeros_diff_cols)), _if_then_else(ge(1, 3), _if_then_else(le(_if_then_else(True, zeros_diff_rows, 3), zeros_diff_cols), ones_diff_rows, _if_then_else(True, zeros_diff_rows, 4)), _if_then_else(False, 2, 4))), zeros_diff_rows), _if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(True, 2, zeros_diff_rows)))), _if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(True, 3, zeros_diff_cols), _if_then_else(False, max_row_clue, 0)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_rows, 0), _if_then_else(True, 2, 0))), _if_then_else(ge(_if_then_else(False, _if_then_else(True, ones_diff_cols, 4), ones_diff_rows), _if_then_else(True, zeros_diff_rows, ones_diff_cols)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_cols, max_col_clue), _if_then_else(True, 0, 1)), _if_then_else(ge(4, 4), _if_then_else(False, 1, 1), _if_then_else(True, 0, 3))), _if_then_else(le(_if_then_else(True, zeros_diff_cols, 1), _if_then_else(True, ones_diff_rows, 4)), _if_then_else(ge(ones_diff_rows, 1), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)), _if_then_else(ge(compare_blocks_rows, 0), _if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(False, ones_diff_rows, 2))))), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), or_(or_(True, False), and_(False, False)))))
or_(ge(_if_then_else(and_(ge(3, zeros_diff_rows), and_(False, True)), _if_then_else(and_(False, False), _if_then_else(False, 2, max_row_clue), _if_then_else(True, compare_blocks_cols, 0)), _if_then_else(or_(False, False), _if_then_else(True, 1, ones_diff_cols), _if_then_else(True, 0, ones_diff_rows))), _if_then_else(True, _if_then_else(False, 3, 2), _if_then_else(ge(_if_then_else(le(_if_then_else(le(1, 0), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, zeros_diff_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, ones_diff_rows), _if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(False, 3, 1))), _if_then_else(or_(ge(max_col_clue, max_row_clue), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(False, max_row_clue, 1), _if_then_else(True, compare_blocks_cols, ones_diff_cols)), _if_then_else(ge(max_col_clue, compare_blocks_cols), _if_then_else(True, max_col_clue, max_row_clue), _if_then_else(False, 1, 3))), _if_then_else(le(_if_then_else(False, compare_blocks_cols, 1), _if_then_else(False, zeros_diff_cols, 2)), _if_then_else(or_(True, True), _if_then_else(False, max_col_clue, 1), _if_then_else(True, ones_diff_cols, compare_blocks_cols)), _if_then_else(and_(False, True), _if_then_else(True, 3, max_col_clue), _if_then_else(True, 1, ones_diff_rows)))), _if_then_else(or_(and_(and_(True, True), ge(3, max_col_clue)), le(_if_then_else(False, max_col_clue, 2), _if_then_else(True, 0, 3))), _if_then_else(ge(_if_then_else(False, max_row_clue, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(or_(True, True), _if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, 1)), _if_then_else(and_(True, True), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(True, 2, 3))), _if_then_else(le(_if_then_else(False, 1, 2), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(True, 3, 3)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(False, 1, max_row_clue))))), zeros_diff_cols, 4))), or_(or_(True, ge(max_col_clue, zeros_diff_rows)), ge(zeros_diff_rows, ones_diff_rows)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(or_(le(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, ones_diff_rows, max_row_clue)), True), max_row_clue, ones_diff_cols)), le(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, ones_diff_rows, max_row_clue))), ge(_if_then_else(or_(False, True), _if_then_else(True, max_col_clue, compare_blocks_rows), max_col_clue), _if_then_else(True, zeros_diff_cols, ones_diff_rows)))
ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, 0, 2)))
or_(and_(and_(False, or_(True, True)), and_(True, or_(False, True))), ge(_if_then_else(ge(zeros_diff_cols, 4), _if_then_else(True, _if_then_else(True, 1, zeros_diff_rows), ones_diff_rows), _if_then_else(False, ones_diff_cols, max_col_clue)), _if_then_else(le(compare_blocks_cols, compare_blocks_cols), max_col_clue, _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, 2), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(ge(_if_then_else(True, ones_diff_cols, compare_blocks_cols), _if_then_else(False, 3, ones_diff_rows)), False), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), 1)), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), le(_if_then_else(True, max_col_clue, 2), _if_then_else(True, max_row_clue, ones_diff_rows)))))
or_(ge(_if_then_else(ge(4, compare_blocks_cols), 3, zeros_diff_cols), _if_then_else(True, _if_then_else(True, _if_then_else(False, _if_then_else(False, 2, 4), max_row_clue), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(True, zeros_diff_cols, 4))), or_(or_(False, False), ge(zeros_diff_rows, ones_diff_rows)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, zeros_diff_rows))), ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(add(add(ones_diff_rows, add(ones_diff_rows, zeros_diff_cols)), add(ones_diff_cols, zeros_diff_rows)), add(mul(compare_blocks_rows, ones_diff_rows), add(mul(ones_diff_rows, ones_diff_cols), compare_blocks_cols)))), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(mul(add(mul(compare_blocks_rows, ones_diff_cols), mul(ones_diff_rows, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_rows))), add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, max_row_clue, ones_diff_cols)), le(_if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(True, ones_diff_rows, max_row_clue))), ge(_if_then_else(and_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, max_row_clue, ones_diff_cols)), True), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, max_col_clue, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(True, max_col_clue, max_row_clue), _if_then_else(True, 4, 1))))
ge(_if_then_else(or_(False, False), _if_then_else(True, _if_then_else(True, compare_blocks_cols, compare_blocks_rows), compare_blocks_rows), _if_then_else(False, ones_diff_cols, 0)), _if_then_else(True, _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, 1, ones_diff_rows)))
or_(and_(and_(False, or_(True, True)), and_(ge(max_col_clue, max_col_clue), or_(False, True))), ge(_if_then_else(ge(zeros_diff_cols, 4), _if_then_else(True, 0, ones_diff_rows), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(le(compare_blocks_cols, 4), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, _if_then_else(True, _if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 1, compare_blocks_cols))), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(or_(True, False), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, _if_then_else(or_(False, True), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 1, compare_blocks_cols)), 4))), or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), or_(or_(True, False), and_(False, False)))))
or_(ge(1, _if_then_else(True, _if_then_else(False, 3, 2), _if_then_else(False, zeros_diff_cols, 4))), or_(or_(True, ge(max_col_clue, ones_diff_cols)), ge(ones_diff_rows, _if_then_else(True, _if_then_else(False, 1, max_row_clue), ones_diff_rows))))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
le(_if_then_else(ge(_if_then_else(False, max_col_clue, compare_blocks_rows), max_row_clue), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(True, 4, 1)), _if_then_else(or_(or_(False, False), and_(True, True)), _if_then_else(ge(zeros_diff_rows, 3), _if_then_else(True, 0, 4), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, 1), _if_then_else(True, zeros_diff_cols, ones_diff_rows))))
or_(ge(_if_then_else(and_(False, True), _if_then_else(False, 2, ones_diff_rows), _if_then_else(False, zeros_diff_cols, compare_blocks_cols)), _if_then_else(le(4, ones_diff_cols), compare_blocks_rows, _if_then_else(False, ones_diff_cols, ones_diff_cols))), or_(or_(True, True), and_(and_(or_(True, True), True), True)))
and_(or_(ge(_if_then_else(ge(3, compare_blocks_rows), _if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(False, ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_rows, 1), _if_then_else(and_(True, True), max_row_clue, ones_diff_cols))), le(_if_then_else(ge(compare_blocks_rows, ones_diff_rows), _if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(False, 1, ones_diff_rows)), _if_then_else(ge(0, 2), _if_then_else(True, zeros_diff_rows, 2), _if_then_else(False, ones_diff_rows, zeros_diff_rows)))), and_(ge(_if_then_else(and_(True, True), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(False, 4, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(True, 4, 0), _if_then_else(True, compare_blocks_rows, compare_blocks_cols))), and_(ge(_if_then_else(False, zeros_diff_cols, 1), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), and_(le(compare_blocks_cols, zeros_diff_cols), and_(False, False)))))
le(_if_then_else(le(_if_then_else(ge(ones_diff_cols, max_col_clue), _if_then_else(True, zeros_diff_rows, 2), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(or_(False, True), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(False, 3, zeros_diff_cols))), _if_then_else(or_(and_(True, True), le(compare_blocks_rows, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(True, 2, 3), _if_then_else(False, 4, 2)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 2, 2))), _if_then_else(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(True, max_col_clue, _if_then_else(False, max_row_clue, 2))), _if_then_else(ge(zeros_diff_rows, 0), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, compare_blocks_rows, 3)), _if_then_else(or_(True, True), max_col_clue, _if_then_else(False, ones_diff_rows, max_row_clue)))), _if_then_else(ge(_if_then_else(ge(_if_then_else(ge(_if_then_else(le(compare_blocks_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, max_col_clue), _if_then_else(False, 1, 3)), _if_then_else(ge(2, ones_diff_cols), _if_then_else(True, ones_diff_cols, compare_blocks_cols), _if_then_else(False, 1, 0))), _if_then_else(and_(le(4, compare_blocks_rows), and_(False, False)), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(False, zeros_diff_cols, ones_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, 3, 4), _if_then_else(False, 0, compare_blocks_rows))), _if_then_else(and_(or_(True, True), ge(max_col_clue, zeros_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, 4), _if_then_else(False, max_row_clue, 2)), _if_then_else(ge(max_row_clue, compare_blocks_rows), _if_then_else(False, 1, 4), _if_then_else(True, max_col_clue, 1)))), _if_then_else(ge(_if_then_else(and_(False, True), _if_then_else(False, zeros_diff_cols, 2), _if_then_else(True, zeros_diff_rows, max_col_clue)), _if_then_else(ge(ones_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, 0), _if_then_else(True, ones_diff_rows, 1))), _if_then_else(le(_if_then_else(False, 1, ones_diff_rows), _if_then_else(False, 1, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, max_row_clue), _if_then_else(False, 3, 0), _if_then_else(True, 3, compare_blocks_rows)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(False, compare_blocks_cols, 2))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, 2, 2)), _if_then_else(ge(4, ones_diff_cols), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(True, 4, zeros_diff_cols)), _if_then_else(le(0, max_col_clue), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, max_row_clue))))), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(False, 3, zeros_diff_cols)), _if_then_else(ge(3, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(True, 0, 4))), _if_then_else(and_(or_(False, True), ge(ones_diff_cols, max_row_clue)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_cols, 2), _if_then_else(False, zeros_diff_rows, max_col_clue)), _if_then_else(ge(compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 0, 3), _if_then_else(False, zeros_diff_cols, max_col_clue))), _if_then_else(ge(_if_then_else(False, 1, ones_diff_rows), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(False, 4, 2), _if_then_else(True, ones_diff_cols, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_rows, 0), _if_then_else(ge(compare_blocks_cols, ones_diff_rows), 4, 4)))))
and_(and_(ge(zeros_diff_rows, ones_diff_rows), or_(False, False)), ge(_if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)))
VAL TREES:
mul(add(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols)), add(mul(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, zeros_diff_rows)))
mul(add(add(mul(mul(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows))), add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)))), mul(mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(ones_diff_rows, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows))), add(add(add(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)))))
mul(mul(add(mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)))), add(mul(mul(mul(ones_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_cols)), mul(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols))), add(add(add(compare_blocks_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)))))
mul(mul(add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows))), mul(mul(add(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols))))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_cols)), add(add(ones_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)))
COND TREES:
le(_if_then_else(ge(_if_then_else(True, max_col_clue, compare_blocks_rows), max_row_clue), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(True, 4, 1)), _if_then_else(le(compare_blocks_cols, _if_then_else(False, max_col_clue, ones_diff_rows)), _if_then_else(ge(_if_then_else(False, compare_blocks_cols, max_col_clue), _if_then_else(False, max_row_clue, ones_diff_cols)), 2, _if_then_else(False, max_col_clue, zeros_diff_rows)), _if_then_else(ge(ones_diff_rows, ones_diff_rows), 0, zeros_diff_cols)))
or_(or_(or_(False, False), ge(zeros_diff_cols, _if_then_else(True, compare_blocks_rows, 4))), or_(or_(True, True), and_(and_(or_(True, True), True), True)))
and_(or_(ge(_if_then_else(ge(3, compare_blocks_rows), _if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(False, ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, max_row_clue, ones_diff_cols))), le(_if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(False, 1, ones_diff_rows)), _if_then_else(ge(0, 2), _if_then_else(ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), zeros_diff_rows, 2), _if_then_else(False, ones_diff_rows, zeros_diff_rows)))), and_(ge(_if_then_else(and_(True, True), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(False, 4, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(True, 4, 0), _if_then_else(True, compare_blocks_rows, compare_blocks_cols))), and_(ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), and_(le(compare_blocks_cols, zeros_diff_cols), and_(False, False)))))
le(_if_then_else(le(_if_then_else(ge(ones_diff_cols, max_col_clue), _if_then_else(True, zeros_diff_rows, 2), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(or_(False, True), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(False, 3, zeros_diff_cols))), _if_then_else(or_(and_(True, True), le(compare_blocks_rows, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(True, 2, 3), _if_then_else(False, 4, 2)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 2, 2))), _if_then_else(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(True, max_col_clue, _if_then_else(False, max_row_clue, 2))), _if_then_else(ge(zeros_diff_rows, 0), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, compare_blocks_rows, 3)), _if_then_else(or_(True, True), max_col_clue, _if_then_else(False, ones_diff_rows, max_row_clue)))), _if_then_else(ge(_if_then_else(ge(ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(ge(3, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(True, 0, 4))), _if_then_else(and_(or_(False, True), ge(ones_diff_cols, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, 4), _if_then_else(False, zeros_diff_rows, max_col_clue)), _if_then_else(ge(compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 0, 3), _if_then_else(False, zeros_diff_cols, max_col_clue))), _if_then_else(ge(_if_then_else(False, 1, ones_diff_rows), _if_then_else(False, zeros_diff_cols, 3)), _if_then_else(or_(True, True), _if_then_else(False, 4, 2), _if_then_else(True, ones_diff_cols, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_rows, 0), _if_then_else(False, 4, 4)))))
and_(and_(le(compare_blocks_rows, compare_blocks_rows), or_(le(compare_blocks_cols, 1), False)), ge(4, compare_blocks_cols))
VAL TREES:
mul(add(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols)), add(mul(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, zeros_diff_rows)))
mul(add(add(mul(mul(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows))), add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)))), mul(mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(ones_diff_rows, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows))), add(add(add(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)))))
mul(mul(add(mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)))), add(mul(mul(mul(ones_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_cols)), mul(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols))), add(add(add(compare_blocks_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)))))
mul(mul(add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows))), mul(mul(add(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols))))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_cols)), add(add(ones_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, max_row_clue, ones_diff_cols)), le(_if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(True, ones_diff_rows, _if_then_else(and_(True, False), _if_then_else(True, max_col_clue, max_row_clue), _if_then_else(True, 4, 1))))), ge(_if_then_else(or_(False, True), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(True, _if_then_else(False, 2, 2), compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(True, max_col_clue, max_row_clue), _if_then_else(True, 4, 1))))
ge(_if_then_else(or_(False, False), _if_then_else(True, _if_then_else(True, compare_blocks_cols, compare_blocks_rows), compare_blocks_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(or_(True, False), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, 1, ones_diff_rows)))
or_(False, ge(1, _if_then_else(le(compare_blocks_cols, 4), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, _if_then_else(or_(False, True), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 1, compare_blocks_cols))), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), ones_diff_rows), _if_then_else(le(3, 3), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(compare_blocks_cols, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(ge(_if_then_else(or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), or_(or_(True, False), and_(False, False))), max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), True)))
or_(ge(1, _if_then_else(True, _if_then_else(or_(le(3, max_row_clue), or_(False, True)), 1, max_row_clue), _if_then_else(False, zeros_diff_cols, 4))), or_(le(compare_blocks_cols, 1), False))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(add(add(add(ones_diff_cols, zeros_diff_cols), mul(add(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), zeros_diff_rows)), add(add(mul(mul(ones_diff_rows, compare_blocks_rows), ones_diff_rows), zeros_diff_rows), mul(ones_diff_cols, mul(zeros_diff_rows, ones_diff_cols)))), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(mul(add(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, zeros_diff_cols)), mul(mul(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_rows))), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), add(add(add(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_cols, compare_blocks_rows)), mul(add(zeros_diff_cols, zeros_diff_rows), add(zeros_diff_rows, compare_blocks_cols))))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, add(add(mul(add(compare_blocks_rows, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_rows)), mul(add(add(mul(zeros_diff_rows, ones_diff_rows), ones_diff_cols), ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows))), add(add(add(compare_blocks_rows, ones_diff_rows), ones_diff_cols), mul(ones_diff_cols, zeros_diff_cols)))), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), mul(add(add(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_cols)), add(mul(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)), add(mul(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_cols)))), add(add(mul(compare_blocks_rows, zeros_diff_rows), add(ones_diff_rows, zeros_diff_rows)), add(add(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_cols, compare_blocks_cols))))), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, max_row_clue, ones_diff_cols)), le(_if_then_else(and_(and_(True, True), ge(ones_diff_cols, 2)), _if_then_else(and_(True, True), _if_then_else(False, 0, 1), _if_then_else(True, ones_diff_rows, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, _if_then_else(False, max_col_clue, compare_blocks_cols), 0), _if_then_else(True, ones_diff_cols, compare_blocks_rows))), _if_then_else(True, ones_diff_rows, max_row_clue))), ge(_if_then_else(or_(False, True), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, _if_then_else(False, 2, 2), compare_blocks_cols)), 3))
ge(_if_then_else(or_(False, False), _if_then_else(True, _if_then_else(True, compare_blocks_cols, compare_blocks_rows), compare_blocks_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(or_(False, False), _if_then_else(False, _if_then_else(or_(ge(2, compare_blocks_rows), ge(0, compare_blocks_cols)), _if_then_else(ge(zeros_diff_rows, 3), _if_then_else(False, 0, 0), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)), _if_then_else(ge(ones_diff_cols, max_row_clue), _if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, max_col_clue, 1))), zeros_diff_cols), _if_then_else(False, 1, ones_diff_rows)))
or_(and_(and_(False, le(_if_then_else(and_(False, or_(False, True)), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, 2, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(True, max_col_clue, 4)))), le(_if_then_else(le(3, ones_diff_cols), _if_then_else(False, 3, ones_diff_rows), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(le(3, _if_then_else(True, 0, _if_then_else(True, zeros_diff_cols, max_row_clue))), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, max_col_clue, 0)))), ge(1, _if_then_else(le(compare_blocks_cols, 4), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, ones_diff_cols), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(ge(_if_then_else(False, 0, max_row_clue), _if_then_else(False, max_col_clue, zeros_diff_cols)), max_row_clue, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_cols), compare_blocks_cols), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), or_(or_(True, False), and_(False, False))), or_(True, True)))
or_(ge(zeros_diff_rows, ones_diff_rows), or_(False, ge(zeros_diff_rows, 2)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
or_(or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(False, max_row_clue, ones_diff_cols)), False), ge(_if_then_else(or_(le(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, ones_diff_rows, max_row_clue)), True), _if_then_else(True, max_col_clue, compare_blocks_rows), zeros_diff_cols), _if_then_else(and_(True, False), _if_then_else(True, max_col_clue, max_row_clue), _if_then_else(True, _if_then_else(or_(and_(or_(False, False), and_(False, False)), and_(le(3, 0), and_(False, False))), zeros_diff_cols, zeros_diff_cols), 1))))
ge(_if_then_else(or_(False, True), _if_then_else(True, 0, compare_blocks_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_cols, _if_then_else(or_(or_(or_(False, False), and_(True, False)), or_(or_(False, False), le(zeros_diff_cols, max_col_clue))), _if_then_else(and_(or_(False, False), ge(zeros_diff_cols, zeros_diff_cols)), _if_then_else(le(max_row_clue, ones_diff_rows), _if_then_else(False, 2, 2), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, compare_blocks_rows, 1), _if_then_else(True, compare_blocks_cols, ones_diff_rows))), _if_then_else(le(_if_then_else(True, 0, zeros_diff_cols), _if_then_else(False, 2, ones_diff_rows)), _if_then_else(le(compare_blocks_cols, 0), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(ge(max_col_clue, 0), _if_then_else(True, 2, max_col_clue), _if_then_else(True, 1, zeros_diff_rows))))), _if_then_else(False, 2, ones_diff_rows)))
or_(and_(and_(False, or_(ge(max_col_clue, max_col_clue), True)), and_(ge(max_col_clue, max_col_clue), or_(False, or_(or_(and_(le(ones_diff_rows, 0), or_(True, False)), le(_if_then_else(False, zeros_diff_cols, max_col_clue), _if_then_else(True, max_col_clue, 3))), le(compare_blocks_cols, _if_then_else(or_(False, True), _if_then_else(False, 0, 4), _if_then_else(False, max_row_clue, ones_diff_rows))))))), ge(_if_then_else(ge(zeros_diff_cols, 4), _if_then_else(True, 0, ones_diff_rows), _if_then_else(le(_if_then_else(True, 2, 1), _if_then_else(True, ones_diff_rows, compare_blocks_cols)), ones_diff_cols, max_col_clue)), _if_then_else(le(compare_blocks_cols, 4), max_col_clue, _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, 2), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(False, zeros_diff_cols, max_row_clue), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), _if_then_else(False, _if_then_else(or_(le(3, zeros_diff_rows), or_(False, False)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(max_col_clue, _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2))), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(False, 3, 1))), zeros_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, zeros_diff_cols), zeros_diff_cols), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, _if_then_else(True, max_col_clue, 2)))), ge(1, 0)))
or_(ge(_if_then_else(ge(4, compare_blocks_cols), ones_diff_cols, zeros_diff_cols), _if_then_else(ge(_if_then_else(le(max_col_clue, zeros_diff_rows), 2, zeros_diff_cols), _if_then_else(False, _if_then_else(True, max_col_clue, 3), max_row_clue)), _if_then_else(le(4, zeros_diff_cols), 2, _if_then_else(True, max_row_clue, 3)), _if_then_else(ge(max_row_clue, ones_diff_rows), compare_blocks_cols, _if_then_else(and_(le(compare_blocks_cols, 1), True), _if_then_else(False, 0, compare_blocks_rows), zeros_diff_rows)))), or_(or_(False, le(compare_blocks_cols, 0)), ge(zeros_diff_rows, ones_diff_rows)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, max_row_clue, ones_diff_cols)), True), and_(True, False))
ge(_if_then_else(False, max_col_clue, ones_diff_cols), zeros_diff_rows)
or_(and_(and_(False, or_(True, True)), ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, zeros_diff_cols))), ge(_if_then_else(ge(zeros_diff_cols, 4), max_row_clue, _if_then_else(False, ones_diff_rows, max_col_clue)), _if_then_else(le(compare_blocks_cols, 4), max_col_clue, _if_then_else(False, zeros_diff_cols, 4))))
and_(le(_if_then_else(le(_if_then_else(True, max_col_clue, 2), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(le(_if_then_else(True, max_col_clue, _if_then_else(or_(False, True), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 1, compare_blocks_cols))), _if_then_else(True, max_row_clue, ones_diff_rows)), zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(ge(_if_then_else(True, ones_diff_cols, compare_blocks_cols), _if_then_else(False, 3, ones_diff_rows)), False), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(le(compare_blocks_cols, _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4))), or_(ge(_if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), or_(or_(True, False), and_(False, False)))))
or_(ge(_if_then_else(ge(4, compare_blocks_cols), 3, zeros_diff_cols), _if_then_else(True, _if_then_else(True, _if_then_else(False, _if_then_else(False, 2, 4), max_row_clue), _if_then_else(False, 4, compare_blocks_cols)), compare_blocks_cols)), or_(or_(False, ge(max_col_clue, ones_diff_cols)), ge(max_col_clue, ones_diff_rows)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
or_(or_(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, max_row_clue, ones_diff_cols)), le(_if_then_else(and_(and_(True, False), ge(ones_diff_cols, 2)), _if_then_else(and_(True, True), _if_then_else(False, 0, 1), _if_then_else(True, ones_diff_rows, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_cols, 0), _if_then_else(False, ones_diff_cols, compare_blocks_rows))), _if_then_else(True, ones_diff_rows, max_row_clue))), ge(_if_then_else(or_(False, True), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, _if_then_else(False, 2, 2), compare_blocks_cols)), _if_then_else(ge(_if_then_else(le(2, 1), _if_then_else(True, max_col_clue, compare_blocks_rows), max_col_clue), _if_then_else(True, zeros_diff_cols, ones_diff_rows)), _if_then_else(True, max_col_clue, max_row_clue), _if_then_else(True, 4, 1))))
ge(_if_then_else(or_(False, False), _if_then_else(True, _if_then_else(True, zeros_diff_cols, compare_blocks_rows), compare_blocks_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(or_(False, False), _if_then_else(False, _if_then_else(or_(ge(2, compare_blocks_rows), ge(compare_blocks_rows, compare_blocks_cols)), _if_then_else(ge(_if_then_else(False, 4, 4), 3), _if_then_else(False, 0, 0), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)), _if_then_else(ge(ones_diff_cols, max_row_clue), _if_then_else(True, max_col_clue, compare_blocks_cols), _if_then_else(True, max_col_clue, 1))), zeros_diff_cols), _if_then_else(False, 1, ones_diff_rows)))
or_(and_(and_(False, or_(True, True)), le(_if_then_else(le(3, ones_diff_cols), _if_then_else(True, 3, ones_diff_rows), _if_then_else(False, max_col_clue, _if_then_else(True, _if_then_else(True, 1, zeros_diff_rows), ones_diff_rows))), _if_then_else(le(3, _if_then_else(True, 0, _if_then_else(True, zeros_diff_cols, max_row_clue))), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, max_col_clue, 0)))), ge(1, _if_then_else(le(compare_blocks_cols, 4), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, _if_then_else(ge(0, 2), _if_then_else(True, zeros_diff_rows, 2), _if_then_else(False, ones_diff_rows, zeros_diff_rows))))))
and_(le(_if_then_else(False, _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(3, 3), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_row_clue), compare_blocks_cols), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(1, 2), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 4, 2)))), and_(or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), or_(or_(True, False), and_(False, False))), or_(or_(True, False), True)))
or_(ge(1, _if_then_else(False, _if_then_else(False, 1, ones_diff_cols), ones_diff_rows)), or_(le(_if_then_else(True, zeros_diff_cols, 4), 1), ge(zeros_diff_rows, ones_diff_rows)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(add(mul(mul(zeros_diff_cols, mul(zeros_diff_cols, compare_blocks_cols)), add(ones_diff_rows, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))), ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(mul(add(add(ones_diff_cols, zeros_diff_rows), add(zeros_diff_rows, compare_blocks_rows)), mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, zeros_diff_rows))), mul(mul(mul(compare_blocks_rows, ones_diff_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_rows)))), mul(compare_blocks_cols, zeros_diff_rows)))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(mul(zeros_diff_cols, mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_rows, ones_diff_cols), compare_blocks_rows)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), zeros_diff_rows), add(compare_blocks_rows, zeros_diff_cols))))
mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows))))
COND TREES:
and_(or_(le(_if_then_else(or_(True, False), _if_then_else(True, 0, ones_diff_cols), _if_then_else(True, 3, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, 4))), ge(_if_then_else(or_(False, True), _if_then_else(False, 2, 2), _if_then_else(True, zeros_diff_cols, 1)), _if_then_else(ge(zeros_diff_rows, max_col_clue), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, 1)))), ge(_if_then_else(and_(and_(False, True), le(3, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(True, 2, max_col_clue)), _if_then_else(ge(max_col_clue, 4), _if_then_else(True, ones_diff_cols, 1), _if_then_else(True, ones_diff_cols, 0))), _if_then_else(le(_if_then_else(True, ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, 1)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(False, _if_then_else(False, zeros_diff_cols, 4), 4)), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_rows, max_col_clue), _if_then_else(True, compare_blocks_cols, ones_diff_cols)))))
ge(_if_then_else(ge(max_col_clue, 0), _if_then_else(False, 3, 1), 0), _if_then_else(ge(max_row_clue, 2), _if_then_else(False, 3, 2), _if_then_else(False, 2, max_col_clue)))
le(_if_then_else(or_(ge(_if_then_else(False, 1, compare_blocks_rows), max_row_clue), or_(le(2, ones_diff_cols), and_(True, True))), _if_then_else(or_(le(4, 4), le(compare_blocks_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(False, 3, zeros_diff_rows)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, 2, compare_blocks_cols))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_col_clue), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(ge(4, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_row_clue, zeros_diff_rows)))), _if_then_else(or_(le(_if_then_else(True, compare_blocks_rows, 3), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)), le(_if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, max_row_clue, 3))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(True, 0, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(False, 1, 3), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(ge(ones_diff_cols, 1), _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, max_row_clue, zeros_diff_rows))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 1, 0)), _if_then_else(or_(True, False), _if_then_else(False, 1, compare_blocks_cols), _if_then_else(False, max_row_clue, zeros_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 4, 3)))))
le(_if_then_else(and_(True, True), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(False, 4, zeros_diff_cols)), _if_then_else(False, _if_then_else(False, zeros_diff_rows, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, ones_diff_cols)))
or_(and_(le(ones_diff_cols, 1), le(compare_blocks_cols, 1)), ge(_if_then_else(False, 2, ones_diff_cols), _if_then_else(True, 1, 3)))
VAL TREES:
add(add(add(compare_blocks_cols, mul(ones_diff_rows, compare_blocks_cols)), add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_cols))), mul(add(zeros_diff_cols, add(zeros_diff_rows, compare_blocks_cols)), add(zeros_diff_cols, ones_diff_rows)))
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), mul(add(add(zeros_diff_rows, ones_diff_rows), add(compare_blocks_rows, ones_diff_rows)), add(add(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows)))))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, compare_blocks_cols)))
mul(add(add(add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_cols, ones_diff_cols)), mul(mul(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows))), mul(mul(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols)), add(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, zeros_diff_cols)))), mul(add(mul(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)), add(mul(ones_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(add(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_rows)))))
add(mul(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_rows)))
add(mul(mul(ones_diff_cols, add(ones_diff_rows, zeros_diff_cols)), add(compare_blocks_cols, compare_blocks_cols)), mul(add(ones_diff_rows, mul(compare_blocks_cols, zeros_diff_rows)), mul(zeros_diff_cols, mul(mul(add(add(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, ones_diff_cols))), compare_blocks_cols))))
COND TREES:
or_(le(4, 2), and_(and_(True, False), and_(le(4, ones_diff_rows), True)))
ge(_if_then_else(le(max_col_clue, ones_diff_rows), _if_then_else(True, 0, zeros_diff_rows), _if_then_else(le(zeros_diff_cols, max_row_clue), 4, 4)), _if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(or_(False, False), 4, zeros_diff_cols), _if_then_else(False, 2, compare_blocks_cols)), _if_then_else(and_(False, False), _if_then_else(True, max_row_clue, _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(True, 1, 3))), _if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, 4, 1)))
or_(ge(_if_then_else(True, ones_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, _if_then_else(False, max_row_clue, compare_blocks_rows))), le(_if_then_else(ge(0, 2), _if_then_else(True, zeros_diff_rows, 2), _if_then_else(False, ones_diff_rows, zeros_diff_rows)), _if_then_else(False, ones_diff_cols, max_col_clue)))
ge(_if_then_else(False, _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, 2, 1)), 2)
ge(_if_then_else(or_(and_(True, False), ge(2, 4)), _if_then_else(or_(False, False), compare_blocks_rows, _if_then_else(True, max_col_clue, max_col_clue)), _if_then_else(and_(False, True), _if_then_else(True, 1, ones_diff_rows), _if_then_else(False, ones_diff_rows, 1))), _if_then_else(and_(and_(True, le(1, 4)), le(compare_blocks_cols, max_col_clue)), _if_then_else(le(zeros_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 1, compare_blocks_rows)), _if_then_else(ge(1, compare_blocks_rows), _if_then_else(False, 3, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, ones_diff_cols))))
VAL TREES:
mul(mul(mul(add(mul(compare_blocks_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_rows, compare_blocks_rows))), mul(add(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_rows)), add(mul(compare_blocks_cols, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_cols)))), mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows))), add(add(mul(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))))
add(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols)), add(add(zeros_diff_cols, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows)))
mul(add(add(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows)))
add(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_cols, mul(compare_blocks_cols, zeros_diff_rows))), mul(mul(mul(compare_blocks_cols, compare_blocks_cols), add(zeros_diff_cols, ones_diff_rows)), mul(compare_blocks_cols, mul(compare_blocks_rows, ones_diff_rows))))
add(add(mul(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))
COND TREES:
and_(or_(le(_if_then_else(or_(True, False), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, 3, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(True, max_col_clue, 4), _if_then_else(True, compare_blocks_rows, 4))), ge(_if_then_else(or_(False, True), _if_then_else(False, 2, 2), _if_then_else(True, zeros_diff_cols, 1)), _if_then_else(ge(zeros_diff_rows, max_col_clue), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, 1)))), ge(_if_then_else(and_(and_(False, True), le(3, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(True, 2, 4)), _if_then_else(ge(max_col_clue, 4), _if_then_else(True, ones_diff_cols, 1), _if_then_else(True, ones_diff_cols, 0))), _if_then_else(le(_if_then_else(True, ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, 1)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(False, _if_then_else(False, zeros_diff_cols, 4), 4)), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_rows, max_col_clue), _if_then_else(True, compare_blocks_cols, ones_diff_cols)))))
ge(_if_then_else(ge(max_col_clue, 0), _if_then_else(False, 3, 1), 0), _if_then_else(ge(max_row_clue, 2), _if_then_else(False, 3, 2), _if_then_else(False, 2, max_col_clue)))
le(_if_then_else(or_(ge(_if_then_else(False, 1, compare_blocks_rows), _if_then_else(False, max_row_clue, compare_blocks_rows)), or_(le(2, ones_diff_cols), and_(True, True))), _if_then_else(or_(le(4, 4), le(compare_blocks_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(False, 3, zeros_diff_rows)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, 2, compare_blocks_cols))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_col_clue), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(ge(4, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_row_clue, zeros_diff_rows)))), _if_then_else(or_(le(_if_then_else(True, compare_blocks_rows, 3), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)), le(_if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, max_row_clue, 3))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(True, 0, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(False, 1, 3), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(ge(ones_diff_cols, 1), _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, max_row_clue, zeros_diff_rows))), _if_then_else(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(True, 1, 0)), _if_then_else(or_(True, False), _if_then_else(False, 1, compare_blocks_cols), _if_then_else(False, max_row_clue, zeros_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 4, 3)))))
le(_if_then_else(and_(True, True), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), 2)
or_(and_(le(ones_diff_cols, 1), le(compare_blocks_cols, 1)), ge(_if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(True, 2, 3)))
VAL TREES:
add(add(add(compare_blocks_cols, mul(ones_diff_rows, compare_blocks_cols)), add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_cols))), mul(add(zeros_diff_cols, add(zeros_diff_rows, compare_blocks_cols)), add(zeros_diff_cols, ones_diff_rows)))
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), mul(add(add(zeros_diff_rows, ones_diff_rows), add(compare_blocks_rows, ones_diff_rows)), add(add(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows)))))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, compare_blocks_cols)))
mul(add(add(add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_cols, ones_diff_cols)), mul(mul(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows))), mul(mul(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols)), add(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, zeros_diff_cols)))), mul(add(mul(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)), add(mul(ones_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(add(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_rows)))))
add(mul(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_rows)))
add(mul(mul(ones_diff_cols, add(ones_diff_rows, zeros_diff_cols)), add(compare_blocks_cols, compare_blocks_cols)), mul(add(ones_diff_rows, mul(compare_blocks_cols, zeros_diff_rows)), mul(zeros_diff_cols, mul(mul(add(add(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, ones_diff_cols))), compare_blocks_cols))))
COND TREES:
or_(le(_if_then_else(True, 4, 1), 0), and_(and_(True, False), and_(le(max_col_clue, ones_diff_rows), True)))
ge(_if_then_else(le(max_col_clue, ones_diff_rows), _if_then_else(True, 0, zeros_diff_rows), _if_then_else(le(zeros_diff_cols, max_row_clue), 4, 4)), _if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(or_(False, False), 4, zeros_diff_cols), _if_then_else(False, 2, compare_blocks_cols)), _if_then_else(and_(False, False), _if_then_else(True, max_row_clue, _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(True, 1, 3))), _if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, 4, 1)))
or_(False, le(_if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, max_col_clue)))
ge(_if_then_else(False, _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, 2, 1)), _if_then_else(False, _if_then_else(False, zeros_diff_rows, ones_diff_cols), _if_then_else(False, 4, ones_diff_cols)))
ge(_if_then_else(or_(and_(True, False), ge(1, 4)), _if_then_else(or_(False, False), compare_blocks_rows, _if_then_else(True, max_col_clue, max_col_clue)), _if_then_else(and_(False, True), _if_then_else(True, 1, ones_diff_rows), _if_then_else(False, ones_diff_rows, 1))), _if_then_else(and_(and_(True, le(1, 4)), le(compare_blocks_cols, max_col_clue)), _if_then_else(le(zeros_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 1, compare_blocks_cols)), _if_then_else(ge(1, compare_blocks_rows), _if_then_else(False, 3, 2), _if_then_else(True, compare_blocks_cols, ones_diff_cols))))
VAL TREES:
mul(mul(mul(add(mul(compare_blocks_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_rows, compare_blocks_rows))), mul(add(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_rows)), add(mul(compare_blocks_cols, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_cols)))), mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows))), add(add(mul(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))))
add(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols)), add(add(zeros_diff_cols, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows)))
mul(add(add(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows)))
add(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_cols, mul(compare_blocks_cols, zeros_diff_rows))), mul(mul(mul(compare_blocks_cols, compare_blocks_cols), add(zeros_diff_cols, ones_diff_rows)), mul(compare_blocks_cols, mul(compare_blocks_rows, ones_diff_rows))))
add(add(mul(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))


INFO:root:hof: COND TREES:
le(_if_then_else(ge(0, zeros_diff_rows), _if_then_else(False, max_row_clue, 0), _if_then_else(False, 2, zeros_diff_cols)), _if_then_else(ge(4, 0), _if_then_else(True, max_col_clue, ones_diff_rows), _if_then_else(True, 0, zeros_diff_rows)))
or_(and_(ge(2, max_row_clue), le(4, _if_then_else(False, max_row_clue, max_row_clue))), or_(le(0, 3), le(max_col_clue, zeros_diff_cols)))
le(_if_then_else(ge(_if_then_else(ge(zeros_diff_cols, max_col_clue), 1, 0), 2), _if_then_else(False, 1, compare_blocks_rows), _if_then_else(or_(and_(False, False), False), max_col_clue, _if_then_else(False, compare_blocks_cols, compare_blocks_cols))), _if_then_else(le(_if_then_else(False, 0, ones_diff_rows), ones_diff_rows), _if_then_else(ge(ones_diff_cols, _if_then_else(False, zeros_diff_rows, max_row_clue)), max_col_clue, 1), _if_then_else(or_(or_(False, False), False), 2, 4)))
ge(_if_then_else(le(_if_then_else(or_(True, True), _if_then_else(True, ones_diff_cols, 1), _if_then_else(False, compare_blocks_rows, ones_diff_cols)), _if_then_else(ge(3, 0), _if_then_else(True, 3, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows))), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, zeros_diff_cols), _if_then_else(True, 2, 2)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_cols, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, 4)), _if_then_else(or_(False, False), _if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_rows, zeros_diff_rows))), _if_then_else(ge(_if_then_else(True, 0, compare_blocks_rows), _if_then_else(True, max_row_clue, max_col_clue)), _if_then_else(and_(False, True), _if_then_else(True, 4, 1), _if_then_else(True, 1, 4)), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 1, compare_blocks_rows), _if_then_else(True, 4, ones_diff_cols)))), _if_then_else(le(_if_then_else(le(3, max_col_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, 3, max_col_clue)), _if_then_else(le(zeros_diff_rows, 2), _if_then_else(True, ones_diff_cols, ones_diff_rows), _if_then_else(False, 0, zeros_diff_cols))), _if_then_else(and_(or_(False, True), and_(False, True)), _if_then_else(ge(1, 2), _if_then_else(False, 3, 0), _if_then_else(True, ones_diff_rows, 0)), _if_then_else(le(0, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, 1, 3))), _if_then_else(and_(and_(True, False), le(ones_diff_cols, compare_blocks_rows)), _if_then_else(le(0, zeros_diff_cols), _if_then_else(False, 2, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, zeros_diff_rows)), _if_then_else(and_(False, False), _if_then_else(False, 2, 4), _if_then_else(False, 3, 4)))))
le(_if_then_else(ge(_if_then_else(True, 4, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(ge(zeros_diff_cols, max_col_clue), _if_then_else(True, ones_diff_rows, 3), _if_then_else(False, compare_blocks_cols, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(True, 0, 3), _if_then_else(False, zeros_diff_cols, 0))), _if_then_else(ge(_if_then_else(True, 4, ones_diff_rows), _if_then_else(False, ones_diff_cols, zeros_diff_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(True, 3, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, max_col_clue)), _if_then_else(le(compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 1, 2), _if_then_else(True, 2, zeros_diff_cols))))
VAL TREES:
add(mul(add(mul(mul(ones_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, ones_diff_cols))), add(add(add(zeros_diff_cols, ones_diff_rows), mul(compare_blocks_cols, ones_diff_rows)), mul(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows)))), mul(mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols))), add(mul(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)), mul(add(zeros_diff_rows, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_cols)))))
mul(mul(mul(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_cols)), add(add(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, add(zeros_diff_cols, mul(compare_blocks_rows, compare_blocks_rows)))))
mul(add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_rows)))
add(mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_rows)), mul(mul(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_rows, mul(compare_blocks_cols, compare_blocks_cols))), add(add(zeros_diff_rows, zeros_diff_cols), ones_diff_rows)))
mul(mul(add(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_rows)), add(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_rows))), mul(add(mul(zeros_diff_rows, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows))))
mul(mul(mul(compare_blocks_cols, add(mul(ones_diff_cols, ones_diff_rows), zeros_diff_rows)), mul(ones_diff_rows, compare_blocks_cols)), add(mul(compare_blocks_rows, add(mul(ones_diff_rows, zeros_diff_rows), compare_blocks_rows)), mul(compare_blocks_rows, add(mul(ones_diff_rows, zeros_diff_rows), ones_diff_cols))))


INFO:root:stats: {'fitness': <deap.tools.support.Statistics object at 0x7f76db71a710>, 'size': <deap.tools.support.Statistics object at 0x7f76db71a748>}

