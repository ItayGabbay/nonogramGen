INFO:root:

*******STARTING!!!******


INFO:root:

*******Configuration******


INFO:root:# NUM_ROWS = 20


INFO:root:NUM_ROWS = 5


INFO:root:# NUM_COLS = 20


INFO:root:NUM_COLS = 5


INFO:root:empty_in_split = '\xa0'


INFO:root:convert_to_sat = True


INFO:root:pickle_unsolved_file_path = 'data/%dx%d_nonograms.pkl' % (NUM_ROWS, NUM_COLS)


INFO:root:pickle_solved_file_path = 'data/%dx%d_nonograms_solved.pkl' % (NUM_ROWS, NUM_COLS)


INFO:root:pickle_row_options_path = 'data/%dx%d_row_options.pkl' % (NUM_ROWS, NUM_ROWS)


INFO:root:should_run_in_parallel = True


INFO:root:print_individual_fitness = False


INFO:root:


INFO:root:NUM_COND_TREES = 5


INFO:root:NUM_VAL_TREES = NUM_COND_TREES + 1


INFO:root:prob_crossover_global = 0.7  # global probability for cx


INFO:root:prob_crossover_individual_cond = 0.8  # probability to cx a specific cond tree in an individual


INFO:root:prob_crossover_individual_val = 0.8  # probability to cx a specific cond tree in an individual


INFO:root:prob_mutate_global = 0.3


INFO:root:prob_mutate_individual_cond = 0.7


INFO:root:prob_mutate_individual_val = 0.7


INFO:root:


INFO:root:points_correct_box = 5


INFO:root:points_incorrect_box = 0


INFO:root:# points_incorrect_box = -2


INFO:root:pop_size = 400


INFO:root:hof_size = 1


INFO:root:# num_gen = 40


INFO:root:num_gen = 10


INFO:root:train_size = 3


INFO:root:

*******DONE!!!******


INFO:root:run time: 531 sec

INFO:root:max possible fitness for the nonograms ran: %d

INFO:root:log:    	      	                fitness                	                  size                  
   	      	---------------------------------------	----------------------------------------
gen	nevals	avg    	max    	min    	size	std    	avg   	max	min	size	std     
0  	400   	65     	65     	65     	400 	0      	5.785 	8  	4  	400 	0.727169
1  	294   	56.2042	73.3333	33.3333	400 	9.98547	6.14  	9  	4  	400 	1.09563 
2  	303   	56.0583	73.3333	31.6667	400 	9.92217	6.2325	12 	4  	400 	1.22002 
3  	324   	55.8458	73.3333	33.3333	400 	10.1967	6.39  	12 	4  	400 	1.32019 
4  	330   	56.6042	73.3333	33.3333	400 	9.91017	6.4125	12 	4  	400 	1.38468 
5  	328   	56.8375	73.3333	33.3333	400 	9.94806	6.6325	12 	4  	400 	1.44826 
6  	309   	57.8208	73.3333	35     	400 	9.44398	6.6   	11 	4  	400 	1.36198 
7  	317   	57.8458	73.3333	33.3333	400 	10.279 	6.63  	10 	4  	400 	1.33533 
8  	306   	58.2625	73.3333	35     	400 	10.295 	6.74  	12 	4  	400 	1.42035 
9  	309   	58.4083	73.3333	33.3333	400 	10.3579	6.74  	13 	4  	400 	1.5008  
10 	304   	58.5333	73.3333	35     	400 	10.2321	6.73  	13 	4  	400 	1.45674 

INFO:root:pop: COND TREES:
or_(and_(True, False), le(zeros_diff_rows, zeros_diff_rows))
le(_if_then_else(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(True, max_row_clue, 82)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(ones_diff_cols, ones_diff_cols), _if_then_else(True, 0, max_row_clue), _if_then_else(False, ones_diff_cols, zeros_diff_cols))), _if_then_else(False, compare_blocks_cols, ones_diff_cols))
ge(_if_then_else(le(_if_then_else(False, 4, 61), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(or_(False, True), _if_then_else(True, 2, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, 1)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_rows, zeros_diff_cols), _if_then_else(True, 3, zeros_diff_rows))), _if_then_else(True, compare_blocks_cols, compare_blocks_cols))
or_(le(zeros_diff_cols, _if_then_else(and_(True, or_(False, True)), _if_then_else(ge(_if_then_else(False, 1, _if_then_else(and_(False, False), 2, _if_then_else(le(_if_then_else(True, 0, -77), _if_then_else(False, 3, compare_blocks_rows)), compare_blocks_rows, 4))), 2), 1, zeros_diff_rows), _if_then_else(True, -50, zeros_diff_cols))), and_(False, le(0, 2)))
and_(and_(ge(ones_diff_rows, compare_blocks_rows), ge(ones_diff_cols, zeros_diff_rows)), or_(True, True))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, mul(mul(-5, zeros_diff_cols), add(zeros_diff_cols, zeros_diff_rows))))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_rows)), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(mul(mul(add(mul(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, zeros_diff_cols))), add(add(add(96, 88), mul(compare_blocks_cols, ones_diff_rows)), add(mul(54, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows)))), zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, mul(mul(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, mul(ones_diff_cols, compare_blocks_rows)))), mul(mul(ones_diff_rows, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(add(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_rows, mul(zeros_diff_cols, add(compare_blocks_cols, 87)))), -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(mul(mul(mul(zeros_diff_rows, ones_diff_rows), mul(ones_diff_cols, zeros_diff_cols)), mul(add(16, zeros_diff_rows), add(ones_diff_rows, -44))), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(add(add(zeros_diff_rows, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
or_(or_(or_(True, False), True), le(_if_then_else(False, compare_blocks_rows, _if_then_else(False, max_row_clue, max_row_clue)), 0))
le(_if_then_else(True, compare_blocks_cols, 1), _if_then_else(or_(True, True), compare_blocks_cols, ones_diff_cols))
ge(_if_then_else(False, max_row_clue, _if_then_else(False, 4, 2)), _if_then_else(or_(False, True), compare_blocks_cols, zeros_diff_rows))
or_(False, False)
and_(or_(or_(False, True), True), or_(True, True))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(18, 36), add(ones_diff_cols, zeros_diff_cols)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(add(mul(mul(mul(-12, compare_blocks_rows), add(18, 52)), add(add(compare_blocks_cols, ones_diff_rows), add(-81, compare_blocks_rows))), add(add(mul(ones_diff_rows, compare_blocks_rows), add(zeros_diff_cols, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)))), compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, add(add(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_cols, -43)))), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(add(add(zeros_diff_rows, compare_blocks_rows), mul(mul(ones_diff_rows, zeros_diff_cols), compare_blocks_rows)), compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(add(add(add(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols))), ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
or_(or_(or_(True, False), True), le(4, max_col_clue))
le(0, _if_then_else(False, zeros_diff_cols, ones_diff_cols))
ge(_if_then_else(False, max_row_clue, _if_then_else(False, max_row_clue, 70)), _if_then_else(True, max_col_clue, _if_then_else(True, 2, ones_diff_rows)))
or_(False, ge(compare_blocks_rows, max_row_clue))
and_(le(zeros_diff_cols, _if_then_else(False, max_row_clue, max_row_clue)), le(2, _if_then_else(or_(True, False), _if_then_else(False, max_row_clue, 3), _if_then_else(False, 0, max_col_clue))))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
ge(_if_then_else(True, _if_then_else(and_(False, True), _if_then_else(False, ones_diff_cols, 26), _if_then_else(ge(29, 70), 67, 3)), max_col_clue), _if_then_else(False, ones_diff_cols, ones_diff_rows))
and_(ge(_if_then_else(le(_if_then_else(and_(le(4, ones_diff_rows), le(0, max_row_clue)), _if_then_else(le(max_col_clue, compare_blocks_cols), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, zeros_diff_rows, 3)), _if_then_else(le(0, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(True, 3, 3))), _if_then_else(ge(_if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(0, 3), _if_then_else(True, compare_blocks_rows, 4), _if_then_else(False, compare_blocks_cols, 0)), _if_then_else(ge(max_row_clue, 0), _if_then_else(True, 0, compare_blocks_cols), _if_then_else(True, 3, 2)))), _if_then_else(le(_if_then_else(or_(True, False), _if_then_else(False, zeros_diff_cols, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(True, 0, 4), _if_then_else(False, 3, 0))), _if_then_else(or_(and_(True, False), ge(compare_blocks_cols, 43)), _if_then_else(and_(True, False), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, 3)), _if_then_else(ge(max_row_clue, compare_blocks_rows), _if_then_else(False, max_col_clue, 0), _if_then_else(True, compare_blocks_cols, 1))), _if_then_else(le(_if_then_else(False, zeros_diff_rows, 85), _if_then_else(True, 3, 0)), _if_then_else(le(1, ones_diff_rows), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(False, ones_diff_rows, -22)), _if_then_else(or_(True, True), _if_then_else(False, 3, 2), _if_then_else(True, compare_blocks_rows, 2)))), _if_then_else(ge(_if_then_else(le(compare_blocks_rows, 4), _if_then_else(True, ones_diff_rows, 0), _if_then_else(False, max_col_clue, 0)), _if_then_else(le(33, 3), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, ones_diff_rows, max_col_clue))), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, 0), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(le(ones_diff_cols, 2), _if_then_else(True, zeros_diff_rows, 1), _if_then_else(False, -64, 1)), _if_then_else(ge(zeros_diff_rows, 1), _if_then_else(True, zeros_diff_cols, 1), _if_then_else(False, max_col_clue, compare_blocks_cols))), _if_then_else(le(_if_then_else(True, max_row_clue, 3), _if_then_else(True, max_col_clue, zeros_diff_rows)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_cols, 3), _if_then_else(True, ones_diff_rows, zeros_diff_rows)), _if_then_else(le(max_col_clue, compare_blocks_rows), _if_then_else(True, max_col_clue, 0), _if_then_else(False, max_col_clue, zeros_diff_cols))))), _if_then_else(False, max_col_clue, _if_then_else(True, max_row_clue, _if_then_else(False, 0, compare_blocks_cols)))), or_(or_(False, True), and_(False, False)))
and_(le(ones_diff_cols, compare_blocks_rows), le(_if_then_else(True, max_row_clue, 70), compare_blocks_rows))
ge(zeros_diff_rows, _if_then_else(or_(False, True), _if_then_else(and_(False, False), 2, _if_then_else(and_(or_(False, or_(and_(True, False), or_(False, True))), ge(zeros_diff_rows, 2)), compare_blocks_rows, 4)), ones_diff_rows))
and_(le(_if_then_else(le(max_row_clue, ones_diff_rows), _if_then_else(True, 0, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)), _if_then_else(or_(True, False), _if_then_else(True, 1, 2), _if_then_else(False, zeros_diff_rows, max_row_clue))), or_(or_(False, False), False))
VAL TREES:
mul(mul(zeros_diff_cols, compare_blocks_cols), add(mul(zeros_diff_cols, add(compare_blocks_cols, zeros_diff_cols)), compare_blocks_cols))
mul(mul(add(add(ones_diff_rows, 13), compare_blocks_rows), add(compare_blocks_cols, mul(-28, ones_diff_rows))), add(ones_diff_cols, -82))
add(mul(zeros_diff_cols, add(zeros_diff_cols, compare_blocks_rows)), mul(compare_blocks_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_cols))
add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))
mul(add(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, -66))
COND TREES:
or_(and_(and_(True, False), and_(False, True)), and_(le(ones_diff_cols, _if_then_else(and_(and_(ge(ones_diff_cols, zeros_diff_rows), ge(max_col_clue, compare_blocks_rows)), False), max_row_clue, compare_blocks_cols)), False))
le(compare_blocks_cols, 4)
and_(ge(1, 3), and_(True, le(_if_then_else(False, zeros_diff_rows, 0), compare_blocks_cols)))
le(_if_then_else(ge(_if_then_else(le(0, zeros_diff_cols), compare_blocks_rows, 0), 1), 3, 1), _if_then_else(False, ones_diff_cols, zeros_diff_rows))
and_(True, False)
VAL TREES:
add(mul(add(mul(zeros_diff_rows, compare_blocks_rows), zeros_diff_rows), add(add(-36, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), mul(zeros_diff_rows, -35))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_rows))
add(mul(ones_diff_rows, ones_diff_cols), mul(add(mul(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), compare_blocks_rows))
add(add(zeros_diff_rows, zeros_diff_cols), add(add(add(93, mul(zeros_diff_rows, zeros_diff_rows)), ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols)))
add(add(compare_blocks_cols, zeros_diff_rows), add(42, zeros_diff_cols))
mul(mul(compare_blocks_rows, -23), mul(ones_diff_rows, zeros_diff_cols))
COND TREES:
and_(le(4, zeros_diff_rows), le(max_row_clue, _if_then_else(ge(-82, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, ones_diff_cols, 0))))
or_(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, ones_diff_cols)), le(_if_then_else(True, 1, 1), _if_then_else(False, zeros_diff_cols, 42)))
or_(le(_if_then_else(ge(ones_diff_rows, -85), _if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, -14), _if_then_else(True, _if_then_else(le(3, -63), _if_then_else(True, max_row_clue, 0), _if_then_else(False, 1, 2)), ones_diff_cols))), or_(and_(or_(False, True), False), and_(or_(False, False), and_(True, True))))
or_(and_(True, ge(3, zeros_diff_rows)), ge(_if_then_else(False, ones_diff_cols, 0), ones_diff_rows))
or_(and_(and_(False, True), True), or_(False, True))
VAL TREES:
add(mul(ones_diff_cols, 52), mul(compare_blocks_cols, zeros_diff_rows))
add(add(add(add(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols))), add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols))))
add(mul(zeros_diff_cols, 30), add(zeros_diff_rows, ones_diff_rows))
add(mul(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols))
add(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows))
add(mul(add(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_rows)), mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, -54))), add(add(mul(zeros_diff_rows, zeros_diff_rows), mul(20, ones_diff_cols)), mul(mul(compare_blocks_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))), mul(add(add(mul(42, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, ones_diff_cols))), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows)))))
COND TREES:
ge(_if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 2, ones_diff_rows))
and_(ge(_if_then_else(ge(0, zeros_diff_cols), zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 1, max_col_clue)), or_(or_(False, True), and_(False, False)))
and_(True, False)
ge(zeros_diff_rows, _if_then_else(False, _if_then_else(and_(le(_if_then_else(False, 3, compare_blocks_cols), zeros_diff_cols), False), 2, _if_then_else(le(_if_then_else(True, 0, -77), _if_then_else(False, 3, compare_blocks_rows)), compare_blocks_rows, 4)), ones_diff_rows))
and_(le(_if_then_else(False, max_col_clue, compare_blocks_cols), max_row_clue), or_(le(zeros_diff_cols, max_col_clue), False))
VAL TREES:
mul(mul(zeros_diff_cols, compare_blocks_cols), add(mul(zeros_diff_cols, add(compare_blocks_cols, zeros_diff_cols)), compare_blocks_cols))
mul(mul(add(add(ones_diff_rows, 13), compare_blocks_rows), add(compare_blocks_cols, mul(-28, ones_diff_rows))), add(ones_diff_cols, -82))
add(mul(zeros_diff_cols, add(zeros_diff_cols, compare_blocks_rows)), mul(compare_blocks_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_cols))
add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))
mul(add(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, -66))
COND TREES:
or_(le(3, _if_then_else(True, max_col_clue, 65)), le(_if_then_else(False, 2, _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(False, ones_diff_rows, 2), _if_then_else(False, 0, 4))), compare_blocks_cols))
le(_if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(ge(_if_then_else(False, 2, compare_blocks_cols), -66), compare_blocks_cols, zeros_diff_cols))
and_(le(_if_then_else(False, max_row_clue, 70), 53), or_(False, True))
ge(_if_then_else(or_(False, ge(max_col_clue, 4)), 3, compare_blocks_rows), zeros_diff_rows)
or_(or_(or_(True, False), le(ones_diff_cols, max_col_clue)), ge(ones_diff_rows, _if_then_else(False, _if_then_else(False, ones_diff_cols, _if_then_else(False, compare_blocks_cols, ones_diff_cols)), 4)))
VAL TREES:
mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_cols))
add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_rows))
add(add(mul(mul(add(compare_blocks_cols, ones_diff_cols), mul(-85, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_rows))), mul(mul(add(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)), mul(mul(compare_blocks_rows, 44), add(compare_blocks_rows, ones_diff_cols))), mul(add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, zeros_diff_rows), add(-49, ones_diff_cols)))))
add(add(ones_diff_rows, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows))
mul(add(mul(ones_diff_rows, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_cols)), add(75, zeros_diff_cols))
mul(mul(zeros_diff_cols, -79), mul(compare_blocks_cols, ones_diff_cols))
COND TREES:
or_(and_(False, and_(False, True)), and_(False, le(ones_diff_cols, compare_blocks_cols)))
le(_if_then_else(or_(False, True), max_col_clue, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_cols))
and_(ge(1, -24), and_(True, True))
le(_if_then_else(True, 3, _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_cols, max_row_clue), _if_then_else(True, 4, 3))), _if_then_else(True, ones_diff_cols, zeros_diff_rows))
and_(le(max_col_clue, compare_blocks_rows), or_(le(_if_then_else(and_(True, False), _if_then_else(ge(1, zeros_diff_rows), ones_diff_rows, 1), _if_then_else(False, 4, -75)), max_col_clue), False))
VAL TREES:
add(mul(add(mul(zeros_diff_rows, compare_blocks_rows), zeros_diff_rows), ones_diff_cols), mul(zeros_diff_rows, -35))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(mul(mul(ones_diff_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), zeros_diff_rows))
add(add(add(-63, zeros_diff_cols), mul(49, 62)), mul(-33, compare_blocks_rows))
add(add(zeros_diff_rows, zeros_diff_cols), add(mul(add(compare_blocks_cols, 2), add(zeros_diff_cols, ones_diff_cols)), ones_diff_cols))
add(add(compare_blocks_cols, zeros_diff_rows), add(42, add(add(add(add(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, 24)), mul(mul(compare_blocks_cols, -41), add(compare_blocks_cols, compare_blocks_rows))), add(add(add(zeros_diff_cols, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), add(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols))))))
add(add(7, zeros_diff_rows), mul(mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)), ones_diff_rows))
COND TREES:
ge(_if_then_else(False, _if_then_else(ge(max_col_clue, compare_blocks_cols), _if_then_else(True, max_row_clue, _if_then_else(and_(False, False), 1, max_col_clue)), _if_then_else(False, max_row_clue, _if_then_else(and_(False, False), 0, zeros_diff_cols))), max_col_clue), _if_then_else(and_(True, False), 2, ones_diff_rows))
and_(ge(_if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 1, max_col_clue)), or_(True, True))
and_(ge(max_row_clue, 2), False)
ge(4, _if_then_else(False, compare_blocks_rows, compare_blocks_rows))
and_(or_(False, False), False)
VAL TREES:
mul(mul(zeros_diff_cols, compare_blocks_cols), add(mul(zeros_diff_cols, add(compare_blocks_cols, zeros_diff_cols)), compare_blocks_cols))
mul(mul(add(add(ones_diff_rows, 13), compare_blocks_rows), add(compare_blocks_cols, mul(-28, ones_diff_rows))), add(ones_diff_cols, -82))
add(mul(zeros_diff_cols, add(zeros_diff_cols, compare_blocks_rows)), mul(compare_blocks_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_cols))
add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))
mul(add(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, -66))
COND TREES:
ge(zeros_diff_cols, 79)
ge(_if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(and_(and_(le(_if_then_else(True, ones_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), ge(_if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(False, 4, ones_diff_cols))), and_(le(_if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows)), and_(ge(_if_then_else(True, 2, max_row_clue), _if_then_else(ge(_if_then_else(True, ones_diff_cols, -28), 1), _if_then_else(True, 3, zeros_diff_rows), _if_then_else(or_(True, True), zeros_diff_cols, compare_blocks_cols))), and_(False, True)))), zeros_diff_cols, compare_blocks_cols))
or_(True, True)
le(_if_then_else(or_(le(_if_then_else(False, compare_blocks_rows, compare_blocks_cols), zeros_diff_cols), ge(max_col_clue, 4)), ones_diff_cols, ones_diff_rows), _if_then_else(or_(le(zeros_diff_rows, compare_blocks_cols), ge(1, 3)), _if_then_else(ge(_if_then_else(and_(False, False), _if_then_else(False, 3, 0), _if_then_else(True, max_col_clue, 3)), _if_then_else(and_(True, False), _if_then_else(False, -89, -71), _if_then_else(False, ones_diff_rows, 35))), _if_then_else(and_(ge(ones_diff_cols, max_col_clue), or_(True, True)), _if_then_else(or_(False, True), _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_cols, 2)), _if_then_else(or_(True, True), _if_then_else(False, 2, 1), _if_then_else(True, 3, -18))), _if_then_else(or_(ge(max_col_clue, zeros_diff_rows), le(4, zeros_diff_cols)), _if_then_else(ge(4, compare_blocks_cols), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_cols, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, 3), _if_then_else(False, 3, ones_diff_rows)))), 2))
le(_if_then_else(True, max_row_clue, max_row_clue), _if_then_else(False, max_col_clue, _if_then_else(True, max_row_clue, 2)))
VAL TREES:
add(mul(ones_diff_rows, zeros_diff_rows), add(-49, zeros_diff_rows))
add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, -94))
mul(mul(zeros_diff_rows, ones_diff_cols), mul(mul(add(61, ones_diff_cols), zeros_diff_cols), ones_diff_rows))
add(mul(zeros_diff_cols, mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), 67))
mul(add(zeros_diff_rows, -21), add(zeros_diff_rows, zeros_diff_cols))
add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols))
COND TREES:
ge(_if_then_else(or_(ge(1, max_row_clue), or_(True, False)), compare_blocks_cols, -96), _if_then_else(True, max_row_clue, 3))
and_(le(compare_blocks_cols, 3), le(max_col_clue, 4))
or_(and_(ge(_if_then_else(ge(0, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 4, ones_diff_rows)), _if_then_else(False, compare_blocks_rows, 0)), and_(and_(and_(True, True), and_(False, True)), or_(ge(ones_diff_cols, ones_diff_cols), and_(False, True)))), ge(_if_then_else(or_(and_(True, False), and_(False, True)), _if_then_else(ge(4, max_row_clue), _if_then_else(True, 0, -14), _if_then_else(False, max_row_clue, 4)), _if_then_else(le(-27, ones_diff_rows), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(True, 2, max_col_clue))), _if_then_else(True, _if_then_else(or_(True, True), _if_then_else(False, 2, 4), _if_then_else(True, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, 2), _if_then_else(False, 0, 3)))))
or_(le(1, _if_then_else(ge(max_col_clue, 4), zeros_diff_cols, 2)), le(2, compare_blocks_rows))
or_(False, False)
VAL TREES:
add(mul(compare_blocks_cols, zeros_diff_cols), mul(add(mul(ones_diff_cols, ones_diff_rows), add(compare_blocks_cols, -31)), compare_blocks_cols))
mul(add(mul(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_cols)), add(zeros_diff_cols, ones_diff_rows))
add(add(add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(38, ones_diff_rows))), add(mul(add(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), mul(mul(78, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_rows))))
add(add(mul(ones_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(add(mul(add(mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_cols)), add(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, zeros_diff_rows))), add(add(mul(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols)))), ones_diff_cols), add(ones_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_cols, 17), mul(ones_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, ones_diff_rows), add(7, zeros_diff_cols)))
add(mul(mul(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(83, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows)))
COND TREES:
ge(4, _if_then_else(or_(le(max_col_clue, zeros_diff_rows), False), compare_blocks_rows, max_row_clue))
ge(_if_then_else(and_(ge(ones_diff_cols, compare_blocks_rows), False), compare_blocks_rows, max_col_clue), 0)
or_(or_(False, False), le(max_col_clue, compare_blocks_cols))
le(_if_then_else(False, ones_diff_cols, _if_then_else(False, _if_then_else(True, _if_then_else(False, 1, ones_diff_rows), ones_diff_rows), 3)), _if_then_else(ge(4, compare_blocks_rows), zeros_diff_rows, 2))
le(3, _if_then_else(True, ones_diff_rows, compare_blocks_rows))
VAL TREES:
add(mul(ones_diff_rows, zeros_diff_rows), add(-49, zeros_diff_rows))
add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, -94))
mul(mul(zeros_diff_rows, ones_diff_cols), mul(mul(add(61, ones_diff_cols), zeros_diff_cols), ones_diff_rows))
add(mul(zeros_diff_cols, mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), 67))
mul(add(zeros_diff_rows, -21), add(zeros_diff_rows, zeros_diff_cols))
add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols))
COND TREES:
le(_if_then_else(or_(True, ge(zeros_diff_rows, 1)), ones_diff_cols, max_col_clue), _if_then_else(False, _if_then_else(True, ones_diff_rows, 4), ones_diff_cols))
or_(le(_if_then_else(or_(and_(False, False), or_(False, True)), _if_then_else(le(compare_blocks_rows, 4), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_rows, ones_diff_cols)), _if_then_else(ge(max_col_clue, max_col_clue), _if_then_else(True, 72, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, max_col_clue))), _if_then_else(ge(_if_then_else(True, 4, 0), _if_then_else(False, zeros_diff_cols, 3)), _if_then_else(le(0, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_rows), _if_then_else(True, ones_diff_rows, ones_diff_rows)), _if_then_else(ge(ones_diff_cols, 3), _if_then_else(False, 1, max_col_clue), _if_then_else(True, 0, 2)))), ge(_if_then_else(ge(0, zeros_diff_cols), zeros_diff_cols, compare_blocks_cols), 1))
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), compare_blocks_cols, _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, _if_then_else(or_(False, or_(True, True)), _if_then_else(True, _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 4, ones_diff_rows)), _if_then_else(True, _if_then_else(True, 56, 2), 0))))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(ge(2, ones_diff_rows), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(and_(False, False), 2, _if_then_else(ge(1, compare_blocks_rows), _if_then_else(ge(ones_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_rows, ones_diff_rows), _if_then_else(True, max_row_clue, zeros_diff_rows)), _if_then_else(False, ones_diff_cols, compare_blocks_cols))), _if_then_else(False, 3, 3)), le(_if_then_else(True, 0, -77), _if_then_else(False, 3, compare_blocks_rows)))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(False, True), zeros_diff_rows, _if_then_else(True, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, False), _if_then_else(and_(True, True), ones_diff_rows, -67), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
ge(_if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, compare_blocks_rows, ones_diff_rows))
and_(ge(_if_then_else(ge(0, zeros_diff_cols), zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 1, max_col_clue)), le(compare_blocks_cols, 3))
and_(True, le(_if_then_else(False, 2, zeros_diff_cols), 53))
ge(compare_blocks_rows, _if_then_else(False, _if_then_else(and_(False, False), 2, _if_then_else(le(_if_then_else(True, 0, -77), _if_then_else(False, 3, _if_then_else(False, 3, compare_blocks_rows))), compare_blocks_rows, 4)), ones_diff_rows))
and_(le(_if_then_else(False, max_col_clue, compare_blocks_cols), max_row_clue), or_(le(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), max_col_clue), False))
VAL TREES:
mul(mul(zeros_diff_cols, add(mul(mul(ones_diff_rows, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_cols)))), add(mul(zeros_diff_cols, add(compare_blocks_cols, zeros_diff_cols)), compare_blocks_cols))
mul(mul(add(add(ones_diff_rows, 13), compare_blocks_rows), add(compare_blocks_cols, mul(-28, add(add(add(mul(add(ones_diff_cols, -42), mul(zeros_diff_rows, -100)), add(add(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols))), mul(add(add(ones_diff_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_rows)))), add(add(add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_cols, 28)), mul(mul(zeros_diff_rows, zeros_diff_rows), add(ones_diff_cols, compare_blocks_rows))), add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows)), mul(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)))))))), add(ones_diff_cols, -82))
add(mul(zeros_diff_cols, add(zeros_diff_cols, compare_blocks_rows)), mul(compare_blocks_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_cols))
add(add(ones_diff_rows, mul(add(ones_diff_rows, compare_blocks_cols), add(5, compare_blocks_cols))), add(zeros_diff_rows, zeros_diff_rows))
mul(add(compare_blocks_rows, zeros_diff_rows), mul(add(add(mul(mul(33, 50), mul(ones_diff_cols, compare_blocks_rows)), mul(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_rows, 1))), mul(add(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_rows, -63)), add(mul(zeros_diff_rows, zeros_diff_rows), mul(55, compare_blocks_cols)))), -66))
COND TREES:
and_(True, or_(False, or_(True, or_(or_(True, False), True))))
ge(_if_then_else(le(ones_diff_cols, 2), _if_then_else(and_(False, or_(True, True)), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(False, max_col_clue, 2)), _if_then_else(le(-66, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, 4), _if_then_else(False, max_row_clue, 4))), _if_then_else(le(_if_then_else(True, max_row_clue, max_row_clue), _if_then_else(True, zeros_diff_rows, zeros_diff_cols)), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, _if_then_else(True, compare_blocks_rows, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, 0))))
le(70, _if_then_else(False, ones_diff_rows, _if_then_else(True, 3, max_row_clue)))
or_(ge(_if_then_else(le(ones_diff_cols, 1), _if_then_else(True, 50, ones_diff_cols), _if_then_else(True, zeros_diff_rows, -46)), _if_then_else(False, _if_then_else(True, 4, 3), _if_then_else(True, compare_blocks_cols, ones_diff_rows))), and_(or_(le(_if_then_else(False, zeros_diff_rows, compare_blocks_cols), zeros_diff_cols), ge(max_col_clue, 4)), or_(ge(4, zeros_diff_cols), ge(2, 2))))
or_(or_(False, False), True)
VAL TREES:
add(mul(mul(add(add(ones_diff_rows, -79), add(ones_diff_rows, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols))), mul(add(mul(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_cols)), mul(mul(-30, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)))), add(add(mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)), add(add(compare_blocks_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_rows))), mul(mul(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_cols)))))
add(add(compare_blocks_rows, -17), add(ones_diff_rows, compare_blocks_rows))
add(mul(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, add(zeros_diff_rows, compare_blocks_rows)))
add(add(ones_diff_rows, compare_blocks_rows), add(-44, add(ones_diff_cols, ones_diff_rows)))
add(mul(mul(mul(ones_diff_rows, -100), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, mul(mul(add(zeros_diff_cols, compare_blocks_rows), mul(99, ones_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), mul(compare_blocks_rows, compare_blocks_cols)))), mul(zeros_diff_rows, zeros_diff_cols))), mul(mul(mul(zeros_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_cols, compare_blocks_cols))))
add(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols))
COND TREES:
ge(max_row_clue, _if_then_else(or_(True, False), compare_blocks_rows, max_row_clue))
ge(_if_then_else(and_(and_(False, False), False), compare_blocks_rows, max_col_clue), _if_then_else(False, zeros_diff_cols, _if_then_else(False, 0, compare_blocks_cols)))
or_(or_(False, False), le(_if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)))
le(_if_then_else(or_(True, True), ones_diff_cols, _if_then_else(True, _if_then_else(and_(or_(False, True), ge(max_row_clue, 2)), _if_then_else(False, 1, ones_diff_rows), ones_diff_rows), 3)), _if_then_else(False, zeros_diff_rows, 2))
le(3, _if_then_else(ge(_if_then_else(True, ones_diff_rows, ones_diff_rows), _if_then_else(False, -62, 2)), zeros_diff_cols, -67))
VAL TREES:
add(mul(ones_diff_rows, zeros_diff_rows), add(-49, zeros_diff_rows))
add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, -94))
mul(mul(zeros_diff_rows, ones_diff_cols), mul(mul(add(61, ones_diff_cols), zeros_diff_cols), ones_diff_rows))
add(mul(zeros_diff_cols, mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), 67))
mul(add(zeros_diff_rows, -21), add(zeros_diff_rows, zeros_diff_cols))
add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols))
COND TREES:
ge(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(True, -17, ones_diff_rows)), _if_then_else(le(2, max_row_clue), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, ones_diff_rows, ones_diff_cols)), _if_then_else(le(0, 3), _if_then_else(True, zeros_diff_cols, max_col_clue), _if_then_else(False, 3, max_col_clue))), _if_then_else(False, ones_diff_cols, ones_diff_rows))
and_(ge(_if_then_else(ge(0, zeros_diff_cols), zeros_diff_cols, zeros_diff_cols), _if_then_else(False, max_col_clue, _if_then_else(True, max_row_clue, compare_blocks_cols))), or_(or_(False, True), and_(False, False)))
and_(le(_if_then_else(False, max_row_clue, 70), 0), le(_if_then_else(True, max_row_clue, _if_then_else(or_(False, False), _if_then_else(True, _if_then_else(False, ones_diff_rows, max_col_clue), 0), _if_then_else(True, _if_then_else(False, _if_then_else(False, 4, ones_diff_rows), ones_diff_cols), compare_blocks_rows))), compare_blocks_rows))
ge(zeros_diff_rows, _if_then_else(or_(le(_if_then_else(False, ones_diff_rows, max_row_clue), _if_then_else(True, 4, ones_diff_cols)), and_(and_(True, False), le(zeros_diff_rows, 1))), _if_then_else(and_(or_(False, True), le(max_col_clue, 3)), _if_then_else(and_(True, False), _if_then_else(True, 0, 89), _if_then_else(False, 4, compare_blocks_rows)), _if_then_else(ge(ones_diff_rows, 1), _if_then_else(True, 1, 4), _if_then_else(True, max_row_clue, 0))), _if_then_else(and_(le(1, zeros_diff_rows), le(ones_diff_rows, -86)), _if_then_else(ge(0, zeros_diff_rows), _if_then_else(True, ones_diff_rows, -13), _if_then_else(True, ones_diff_cols, 1)), _if_then_else(or_(True, True), _if_then_else(False, 1, 93), _if_then_else(True, 3, zeros_diff_rows)))))
or_(le(_if_then_else(False, compare_blocks_cols, 0), zeros_diff_rows), ge(ones_diff_cols, max_col_clue))
VAL TREES:
mul(mul(zeros_diff_cols, compare_blocks_cols), add(mul(zeros_diff_cols, add(compare_blocks_cols, zeros_diff_cols)), compare_blocks_cols))
mul(mul(add(add(ones_diff_rows, 13), compare_blocks_rows), add(compare_blocks_cols, mul(-28, ones_diff_rows))), add(ones_diff_cols, -82))
add(mul(zeros_diff_cols, add(zeros_diff_cols, compare_blocks_rows)), mul(compare_blocks_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_cols))
add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))
mul(add(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, -66))
COND TREES:
or_(or_(or_(True, False), True), le(_if_then_else(False, compare_blocks_rows, _if_then_else(False, max_row_clue, max_row_clue)), 0))
le(_if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(ge(4, 4), _if_then_else(True, 3, max_col_clue), 2))
ge(_if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(or_(False, ge(_if_then_else(False, max_col_clue, 4), _if_then_else(le(compare_blocks_cols, 0), _if_then_else(le(zeros_diff_rows, ones_diff_rows), 4, zeros_diff_cols), 2))), compare_blocks_cols, zeros_diff_rows))
or_(False, False)
and_(or_(or_(False, True), True), or_(True, False))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
and_(True, or_(ge(compare_blocks_cols, _if_then_else(True, -63, compare_blocks_cols)), ge(_if_then_else(False, max_row_clue, _if_then_else(ge(compare_blocks_cols, max_col_clue), _if_then_else(False, ones_diff_rows, 4), _if_then_else(True, ones_diff_cols, 1))), _if_then_else(ge(zeros_diff_cols, ones_diff_rows), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(True, 4, compare_blocks_rows)))))
ge(_if_then_else(True, _if_then_else(True, 0, compare_blocks_cols), zeros_diff_cols), _if_then_else(ge(_if_then_else(le(_if_then_else(False, 1, 4), _if_then_else(True, 2, zeros_diff_cols)), 2, zeros_diff_cols), _if_then_else(and_(le(0, 52), and_(True, True)), _if_then_else(ge(4, ones_diff_rows), _if_then_else(False, max_row_clue, compare_blocks_rows), 0), _if_then_else(True, zeros_diff_cols, _if_then_else(True, compare_blocks_rows, max_row_clue)))), _if_then_else(False, 4, -96), _if_then_else(ge(_if_then_else(False, compare_blocks_rows, 3), compare_blocks_rows), compare_blocks_rows, max_row_clue)))
le(_if_then_else(True, ones_diff_cols, zeros_diff_cols), _if_then_else(True, max_row_clue, _if_then_else(ge(zeros_diff_cols, 37), _if_then_else(False, ones_diff_rows, _if_then_else(False, ones_diff_rows, -82)), _if_then_else(False, 2, 51))))
and_(or_(False, or_(le(_if_then_else(True, max_col_clue, ones_diff_cols), _if_then_else(False, zeros_diff_cols, 2)), and_(ge(zeros_diff_rows, compare_blocks_rows), and_(False, True)))), le(compare_blocks_rows, zeros_diff_cols))
ge(_if_then_else(le(max_col_clue, compare_blocks_rows), 1, ones_diff_cols), _if_then_else(or_(le(_if_then_else(True, -84, compare_blocks_cols), _if_then_else(False, ones_diff_cols, ones_diff_rows)), and_(and_(True, False), ge(3, ones_diff_rows))), zeros_diff_cols, ones_diff_rows))
VAL TREES:
add(add(compare_blocks_cols, zeros_diff_cols), add(add(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), compare_blocks_cols))
add(add(add(ones_diff_cols, add(74, mul(zeros_diff_rows, ones_diff_cols))), compare_blocks_rows), mul(mul(ones_diff_rows, ones_diff_cols), add(add(compare_blocks_rows, ones_diff_cols), -65)))
add(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_rows, mul(add(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_rows, ones_diff_cols)), mul(add(ones_diff_rows, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)))))
mul(mul(add(zeros_diff_rows, compare_blocks_cols), add(add(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_cols, compare_blocks_rows))), add(mul(zeros_diff_cols, compare_blocks_rows), mul(mul(mul(add(add(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_rows)), add(mul(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_cols, compare_blocks_rows))), mul(mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, -53)), add(mul(zeros_diff_cols, -95), add(ones_diff_rows, compare_blocks_rows)))), mul(mul(mul(add(ones_diff_cols, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_rows))), add(add(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_cols, zeros_diff_cols)), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows))))), compare_blocks_cols)))
add(mul(zeros_diff_cols, -71), add(add(add(mul(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -47))), add(mul(mul(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)))), mul(compare_blocks_rows, add(compare_blocks_rows, zeros_diff_rows))))
mul(mul(mul(mul(zeros_diff_rows, add(mul(compare_blocks_rows, zeros_diff_cols), add(mul(-52, -9), ones_diff_rows))), mul(compare_blocks_cols, compare_blocks_rows)), compare_blocks_cols), mul(ones_diff_cols, zeros_diff_rows))
COND TREES:
or_(or_(True, ge(ones_diff_cols, 2)), False)
and_(le(max_col_clue, 4), False)
or_(or_(False, False), le(_if_then_else(and_(or_(True, True), False), max_col_clue, _if_then_else(True, ones_diff_rows, ones_diff_cols)), 1))
and_(le(_if_then_else(False, 4, _if_then_else(False, ones_diff_rows, 3)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), zeros_diff_cols, _if_then_else(True, 1, 1))), and_(or_(False, or_(False, True)), or_(and_(True, True), and_(True, False))))
le(_if_then_else(or_(False, False), _if_then_else(True, 0, max_col_clue), _if_then_else(True, 3, 4)), _if_then_else(and_(True, and_(True, False)), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(True, 53, zeros_diff_rows)))
VAL TREES:
mul(mul(add(mul(-51, compare_blocks_cols), add(ones_diff_cols, 58)), mul(mul(zeros_diff_rows, zeros_diff_rows), add(compare_blocks_cols, 19))), mul(add(add(69, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(-83, 36), add(-91, zeros_diff_cols))))
mul(mul(mul(-86, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(compare_blocks_cols, add(mul(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_cols, -23))), mul(ones_diff_cols, compare_blocks_rows)))
add(mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_cols)), mul(zeros_diff_rows, zeros_diff_cols))
mul(add(mul(ones_diff_cols, add(add(add(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), mul(39, ones_diff_cols))), mul(add(add(compare_blocks_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(-45, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_cols))))), ones_diff_cols), add(add(compare_blocks_cols, ones_diff_rows), zeros_diff_cols))
add(mul(compare_blocks_cols, compare_blocks_cols), add(mul(ones_diff_rows, add(ones_diff_rows, zeros_diff_cols)), zeros_diff_cols))
add(mul(mul(zeros_diff_cols, zeros_diff_cols), compare_blocks_rows), mul(ones_diff_rows, add(zeros_diff_rows, zeros_diff_rows)))
COND TREES:
or_(and_(and_(True, False), and_(False, True)), and_(False, le(max_col_clue, 0)))
le(_if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_cols))
and_(ge(_if_then_else(False, -24, -58), 2), and_(le(_if_then_else(True, 3, zeros_diff_cols), 2), True))
le(_if_then_else(True, 3, _if_then_else(and_(True, True), _if_then_else(False, _if_then_else(False, 4, ones_diff_cols), max_row_clue), _if_then_else(True, 4, 3))), _if_then_else(True, ones_diff_cols, zeros_diff_rows))
and_(or_(False, True), False)
VAL TREES:
add(mul(mul(add(mul(ones_diff_rows, zeros_diff_rows), ones_diff_rows), add(mul(add(compare_blocks_cols, zeros_diff_cols), compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols))), ones_diff_cols), mul(zeros_diff_rows, -35))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(mul(mul(ones_diff_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), zeros_diff_rows))
add(add(add(-63, zeros_diff_cols), add(add(zeros_diff_rows, ones_diff_rows), mul(add(-67, zeros_diff_rows), add(41, ones_diff_cols)))), mul(-33, compare_blocks_rows))
add(add(zeros_diff_rows, zeros_diff_cols), add(mul(add(compare_blocks_cols, 2), add(zeros_diff_cols, ones_diff_cols)), mul(mul(mul(compare_blocks_cols, -81), mul(ones_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, ones_diff_rows), add(compare_blocks_rows, 25)))))
add(add(compare_blocks_cols, zeros_diff_rows), add(42, add(add(add(add(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, 24)), mul(mul(compare_blocks_cols, -41), add(compare_blocks_cols, compare_blocks_rows))), add(add(add(zeros_diff_cols, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), add(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols))))))
add(add(7, add(add(zeros_diff_rows, ones_diff_rows), mul(ones_diff_cols, zeros_diff_rows))), mul(mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)), ones_diff_rows))
COND TREES:
or_(False, True)
or_(le(max_col_clue, 2), False)
ge(_if_then_else(False, _if_then_else(le(max_col_clue, 4), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, max_row_clue, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(False, _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, 3, max_col_clue)), ge(4, compare_blocks_rows))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_cols))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(or_(False, True), zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
or_(or_(or_(True, False), True), le(4, 4))
le(0, _if_then_else(False, compare_blocks_cols, ones_diff_cols))
ge(_if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(False, max_col_clue, _if_then_else(True, 2, ones_diff_rows)))
or_(False, ge(ones_diff_cols, zeros_diff_rows))
and_(or_(False, False), le(2, _if_then_else(or_(True, False), _if_then_else(False, max_row_clue, 3), _if_then_else(False, 0, max_col_clue))))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
or_(or_(or_(True, False), True), le(_if_then_else(False, compare_blocks_rows, _if_then_else(False, max_row_clue, max_row_clue)), 0))
le(_if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(ge(4, 4), _if_then_else(True, 3, max_col_clue), max_row_clue))
ge(_if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(or_(False, True), compare_blocks_cols, zeros_diff_rows))
or_(False, False)
and_(or_(or_(False, True), True), or_(True, False))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
or_(and_(and_(True, False), and_(False, True)), or_(and_(True, True), ge(_if_then_else(or_(or_(True, False), True), compare_blocks_rows, 1), 4)))
le(_if_then_else(and_(and_(le(2, ones_diff_rows), and_(True, True)), and_(ge(0, compare_blocks_rows), and_(True, False))), _if_then_else(True, _if_then_else(le(ones_diff_cols, 0), _if_then_else(False, max_row_clue, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, max_row_clue, ones_diff_rows))), _if_then_else(or_(or_(True, False), or_(False, True)), _if_then_else(or_(True, False), _if_then_else(False, 4, 4), _if_then_else(False, zeros_diff_rows, -30)), _if_then_else(le(2, compare_blocks_cols), _if_then_else(True, max_row_clue, ones_diff_rows), _if_then_else(True, ones_diff_cols, compare_blocks_rows)))), zeros_diff_rows)
and_(ge(1, 3), and_(le(max_row_clue, ones_diff_cols), True))
le(_if_then_else(le(_if_then_else(False, compare_blocks_cols, max_col_clue), _if_then_else(False, max_col_clue, 4)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, -27), _if_then_else(True, compare_blocks_rows, 4)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, 4, max_row_clue))), _if_then_else(False, ones_diff_cols, zeros_diff_rows))
and_(le(compare_blocks_rows, _if_then_else(ge(_if_then_else(False, _if_then_else(False, max_col_clue, 3), _if_then_else(True, zeros_diff_rows, ones_diff_rows)), _if_then_else(True, _if_then_else(False, compare_blocks_rows, ones_diff_rows), ones_diff_cols)), _if_then_else(False, _if_then_else(le(zeros_diff_rows, 1), max_row_clue, ones_diff_cols), 4), _if_then_else(False, max_row_clue, zeros_diff_cols))), le(zeros_diff_rows, 3))
VAL TREES:
add(mul(add(mul(zeros_diff_rows, compare_blocks_rows), zeros_diff_rows), ones_diff_cols), mul(zeros_diff_rows, -35))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_rows))
add(mul(ones_diff_rows, ones_diff_cols), mul(-33, compare_blocks_rows))
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols))
add(add(compare_blocks_cols, zeros_diff_rows), add(42, zeros_diff_cols))
add(add(7, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows))
COND TREES:
or_(le(max_col_clue, _if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, 3, 3), _if_then_else(True, 0, 0)), _if_then_else(le(2, 2), _if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(True, max_row_clue, -60))), _if_then_else(and_(le(2, zeros_diff_rows), le(ones_diff_cols, 2)), _if_then_else(or_(False, False), _if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(False, 22, 3)), _if_then_else(ge(max_row_clue, 4), _if_then_else(False, zeros_diff_rows, zeros_diff_cols), _if_then_else(False, 2, 2))), _if_then_else(ge(_if_then_else(True, -49, 2), _if_then_else(True, 0, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_cols, 2), _if_then_else(False, zeros_diff_cols, 2)), _if_then_else(and_(True, True), _if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, ones_diff_cols, 2))))), and_(True, True))
or_(le(max_col_clue, _if_then_else(le(-7, _if_then_else(True, _if_then_else(False, 4, max_row_clue), zeros_diff_rows)), _if_then_else(True, -82, _if_then_else(False, 1, _if_then_else(True, 1, _if_then_else(True, 4, 56)))), _if_then_else(True, compare_blocks_cols, _if_then_else(False, 1, ones_diff_cols)))), ge(0, 1))
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), compare_blocks_cols, _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(and_(or_(le(_if_then_else(True, 1, -74), _if_then_else(False, 4, zeros_diff_rows)), le(_if_then_else(True, ones_diff_cols, 1), _if_then_else(True, max_row_clue, zeros_diff_rows))), ge(_if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, max_col_clue), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(zeros_diff_rows, ones_diff_rows), _if_then_else(False, 3, compare_blocks_cols), _if_then_else(True, 1, compare_blocks_cols)))), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(ge(2, ones_diff_rows), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(and_(False, False), 2, _if_then_else(ge(1, compare_blocks_rows), _if_then_else(False, ones_diff_cols, 1), _if_then_else(False, ones_diff_cols, compare_blocks_cols))), _if_then_else(False, 3, 3)), le(_if_then_else(True, 0, -77), _if_then_else(False, 3, compare_blocks_rows)))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(False, True), zeros_diff_rows, _if_then_else(le(_if_then_else(True, -13, max_col_clue), 2), _if_then_else(False, _if_then_else(False, zeros_diff_cols, 36), zeros_diff_cols), _if_then_else(False, 1, compare_blocks_rows)))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
ge(_if_then_else(False, 4, ones_diff_cols), _if_then_else(False, compare_blocks_cols, compare_blocks_cols))
and_(ge(_if_then_else(ge(0, zeros_diff_cols), zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 1, max_col_clue)), or_(or_(False, True), and_(ge(max_row_clue, zeros_diff_cols), ge(max_col_clue, zeros_diff_cols))))
and_(False, le(_if_then_else(or_(le(_if_then_else(or_(ge(4, -69), or_(True, True)), _if_then_else(le(1, -61), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, 2)), _if_then_else(le(2, 4), _if_then_else(False, zeros_diff_cols, 1), _if_then_else(True, 4, zeros_diff_rows))), _if_then_else(le(_if_then_else(True, 1, 2), _if_then_else(False, zeros_diff_cols, 3)), _if_then_else(ge(zeros_diff_cols, max_col_clue), _if_then_else(True, 3, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, 3), _if_then_else(False, max_row_clue, max_row_clue), _if_then_else(False, -15, 3)))), or_(and_(ge(_if_then_else(True, compare_blocks_rows, 1), _if_then_else(True, max_row_clue, max_row_clue)), le(_if_then_else(False, max_row_clue, compare_blocks_rows), _if_then_else(True, 4, 2))), ge(_if_then_else(ge(3, 1), _if_then_else(True, ones_diff_cols, 3), _if_then_else(True, 1, zeros_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, max_col_clue, compare_blocks_cols))))), max_row_clue, 70), 53))
ge(zeros_diff_rows, _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_cols, 4), _if_then_else(False, max_row_clue, 3)))
and_(le(_if_then_else(True, max_col_clue, compare_blocks_cols), _if_then_else(and_(True, ge(_if_then_else(True, max_col_clue, compare_blocks_rows), 1)), _if_then_else(True, compare_blocks_rows, ones_diff_rows), _if_then_else(False, 3, 3))), or_(le(zeros_diff_cols, max_col_clue), False))
VAL TREES:
mul(mul(zeros_diff_cols, compare_blocks_cols), add(mul(zeros_diff_cols, add(compare_blocks_cols, zeros_diff_cols)), compare_blocks_cols))
mul(mul(add(add(ones_diff_rows, 13), compare_blocks_rows), add(compare_blocks_cols, mul(-28, ones_diff_rows))), add(ones_diff_cols, -82))
add(mul(zeros_diff_cols, add(zeros_diff_cols, compare_blocks_rows)), mul(compare_blocks_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_cols))
add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))
mul(add(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, -66))
COND TREES:
ge(_if_then_else(False, _if_then_else(ge(max_col_clue, compare_blocks_cols), _if_then_else(True, _if_then_else(False, 0, compare_blocks_cols), _if_then_else(and_(False, False), 1, 1)), _if_then_else(False, max_row_clue, _if_then_else(True, 0, zeros_diff_cols))), max_col_clue), _if_then_else(False, 2, ones_diff_rows))
and_(True, or_(or_(False, True), False))
and_(True, or_(le(max_col_clue, compare_blocks_cols), True))
ge(zeros_diff_rows, _if_then_else(and_(or_(True, False), ge(max_row_clue, max_col_clue)), max_col_clue, ones_diff_rows))
and_(le(_if_then_else(False, max_col_clue, compare_blocks_cols), max_row_clue), True)
VAL TREES:
mul(mul(zeros_diff_cols, compare_blocks_cols), add(mul(zeros_diff_cols, add(compare_blocks_cols, zeros_diff_cols)), compare_blocks_cols))
mul(mul(add(add(ones_diff_rows, 13), compare_blocks_rows), add(compare_blocks_cols, mul(-28, ones_diff_rows))), add(ones_diff_cols, -82))
add(mul(zeros_diff_cols, add(zeros_diff_cols, compare_blocks_rows)), mul(compare_blocks_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_cols))
add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))
mul(add(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, -66))
COND TREES:
or_(or_(or_(True, False), True), le(0, 0))
le(_if_then_else(ge(_if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(False, 1, max_col_clue)), compare_blocks_cols, compare_blocks_rows), _if_then_else(ge(max_col_clue, compare_blocks_rows), compare_blocks_cols, ones_diff_cols))
ge(_if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(le(_if_then_else(le(0, 3), 3, zeros_diff_cols), 2), compare_blocks_cols, compare_blocks_cols))
or_(False, False)
and_(or_(False, True), or_(le(_if_then_else(and_(False, False), _if_then_else(False, ones_diff_rows, 1), _if_then_else(False, 4, -75)), _if_then_else(True, ones_diff_cols, compare_blocks_rows)), False))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
or_(le(1, 4), True)
or_(le(max_col_clue, 2), or_(True, True))
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), _if_then_else(le(max_col_clue, 4), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, max_row_clue, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(False, _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(le(_if_then_else(False, compare_blocks_rows, compare_blocks_cols), zeros_diff_cols), max_col_clue, ones_diff_cols), _if_then_else(ge(compare_blocks_cols, zeros_diff_rows), 3, max_col_clue)), ge(4, compare_blocks_rows))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
or_(or_(or_(True, False), True), le(zeros_diff_rows, 0))
le(0, _if_then_else(and_(ge(_if_then_else(False, 4, max_row_clue), compare_blocks_cols), le(2, 3)), compare_blocks_cols, compare_blocks_cols))
ge(_if_then_else(le(_if_then_else(False, max_row_clue, 70), compare_blocks_rows), max_row_clue, ones_diff_cols), _if_then_else(False, compare_blocks_cols, compare_blocks_cols))
or_(False, and_(or_(True, and_(or_(False, le(_if_then_else(ge(zeros_diff_rows, max_col_clue), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(False, 2, max_col_clue)), _if_then_else(and_(True, True), _if_then_else(True, 1, 0), _if_then_else(False, 4, 3)))), ge(max_row_clue, 2))), ge(4, zeros_diff_cols)))
and_(or_(False, False), False)
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
and_(and_(False, True), ge(max_row_clue, _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, max_row_clue), _if_then_else(True, 4, 3))))
ge(_if_then_else(False, max_row_clue, compare_blocks_cols), _if_then_else(True, _if_then_else(True, compare_blocks_cols, _if_then_else(False, 3, 2)), compare_blocks_cols))
ge(_if_then_else(True, zeros_diff_cols, 2), _if_then_else(True, _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(False, max_col_clue, compare_blocks_rows)), _if_then_else(le(ones_diff_rows, max_row_clue), _if_then_else(True, max_col_clue, 4), _if_then_else(True, zeros_diff_rows, max_col_clue))))
ge(_if_then_else(True, compare_blocks_cols, compare_blocks_cols), _if_then_else(le(1, compare_blocks_rows), max_col_clue, zeros_diff_cols))
ge(_if_then_else(False, -81, 1), _if_then_else(le(compare_blocks_rows, compare_blocks_rows), max_col_clue, 3))
VAL TREES:
mul(add(mul(add(add(zeros_diff_rows, 85), add(compare_blocks_cols, compare_blocks_cols)), add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(mul(10, -86), mul(-78, compare_blocks_cols)))), mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(54, zeros_diff_rows))), mul(mul(mul(ones_diff_cols, zeros_diff_rows), mul(-49, compare_blocks_rows)), mul(add(compare_blocks_rows, -24), add(ones_diff_rows, compare_blocks_cols)))))
mul(mul(ones_diff_cols, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, zeros_diff_rows), mul(mul(compare_blocks_rows, zeros_diff_cols), ones_diff_cols))
mul(add(add(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(add(ones_diff_rows, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_rows)))
mul(add(mul(mul(zeros_diff_rows, 88), mul(zeros_diff_cols, zeros_diff_cols)), add(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_cols))), mul(mul(add(ones_diff_cols, zeros_diff_rows), mul(1, ones_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, compare_blocks_cols))))
add(mul(mul(ones_diff_cols, -11), add(-15, 48)), mul(add(90, ones_diff_cols), add(zeros_diff_rows, 22)))
COND TREES:
or_(and_(and_(True, False), and_(False, True)), and_(le(zeros_diff_rows, 0), and_(True, True)))
le(_if_then_else(ge(zeros_diff_cols, ones_diff_rows), _if_then_else(True, 3, max_row_clue), _if_then_else(True, zeros_diff_rows, max_row_clue)), zeros_diff_rows)
and_(and_(and_(False, True), False), or_(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_rows), -37), ge(_if_then_else(False, 0, 1), 2)))
or_(ge(_if_then_else(False, _if_then_else(False, zeros_diff_cols, 2), 4), _if_then_else(True, ones_diff_rows, max_col_clue)), and_(or_(False, True), ge(4, 2)))
and_(True, False)
VAL TREES:
add(mul(add(mul(zeros_diff_rows, compare_blocks_rows), zeros_diff_rows), ones_diff_cols), mul(zeros_diff_rows, -35))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_rows))
add(mul(ones_diff_rows, ones_diff_cols), mul(-33, compare_blocks_rows))
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols))
add(add(compare_blocks_cols, zeros_diff_rows), add(42, zeros_diff_cols))
add(add(7, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows))
COND TREES:
or_(le(max_col_clue, _if_then_else(and_(True, False), _if_then_else(True, 9, zeros_diff_rows), _if_then_else(True, 4, 2))), True)
or_(le(max_col_clue, 2), ge(0, zeros_diff_cols))
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(_if_then_else(ge(_if_then_else(le(max_col_clue, 39), _if_then_else(True, 4, ones_diff_cols), _if_then_else(False, ones_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_rows, 0), _if_then_else(False, zeros_diff_cols, 4), _if_then_else(True, compare_blocks_cols, ones_diff_cols))), _if_then_else(and_(or_(True, False), le(2, 2)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, ones_diff_rows, 2), _if_then_else(False, 3, compare_blocks_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(True, compare_blocks_rows, 2))), _if_then_else(and_(and_(True, False), and_(False, False)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(True, zeros_diff_rows, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, 3), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 1, max_row_clue)))), _if_then_else(or_(and_(or_(False, False), or_(True, False)), ge(_if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 3, zeros_diff_cols))), _if_then_else(and_(and_(True, False), ge(max_row_clue, max_row_clue)), _if_then_else(ge(0, 2), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(False, max_row_clue, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, 0), _if_then_else(True, 1, 4))), _if_then_else(and_(le(0, 4), le(3, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)), _if_then_else(and_(False, True), _if_then_else(False, ones_diff_cols, 1), _if_then_else(False, 2, compare_blocks_rows)))))), _if_then_else(le(max_col_clue, 4), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, max_row_clue, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(False, _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(ge(compare_blocks_cols, zeros_diff_rows), 3, max_col_clue)), ge(4, compare_blocks_rows))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(le(1, max_col_clue), compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, le(_if_then_else(ge(max_row_clue, 0), _if_then_else(True, ones_diff_rows, max_col_clue), _if_then_else(False, max_row_clue, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, 2, compare_blocks_rows)))), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(or_(False, True), zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
or_(or_(or_(True, False), True), le(_if_then_else(and_(ge(3, 1), and_(True, True)), compare_blocks_rows, _if_then_else(False, max_row_clue, max_row_clue)), 0))
le(_if_then_else(ge(_if_then_else(True, max_col_clue, ones_diff_cols), _if_then_else(ge(_if_then_else(True, ones_diff_cols, _if_then_else(True, 0, max_col_clue)), 1), max_col_clue, _if_then_else(False, 4, _if_then_else(False, _if_then_else(False, zeros_diff_rows, -12), 3)))), compare_blocks_cols, compare_blocks_rows), _if_then_else(le(max_col_clue, _if_then_else(False, max_col_clue, 2)), compare_blocks_cols, ones_diff_cols))
ge(_if_then_else(True, max_row_clue, ones_diff_cols), _if_then_else(ge(_if_then_else(True, 3, zeros_diff_rows), _if_then_else(True, 1, 0)), compare_blocks_cols, zeros_diff_rows))
and_(or_(True, or_(le(_if_then_else(True, _if_then_else(False, zeros_diff_cols, ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)), _if_then_else(False, 0, _if_then_else(False, max_row_clue, compare_blocks_rows))), le(compare_blocks_cols, 80))), le(zeros_diff_rows, 66))
and_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), max_row_clue), _if_then_else(ge(ones_diff_rows, -65), _if_then_else(True, _if_then_else(False, -64, ones_diff_rows), _if_then_else(True, 0, zeros_diff_rows)), _if_then_else(False, 2, max_col_clue))), or_(True, True))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
or_(le(max_col_clue, zeros_diff_rows), and_(True, True))
or_(le(max_col_clue, _if_then_else(False, max_col_clue, 1)), ge(0, 1))
ge(_if_then_else(le(_if_then_else(False, max_row_clue, 70), 53), compare_blocks_cols, _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(ge(2, ones_diff_rows), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(False, 2, _if_then_else(ge(1, compare_blocks_rows), _if_then_else(False, ones_diff_cols, 1), _if_then_else(False, ones_diff_cols, compare_blocks_cols))), _if_then_else(False, 3, 3)), le(_if_then_else(True, 0, -77), _if_then_else(False, 3, compare_blocks_rows)))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(False, True), zeros_diff_rows, _if_then_else(True, compare_blocks_cols, max_row_clue))), le(max_col_clue, _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
ge(_if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 2, ones_diff_rows))
and_(ge(_if_then_else(ge(0, zeros_diff_cols), zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 2, max_col_clue)), or_(or_(False, True), and_(False, False)))
and_(True, or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)))
ge(zeros_diff_rows, _if_then_else(False, _if_then_else(and_(False, and_(False, False)), 2, _if_then_else(le(_if_then_else(True, 0, -77), _if_then_else(False, 3, compare_blocks_rows)), compare_blocks_rows, 4)), ones_diff_rows))
and_(le(_if_then_else(False, _if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), compare_blocks_cols), max_row_clue), or_(le(zeros_diff_cols, max_col_clue), False))
VAL TREES:
mul(mul(zeros_diff_cols, compare_blocks_cols), add(mul(zeros_diff_cols, add(compare_blocks_cols, zeros_diff_cols)), compare_blocks_cols))
mul(mul(add(add(ones_diff_rows, 13), compare_blocks_rows), add(compare_blocks_cols, mul(-28, ones_diff_rows))), add(ones_diff_cols, -82))
add(mul(zeros_diff_cols, add(zeros_diff_cols, compare_blocks_rows)), mul(compare_blocks_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_cols))
add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))
mul(add(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, -66))
COND TREES:
or_(or_(or_(ge(1, max_row_clue), or_(or_(or_(ge(ones_diff_cols, _if_then_else(le(-100, ones_diff_cols), compare_blocks_rows, 1)), ge(2, _if_then_else(False, 3, 3))), False), False)), True), le(3, 0))
le(_if_then_else(or_(ge(_if_then_else(False, compare_blocks_rows, 3), 70), ge(3, 1)), compare_blocks_cols, compare_blocks_rows), _if_then_else(ge(max_col_clue, compare_blocks_rows), compare_blocks_cols, ones_diff_cols))
ge(_if_then_else(and_(or_(or_(True, False), or_(True, True)), or_(or_(False, True), ge(compare_blocks_rows, zeros_diff_rows))), _if_then_else(or_(and_(False, False), and_(True, True)), _if_then_else(le(compare_blocks_rows, 2), _if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(True, 0, 3)), _if_then_else(or_(True, False), _if_then_else(True, 3, 2), _if_then_else(True, ones_diff_cols, zeros_diff_cols))), _if_then_else(and_(or_(False, False), or_(False, False)), _if_then_else(le(-99, compare_blocks_rows), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, max_col_clue)), _if_then_else(ge(0, compare_blocks_rows), _if_then_else(True, 3, 0), _if_then_else(False, 4, 4)))), compare_blocks_rows)
or_(le(zeros_diff_cols, -26), le(1, _if_then_else(ge(max_col_clue, 4), zeros_diff_cols, _if_then_else(and_(False, False), _if_then_else(False, max_row_clue, max_row_clue), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)))))
and_(or_(False, ge(_if_then_else(or_(or_(ge(max_col_clue, max_row_clue), or_(False, False)), and_(le(compare_blocks_cols, 0), le(compare_blocks_rows, ones_diff_cols))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, 2), _if_then_else(False, 2, 0)), _if_then_else(le(1, max_col_clue), _if_then_else(True, 43, 4), _if_then_else(False, zeros_diff_cols, compare_blocks_cols)), _if_then_else(ge(4, max_row_clue), _if_then_else(True, zeros_diff_cols, 1), _if_then_else(False, 0, max_col_clue))), _if_then_else(or_(ge(1, 1), or_(True, True)), _if_then_else(or_(False, False), _if_then_else(True, -70, compare_blocks_rows), _if_then_else(True, max_col_clue, 0)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(True, max_row_clue, 4)))), _if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, zeros_diff_rows)), _if_then_else(ge(ones_diff_rows, ones_diff_cols), _if_then_else(False, max_row_clue, 2), _if_then_else(True, 1, 4))), _if_then_else(and_(and_(True, True), and_(True, False)), _if_then_else(and_(True, False), _if_then_else(False, 1, 1), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols))), _if_then_else(le(_if_then_else(True, 0, zeros_diff_rows), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(ge(max_row_clue, 3), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(False, ones_diff_rows, max_row_clue)), _if_then_else(le(4, -89), _if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(False, ones_diff_rows, zeros_diff_rows)))))), or_(and_(True, True), False))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, add(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols))))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(mul(add(mul(mul(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(27, compare_blocks_cols), mul(zeros_diff_cols, compare_blocks_cols))), mul(mul(add(compare_blocks_rows, 52), mul(compare_blocks_rows, ones_diff_rows)), add(add(zeros_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, 63))), mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_rows), mul(zeros_diff_cols, zeros_diff_rows))))))))
add(add(zeros_diff_rows, mul(mul(mul(add(21, ones_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_rows))), mul(mul(mul(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols))))), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(add(add(mul(mul(mul(-62, -8), mul(zeros_diff_rows, compare_blocks_cols)), add(add(47, zeros_diff_cols), mul(compare_blocks_cols, ones_diff_cols))), add(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(mul(compare_blocks_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)))), mul(add(add(add(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_rows)), add(add(-10, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows))), mul(mul(add(zeros_diff_cols, zeros_diff_cols), add(zeros_diff_cols, zeros_diff_cols)), add(mul(compare_blocks_rows, -81), add(zeros_diff_rows, compare_blocks_rows))))), compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), add(add(add(add(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_cols))), mul(mul(mul(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_rows)), add(add(compare_blocks_rows, ones_diff_rows), mul(42, compare_blocks_cols))))), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
or_(and_(and_(False, False), and_(False, True)), and_(False, le(ones_diff_cols, compare_blocks_cols)))
le(_if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(and_(False, False), 1, zeros_diff_cols))
and_(ge(1, 2), and_(True, True))
le(_if_then_else(True, 3, _if_then_else(and_(True, le(_if_then_else(True, 0, -77), _if_then_else(or_(le(_if_then_else(False, 3, compare_blocks_cols), zeros_diff_cols), ge(max_col_clue, 4)), 3, compare_blocks_rows))), _if_then_else(False, zeros_diff_cols, max_row_clue), _if_then_else(True, 4, 3))), _if_then_else(True, ones_diff_cols, zeros_diff_rows))
and_(le(max_col_clue, compare_blocks_cols), False)
VAL TREES:
add(mul(add(mul(zeros_diff_rows, compare_blocks_rows), zeros_diff_rows), ones_diff_cols), mul(zeros_diff_rows, -35))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(mul(mul(ones_diff_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), zeros_diff_rows))
add(add(add(-63, zeros_diff_cols), mul(49, 62)), mul(-33, compare_blocks_rows))
add(add(zeros_diff_rows, zeros_diff_cols), add(mul(add(compare_blocks_cols, 2), add(zeros_diff_cols, ones_diff_cols)), ones_diff_cols))
add(add(compare_blocks_cols, zeros_diff_rows), add(42, add(add(add(add(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, 24)), mul(mul(compare_blocks_cols, -41), add(compare_blocks_cols, compare_blocks_rows))), add(add(add(zeros_diff_cols, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), add(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols))))))
add(add(7, zeros_diff_rows), mul(mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)), ones_diff_rows))
COND TREES:
or_(le(max_col_clue, zeros_diff_rows), le(compare_blocks_rows, _if_then_else(and_(and_(True, False), and_(and_(and_(True, False), and_(False, True)), True)), 1, max_col_clue)))
or_(le(max_col_clue, 2), ge(_if_then_else(True, max_col_clue, compare_blocks_rows), zeros_diff_cols))
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), _if_then_else(le(max_col_clue, 4), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, max_row_clue, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(ge(2, ones_diff_rows), _if_then_else(ge(1, 2), max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, 3, max_col_clue)), le(_if_then_else(True, 0, -77), _if_then_else(False, 3, compare_blocks_rows)))
or_(ge(_if_then_else(and_(True, False), max_col_clue, _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, mul(mul(add(zeros_diff_rows, ones_diff_rows), add(-73, add(compare_blocks_cols, ones_diff_rows))), mul(zeros_diff_cols, mul(84, compare_blocks_rows)))), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(mul(add(add(mul(zeros_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_rows)), mul(mul(zeros_diff_cols, compare_blocks_cols), add(-6, zeros_diff_rows))), mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_rows, ones_diff_cols), add(ones_diff_rows, compare_blocks_cols)))), add(mul(mul(add(ones_diff_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_rows)), add(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_cols, ones_diff_cols))), add(add(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, -18)), mul(mul(ones_diff_cols, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols))))))
mul(add(add(mul(add(ones_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(62, zeros_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, add(mul(mul(add(mul(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_rows, 5)), add(mul(compare_blocks_cols, zeros_diff_rows), mul(compare_blocks_rows, ones_diff_rows))), add(mul(mul(ones_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(zeros_diff_rows, compare_blocks_rows), add(ones_diff_rows, ones_diff_rows)))), add(add(add(add(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_rows)), add(mul(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), mul(mul(mul(ones_diff_cols, zeros_diff_cols), mul(51, ones_diff_cols)), add(mul(93, compare_blocks_rows), mul(-82, ones_diff_rows)))))))
mul(mul(ones_diff_cols, -5), mul(add(mul(zeros_diff_rows, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_rows))))
add(mul(compare_blocks_cols, -1), mul(compare_blocks_rows, zeros_diff_rows))
COND TREES:
ge(zeros_diff_cols, _if_then_else(False, _if_then_else(or_(False, True), _if_then_else(False, 3, -88), _if_then_else(False, 2, compare_blocks_rows)), 1))
ge(_if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(and_(ge(_if_then_else(True, 17, 4), _if_then_else(False, ones_diff_rows, _if_then_else(False, _if_then_else(False, max_col_clue, 1), _if_then_else(False, 3, 4)))), and_(le(_if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows)), and_(ge(_if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(True, max_col_clue, 2)), and_(False, True)))), zeros_diff_cols, zeros_diff_rows))
or_(ge(_if_then_else(True, compare_blocks_cols, _if_then_else(False, compare_blocks_cols, ones_diff_cols)), _if_then_else(and_(True, True), _if_then_else(True, 3, 3), _if_then_else(True, zeros_diff_rows, ones_diff_rows))), True)
le(_if_then_else(or_(le(_if_then_else(and_(ge(_if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(False, 0, max_col_clue)), and_(ge(0, compare_blocks_cols), True)), compare_blocks_rows, compare_blocks_cols), zeros_diff_cols), ge(max_col_clue, 4)), ones_diff_cols, ones_diff_rows), _if_then_else(or_(le(zeros_diff_rows, compare_blocks_cols), and_(True, True)), zeros_diff_rows, 2))
le(_if_then_else(False, _if_then_else(or_(True, False), _if_then_else(False, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, 3)), max_row_clue), _if_then_else(False, ones_diff_rows, _if_then_else(True, max_row_clue, 2)))
VAL TREES:
add(mul(ones_diff_rows, zeros_diff_rows), add(-49, zeros_diff_rows))
add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, -94))
mul(mul(zeros_diff_rows, ones_diff_cols), mul(mul(add(61, ones_diff_cols), zeros_diff_cols), ones_diff_rows))
add(mul(zeros_diff_cols, mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), 67))
mul(add(zeros_diff_rows, -21), add(zeros_diff_rows, zeros_diff_cols))
add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols))
COND TREES:
ge(_if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(le(ones_diff_cols, zeros_diff_rows), 2, ones_diff_rows))
and_(False, or_(or_(False, True), and_(False, False)))
and_(True, le(zeros_diff_cols, 53))
ge(zeros_diff_rows, _if_then_else(False, max_col_clue, ones_diff_rows))
and_(le(_if_then_else(True, max_col_clue, compare_blocks_cols), max_row_clue), or_(False, False))
VAL TREES:
mul(mul(zeros_diff_cols, compare_blocks_cols), add(mul(zeros_diff_cols, add(compare_blocks_cols, zeros_diff_cols)), compare_blocks_cols))
mul(mul(add(add(ones_diff_rows, 13), compare_blocks_rows), add(compare_blocks_cols, mul(-28, ones_diff_rows))), add(ones_diff_cols, -82))
add(mul(zeros_diff_cols, add(zeros_diff_cols, compare_blocks_rows)), mul(compare_blocks_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_cols))
add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))
mul(add(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, -66))
COND TREES:
or_(le(3, _if_then_else(True, max_col_clue, 65)), le(_if_then_else(False, 2, _if_then_else(False, compare_blocks_rows, _if_then_else(False, 0, 4))), compare_blocks_cols))
le(_if_then_else(and_(True, True), compare_blocks_rows, max_row_clue), _if_then_else(ge(_if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, 68)), compare_blocks_cols, zeros_diff_cols))
and_(True, or_(False, False))
ge(compare_blocks_cols, _if_then_else(False, zeros_diff_rows, ones_diff_cols))
or_(or_(or_(True, False), le(ones_diff_cols, max_col_clue)), ge(ones_diff_rows, _if_then_else(False, _if_then_else(False, ones_diff_cols, _if_then_else(False, _if_then_else(True, compare_blocks_rows, zeros_diff_cols), ones_diff_cols)), 4)))
VAL TREES:
mul(mul(add(mul(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), zeros_diff_cols), mul(ones_diff_cols, zeros_diff_cols))
add(mul(ones_diff_rows, add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, zeros_diff_rows))), add(compare_blocks_cols, compare_blocks_rows))
add(add(mul(mul(add(compare_blocks_cols, ones_diff_cols), mul(-85, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_rows))), mul(mul(add(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)), mul(mul(compare_blocks_rows, 44), add(compare_blocks_rows, ones_diff_cols))), mul(add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, zeros_diff_rows), add(-49, ones_diff_cols)))))
add(add(ones_diff_rows, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows))
mul(add(mul(ones_diff_rows, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_cols)), add(75, mul(mul(zeros_diff_cols, zeros_diff_cols), add(zeros_diff_rows, ones_diff_cols))))
mul(mul(zeros_diff_cols, mul(add(mul(mul(zeros_diff_cols, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(72, zeros_diff_rows))), add(add(mul(ones_diff_cols, 29), add(ones_diff_cols, ones_diff_rows)), add(mul(compare_blocks_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_rows))))), mul(compare_blocks_cols, ones_diff_cols))
COND TREES:
or_(True, ge(_if_then_else(and_(le(_if_then_else(and_(False, True), _if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, -74, 0)), _if_then_else(and_(True, True), _if_then_else(False, 0, 4), _if_then_else(True, zeros_diff_rows, 2))), le(_if_then_else(le(zeros_diff_rows, 3), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(and_(False, True), _if_then_else(False, 1, 4), _if_then_else(True, ones_diff_rows, ones_diff_cols)))), _if_then_else(or_(le(_if_then_else(True, 0, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), le(_if_then_else(True, max_col_clue, compare_blocks_cols), _if_then_else(False, max_row_clue, 0))), _if_then_else(or_(ge(compare_blocks_cols, zeros_diff_cols), ge(4, compare_blocks_rows)), _if_then_else(ge(compare_blocks_rows, ones_diff_rows), _if_then_else(True, 1, ones_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(or_(False, True), _if_then_else(True, 0, zeros_diff_cols), _if_then_else(False, 2, 63))), _if_then_else(and_(or_(False, False), and_(True, False)), _if_then_else(ge(compare_blocks_cols, ones_diff_cols), _if_then_else(True, 1, 0), _if_then_else(True, max_row_clue, zeros_diff_rows)), _if_then_else(ge(4, ones_diff_rows), _if_then_else(True, max_row_clue, 2), _if_then_else(True, 1, zeros_diff_rows)))), _if_then_else(ge(_if_then_else(or_(False, False), _if_then_else(True, max_col_clue, 2), _if_then_else(False, ones_diff_cols, 1)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, 1, max_col_clue))), _if_then_else(or_(and_(True, True), le(zeros_diff_cols, 78)), _if_then_else(ge(4, 4), _if_then_else(True, ones_diff_cols, 3), _if_then_else(False, zeros_diff_cols, 3)), _if_then_else(and_(False, True), _if_then_else(True, 1, ones_diff_cols), _if_then_else(True, ones_diff_rows, 1))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, max_col_clue, max_col_clue)), _if_then_else(ge(zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 2, 2), _if_then_else(True, compare_blocks_rows, 3)), _if_then_else(and_(False, False), _if_then_else(False, 50, 4), _if_then_else(True, compare_blocks_rows, zeros_diff_rows))))), compare_blocks_rows))
le(_if_then_else(ge(zeros_diff_cols, _if_then_else(or_(and_(False, False), ge(ones_diff_cols, max_col_clue)), _if_then_else(ge(3, ones_diff_cols), _if_then_else(True, 1, max_row_clue), _if_then_else(True, max_col_clue, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(True, 3, 1), _if_then_else(True, zeros_diff_rows, 0)))), compare_blocks_rows, max_row_clue), _if_then_else(False, max_row_clue, 1))
and_(True, ge(_if_then_else(and_(le(_if_then_else(False, zeros_diff_cols, 1), _if_then_else(False, compare_blocks_cols, 2)), False), zeros_diff_cols, _if_then_else(True, _if_then_else(False, 1, max_col_clue), max_row_clue)), _if_then_else(False, 0, 0)))
ge(4, _if_then_else(False, max_col_clue, zeros_diff_rows))
or_(ge(0, -74), ge(max_row_clue, _if_then_else(False, _if_then_else(or_(True, False), ones_diff_cols, _if_then_else(False, compare_blocks_cols, ones_diff_cols)), 4)))
VAL TREES:
mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_cols))
add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_rows))
add(add(mul(mul(add(compare_blocks_cols, ones_diff_cols), mul(-85, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_rows))), mul(mul(add(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)), mul(mul(compare_blocks_rows, 44), add(compare_blocks_rows, ones_diff_cols))), mul(add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, zeros_diff_rows), add(-49, ones_diff_cols)))))
add(add(ones_diff_rows, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows))
mul(add(mul(ones_diff_rows, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_cols)), add(75, zeros_diff_cols))
mul(mul(zeros_diff_cols, -79), mul(compare_blocks_cols, ones_diff_cols))
COND TREES:
or_(or_(True, ge(max_col_clue, 2)), False)
and_(le(4, 4), False)
or_(or_(True, False), le(_if_then_else(and_(or_(True, True), False), max_col_clue, _if_then_else(True, ones_diff_rows, ones_diff_cols)), _if_then_else(False, -24, -58)))
and_(le(_if_then_else(False, 4, _if_then_else(False, ones_diff_rows, 3)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(False, 4, ones_diff_cols), _if_then_else(True, 1, 1))), and_(or_(False, or_(False, True)), or_(and_(True, True), and_(True, False))))
le(_if_then_else(or_(False, False), _if_then_else(True, 0, max_col_clue), _if_then_else(True, 3, 4)), _if_then_else(and_(True, and_(True, False)), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(True, 53, zeros_diff_rows)))
VAL TREES:
mul(mul(add(mul(-51, compare_blocks_cols), add(ones_diff_cols, 58)), mul(mul(zeros_diff_rows, zeros_diff_rows), add(compare_blocks_cols, 19))), mul(add(add(69, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(-83, 36), add(-91, zeros_diff_cols))))
mul(mul(mul(-86, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)))
add(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols))
mul(add(mul(ones_diff_cols, -1), ones_diff_cols), add(add(compare_blocks_cols, ones_diff_rows), zeros_diff_cols))
add(mul(compare_blocks_cols, compare_blocks_cols), add(mul(ones_diff_rows, add(ones_diff_rows, zeros_diff_cols)), zeros_diff_cols))
add(mul(mul(zeros_diff_cols, zeros_diff_cols), compare_blocks_rows), mul(ones_diff_rows, add(zeros_diff_rows, zeros_diff_rows)))
COND TREES:
or_(and_(and_(True, False), and_(False, True)), and_(le(-12, _if_then_else(and_(and_(ge(ones_diff_cols, zeros_diff_rows), ge(max_col_clue, compare_blocks_rows)), False), max_row_clue, 1)), False))
le(compare_blocks_cols, _if_then_else(False, 1, max_col_clue))
and_(ge(1, 3), and_(True, le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), compare_blocks_cols)))
le(_if_then_else(ge(_if_then_else(ge(1, 3), compare_blocks_rows, 0), 1), 3, 1), _if_then_else(False, ones_diff_cols, zeros_diff_rows))
and_(le(zeros_diff_rows, max_col_clue), False)
VAL TREES:
add(mul(add(mul(zeros_diff_rows, compare_blocks_rows), zeros_diff_rows), ones_diff_cols), mul(zeros_diff_rows, -35))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_rows))
add(mul(ones_diff_rows, ones_diff_cols), mul(-33, compare_blocks_rows))
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols))
add(add(compare_blocks_cols, zeros_diff_rows), add(42, zeros_diff_cols))
add(add(7, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows))
COND TREES:
ge(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(or_(and_(False, True), ge(ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(3, 1), _if_then_else(True, 3, zeros_diff_rows), _if_then_else(True, 3, -20)), _if_then_else(le(2, 3), _if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(False, ones_diff_rows, ones_diff_cols))))
and_(ge(_if_then_else(True, zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), or_(or_(or_(False, False), True), or_(ge(_if_then_else(or_(False, True), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(False, 4, max_row_clue)), _if_then_else(ge(4, max_col_clue), _if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, 2, 1))), or_(or_(and_(True, True), and_(True, False)), le(_if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_cols))))))
and_(ge(_if_then_else(False, 1, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue)), le(_if_then_else(le(_if_then_else(False, max_col_clue, compare_blocks_cols), 1), max_row_clue, 70), 53))
ge(zeros_diff_rows, _if_then_else(False, _if_then_else(and_(False, False), 2, _if_then_else(False, compare_blocks_rows, 4)), 0))
and_(le(_if_then_else(False, max_col_clue, compare_blocks_cols), max_row_clue), or_(True, and_(le(3, 1), le(-75, compare_blocks_rows))))
VAL TREES:
mul(mul(zeros_diff_cols, compare_blocks_cols), add(mul(zeros_diff_cols, add(compare_blocks_cols, zeros_diff_cols)), compare_blocks_cols))
mul(mul(add(add(ones_diff_rows, 13), compare_blocks_rows), add(compare_blocks_cols, mul(-28, ones_diff_rows))), add(ones_diff_cols, -82))
add(mul(zeros_diff_cols, add(zeros_diff_cols, compare_blocks_rows)), mul(compare_blocks_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_cols))
add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))
mul(add(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, -66))
COND TREES:
or_(or_(or_(True, False), True), le(_if_then_else(False, 2, _if_then_else(False, max_row_clue, max_row_clue)), 0))
le(_if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(or_(True, True), compare_blocks_cols, ones_diff_cols))
ge(_if_then_else(False, max_row_clue, _if_then_else(ge(0, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 4, ones_diff_rows))), _if_then_else(or_(False, True), compare_blocks_cols, zeros_diff_rows))
or_(and_(True, or_(True, False)), False)
and_(False, or_(True, False))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
and_(ge(_if_then_else(and_(False, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(True, 4, 2)), _if_then_else(le(ones_diff_cols, ones_diff_rows), _if_then_else(True, zeros_diff_rows, 4), _if_then_else(True, ones_diff_cols, max_row_clue))), or_(or_(le(compare_blocks_rows, max_col_clue), ge(20, 0)), ge(_if_then_else(False, 0, 1), _if_then_else(False, zeros_diff_cols, max_col_clue))))
and_(False, le(max_col_clue, compare_blocks_rows))
or_(and_(ge(ones_diff_cols, _if_then_else(False, compare_blocks_rows, 0)), or_(ge(_if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), and_(and_(False, False), ge(zeros_diff_cols, max_col_clue)))), ge(_if_then_else(or_(and_(True, False), and_(False, True)), _if_then_else(ge(4, max_row_clue), _if_then_else(True, 0, -14), _if_then_else(False, max_row_clue, 4)), _if_then_else(le(-27, ones_diff_rows), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(True, 2, max_col_clue))), _if_then_else(and_(le(4, 1), or_(and_(ge(_if_then_else(and_(False, False), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(False, 2, 4)), _if_then_else(or_(True, True), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, 3, -9))), or_(or_(or_(False, True), le(2, 3)), and_(and_(True, True), and_(False, False)))), and_(and_(or_(le(4, 0), or_(False, True)), le(_if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, 2, ones_diff_cols))), le(_if_then_else(or_(False, True), _if_then_else(True, zeros_diff_cols, -24), _if_then_else(True, ones_diff_cols, ones_diff_cols)), _if_then_else(ge(1, -34), _if_then_else(True, max_row_clue, 25), _if_then_else(False, ones_diff_rows, max_col_clue)))))), _if_then_else(or_(True, True), _if_then_else(False, 2, 4), _if_then_else(True, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, 2), _if_then_else(False, 0, 3)))))
or_(False, le(3, 4))
or_(or_(True, True), True)
VAL TREES:
add(mul(compare_blocks_cols, zeros_diff_cols), mul(mul(83, ones_diff_cols), compare_blocks_cols))
mul(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows))
add(add(add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(38, ones_diff_rows))), add(mul(add(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), mul(mul(78, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_rows))))
add(add(mul(ones_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(add(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_cols, 17), mul(ones_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, ones_diff_rows), add(7, zeros_diff_cols)))
add(mul(mul(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(83, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows)))
COND TREES:
ge(max_row_clue, _if_then_else(or_(True, False), compare_blocks_rows, max_row_clue))
ge(_if_then_else(and_(and_(False, False), False), compare_blocks_rows, max_col_clue), _if_then_else(False, zeros_diff_cols, compare_blocks_cols))
or_(or_(False, False), le(_if_then_else(False, max_col_clue, 0), _if_then_else(False, ones_diff_rows, ones_diff_rows)))
le(_if_then_else(or_(True, True), ones_diff_cols, _if_then_else(True, _if_then_else(True, _if_then_else(False, 1, ones_diff_rows), ones_diff_rows), 3)), _if_then_else(False, zeros_diff_rows, 2))
le(3, _if_then_else(ge(_if_then_else(True, ones_diff_rows, ones_diff_rows), _if_then_else(False, -62, 2)), ones_diff_rows, -67))
VAL TREES:
add(mul(ones_diff_rows, zeros_diff_rows), add(-49, zeros_diff_rows))
add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, -94))
mul(mul(zeros_diff_rows, ones_diff_cols), mul(mul(add(61, ones_diff_cols), zeros_diff_cols), ones_diff_rows))
add(mul(zeros_diff_cols, mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), 67))
mul(add(zeros_diff_rows, -21), add(zeros_diff_rows, zeros_diff_cols))
add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols))
COND TREES:
and_(le(4, zeros_diff_rows), le(max_row_clue, max_row_clue))
ge(24, _if_then_else(True, ones_diff_rows, max_row_clue))
or_(le(_if_then_else(ge(ones_diff_rows, -85), _if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, -14), _if_then_else(True, 0, ones_diff_cols))), or_(and_(or_(False, True), False), and_(or_(False, False), and_(True, True))))
or_(and_(True, ge(3, zeros_diff_rows)), ge(_if_then_else(False, ones_diff_cols, 0), ones_diff_rows))
or_(and_(and_(False, True), True), or_(False, True))
VAL TREES:
add(mul(ones_diff_cols, 52), mul(compare_blocks_cols, zeros_diff_rows))
add(add(add(add(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols))), add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols))))
add(mul(zeros_diff_cols, 30), add(zeros_diff_rows, ones_diff_rows))
add(mul(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols))
add(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows))
add(mul(add(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_rows)), mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, -54))), add(add(mul(zeros_diff_rows, zeros_diff_rows), mul(20, ones_diff_cols)), mul(mul(compare_blocks_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))), mul(add(add(mul(42, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, ones_diff_cols))), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows)))))
COND TREES:
ge(_if_then_else(or_(ge(1, max_row_clue), or_(True, False)), 79, -96), _if_then_else(True, max_row_clue, max_col_clue))
ge(_if_then_else(and_(or_(or_(False, False), or_(False, True)), or_(ge(ones_diff_cols, 3), le(compare_blocks_rows, 1))), _if_then_else(and_(le(2, 0), or_(False, False)), _if_then_else(ge(78, ones_diff_rows), _if_then_else(False, zeros_diff_cols, 1), _if_then_else(False, 3, 2)), _if_then_else(and_(True, False), _if_then_else(False, 4, zeros_diff_cols), _if_then_else(False, max_row_clue, 2))), _if_then_else(le(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, max_col_clue, 4)), _if_then_else(le(zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 4, 3), _if_then_else(False, ones_diff_rows, 14)), _if_then_else(and_(True, False), _if_then_else(True, max_col_clue, ones_diff_cols), _if_then_else(False, ones_diff_rows, ones_diff_cols)))), _if_then_else(le(_if_then_else(and_(True, False), _if_then_else(False, 3, 1), _if_then_else(True, 67, 24)), _if_then_else(ge(compare_blocks_cols, compare_blocks_rows), _if_then_else(False, zeros_diff_cols, -92), _if_then_else(False, 3, 3))), _if_then_else(or_(or_(True, False), or_(False, True)), _if_then_else(ge(ones_diff_rows, 2), _if_then_else(False, zeros_diff_cols, 2), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)), _if_then_else(le(3, ones_diff_rows), _if_then_else(False, 2, zeros_diff_rows), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), _if_then_else(or_(ge(max_col_clue, 2), and_(False, True)), _if_then_else(and_(False, True), _if_then_else(False, 0, compare_blocks_rows), _if_then_else(True, 0, 4)), _if_then_else(or_(True, False), _if_then_else(False, ones_diff_cols, ones_diff_cols), _if_then_else(True, max_col_clue, compare_blocks_rows)))))
or_(and_(ge(_if_then_else(ge(0, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 4, ones_diff_rows)), _if_then_else(False, compare_blocks_rows, 0)), and_(and_(and_(True, True), and_(False, True)), or_(ge(ones_diff_cols, ones_diff_cols), and_(False, True)))), ge(_if_then_else(or_(and_(True, False), and_(False, True)), _if_then_else(ge(4, max_row_clue), _if_then_else(True, 0, -14), _if_then_else(False, max_row_clue, 4)), _if_then_else(le(-27, ones_diff_rows), _if_then_else(True, max_row_clue, _if_then_else(ge(_if_then_else(False, 2, 63), _if_then_else(True, ones_diff_rows, 3)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, ones_diff_rows, max_row_clue)))), _if_then_else(True, 2, max_col_clue))), _if_then_else(True, _if_then_else(or_(True, True), _if_then_else(False, 2, 4), _if_then_else(True, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, 2), _if_then_else(False, 0, 3)))))
or_(le(1, _if_then_else(False, zeros_diff_cols, 2)), le(2, compare_blocks_rows))
or_(False, or_(le(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, -46, 73)), ge(_if_then_else(True, 1, max_row_clue), _if_then_else(True, max_row_clue, 2))))
VAL TREES:
add(mul(compare_blocks_cols, zeros_diff_cols), mul(mul(83, ones_diff_cols), compare_blocks_cols))
mul(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows))
add(add(add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(38, ones_diff_rows))), add(mul(add(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), mul(mul(78, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_rows))))
add(add(mul(ones_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(add(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_cols, 17), mul(ones_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, ones_diff_rows), add(7, zeros_diff_cols)))
add(mul(mul(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(83, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows)))
COND TREES:
or_(or_(or_(True, False), True), True)
le(_if_then_else(True, _if_then_else(False, zeros_diff_cols, compare_blocks_cols), ones_diff_rows), _if_then_else(or_(True, True), compare_blocks_cols, ones_diff_cols))
ge(_if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(or_(True, True), _if_then_else(True, 4, 0), _if_then_else(True, 80, 3)))
or_(False, ge(max_col_clue, 4))
and_(and_(True, True), ge(4, 36))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
le(_if_then_else(and_(ge(_if_then_else(True, 1, 0), _if_then_else(True, max_row_clue, 4)), and_(ge(ones_diff_cols, max_row_clue), and_(False, False))), _if_then_else(le(_if_then_else(False, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, ones_diff_rows, zeros_diff_rows)), _if_then_else(le(zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_cols, -37), _if_then_else(True, zeros_diff_cols, zeros_diff_cols)), _if_then_else(le(compare_blocks_cols, ones_diff_cols), _if_then_else(False, -82, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, 4, 3), _if_then_else(True, compare_blocks_cols, ones_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, ones_diff_cols, max_col_clue)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, compare_blocks_cols), _if_then_else(False, _if_then_else(True, 2, max_row_clue), 4)))), _if_then_else(le(_if_then_else(ge(compare_blocks_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, 4), _if_then_else(False, 2, 0)), _if_then_else(le(ones_diff_cols, ones_diff_cols), _if_then_else(True, 2, 1), _if_then_else(False, -69, 1))), _if_then_else(or_(or_(True, False), ge(3, max_col_clue)), _if_then_else(False, max_col_clue, _if_then_else(True, max_col_clue, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_cols, 2), _if_then_else(True, 3, 2))), _if_then_else(ge(_if_then_else(True, 0, compare_blocks_cols), _if_then_else(False, max_row_clue, max_row_clue)), _if_then_else(le(zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 2, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 0)), _if_then_else(and_(False, True), _if_then_else(True, 1, 4), _if_then_else(False, 0, 4)))))
or_(or_(False, True), le(4, max_row_clue))
le(_if_then_else(False, 3, _if_then_else(False, ones_diff_rows, _if_then_else(True, 3, max_row_clue))), _if_then_else(or_(True, ge(ones_diff_cols, compare_blocks_cols)), compare_blocks_rows, zeros_diff_rows))
ge(_if_then_else(ge(_if_then_else(True, 0, zeros_diff_cols), _if_then_else(False, ones_diff_rows, max_col_clue)), _if_then_else(and_(False, True), _if_then_else(False, 4, compare_blocks_cols), compare_blocks_cols), _if_then_else(and_(False, True), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, compare_blocks_cols))), _if_then_else(or_(ge(3, compare_blocks_rows), and_(True, False)), _if_then_else(ge(ones_diff_rows, 1), _if_then_else(False, compare_blocks_cols, _if_then_else(and_(True, False), _if_then_else(False, 2, ones_diff_cols), _if_then_else(True, 3, compare_blocks_rows))), _if_then_else(False, compare_blocks_rows, 4)), _if_then_else(True, 0, ones_diff_cols)))
and_(and_(or_(False, True), or_(True, False)), True)
VAL TREES:
add(mul(mul(61, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, zeros_diff_cols), mul(ones_diff_cols, ones_diff_rows)))
add(add(zeros_diff_rows, ones_diff_cols), mul(zeros_diff_rows, mul(compare_blocks_rows, mul(compare_blocks_cols, compare_blocks_cols))))
add(add(compare_blocks_rows, mul(ones_diff_rows, zeros_diff_cols)), add(ones_diff_rows, add(compare_blocks_cols, zeros_diff_cols)))
mul(mul(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_rows))
add(mul(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_rows))
add(mul(-2, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols))
COND TREES:
ge(_if_then_else(le(max_row_clue, compare_blocks_rows), max_row_clue, max_col_clue), _if_then_else(False, 2, max_row_clue))
and_(le(_if_then_else(True, compare_blocks_cols, 68), compare_blocks_rows), or_(or_(False, True), and_(ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, 1, max_col_clue)), False)))
or_(ge(_if_then_else(True, -2, 3), _if_then_else(True, max_row_clue, zeros_diff_rows)), and_(or_(or_(True, False), False), le(4, max_row_clue)))
or_(and_(True, True), le(max_row_clue, 55))
and_(le(_if_then_else(False, max_col_clue, compare_blocks_cols), max_row_clue), False)
VAL TREES:
mul(mul(zeros_diff_cols, compare_blocks_cols), add(mul(zeros_diff_cols, add(compare_blocks_cols, add(mul(mul(mul(45, 7), add(zeros_diff_rows, 20)), mul(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_rows, -86))), mul(add(mul(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, -74)))))), compare_blocks_cols))
mul(mul(add(add(ones_diff_rows, 13), compare_blocks_rows), add(compare_blocks_cols, mul(-28, ones_diff_rows))), add(add(mul(mul(mul(mul(62, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), add(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols))), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, 70)))), add(add(mul(add(ones_diff_rows, ones_diff_cols), mul(compare_blocks_cols, -4)), mul(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, ones_diff_rows))), add(add(mul(compare_blocks_cols, ones_diff_cols), add(-21, -96)), mul(add(ones_diff_cols, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_cols))))), -82))
add(mul(zeros_diff_cols, add(zeros_diff_cols, compare_blocks_rows)), mul(compare_blocks_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_cols))
add(add(ones_diff_rows, mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols)), add(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_rows)))), add(zeros_diff_rows, zeros_diff_rows))
mul(add(mul(mul(ones_diff_cols, 44), mul(compare_blocks_rows, add(add(compare_blocks_cols, zeros_diff_rows), compare_blocks_rows))), zeros_diff_rows), mul(zeros_diff_rows, -66))
COND TREES:
or_(and_(and_(True, False), and_(False, True)), and_(False, le(ones_diff_cols, compare_blocks_cols)))
le(_if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_cols))
and_(ge(1, 2), and_(True, True))
le(_if_then_else(True, 3, _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_cols, max_row_clue), _if_then_else(True, 4, 3))), _if_then_else(True, ones_diff_cols, zeros_diff_rows))
and_(le(max_col_clue, compare_blocks_rows), False)
VAL TREES:
add(mul(add(mul(zeros_diff_rows, compare_blocks_rows), zeros_diff_rows), ones_diff_cols), mul(zeros_diff_rows, -35))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(mul(mul(ones_diff_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), zeros_diff_rows))
add(add(add(mul(ones_diff_cols, -78), mul(zeros_diff_rows, -1)), mul(49, 62)), mul(-33, compare_blocks_rows))
add(add(zeros_diff_rows, zeros_diff_cols), add(mul(add(compare_blocks_cols, 2), add(zeros_diff_cols, ones_diff_cols)), ones_diff_cols))
add(add(compare_blocks_cols, zeros_diff_rows), add(42, add(add(add(add(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, 24)), mul(mul(compare_blocks_cols, -41), add(compare_blocks_cols, compare_blocks_rows))), add(add(add(zeros_diff_cols, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), add(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols))))))
add(add(7, zeros_diff_rows), mul(mul(mul(ones_diff_cols, compare_blocks_cols), mul(add(mul(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_cols, zeros_diff_cols)), add(mul(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows))), mul(add(mul(ones_diff_cols, ones_diff_rows), add(-58, zeros_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_cols))))), ones_diff_rows))
COND TREES:
or_(or_(or_(True, False), True), le(zeros_diff_rows, 0))
le(_if_then_else(le(_if_then_else(and_(ge(-9, ones_diff_cols), le(max_col_clue, 4)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(True, ones_diff_cols, 4)), _if_then_else(and_(False, True), _if_then_else(False, 1, max_col_clue), _if_then_else(False, 3, zeros_diff_rows))), _if_then_else(le(_if_then_else(True, 1, max_row_clue), _if_then_else(False, compare_blocks_cols, ones_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(True, 3, 3)), _if_then_else(le(max_col_clue, 74), _if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(False, 3, zeros_diff_rows)))), _if_then_else(or_(ge(_if_then_else(False, max_row_clue, compare_blocks_rows), _if_then_else(True, 0, 2)), ge(_if_then_else(True, ones_diff_cols, 0), _if_then_else(True, 37, ones_diff_rows))), _if_then_else(ge(_if_then_else(True, 1, compare_blocks_cols), _if_then_else(False, ones_diff_cols, max_col_clue)), _if_then_else(le(max_row_clue, 0), _if_then_else(False, compare_blocks_cols, 4), _if_then_else(False, 4, ones_diff_cols)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(True, 2, max_row_clue), _if_then_else(False, 0, 2))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, compare_blocks_cols), _if_then_else(False, -60, zeros_diff_cols)), _if_then_else(ge(compare_blocks_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(zeros_diff_cols, 1), _if_then_else(False, -91, max_col_clue), _if_then_else(False, 3, zeros_diff_cols)))), _if_then_else(or_(and_(and_(True, True), ge(31, 1)), and_(or_(False, False), ge(zeros_diff_rows, 0))), _if_then_else(and_(ge(1, zeros_diff_rows), and_(True, False)), _if_then_else(ge(zeros_diff_cols, 0), _if_then_else(False, max_row_clue, 0), _if_then_else(False, 4, compare_blocks_cols)), _if_then_else(le(ones_diff_cols, -97), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, ones_diff_rows))), _if_then_else(ge(_if_then_else(True, 0, zeros_diff_rows), _if_then_else(True, 2, 1)), _if_then_else(or_(False, True), _if_then_else(False, 14, zeros_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows)), _if_then_else(le(max_col_clue, 1), _if_then_else(True, 4, ones_diff_cols), _if_then_else(True, max_row_clue, -88))))), _if_then_else(False, compare_blocks_cols, compare_blocks_cols))
ge(_if_then_else(True, max_row_clue, ones_diff_cols), _if_then_else(False, compare_blocks_cols, compare_blocks_cols))
or_(or_(True, True), le(ones_diff_rows, 4))
and_(or_(False, True), False)
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
or_(or_(or_(True, le(_if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, -6, 1))), True), and_(False, True))
le(_if_then_else(True, compare_blocks_cols, _if_then_else(and_(ge(max_col_clue, compare_blocks_rows), True), _if_then_else(True, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, 3))), _if_then_else(True, compare_blocks_cols, ones_diff_cols))
ge(_if_then_else(ge(_if_then_else(True, 46, compare_blocks_cols), _if_then_else(True, ones_diff_rows, compare_blocks_cols)), max_row_clue, compare_blocks_rows), _if_then_else(or_(False, True), compare_blocks_cols, zeros_diff_rows))
and_(and_(True, True), le(_if_then_else(True, zeros_diff_rows, 1), ones_diff_rows))
and_(or_(False, True), or_(True, False))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
and_(le(4, zeros_diff_rows), le(max_row_clue, ones_diff_cols))
ge(_if_then_else(False, zeros_diff_cols, max_row_clue), _if_then_else(True, ones_diff_rows, max_row_clue))
or_(le(_if_then_else(ge(ones_diff_rows, -85), _if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, -14), _if_then_else(True, 0, ones_diff_cols))), or_(and_(or_(False, True), or_(False, True)), and_(or_(False, False), and_(True, True))))
or_(and_(True, ge(3, zeros_diff_rows)), ge(_if_then_else(False, ones_diff_cols, 0), ones_diff_rows))
or_(and_(and_(False, False), True), or_(False, True))
VAL TREES:
add(mul(ones_diff_cols, 52), mul(compare_blocks_cols, zeros_diff_rows))
add(add(add(add(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols))), add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols))))
add(mul(zeros_diff_cols, 30), add(zeros_diff_rows, ones_diff_rows))
add(mul(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols))
add(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows))
add(mul(add(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_rows)), mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, -54))), add(add(mul(zeros_diff_rows, zeros_diff_rows), mul(20, ones_diff_cols)), mul(mul(compare_blocks_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))), mul(add(add(mul(42, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, ones_diff_cols))), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows)))))
COND TREES:
ge(_if_then_else(False, _if_then_else(ge(max_col_clue, compare_blocks_cols), ones_diff_cols, _if_then_else(False, max_row_clue, _if_then_else(True, 0, zeros_diff_cols))), max_col_clue), _if_then_else(False, 2, ones_diff_rows))
and_(ge(_if_then_else(True, max_col_clue, ones_diff_cols), _if_then_else(False, 1, max_col_clue)), or_(or_(False, True), False))
and_(True, or_(le(max_col_clue, compare_blocks_cols), le(-85, 3)))
ge(zeros_diff_rows, _if_then_else(False, max_col_clue, ones_diff_rows))
and_(le(_if_then_else(False, max_col_clue, compare_blocks_cols), max_row_clue), or_(le(_if_then_else(and_(False, False), _if_then_else(False, ones_diff_rows, 1), _if_then_else(False, 4, -75)), _if_then_else(True, ones_diff_cols, compare_blocks_rows)), False))
VAL TREES:
mul(mul(zeros_diff_cols, compare_blocks_cols), add(mul(zeros_diff_cols, add(compare_blocks_cols, zeros_diff_cols)), compare_blocks_cols))
mul(mul(add(add(ones_diff_rows, 13), compare_blocks_rows), add(compare_blocks_cols, mul(-28, ones_diff_rows))), add(ones_diff_cols, -82))
add(mul(zeros_diff_cols, add(zeros_diff_cols, compare_blocks_rows)), mul(compare_blocks_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_cols))
add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))
mul(add(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, -66))
COND TREES:
and_(le(_if_then_else(True, 0, 0), _if_then_else(False, 1, _if_then_else(True, 82, ones_diff_rows))), le(max_row_clue, _if_then_else(True, _if_then_else(False, 0, compare_blocks_cols), _if_then_else(and_(False, False), 1, 1))))
ge(_if_then_else(False, zeros_diff_cols, max_row_clue), _if_then_else(le(max_col_clue, zeros_diff_cols), ones_diff_rows, max_row_clue))
or_(le(_if_then_else(ge(ones_diff_rows, 0), _if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, -14), _if_then_else(True, 0, ones_diff_cols))), or_(and_(ge(_if_then_else(True, 1, max_col_clue), _if_then_else(False, _if_then_else(True, 4, -86), _if_then_else(True, ones_diff_cols, 4))), or_(False, True)), and_(or_(False, False), and_(True, True))))
or_(le(2, compare_blocks_rows), ge(_if_then_else(ge(_if_then_else(and_(False, False), _if_then_else(False, 0, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, 2)), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_rows, max_col_clue), _if_then_else(False, compare_blocks_rows, compare_blocks_cols))), ones_diff_cols, 0), ones_diff_rows))
le(_if_then_else(False, 1, ones_diff_rows), _if_then_else(True, 0, compare_blocks_rows))
VAL TREES:
add(mul(ones_diff_cols, 52), mul(compare_blocks_cols, zeros_diff_rows))
add(add(add(add(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols))), add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols))))
add(mul(zeros_diff_cols, 30), add(zeros_diff_rows, ones_diff_rows))
add(mul(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols))
add(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows))
add(mul(add(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_rows)), mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, -54))), add(add(mul(zeros_diff_rows, zeros_diff_rows), mul(20, ones_diff_cols)), mul(mul(compare_blocks_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))), mul(add(add(mul(42, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, ones_diff_cols))), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows)))))
COND TREES:
ge(max_row_clue, _if_then_else(or_(True, False), compare_blocks_rows, max_row_clue))
ge(_if_then_else(and_(and_(False, False), False), compare_blocks_rows, max_col_clue), _if_then_else(False, zeros_diff_cols, compare_blocks_cols))
or_(or_(False, False), le(_if_then_else(False, max_col_clue, 0), _if_then_else(False, ones_diff_rows, ones_diff_rows)))
le(_if_then_else(or_(True, True), ones_diff_cols, _if_then_else(True, _if_then_else(True, _if_then_else(False, 1, ones_diff_rows), ones_diff_rows), 3)), _if_then_else(False, zeros_diff_rows, 2))
le(3, _if_then_else(ge(_if_then_else(True, ones_diff_rows, ones_diff_rows), _if_then_else(False, -62, 2)), ones_diff_rows, -67))
VAL TREES:
add(mul(ones_diff_rows, zeros_diff_rows), add(-49, zeros_diff_rows))
add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, -94))
mul(mul(zeros_diff_rows, ones_diff_cols), mul(mul(add(61, ones_diff_cols), zeros_diff_cols), ones_diff_rows))
add(mul(zeros_diff_cols, mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), 67))
mul(add(zeros_diff_rows, -21), add(zeros_diff_rows, zeros_diff_cols))
add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols))
COND TREES:
or_(le(_if_then_else(False, max_row_clue, 0), _if_then_else(False, max_col_clue, 2)), and_(False, le(zeros_diff_rows, compare_blocks_cols)))
and_(ge(2, ones_diff_rows), ge(4, ones_diff_cols))
le(_if_then_else(and_(or_(le(compare_blocks_rows, 1), ge(compare_blocks_cols, 94)), or_(or_(False, True), and_(True, False))), _if_then_else(le(_if_then_else(True, 0, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, 1)), _if_then_else(or_(False, True), _if_then_else(False, 4, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(True, max_col_clue, 2), _if_then_else(True, max_col_clue, 4))), _if_then_else(or_(and_(True, False), or_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, 1, 4), _if_then_else(True, max_col_clue, max_col_clue)), _if_then_else(and_(False, True), _if_then_else(False, 2, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, 2)))), _if_then_else(ge(_if_then_else(ge(3, compare_blocks_rows), _if_then_else(True, 3, 0), _if_then_else(False, 62, ones_diff_cols)), _if_then_else(ge(zeros_diff_cols, -93), _if_then_else(False, 0, 10), _if_then_else(True, ones_diff_rows, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, 3), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(le(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, max_row_clue, -82), _if_then_else(False, 1, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), _if_then_else(ge(_if_then_else(True, 2, max_row_clue), _if_then_else(True, 22, 0)), _if_then_else(le(max_row_clue, max_row_clue), _if_then_else(True, 2, 4), _if_then_else(False, ones_diff_rows, 1)), _if_then_else(or_(False, False), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, 3, max_row_clue)))))
le(_if_then_else(True, 3, _if_then_else(and_(True, le(_if_then_else(True, 0, -77), _if_then_else(or_(le(_if_then_else(False, 3, compare_blocks_cols), zeros_diff_cols), ge(max_col_clue, 4)), 3, _if_then_else(le(_if_then_else(False, 2, 3), _if_then_else(False, 0, 2)), _if_then_else(or_(False, False), _if_then_else(False, 3, 4), _if_then_else(False, 3, 3)), _if_then_else(le(1, 3), _if_then_else(True, 1, max_row_clue), _if_then_else(False, max_col_clue, 1)))))), -77, _if_then_else(True, 4, 3))), _if_then_else(True, ones_diff_cols, zeros_diff_rows))
and_(le(max_col_clue, _if_then_else(and_(ge(_if_then_else(True, compare_blocks_rows, 4), _if_then_else(True, 0, 3)), or_(or_(True, False), ge(zeros_diff_cols, ones_diff_cols))), _if_then_else(le(_if_then_else(True, 1, ones_diff_rows), _if_then_else(True, compare_blocks_cols, ones_diff_rows)), _if_then_else(le(0, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(True, ones_diff_cols, ones_diff_cols)), _if_then_else(ge(ones_diff_cols, 1), _if_then_else(True, max_row_clue, 78), _if_then_else(True, max_row_clue, 0))), _if_then_else(and_(le(compare_blocks_cols, max_row_clue), or_(False, True)), _if_then_else(or_(False, False), _if_then_else(False, 15, compare_blocks_cols), _if_then_else(False, 3, compare_blocks_cols)), _if_then_else(and_(False, True), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(False, 0, -31))))), False)
VAL TREES:
add(mul(add(mul(zeros_diff_rows, compare_blocks_rows), zeros_diff_rows), ones_diff_cols), mul(zeros_diff_rows, -35))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(mul(mul(ones_diff_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), zeros_diff_rows))
add(add(add(-63, zeros_diff_cols), mul(49, 62)), mul(-33, compare_blocks_rows))
add(add(zeros_diff_rows, zeros_diff_cols), add(mul(add(compare_blocks_cols, 2), add(zeros_diff_cols, ones_diff_cols)), ones_diff_cols))
add(add(compare_blocks_cols, zeros_diff_rows), add(42, add(add(add(add(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, 24)), mul(mul(compare_blocks_cols, -41), add(compare_blocks_cols, compare_blocks_rows))), add(add(add(zeros_diff_cols, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), add(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols))))))
add(add(7, zeros_diff_rows), mul(mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)), ones_diff_rows))
COND TREES:
or_(le(max_col_clue, zeros_diff_rows), le(compare_blocks_rows, _if_then_else(and_(le(max_col_clue, _if_then_else(True, 3, 30)), le(1, max_row_clue)), 1, max_col_clue)))
or_(le(max_col_clue, _if_then_else(or_(le(_if_then_else(le(compare_blocks_rows, max_col_clue), _if_then_else(False, 0, max_row_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, 4, ones_diff_cols), _if_then_else(True, max_col_clue, 4))), and_(ge(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, ones_diff_cols, compare_blocks_cols)), le(_if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(True, ones_diff_rows, ones_diff_cols)))), _if_then_else(le(_if_then_else(and_(False, True), _if_then_else(False, 3, 3), _if_then_else(True, zeros_diff_rows, 4)), _if_then_else(or_(True, False), _if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, ones_diff_cols, compare_blocks_rows))), _if_then_else(le(_if_then_else(True, ones_diff_rows, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, ones_diff_rows)), _if_then_else(ge(zeros_diff_cols, 3), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, max_col_clue, ones_diff_cols)), _if_then_else(ge(ones_diff_rows, 2), _if_then_else(False, 0, compare_blocks_rows), _if_then_else(True, ones_diff_cols, 72))), _if_then_else(ge(_if_then_else(True, max_row_clue, ones_diff_cols), _if_then_else(True, ones_diff_cols, zeros_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, max_row_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(compare_blocks_cols, ones_diff_rows), _if_then_else(False, 53, zeros_diff_rows), _if_then_else(True, ones_diff_cols, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(False, max_col_clue, zeros_diff_cols), _if_then_else(True, 0, -43)), and_(or_(True, True), and_(True, True))), _if_then_else(ge(_if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, 0, max_col_clue)), _if_then_else(le(zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, 4), _if_then_else(True, -21, zeros_diff_rows)), _if_then_else(or_(True, False), _if_then_else(True, max_row_clue, 89), _if_then_else(True, ones_diff_rows, 2))), _if_then_else(and_(ge(compare_blocks_cols, compare_blocks_rows), or_(True, False)), _if_then_else(ge(ones_diff_cols, 2), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(True, ones_diff_cols, 4)), _if_then_else(ge(ones_diff_cols, 2), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, 4, ones_diff_cols)))))), ge(0, zeros_diff_cols))
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), _if_then_else(True, max_row_clue, 4), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(ge(_if_then_else(or_(True, False), _if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, max_row_clue, 0)), ones_diff_rows), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, 3, 3)), and_(and_(or_(le(compare_blocks_cols, 2), ge(4, zeros_diff_cols)), or_(and_(False, True), and_(False, False))), le(_if_then_else(or_(False, True), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(True, 2, zeros_diff_cols)), _if_then_else(ge(1, 3), _if_then_else(True, ones_diff_rows, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, 3)))))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, False), 3, _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(ge(3, ones_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 2, ones_diff_rows))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
or_(or_(or_(le(_if_then_else(False, ones_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), le(_if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, 3, zeros_diff_rows))), True), le(_if_then_else(le(0, 1), _if_then_else(False, ones_diff_rows, compare_blocks_cols), _if_then_else(or_(True, False), zeros_diff_cols, max_col_clue)), 4))
le(_if_then_else(and_(False, False), compare_blocks_cols, _if_then_else(and_(True, and_(and_(True, False), ge(zeros_diff_cols, -5))), max_col_clue, compare_blocks_rows)), _if_then_else(False, compare_blocks_cols, ones_diff_cols))
ge(_if_then_else(or_(False, True), max_row_clue, ones_diff_cols), _if_then_else(True, compare_blocks_cols, compare_blocks_cols))
or_(or_(le(0, 15), le(3, zeros_diff_cols)), and_(or_(True, False), le(0, 2)))
and_(or_(ge(_if_then_else(or_(or_(False, False), ge(zeros_diff_cols, 2)), _if_then_else(or_(False, False), _if_then_else(True, 4, ones_diff_cols), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(ge(1, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_cols), _if_then_else(False, -25, zeros_diff_cols))), _if_then_else(ge(_if_then_else(False, 0, ones_diff_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(le(_if_then_else(le(_if_then_else(True, zeros_diff_rows, -14), _if_then_else(True, 41, zeros_diff_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_cols, 4), _if_then_else(False, zeros_diff_rows, max_col_clue)), _if_then_else(ge(compare_blocks_cols, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, zeros_diff_rows, max_row_clue))), _if_then_else(and_(and_(True, False), or_(False, False)), _if_then_else(le(ones_diff_cols, 1), _if_then_else(False, 2, 4), _if_then_else(True, ones_diff_rows, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, 17, 0)))), 2, 2), _if_then_else(True, ones_diff_cols, ones_diff_rows)), _if_then_else(le(compare_blocks_rows, ones_diff_cols), _if_then_else(False, 92, max_col_clue), _if_then_else(True, -31, 1)))), and_(or_(ge(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, max_col_clue, max_row_clue)), le(_if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(True, ones_diff_rows, zeros_diff_cols))), or_(or_(or_(False, True), ge(ones_diff_rows, 3)), le(_if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(False, compare_blocks_rows, ones_diff_cols))))), or_(True, True))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
ge(_if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 2, ones_diff_rows))
and_(False, or_(or_(False, True), False))
and_(True, False)
ge(zeros_diff_rows, _if_then_else(False, _if_then_else(and_(False, False), 2, _if_then_else(True, compare_blocks_rows, _if_then_else(le(3, 2), 3, zeros_diff_rows))), ones_diff_rows))
and_(le(_if_then_else(False, max_col_clue, compare_blocks_cols), max_row_clue), le(2, ones_diff_rows))
VAL TREES:
mul(mul(zeros_diff_cols, compare_blocks_cols), add(mul(zeros_diff_cols, add(compare_blocks_cols, zeros_diff_cols)), compare_blocks_cols))
mul(mul(add(add(ones_diff_rows, 13), compare_blocks_rows), add(compare_blocks_cols, mul(-28, ones_diff_rows))), add(ones_diff_cols, -82))
add(mul(zeros_diff_cols, add(zeros_diff_cols, compare_blocks_rows)), mul(compare_blocks_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_cols))
add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))
mul(add(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, -66))
COND TREES:
or_(and_(and_(True, False), and_(False, True)), True)
le(_if_then_else(and_(True, False), max_col_clue, compare_blocks_rows), _if_then_else(and_(False, False), 1, zeros_diff_cols))
and_(le(max_row_clue, 1), le(_if_then_else(False, 3, 70), 53))
le(4, _if_then_else(True, -26, zeros_diff_rows))
and_(le(4, compare_blocks_rows), or_(False, False))
VAL TREES:
add(mul(add(mul(zeros_diff_rows, compare_blocks_rows), zeros_diff_rows), ones_diff_cols), mul(zeros_diff_rows, -35))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_rows))
add(mul(ones_diff_rows, ones_diff_cols), mul(-33, compare_blocks_rows))
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols))
add(add(compare_blocks_cols, zeros_diff_rows), add(42, zeros_diff_cols))
add(add(7, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows))
COND TREES:
or_(le(max_col_clue, zeros_diff_rows), True)
or_(le(max_col_clue, 2), ge(0, 2))
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), _if_then_else(le(max_col_clue, 4), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, max_row_clue, compare_blocks_rows)), _if_then_else(or_(True, True), compare_blocks_rows, _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(False, _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(False, ge(4, compare_blocks_rows))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(or_(False, True), _if_then_else(False, 4, zeros_diff_rows), 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
or_(le(max_col_clue, zeros_diff_rows), le(_if_then_else(False, ones_diff_rows, 2), _if_then_else(le(compare_blocks_rows, _if_then_else(True, 1, max_col_clue)), 1, _if_then_else(le(compare_blocks_rows, 1), _if_then_else(True, 3, compare_blocks_cols), _if_then_else(True, ones_diff_cols, max_col_clue)))))
or_(le(max_col_clue, _if_then_else(False, 1, zeros_diff_cols)), ge(0, zeros_diff_cols))
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), _if_then_else(False, max_row_clue, 4), _if_then_else(or_(False, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), le(_if_then_else(False, max_row_clue, _if_then_else(and_(True, False), compare_blocks_cols, 3)), _if_then_else(True, ones_diff_cols, max_col_clue))), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(ge(2, ones_diff_rows), _if_then_else(True, max_row_clue, max_col_clue), _if_then_else(True, 2, _if_then_else(True, zeros_diff_cols, 94)))))
and_(ge(zeros_diff_rows, _if_then_else(ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(ge(compare_blocks_cols, zeros_diff_rows), 3, max_col_clue)), zeros_diff_rows, 3)), and_(le(zeros_diff_cols, compare_blocks_rows), ge(3, compare_blocks_rows)))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), compare_blocks_cols), _if_then_else(and_(False, True), zeros_diff_rows, _if_then_else(True, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(le(_if_then_else(le(80, ones_diff_cols), _if_then_else(False, compare_blocks_cols, -93), _if_then_else(False, 1, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, 1, compare_blocks_rows), _if_then_else(False, 2, ones_diff_cols))), ge(_if_then_else(or_(True, True), _if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, ones_diff_cols, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, max_row_clue, -100), _if_then_else(False, ones_diff_cols, -69)))), 3, _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
ge(_if_then_else(le(max_col_clue, zeros_diff_rows), ones_diff_cols, max_col_clue), _if_then_else(False, 2, max_row_clue))
and_(ge(_if_then_else(ge(0, zeros_diff_cols), zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 1, max_col_clue)), or_(or_(False, True), and_(False, False)))
and_(True, le(_if_then_else(le(max_col_clue, 4), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, max_row_clue, compare_blocks_rows)), 53))
ge(zeros_diff_rows, _if_then_else(le(_if_then_else(False, 3, max_col_clue), compare_blocks_cols), _if_then_else(and_(False, False), 2, _if_then_else(le(_if_then_else(True, 0, -77), _if_then_else(False, 3, zeros_diff_rows)), compare_blocks_rows, 4)), ones_diff_rows))
and_(le(_if_then_else(False, _if_then_else(True, max_row_clue, 2), compare_blocks_cols), max_row_clue), or_(le(zeros_diff_cols, max_col_clue), ge(compare_blocks_rows, ones_diff_rows)))
VAL TREES:
mul(mul(zeros_diff_cols, compare_blocks_cols), add(mul(zeros_diff_cols, add(compare_blocks_cols, zeros_diff_cols)), compare_blocks_cols))
mul(mul(add(add(ones_diff_rows, 13), compare_blocks_rows), add(compare_blocks_cols, mul(-28, ones_diff_rows))), add(ones_diff_cols, -82))
add(mul(zeros_diff_cols, add(zeros_diff_cols, compare_blocks_rows)), mul(compare_blocks_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_cols))
add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))
mul(add(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, -66))
COND TREES:
or_(le(max_col_clue, zeros_diff_rows), False)
or_(le(max_col_clue, 2), True)
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), _if_then_else(le(max_col_clue, 4), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, max_row_clue, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(ge(2, ones_diff_rows), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, 3, max_col_clue)), le(_if_then_else(True, 0, -77), _if_then_else(False, 3, compare_blocks_rows)))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
or_(or_(or_(le(max_col_clue, zeros_diff_rows), False), True), le(_if_then_else(le(0, 1), _if_then_else(False, ones_diff_rows, compare_blocks_cols), _if_then_else(or_(True, False), zeros_diff_cols, max_col_clue)), 4))
le(_if_then_else(and_(False, False), compare_blocks_cols, _if_then_else(True, max_col_clue, 2)), _if_then_else(False, compare_blocks_cols, ones_diff_cols))
ge(_if_then_else(or_(False, True), max_row_clue, _if_then_else(True, ones_diff_cols, max_row_clue)), _if_then_else(True, compare_blocks_cols, compare_blocks_rows))
or_(le(zeros_diff_cols, -26), and_(or_(True, False), le(3, 2)))
and_(or_(ge(_if_then_else(or_(or_(False, False), ge(zeros_diff_cols, 2)), _if_then_else(or_(False, False), _if_then_else(True, 4, ones_diff_cols), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(ge(1, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_cols), _if_then_else(False, -25, zeros_diff_cols))), _if_then_else(ge(_if_then_else(False, 0, ones_diff_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(False, 2, 2), _if_then_else(True, ones_diff_cols, ones_diff_rows)), _if_then_else(le(compare_blocks_rows, ones_diff_cols), _if_then_else(False, 92, max_col_clue), _if_then_else(True, -31, 1)))), and_(or_(ge(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, 4, max_row_clue)), le(_if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(True, ones_diff_rows, zeros_diff_cols))), or_(or_(or_(False, True), ge(ones_diff_rows, 3)), le(_if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)))))), or_(True, True))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
or_(le(max_col_clue, zeros_diff_rows), and_(True, True))
or_(le(max_col_clue, _if_then_else(False, max_col_clue, compare_blocks_rows)), ge(0, 1))
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), compare_blocks_cols, _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), ones_diff_cols)), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(ge(2, ones_diff_rows), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(and_(False, False), 2, _if_then_else(ge(1, compare_blocks_rows), _if_then_else(False, ones_diff_cols, 1), _if_then_else(False, ones_diff_cols, compare_blocks_cols))), _if_then_else(False, 3, max_col_clue)), le(_if_then_else(True, 0, -77), _if_then_else(False, 3, compare_blocks_rows)))
or_(ge(_if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(and_(False, True), zeros_diff_rows, _if_then_else(True, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(add(mul(ones_diff_rows, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_rows)), 59))
mul(add(mul(ones_diff_cols, add(add(ones_diff_cols, 79), mul(compare_blocks_rows, add(ones_diff_rows, add(zeros_diff_cols, -28))))), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(mul(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), mul(mul(mul(add(compare_blocks_rows, ones_diff_cols), mul(-93, 15)), mul(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols))), add(add(add(compare_blocks_rows, ones_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), mul(mul(-50, compare_blocks_cols), mul(zeros_diff_cols, -65)))))
mul(mul(-76, -25), mul(ones_diff_rows, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, 76)), add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
COND TREES:
ge(zeros_diff_cols, _if_then_else(or_(False, True), _if_then_else(False, max_col_clue, 21), _if_then_else(False, ones_diff_cols, -64)))
ge(_if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, zeros_diff_cols, compare_blocks_cols))
or_(ge(_if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, 4)), True)
le(_if_then_else(False, ones_diff_cols, _if_then_else(False, 1, zeros_diff_rows)), _if_then_else(le(_if_then_else(ge(max_col_clue, 4), -42, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), zeros_diff_rows, 2))
le(_if_then_else(True, max_row_clue, max_row_clue), _if_then_else(False, ones_diff_rows, -67))
VAL TREES:
add(mul(ones_diff_rows, zeros_diff_rows), add(-49, zeros_diff_rows))
add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, -94))
mul(mul(zeros_diff_rows, ones_diff_cols), mul(mul(add(61, ones_diff_cols), zeros_diff_cols), ones_diff_rows))
add(mul(zeros_diff_cols, mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), 67))
mul(add(zeros_diff_rows, -21), add(zeros_diff_rows, zeros_diff_cols))
add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols))
COND TREES:
and_(and_(True, False), le(1, _if_then_else(True, 2, zeros_diff_rows)))
ge(_if_then_else(le(ones_diff_cols, 2), _if_then_else(and_(False, or_(True, True)), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, max_row_clue)), _if_then_else(le(-66, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, 4), _if_then_else(False, max_row_clue, 4))), _if_then_else(le(_if_then_else(True, max_row_clue, max_row_clue), _if_then_else(True, zeros_diff_rows, zeros_diff_cols)), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(le(compare_blocks_cols, 3), _if_then_else(True, compare_blocks_rows, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, 0))))
le(zeros_diff_cols, _if_then_else(False, ones_diff_rows, _if_then_else(True, 2, max_row_clue)))
or_(ge(_if_then_else(le(ones_diff_cols, 1), _if_then_else(True, 50, ones_diff_cols), _if_then_else(True, zeros_diff_rows, -46)), _if_then_else(False, _if_then_else(True, 4, 3), _if_then_else(True, compare_blocks_cols, 1))), and_(or_(le(_if_then_else(False, compare_blocks_rows, compare_blocks_cols), zeros_diff_cols), False), or_(ge(4, zeros_diff_cols), ge(2, 2))))
or_(or_(False, True), le(compare_blocks_cols, 2))
VAL TREES:
add(mul(mul(add(add(ones_diff_rows, -79), add(ones_diff_rows, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols))), mul(add(mul(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_cols)), mul(mul(-30, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)))), add(add(mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)), add(add(compare_blocks_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_rows))), mul(mul(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_cols)))))
add(mul(add(ones_diff_cols, ones_diff_rows), ones_diff_cols), add(ones_diff_cols, compare_blocks_cols))
add(mul(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, add(zeros_diff_rows, compare_blocks_rows)))
add(add(ones_diff_cols, add(compare_blocks_rows, compare_blocks_cols)), mul(zeros_diff_rows, add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(mul(ones_diff_rows, -100), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_cols))), mul(mul(mul(zeros_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_cols, compare_blocks_cols))))
add(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols))
COND TREES:
or_(le(max_col_clue, _if_then_else(False, _if_then_else(False, 20, 2), 1)), True)
or_(le(max_col_clue, 2), ge(0, 4))
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), _if_then_else(le(max_col_clue, 4), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, max_row_clue, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(False, _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(ge(max_col_clue, 4), max_col_clue, ones_diff_cols), _if_then_else(ge(compare_blocks_cols, zeros_diff_rows), 3, max_col_clue)), ge(4, compare_blocks_rows))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), ones_diff_rows), _if_then_else(and_(True, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(or_(False, True), zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
ge(zeros_diff_cols, zeros_diff_rows)
ge(_if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(and_(and_(le(_if_then_else(True, ones_diff_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), ge(_if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(False, 4, ones_diff_cols))), and_(le(_if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows)), and_(ge(_if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(True, max_col_clue, 2)), and_(False, True)))), zeros_diff_cols, zeros_diff_rows))
or_(ge(_if_then_else(True, compare_blocks_cols, _if_then_else(False, compare_blocks_cols, ones_diff_cols)), _if_then_else(and_(True, True), _if_then_else(True, 3, 3), _if_then_else(True, zeros_diff_rows, ones_diff_rows))), True)
le(_if_then_else(or_(le(_if_then_else(False, compare_blocks_rows, compare_blocks_cols), zeros_diff_cols), False), ones_diff_cols, ones_diff_rows), _if_then_else(or_(le(zeros_diff_rows, compare_blocks_cols), and_(True, True)), zeros_diff_rows, 2))
le(_if_then_else(False, max_row_clue, max_row_clue), _if_then_else(False, _if_then_else(True, compare_blocks_rows, zeros_diff_cols), _if_then_else(True, max_row_clue, 2)))
VAL TREES:
add(mul(ones_diff_rows, zeros_diff_rows), add(-49, zeros_diff_rows))
add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, -94))
mul(mul(zeros_diff_rows, ones_diff_cols), mul(mul(add(61, ones_diff_cols), zeros_diff_cols), ones_diff_rows))
add(mul(zeros_diff_cols, mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), 67))
mul(add(zeros_diff_rows, -21), add(zeros_diff_rows, zeros_diff_cols))
add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols))
COND TREES:
or_(False, True)
or_(le(max_col_clue, 2), ge(ones_diff_cols, zeros_diff_cols))
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(-62, max_row_clue)), _if_then_else(le(max_col_clue, 4), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, max_row_clue, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(False, _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(ge(compare_blocks_cols, zeros_diff_rows), 3, max_col_clue)), ge(1, compare_blocks_rows))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(or_(or_(False, True), True), zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
or_(or_(or_(False, le(max_col_clue, zeros_diff_rows)), True), and_(or_(ge(_if_then_else(False, ones_diff_cols, 38), 0), True), and_(True, False)))
le(_if_then_else(True, 2, _if_then_else(ge(zeros_diff_cols, _if_then_else(False, zeros_diff_cols, max_row_clue)), _if_then_else(False, _if_then_else(or_(False, False), _if_then_else(and_(False, False), 3, 2), _if_then_else(le(max_col_clue, zeros_diff_rows), max_row_clue, max_row_clue)), 34), _if_then_else(True, 4, 3))), _if_then_else(False, compare_blocks_cols, 0))
ge(_if_then_else(and_(le(0, 2), or_(False, False)), _if_then_else(ge(zeros_diff_rows, 2), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(False, 1, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(or_(False, False), 87, 0))), _if_then_else(le(_if_then_else(False, zeros_diff_cols, 1), _if_then_else(True, compare_blocks_cols, 0)), _if_then_else(ge(2, 1), _if_then_else(False, max_col_clue, ones_diff_rows), _if_then_else(True, 2, max_col_clue)), _if_then_else(and_(False, False), _if_then_else(True, max_col_clue, ones_diff_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_cols))))
or_(le(zeros_diff_cols, zeros_diff_rows), and_(or_(True, and_(True, False)), le(0, _if_then_else(False, 4, _if_then_else(ge(compare_blocks_cols, _if_then_else(and_(False, ge(compare_blocks_rows, _if_then_else(False, compare_blocks_rows, compare_blocks_rows))), compare_blocks_rows, 1)), _if_then_else(True, _if_then_else(and_(False, ge(4, compare_blocks_rows)), _if_then_else(and_(False, False), 2, 1), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), 4, compare_blocks_rows)), 78), _if_then_else(or_(True, False), _if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, 0, _if_then_else(False, 3, _if_then_else(False, ones_diff_rows, 2)))))))))
and_(False, ge(_if_then_else(False, _if_then_else(and_(True, True), max_col_clue, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, max_col_clue)), _if_then_else(ge(max_row_clue, zeros_diff_cols), _if_then_else(False, max_row_clue, 2), _if_then_else(True, compare_blocks_cols, ones_diff_cols))))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
and_(le(4, zeros_diff_rows), and_(False, True))
ge(24, _if_then_else(True, ones_diff_rows, max_row_clue))
or_(ge(_if_then_else(True, compare_blocks_cols, _if_then_else(False, compare_blocks_cols, ones_diff_cols)), _if_then_else(and_(True, True), _if_then_else(True, 3, 3), _if_then_else(False, zeros_diff_rows, ones_diff_rows))), or_(and_(or_(False, True), False), and_(or_(False, False), and_(True, True))))
or_(and_(True, ge(3, zeros_diff_rows)), ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_cols, max_row_clue), _if_then_else(True, 4, 3)), ones_diff_rows))
or_(and_(and_(False, True), True), or_(False, True))
VAL TREES:
add(mul(ones_diff_cols, 52), mul(compare_blocks_cols, mul(add(mul(add(add(compare_blocks_cols, 89), mul(ones_diff_cols, -76)), mul(mul(zeros_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_cols))), add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))), add(mul(add(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, 30)), add(mul(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, zeros_diff_cols))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), mul(add(-28, 13), add(compare_blocks_cols, compare_blocks_rows)))))))
add(add(add(add(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols))), add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)), mul(mul(add(mul(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols)), add(mul(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, compare_blocks_cols))), mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(ones_diff_rows, -31)), add(add(ones_diff_cols, ones_diff_cols), add(18, 66))))))
add(mul(zeros_diff_cols, 30), add(zeros_diff_rows, mul(add(-50, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_cols))))
add(mul(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols))
add(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows))
add(mul(add(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_rows)), mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, -54))), add(add(mul(zeros_diff_rows, zeros_diff_rows), mul(20, ones_diff_cols)), mul(mul(compare_blocks_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))), mul(add(add(mul(42, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(ones_diff_rows, ones_diff_rows), mul(add(mul(mul(compare_blocks_rows, zeros_diff_cols), -34), add(zeros_diff_rows, ones_diff_cols)), ones_diff_cols))), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows)))))
COND TREES:
or_(and_(and_(True, False), le(max_row_clue, max_row_clue)), and_(False, le(ones_diff_cols, compare_blocks_cols)))
le(_if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, max_col_clue, zeros_diff_cols))
and_(ge(1, 2), and_(True, True))
le(_if_then_else(True, 3, _if_then_else(False, ones_diff_cols, 0)), _if_then_else(True, ones_diff_cols, zeros_diff_rows))
and_(le(1, compare_blocks_rows), False)
VAL TREES:
add(add(ones_diff_rows, mul(compare_blocks_cols, compare_blocks_rows)), add(add(-50, compare_blocks_rows), -29))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(add(ones_diff_cols, ones_diff_cols), mul(add(zeros_diff_rows, ones_diff_rows), add(compare_blocks_cols, ones_diff_cols))))
add(add(add(-63, zeros_diff_cols), mul(49, 62)), mul(-33, add(add(ones_diff_rows, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols))))
add(add(mul(mul(compare_blocks_cols, compare_blocks_rows), mul(add(zeros_diff_rows, compare_blocks_cols), ones_diff_cols)), zeros_diff_cols), add(mul(add(compare_blocks_cols, mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_rows))), add(zeros_diff_cols, ones_diff_cols)), ones_diff_cols))
add(add(compare_blocks_cols, zeros_diff_rows), add(42, mul(add(add(mul(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, -46), mul(compare_blocks_rows, 43))), mul(add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)), add(add(mul(add(mul(-87, compare_blocks_cols), add(zeros_diff_cols, ones_diff_cols)), mul(mul(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows))), compare_blocks_rows), mul(compare_blocks_rows, ones_diff_rows))))))
add(add(add(add(zeros_diff_rows, 83), mul(zeros_diff_cols, -6)), zeros_diff_rows), mul(mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)), ones_diff_rows))
COND TREES:
and_(and_(and_(True, True), True), ge(max_row_clue, _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, max_row_clue), _if_then_else(True, 4, 3))))
ge(_if_then_else(False, max_row_clue, max_row_clue), _if_then_else(True, _if_then_else(True, compare_blocks_cols, _if_then_else(False, 3, 2)), compare_blocks_cols))
ge(_if_then_else(True, zeros_diff_cols, 2), _if_then_else(True, _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_row_clue), _if_then_else(False, max_col_clue, compare_blocks_rows)), _if_then_else(le(ones_diff_rows, max_row_clue), _if_then_else(True, max_col_clue, 4), _if_then_else(True, zeros_diff_rows, max_col_clue))))
ge(_if_then_else(True, compare_blocks_cols, compare_blocks_cols), _if_then_else(le(1, _if_then_else(False, zeros_diff_cols, 2)), max_col_clue, zeros_diff_cols))
ge(_if_then_else(False, -81, 1), _if_then_else(True, max_col_clue, 3))
VAL TREES:
mul(add(mul(add(add(zeros_diff_rows, 85), add(compare_blocks_cols, compare_blocks_cols)), add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(mul(10, -86), mul(-78, compare_blocks_cols)))), mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(54, zeros_diff_rows))), mul(mul(mul(ones_diff_cols, zeros_diff_rows), mul(-49, compare_blocks_rows)), mul(add(compare_blocks_rows, -24), add(ones_diff_rows, compare_blocks_cols)))))
mul(mul(ones_diff_cols, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, zeros_diff_rows), mul(mul(compare_blocks_rows, zeros_diff_cols), ones_diff_cols))
mul(add(add(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(add(ones_diff_rows, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_rows)))
mul(add(mul(mul(zeros_diff_rows, 88), mul(zeros_diff_cols, zeros_diff_cols)), add(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_cols))), mul(mul(add(ones_diff_cols, zeros_diff_rows), mul(1, ones_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, compare_blocks_cols))))
add(mul(mul(ones_diff_cols, -11), add(-15, 48)), mul(add(90, ones_diff_cols), add(zeros_diff_rows, 22)))
COND TREES:
and_(le(4, zeros_diff_rows), le(max_row_clue, max_row_clue))
ge(24, _if_then_else(True, ones_diff_rows, max_row_clue))
or_(ge(_if_then_else(True, compare_blocks_cols, _if_then_else(False, compare_blocks_cols, ones_diff_cols)), _if_then_else(and_(True, True), _if_then_else(True, 3, 3), _if_then_else(False, zeros_diff_rows, ones_diff_rows))), or_(and_(or_(False, True), False), and_(or_(False, False), and_(True, True))))
or_(and_(True, ge(3, zeros_diff_rows)), ge(_if_then_else(False, ones_diff_cols, 0), ones_diff_rows))
or_(and_(and_(False, True), True), or_(False, True))
VAL TREES:
add(mul(ones_diff_cols, 52), mul(compare_blocks_cols, zeros_diff_rows))
add(add(add(add(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols))), add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols))))
mul(add(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_cols))
add(mul(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols))
add(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows))
add(mul(add(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_rows)), mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, -54))), add(add(mul(zeros_diff_rows, zeros_diff_rows), mul(20, ones_diff_cols)), mul(mul(compare_blocks_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))), mul(add(add(mul(42, compare_blocks_rows), add(mul(mul(compare_blocks_cols, compare_blocks_rows), add(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_cols, compare_blocks_rows))), ones_diff_cols)), mul(add(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, ones_diff_cols))), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows)))))
COND TREES:
ge(_if_then_else(or_(ge(1, max_row_clue), or_(or_(True, False), True)), 79, -96), compare_blocks_cols)
and_(le(compare_blocks_cols, 3), False)
or_(and_(ge(_if_then_else(ge(0, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 4, ones_diff_rows)), _if_then_else(False, compare_blocks_rows, ones_diff_cols)), and_(and_(and_(True, True), and_(False, True)), or_(ge(ones_diff_cols, ones_diff_cols), and_(False, True)))), ge(zeros_diff_rows, _if_then_else(True, _if_then_else(or_(True, True), _if_then_else(False, 2, 4), _if_then_else(True, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, 2), _if_then_else(False, 0, 3)))))
or_(le(1, _if_then_else(ge(max_col_clue, 4), zeros_diff_cols, 2)), False)
or_(False, False)
VAL TREES:
add(mul(compare_blocks_cols, add(mul(zeros_diff_cols, -4), mul(ones_diff_cols, ones_diff_rows))), mul(mul(83, ones_diff_cols), compare_blocks_cols))
mul(add(mul(add(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, ones_diff_cols)), add(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows))), mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(zeros_diff_cols, -38)), add(mul(-32, zeros_diff_rows), add(ones_diff_cols, ones_diff_cols)))), ones_diff_rows), add(zeros_diff_cols, ones_diff_rows))
add(add(add(mul(compare_blocks_cols, add(add(zeros_diff_rows, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols))), mul(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(38, ones_diff_rows))), add(mul(add(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), mul(mul(78, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_rows))))
add(add(mul(ones_diff_cols, ones_diff_rows), mul(mul(zeros_diff_rows, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_cols))), mul(add(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_cols, 17), mul(ones_diff_rows, ones_diff_rows)), add(add(21, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)))
add(mul(mul(zeros_diff_rows, compare_blocks_cols), add(mul(add(add(mul(add(compare_blocks_cols, ones_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows))), mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(12, ones_diff_rows)), mul(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, 94)))), add(mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(88, compare_blocks_cols)), mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_cols))), add(mul(mul(ones_diff_cols, zeros_diff_rows), mul(compare_blocks_rows, 57)), add(add(zeros_diff_cols, -32), add(zeros_diff_cols, compare_blocks_cols))))), ones_diff_rows)), mul(add(83, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows)))
COND TREES:
or_(or_(True, ge(_if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 2, ones_diff_cols))), le(zeros_diff_rows, 4))
le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, ones_diff_cols))
ge(_if_then_else(False, max_row_clue, _if_then_else(and_(ge(0, ones_diff_rows), True), _if_then_else(or_(True, False), ones_diff_cols, 0), _if_then_else(True, compare_blocks_rows, compare_blocks_rows))), _if_then_else(ge(32, -44), compare_blocks_cols, compare_blocks_cols))
or_(le(zeros_diff_cols, -26), and_(or_(True, or_(and_(or_(or_(or_(False, True), or_(True, False)), ge(_if_then_else(False, 2, 1), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(ge(2, 0), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(True, 0, zeros_diff_cols)), _if_then_else(and_(False, False), _if_then_else(True, 1, max_col_clue), _if_then_else(False, 3, 0)))), ge(_if_then_else(ge(_if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, max_col_clue, 1)), _if_then_else(ge(max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, 0)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_cols))), _if_then_else(le(_if_then_else(False, zeros_diff_cols, compare_blocks_rows), _if_then_else(True, 3, 3)), _if_then_else(ge(80, max_col_clue), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(True, compare_blocks_cols, 1)), _if_then_else(le(compare_blocks_cols, -5), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 1, compare_blocks_rows)))))), le(0, 2)))
and_(or_(True, True), or_(True, True))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
or_(or_(or_(True, False), True), le(_if_then_else(ge(compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 1, zeros_diff_cols), _if_then_else(False, max_col_clue, ones_diff_cols)), _if_then_else(False, _if_then_else(True, zeros_diff_cols, 0), _if_then_else(False, 73, 31))))
le(_if_then_else(or_(and_(True, ge(3, ones_diff_rows)), or_(False, True)), compare_blocks_cols, compare_blocks_rows), _if_then_else(ge(max_col_clue, compare_blocks_rows), _if_then_else(le(3, 4), _if_then_else(False, max_col_clue, -31), _if_then_else(False, ones_diff_rows, _if_then_else(False, 3, zeros_diff_rows))), ones_diff_cols))
ge(_if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(ge(_if_then_else(True, _if_then_else(ge(_if_then_else(ge(0, 0), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(False, max_row_clue, max_col_clue)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_cols, 1), _if_then_else(True, zeros_diff_rows, 80))), _if_then_else(or_(le(3, zeros_diff_rows), le(2, zeros_diff_rows)), _if_then_else(ge(1, 3), _if_then_else(True, ones_diff_rows, 4), _if_then_else(False, zeros_diff_rows, max_row_clue)), _if_then_else(le(1, 0), _if_then_else(True, 1, 1), _if_then_else(False, compare_blocks_rows, 1))), _if_then_else(le(_if_then_else(False, 4, zeros_diff_cols), _if_then_else(False, max_row_clue, max_col_clue)), _if_then_else(and_(True, True), _if_then_else(True, -15, 2), _if_then_else(True, 4, ones_diff_rows)), _if_then_else(ge(0, 0), _if_then_else(False, compare_blocks_cols, 0), _if_then_else(False, ones_diff_rows, ones_diff_rows)))), 93), _if_then_else(False, max_row_clue, ones_diff_cols)), _if_then_else(or_(True, False), _if_then_else(True, max_col_clue, 3), _if_then_else(False, compare_blocks_cols, max_row_clue)), _if_then_else(le(zeros_diff_cols, 4), _if_then_else(True, ones_diff_cols, 1), _if_then_else(True, compare_blocks_rows, 4))))
or_(and_(ge(_if_then_else(or_(and_(ge(max_col_clue, -36), ge(max_row_clue, 1)), or_(or_(True, True), ge(max_col_clue, max_col_clue))), _if_then_else(le(_if_then_else(False, 3, ones_diff_rows), _if_then_else(False, ones_diff_cols, zeros_diff_cols)), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, -45, zeros_diff_cols), _if_then_else(False, 2, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, max_col_clue, 3))), _if_then_else(ge(_if_then_else(False, 4, max_row_clue), _if_then_else(False, 4, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, zeros_diff_cols, max_row_clue)), _if_then_else(ge(max_col_clue, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, ones_diff_rows, 4)))), _if_then_else(False, 3, compare_blocks_rows)), and_(le(1, max_row_clue), and_(True, True))), and_(or_(True, False), ge(max_row_clue, max_col_clue)))
and_(or_(or_(or_(and_(False, True), le(_if_then_else(True, _if_then_else(False, _if_then_else(False, 4, 2), compare_blocks_rows), compare_blocks_rows), 3)), le(_if_then_else(False, ones_diff_rows, _if_then_else(False, compare_blocks_rows, zeros_diff_rows)), compare_blocks_cols)), True), or_(True, True))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
ge(zeros_diff_cols, _if_then_else(le(19, 0), max_row_clue, 1))
ge(_if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(and_(and_(le(_if_then_else(True, ones_diff_cols, 4), _if_then_else(False, zeros_diff_rows, 4)), ge(_if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(False, 4, ones_diff_cols))), and_(le(_if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows)), and_(ge(_if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(ge(_if_then_else(True, ones_diff_cols, -28), 1), _if_then_else(True, 3, zeros_diff_rows), _if_then_else(or_(True, True), zeros_diff_cols, compare_blocks_cols))), and_(False, True)))), zeros_diff_cols, compare_blocks_cols))
or_(ge(_if_then_else(True, compare_blocks_cols, _if_then_else(False, compare_blocks_cols, ones_diff_cols)), _if_then_else(and_(True, True), _if_then_else(True, _if_then_else(True, compare_blocks_cols, _if_then_else(le(38, max_col_clue), compare_blocks_cols, ones_diff_cols)), 3), _if_then_else(False, zeros_diff_rows, ones_diff_rows))), True)
le(_if_then_else(or_(le(_if_then_else(False, compare_blocks_rows, compare_blocks_cols), zeros_diff_cols), ge(max_col_clue, 4)), ones_diff_cols, ones_diff_rows), _if_then_else(or_(le(zeros_diff_rows, compare_blocks_cols), ge(1, 3)), _if_then_else(ge(_if_then_else(and_(False, False), _if_then_else(False, 3, 0), _if_then_else(True, max_col_clue, 3)), _if_then_else(and_(True, False), _if_then_else(False, -89, -71), _if_then_else(False, max_col_clue, 35))), _if_then_else(and_(ge(ones_diff_cols, max_col_clue), or_(True, True)), _if_then_else(or_(False, True), max_col_clue, _if_then_else(True, compare_blocks_cols, 2)), _if_then_else(or_(True, True), _if_then_else(False, 2, 1), _if_then_else(True, 3, -18))), _if_then_else(or_(ge(max_col_clue, zeros_diff_rows), le(4, zeros_diff_cols)), _if_then_else(ge(4, compare_blocks_cols), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_cols, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, 3), _if_then_else(False, 3, ones_diff_rows)))), 2))
le(_if_then_else(False, max_row_clue, max_row_clue), _if_then_else(False, zeros_diff_cols, 4))
VAL TREES:
add(mul(ones_diff_rows, zeros_diff_rows), add(-49, zeros_diff_rows))
add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, -94))
mul(mul(zeros_diff_rows, ones_diff_cols), mul(mul(add(61, ones_diff_cols), zeros_diff_cols), ones_diff_rows))
add(mul(zeros_diff_cols, mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), 67))
mul(add(zeros_diff_rows, -21), add(zeros_diff_rows, zeros_diff_cols))
add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols))
COND TREES:
and_(le(4, _if_then_else(True, 4, 2)), le(max_row_clue, max_row_clue))
ge(24, _if_then_else(le(max_col_clue, compare_blocks_rows), ones_diff_rows, max_row_clue))
or_(ge(_if_then_else(True, compare_blocks_cols, _if_then_else(False, compare_blocks_cols, ones_diff_cols)), _if_then_else(and_(True, True), _if_then_else(True, 3, 3), _if_then_else(False, zeros_diff_rows, ones_diff_rows))), or_(and_(or_(False, True), False), and_(or_(False, False), True)))
or_(and_(True, ge(3, 3)), ge(_if_then_else(False, ones_diff_cols, 0), ones_diff_rows))
or_(and_(and_(False, True), True), or_(False, True))
VAL TREES:
add(mul(ones_diff_cols, 52), mul(compare_blocks_cols, zeros_diff_rows))
add(add(add(add(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols))), add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols))))
add(mul(zeros_diff_cols, 30), add(zeros_diff_rows, ones_diff_rows))
add(mul(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols))
add(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows))
add(mul(add(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_rows)), mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, -54))), add(add(mul(zeros_diff_rows, zeros_diff_rows), mul(20, ones_diff_cols)), mul(mul(compare_blocks_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))), mul(add(add(mul(42, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, ones_diff_cols))), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows)))))
COND TREES:
and_(ge(_if_then_else(and_(False, False), _if_then_else(False, zeros_diff_rows, 3), zeros_diff_rows), _if_then_else(le(ones_diff_cols, ones_diff_rows), _if_then_else(True, zeros_diff_rows, 4), _if_then_else(True, ones_diff_cols, max_row_clue))), or_(or_(le(2, max_col_clue), ge(20, 0)), ge(_if_then_else(False, 0, 1), _if_then_else(False, zeros_diff_cols, max_col_clue))))
and_(False, True)
or_(and_(ge(_if_then_else(ge(0, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 4, ones_diff_rows)), _if_then_else(False, compare_blocks_rows, 0)), or_(ge(_if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), and_(and_(False, False), ge(zeros_diff_cols, max_col_clue)))), ge(_if_then_else(or_(and_(True, False), and_(False, True)), _if_then_else(ge(4, max_row_clue), _if_then_else(True, 0, -14), _if_then_else(False, max_row_clue, 4)), _if_then_else(le(-27, ones_diff_rows), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(True, 2, max_col_clue))), _if_then_else(and_(le(4, 1), or_(and_(ge(_if_then_else(and_(False, False), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(False, 2, 4)), _if_then_else(or_(True, True), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, 3, -9))), or_(or_(or_(False, True), le(2, 3)), and_(and_(True, True), and_(False, False)))), and_(and_(or_(le(4, 0), or_(False, True)), le(_if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, 2, ones_diff_cols))), le(_if_then_else(or_(False, True), _if_then_else(True, zeros_diff_cols, -24), _if_then_else(True, ones_diff_cols, ones_diff_cols)), _if_then_else(ge(1, -34), _if_then_else(and_(True, True), max_row_clue, 25), _if_then_else(False, ones_diff_rows, max_col_clue)))))), _if_then_else(or_(True, True), _if_then_else(False, 2, 4), _if_then_else(True, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, 2), _if_then_else(False, 0, 3)))))
or_(and_(True, or_(True, False)), le(zeros_diff_rows, 4))
or_(or_(False, True), True)
VAL TREES:
add(mul(compare_blocks_cols, zeros_diff_cols), mul(mul(83, ones_diff_cols), compare_blocks_cols))
mul(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows))
add(add(add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(38, ones_diff_rows))), add(mul(add(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), mul(mul(78, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_rows))))
add(add(mul(ones_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(add(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_cols, 17), mul(ones_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, ones_diff_rows), add(7, zeros_diff_cols)))
add(mul(mul(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(83, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows)))
COND TREES:
or_(or_(True, ge(max_row_clue, _if_then_else(ge(_if_then_else(False, max_col_clue, ones_diff_rows), compare_blocks_rows), _if_then_else(True, _if_then_else(True, max_col_clue, ones_diff_cols), _if_then_else(False, ones_diff_cols, -35)), _if_then_else(False, _if_then_else(and_(False, True), ones_diff_cols, 2), -47)))), or_(and_(False, True), False))
and_(or_(ge(_if_then_else(False, 2, compare_blocks_cols), max_col_clue), or_(or_(True, False), or_(True, False))), False)
or_(or_(False, False), and_(True, True))
and_(le(_if_then_else(False, _if_then_else(True, _if_then_else(ge(_if_then_else(False, _if_then_else(or_(False, True), _if_then_else(True, 0, max_col_clue), _if_then_else(False, 4, compare_blocks_rows)), _if_then_else(False, _if_then_else(False, zeros_diff_rows, 85), compare_blocks_cols)), compare_blocks_cols), _if_then_else(False, 4, _if_then_else(or_(True, or_(True, False)), zeros_diff_cols, 3)), _if_then_else(False, 90, ones_diff_rows)), 1), _if_then_else(False, ones_diff_rows, 3)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), 4, _if_then_else(True, 1, 1))), and_(or_(False, or_(False, True)), or_(and_(True, True), and_(True, False))))
le(_if_then_else(or_(False, False), _if_then_else(True, 0, ones_diff_cols), _if_then_else(True, 3, 4)), _if_then_else(False, _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(or_(or_(ge(zeros_diff_cols, ones_diff_cols), and_(True, True)), False), 53, zeros_diff_rows)))
VAL TREES:
mul(mul(add(mul(-51, compare_blocks_cols), add(ones_diff_cols, 58)), mul(mul(zeros_diff_rows, zeros_diff_rows), add(compare_blocks_cols, 19))), mul(add(add(69, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(-83, 36), add(-91, zeros_diff_cols))))
mul(mul(mul(-86, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)))
add(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols))
mul(add(mul(ones_diff_cols, -1), ones_diff_cols), add(add(compare_blocks_cols, ones_diff_rows), zeros_diff_cols))
add(mul(compare_blocks_cols, compare_blocks_cols), add(mul(ones_diff_rows, add(ones_diff_rows, zeros_diff_cols)), zeros_diff_cols))
add(mul(mul(zeros_diff_cols, zeros_diff_cols), compare_blocks_rows), mul(ones_diff_rows, add(zeros_diff_rows, zeros_diff_rows)))
COND TREES:
or_(le(3, _if_then_else(True, max_col_clue, 65)), le(_if_then_else(False, 2, _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(False, max_row_clue, _if_then_else(False, max_row_clue, zeros_diff_cols)), _if_then_else(False, 0, 4))), compare_blocks_cols))
le(_if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, zeros_diff_cols))
and_(False, or_(le(_if_then_else(False, _if_then_else(False, ones_diff_rows, _if_then_else(True, _if_then_else(ge(ones_diff_cols, -18), _if_then_else(False, ones_diff_cols, zeros_diff_rows), _if_then_else(and_(True, True), _if_then_else(True, 30, 1), _if_then_else(False, 2, 1))), max_row_clue)), _if_then_else(True, ones_diff_rows, ones_diff_cols)), _if_then_else(False, -24, -58)), True))
ge(compare_blocks_cols, 26)
or_(or_(or_(True, False), le(max_col_clue, max_col_clue)), False)
VAL TREES:
mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_cols))
add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_cols, add(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, -41))))
add(add(mul(mul(add(compare_blocks_cols, ones_diff_cols), mul(-85, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_rows))), mul(mul(add(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)), mul(mul(compare_blocks_rows, 44), add(compare_blocks_rows, ones_diff_cols))), mul(add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, zeros_diff_rows), add(-49, ones_diff_cols)))))
add(add(add(add(mul(ones_diff_rows, ones_diff_rows), add(compare_blocks_rows, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_cols, -77))), ones_diff_rows), add(ones_diff_cols, zeros_diff_rows))
mul(add(add(add(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_rows)), add(zeros_diff_cols, compare_blocks_cols)), add(75, zeros_diff_cols))
mul(mul(zeros_diff_cols, -79), mul(add(add(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_rows, add(zeros_diff_rows, compare_blocks_rows))), ones_diff_cols))
COND TREES:
ge(_if_then_else(or_(ge(1, max_row_clue), or_(True, False)), 79, -96), _if_then_else(True, ones_diff_cols, 3))
and_(le(compare_blocks_cols, 3), le(max_col_clue, max_row_clue))
or_(and_(ge(_if_then_else(ge(0, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 4, ones_diff_rows)), _if_then_else(False, compare_blocks_rows, 0)), and_(and_(and_(True, True), and_(False, True)), or_(ge(ones_diff_cols, ones_diff_cols), and_(False, True)))), ge(_if_then_else(or_(and_(True, False), and_(False, True)), _if_then_else(ge(4, max_row_clue), _if_then_else(True, 0, -14), _if_then_else(False, max_row_clue, 4)), _if_then_else(le(-27, ones_diff_rows), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(True, 2, max_col_clue))), _if_then_else(True, _if_then_else(or_(True, True), _if_then_else(False, 2, 4), _if_then_else(True, max_col_clue, zeros_diff_cols)), _if_then_else(le(zeros_diff_cols, 0), _if_then_else(True, max_col_clue, 2), _if_then_else(False, 0, 3)))))
or_(le(1, _if_then_else(ge(max_col_clue, 4), zeros_diff_cols, 2)), le(2, compare_blocks_rows))
or_(False, True)
VAL TREES:
add(mul(compare_blocks_cols, zeros_diff_cols), mul(mul(83, ones_diff_cols), compare_blocks_cols))
mul(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows))
add(add(add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(38, ones_diff_rows))), add(mul(add(add(mul(zeros_diff_cols, 25), mul(76, zeros_diff_rows)), compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), mul(mul(78, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_rows))))
add(add(mul(ones_diff_cols, mul(add(compare_blocks_rows, add(zeros_diff_cols, zeros_diff_cols)), add(zeros_diff_rows, mul(42, mul(add(ones_diff_rows, ones_diff_cols), 36))))), mul(ones_diff_cols, compare_blocks_rows)), mul(add(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_cols, 17), mul(ones_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, ones_diff_rows), add(7, zeros_diff_cols)))
add(mul(mul(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(83, add(mul(compare_blocks_rows, ones_diff_cols), mul(ones_diff_rows, zeros_diff_rows))), mul(ones_diff_rows, zeros_diff_rows)))
COND TREES:
and_(and_(and_(True, True), True), ge(max_row_clue, _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, max_row_clue), _if_then_else(True, 4, 3))))
ge(_if_then_else(False, max_row_clue, max_row_clue), _if_then_else(True, _if_then_else(True, compare_blocks_cols, _if_then_else(False, 3, 2)), compare_blocks_cols))
ge(_if_then_else(True, zeros_diff_cols, 2), _if_then_else(True, _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_row_clue), _if_then_else(False, max_col_clue, compare_blocks_rows)), _if_then_else(le(ones_diff_rows, max_row_clue), _if_then_else(True, max_col_clue, 4), _if_then_else(True, zeros_diff_rows, max_col_clue))))
ge(_if_then_else(True, compare_blocks_cols, compare_blocks_cols), _if_then_else(le(1, _if_then_else(False, zeros_diff_cols, 2)), max_col_clue, zeros_diff_cols))
ge(_if_then_else(False, -81, 1), _if_then_else(True, max_col_clue, 3))
VAL TREES:
mul(add(mul(add(add(zeros_diff_rows, 85), add(compare_blocks_cols, compare_blocks_cols)), add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(mul(10, -86), mul(-78, compare_blocks_cols)))), mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(54, zeros_diff_rows))), mul(mul(mul(ones_diff_cols, zeros_diff_rows), mul(-49, compare_blocks_rows)), mul(add(compare_blocks_rows, -24), add(ones_diff_rows, compare_blocks_cols)))))
mul(mul(ones_diff_cols, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, zeros_diff_rows), mul(mul(compare_blocks_rows, zeros_diff_cols), ones_diff_cols))
mul(add(add(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(add(ones_diff_rows, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_rows)))
mul(add(mul(mul(zeros_diff_rows, 88), mul(zeros_diff_cols, zeros_diff_cols)), add(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_cols))), mul(mul(add(ones_diff_cols, zeros_diff_rows), mul(1, ones_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, compare_blocks_cols))))
add(mul(mul(ones_diff_cols, -11), add(-15, 48)), mul(add(90, ones_diff_cols), add(zeros_diff_rows, 22)))
COND TREES:
or_(le(3, _if_then_else(True, max_col_clue, 65)), le(_if_then_else(False, 2, _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(False, ones_diff_rows, 2), _if_then_else(False, 0, 4))), compare_blocks_cols))
le(_if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(ge(_if_then_else(False, 2, compare_blocks_cols), -66), compare_blocks_cols, zeros_diff_cols))
and_(False, or_(False, True))
ge(_if_then_else(or_(le(_if_then_else(False, 3, compare_blocks_cols), zeros_diff_cols), ge(max_col_clue, 4)), 3, compare_blocks_rows), zeros_diff_rows)
or_(or_(or_(True, False), le(ones_diff_cols, max_col_clue)), ge(ones_diff_rows, _if_then_else(False, _if_then_else(False, ones_diff_cols, _if_then_else(False, compare_blocks_cols, ones_diff_cols)), 4)))
VAL TREES:
mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_cols))
add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_rows))
add(add(mul(mul(add(compare_blocks_cols, ones_diff_cols), mul(-85, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_rows))), mul(mul(add(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)), mul(mul(compare_blocks_rows, 44), add(compare_blocks_rows, ones_diff_cols))), mul(add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, zeros_diff_rows), add(-49, ones_diff_cols)))))
add(add(ones_diff_rows, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows))
mul(add(mul(ones_diff_rows, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_cols)), add(75, zeros_diff_cols))
mul(mul(zeros_diff_cols, -79), mul(compare_blocks_cols, ones_diff_cols))
COND TREES:
or_(or_(True, ge(max_col_clue, compare_blocks_cols)), or_(and_(False, False), and_(True, False)))
and_(le(zeros_diff_cols, 2), True)
or_(or_(False, False), le(_if_then_else(and_(or_(True, or_(and_(le(0, max_col_clue), False), le(2, 1))), False), max_col_clue, _if_then_else(True, ones_diff_cols, ones_diff_cols)), compare_blocks_rows))
and_(le(_if_then_else(False, 4, _if_then_else(and_(or_(and_(False, True), False), le(1, 3)), ones_diff_rows, 3)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(False, 4, ones_diff_cols), _if_then_else(True, 1, 1))), and_(or_(le(zeros_diff_cols, compare_blocks_rows), or_(False, True)), or_(le(_if_then_else(False, -42, zeros_diff_cols), _if_then_else(False, 4, compare_blocks_rows)), and_(True, False))))
le(_if_then_else(or_(False, False), _if_then_else(True, 1, ones_diff_cols), ones_diff_cols), _if_then_else(and_(True, True), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(True, 53, zeros_diff_rows)))
VAL TREES:
mul(mul(add(mul(-51, compare_blocks_cols), add(ones_diff_cols, 58)), mul(mul(zeros_diff_rows, zeros_diff_rows), add(compare_blocks_cols, 19))), mul(add(add(69, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(-83, 36), add(-91, zeros_diff_cols))))
mul(mul(mul(-86, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)))
add(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols))
mul(add(mul(ones_diff_cols, -1), ones_diff_cols), add(add(compare_blocks_cols, ones_diff_rows), zeros_diff_cols))
add(mul(compare_blocks_cols, compare_blocks_cols), add(mul(ones_diff_rows, add(ones_diff_rows, zeros_diff_cols)), zeros_diff_cols))
add(mul(mul(zeros_diff_cols, zeros_diff_cols), compare_blocks_rows), mul(ones_diff_rows, add(zeros_diff_rows, zeros_diff_rows)))
COND TREES:
or_(or_(or_(True, False), True), le(_if_then_else(False, compare_blocks_rows, _if_then_else(False, max_row_clue, max_row_clue)), 0))
le(_if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(ge(4, 4), _if_then_else(True, 3, 3), max_row_clue))
ge(_if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(or_(False, True), 2, zeros_diff_rows))
or_(False, False)
and_(or_(or_(False, True), True), or_(True, False))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
ge(_if_then_else(or_(ge(1, max_row_clue), or_(True, False)), 79, -96), _if_then_else(True, max_row_clue, 3))
and_(le(compare_blocks_cols, max_col_clue), le(max_col_clue, ones_diff_cols))
or_(and_(ge(_if_then_else(ge(0, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 4, ones_diff_rows)), _if_then_else(False, compare_blocks_rows, 0)), and_(and_(and_(True, True), and_(False, True)), or_(ge(ones_diff_cols, ones_diff_cols), and_(False, True)))), ge(_if_then_else(or_(and_(True, False), and_(False, True)), _if_then_else(ge(4, max_row_clue), _if_then_else(True, 0, -14), _if_then_else(False, max_row_clue, 4)), _if_then_else(le(-27, ones_diff_rows), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(True, 2, max_col_clue))), _if_then_else(True, _if_then_else(or_(True, True), _if_then_else(False, compare_blocks_cols, 4), _if_then_else(True, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, 2), _if_then_else(False, 0, 3)))))
or_(le(1, _if_then_else(ge(max_col_clue, 4), zeros_diff_cols, 2)), le(2, compare_blocks_rows))
or_(False, True)
VAL TREES:
add(mul(compare_blocks_cols, zeros_diff_cols), mul(mul(83, ones_diff_cols), mul(add(add(add(90, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_cols), mul(ones_diff_cols, ones_diff_rows))), mul(mul(mul(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_cols))))))
mul(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, add(add(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, zeros_diff_cols))))
add(add(add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(38, ones_diff_rows))), add(mul(add(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), mul(mul(78, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_rows))))
add(add(add(mul(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols))), mul(ones_diff_cols, compare_blocks_rows)), mul(add(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_cols, 17), mul(ones_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, ones_diff_rows), add(7, zeros_diff_cols)))
add(mul(mul(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(83, add(add(mul(ones_diff_cols, ones_diff_cols), 48), mul(zeros_diff_rows, ones_diff_rows))), mul(ones_diff_rows, zeros_diff_rows)))
COND TREES:
or_(or_(True, ge(max_col_clue, 2)), le(_if_then_else(le(0, 1), _if_then_else(False, ones_diff_rows, compare_blocks_cols), _if_then_else(or_(True, False), zeros_diff_cols, max_col_clue)), 4))
and_(le(zeros_diff_cols, 4), False)
or_(or_(False, False), le(max_row_clue, _if_then_else(False, -24, -58)))
and_(le(_if_then_else(False, 4, _if_then_else(False, ones_diff_rows, 3)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(False, 4, ones_diff_cols), _if_then_else(True, 1, 1))), and_(or_(False, or_(False, True)), or_(and_(True, True), and_(True, False))))
le(_if_then_else(or_(False, False), _if_then_else(True, 0, max_col_clue), _if_then_else(True, 3, 4)), _if_then_else(and_(True, and_(True, False)), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(True, 53, zeros_diff_rows)))
VAL TREES:
mul(mul(add(mul(-51, compare_blocks_cols), add(ones_diff_cols, 58)), mul(mul(zeros_diff_rows, zeros_diff_rows), add(compare_blocks_cols, 19))), mul(add(add(69, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(-83, 36), add(-91, zeros_diff_cols))))
mul(mul(mul(add(add(ones_diff_rows, ones_diff_cols), mul(ones_diff_cols, zeros_diff_rows)), ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)))
add(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols))
mul(add(mul(ones_diff_cols, -1), ones_diff_cols), add(add(compare_blocks_cols, ones_diff_rows), zeros_diff_cols))
add(mul(compare_blocks_cols, compare_blocks_cols), add(mul(mul(add(ones_diff_rows, mul(compare_blocks_rows, compare_blocks_rows)), mul(compare_blocks_cols, ones_diff_cols)), add(ones_diff_rows, zeros_diff_cols)), zeros_diff_cols))
add(mul(add(mul(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), compare_blocks_rows), mul(ones_diff_rows, add(zeros_diff_rows, zeros_diff_rows)))
COND TREES:
or_(or_(or_(le(_if_then_else(False, ones_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), le(_if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, 3, zeros_diff_rows))), True), False)
le(_if_then_else(and_(False, False), compare_blocks_cols, _if_then_else(and_(True, and_(and_(True, False), ge(zeros_diff_cols, -5))), max_col_clue, compare_blocks_rows)), _if_then_else(False, compare_blocks_cols, ones_diff_cols))
ge(_if_then_else(or_(False, True), _if_then_else(and_(or_(True, True), False), max_col_clue, _if_then_else(True, ones_diff_rows, ones_diff_cols)), ones_diff_cols), _if_then_else(True, compare_blocks_cols, compare_blocks_cols))
or_(or_(le(0, 15), le(3, zeros_diff_cols)), and_(or_(True, False), le(0, 2)))
and_(or_(ge(_if_then_else(or_(or_(False, False), ge(zeros_diff_cols, 2)), _if_then_else(or_(False, False), _if_then_else(True, 4, ones_diff_cols), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(ge(1, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_cols), _if_then_else(False, -25, zeros_diff_cols))), _if_then_else(ge(_if_then_else(False, 0, ones_diff_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(le(_if_then_else(le(_if_then_else(True, zeros_diff_rows, -14), _if_then_else(True, 41, zeros_diff_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_cols, 4), _if_then_else(False, zeros_diff_rows, max_col_clue)), _if_then_else(ge(compare_blocks_cols, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, zeros_diff_rows, max_row_clue))), _if_then_else(and_(and_(True, False), or_(False, False)), _if_then_else(le(ones_diff_cols, 1), _if_then_else(False, 2, 4), _if_then_else(True, ones_diff_rows, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, 17, 0)))), 2, 2), _if_then_else(True, ones_diff_cols, ones_diff_rows)), _if_then_else(le(compare_blocks_rows, ones_diff_cols), _if_then_else(False, 92, max_col_clue), _if_then_else(True, -31, 1)))), and_(or_(ge(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, max_col_clue, max_row_clue)), le(_if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(True, ones_diff_rows, zeros_diff_cols))), or_(or_(or_(False, True), ge(ones_diff_rows, 3)), le(_if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(False, compare_blocks_rows, ones_diff_cols))))), or_(True, True))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, add(add(ones_diff_rows, mul(compare_blocks_rows, compare_blocks_rows)), add(ones_diff_rows, 4))))
add(add(add(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(add(add(-31, zeros_diff_cols), mul(add(compare_blocks_cols, 15), add(compare_blocks_cols, zeros_diff_cols))), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(add(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_rows))), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
or_(le(max_col_clue, zeros_diff_rows), le(_if_then_else(False, ones_diff_rows, 2), _if_then_else(False, _if_then_else(or_(le(72, ones_diff_rows), le(max_col_clue, 4)), _if_then_else(or_(False, True), _if_then_else(False, 2, 1), _if_then_else(False, 2, _if_then_else(False, max_col_clue, 21))), _if_then_else(or_(True, False), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, -51, 4))), max_col_clue)))
or_(le(max_col_clue, _if_then_else(False, compare_blocks_rows, _if_then_else(and_(True, True), _if_then_else(True, 4, -21), _if_then_else(False, compare_blocks_rows, compare_blocks_cols)))), True)
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), _if_then_else(False, max_row_clue, 4), _if_then_else(or_(False, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), ones_diff_cols), _if_then_else(ge(2, ones_diff_rows), _if_then_else(True, max_row_clue, max_col_clue), _if_then_else(True, 2, _if_then_else(and_(and_(ge(ones_diff_rows, 1), or_(False, False)), or_(le(compare_blocks_cols, compare_blocks_cols), le(zeros_diff_rows, max_col_clue))), _if_then_else(le(_if_then_else(True, 4, ones_diff_cols), _if_then_else(True, compare_blocks_rows, max_col_clue)), _if_then_else(ge(zeros_diff_cols, 2), _if_then_else(False, max_row_clue, compare_blocks_rows), compare_blocks_rows), _if_then_else(or_(False, False), _if_then_else(True, 4, 3), _if_then_else(False, zeros_diff_cols, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, -93, 4)), _if_then_else(le(-87, zeros_diff_rows), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, 0)), _if_then_else(or_(True, True), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, max_row_clue, compare_blocks_cols))))))))
and_(ge(zeros_diff_rows, _if_then_else(and_(True, False), _if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(False, 4, 2))), le(_if_then_else(False, 0, -77), _if_then_else(False, 3, compare_blocks_rows)))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), compare_blocks_cols), _if_then_else(and_(False, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), 3, _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
ge(zeros_diff_cols, _if_then_else(or_(False, True), max_row_clue, _if_then_else(False, zeros_diff_rows, -64)))
ge(_if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, zeros_diff_cols, compare_blocks_cols))
or_(ge(_if_then_else(True, ones_diff_cols, _if_then_else(True, max_row_clue, -16)), _if_then_else(False, max_col_clue, compare_blocks_cols)), True)
le(_if_then_else(False, ones_diff_cols, _if_then_else(True, 1, zeros_diff_rows)), _if_then_else(le(_if_then_else(False, -42, zeros_diff_cols), compare_blocks_rows), zeros_diff_rows, 2))
le(_if_then_else(and_(True, False), max_row_clue, max_row_clue), _if_then_else(True, ones_diff_rows, -67))
VAL TREES:
add(mul(ones_diff_rows, zeros_diff_rows), add(-49, zeros_diff_rows))
add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, -94))
mul(mul(zeros_diff_rows, ones_diff_cols), mul(mul(add(61, ones_diff_cols), zeros_diff_cols), ones_diff_rows))
add(mul(zeros_diff_cols, mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), 67))
mul(add(zeros_diff_rows, -21), add(zeros_diff_rows, zeros_diff_cols))
add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols))
COND TREES:
and_(or_(le(max_col_clue, ones_diff_rows), False), le(max_row_clue, max_row_clue))
ge(24, compare_blocks_rows)
or_(le(_if_then_else(ge(max_col_clue, -85), _if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, -14), _if_then_else(True, 0, ones_diff_cols))), or_(and_(or_(False, True), False), and_(or_(False, False), and_(True, True))))
or_(and_(True, ge(3, zeros_diff_rows)), False)
or_(and_(and_(False, True), True), or_(False, True))
VAL TREES:
add(mul(ones_diff_cols, 52), mul(compare_blocks_cols, zeros_diff_rows))
add(add(add(add(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols))), add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols))))
add(mul(zeros_diff_cols, 30), add(zeros_diff_rows, ones_diff_rows))
add(mul(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols))
add(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows))
add(mul(add(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_rows)), mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, -54))), add(add(mul(zeros_diff_rows, zeros_diff_rows), mul(20, ones_diff_cols)), mul(mul(compare_blocks_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))), mul(add(add(mul(42, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, ones_diff_cols))), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows)))))
COND TREES:
ge(4, _if_then_else(le(4, zeros_diff_rows), compare_blocks_rows, max_row_clue))
and_(or_(True, False), and_(True, False))
or_(or_(False, ge(_if_then_else(True, 3, compare_blocks_rows), _if_then_else(and_(False, True), _if_then_else(False, zeros_diff_rows, compare_blocks_rows), 4))), le(ones_diff_rows, compare_blocks_cols))
le(_if_then_else(le(_if_then_else(ge(3, max_col_clue), _if_then_else(True, 1, 1), compare_blocks_cols), _if_then_else(True, 0, -88)), ones_diff_cols, _if_then_else(False, _if_then_else(True, _if_then_else(ge(_if_then_else(False, ones_diff_cols, 0), ones_diff_rows), 1, ones_diff_rows), ones_diff_rows), 3)), _if_then_else(ge(4, compare_blocks_rows), zeros_diff_rows, 2))
le(3, _if_then_else(and_(True, True), _if_then_else(ge(_if_then_else(or_(ge(compare_blocks_cols, 1), ge(zeros_diff_rows, 2)), _if_then_else(ge(4, max_col_clue), _if_then_else(True, ones_diff_rows, 1), _if_then_else(True, 2, -66)), _if_then_else(le(2, 3), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, max_row_clue))), _if_then_else(and_(ge(ones_diff_rows, 2), and_(False, False)), _if_then_else(le(-48, 2), _if_then_else(False, zeros_diff_rows, 0), _if_then_else(False, 0, 4)), _if_then_else(or_(True, True), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(True, 1, 4)))), _if_then_else(and_(and_(or_(True, False), ge(zeros_diff_rows, compare_blocks_rows)), or_(or_(False, True), and_(False, True))), _if_then_else(and_(ge(-24, -49), and_(True, True)), _if_then_else(or_(True, False), _if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, max_row_clue, 2)), _if_then_else(and_(False, True), _if_then_else(True, -48, 2), _if_then_else(False, 45, ones_diff_rows))), _if_then_else(and_(le(compare_blocks_rows, 1), or_(False, False)), _if_then_else(ge(zeros_diff_rows, 3), _if_then_else(True, compare_blocks_cols, 3), _if_then_else(False, max_row_clue, 2)), _if_then_else(and_(False, False), _if_then_else(False, 4, 3), _if_then_else(False, ones_diff_rows, zeros_diff_cols)))), _if_then_else(ge(_if_then_else(ge(3, 3), _if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 2, zeros_diff_rows)), _if_then_else(ge(ones_diff_rows, zeros_diff_rows), _if_then_else(False, max_col_clue, 4), _if_then_else(False, 4, compare_blocks_rows))), _if_then_else(ge(_if_then_else(True, 1, 1), _if_then_else(True, 3, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, max_row_clue, compare_blocks_cols)), _if_then_else(le(3, max_col_clue), _if_then_else(False, 4, 2), _if_then_else(True, 1, ones_diff_cols))), _if_then_else(or_(ge(0, max_col_clue), or_(False, False)), _if_then_else(le(zeros_diff_rows, -47), _if_then_else(True, 3, 1), _if_then_else(True, compare_blocks_rows, 2)), _if_then_else(or_(True, False), _if_then_else(True, 4, ones_diff_cols), _if_then_else(False, compare_blocks_rows, max_col_clue))))), -67))
VAL TREES:
add(mul(ones_diff_rows, zeros_diff_rows), add(-49, zeros_diff_rows))
add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, -94))
mul(mul(zeros_diff_rows, ones_diff_cols), mul(mul(add(61, ones_diff_cols), zeros_diff_cols), ones_diff_rows))
add(mul(zeros_diff_cols, mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), 67))
mul(add(zeros_diff_rows, -21), add(zeros_diff_rows, zeros_diff_cols))
add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols))
COND TREES:
ge(_if_then_else(or_(ge(1, max_row_clue), or_(True, False)), 79, max_col_clue), _if_then_else(and_(ge(2, 67), le(zeros_diff_rows, max_row_clue)), ones_diff_cols, 3))
and_(le(compare_blocks_cols, _if_then_else(ge(_if_then_else(False, ones_diff_cols, -1), _if_then_else(True, 3, max_col_clue)), _if_then_else(or_(True, True), _if_then_else(True, -97, max_col_clue), _if_then_else(False, max_col_clue, zeros_diff_rows)), _if_then_else(ge(max_row_clue, 1), _if_then_else(True, 0, -85), _if_then_else(False, 0, -93)))), False)
or_(and_(ge(_if_then_else(ge(0, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 4, ones_diff_rows)), _if_then_else(False, compare_blocks_rows, 0)), and_(and_(and_(True, True), and_(False, True)), or_(ge(ones_diff_cols, ones_diff_cols), and_(False, True)))), ge(_if_then_else(or_(and_(True, False), and_(False, True)), _if_then_else(ge(4, 34), _if_then_else(True, 0, -14), _if_then_else(False, max_row_clue, 4)), _if_then_else(le(-27, ones_diff_rows), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(True, 2, max_col_clue))), _if_then_else(True, _if_then_else(or_(True, True), _if_then_else(False, 2, 4), _if_then_else(True, max_col_clue, zeros_diff_cols)), _if_then_else(le(zeros_diff_cols, 0), _if_then_else(True, max_col_clue, 2), _if_then_else(False, 0, 3)))))
or_(False, le(2, _if_then_else(ge(_if_then_else(ge(_if_then_else(True, max_col_clue, 0), _if_then_else(False, 3, compare_blocks_rows)), _if_then_else(ge(max_row_clue, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_cols, 1), _if_then_else(True, -56, 69))), _if_then_else(and_(and_(False, True), ge(zeros_diff_rows, 4)), _if_then_else(or_(False, False), _if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(False, 1, max_col_clue)), _if_then_else(le(compare_blocks_rows, 4), _if_then_else(False, max_row_clue, 0), _if_then_else(False, -19, 52)))), _if_then_else(and_(and_(le(max_col_clue, 4), or_(True, True)), le(_if_then_else(True, -25, 1), _if_then_else(True, 2, max_row_clue))), _if_then_else(ge(_if_then_else(True, -100, zeros_diff_cols), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)), _if_then_else(ge(max_col_clue, 0), _if_then_else(True, 0, compare_blocks_rows), _if_then_else(True, -70, compare_blocks_rows)), _if_then_else(ge(zeros_diff_cols, 79), _if_then_else(False, 0, 0), _if_then_else(True, 95, 1))), _if_then_else(and_(and_(False, False), le(compare_blocks_rows, 4)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(True, 2, compare_blocks_cols)), _if_then_else(le(2, 1), _if_then_else(True, 1, ones_diff_cols), _if_then_else(True, 0, 4)))), _if_then_else(and_(and_(or_(False, True), ge(compare_blocks_cols, 1)), le(_if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(True, 44, -92))), _if_then_else(le(_if_then_else(True, 1, 2), _if_then_else(True, max_row_clue, compare_blocks_cols)), _if_then_else(le(compare_blocks_rows, 3), _if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(True, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, False), _if_then_else(True, 3, 3), _if_then_else(False, max_row_clue, 1))), _if_then_else(or_(le(2, compare_blocks_rows), or_(True, False)), _if_then_else(or_(False, True), _if_then_else(True, -68, zeros_diff_rows), _if_then_else(False, max_row_clue, 1)), _if_then_else(and_(False, True), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)))))))
or_(or_(or_(True, False), le(compare_blocks_cols, 1)), True)
VAL TREES:
add(mul(compare_blocks_cols, zeros_diff_cols), mul(mul(83, ones_diff_cols), compare_blocks_cols))
mul(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows))
add(add(add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(38, ones_diff_rows))), add(mul(add(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), mul(mul(78, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_rows))))
add(add(mul(ones_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(add(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_cols, 17), mul(ones_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, ones_diff_rows), add(7, zeros_diff_cols)))
add(mul(mul(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(83, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows)))
COND TREES:
or_(le(-96, zeros_diff_rows), le(compare_blocks_rows, _if_then_else(False, 1, max_col_clue)))
or_(le(0, _if_then_else(le(max_col_clue, max_row_clue), 1, 2)), ge(0, zeros_diff_cols))
ge(_if_then_else(and_(and_(ge(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, max_row_clue, 4)), le(_if_then_else(False, max_row_clue, ones_diff_rows), _if_then_else(True, 2, ones_diff_cols))), False), _if_then_else(False, max_row_clue, 4), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(ge(2, ones_diff_rows), _if_then_else(True, max_row_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(le(1, _if_then_else(ge(max_col_clue, 4), zeros_diff_cols, 2)), max_col_clue, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 3)), le(_if_then_else(True, _if_then_else(False, 4, 1), -77), _if_then_else(False, 3, compare_blocks_rows)))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), 3, _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
or_(True, ge(_if_then_else(False, -92, _if_then_else(False, 1, max_col_clue)), compare_blocks_rows))
le(_if_then_else(ge(4, 1), compare_blocks_rows, max_row_clue), _if_then_else(False, max_row_clue, 1))
and_(True, or_(False, True))
ge(4, _if_then_else(False, max_col_clue, zeros_diff_rows))
or_(ge(0, -74), ge(max_row_clue, _if_then_else(False, _if_then_else(or_(True, False), ones_diff_cols, _if_then_else(False, compare_blocks_cols, ones_diff_cols)), 4)))
VAL TREES:
mul(mul(ones_diff_rows, add(add(mul(ones_diff_rows, -7), add(compare_blocks_cols, zeros_diff_cols)), add(add(84, ones_diff_cols), add(compare_blocks_cols, compare_blocks_cols)))), mul(ones_diff_cols, zeros_diff_cols))
add(mul(mul(mul(mul(ones_diff_rows, compare_blocks_rows), add(zeros_diff_cols, zeros_diff_cols)), add(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols))), add(mul(mul(compare_blocks_cols, -99), add(compare_blocks_cols, -1)), mul(add(ones_diff_cols, zeros_diff_cols), mul(66, zeros_diff_rows)))), add(compare_blocks_cols, compare_blocks_rows))
add(add(mul(mul(add(compare_blocks_cols, ones_diff_cols), mul(-85, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_rows))), mul(mul(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)), mul(mul(compare_blocks_rows, 44), add(compare_blocks_rows, ones_diff_cols))), mul(add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, zeros_diff_rows), add(-49, ones_diff_cols)))))
add(add(ones_diff_rows, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows))
mul(mul(add(mul(add(add(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(5, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows))), add(add(mul(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, -15), add(ones_diff_cols, 11)))), mul(mul(add(mul(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))), add(add(mul(-58, zeros_diff_rows), mul(-52, -92)), add(mul(4, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_rows))))), add(75, zeros_diff_cols))
mul(add(mul(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)), mul(compare_blocks_cols, ones_diff_cols))
COND TREES:
or_(or_(True, ge(compare_blocks_cols, compare_blocks_cols)), or_(and_(False, False), False))
and_(le(zeros_diff_rows, 2), False)
or_(or_(False, False), le(_if_then_else(and_(or_(True, True), False), max_col_clue, _if_then_else(True, ones_diff_rows, ones_diff_cols)), _if_then_else(False, -24, -58)))
and_(le(_if_then_else(False, _if_then_else(True, ones_diff_rows, 26), _if_then_else(False, ones_diff_rows, 3)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, 1, 1))), and_(or_(le(zeros_diff_cols, 4), or_(False, True)), or_(and_(True, True), and_(True, False))))
le(_if_then_else(or_(False, False), _if_then_else(True, 0, max_col_clue), _if_then_else(True, 3, 4)), _if_then_else(and_(True, True), _if_then_else(False, 0, compare_blocks_rows), _if_then_else(True, 53, zeros_diff_rows)))
VAL TREES:
mul(mul(add(mul(-51, compare_blocks_cols), add(ones_diff_cols, 58)), mul(mul(zeros_diff_rows, zeros_diff_rows), add(compare_blocks_cols, 19))), mul(add(add(69, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(-83, 36), add(-91, zeros_diff_cols))))
mul(mul(mul(-86, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)))
add(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols))
mul(add(mul(ones_diff_cols, -1), ones_diff_cols), add(add(compare_blocks_cols, ones_diff_rows), zeros_diff_cols))
add(mul(compare_blocks_cols, compare_blocks_cols), add(mul(ones_diff_rows, add(ones_diff_rows, zeros_diff_cols)), zeros_diff_cols))
add(mul(mul(zeros_diff_cols, zeros_diff_cols), compare_blocks_rows), mul(ones_diff_rows, add(zeros_diff_rows, zeros_diff_rows)))
COND TREES:
ge(zeros_diff_cols, _if_then_else(False, _if_then_else(False, zeros_diff_rows, 2), 1))
ge(_if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(and_(and_(le(_if_then_else(True, ones_diff_cols, 4), _if_then_else(False, zeros_diff_rows, 4)), ge(_if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(False, 4, ones_diff_cols))), and_(le(_if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows)), and_(ge(0, zeros_diff_cols), and_(False, True)))), zeros_diff_cols, zeros_diff_rows))
or_(ge(_if_then_else(True, compare_blocks_cols, _if_then_else(False, compare_blocks_cols, ones_diff_cols)), _if_then_else(and_(True, True), _if_then_else(True, 3, 3), _if_then_else(True, zeros_diff_rows, ones_diff_rows))), True)
le(_if_then_else(or_(le(_if_then_else(False, compare_blocks_rows, compare_blocks_cols), zeros_diff_cols), ge(max_col_clue, 4)), ones_diff_cols, ones_diff_rows), _if_then_else(or_(le(zeros_diff_rows, compare_blocks_cols), and_(False, True)), zeros_diff_rows, 2))
le(_if_then_else(False, max_row_clue, max_row_clue), _if_then_else(False, ones_diff_rows, _if_then_else(True, max_row_clue, 2)))
VAL TREES:
add(mul(ones_diff_rows, zeros_diff_rows), add(-49, zeros_diff_rows))
add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, -94))
mul(mul(zeros_diff_rows, ones_diff_cols), mul(mul(add(61, ones_diff_cols), zeros_diff_cols), ones_diff_rows))
add(mul(zeros_diff_cols, mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), 67))
mul(add(zeros_diff_rows, -21), add(zeros_diff_rows, zeros_diff_cols))
add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols))
COND TREES:
or_(le(max_col_clue, _if_then_else(and_(True, False), _if_then_else(True, 9, 20), _if_then_else(True, 4, 2))), True)
or_(le(max_col_clue, 2), ge(_if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(True, max_col_clue, 2)))
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(_if_then_else(ge(_if_then_else(le(max_col_clue, 39), _if_then_else(True, 4, ones_diff_cols), _if_then_else(False, ones_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_rows, 0), _if_then_else(False, zeros_diff_cols, 4), _if_then_else(True, compare_blocks_cols, ones_diff_cols))), _if_then_else(and_(or_(True, False), le(2, 2)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, ones_diff_rows, 2), _if_then_else(False, 3, compare_blocks_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(True, compare_blocks_rows, 2))), _if_then_else(and_(and_(True, False), and_(False, False)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(True, zeros_diff_rows, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, 3), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 1, max_row_clue)))), _if_then_else(or_(and_(or_(False, False), or_(True, False)), ge(_if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 3, zeros_diff_cols))), _if_then_else(and_(and_(True, False), ge(max_row_clue, max_row_clue)), _if_then_else(ge(0, 2), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(False, max_row_clue, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, 0), _if_then_else(True, 1, 4))), _if_then_else(and_(le(0, 4), le(3, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)), _if_then_else(and_(False, True), _if_then_else(False, ones_diff_cols, 1), _if_then_else(False, 2, compare_blocks_rows)))))), _if_then_else(le(max_col_clue, 4), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, max_row_clue, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(False, _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(True, max_col_clue, ones_diff_cols), _if_then_else(ge(compare_blocks_cols, zeros_diff_rows), 3, max_col_clue)), ge(4, compare_blocks_rows))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(le(1, max_col_clue), compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, le(_if_then_else(ge(max_row_clue, 0), _if_then_else(True, ones_diff_rows, max_col_clue), _if_then_else(False, max_row_clue, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, 2, compare_blocks_rows)))), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(or_(False, True), zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
or_(le(3, _if_then_else(True, max_col_clue, 65)), le(_if_then_else(False, 2, _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(False, ones_diff_rows, 2), _if_then_else(le(ones_diff_cols, ones_diff_rows), _if_then_else(True, zeros_diff_rows, 4), _if_then_else(True, ones_diff_cols, max_row_clue)))), compare_blocks_cols))
le(_if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))
and_(False, or_(False, True))
ge(3, zeros_diff_rows)
or_(or_(or_(True, False), le(ones_diff_cols, max_col_clue)), ge(ones_diff_rows, _if_then_else(False, _if_then_else(False, ones_diff_cols, _if_then_else(False, compare_blocks_cols, ones_diff_cols)), 4)))
VAL TREES:
mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_cols))
add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_rows))
add(add(mul(mul(add(compare_blocks_cols, ones_diff_cols), mul(-85, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_rows))), mul(mul(add(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)), mul(mul(compare_blocks_rows, 44), add(compare_blocks_rows, ones_diff_cols))), mul(add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, zeros_diff_rows), add(-49, ones_diff_cols)))))
add(add(ones_diff_rows, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows))
mul(add(mul(ones_diff_rows, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_cols)), add(75, zeros_diff_cols))
mul(mul(zeros_diff_cols, -79), mul(compare_blocks_cols, ones_diff_cols))
COND TREES:
and_(ge(_if_then_else(and_(False, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(True, 4, 2)), _if_then_else(False, 0, 4)), or_(or_(le(2, max_col_clue), ge(20, 0)), ge(_if_then_else(False, 0, 1), _if_then_else(False, zeros_diff_cols, max_col_clue))))
and_(ge(_if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, 68)), le(_if_then_else(or_(False, False), _if_then_else(True, 49, 4), _if_then_else(False, ones_diff_rows, max_col_clue)), compare_blocks_rows))
or_(and_(ge(_if_then_else(ge(0, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 4, ones_diff_rows)), _if_then_else(False, compare_blocks_rows, 0)), or_(ge(_if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), and_(and_(False, False), ge(zeros_diff_cols, max_col_clue)))), ge(_if_then_else(or_(and_(True, False), and_(False, True)), _if_then_else(ge(4, max_row_clue), _if_then_else(True, 0, -14), _if_then_else(False, max_row_clue, 4)), _if_then_else(le(-27, ones_diff_rows), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(True, 2, max_col_clue))), _if_then_else(and_(le(4, 1), or_(and_(ge(_if_then_else(and_(False, False), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(False, 2, 4)), _if_then_else(or_(True, True), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, 3, -9))), or_(or_(or_(False, True), le(2, 3)), and_(and_(True, True), and_(False, False)))), and_(and_(or_(le(4, 0), or_(False, True)), le(_if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, 2, ones_diff_cols))), le(_if_then_else(or_(False, True), _if_then_else(True, zeros_diff_cols, -24), _if_then_else(True, ones_diff_cols, ones_diff_cols)), _if_then_else(ge(1, -34), _if_then_else(True, max_row_clue, 25), _if_then_else(False, ones_diff_rows, max_col_clue)))))), _if_then_else(or_(True, True), _if_then_else(False, 2, 4), _if_then_else(True, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, 2), _if_then_else(False, 0, 3)))))
or_(and_(True, or_(True, False)), le(compare_blocks_cols, 4))
ge(_if_then_else(ge(2, compare_blocks_cols), _if_then_else(False, 3, 4), _if_then_else(True, compare_blocks_cols, 3)), _if_then_else(and_(False, False), _if_then_else(True, 4, 3), _if_then_else(False, compare_blocks_cols, 1)))
VAL TREES:
add(mul(compare_blocks_cols, zeros_diff_cols), mul(mul(83, ones_diff_cols), compare_blocks_cols))
mul(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows))
add(add(add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(38, ones_diff_rows))), add(mul(add(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), mul(mul(78, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_rows))))
add(add(mul(ones_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(add(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_cols, 17), mul(ones_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, ones_diff_rows), add(7, zeros_diff_cols)))
add(mul(mul(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(83, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows)))
COND TREES:
or_(or_(True, ge(max_row_clue, compare_blocks_cols)), or_(and_(False, False), False))
and_(le(zeros_diff_rows, 2), False)
or_(or_(True, False), le(_if_then_else(and_(or_(True, True), False), max_col_clue, _if_then_else(True, ones_diff_rows, ones_diff_cols)), _if_then_else(False, -24, -58)))
and_(le(_if_then_else(False, _if_then_else(True, ones_diff_rows, 26), _if_then_else(False, ones_diff_rows, 3)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, 1, 1))), and_(or_(le(zeros_diff_cols, 4), or_(False, True)), or_(and_(True, True), and_(True, False))))
le(_if_then_else(or_(False, False), _if_then_else(True, 0, max_col_clue), _if_then_else(True, 3, 4)), _if_then_else(and_(True, True), _if_then_else(False, 0, compare_blocks_rows), _if_then_else(True, 53, zeros_diff_rows)))
VAL TREES:
mul(mul(add(mul(-51, compare_blocks_cols), add(ones_diff_cols, 58)), mul(mul(zeros_diff_rows, zeros_diff_rows), add(compare_blocks_cols, 19))), mul(add(add(69, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(-83, 36), add(-91, zeros_diff_cols))))
mul(mul(mul(-86, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)))
add(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols))
mul(add(mul(ones_diff_cols, -1), ones_diff_cols), add(add(compare_blocks_cols, ones_diff_rows), zeros_diff_cols))
add(mul(compare_blocks_cols, compare_blocks_cols), add(mul(ones_diff_rows, add(ones_diff_rows, zeros_diff_cols)), zeros_diff_cols))
add(mul(mul(zeros_diff_cols, zeros_diff_cols), compare_blocks_rows), mul(ones_diff_rows, add(zeros_diff_rows, zeros_diff_rows)))
COND TREES:
ge(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(False, 2, compare_blocks_cols))
and_(le(-66, 4), or_(or_(False, True), and_(False, False)))
and_(False, le(_if_then_else(or_(True, False), max_row_clue, 70), 53))
ge(zeros_diff_rows, _if_then_else(le(compare_blocks_cols, compare_blocks_cols), _if_then_else(and_(False, False), 2, _if_then_else(True, compare_blocks_rows, 4)), ones_diff_rows))
and_(False, False)
VAL TREES:
mul(mul(zeros_diff_cols, compare_blocks_cols), add(mul(zeros_diff_cols, add(compare_blocks_cols, zeros_diff_cols)), compare_blocks_cols))
mul(mul(add(add(ones_diff_rows, 13), compare_blocks_rows), add(compare_blocks_cols, mul(-28, ones_diff_rows))), add(ones_diff_cols, -82))
add(mul(zeros_diff_cols, add(zeros_diff_cols, compare_blocks_rows)), mul(compare_blocks_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_cols))
add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))
mul(add(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, -66))
COND TREES:
le(_if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, _if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(and_(False, ge(_if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(False, ones_diff_cols, 2))), compare_blocks_rows, compare_blocks_cols)))
le(_if_then_else(True, ones_diff_rows, _if_then_else(True, _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_cols))), _if_then_else(False, 2, max_col_clue))
le(_if_then_else(and_(and_(le(4, _if_then_else(False, 0, zeros_diff_cols)), or_(False, True)), and_(le(38, max_col_clue), or_(True, True))), _if_then_else(and_(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), ge(compare_blocks_cols, 2)), _if_then_else(le(ones_diff_rows, 0), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(le(0, 3), _if_then_else(False, 3, ones_diff_cols), _if_then_else(False, compare_blocks_rows, max_row_clue))), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(ge(_if_then_else(and_(False, True), _if_then_else(False, 2, 1), _if_then_else(True, 3, max_col_clue)), _if_then_else(and_(True, False), _if_then_else(False, 1, 3), _if_then_else(False, ones_diff_cols, ones_diff_cols))), _if_then_else(or_(ge(-20, max_col_clue), le(_if_then_else(ge(max_row_clue, 2), _if_then_else(True, 3, 1), _if_then_else(True, max_col_clue, 0)), max_row_clue)), _if_then_else(le(compare_blocks_cols, 0), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(True, 0, zeros_diff_cols), _if_then_else(False, ones_diff_rows, compare_blocks_rows))), _if_then_else(or_(ge(compare_blocks_cols, 0), or_(False, True)), _if_then_else(ge(compare_blocks_cols, 4), _if_then_else(False, 3, max_col_clue), _if_then_else(True, max_col_clue, 3)), _if_then_else(le(ones_diff_rows, max_col_clue), _if_then_else(False, -2, max_col_clue), _if_then_else(False, ones_diff_cols, ones_diff_rows)))))
and_(and_(le(_if_then_else(False, 3, 3), _if_then_else(True, 4, zeros_diff_rows)), ge(_if_then_else(False, 4, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, zeros_diff_rows))), ge(_if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, max_col_clue), _if_then_else(False, ones_diff_rows, max_col_clue)), _if_then_else(and_(False, True), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(False, 1, compare_blocks_cols))))
and_(or_(ge(zeros_diff_cols, zeros_diff_rows), le(2, ones_diff_rows)), True)
VAL TREES:
mul(mul(ones_diff_cols, add(add(mul(ones_diff_rows, compare_blocks_rows), ones_diff_rows), compare_blocks_cols)), add(compare_blocks_cols, compare_blocks_cols))
add(add(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_rows, compare_blocks_cols))
mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 84)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_cols))), add(add(add(ones_diff_cols, -2), add(compare_blocks_cols, compare_blocks_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows))))
mul(add(compare_blocks_cols, zeros_diff_cols), add(add(zeros_diff_rows, compare_blocks_rows), zeros_diff_cols))
add(mul(add(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), add(mul(ones_diff_rows, ones_diff_cols), mul(79, ones_diff_cols)))
add(mul(add(mul(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_rows)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_rows))), mul(mul(add(13, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_cols, ones_diff_rows))))
COND TREES:
or_(le(max_col_clue, compare_blocks_rows), le(compare_blocks_rows, _if_then_else(and_(and_(ge(ones_diff_cols, zeros_diff_rows), ge(max_col_clue, compare_blocks_rows)), False), max_row_clue, 1)))
or_(or_(ge(0, zeros_diff_cols), True), ge(0, zeros_diff_cols))
ge(_if_then_else(ge(zeros_diff_cols, compare_blocks_cols), _if_then_else(False, max_row_clue, 4), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(3, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(ge(2, ones_diff_rows), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, 3, 3)), le(_if_then_else(True, 0, -77), _if_then_else(False, 3, compare_blocks_rows)))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 56), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), mul(add(add(compare_blocks_rows, 34), add(zeros_diff_cols, zeros_diff_rows)), add(add(compare_blocks_cols, compare_blocks_rows), add(-36, 49))))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, add(mul(mul(add(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_cols)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))), mul(mul(mul(-88, compare_blocks_rows), add(70, compare_blocks_cols)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols))))))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
add(add(mul(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(add(zeros_diff_cols, 76), add(zeros_diff_rows, ones_diff_cols))), mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_cols)), add(mul(compare_blocks_cols, ones_diff_rows), add(compare_blocks_cols, compare_blocks_rows)))), mul(mul(add(mul(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_cols)), add(add(ones_diff_cols, -83), add(zeros_diff_cols, compare_blocks_cols))), add(mul(add(compare_blocks_cols, -55), add(-67, compare_blocks_rows)), mul(add(ones_diff_cols, zeros_diff_rows), add(8, compare_blocks_cols)))))
mul(mul(ones_diff_cols, -5), add(add(ones_diff_rows, 26), mul(97, compare_blocks_cols)))
mul(mul(-76, mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, 12))), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
ge(_if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 2, ones_diff_rows))
and_(ge(_if_then_else(ge(0, zeros_diff_cols), zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 1, max_col_clue)), or_(or_(False, True), and_(False, False)))
and_(True, le(_if_then_else(False, max_row_clue, 70), 53))
ge(zeros_diff_rows, _if_then_else(False, _if_then_else(and_(False, False), 2, _if_then_else(le(_if_then_else(True, 0, -77), _if_then_else(False, 3, compare_blocks_rows)), compare_blocks_rows, 4)), ones_diff_rows))
and_(le(_if_then_else(False, max_col_clue, compare_blocks_cols), max_row_clue), or_(le(zeros_diff_cols, max_col_clue), False))
VAL TREES:
mul(mul(zeros_diff_cols, compare_blocks_cols), add(mul(zeros_diff_cols, add(compare_blocks_cols, zeros_diff_cols)), compare_blocks_cols))
mul(mul(add(add(ones_diff_rows, 13), compare_blocks_rows), add(add(add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows)), mul(add(zeros_diff_rows, ones_diff_cols), mul(zeros_diff_cols, ones_diff_cols))), mul(-28, ones_diff_rows))), add(ones_diff_cols, -82))
add(mul(zeros_diff_cols, add(mul(ones_diff_cols, add(ones_diff_rows, compare_blocks_rows)), mul(mul(mul(-99, compare_blocks_cols), compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_cols))
add(add(ones_diff_rows, ones_diff_cols), add(add(add(add(mul(add(zeros_diff_rows, zeros_diff_rows), add(-21, compare_blocks_rows)), mul(mul(compare_blocks_cols, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_rows))), mul(mul(add(zeros_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_rows)))), add(mul(add(mul(compare_blocks_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(mul(zeros_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)), mul(add(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols))))), zeros_diff_rows))
mul(add(compare_blocks_rows, zeros_diff_rows), add(mul(mul(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, 87)), mul(mul(compare_blocks_cols, zeros_diff_cols), add(ones_diff_rows, -7))), add(mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_cols, ones_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), mul(12, ones_diff_cols)))), mul(add(mul(mul(70, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(add(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))))))
COND TREES:
or_(le(zeros_diff_rows, zeros_diff_rows), True)
or_(le(max_col_clue, 68), ge(0, zeros_diff_cols))
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), _if_then_else(le(max_col_clue, 4), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, max_row_clue, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(False, _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(ge(compare_blocks_cols, zeros_diff_rows), 3, max_col_clue)), ge(4, compare_blocks_rows))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, ones_diff_rows, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(or_(False, True), zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
or_(le(max_col_clue, 1), le(compare_blocks_rows, _if_then_else(False, 1, _if_then_else(le(zeros_diff_cols, _if_then_else(False, 4, max_col_clue)), _if_then_else(False, _if_then_else(False, _if_then_else(or_(True, False), max_col_clue, max_row_clue), max_col_clue), _if_then_else(False, _if_then_else(True, 0, max_row_clue), 1)), _if_then_else(False, _if_then_else(True, max_row_clue, max_col_clue), ones_diff_rows)))))
or_(le(_if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, 0, zeros_diff_cols)), le(_if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, max_row_clue, ones_diff_rows)))
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), _if_then_else(False, max_row_clue, 4), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(ge(2, ones_diff_rows), _if_then_else(True, max_row_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(le(ones_diff_rows, 0), _if_then_else(False, max_col_clue, ones_diff_rows), _if_then_else(True, max_row_clue, ones_diff_cols))), le(_if_then_else(True, 0, -77), _if_then_else(False, ones_diff_cols, compare_blocks_rows)))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), 3, _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
le(_if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, _if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(and_(False, ge(_if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_cols, _if_then_else(and_(and_(or_(and_(False, False), and_(False, True)), le(_if_then_else(True, -46, max_col_clue), _if_then_else(False, max_row_clue, 0))), and_(or_(le(3, 4), and_(False, True)), le(_if_then_else(False, 1, ones_diff_rows), _if_then_else(True, 2, 2)))), _if_then_else(and_(or_(ge(0, 1), and_(False, True)), or_(le(3, zeros_diff_rows), le(max_row_clue, max_col_clue))), _if_then_else(le(_if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(True, 2, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, 1), _if_then_else(False, compare_blocks_rows, 2)), _if_then_else(and_(False, True), _if_then_else(False, 2, 4), _if_then_else(False, 4, max_row_clue))), _if_then_else(and_(le(7, 4), ge(2, 4)), _if_then_else(le(4, ones_diff_cols), _if_then_else(False, 0, 3), _if_then_else(True, ones_diff_rows, 3)), _if_then_else(le(3, 4), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(False, 3, ones_diff_rows)))), _if_then_else(ge(_if_then_else(le(-16, ones_diff_rows), _if_then_else(False, max_row_clue, 4), _if_then_else(False, compare_blocks_rows, 16)), _if_then_else(le(3, max_row_clue), _if_then_else(False, 2, 0), _if_then_else(False, 2, max_row_clue))), _if_then_else(or_(ge(compare_blocks_rows, 3), ge(max_row_clue, 2)), _if_then_else(and_(False, True), _if_then_else(True, 1, 2), _if_then_else(True, 0, 3)), _if_then_else(ge(0, compare_blocks_rows), _if_then_else(True, 4, max_row_clue), _if_then_else(True, 4, zeros_diff_rows))), _if_then_else(ge(_if_then_else(True, 53, max_col_clue), _if_then_else(True, 4, compare_blocks_rows)), _if_then_else(ge(compare_blocks_cols, compare_blocks_cols), _if_then_else(False, 4, ones_diff_rows), _if_then_else(False, 1, ones_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(True, 1, compare_blocks_cols)))))))), compare_blocks_rows, compare_blocks_cols)))
le(_if_then_else(or_(ge(0, zeros_diff_cols), True), ones_diff_rows, _if_then_else(True, _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_cols))), _if_then_else(False, 2, max_col_clue))
le(_if_then_else(and_(and_(le(4, _if_then_else(False, 0, zeros_diff_cols)), or_(False, True)), and_(le(38, max_col_clue), or_(True, True))), _if_then_else(and_(ge(zeros_diff_cols, compare_blocks_cols), ge(compare_blocks_cols, 2)), _if_then_else(le(ones_diff_rows, 0), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(le(0, 3), _if_then_else(False, 3, ones_diff_cols), _if_then_else(False, compare_blocks_rows, max_row_clue))), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(ge(_if_then_else(and_(False, True), _if_then_else(False, 2, 1), _if_then_else(True, 3, max_col_clue)), _if_then_else(and_(True, False), _if_then_else(False, 1, 3), _if_then_else(False, ones_diff_cols, ones_diff_cols))), _if_then_else(or_(ge(-20, max_col_clue), le(_if_then_else(ge(max_row_clue, 2), _if_then_else(True, 3, 1), _if_then_else(True, max_col_clue, 0)), max_row_clue)), _if_then_else(le(compare_blocks_cols, 0), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(True, 0, zeros_diff_cols), _if_then_else(False, ones_diff_rows, compare_blocks_rows))), _if_then_else(or_(ge(compare_blocks_cols, 0), or_(False, True)), _if_then_else(ge(compare_blocks_cols, _if_then_else(ge(zeros_diff_rows, 2), _if_then_else(True, 3, ones_diff_rows), _if_then_else(True, 0, _if_then_else(ge(2, zeros_diff_cols), zeros_diff_cols, _if_then_else(False, 1, ones_diff_rows))))), _if_then_else(False, 3, max_col_clue), _if_then_else(True, max_col_clue, 3)), _if_then_else(le(ones_diff_rows, max_col_clue), _if_then_else(False, -2, max_col_clue), _if_then_else(False, ones_diff_cols, ones_diff_rows)))))
and_(and_(le(_if_then_else(False, 3, 3), _if_then_else(True, _if_then_else(le(-94, _if_then_else(True, max_col_clue, 2)), _if_then_else(and_(and_(False, False), True), 3, _if_then_else(True, 4, ones_diff_rows)), _if_then_else(True, 4, 2)), zeros_diff_rows)), ge(_if_then_else(False, 4, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, zeros_diff_rows))), ge(_if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, max_col_clue), _if_then_else(False, ones_diff_rows, max_col_clue)), _if_then_else(and_(False, True), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(False, 1, compare_blocks_cols))))
and_(or_(ge(zeros_diff_cols, _if_then_else(or_(False, False), _if_then_else(True, _if_then_else(True, _if_then_else(False, _if_then_else(True, ones_diff_cols, 3), _if_then_else(False, max_row_clue, max_row_clue)), zeros_diff_cols), compare_blocks_rows), _if_then_else(ge(_if_then_else(and_(True, True), 1, _if_then_else(False, max_row_clue, 2)), compare_blocks_cols), _if_then_else(and_(True, le(-14, compare_blocks_rows)), compare_blocks_cols, 1), compare_blocks_rows))), le(2, ones_diff_rows)), True)
VAL TREES:
mul(mul(ones_diff_cols, add(add(mul(ones_diff_rows, compare_blocks_rows), ones_diff_rows), compare_blocks_cols)), add(compare_blocks_cols, compare_blocks_cols))
add(add(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_rows, compare_blocks_cols))
mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 84)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_cols))), add(add(add(ones_diff_cols, -2), add(compare_blocks_cols, compare_blocks_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows))))
mul(add(compare_blocks_cols, zeros_diff_cols), add(add(zeros_diff_rows, compare_blocks_rows), zeros_diff_cols))
add(mul(add(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), add(mul(ones_diff_rows, ones_diff_cols), mul(79, ones_diff_cols)))
add(mul(add(mul(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_rows)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_rows))), mul(mul(add(13, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_cols, ones_diff_rows))))
COND TREES:
and_(False, le(1, _if_then_else(True, 2, max_row_clue)))
ge(_if_then_else(le(ones_diff_cols, 2), _if_then_else(False, _if_then_else(True, 4, compare_blocks_rows), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(le(-66, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, 4), _if_then_else(False, max_row_clue, 4))), _if_then_else(le(_if_then_else(True, zeros_diff_cols, max_row_clue), _if_then_else(True, zeros_diff_rows, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, max_col_clue, max_row_clue)), _if_then_else(le(compare_blocks_cols, 3), _if_then_else(True, compare_blocks_rows, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, 0))))
le(-24, _if_then_else(False, ones_diff_rows, _if_then_else(True, 3, max_row_clue)))
or_(ge(_if_then_else(le(ones_diff_cols, 1), _if_then_else(True, 50, ones_diff_cols), _if_then_else(True, zeros_diff_rows, -46)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, 4, 4), _if_then_else(True, compare_blocks_cols, ones_diff_rows))), and_(or_(le(_if_then_else(False, 3, compare_blocks_cols), zeros_diff_cols), ge(max_col_clue, 4)), or_(le(zeros_diff_cols, -26), ge(2, 2))))
or_(or_(False, and_(False, False)), False)
VAL TREES:
add(mul(mul(add(add(ones_diff_rows, -79), add(ones_diff_rows, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols))), mul(add(mul(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_cols)), mul(mul(-30, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)))), add(add(mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)), add(add(compare_blocks_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_rows))), mul(mul(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_cols)))))
add(mul(add(ones_diff_cols, ones_diff_rows), ones_diff_cols), add(ones_diff_cols, compare_blocks_cols))
add(mul(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, add(zeros_diff_rows, compare_blocks_rows)))
add(add(ones_diff_cols, add(compare_blocks_rows, compare_blocks_cols)), mul(zeros_diff_rows, add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(mul(ones_diff_rows, -100), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_cols))), mul(mul(mul(zeros_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_cols, compare_blocks_cols))))
add(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols))
COND TREES:
or_(le(max_col_clue, zeros_diff_rows), le(compare_blocks_rows, _if_then_else(True, 1, max_col_clue)))
or_(le(max_col_clue, _if_then_else(False, max_col_clue, 2)), ge(0, zeros_diff_cols))
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), _if_then_else(False, max_row_clue, 4), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(ge(2, ones_diff_rows), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, 3, 3)), le(_if_then_else(True, 0, -77), _if_then_else(False, 3, compare_blocks_rows)))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
or_(and_(True, False), le(zeros_diff_rows, zeros_diff_rows))
le(_if_then_else(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(True, max_row_clue, 82)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(ones_diff_cols, ones_diff_cols), _if_then_else(True, 0, max_row_clue), _if_then_else(False, ones_diff_cols, zeros_diff_cols))), _if_then_else(False, compare_blocks_cols, ones_diff_cols))
ge(_if_then_else(le(_if_then_else(False, 4, 61), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(or_(False, True), _if_then_else(True, 2, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, 1)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_rows, zeros_diff_cols), _if_then_else(True, 3, zeros_diff_rows))), _if_then_else(True, compare_blocks_cols, compare_blocks_cols))
or_(le(zeros_diff_cols, _if_then_else(and_(True, or_(False, True)), _if_then_else(ge(_if_then_else(False, 1, _if_then_else(and_(False, and_(ge(ones_diff_cols, max_col_clue), or_(True, True))), 2, _if_then_else(le(_if_then_else(True, 0, -77), _if_then_else(False, 3, compare_blocks_rows)), compare_blocks_rows, 4))), 2), 1, zeros_diff_rows), _if_then_else(True, -50, zeros_diff_cols))), and_(False, le(0, 2)))
and_(and_(ge(ones_diff_rows, compare_blocks_rows), ge(ones_diff_cols, zeros_diff_rows)), or_(True, True))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, mul(mul(-5, zeros_diff_cols), add(zeros_diff_cols, zeros_diff_rows))))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_rows)), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(mul(mul(add(mul(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, zeros_diff_cols))), add(add(add(96, 88), mul(compare_blocks_cols, ones_diff_rows)), add(mul(54, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows)))), zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, mul(mul(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, mul(ones_diff_cols, compare_blocks_rows)))), mul(mul(ones_diff_rows, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(add(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_rows, mul(zeros_diff_cols, add(compare_blocks_cols, 87)))), -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(mul(mul(mul(zeros_diff_rows, ones_diff_rows), mul(ones_diff_cols, zeros_diff_cols)), mul(add(16, zeros_diff_rows), add(ones_diff_rows, -44))), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(add(add(zeros_diff_rows, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
ge(zeros_diff_cols, compare_blocks_cols)
ge(_if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(and_(and_(le(_if_then_else(True, ones_diff_cols, 4), _if_then_else(False, zeros_diff_rows, 4)), ge(_if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(False, 4, ones_diff_cols))), and_(le(_if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows)), and_(ge(_if_then_else(True, 2, max_row_clue), _if_then_else(ge(_if_then_else(True, ones_diff_cols, -28), 1), _if_then_else(True, 3, zeros_diff_rows), _if_then_else(or_(True, True), zeros_diff_cols, compare_blocks_cols))), and_(False, True)))), zeros_diff_cols, compare_blocks_cols))
or_(True, True)
le(_if_then_else(or_(le(_if_then_else(False, compare_blocks_rows, compare_blocks_cols), zeros_diff_cols), ge(max_col_clue, 4)), ones_diff_cols, ones_diff_rows), _if_then_else(or_(le(zeros_diff_rows, compare_blocks_cols), ge(1, 3)), _if_then_else(ge(_if_then_else(and_(False, False), _if_then_else(False, 3, 0), _if_then_else(True, max_col_clue, 3)), _if_then_else(and_(True, False), _if_then_else(False, -89, -71), _if_then_else(False, ones_diff_rows, 35))), _if_then_else(False, _if_then_else(or_(False, True), _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_cols, 2)), _if_then_else(or_(True, True), _if_then_else(False, 2, 1), _if_then_else(True, 3, -18))), _if_then_else(or_(ge(max_col_clue, zeros_diff_rows), le(4, zeros_diff_cols)), _if_then_else(ge(4, compare_blocks_cols), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_cols, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, 3), _if_then_else(False, 3, ones_diff_rows)))), 2))
le(_if_then_else(False, max_row_clue, max_row_clue), _if_then_else(False, max_col_clue, _if_then_else(True, max_row_clue, 2)))
VAL TREES:
add(mul(ones_diff_rows, zeros_diff_rows), add(-49, zeros_diff_rows))
add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, -94))
mul(mul(zeros_diff_rows, ones_diff_cols), mul(mul(add(61, ones_diff_cols), zeros_diff_cols), ones_diff_rows))
add(mul(zeros_diff_cols, mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), 67))
mul(add(zeros_diff_rows, -21), add(zeros_diff_rows, zeros_diff_cols))
add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols))
COND TREES:
ge(_if_then_else(False, _if_then_else(ge(max_col_clue, compare_blocks_cols), _if_then_else(True, _if_then_else(False, 0, compare_blocks_cols), _if_then_else(and_(False, False), 1, 1)), max_row_clue), max_col_clue), _if_then_else(False, 2, ones_diff_rows))
and_(ge(_if_then_else(True, max_col_clue, compare_blocks_cols), _if_then_else(False, 1, max_col_clue)), or_(or_(False, True), False))
and_(True, or_(le(max_col_clue, compare_blocks_rows), le(0, 3)))
ge(zeros_diff_rows, _if_then_else(True, max_col_clue, ones_diff_rows))
and_(le(_if_then_else(False, max_col_clue, compare_blocks_cols), max_row_clue), or_(le(_if_then_else(and_(False, True), _if_then_else(False, ones_diff_rows, 1), _if_then_else(False, 4, -75)), _if_then_else(True, ones_diff_cols, compare_blocks_rows)), False))
VAL TREES:
mul(mul(zeros_diff_cols, compare_blocks_cols), add(mul(zeros_diff_cols, add(compare_blocks_cols, zeros_diff_cols)), compare_blocks_cols))
mul(mul(add(add(ones_diff_rows, 13), compare_blocks_rows), add(compare_blocks_cols, mul(-28, ones_diff_rows))), add(ones_diff_cols, -82))
add(mul(zeros_diff_cols, add(zeros_diff_cols, compare_blocks_rows)), mul(compare_blocks_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_cols))
add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))
mul(add(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, -66))
COND TREES:
or_(or_(or_(True, False), True), le(_if_then_else(False, compare_blocks_rows, _if_then_else(False, _if_then_else(False, max_row_clue, _if_then_else(True, 0, zeros_diff_cols)), max_row_clue)), 3))
le(ones_diff_cols, _if_then_else(or_(True, True), zeros_diff_cols, ones_diff_cols))
ge(_if_then_else(False, max_row_clue, _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_cols, -70), _if_then_else(True, 3, ones_diff_rows))), _if_then_else(or_(False, True), compare_blocks_cols, zeros_diff_rows))
or_(False, ge(4, zeros_diff_cols))
and_(or_(or_(False, True), True), or_(True, or_(True, False)))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(add(-22, compare_blocks_rows), add(ones_diff_cols, compare_blocks_cols)))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), mul(add(add(mul(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), add(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, ones_diff_cols))), mul(add(add(-38, zeros_diff_cols), mul(-65, ones_diff_rows)), mul(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, zeros_diff_rows))))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(mul(mul(ones_diff_cols, 70), add(zeros_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_cols)))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_rows, 72))))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
and_(le(4, zeros_diff_rows), False)
ge(24, _if_then_else(or_(or_(False, or_(and_(ge(4, max_row_clue), le(compare_blocks_rows, _if_then_else(True, zeros_diff_cols, zeros_diff_cols))), and_(True, True))), and_(False, False)), ones_diff_rows, max_row_clue))
or_(ge(_if_then_else(True, compare_blocks_cols, _if_then_else(False, _if_then_else(True, 3, zeros_diff_rows), ones_diff_cols)), _if_then_else(and_(True, True), _if_then_else(True, 3, 3), _if_then_else(False, zeros_diff_rows, ones_diff_rows))), or_(and_(or_(False, True), False), and_(or_(False, False), and_(True, True))))
or_(and_(True, ge(3, zeros_diff_rows)), ge(_if_then_else(False, 5, 0), ones_diff_rows))
or_(or_(True, False), or_(False, True))
VAL TREES:
add(mul(ones_diff_cols, 52), mul(compare_blocks_cols, zeros_diff_rows))
add(add(add(add(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols))), add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols))))
add(mul(zeros_diff_cols, 30), add(zeros_diff_rows, ones_diff_rows))
add(mul(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols))
add(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows))
add(mul(add(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_rows)), mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, -54))), add(add(mul(zeros_diff_rows, zeros_diff_rows), mul(20, ones_diff_cols)), mul(mul(compare_blocks_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))), mul(add(add(mul(42, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, ones_diff_cols))), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows)))))
COND TREES:
ge(_if_then_else(False, ones_diff_cols, max_col_clue), _if_then_else(le(max_row_clue, _if_then_else(ge(0, _if_then_else(True, ones_diff_cols, max_row_clue)), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, _if_then_else(le(zeros_diff_rows, zeros_diff_rows), compare_blocks_cols, max_row_clue), compare_blocks_rows))), 2, max_col_clue))
and_(ge(_if_then_else(ge(0, zeros_diff_cols), zeros_diff_cols, _if_then_else(or_(ge(_if_then_else(False, 2, zeros_diff_cols), _if_then_else(False, 3, compare_blocks_rows)), and_(or_(False, False), and_(False, False))), _if_then_else(le(_if_then_else(False, zeros_diff_cols, 0), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(1, ones_diff_rows), _if_then_else(False, -26, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, 2)), _if_then_else(and_(False, False), _if_then_else(True, ones_diff_cols, zeros_diff_cols), _if_then_else(False, max_row_clue, ones_diff_rows))), _if_then_else(le(_if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, 3, zeros_diff_rows)), _if_then_else(or_(True, False), _if_then_else(True, max_col_clue, ones_diff_cols), _if_then_else(True, 0, compare_blocks_cols)), _if_then_else(le(max_col_clue, 86), _if_then_else(False, ones_diff_rows, max_row_clue), _if_then_else(True, max_row_clue, zeros_diff_cols))))), _if_then_else(False, 1, max_col_clue)), True)
and_(True, le(_if_then_else(and_(le(_if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(True, zeros_diff_cols, max_row_clue)), ge(_if_then_else(False, max_row_clue, 4), _if_then_else(True, max_col_clue, 4))), _if_then_else(le(_if_then_else(False, max_col_clue, 2), _if_then_else(True, compare_blocks_cols, 2)), _if_then_else(and_(False, False), _if_then_else(False, 0, 3), _if_then_else(True, max_row_clue, 3)), _if_then_else(and_(False, False), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, ones_diff_rows, ones_diff_cols))), _if_then_else(or_(or_(and_(False, False), ge(max_row_clue, max_col_clue)), and_(True, False)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, ones_diff_rows), compare_blocks_cols), _if_then_else(ge(4, 1), _if_then_else(True, 1, ones_diff_rows), _if_then_else(False, 2, 3)))), 53))
ge(zeros_diff_rows, _if_then_else(le(_if_then_else(False, ones_diff_cols, _if_then_else(False, 3, 1)), _if_then_else(ge(max_col_clue, max_col_clue), ones_diff_cols, 4)), _if_then_else(and_(False, False), 2, _if_then_else(le(1, _if_then_else(False, 3, zeros_diff_rows)), compare_blocks_rows, 4)), ones_diff_rows))
and_(True, or_(or_(ge(_if_then_else(or_(and_(True, True), or_(False, False)), _if_then_else(le(compare_blocks_cols, compare_blocks_cols), _if_then_else(False, max_col_clue, 2), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(and_(True, True), _if_then_else(le(_if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, 2, zeros_diff_rows)), _if_then_else(ge(ones_diff_rows, 4), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(True, 2, max_col_clue))), _if_then_else(or_(ge(ones_diff_cols, 2), and_(False, False)), _if_then_else(and_(False, True), _if_then_else(False, ones_diff_rows, 4), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, ones_diff_cols), _if_then_else(False, -26, zeros_diff_rows))), _if_then_else(or_(le(4, ones_diff_cols), or_(True, False)), _if_then_else(le(zeros_diff_rows, 0), _if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, max_col_clue, zeros_diff_rows)), _if_then_else(or_(False, False), _if_then_else(False, 2, ones_diff_cols), _if_then_else(False, 4, compare_blocks_rows)))), _if_then_else(or_(ge(_if_then_else(True, ones_diff_rows, 2), _if_then_else(False, zeros_diff_cols, 2)), and_(or_(False, True), ge(max_col_clue, max_row_clue))), _if_then_else(or_(or_(False, True), and_(True, True)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, 1, 1), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), _if_then_else(or_(True, True), _if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_cols, compare_blocks_rows))), _if_then_else(le(_if_then_else(True, ones_diff_rows, max_col_clue), _if_then_else(False, ones_diff_rows, zeros_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(False, 3, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, -45, 30), _if_then_else(False, zeros_diff_cols, max_row_clue))))), 14, ones_diff_rows), _if_then_else(False, compare_blocks_cols, 0))), _if_then_else(or_(and_(True, True), or_(False, True)), _if_then_else(or_(False, False), _if_then_else(True, 4, ones_diff_rows), _if_then_else(True, max_row_clue, 2)), _if_then_else(and_(False, True), _if_then_else(True, 3, 0), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)))), and_(ge(_if_then_else(ge(compare_blocks_cols, -53), _if_then_else(False, 4, 0), _if_then_else(False, zeros_diff_cols, max_col_clue)), _if_then_else(and_(and_(False, True), True), _if_then_else(False, max_col_clue, -76), _if_then_else(False, max_row_clue, max_col_clue))), le(_if_then_else(ge(zeros_diff_cols, max_col_clue), _if_then_else(True, zeros_diff_cols, ones_diff_cols), _if_then_else(True, compare_blocks_cols, -81)), _if_then_else(le(3, max_row_clue), _if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_rows, max_row_clue))))), ge(compare_blocks_rows, ones_diff_rows)))
VAL TREES:
mul(mul(zeros_diff_cols, compare_blocks_cols), add(mul(zeros_diff_cols, add(compare_blocks_cols, zeros_diff_cols)), compare_blocks_cols))
mul(mul(add(add(ones_diff_rows, 13), compare_blocks_rows), add(compare_blocks_cols, mul(-28, ones_diff_rows))), add(ones_diff_cols, -82))
add(mul(zeros_diff_cols, add(zeros_diff_cols, compare_blocks_rows)), mul(compare_blocks_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_cols))
add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))
mul(add(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, -66))
COND TREES:
or_(le(max_col_clue, zeros_diff_rows), True)
or_(le(max_col_clue, 2), ge(0, zeros_diff_cols))
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), _if_then_else(le(max_col_clue, 4), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, max_row_clue, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(False, _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(ge(compare_blocks_cols, zeros_diff_rows), 3, max_col_clue)), ge(4, compare_blocks_rows))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(or_(False, True), zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
ge(_if_then_else(le(_if_then_else(ge(1, 4), _if_then_else(False, max_row_clue, 2), _if_then_else(True, 1, max_col_clue)), _if_then_else(le(zeros_diff_rows, max_col_clue), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 1, 2))), _if_then_else(le(_if_then_else(False, ones_diff_rows, 0), _if_then_else(True, zeros_diff_cols, zeros_diff_rows)), _if_then_else(or_(False, True), _if_then_else(True, 0, 95), _if_then_else(True, max_row_clue, 4)), _if_then_else(ge(zeros_diff_cols, compare_blocks_cols), _if_then_else(False, ones_diff_rows, 2), _if_then_else(False, 1, compare_blocks_rows))), _if_then_else(le(_if_then_else(False, ones_diff_rows, max_row_clue), _if_then_else(True, zeros_diff_cols, max_col_clue)), _if_then_else(or_(True, True), _if_then_else(False, max_row_clue, -14), _if_then_else(False, compare_blocks_cols, compare_blocks_rows)), _if_then_else(le(compare_blocks_cols, 2), _if_then_else(False, 61, ones_diff_cols), _if_then_else(True, 3, 3)))), _if_then_else(or_(le(_if_then_else(True, 3, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, 2)), or_(or_(False, True), le(1, ones_diff_rows))), _if_then_else(and_(le(max_row_clue, 3), or_(False, True)), _if_then_else(le(ones_diff_cols, 1), _if_then_else(True, ones_diff_rows, 3), _if_then_else(True, 1, zeros_diff_rows)), _if_then_else(le(zeros_diff_cols, -57), _if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(False, 63, compare_blocks_rows))), _if_then_else(and_(and_(False, False), ge(compare_blocks_cols, max_row_clue)), _if_then_else(ge(compare_blocks_cols, max_row_clue), _if_then_else(False, -23, ones_diff_cols), _if_then_else(False, 4, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, ones_diff_cols, compare_blocks_cols), _if_then_else(False, ones_diff_rows, 4)))))
ge(_if_then_else(ge(ones_diff_cols, compare_blocks_rows), compare_blocks_cols, zeros_diff_rows), _if_then_else(True, _if_then_else(le(compare_blocks_cols, _if_then_else(or_(True, le(zeros_diff_cols, 4)), compare_blocks_cols, 0)), zeros_diff_rows, max_col_clue), ones_diff_rows))
or_(and_(False, False), le(ones_diff_rows, compare_blocks_cols))
or_(True, and_(le(_if_then_else(False, zeros_diff_rows, 2), ones_diff_cols), and_(ge(2, 0), and_(False, True))))
ge(_if_then_else(and_(or_(False, and_(True, True)), and_(False, False)), 2, _if_then_else(False, _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, 0, compare_blocks_rows))), _if_then_else(False, _if_then_else(and_(False, True), _if_then_else(True, 0, 1), _if_then_else(False, 1, 0)), _if_then_else(ge(zeros_diff_cols, 2), _if_then_else(False, 3, max_row_clue), _if_then_else(False, 0, 1))))
VAL TREES:
mul(add(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))
add(add(98, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_cols))
add(add(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols))
mul(add(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_cols))
mul(mul(mul(ones_diff_rows, ones_diff_cols), add(compare_blocks_rows, ones_diff_rows)), mul(add(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)))
add(mul(mul(zeros_diff_cols, -60), mul(ones_diff_rows, compare_blocks_cols)), add(mul(50, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)))
COND TREES:
or_(or_(True, ge(max_col_clue, 2)), False)
and_(le(zeros_diff_cols, 4), False)
or_(or_(False, False), le(_if_then_else(and_(or_(True, True), False), max_col_clue, _if_then_else(True, ones_diff_rows, ones_diff_cols)), _if_then_else(False, -24, -58)))
and_(le(_if_then_else(False, 4, _if_then_else(False, ones_diff_rows, 3)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(False, 4, ones_diff_cols), _if_then_else(True, 1, 1))), and_(or_(False, or_(False, True)), or_(and_(True, True), and_(True, False))))
le(_if_then_else(or_(False, False), _if_then_else(True, 0, max_col_clue), _if_then_else(True, 3, 4)), _if_then_else(and_(True, and_(True, False)), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(True, 53, zeros_diff_rows)))
VAL TREES:
mul(mul(add(mul(-51, compare_blocks_cols), add(ones_diff_cols, 58)), mul(mul(zeros_diff_rows, zeros_diff_rows), add(compare_blocks_cols, 19))), mul(add(add(69, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(-83, 36), add(-91, zeros_diff_cols))))
mul(mul(mul(-86, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(compare_blocks_cols, add(mul(mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_cols, ones_diff_rows), mul(42, zeros_diff_cols))), add(add(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_rows)), mul(mul(ones_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))))), mul(ones_diff_cols, compare_blocks_rows)))
add(add(compare_blocks_cols, mul(add(add(mul(add(compare_blocks_rows, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows))), add(add(add(ones_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, -84)), add(add(compare_blocks_cols, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)))), mul(add(add(add(zeros_diff_cols, ones_diff_rows), add(-95, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_cols), mul(compare_blocks_rows, compare_blocks_rows)), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)))))), mul(zeros_diff_rows, zeros_diff_cols))
mul(add(mul(ones_diff_cols, add(add(zeros_diff_cols, zeros_diff_cols), mul(21, compare_blocks_cols))), ones_diff_cols), add(add(compare_blocks_cols, ones_diff_rows), zeros_diff_cols))
add(mul(compare_blocks_cols, compare_blocks_cols), add(mul(ones_diff_rows, add(ones_diff_rows, mul(add(ones_diff_rows, add(mul(ones_diff_rows, compare_blocks_cols), ones_diff_rows)), add(mul(add(zeros_diff_rows, ones_diff_cols), zeros_diff_cols), ones_diff_rows)))), zeros_diff_cols))
add(mul(add(add(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, ones_diff_rows)), compare_blocks_rows), mul(ones_diff_rows, add(zeros_diff_rows, zeros_diff_rows)))
COND TREES:
or_(or_(or_(True, True), False), le(compare_blocks_cols, 0))
le(_if_then_else(True, compare_blocks_cols, compare_blocks_rows), compare_blocks_cols)
ge(1, _if_then_else(False, _if_then_else(True, ones_diff_rows, compare_blocks_cols), ones_diff_rows))
or_(le(zeros_diff_cols, -26), and_(False, True))
and_(and_(True, True), False)
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
or_(or_(True, ge(max_col_clue, ones_diff_cols)), or_(and_(False, False), False))
and_(le(zeros_diff_cols, 2), False)
or_(or_(False, False), le(_if_then_else(and_(or_(True, True), False), max_col_clue, _if_then_else(True, ones_diff_rows, zeros_diff_rows)), _if_then_else(False, -24, -58)))
and_(le(_if_then_else(False, _if_then_else(True, ones_diff_rows, 26), _if_then_else(False, ones_diff_rows, 3)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(False, 4, ones_diff_cols), _if_then_else(True, 1, 1))), and_(or_(False, or_(False, True)), or_(and_(True, True), True)))
le(_if_then_else(or_(False, False), _if_then_else(True, 0, max_col_clue), _if_then_else(True, 3, 4)), _if_then_else(and_(True, and_(True, False)), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(True, 53, zeros_diff_rows)))
VAL TREES:
mul(mul(add(mul(-51, compare_blocks_cols), add(ones_diff_cols, 58)), mul(mul(zeros_diff_rows, zeros_diff_rows), add(compare_blocks_cols, 19))), mul(add(add(69, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(-83, 36), add(-91, zeros_diff_cols))))
mul(mul(mul(-86, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)))
add(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols))
mul(add(mul(ones_diff_cols, -1), ones_diff_cols), add(add(compare_blocks_cols, ones_diff_rows), zeros_diff_cols))
add(mul(compare_blocks_cols, compare_blocks_cols), add(mul(ones_diff_rows, add(ones_diff_rows, zeros_diff_cols)), zeros_diff_cols))
add(mul(mul(zeros_diff_cols, zeros_diff_cols), compare_blocks_rows), mul(ones_diff_rows, add(zeros_diff_rows, zeros_diff_rows)))
COND TREES:
or_(or_(or_(True, False), True), le(_if_then_else(ge(compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 1, zeros_diff_cols), _if_then_else(False, max_col_clue, ones_diff_cols)), _if_then_else(le(19, 0), _if_then_else(True, zeros_diff_cols, 0), _if_then_else(False, 73, 31))))
le(_if_then_else(or_(and_(True, ge(3, ones_diff_rows)), or_(False, True)), compare_blocks_cols, compare_blocks_rows), _if_then_else(ge(max_col_clue, compare_blocks_rows), _if_then_else(le(3, 4), _if_then_else(False, max_col_clue, -31), _if_then_else(False, ones_diff_rows, _if_then_else(False, 3, zeros_diff_rows))), ones_diff_cols))
ge(_if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(ge(_if_then_else(True, _if_then_else(ge(_if_then_else(ge(0, 0), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(False, max_row_clue, max_col_clue)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_cols, 1), _if_then_else(True, zeros_diff_rows, 80))), _if_then_else(or_(le(3, zeros_diff_rows), le(2, zeros_diff_rows)), _if_then_else(ge(1, 3), _if_then_else(True, ones_diff_rows, 4), _if_then_else(False, zeros_diff_rows, max_row_clue)), _if_then_else(le(1, 0), _if_then_else(True, 1, 1), _if_then_else(False, compare_blocks_rows, 1))), _if_then_else(le(_if_then_else(False, 4, zeros_diff_cols), _if_then_else(False, max_row_clue, max_col_clue)), _if_then_else(and_(True, True), _if_then_else(True, -15, 2), _if_then_else(True, 4, ones_diff_rows)), _if_then_else(ge(0, 0), _if_then_else(False, compare_blocks_cols, 0), _if_then_else(False, ones_diff_rows, ones_diff_rows)))), 93), _if_then_else(False, max_row_clue, ones_diff_cols)), _if_then_else(or_(True, False), _if_then_else(True, max_col_clue, 3), _if_then_else(False, compare_blocks_cols, max_row_clue)), _if_then_else(le(zeros_diff_cols, 4), _if_then_else(True, ones_diff_cols, 1), _if_then_else(True, compare_blocks_rows, 4))))
or_(and_(ge(_if_then_else(or_(and_(ge(max_col_clue, -36), ge(max_row_clue, 1)), or_(or_(True, True), ge(max_col_clue, max_col_clue))), _if_then_else(le(_if_then_else(False, 3, ones_diff_rows), _if_then_else(False, ones_diff_cols, zeros_diff_cols)), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, -45, zeros_diff_cols), _if_then_else(False, 2, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, max_col_clue, 3))), _if_then_else(ge(_if_then_else(False, 4, max_row_clue), _if_then_else(False, 4, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, zeros_diff_cols, max_row_clue)), _if_then_else(ge(max_col_clue, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, ones_diff_rows, 4)))), _if_then_else(False, 3, compare_blocks_rows)), and_(le(1, max_row_clue), and_(True, True))), and_(or_(True, False), ge(max_row_clue, max_col_clue)))
and_(or_(or_(or_(and_(False, True), le(_if_then_else(True, _if_then_else(False, _if_then_else(False, 4, 2), compare_blocks_rows), compare_blocks_rows), 3)), le(_if_then_else(False, zeros_diff_cols, _if_then_else(False, compare_blocks_rows, zeros_diff_rows)), compare_blocks_cols)), True), or_(True, True))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
or_(and_(le(1, 93), or_(True, True)), le(compare_blocks_rows, _if_then_else(True, 1, max_col_clue)))
or_(or_(True, False), ge(_if_then_else(False, 4, _if_then_else(False, 3, max_col_clue)), _if_then_else(False, ones_diff_cols, 4)))
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, _if_then_else(ge(_if_then_else(False, 3, ones_diff_cols), 4), _if_then_else(False, _if_then_else(False, ones_diff_cols, -31), _if_then_else(True, 0, ones_diff_cols)), _if_then_else(or_(ge(ones_diff_rows, max_col_clue), True), _if_then_else(True, max_row_clue, 0), ones_diff_rows)))), _if_then_else(False, max_row_clue, 4), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(ge(2, ones_diff_rows), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, 3, 3)), le(_if_then_else(True, 0, -77), _if_then_else(False, 3, compare_blocks_rows)))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, _if_then_else(or_(True, or_(True, False)), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(False, 48, -67)), 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
ge(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(False, ones_diff_cols, ones_diff_rows))
and_(and_(or_(False, True), ge(_if_then_else(le(1, zeros_diff_rows), ones_diff_rows, _if_then_else(False, 1, compare_blocks_cols)), 2)), or_(or_(False, True), and_(False, False)))
and_(True, le(_if_then_else(True, max_row_clue, 70), _if_then_else(or_(and_(or_(True, True), ge(2, ones_diff_rows)), ge(_if_then_else(True, 4, zeros_diff_rows), _if_then_else(True, 1, compare_blocks_rows))), _if_then_else(or_(ge(1, 0), and_(True, True)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_rows, zeros_diff_rows), _if_then_else(True, 4, 4)), _if_then_else(le(zeros_diff_rows, 2), _if_then_else(False, 2, 0), _if_then_else(False, zeros_diff_rows, 1))), _if_then_else(or_(or_(True, True), and_(False, False)), _if_then_else(ge(max_row_clue, compare_blocks_rows), _if_then_else(False, 4, 1), _if_then_else(True, ones_diff_rows, 1)), _if_then_else(and_(False, True), _if_then_else(False, max_row_clue, 3), _if_then_else(False, 3, compare_blocks_cols))))))
ge(zeros_diff_rows, _if_then_else(or_(False, True), _if_then_else(and_(False, False), 2, _if_then_else(False, compare_blocks_rows, 4)), _if_then_else(ge(_if_then_else(and_(and_(True, True), and_(True, False)), _if_then_else(ge(45, 1), _if_then_else(True, compare_blocks_rows, 4), _if_then_else(False, max_row_clue, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(True, zeros_diff_rows, 47), _if_then_else(True, 36, 3))), _if_then_else(and_(ge(0, 1), le(1, -74)), _if_then_else(and_(True, False), _if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 2, compare_blocks_cols)), _if_then_else(le(compare_blocks_rows, 3), _if_then_else(False, max_col_clue, 54), _if_then_else(True, max_col_clue, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(False, 4, ones_diff_cols), _if_then_else(False, zeros_diff_cols, 1)), ge(_if_then_else(True, max_row_clue, zeros_diff_rows), _if_then_else(True, 2, ones_diff_rows))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, 68), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(18, 12), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(False, zeros_diff_cols, ones_diff_cols)), _if_then_else(le(2, ones_diff_rows), _if_then_else(True, 1, 5), _if_then_else(True, 95, 3))), _if_then_else(or_(le(0, 2), le(-5, compare_blocks_rows)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_cols, -56), _if_then_else(True, compare_blocks_cols, 3)), _if_then_else(le(ones_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 2), _if_then_else(True, 0, compare_blocks_cols)))), _if_then_else(le(_if_then_else(le(1, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(True, 2, ones_diff_cols)), _if_then_else(ge(1, 1), _if_then_else(True, compare_blocks_rows, 0), _if_then_else(False, compare_blocks_rows, compare_blocks_cols))), _if_then_else(le(_if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 2)), _if_then_else(ge(compare_blocks_rows, zeros_diff_cols), _if_then_else(False, ones_diff_cols, zeros_diff_rows), _if_then_else(False, 2, 1)), _if_then_else(and_(True, False), _if_then_else(False, 0, zeros_diff_cols), _if_then_else(True, 4, 0))), _if_then_else(and_(or_(True, False), ge(3, 3)), _if_then_else(or_(True, True), _if_then_else(True, 3, 3), _if_then_else(True, max_col_clue, 3)), _if_then_else(le(zeros_diff_cols, ones_diff_rows), _if_then_else(False, 12, ones_diff_cols), _if_then_else(False, 0, zeros_diff_rows)))))))
and_(le(_if_then_else(False, max_col_clue, compare_blocks_rows), max_row_clue), or_(le(_if_then_else(ge(2, _if_then_else(True, -78, 1)), _if_then_else(and_(True, True), 4, _if_then_else(True, 3, 0)), _if_then_else(and_(False, True), compare_blocks_rows, max_row_clue)), _if_then_else(False, max_row_clue, max_row_clue)), True))
VAL TREES:
mul(mul(zeros_diff_cols, compare_blocks_cols), add(mul(zeros_diff_cols, add(compare_blocks_cols, zeros_diff_cols)), compare_blocks_cols))
mul(mul(add(add(ones_diff_rows, 13), compare_blocks_rows), add(compare_blocks_cols, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(-31, compare_blocks_cols)), add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_cols))), ones_diff_rows))), add(ones_diff_cols, -82))
add(add(compare_blocks_cols, compare_blocks_rows), mul(-15, zeros_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_rows), add(add(mul(compare_blocks_cols, zeros_diff_rows), mul(-51, compare_blocks_rows)), compare_blocks_cols))
add(add(mul(mul(compare_blocks_rows, add(ones_diff_cols, 25)), mul(compare_blocks_rows, 12)), ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))
mul(add(compare_blocks_rows, zeros_diff_rows), add(add(mul(add(ones_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_cols)), add(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows))), mul(add(mul(zeros_diff_rows, ones_diff_rows), mul(compare_blocks_cols, 26)), add(add(73, zeros_diff_cols), add(ones_diff_rows, zeros_diff_cols)))))
COND TREES:
or_(or_(True, True), le(max_col_clue, zeros_diff_cols))
le(0, _if_then_else(le(compare_blocks_cols, _if_then_else(or_(True, True), compare_blocks_cols, 0)), compare_blocks_cols, ones_diff_cols))
ge(_if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(and_(False, False), max_col_clue, 3))
or_(False, False)
and_(False, and_(False, False))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
ge(_if_then_else(le(_if_then_else(ge(1, 4), _if_then_else(False, max_row_clue, 2), _if_then_else(True, 1, max_col_clue)), _if_then_else(le(zeros_diff_rows, max_col_clue), _if_then_else(False, ones_diff_rows, 0), _if_then_else(False, 1, 2))), _if_then_else(le(_if_then_else(False, ones_diff_rows, 0), _if_then_else(True, _if_then_else(True, 1, max_col_clue), zeros_diff_rows)), _if_then_else(or_(False, True), _if_then_else(True, 0, 95), _if_then_else(True, max_row_clue, 4)), _if_then_else(ge(zeros_diff_cols, compare_blocks_cols), _if_then_else(False, ones_diff_rows, 2), _if_then_else(False, 1, compare_blocks_rows))), _if_then_else(le(_if_then_else(False, ones_diff_rows, max_row_clue), _if_then_else(True, zeros_diff_cols, max_col_clue)), _if_then_else(or_(True, True), _if_then_else(False, max_row_clue, -14), _if_then_else(False, compare_blocks_cols, compare_blocks_rows)), _if_then_else(le(compare_blocks_cols, 2), _if_then_else(False, 61, ones_diff_cols), _if_then_else(True, 3, 3)))), _if_then_else(or_(le(_if_then_else(True, 3, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, 2)), or_(or_(False, True), le(1, ones_diff_rows))), _if_then_else(and_(le(max_row_clue, 3), or_(False, True)), _if_then_else(le(ones_diff_cols, 1), _if_then_else(True, ones_diff_rows, 3), _if_then_else(True, 1, zeros_diff_rows)), _if_then_else(le(zeros_diff_cols, -57), _if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(False, 63, compare_blocks_rows))), _if_then_else(and_(and_(False, False), ge(compare_blocks_cols, max_row_clue)), _if_then_else(ge(compare_blocks_cols, max_row_clue), _if_then_else(False, -23, ones_diff_cols), _if_then_else(False, 4, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, ones_diff_cols, compare_blocks_cols), _if_then_else(False, ones_diff_rows, 4)))))
ge(_if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, _if_then_else(le(3, 1), zeros_diff_rows, max_col_clue), ones_diff_rows))
or_(False, le(ones_diff_rows, compare_blocks_cols))
or_(True, and_(le(_if_then_else(False, zeros_diff_rows, 2), _if_then_else(True, max_col_clue, 2)), and_(ge(2, 0), and_(False, True))))
ge(_if_then_else(and_(or_(False, and_(True, True)), or_(True, True)), 2, _if_then_else(False, _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, 0, compare_blocks_rows))), _if_then_else(ge(_if_then_else(True, 0, 4), _if_then_else(False, 0, 2)), _if_then_else(and_(False, True), _if_then_else(True, 0, 1), _if_then_else(False, 1, 0)), _if_then_else(ge(zeros_diff_cols, 2), _if_then_else(False, 3, max_row_clue), _if_then_else(False, 0, 1))))
VAL TREES:
mul(add(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))
add(add(98, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_cols))
add(add(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols))
mul(add(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_cols))
mul(mul(mul(ones_diff_rows, ones_diff_cols), add(compare_blocks_rows, ones_diff_rows)), mul(add(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)))
add(mul(mul(zeros_diff_cols, -60), mul(ones_diff_rows, compare_blocks_cols)), add(mul(50, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)))
COND TREES:
or_(and_(and_(True, False), and_(False, True)), and_(False, le(ones_diff_cols, compare_blocks_cols)))
le(_if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_cols))
and_(and_(True, False), and_(True, True))
le(_if_then_else(True, 3, _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_cols, max_row_clue), _if_then_else(True, 4, 3))), _if_then_else(True, 1, zeros_diff_rows))
and_(le(max_col_clue, compare_blocks_rows), False)
VAL TREES:
add(add(ones_diff_rows, mul(compare_blocks_cols, compare_blocks_rows)), add(add(-50, compare_blocks_rows), -29))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_rows)))
add(add(add(-63, zeros_diff_cols), mul(49, 62)), mul(-33, compare_blocks_rows))
add(add(zeros_diff_rows, zeros_diff_cols), add(mul(add(compare_blocks_cols, mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_rows))), add(zeros_diff_cols, ones_diff_cols)), ones_diff_cols))
add(add(compare_blocks_cols, zeros_diff_rows), add(42, mul(add(add(mul(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, -46), mul(compare_blocks_rows, 43))), mul(add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_rows))))))
add(add(7, zeros_diff_rows), mul(mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)), ones_diff_rows))
COND TREES:
and_(le(4, zeros_diff_rows), and_(and_(ge(compare_blocks_cols, zeros_diff_rows), True), ge(ones_diff_rows, zeros_diff_cols)))
ge(24, _if_then_else(False, ones_diff_rows, max_row_clue))
or_(le(_if_then_else(ge(ones_diff_rows, -85), _if_then_else(False, max_row_clue, 0), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, -14), _if_then_else(True, 0, ones_diff_cols))), or_(and_(or_(False, True), False), and_(or_(False, False), and_(True, True))))
or_(and_(False, ge(3, zeros_diff_rows)), ge(_if_then_else(False, ones_diff_cols, 0), ones_diff_rows))
or_(and_(and_(False, True), ge(4, 35)), or_(False, True))
VAL TREES:
add(mul(ones_diff_cols, 52), mul(compare_blocks_cols, zeros_diff_rows))
add(add(add(add(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols))), add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols))))
add(mul(zeros_diff_cols, 30), add(zeros_diff_rows, ones_diff_rows))
add(mul(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols))
add(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows))
add(mul(add(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_rows)), mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, -54))), add(add(mul(zeros_diff_rows, zeros_diff_rows), mul(20, ones_diff_cols)), mul(mul(compare_blocks_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))), mul(add(add(mul(42, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, ones_diff_cols))), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows)))))
COND TREES:
or_(or_(True, ge(max_col_clue, 2)), or_(and_(False, False), False))
and_(le(zeros_diff_cols, 2), le(_if_then_else(or_(True, False), _if_then_else(True, 3, compare_blocks_cols), _if_then_else(True, compare_blocks_cols, zeros_diff_rows)), _if_then_else(ge(3, 4), _if_then_else(False, 1, 3), _if_then_else(False, compare_blocks_cols, max_row_clue))))
or_(or_(False, False), le(_if_then_else(ge(ones_diff_rows, ones_diff_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(False, -24, -58)))
and_(le(_if_then_else(False, _if_then_else(True, ones_diff_rows, 26), _if_then_else(False, ones_diff_rows, 3)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(False, 4, ones_diff_cols), _if_then_else(True, 1, 1))), and_(or_(False, or_(False, True)), or_(and_(True, True), and_(True, False))))
le(_if_then_else(or_(False, False), _if_then_else(True, 0, max_col_clue), _if_then_else(True, 3, 4)), _if_then_else(or_(ge(_if_then_else(True, 0, -81), _if_then_else(True, zeros_diff_cols, 0)), or_(or_(True, True), or_(True, False))), _if_then_else(and_(or_(False, True), le(zeros_diff_cols, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_rows, 2), _if_then_else(True, max_col_clue, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(True, 0, compare_blocks_cols), _if_then_else(False, max_row_clue, compare_blocks_cols))), _if_then_else(or_(ge(3, zeros_diff_rows), ge(compare_blocks_rows, ones_diff_cols)), _if_then_else(and_(False, False), _if_then_else(True, 2, ones_diff_rows), _if_then_else(False, 4, zeros_diff_rows)), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_rows, 3), _if_then_else(False, 2, 0)))))
VAL TREES:
mul(mul(add(mul(-51, compare_blocks_cols), add(ones_diff_cols, 58)), mul(mul(zeros_diff_rows, zeros_diff_rows), add(compare_blocks_cols, 19))), mul(add(add(69, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(-83, 36), add(-91, zeros_diff_cols))))
mul(mul(mul(-86, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)))
add(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols))
mul(add(mul(ones_diff_cols, -1), ones_diff_cols), add(add(compare_blocks_cols, ones_diff_rows), zeros_diff_cols))
add(mul(compare_blocks_cols, compare_blocks_cols), add(mul(ones_diff_rows, add(ones_diff_rows, zeros_diff_cols)), zeros_diff_cols))
add(mul(mul(zeros_diff_cols, zeros_diff_cols), compare_blocks_rows), mul(ones_diff_rows, add(zeros_diff_rows, zeros_diff_rows)))
COND TREES:
or_(or_(or_(False, False), True), False)
le(_if_then_else(True, 2, _if_then_else(ge(zeros_diff_cols, _if_then_else(False, zeros_diff_cols, max_row_clue)), _if_then_else(False, 1, 34), _if_then_else(True, 4, 3))), _if_then_else(False, compare_blocks_cols, ones_diff_cols))
ge(_if_then_else(and_(le(0, 2), or_(False, False)), _if_then_else(ge(zeros_diff_rows, 2), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(False, 1, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(or_(False, False), 87, 0))), _if_then_else(le(_if_then_else(False, zeros_diff_cols, 1), _if_then_else(True, -62, 0)), _if_then_else(ge(2, 1), _if_then_else(False, max_col_clue, ones_diff_rows), _if_then_else(True, 2, max_col_clue)), _if_then_else(and_(False, False), _if_then_else(True, max_col_clue, ones_diff_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_cols))))
or_(le(zeros_diff_cols, zeros_diff_rows), and_(or_(True, and_(True, False)), le(0, _if_then_else(False, 4, _if_then_else(ge(compare_blocks_cols, _if_then_else(and_(False, ge(compare_blocks_rows, _if_then_else(False, compare_blocks_rows, compare_blocks_rows))), compare_blocks_rows, 1)), _if_then_else(True, _if_then_else(and_(False, ge(1, compare_blocks_rows)), _if_then_else(and_(False, False), 2, 1), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), 4, compare_blocks_rows)), 78), _if_then_else(or_(True, False), _if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, 0, _if_then_else(False, 3, _if_then_else(False, ones_diff_rows, 2)))))))))
and_(or_(False, True), ge(_if_then_else(False, _if_then_else(and_(True, True), max_col_clue, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, max_col_clue)), _if_then_else(ge(max_row_clue, zeros_diff_cols), _if_then_else(False, max_row_clue, 2), _if_then_else(True, compare_blocks_cols, ones_diff_cols))))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(mul(mul(mul(mul(mul(zeros_diff_cols, zeros_diff_rows), add(37, zeros_diff_cols)), mul(add(zeros_diff_rows, zeros_diff_cols), mul(79, zeros_diff_cols))), mul(add(mul(ones_diff_cols, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), mul(mul(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows)))), add(add(add(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_cols, compare_blocks_cols)), mul(mul(zeros_diff_cols, ones_diff_cols), mul(34, zeros_diff_rows))), mul(add(add(ones_diff_rows, ones_diff_cols), mul(compare_blocks_rows, compare_blocks_rows)), add(mul(47, -60), mul(ones_diff_rows, zeros_diff_rows))))), compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(mul(mul(33, mul(compare_blocks_rows, compare_blocks_cols)), add(ones_diff_rows, zeros_diff_cols)), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
and_(and_(le(0, ones_diff_rows), ge(compare_blocks_rows, 1)), ge(_if_then_else(False, 4, zeros_diff_cols), _if_then_else(True, 2, zeros_diff_cols)))
or_(le(_if_then_else(and_(or_(le(_if_then_else(False, 2, 3), _if_then_else(True, max_row_clue, ones_diff_rows)), ge(_if_then_else(False, ones_diff_cols, 3), _if_then_else(False, 0, 2))), or_(le(_if_then_else(False, 3, 0), _if_then_else(True, ones_diff_rows, 1)), le(_if_then_else(False, 3, -31), _if_then_else(True, -71, max_row_clue)))), _if_then_else(ge(_if_then_else(and_(False, True), _if_then_else(False, 0, max_col_clue), _if_then_else(True, 50, zeros_diff_cols)), _if_then_else(le(max_col_clue, zeros_diff_cols), _if_then_else(True, 3, ones_diff_cols), _if_then_else(False, max_row_clue, max_col_clue))), _if_then_else(ge(_if_then_else(False, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(ge(compare_blocks_rows, 0), _if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(True, 19, max_col_clue)), _if_then_else(and_(True, True), _if_then_else(True, 3, 4), _if_then_else(False, 4, compare_blocks_rows))), _if_then_else(or_(and_(False, False), or_(True, False)), _if_then_else(or_(True, True), _if_then_else(True, 0, 3), _if_then_else(True, ones_diff_rows, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(True, max_col_clue, ones_diff_cols), _if_then_else(True, max_col_clue, max_col_clue)))), _if_then_else(le(_if_then_else(or_(True, False), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(False, ones_diff_cols, 0)), _if_then_else(ge(2, ones_diff_cols), _if_then_else(False, 2, max_col_clue), _if_then_else(True, 4, compare_blocks_cols))), _if_then_else(or_(and_(True, True), ge(2, 1)), _if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 2, 0)), _if_then_else(ge(43, ones_diff_rows), _if_then_else(True, 3, ones_diff_cols), _if_then_else(True, ones_diff_rows, 3))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 0, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(False, zeros_diff_cols, 62), _if_then_else(True, max_col_clue, zeros_diff_rows)), _if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_cols, zeros_diff_cols))))), 2), ge(_if_then_else(True, ones_diff_cols, 4), zeros_diff_cols))
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), _if_then_else(le(max_col_clue, 4), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, _if_then_else(le(4, zeros_diff_cols), _if_then_else(False, 50, 3), _if_then_else(False, -20, 33)), compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(False, _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(ge(compare_blocks_cols, zeros_diff_rows), 3, max_col_clue)), or_(and_(ge(_if_then_else(False, max_col_clue, max_row_clue), _if_then_else(True, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(False, ones_diff_rows, 4), _if_then_else(False, max_row_clue, compare_blocks_cols))), le(_if_then_else(le(4, 0), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(True, 3, max_row_clue)), _if_then_else(le(3, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, zeros_diff_cols), _if_then_else(True, 4, 0)))))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(or_(False, True), zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
ge(max_col_clue, _if_then_else(and_(and_(ge(ones_diff_cols, zeros_diff_rows), ge(max_col_clue, compare_blocks_rows)), False), max_row_clue, 1))
ge(_if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(and_(and_(le(0, _if_then_else(False, zeros_diff_rows, 4)), ge(_if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(False, 4, ones_diff_cols))), and_(le(_if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows)), and_(and_(True, True), and_(False, True)))), zeros_diff_cols, compare_blocks_cols))
or_(ge(max_row_clue, _if_then_else(and_(True, True), _if_then_else(True, 3, 3), _if_then_else(False, zeros_diff_rows, ones_diff_rows))), True)
le(_if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(ge(4, compare_blocks_rows), zeros_diff_rows, 2))
le(_if_then_else(False, _if_then_else(ge(56, max_row_clue), _if_then_else(True, _if_then_else(le(_if_then_else(False, 4, compare_blocks_rows), 0), 2, -54), max_row_clue), _if_then_else(le(2, _if_then_else(False, ones_diff_rows, 11)), ones_diff_cols, 2)), max_row_clue), _if_then_else(False, ones_diff_rows, -67))
VAL TREES:
add(mul(ones_diff_rows, zeros_diff_rows), add(-49, zeros_diff_rows))
add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, -94))
mul(mul(zeros_diff_rows, ones_diff_cols), mul(mul(add(61, ones_diff_cols), zeros_diff_cols), ones_diff_rows))
add(mul(zeros_diff_cols, mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), 67))
mul(add(zeros_diff_rows, -21), add(zeros_diff_rows, zeros_diff_cols))
add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols))
COND TREES:
or_(and_(False, True), le(_if_then_else(False, compare_blocks_rows, _if_then_else(False, max_row_clue, zeros_diff_cols)), 0))
le(ones_diff_cols, _if_then_else(ge(_if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(False, zeros_diff_rows, 0), _if_then_else(False, 3, compare_blocks_rows)), _if_then_else(ge(max_row_clue, compare_blocks_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(True, ones_diff_cols, zeros_diff_cols))), compare_blocks_rows, compare_blocks_cols))
ge(_if_then_else(False, max_row_clue, _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, -70), _if_then_else(True, 3, ones_diff_rows))), _if_then_else(le(compare_blocks_cols, compare_blocks_cols), _if_then_else(True, max_col_clue, 3), _if_then_else(False, -76, zeros_diff_cols)))
or_(False, or_(False, and_(ge(max_col_clue, ones_diff_cols), or_(False, True))))
and_(or_(or_(False, True), True), and_(and_(False, le(3, 4)), le(compare_blocks_cols, _if_then_else(False, 3, _if_then_else(False, zeros_diff_cols, max_row_clue)))))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(add(-22, compare_blocks_rows), add(ones_diff_cols, compare_blocks_cols)))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), mul(add(add(mul(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), add(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, ones_diff_cols))), mul(add(add(-38, zeros_diff_cols), mul(-65, ones_diff_rows)), mul(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, zeros_diff_rows))))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(mul(mul(ones_diff_cols, 70), add(zeros_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_cols)))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_rows, 72))))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
ge(_if_then_else(False, _if_then_else(True, 2, max_row_clue), _if_then_else(False, 0, max_col_clue)), _if_then_else(ge(3, max_row_clue), zeros_diff_rows, _if_then_else(True, 3, -9)))
or_(or_(or_(True, False), ge(_if_then_else(True, zeros_diff_cols, _if_then_else(True, zeros_diff_rows, max_row_clue)), _if_then_else(False, max_col_clue, _if_then_else(True, max_row_clue, _if_then_else(False, 0, ones_diff_cols))))), and_(or_(False, False), True))
or_(or_(le(_if_then_else(False, _if_then_else(ge(_if_then_else(True, compare_blocks_rows, 2), 2), _if_then_else(True, 3, ones_diff_rows), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), 4), _if_then_else(True, ones_diff_rows, max_row_clue)), le(_if_then_else(True, 3, max_row_clue), _if_then_else(False, -33, zeros_diff_rows))), ge(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 1, compare_blocks_rows)), _if_then_else(le(_if_then_else(True, max_row_clue, 70), compare_blocks_rows), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(False, ones_diff_rows, zeros_diff_rows))))
and_(le(4, _if_then_else(True, 50, ones_diff_cols)), False)
ge(_if_then_else(or_(and_(False, False), ge(compare_blocks_cols, 3)), _if_then_else(False, _if_then_else(False, max_row_clue, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, ones_diff_cols, compare_blocks_rows))), _if_then_else(and_(and_(and_(le(max_col_clue, 0), False), False), le(max_row_clue, max_col_clue)), _if_then_else(le(max_col_clue, zeros_diff_rows), _if_then_else(or_(ge(2, -32), True), zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 1, 3)), _if_then_else(ge(3, max_row_clue), _if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 0, ones_diff_cols))))
VAL TREES:
add(add(ones_diff_rows, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols))
mul(mul(add(compare_blocks_cols, 73), mul(ones_diff_rows, compare_blocks_rows)), mul(92, add(compare_blocks_cols, zeros_diff_rows)))
mul(add(compare_blocks_rows, ones_diff_cols), mul(74, 89))
add(add(compare_blocks_cols, compare_blocks_rows), mul(-44, 54))
mul(mul(add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), mul(add(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_rows, ones_diff_rows))), mul(mul(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_cols, zeros_diff_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_rows))))
add(add(compare_blocks_rows, zeros_diff_rows), add(54, ones_diff_rows))
COND TREES:
or_(or_(True, True), and_(ge(4, ones_diff_cols), and_(False, False)))
le(0, _if_then_else(le(2, 4), compare_blocks_cols, ones_diff_cols))
ge(_if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(False, 3, _if_then_else(True, max_col_clue, zeros_diff_rows)))
or_(False, le(ones_diff_cols, -27))
and_(and_(True, False), True)
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(add(add(mul(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows))), mul(mul(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_cols, -52)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))), add(compare_blocks_rows, compare_blocks_cols))))
add(mul(add(add(ones_diff_rows, zeros_diff_rows), add(compare_blocks_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_rows, zeros_diff_rows))), add(compare_blocks_cols, compare_blocks_rows))
add(add(add(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows)), add(add(compare_blocks_cols, ones_diff_rows), add(5, zeros_diff_rows))), add(mul(add(compare_blocks_cols, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_cols)), mul(add(compare_blocks_cols, 91), add(compare_blocks_rows, compare_blocks_rows))))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(add(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows)), mul(mul(zeros_diff_cols, 7), add(ones_diff_cols, zeros_diff_rows))))
COND TREES:
or_(le(_if_then_else(False, zeros_diff_rows, _if_then_else(True, compare_blocks_rows, max_col_clue)), _if_then_else(False, max_row_clue, compare_blocks_cols)), True)
le(_if_then_else(or_(le(_if_then_else(False, 2, compare_blocks_rows), _if_then_else(False, -73, 3)), or_(le(4, zeros_diff_rows), le(2, compare_blocks_rows))), _if_then_else(ge(_if_then_else(False, 0, 1), _if_then_else(True, zeros_diff_rows, 3)), _if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(and_(False, True), _if_then_else(True, 3, 0), _if_then_else(False, -26, ones_diff_cols))), _if_then_else(and_(le(zeros_diff_rows, zeros_diff_cols), le(4, ones_diff_rows)), _if_then_else(or_(False, True), _if_then_else(True, zeros_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_cols, compare_blocks_cols)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(False, max_col_clue, -8), _if_then_else(False, zeros_diff_cols, compare_blocks_cols)))), _if_then_else(False, 1, zeros_diff_cols))
and_(le(max_row_clue, 1), and_(and_(False, False), or_(True, True)))
le(_if_then_else(or_(True, True), _if_then_else(False, max_col_clue, max_row_clue), _if_then_else(False, zeros_diff_rows, 3)), _if_then_else(True, -26, zeros_diff_rows))
le(_if_then_else(or_(ge(_if_then_else(False, ones_diff_cols, ones_diff_cols), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)), le(_if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, 0, 1))), _if_then_else(and_(and_(True, True), and_(True, True)), _if_then_else(or_(False, False), _if_then_else(True, 0, -83), _if_then_else(True, 2, zeros_diff_cols)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_cols, max_col_clue), _if_then_else(True, zeros_diff_cols, compare_blocks_rows))), _if_then_else(or_(le(1, zeros_diff_cols), or_(True, False)), _if_then_else(ge(max_col_clue, compare_blocks_cols), _if_then_else(True, max_row_clue, zeros_diff_rows), _if_then_else(True, 4, zeros_diff_rows)), _if_then_else(or_(False, False), _if_then_else(False, 4, ones_diff_cols), _if_then_else(True, 32, zeros_diff_rows)))), _if_then_else(and_(and_(or_(False, False), ge(zeros_diff_cols, zeros_diff_rows)), and_(or_(False, False), and_(True, False))), _if_then_else(or_(ge(ones_diff_cols, -97), le(ones_diff_rows, compare_blocks_cols)), _if_then_else(le(max_col_clue, 4), _if_then_else(True, zeros_diff_cols, max_col_clue), _if_then_else(False, zeros_diff_rows, max_row_clue)), _if_then_else(le(compare_blocks_rows, 2), _if_then_else(False, ones_diff_rows, max_col_clue), _if_then_else(True, 0, 0))), _if_then_else(le(_if_then_else(False, 4, ones_diff_rows), _if_then_else(False, 4, 1)), _if_then_else(or_(True, False), _if_then_else(False, 4, 2), _if_then_else(False, max_row_clue, 1)), _if_then_else(and_(True, True), _if_then_else(True, 3, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, compare_blocks_cols)))))
VAL TREES:
add(mul(add(mul(zeros_diff_rows, compare_blocks_rows), zeros_diff_rows), ones_diff_cols), mul(zeros_diff_rows, -35))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_rows))
add(mul(ones_diff_rows, ones_diff_cols), mul(-33, compare_blocks_rows))
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols))
add(add(compare_blocks_cols, zeros_diff_rows), add(42, zeros_diff_cols))
add(add(7, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows))
COND TREES:
or_(or_(True, False), le(_if_then_else(le(ones_diff_cols, 83), _if_then_else(False, 0, compare_blocks_rows), _if_then_else(False, 1, 2)), _if_then_else(True, 1, max_col_clue)))
or_(le(max_col_clue, _if_then_else(False, max_col_clue, _if_then_else(and_(and_(True, False), False), _if_then_else(True, 3, -70), _if_then_else(True, 1, -7)))), ge(0, zeros_diff_cols))
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), _if_then_else(False, max_row_clue, 4), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(ge(2, ones_diff_rows), _if_then_else(True, _if_then_else(ge(zeros_diff_rows, _if_then_else(True, _if_then_else(False, zeros_diff_rows, 0), 0)), _if_then_else(or_(False, False), max_row_clue, 0), _if_then_else(True, _if_then_else(False, max_row_clue, compare_blocks_cols), 2)), max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, 3, 3)), le(_if_then_else(True, 0, -77), _if_then_else(False, 3, compare_blocks_rows)))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(_if_then_else(and_(True, False), _if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, 2, zeros_diff_cols)), _if_then_else(le(zeros_diff_rows, 0), _if_then_else(True, max_row_clue, zeros_diff_rows), _if_then_else(False, 2, zeros_diff_rows))), _if_then_else(and_(or_(False, False), le(4, zeros_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, 0, ones_diff_rows), _if_then_else(False, zeros_diff_cols, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 4), _if_then_else(False, -67, 1), _if_then_else(True, 35, zeros_diff_cols))), _if_then_else(ge(_if_then_else(False, 80, 2), _if_then_else(True, 1, max_col_clue)), _if_then_else(ge(zeros_diff_rows, max_col_clue), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(False, max_col_clue, 34)))))), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
ge(_if_then_else(or_(ge(1, max_row_clue), le(max_col_clue, zeros_diff_rows)), 79, -96), compare_blocks_cols)
and_(le(compare_blocks_cols, _if_then_else(True, 3, 1)), False)
or_(and_(ge(_if_then_else(ge(0, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 4, ones_diff_rows)), _if_then_else(False, compare_blocks_rows, 0)), and_(and_(and_(True, True), and_(False, True)), or_(ge(ones_diff_cols, ones_diff_cols), and_(False, True)))), ge(zeros_diff_rows, _if_then_else(True, _if_then_else(or_(True, True), _if_then_else(False, 2, 4), _if_then_else(True, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, 2), _if_then_else(False, 0, 3)))))
or_(le(1, _if_then_else(ge(max_col_clue, 4), zeros_diff_cols, 2)), False)
or_(False, True)
VAL TREES:
add(mul(compare_blocks_cols, zeros_diff_cols), mul(mul(83, ones_diff_cols), compare_blocks_cols))
mul(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows))
add(add(add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(38, ones_diff_rows))), add(mul(add(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), mul(mul(78, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_rows))))
add(add(mul(ones_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(add(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_cols, 17), mul(ones_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, ones_diff_rows), add(7, zeros_diff_cols)))
add(mul(mul(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(83, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows)))
COND TREES:
or_(le(max_col_clue, zeros_diff_rows), le(compare_blocks_rows, _if_then_else(True, 1, max_col_clue)))
or_(False, ge(0, zeros_diff_cols))
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), _if_then_else(False, max_row_clue, 4), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_rows, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(ge(2, ones_diff_rows), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, 3, 3)), le(_if_then_else(True, 0, -77), _if_then_else(False, 3, compare_blocks_rows)))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
or_(le(max_col_clue, zeros_diff_rows), le(_if_then_else(False, ones_diff_rows, 2), _if_then_else(le(compare_blocks_rows, _if_then_else(True, 1, max_col_clue)), 1, max_col_clue)))
or_(le(max_col_clue, _if_then_else(le(max_col_clue, _if_then_else(False, max_col_clue, 2)), 1, 2)), ge(0, zeros_diff_cols))
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), _if_then_else(False, max_row_clue, 4), _if_then_else(or_(False, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_cols), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(ge(2, ones_diff_rows), _if_then_else(True, max_row_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(zeros_diff_rows, _if_then_else(False, zeros_diff_rows, 3)), le(_if_then_else(True, 0, -77), _if_then_else(False, 3, compare_blocks_rows)))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), compare_blocks_cols), _if_then_else(and_(False, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), 3, _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
or_(and_(True, False), le(zeros_diff_rows, zeros_diff_rows))
le(_if_then_else(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(True, max_row_clue, 82)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(ones_diff_cols, ones_diff_cols), _if_then_else(True, 0, max_row_clue), _if_then_else(False, ones_diff_cols, zeros_diff_cols))), _if_then_else(False, compare_blocks_cols, ones_diff_cols))
ge(_if_then_else(le(_if_then_else(False, 4, 61), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(or_(False, True), _if_then_else(True, 2, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, 1)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_rows, zeros_diff_cols), _if_then_else(True, 3, zeros_diff_rows))), _if_then_else(True, compare_blocks_cols, compare_blocks_cols))
or_(le(zeros_diff_cols, _if_then_else(and_(True, or_(False, True)), _if_then_else(ge(_if_then_else(False, 1, _if_then_else(and_(False, False), 2, _if_then_else(le(_if_then_else(True, 0, -77), _if_then_else(False, 3, compare_blocks_rows)), compare_blocks_rows, 4))), 2), 1, zeros_diff_rows), _if_then_else(True, -50, zeros_diff_cols))), and_(False, le(0, 2)))
and_(and_(ge(ones_diff_rows, compare_blocks_rows), ge(ones_diff_cols, zeros_diff_rows)), or_(True, True))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, mul(mul(-5, zeros_diff_cols), add(zeros_diff_cols, zeros_diff_rows))))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_rows)), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(mul(mul(add(mul(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, zeros_diff_cols))), add(add(add(96, 88), mul(compare_blocks_cols, ones_diff_rows)), add(mul(54, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows)))), zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, mul(mul(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, mul(ones_diff_cols, compare_blocks_rows)))), mul(mul(ones_diff_rows, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(add(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_rows, mul(zeros_diff_cols, add(compare_blocks_cols, 87)))), -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(mul(mul(mul(zeros_diff_rows, ones_diff_rows), mul(ones_diff_cols, zeros_diff_cols)), mul(add(16, zeros_diff_rows), add(ones_diff_rows, -44))), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(add(add(zeros_diff_rows, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
or_(or_(or_(True, False), True), le(0, 0))
le(_if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(ge(max_col_clue, compare_blocks_rows), compare_blocks_cols, ones_diff_cols))
ge(_if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(le(_if_then_else(True, 3, zeros_diff_cols), 2), compare_blocks_cols, compare_blocks_cols))
or_(False, and_(or_(True, False), ge(max_row_clue, max_col_clue)))
and_(or_(False, True), True)
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
ge(zeros_diff_cols, _if_then_else(or_(or_(ge(-7, _if_then_else(and_(True, True), _if_then_else(le(3, zeros_diff_rows), zeros_diff_cols, max_row_clue), _if_then_else(True, 4, 3))), ge(_if_then_else(and_(and_(True, True), le(ones_diff_cols, 1)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, 1), _if_then_else(True, 1, max_row_clue)), _if_then_else(le(2, 1), _if_then_else(True, max_col_clue, ones_diff_cols), _if_then_else(False, 69, zeros_diff_cols))), _if_then_else(le(_if_then_else(True, 0, compare_blocks_rows), _if_then_else(True, max_col_clue, 0)), _if_then_else(ge(max_row_clue, compare_blocks_cols), _if_then_else(True, -38, zeros_diff_rows), _if_then_else(True, 4, max_col_clue)), _if_then_else(le(zeros_diff_cols, 2), _if_then_else(True, max_row_clue, 3), _if_then_else(True, ones_diff_rows, 51))))), True), _if_then_else(False, max_col_clue, 21), _if_then_else(False, zeros_diff_rows, -64)))
ge(_if_then_else(ge(_if_then_else(le(0, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, compare_blocks_cols, max_col_clue)), _if_then_else(le(max_row_clue, 4), _if_then_else(False, 3, ones_diff_rows), _if_then_else(False, 4, zeros_diff_rows))), compare_blocks_rows, compare_blocks_rows), _if_then_else(False, zeros_diff_cols, compare_blocks_cols))
or_(ge(_if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, 4)), True)
le(zeros_diff_rows, _if_then_else(le(_if_then_else(False, -42, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), _if_then_else(le(2, -61), _if_then_else(or_(le(zeros_diff_cols, max_col_clue), True), 0, 0), _if_then_else(False, _if_then_else(False, _if_then_else(True, zeros_diff_cols, compare_blocks_rows), zeros_diff_cols), ones_diff_rows)), 2))
le(_if_then_else(True, max_row_clue, max_row_clue), _if_then_else(or_(ge(_if_then_else(and_(False, True), _if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_rows, max_col_clue)), _if_then_else(ge(4, zeros_diff_cols), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(True, zeros_diff_rows, max_col_clue))), or_(or_(ge(max_col_clue, 1), and_(True, False)), or_(le(1, -1), ge(compare_blocks_cols, 86)))), ones_diff_rows, -67))
VAL TREES:
add(mul(ones_diff_rows, zeros_diff_rows), add(-49, zeros_diff_rows))
add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, -94))
mul(mul(zeros_diff_rows, ones_diff_cols), mul(mul(add(61, ones_diff_cols), zeros_diff_cols), ones_diff_rows))
add(mul(zeros_diff_cols, mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), 67))
mul(add(zeros_diff_rows, -21), add(zeros_diff_rows, zeros_diff_cols))
add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols))
COND TREES:
ge(_if_then_else(ge(_if_then_else(False, zeros_diff_cols, 4), _if_then_else(True, zeros_diff_cols, 3)), _if_then_else(or_(False, False), _if_then_else(True, 3, 4), _if_then_else(True, 0, 0)), _if_then_else(False, _if_then_else(False, 0, 1), _if_then_else(True, 0, 47))), _if_then_else(and_(or_(True, False), ge(1, 2)), _if_then_else(ge(max_row_clue, max_row_clue), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, 2, 1)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(False, max_row_clue, compare_blocks_rows))))
and_(le(max_col_clue, _if_then_else(ge(max_col_clue, compare_blocks_rows), max_col_clue, max_col_clue)), le(zeros_diff_rows, compare_blocks_cols))
le(_if_then_else(True, zeros_diff_rows, 0), _if_then_else(False, ones_diff_rows, _if_then_else(le(_if_then_else(True, zeros_diff_rows, ones_diff_rows), 3), 4, ones_diff_rows)))
le(_if_then_else(False, 40, _if_then_else(False, ones_diff_cols, _if_then_else(False, 1, zeros_diff_rows))), _if_then_else(True, -11, _if_then_else(True, 6, _if_then_else(False, compare_blocks_cols, compare_blocks_cols))))
ge(_if_then_else(or_(True, True), _if_then_else(True, 3, -9), 1), _if_then_else(le(3, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, 3, 4)))
VAL TREES:
add(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows)), add(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_rows))), mul(mul(add(zeros_diff_cols, 6), add(-64, ones_diff_cols)), add(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_cols)))), add(mul(mul(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows)), mul(add(compare_blocks_rows, 36), mul(compare_blocks_rows, ones_diff_cols))), mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), add(add(40, compare_blocks_cols), add(compare_blocks_rows, ones_diff_rows)))))
add(mul(zeros_diff_rows, ones_diff_rows), mul(28, compare_blocks_rows))
mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))
mul(add(mul(23, -70), add(compare_blocks_rows, 93)), mul(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, ones_diff_cols)))
mul(add(add(mul(compare_blocks_rows, -50), add(zeros_diff_rows, zeros_diff_rows)), add(add(ones_diff_rows, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_cols))), add(add(add(zeros_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, 28)), add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows))))
mul(add(mul(add(zeros_diff_cols, zeros_diff_cols), mul(-78, 27)), mul(add(86, ones_diff_rows), mul(compare_blocks_rows, compare_blocks_rows))), mul(mul(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(10, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows))))
COND TREES:
and_(and_(and_(True, or_(True, False)), True), ge(max_row_clue, _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, max_row_clue), _if_then_else(True, 4, 3))))
ge(_if_then_else(False, max_row_clue, max_row_clue), _if_then_else(True, _if_then_else(True, compare_blocks_cols, _if_then_else(False, max_col_clue, 2)), compare_blocks_cols))
ge(_if_then_else(True, zeros_diff_cols, 2), _if_then_else(True, _if_then_else(and_(True, True), _if_then_else(or_(True, True), _if_then_else(False, 2, 4), _if_then_else(True, max_col_clue, zeros_diff_cols)), _if_then_else(False, max_col_clue, compare_blocks_rows)), _if_then_else(le(ones_diff_rows, max_row_clue), _if_then_else(True, max_col_clue, 4), _if_then_else(True, zeros_diff_rows, max_col_clue))))
ge(_if_then_else(True, compare_blocks_cols, compare_blocks_cols), _if_then_else(le(1, _if_then_else(False, zeros_diff_cols, 2)), max_col_clue, zeros_diff_cols))
ge(_if_then_else(True, -81, 1), _if_then_else(True, max_col_clue, 3))
VAL TREES:
mul(add(mul(add(add(zeros_diff_rows, 85), add(compare_blocks_cols, compare_blocks_cols)), add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(mul(10, -86), mul(-78, compare_blocks_cols)))), mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(54, zeros_diff_rows))), mul(mul(mul(ones_diff_cols, zeros_diff_rows), mul(-49, compare_blocks_rows)), mul(add(compare_blocks_rows, -24), add(ones_diff_rows, compare_blocks_cols)))))
mul(mul(ones_diff_cols, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, zeros_diff_rows), mul(mul(compare_blocks_rows, zeros_diff_cols), ones_diff_cols))
mul(add(add(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(add(ones_diff_rows, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_rows)))
mul(add(mul(mul(zeros_diff_rows, 88), mul(zeros_diff_cols, zeros_diff_cols)), add(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_cols))), mul(mul(add(ones_diff_cols, zeros_diff_rows), mul(1, ones_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, compare_blocks_cols))))
add(mul(mul(ones_diff_cols, -11), add(-15, 48)), mul(add(90, ones_diff_cols), add(zeros_diff_rows, 22)))
COND TREES:
ge(_if_then_else(or_(ge(1, max_row_clue), True), 79, -96), _if_then_else(True, ones_diff_cols, 3))
and_(le(compare_blocks_cols, 3), le(3, max_row_clue))
or_(and_(ge(_if_then_else(ge(0, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 4, ones_diff_rows)), _if_then_else(False, compare_blocks_rows, 0)), and_(and_(and_(True, True), and_(False, True)), or_(ge(ones_diff_cols, ones_diff_cols), and_(False, True)))), ge(_if_then_else(or_(and_(True, False), and_(False, True)), _if_then_else(ge(4, max_row_clue), _if_then_else(True, 0, -14), _if_then_else(False, max_row_clue, 4)), _if_then_else(le(-27, ones_diff_rows), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(True, 2, max_col_clue))), _if_then_else(True, _if_then_else(False, zeros_diff_rows, max_row_clue), _if_then_else(le(zeros_diff_cols, 0), _if_then_else(True, max_col_clue, 2), _if_then_else(False, 0, 3)))))
or_(le(1, _if_then_else(ge(max_col_clue, 4), zeros_diff_cols, 2)), le(2, compare_blocks_rows))
or_(False, False)
VAL TREES:
add(mul(compare_blocks_cols, zeros_diff_cols), mul(mul(83, ones_diff_cols), compare_blocks_cols))
mul(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows))
add(add(add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(38, ones_diff_rows))), add(mul(add(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), mul(mul(78, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_rows))))
add(add(mul(ones_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(add(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_cols, 17), mul(ones_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, ones_diff_rows), add(7, zeros_diff_cols)))
add(mul(mul(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(83, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows)))
COND TREES:
ge(4, _if_then_else(or_(le(max_col_clue, ones_diff_rows), False), compare_blocks_rows, max_row_clue))
ge(_if_then_else(and_(ge(ones_diff_cols, compare_blocks_rows), False), compare_blocks_rows, max_col_clue), _if_then_else(ge(0, zeros_diff_cols), zeros_diff_cols, compare_blocks_cols))
or_(or_(False, False), le(max_col_clue, compare_blocks_cols))
le(_if_then_else(False, ones_diff_cols, _if_then_else(False, _if_then_else(True, _if_then_else(False, 1, ones_diff_rows), ones_diff_rows), 3)), _if_then_else(ge(4, compare_blocks_rows), zeros_diff_rows, 2))
le(3, _if_then_else(and_(True, True), ones_diff_rows, -67))
VAL TREES:
add(mul(ones_diff_rows, zeros_diff_rows), add(-49, zeros_diff_rows))
add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, -94))
mul(mul(zeros_diff_rows, ones_diff_cols), mul(mul(add(61, ones_diff_cols), zeros_diff_cols), ones_diff_rows))
add(mul(zeros_diff_cols, mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), 67))
mul(add(zeros_diff_rows, -21), add(zeros_diff_rows, zeros_diff_cols))
add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols))
COND TREES:
or_(and_(False, True), le(_if_then_else(False, compare_blocks_rows, _if_then_else(False, max_row_clue, max_row_clue)), 0))
le(ones_diff_cols, _if_then_else(or_(True, True), compare_blocks_rows, ones_diff_cols))
ge(_if_then_else(False, max_row_clue, _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, -70), _if_then_else(True, 3, ones_diff_rows))), _if_then_else(or_(False, and_(False, True)), compare_blocks_cols, zeros_diff_rows))
or_(False, False)
and_(or_(or_(False, True), True), or_(or_(ge(2, -32), True), True))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(add(-22, compare_blocks_rows), add(ones_diff_cols, compare_blocks_cols)))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), mul(add(add(mul(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), add(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, ones_diff_cols))), mul(add(add(-38, zeros_diff_cols), mul(-65, ones_diff_rows)), mul(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, zeros_diff_rows))))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(mul(mul(ones_diff_cols, 70), add(zeros_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_cols)))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_rows, 72))))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
ge(_if_then_else(or_(ge(1, max_row_clue), or_(True, True)), 79, -96), compare_blocks_cols)
and_(le(compare_blocks_cols, 3), False)
or_(and_(ge(_if_then_else(ge(0, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 4, ones_diff_rows)), _if_then_else(False, compare_blocks_rows, 0)), and_(and_(and_(True, True), and_(False, True)), or_(ge(ones_diff_cols, ones_diff_cols), and_(False, False)))), ge(zeros_diff_rows, _if_then_else(True, _if_then_else(or_(True, True), _if_then_else(False, 2, 4), _if_then_else(True, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, 2), _if_then_else(False, 0, 3)))))
or_(le(1, _if_then_else(False, zeros_diff_cols, 2)), False)
or_(True, True)
VAL TREES:
add(mul(compare_blocks_cols, zeros_diff_cols), mul(mul(83, ones_diff_cols), compare_blocks_cols))
mul(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows))
add(add(add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(38, ones_diff_rows))), add(mul(add(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), mul(mul(78, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_rows))))
add(add(mul(ones_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(add(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_cols, 17), mul(ones_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, ones_diff_rows), add(7, zeros_diff_cols)))
add(mul(mul(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(83, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows)))
COND TREES:
or_(or_(True, False), le(3, 0))
le(_if_then_else(le(max_col_clue, ones_diff_cols), compare_blocks_cols, compare_blocks_rows), _if_then_else(ge(max_col_clue, compare_blocks_rows), compare_blocks_cols, ones_diff_cols))
ge(_if_then_else(True, max_row_clue, ones_diff_cols), _if_then_else(le(zeros_diff_cols, 2), compare_blocks_cols, compare_blocks_cols))
or_(le(zeros_diff_cols, compare_blocks_rows), and_(or_(True, ge(max_col_clue, 4)), ge(max_row_clue, max_col_clue)))
and_(or_(False, True), or_(False, True))
VAL TREES:
add(add(compare_blocks_cols, -79), mul(zeros_diff_cols, -25))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols))), mul(mul(mul(zeros_diff_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)), add(mul(zeros_diff_rows, zeros_diff_cols), mul(75, zeros_diff_rows)))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_rows), mul(87, -68)))
mul(mul(mul(compare_blocks_cols, mul(add(compare_blocks_cols, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_rows))), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
or_(or_(or_(True, False), True), le(zeros_diff_rows, 4))
le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, ones_diff_cols))
ge(_if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(ge(32, -44), compare_blocks_cols, compare_blocks_cols))
or_(le(zeros_diff_cols, -26), and_(or_(True, False), le(0, 2)))
and_(or_(False, True), or_(True, True))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
and_(and_(True, True), False)
ge(_if_then_else(or_(ge(compare_blocks_rows, 0), False), max_row_clue, 2), _if_then_else(True, _if_then_else(True, compare_blocks_cols, _if_then_else(False, 3, 2)), 0))
ge(_if_then_else(True, zeros_diff_cols, 2), _if_then_else(or_(ge(compare_blocks_rows, compare_blocks_cols), True), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, 2), 3), _if_then_else(le(ones_diff_rows, max_row_clue), _if_then_else(True, max_col_clue, max_row_clue), _if_then_else(True, zeros_diff_rows, max_col_clue))))
ge(_if_then_else(le(ones_diff_cols, -27), compare_blocks_cols, compare_blocks_cols), _if_then_else(and_(and_(False, True), ge(0, zeros_diff_rows)), max_col_clue, zeros_diff_cols))
ge(_if_then_else(True, -81, 1), _if_then_else(or_(True, True), max_col_clue, 3))
VAL TREES:
mul(add(mul(add(add(zeros_diff_rows, 85), add(compare_blocks_cols, compare_blocks_cols)), add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(mul(10, -86), mul(-78, compare_blocks_cols)))), mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(54, zeros_diff_rows))), mul(mul(mul(ones_diff_cols, zeros_diff_rows), mul(-49, compare_blocks_rows)), mul(add(compare_blocks_rows, -24), add(ones_diff_rows, compare_blocks_cols)))))
mul(mul(ones_diff_cols, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, zeros_diff_rows), mul(mul(compare_blocks_rows, zeros_diff_cols), ones_diff_cols))
mul(add(add(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(add(ones_diff_rows, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_rows)))
mul(add(mul(mul(zeros_diff_rows, 88), mul(zeros_diff_cols, zeros_diff_cols)), add(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_cols))), mul(mul(add(ones_diff_cols, zeros_diff_rows), mul(1, ones_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, compare_blocks_cols))))
add(mul(mul(ones_diff_cols, -11), add(-15, 48)), mul(add(90, ones_diff_cols), add(zeros_diff_rows, 22)))
COND TREES:
ge(_if_then_else(False, _if_then_else(or_(False, True), _if_then_else(or_(True, True), -51, max_col_clue), _if_then_else(ge(max_row_clue, 35), _if_then_else(True, 1, 2), compare_blocks_rows)), max_col_clue), _if_then_else(False, 2, ones_diff_rows))
le(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, 2, 0))
and_(True, le(_if_then_else(False, max_row_clue, 70), 53))
ge(zeros_diff_rows, _if_then_else(False, _if_then_else(and_(and_(le(compare_blocks_cols, 0), and_(and_(False, True), True)), False), 2, _if_then_else(le(_if_then_else(True, 0, -77), _if_then_else(False, 3, compare_blocks_rows)), compare_blocks_rows, 4)), ones_diff_rows))
and_(le(_if_then_else(False, max_col_clue, compare_blocks_cols), max_row_clue), or_(le(zeros_diff_cols, max_col_clue), False))
VAL TREES:
mul(mul(zeros_diff_cols, compare_blocks_cols), add(mul(zeros_diff_cols, add(compare_blocks_cols, zeros_diff_cols)), compare_blocks_cols))
mul(mul(add(add(ones_diff_rows, 13), compare_blocks_rows), add(compare_blocks_cols, mul(-28, ones_diff_rows))), add(ones_diff_cols, -82))
add(mul(zeros_diff_cols, add(zeros_diff_cols, compare_blocks_rows)), mul(compare_blocks_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_cols))
add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))
mul(add(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, -66))
COND TREES:
ge(max_row_clue, _if_then_else(or_(True, False), compare_blocks_rows, max_row_clue))
ge(_if_then_else(and_(and_(False, False), False), compare_blocks_rows, max_col_clue), _if_then_else(False, zeros_diff_cols, compare_blocks_cols))
or_(or_(False, False), le(_if_then_else(False, max_col_clue, 0), _if_then_else(False, ones_diff_rows, ones_diff_rows)))
le(_if_then_else(or_(True, True), ones_diff_cols, _if_then_else(True, _if_then_else(True, _if_then_else(False, 1, ones_diff_rows), ones_diff_rows), 3)), _if_then_else(False, zeros_diff_rows, 2))
le(3, _if_then_else(ge(_if_then_else(True, ones_diff_rows, ones_diff_rows), _if_then_else(False, -62, 2)), ones_diff_rows, -67))
VAL TREES:
add(mul(ones_diff_rows, zeros_diff_rows), add(-49, zeros_diff_rows))
add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, -94))
mul(mul(zeros_diff_rows, ones_diff_cols), mul(mul(add(61, ones_diff_cols), zeros_diff_cols), ones_diff_rows))
add(mul(zeros_diff_cols, mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), 67))
mul(add(zeros_diff_rows, -21), add(zeros_diff_rows, zeros_diff_cols))
add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols))
COND TREES:
le(_if_then_else(and_(ge(_if_then_else(True, 1, 0), _if_then_else(True, max_row_clue, 4)), and_(ge(ones_diff_cols, max_row_clue), and_(False, False))), _if_then_else(le(_if_then_else(False, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, ones_diff_rows, zeros_diff_rows)), _if_then_else(le(zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_cols, -37), _if_then_else(True, zeros_diff_cols, zeros_diff_cols)), _if_then_else(le(compare_blocks_cols, ones_diff_cols), _if_then_else(False, -82, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, 4, 3), _if_then_else(True, compare_blocks_cols, ones_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, ones_diff_cols, max_col_clue)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, compare_blocks_cols), _if_then_else(False, _if_then_else(True, 2, max_row_clue), 4)))), _if_then_else(le(_if_then_else(ge(compare_blocks_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, 4), _if_then_else(False, 2, 0)), _if_then_else(le(ones_diff_cols, ones_diff_cols), _if_then_else(True, 2, 1), _if_then_else(False, -69, 1))), _if_then_else(or_(or_(True, False), ge(3, max_col_clue)), _if_then_else(le(max_row_clue, compare_blocks_rows), max_col_clue, _if_then_else(True, max_col_clue, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_cols, 2), _if_then_else(True, 3, 2))), _if_then_else(ge(_if_then_else(True, 0, compare_blocks_cols), _if_then_else(False, max_row_clue, max_row_clue)), _if_then_else(le(zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 2, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 0)), _if_then_else(and_(False, True), _if_then_else(True, 1, 4), _if_then_else(le(compare_blocks_rows, _if_then_else(True, 1, max_col_clue)), 0, 4)))))
or_(or_(True, True), le(_if_then_else(False, max_col_clue, 2), max_row_clue))
le(_if_then_else(le(2, compare_blocks_cols), 3, _if_then_else(False, ones_diff_rows, _if_then_else(True, 3, max_row_clue))), _if_then_else(or_(or_(True, False), ge(ones_diff_cols, compare_blocks_cols)), compare_blocks_rows, zeros_diff_rows))
ge(_if_then_else(ge(_if_then_else(True, 0, zeros_diff_cols), _if_then_else(False, ones_diff_rows, max_col_clue)), _if_then_else(and_(False, True), _if_then_else(False, 4, compare_blocks_cols), compare_blocks_cols), 3), _if_then_else(or_(ge(3, compare_blocks_rows), and_(True, False)), _if_then_else(ge(ones_diff_rows, 1), _if_then_else(False, compare_blocks_cols, _if_then_else(and_(True, False), _if_then_else(False, 2, ones_diff_cols), _if_then_else(True, 3, compare_blocks_rows))), _if_then_else(False, compare_blocks_rows, 4)), _if_then_else(True, 0, ones_diff_cols)))
and_(and_(or_(True, True), or_(True, False)), True)
VAL TREES:
add(mul(mul(61, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, zeros_diff_cols), mul(ones_diff_cols, ones_diff_rows)))
add(add(zeros_diff_rows, ones_diff_cols), mul(zeros_diff_rows, mul(compare_blocks_rows, mul(compare_blocks_cols, compare_blocks_cols))))
add(add(compare_blocks_rows, mul(ones_diff_rows, zeros_diff_cols)), add(ones_diff_rows, add(compare_blocks_cols, zeros_diff_cols)))
mul(mul(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_rows))
add(mul(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_rows))
add(mul(-2, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols))
COND TREES:
or_(le(max_col_clue, zeros_diff_rows), ge(_if_then_else(ge(_if_then_else(and_(False, True), _if_then_else(True, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, 4)), _if_then_else(le(max_row_clue, 3), _if_then_else(False, max_col_clue, ones_diff_rows), _if_then_else(True, -85, 0))), _if_then_else(ge(_if_then_else(False, 1, 1), _if_then_else(True, 2, max_row_clue)), _if_then_else(le(2, 4), _if_then_else(True, 4, max_col_clue), _if_then_else(False, zeros_diff_cols, 4)), _if_then_else(le(2, 4), _if_then_else(True, 3, 2), _if_then_else(True, zeros_diff_cols, max_row_clue))), _if_then_else(and_(or_(True, False), or_(True, False)), _if_then_else(ge(max_row_clue, max_col_clue), _if_then_else(False, 20, ones_diff_rows), _if_then_else(False, 1, zeros_diff_cols)), _if_then_else(ge(4, compare_blocks_rows), _if_then_else(True, max_col_clue, 2), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)))), _if_then_else(or_(le(_if_then_else(True, -15, 3), _if_then_else(True, compare_blocks_cols, 1)), le(_if_then_else(True, 3, 38), _if_then_else(False, max_col_clue, 1))), _if_then_else(ge(_if_then_else(True, max_col_clue, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(le(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 4, 24), _if_then_else(False, max_row_clue, max_row_clue)), _if_then_else(and_(True, False), _if_then_else(False, 2, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 0))), _if_then_else(le(_if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_cols, -54)), _if_then_else(ge(2, 0), _if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, -27)), _if_then_else(ge(3, 4), _if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 4, compare_blocks_cols))))))
or_(le(max_col_clue, 4), or_(and_(False, False), and_(True, True)))
ge(_if_then_else(or_(False, le(compare_blocks_cols, max_row_clue)), _if_then_else(False, max_row_clue, 4), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(_if_then_else(or_(le(_if_then_else(False, max_row_clue, compare_blocks_rows), _if_then_else(True, max_row_clue, ones_diff_rows)), le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_cols, 0))), _if_then_else(or_(or_(False, False), le(2, 4)), _if_then_else(ge(zeros_diff_rows, 67), _if_then_else(True, 3, 3), _if_then_else(False, max_row_clue, ones_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, 4, ones_diff_rows), _if_then_else(False, zeros_diff_rows, compare_blocks_cols))), _if_then_else(or_(or_(True, False), or_(False, False)), _if_then_else(ge(max_row_clue, compare_blocks_cols), _if_then_else(True, 4, -69), _if_then_else(True, max_row_clue, 2)), _if_then_else(and_(True, False), _if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(False, -79, zeros_diff_cols)))), compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(ge(2, ones_diff_rows), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, 3, _if_then_else(and_(False, True), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(False, _if_then_else(or_(True, True), _if_then_else(True, _if_then_else(True, 30, 2), compare_blocks_cols), _if_then_else(False, _if_then_else(False, compare_blocks_rows, 4), 1)), compare_blocks_cols)))), le(_if_then_else(True, 0, -77), _if_then_else(False, 3, compare_blocks_rows)))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
or_(and_(and_(True, True), and_(False, True)), and_(False, True))
le(2, _if_then_else(False, 1, zeros_diff_cols))
and_(ge(1, compare_blocks_rows), and_(True, True))
le(_if_then_else(True, 3, _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_cols, max_row_clue), _if_then_else(True, 4, 3))), zeros_diff_rows)
and_(le(compare_blocks_rows, compare_blocks_rows), ge(compare_blocks_cols, 1))
VAL TREES:
add(mul(add(mul(zeros_diff_rows, compare_blocks_rows), zeros_diff_rows), ones_diff_cols), mul(zeros_diff_rows, -35))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(mul(mul(ones_diff_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), zeros_diff_rows))
add(add(add(-63, zeros_diff_cols), mul(49, 62)), mul(-33, compare_blocks_rows))
add(add(zeros_diff_rows, zeros_diff_cols), add(mul(add(compare_blocks_cols, 2), add(zeros_diff_cols, ones_diff_cols)), ones_diff_cols))
add(add(compare_blocks_cols, zeros_diff_rows), add(42, add(add(add(add(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, 24)), mul(mul(compare_blocks_cols, -41), add(compare_blocks_cols, compare_blocks_rows))), add(add(add(zeros_diff_cols, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), add(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols))))))
add(add(7, zeros_diff_rows), mul(mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)), ones_diff_rows))
COND TREES:
ge(_if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(or_(and_(False, True), ge(-12, compare_blocks_rows)), _if_then_else(ge(3, 1), _if_then_else(True, 3, zeros_diff_rows), _if_then_else(True, 3, -20)), _if_then_else(le(2, 3), _if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(False, ones_diff_rows, ones_diff_cols))))
and_(ge(_if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 1, max_col_clue)), or_(or_(or_(False, False), True), or_(ge(_if_then_else(or_(False, True), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(False, 4, max_row_clue)), _if_then_else(ge(4, max_col_clue), _if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, _if_then_else(True, max_col_clue, compare_blocks_rows), 1))), or_(or_(and_(True, True), and_(True, False)), le(_if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_cols))))))
and_(ge(_if_then_else(False, 1, zeros_diff_rows), _if_then_else(True, 2, max_row_clue)), le(_if_then_else(le(_if_then_else(False, max_col_clue, compare_blocks_cols), 1), max_row_clue, 70), 53))
ge(_if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(False, _if_then_else(and_(False, False), 2, _if_then_else(False, compare_blocks_rows, 4)), 0))
and_(le(_if_then_else(False, max_col_clue, compare_blocks_cols), max_row_clue), or_(le(zeros_diff_rows, max_col_clue), and_(le(3, 1), le(-75, max_col_clue))))
VAL TREES:
mul(mul(zeros_diff_cols, compare_blocks_cols), add(mul(zeros_diff_cols, add(compare_blocks_cols, zeros_diff_cols)), compare_blocks_cols))
mul(mul(add(add(ones_diff_rows, 13), compare_blocks_rows), add(compare_blocks_cols, mul(-28, ones_diff_rows))), add(ones_diff_cols, -82))
add(mul(zeros_diff_cols, add(zeros_diff_cols, compare_blocks_rows)), mul(compare_blocks_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_cols))
add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))
mul(add(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, -66))
COND TREES:
or_(le(3, _if_then_else(True, max_col_clue, 65)), le(_if_then_else(False, 2, _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 0, 4))), compare_blocks_cols))
le(_if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(ge(_if_then_else(False, 2, compare_blocks_cols), -66), compare_blocks_cols, zeros_diff_cols))
and_(True, or_(False, True))
ge(_if_then_else(or_(le(_if_then_else(False, 3, compare_blocks_cols), zeros_diff_cols), ge(max_col_clue, 4)), 3, compare_blocks_rows), zeros_diff_rows)
or_(or_(or_(True, False), le(ones_diff_cols, max_col_clue)), True)
VAL TREES:
mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_cols))
add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_rows))
add(add(mul(mul(add(compare_blocks_cols, ones_diff_cols), mul(-85, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_rows))), mul(mul(add(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)), mul(mul(compare_blocks_rows, 44), add(compare_blocks_rows, ones_diff_cols))), mul(add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, zeros_diff_rows), add(-49, ones_diff_cols)))))
add(add(ones_diff_rows, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows))
mul(add(mul(ones_diff_rows, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_cols)), add(75, zeros_diff_cols))
mul(mul(zeros_diff_cols, -79), mul(compare_blocks_cols, ones_diff_cols))
COND TREES:
or_(and_(ge(_if_then_else(and_(False, False), _if_then_else(False, compare_blocks_cols, 2), _if_then_else(False, 2, max_col_clue)), _if_then_else(le(max_col_clue, 2), _if_then_else(False, ones_diff_rows, 4), _if_then_else(True, zeros_diff_cols, 2))), or_(ge(_if_then_else(True, -62, -91), _if_then_else(True, 2, zeros_diff_rows)), le(_if_then_else(True, 3, max_row_clue), _if_then_else(False, 3, 0)))), and_(False, True))
le(_if_then_else(True, compare_blocks_cols, _if_then_else(and_(ge(max_col_clue, compare_blocks_rows), True), _if_then_else(True, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, 3))), _if_then_else(or_(le(zeros_diff_rows, 3), and_(False, True)), compare_blocks_cols, ones_diff_cols))
ge(_if_then_else(ge(_if_then_else(True, 46, compare_blocks_cols), _if_then_else(False, _if_then_else(or_(True, False), _if_then_else(le(ones_diff_rows, max_col_clue), 0, max_row_clue), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), compare_blocks_cols)), max_row_clue, compare_blocks_rows), _if_then_else(or_(False, True), compare_blocks_cols, zeros_diff_rows))
and_(and_(True, True), le(_if_then_else(True, zeros_diff_rows, 1), ones_diff_rows))
and_(or_(False, True), or_(ge(ones_diff_rows, _if_then_else(False, _if_then_else(False, _if_then_else(ge(_if_then_else(or_(or_(True, True), le(max_row_clue, max_row_clue)), _if_then_else(le(ones_diff_cols, 3), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, compare_blocks_cols)), _if_then_else(ge(max_col_clue, 0), _if_then_else(True, max_row_clue, 0), _if_then_else(True, ones_diff_rows, 1))), _if_then_else(or_(ge(compare_blocks_rows, compare_blocks_rows), le(3, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(False, 1, 1), _if_then_else(True, max_row_clue, 3)), _if_then_else(ge(zeros_diff_cols, max_col_clue), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(False, 4, 4)))), _if_then_else(or_(and_(ge(compare_blocks_cols, zeros_diff_cols), ge(0, zeros_diff_cols)), or_(ge(ones_diff_rows, -80), or_(True, False))), _if_then_else(le(_if_then_else(True, compare_blocks_rows, 2), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(True, 3, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, max_row_clue)), _if_then_else(le(zeros_diff_rows, 62), _if_then_else(True, zeros_diff_rows, 4), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(and_(ge(zeros_diff_cols, max_col_clue), and_(False, True)), _if_then_else(or_(False, False), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(True, max_col_clue, compare_blocks_cols), _if_then_else(True, 4, max_col_clue)))), _if_then_else(and_(or_(or_(False, False), le(zeros_diff_cols, zeros_diff_cols)), le(_if_then_else(True, -5, 2), _if_then_else(True, ones_diff_cols, compare_blocks_rows))), _if_then_else(or_(or_(True, True), ge(4, 0)), _if_then_else(or_(True, True), _if_then_else(True, 4, max_row_clue), _if_then_else(True, zeros_diff_cols, compare_blocks_cols)), _if_then_else(le(zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, ones_diff_rows))), _if_then_else(and_(or_(True, True), le(ones_diff_rows, 4)), _if_then_else(or_(True, True), _if_then_else(False, max_col_clue, zeros_diff_cols), _if_then_else(True, 4, max_row_clue)), _if_then_else(and_(False, True), _if_then_else(False, 0, 2), _if_then_else(True, ones_diff_cols, ones_diff_cols))))), _if_then_else(False, compare_blocks_cols, ones_diff_cols)), 4)), False))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
and_(le(max_col_clue, _if_then_else(True, 2, max_row_clue)), le(1, _if_then_else(True, 2, ones_diff_cols)))
ge(_if_then_else(le(ones_diff_cols, 2), _if_then_else(True, _if_then_else(True, 4, compare_blocks_rows), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(le(-66, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, 4), _if_then_else(False, max_row_clue, 4))), _if_then_else(le(_if_then_else(True, max_row_clue, max_row_clue), _if_then_else(True, zeros_diff_cols, max_row_clue)), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(le(compare_blocks_cols, 3), _if_then_else(True, compare_blocks_rows, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, 0))))
le(zeros_diff_cols, _if_then_else(or_(False, True), compare_blocks_cols, zeros_diff_rows))
or_(ge(_if_then_else(le(ones_diff_cols, 1), _if_then_else(True, 50, ones_diff_cols), _if_then_else(True, zeros_diff_rows, -46)), _if_then_else(False, _if_then_else(True, _if_then_else(False, 4, ones_diff_cols), 3), _if_then_else(True, compare_blocks_cols, ones_diff_rows))), and_(or_(le(_if_then_else(False, compare_blocks_rows, compare_blocks_cols), zeros_diff_cols), ge(max_col_clue, 4)), or_(ge(4, zeros_diff_cols), ge(2, 2))))
or_(False, le(compare_blocks_cols, 2))
VAL TREES:
add(mul(mul(add(add(ones_diff_rows, -79), add(ones_diff_rows, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols))), mul(add(mul(mul(mul(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_cols)), compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_cols)), mul(mul(-30, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)))), add(add(mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)), add(add(compare_blocks_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_rows))), mul(mul(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_cols)))))
add(mul(add(ones_diff_cols, ones_diff_rows), ones_diff_cols), add(ones_diff_cols, compare_blocks_cols))
add(mul(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, add(zeros_diff_rows, compare_blocks_rows)))
add(add(ones_diff_cols, add(compare_blocks_rows, compare_blocks_cols)), mul(zeros_diff_rows, add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(mul(ones_diff_rows, -100), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_cols))), mul(mul(mul(zeros_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_cols, compare_blocks_cols))))
add(add(compare_blocks_rows, zeros_diff_cols), add(mul(-28, 97), mul(-48, zeros_diff_cols)))
COND TREES:
or_(or_(or_(True, False), True), le(_if_then_else(False, compare_blocks_rows, _if_then_else(False, max_row_clue, max_row_clue)), 0))
le(_if_then_else(and_(False, le(zeros_diff_cols, 2)), compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, ones_diff_cols))
ge(_if_then_else(False, max_row_clue, ones_diff_cols), max_col_clue)
or_(False, le(ones_diff_cols, 1))
and_(True, or_(False, True))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
or_(le(max_col_clue, zeros_diff_rows), le(compare_blocks_rows, _if_then_else(True, 1, max_col_clue)))
or_(le(max_col_clue, 2), ge(0, zeros_diff_cols))
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), _if_then_else(le(max_col_clue, 4), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, max_row_clue, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(ge(2, ones_diff_rows), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, 3, max_col_clue)), le(_if_then_else(True, 0, -77), _if_then_else(False, 3, compare_blocks_rows)))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
le(_if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, _if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(and_(False, ge(_if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_cols, 2))), compare_blocks_rows, compare_blocks_cols)))
le(_if_then_else(True, ones_diff_rows, _if_then_else(True, _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(ge(14, compare_blocks_cols), _if_then_else(and_(True, False), _if_then_else(False, max_col_clue, 3), _if_then_else(True, zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(True, 1, compare_blocks_cols))))), _if_then_else(False, 2, max_col_clue))
le(_if_then_else(and_(and_(le(4, _if_then_else(False, 0, zeros_diff_cols)), or_(False, True)), and_(le(38, max_col_clue), or_(True, True))), _if_then_else(and_(ge(zeros_diff_cols, compare_blocks_cols), ge(compare_blocks_cols, 2)), _if_then_else(le(ones_diff_rows, 0), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(le(0, 3), _if_then_else(False, 3, ones_diff_cols), _if_then_else(False, compare_blocks_rows, max_row_clue))), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(ge(_if_then_else(and_(False, True), _if_then_else(False, 2, 1), _if_then_else(True, 3, max_col_clue)), _if_then_else(and_(True, False), _if_then_else(False, 1, 3), _if_then_else(False, ones_diff_cols, ones_diff_cols))), _if_then_else(or_(ge(-20, max_col_clue), le(_if_then_else(ge(max_row_clue, 2), _if_then_else(True, 3, 1), _if_then_else(True, max_col_clue, 0)), max_row_clue)), _if_then_else(le(compare_blocks_cols, 0), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(True, 0, zeros_diff_cols), _if_then_else(False, ones_diff_rows, compare_blocks_rows))), _if_then_else(or_(ge(compare_blocks_cols, 0), or_(False, True)), _if_then_else(ge(compare_blocks_cols, 4), _if_then_else(False, 3, max_col_clue), _if_then_else(True, max_col_clue, 3)), _if_then_else(le(ones_diff_rows, max_col_clue), _if_then_else(False, -2, max_col_clue), _if_then_else(False, max_row_clue, ones_diff_rows)))))
and_(and_(le(_if_then_else(False, 3, 3), _if_then_else(True, 4, zeros_diff_rows)), ge(_if_then_else(False, 4, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, zeros_diff_rows))), ge(_if_then_else(ge(max_col_clue, 4), _if_then_else(False, ones_diff_rows, max_col_clue), _if_then_else(False, _if_then_else(True, compare_blocks_cols, ones_diff_rows), max_col_clue)), _if_then_else(and_(False, True), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(False, 1, compare_blocks_cols))))
and_(or_(ge(zeros_diff_cols, zeros_diff_rows), or_(False, False)), True)
VAL TREES:
mul(mul(ones_diff_cols, add(add(mul(ones_diff_rows, compare_blocks_rows), ones_diff_rows), compare_blocks_cols)), add(compare_blocks_cols, compare_blocks_cols))
add(add(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_rows, compare_blocks_cols))
mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 84)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_cols))), add(add(add(ones_diff_cols, -2), add(compare_blocks_cols, compare_blocks_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows))))
mul(add(compare_blocks_cols, zeros_diff_cols), add(add(zeros_diff_rows, compare_blocks_rows), zeros_diff_cols))
add(mul(add(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), add(mul(ones_diff_rows, ones_diff_cols), mul(79, ones_diff_cols)))
add(mul(add(mul(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_rows)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_rows))), mul(mul(add(13, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_cols, ones_diff_rows))))
COND TREES:
le(5, _if_then_else(or_(or_(True, False), True), ones_diff_cols, ones_diff_cols))
or_(ge(_if_then_else(ge(_if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(True, 81, max_col_clue)), compare_blocks_cols, zeros_diff_cols), 2), and_(True, ge(0, zeros_diff_cols)))
or_(le(max_row_clue, compare_blocks_cols), True)
or_(ge(4, compare_blocks_rows), True)
or_(or_(ge(compare_blocks_cols, compare_blocks_rows), True), or_(ge(56, compare_blocks_rows), or_(False, False)))
VAL TREES:
mul(mul(mul(add(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_rows, ones_diff_rows))), mul(mul(add(-59, compare_blocks_rows), add(60, ones_diff_cols)), mul(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)))), add(mul(mul(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_cols, zeros_diff_rows)), add(add(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_rows))), mul(mul(add(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)), add(mul(mul(mul(mul(add(add(ones_diff_rows, compare_blocks_rows), add(-7, ones_diff_rows)), mul(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols))), mul(add(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_cols)))), add(add(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))), mul(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), add(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_cols))))), compare_blocks_cols), add(zeros_diff_rows, ones_diff_cols)))))
mul(add(zeros_diff_rows, add(ones_diff_rows, zeros_diff_cols)), add(zeros_diff_cols, mul(zeros_diff_rows, mul(mul(mul(mul(6, ones_diff_rows), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_cols))), mul(mul(add(ones_diff_rows, zeros_diff_rows), add(compare_blocks_cols, -32)), mul(add(ones_diff_rows, ones_diff_cols), mul(zeros_diff_cols, ones_diff_cols)))))))
mul(mul(55, zeros_diff_cols), add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_rows)), add(mul(ones_diff_cols, zeros_diff_rows), add(24, zeros_diff_cols))))
add(mul(ones_diff_rows, ones_diff_cols), add(compare_blocks_cols, add(mul(add(ones_diff_rows, mul(compare_blocks_rows, ones_diff_cols)), -46), mul(mul(mul(ones_diff_rows, zeros_diff_rows), mul(mul(compare_blocks_rows, zeros_diff_rows), ones_diff_rows)), zeros_diff_cols))))
mul(add(zeros_diff_rows, mul(mul(zeros_diff_rows, ones_diff_cols), mul(compare_blocks_rows, compare_blocks_rows))), add(add(ones_diff_cols, ones_diff_cols), compare_blocks_cols))
add(add(compare_blocks_cols, -31), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
or_(le(_if_then_else(True, 3, compare_blocks_rows), _if_then_else(True, _if_then_else(True, 3, max_row_clue), 2)), le(4, 4))
le(0, _if_then_else(False, compare_blocks_cols, _if_then_else(and_(True, True), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(True, 0, 4))))
ge(_if_then_else(False, _if_then_else(le(compare_blocks_cols, _if_then_else(True, zeros_diff_cols, max_col_clue)), _if_then_else(True, 22, compare_blocks_rows), _if_then_else(and_(True, False), 2, compare_blocks_rows)), ones_diff_cols), _if_then_else(False, max_col_clue, _if_then_else(True, 2, ones_diff_rows)))
or_(False, ge(ones_diff_cols, zeros_diff_rows))
and_(or_(False, True), le(2, _if_then_else(or_(True, False), _if_then_else(False, max_row_clue, 3), _if_then_else(False, 0, max_col_clue))))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
or_(le(max_row_clue, zeros_diff_rows), le(compare_blocks_rows, _if_then_else(False, 1, max_col_clue)))
or_(True, True)
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), _if_then_else(le(max_col_clue, 4), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, max_row_clue, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(ge(2, _if_then_else(True, _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_row_clue), _if_then_else(False, max_col_clue, compare_blocks_rows)), _if_then_else(le(ones_diff_rows, max_row_clue), _if_then_else(True, max_col_clue, 4), _if_then_else(True, zeros_diff_rows, max_col_clue)))), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, 3, max_col_clue)), le(_if_then_else(True, _if_then_else(False, zeros_diff_cols, 2), -77), _if_then_else(False, 3, compare_blocks_rows)))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
and_(and_(and_(True, True), True), ge(max_col_clue, _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, max_row_clue), _if_then_else(True, 4, 3))))
ge(_if_then_else(False, max_row_clue, max_row_clue), _if_then_else(True, _if_then_else(ge(0, zeros_diff_cols), compare_blocks_cols, _if_then_else(False, 3, 2)), compare_blocks_cols))
ge(_if_then_else(True, zeros_diff_cols, 2), ones_diff_rows)
ge(_if_then_else(True, compare_blocks_cols, compare_blocks_cols), _if_then_else(le(1, compare_blocks_rows), max_col_clue, zeros_diff_cols))
ge(_if_then_else(False, -81, 1), _if_then_else(False, max_col_clue, 3))
VAL TREES:
mul(add(mul(add(add(zeros_diff_rows, 85), add(compare_blocks_cols, compare_blocks_cols)), add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(mul(10, -86), mul(-78, compare_blocks_cols)))), mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(54, zeros_diff_rows))), mul(mul(mul(ones_diff_cols, zeros_diff_rows), mul(-49, compare_blocks_rows)), mul(add(compare_blocks_rows, -24), add(ones_diff_rows, compare_blocks_cols)))))
mul(mul(ones_diff_cols, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, zeros_diff_rows), mul(mul(compare_blocks_rows, zeros_diff_cols), ones_diff_cols))
mul(add(add(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(add(ones_diff_rows, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_rows)))
mul(add(mul(mul(zeros_diff_rows, 88), mul(zeros_diff_cols, zeros_diff_cols)), add(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_cols))), mul(mul(add(ones_diff_cols, zeros_diff_rows), mul(1, ones_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, compare_blocks_cols))))
add(mul(mul(ones_diff_cols, -11), add(-15, 48)), mul(add(90, ones_diff_cols), add(zeros_diff_rows, 22)))
COND TREES:
or_(or_(or_(ge(_if_then_else(or_(False, True), _if_then_else(False, max_col_clue, 21), _if_then_else(False, zeros_diff_rows, -64)), max_row_clue), or_(or_(True, False), False)), True), le(3, 0))
le(_if_then_else(le(max_col_clue, ones_diff_cols), compare_blocks_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, ones_diff_cols))
ge(_if_then_else(False, max_row_clue, compare_blocks_cols), compare_blocks_rows)
or_(le(zeros_diff_cols, -26), le(1, _if_then_else(ge(max_col_clue, 4), zeros_diff_cols, _if_then_else(and_(False, False), _if_then_else(False, max_row_clue, max_row_clue), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)))))
and_(or_(False, True), or_(and_(True, True), False))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, add(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols))))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(mul(add(mul(mul(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(27, compare_blocks_cols), mul(zeros_diff_cols, compare_blocks_cols))), mul(mul(add(compare_blocks_rows, 52), mul(compare_blocks_rows, ones_diff_rows)), add(add(zeros_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, 63))), mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_rows), mul(zeros_diff_cols, zeros_diff_rows))))))))
add(add(zeros_diff_rows, mul(mul(mul(add(21, ones_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_rows))), mul(mul(mul(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols))))), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(add(add(mul(mul(mul(-62, -8), mul(zeros_diff_rows, compare_blocks_cols)), add(add(47, zeros_diff_cols), mul(compare_blocks_cols, ones_diff_cols))), add(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(mul(compare_blocks_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)))), mul(add(add(add(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_rows)), add(add(-10, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows))), mul(mul(add(zeros_diff_cols, zeros_diff_cols), add(zeros_diff_cols, zeros_diff_cols)), add(mul(compare_blocks_rows, -81), add(zeros_diff_rows, compare_blocks_rows))))), compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), add(add(add(add(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_cols))), mul(mul(mul(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_rows)), add(add(compare_blocks_rows, ones_diff_rows), mul(42, compare_blocks_cols))))), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
ge(zeros_diff_cols, 1)
ge(_if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(ge(max_col_clue, compare_blocks_rows), zeros_diff_cols, compare_blocks_cols))
or_(ge(_if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, max_col_clue, ones_diff_cols)), True)
le(_if_then_else(False, ones_diff_cols, _if_then_else(False, 1, zeros_diff_rows)), _if_then_else(le(_if_then_else(False, -42, zeros_diff_cols), compare_blocks_rows), zeros_diff_rows, 2))
le(_if_then_else(and_(True, False), max_row_clue, max_row_clue), _if_then_else(True, ones_diff_rows, -67))
VAL TREES:
add(mul(ones_diff_rows, zeros_diff_rows), add(-49, zeros_diff_rows))
add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, -94))
mul(mul(zeros_diff_rows, ones_diff_cols), mul(mul(add(61, ones_diff_cols), zeros_diff_cols), ones_diff_rows))
add(mul(zeros_diff_cols, mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), 67))
mul(add(zeros_diff_rows, -21), add(zeros_diff_rows, zeros_diff_cols))
add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols))
COND TREES:
and_(and_(True, True), ge(max_row_clue, _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_cols, max_row_clue), _if_then_else(False, 4, 3))))
ge(_if_then_else(True, max_row_clue, max_row_clue), _if_then_else(True, _if_then_else(True, compare_blocks_cols, 4), compare_blocks_cols))
ge(_if_then_else(True, zeros_diff_cols, 2), _if_then_else(True, _if_then_else(False, _if_then_else(False, zeros_diff_rows, 2), _if_then_else(False, max_col_clue, compare_blocks_rows)), 4))
ge(_if_then_else(ge(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, max_col_clue), compare_blocks_cols), _if_then_else(le(_if_then_else(False, _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, max_row_clue)), _if_then_else(False, zeros_diff_cols, 2)), max_col_clue, _if_then_else(False, max_row_clue, 4)))
ge(_if_then_else(and_(or_(True, True), True), -81, 1), _if_then_else(True, max_col_clue, 3))
VAL TREES:
mul(add(mul(add(add(zeros_diff_rows, 85), add(compare_blocks_cols, compare_blocks_cols)), add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(mul(10, -86), mul(-78, compare_blocks_cols)))), mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(54, zeros_diff_rows))), mul(mul(mul(ones_diff_cols, zeros_diff_rows), mul(-49, compare_blocks_rows)), mul(add(compare_blocks_rows, -24), add(ones_diff_rows, compare_blocks_cols)))))
mul(mul(ones_diff_cols, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_cols))
add(add(mul(add(add(ones_diff_rows, -15), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_rows))), add(mul(mul(zeros_diff_rows, ones_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_rows, zeros_diff_rows)))), add(mul(mul(mul(ones_diff_cols, ones_diff_cols), mul(53, ones_diff_cols)), add(add(4, ones_diff_cols), mul(zeros_diff_rows, compare_blocks_rows))), add(add(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)))))
mul(add(add(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(add(mul(mul(ones_diff_rows, 3), mul(mul(ones_diff_cols, -73), compare_blocks_rows)), zeros_diff_rows), add(zeros_diff_cols, zeros_diff_rows)))
mul(add(mul(mul(zeros_diff_rows, 88), mul(zeros_diff_cols, zeros_diff_cols)), add(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_cols))), mul(mul(add(ones_diff_cols, zeros_diff_rows), mul(1, ones_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, compare_blocks_cols))))
add(mul(mul(mul(add(ones_diff_cols, zeros_diff_cols), mul(ones_diff_rows, -11)), -11), add(-15, 48)), mul(add(90, ones_diff_cols), add(zeros_diff_rows, 22)))
COND TREES:
ge(_if_then_else(or_(False, or_(True, False)), 79, -96), _if_then_else(True, max_row_clue, 3))
and_(False, le(max_col_clue, compare_blocks_rows))
or_(and_(ge(_if_then_else(ge(0, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 4, ones_diff_rows)), _if_then_else(False, compare_blocks_rows, 0)), or_(ge(_if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), and_(and_(False, False), ge(zeros_diff_cols, max_col_clue)))), ge(_if_then_else(or_(and_(True, False), and_(False, True)), _if_then_else(ge(4, max_row_clue), _if_then_else(True, 0, -14), _if_then_else(False, max_row_clue, 4)), _if_then_else(le(-27, ones_diff_rows), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(True, 2, max_col_clue))), _if_then_else(and_(True, or_(and_(ge(_if_then_else(and_(False, False), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(False, 2, 4)), _if_then_else(or_(True, True), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, 3, -9))), or_(or_(or_(False, True), le(2, 3)), and_(and_(True, True), and_(False, False)))), and_(and_(or_(le(4, 0), or_(False, True)), le(_if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, 2, ones_diff_cols))), le(_if_then_else(or_(False, True), _if_then_else(True, zeros_diff_cols, -24), _if_then_else(True, ones_diff_cols, ones_diff_cols)), _if_then_else(ge(1, -34), _if_then_else(True, max_row_clue, 25), _if_then_else(False, ones_diff_rows, max_col_clue)))))), _if_then_else(or_(True, True), _if_then_else(False, 2, 4), _if_then_else(True, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, 2), _if_then_else(False, 0, 3)))))
or_(le(1, _if_then_else(False, _if_then_else(True, 0, max_col_clue), _if_then_else(True, 4, 3))), le(2, compare_blocks_rows))
or_(le(compare_blocks_cols, 2), True)
VAL TREES:
add(mul(compare_blocks_cols, zeros_diff_cols), mul(mul(83, ones_diff_cols), compare_blocks_cols))
mul(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows))
add(add(add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(38, ones_diff_rows))), add(mul(add(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), mul(mul(78, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_rows))))
add(add(mul(ones_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(add(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_cols, 17), mul(ones_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, ones_diff_rows), add(7, zeros_diff_cols)))
add(mul(mul(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(83, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows)))
COND TREES:
ge(zeros_diff_cols, _if_then_else(or_(False, True), _if_then_else(False, max_col_clue, 21), _if_then_else(False, zeros_diff_rows, -64)))
ge(_if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, zeros_diff_cols, compare_blocks_cols))
or_(ge(_if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, 4)), True)
le(_if_then_else(False, ones_diff_cols, _if_then_else(False, 1, zeros_diff_rows)), _if_then_else(le(_if_then_else(False, -42, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), zeros_diff_rows, 2))
le(_if_then_else(True, max_row_clue, max_row_clue), _if_then_else(True, ones_diff_rows, -67))
VAL TREES:
add(mul(ones_diff_rows, zeros_diff_rows), add(-49, zeros_diff_rows))
add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, -94))
mul(mul(zeros_diff_rows, ones_diff_cols), mul(mul(add(61, ones_diff_cols), zeros_diff_cols), ones_diff_rows))
add(mul(zeros_diff_cols, mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), 67))
mul(add(zeros_diff_rows, -21), add(zeros_diff_rows, zeros_diff_cols))
add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols))
COND TREES:
ge(zeros_diff_cols, _if_then_else(or_(False, True), _if_then_else(False, max_col_clue, 21), _if_then_else(False, zeros_diff_rows, -64)))
ge(_if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, zeros_diff_cols, compare_blocks_cols))
or_(ge(_if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, max_col_clue, compare_blocks_cols)), True)
le(_if_then_else(False, ones_diff_cols, _if_then_else(False, 1, zeros_diff_rows)), _if_then_else(le(_if_then_else(False, -42, zeros_diff_cols), compare_blocks_rows), zeros_diff_rows, 2))
le(_if_then_else(and_(True, False), max_row_clue, max_row_clue), _if_then_else(True, ones_diff_rows, -67))
VAL TREES:
add(mul(ones_diff_rows, zeros_diff_rows), add(-49, zeros_diff_rows))
add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, -94))
mul(mul(zeros_diff_rows, ones_diff_cols), mul(mul(add(61, ones_diff_cols), zeros_diff_cols), ones_diff_rows))
add(mul(zeros_diff_cols, mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), 67))
mul(add(zeros_diff_rows, -21), add(zeros_diff_rows, zeros_diff_cols))
add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols))
COND TREES:
ge(_if_then_else(False, _if_then_else(ge(max_col_clue, compare_blocks_cols), _if_then_else(True, max_row_clue, _if_then_else(and_(False, False), 1, max_col_clue)), _if_then_else(False, max_row_clue, _if_then_else(and_(False, False), 0, zeros_diff_cols))), max_col_clue), _if_then_else(False, 2, ones_diff_rows))
and_(ge(_if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 1, max_col_clue)), or_(or_(False, True), True))
and_(ge(max_row_clue, -24), False)
ge(4, 1)
and_(or_(ge(3, -8), False), or_(le(_if_then_else(and_(True, False), _if_then_else(ge(1, zeros_diff_rows), ones_diff_rows, 1), _if_then_else(False, 4, -75)), max_col_clue), False))
VAL TREES:
mul(mul(zeros_diff_cols, compare_blocks_cols), add(mul(zeros_diff_cols, add(compare_blocks_cols, zeros_diff_cols)), compare_blocks_cols))
mul(mul(add(add(ones_diff_rows, 13), compare_blocks_rows), add(compare_blocks_cols, mul(-28, ones_diff_rows))), add(ones_diff_cols, -82))
add(mul(zeros_diff_cols, add(zeros_diff_cols, compare_blocks_rows)), mul(compare_blocks_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_cols))
add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))
mul(add(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, -66))
COND TREES:
and_(and_(True, True), ge(max_row_clue, _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_cols, max_row_clue), _if_then_else(False, 4, 3))))
ge(_if_then_else(le(max_col_clue, ones_diff_cols), max_row_clue, max_row_clue), _if_then_else(True, _if_then_else(True, compare_blocks_cols, 4), compare_blocks_cols))
ge(_if_then_else(True, zeros_diff_cols, 2), _if_then_else(True, _if_then_else(False, _if_then_else(False, zeros_diff_rows, 2), _if_then_else(False, max_col_clue, compare_blocks_rows)), _if_then_else(le(ones_diff_rows, max_row_clue), _if_then_else(True, max_col_clue, 4), _if_then_else(True, zeros_diff_rows, max_col_clue))))
ge(_if_then_else(ge(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, max_col_clue), compare_blocks_cols), _if_then_else(le(1, _if_then_else(False, zeros_diff_cols, 2)), max_col_clue, _if_then_else(False, max_row_clue, 4)))
ge(_if_then_else(and_(or_(True, True), True), -81, 1), _if_then_else(True, max_col_clue, 3))
VAL TREES:
mul(add(mul(add(add(zeros_diff_rows, 85), add(compare_blocks_cols, compare_blocks_cols)), add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(mul(10, -86), mul(-78, compare_blocks_cols)))), mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(54, zeros_diff_rows))), mul(mul(mul(ones_diff_cols, zeros_diff_rows), mul(-49, compare_blocks_rows)), mul(add(compare_blocks_rows, -24), add(ones_diff_rows, compare_blocks_cols)))))
mul(mul(ones_diff_cols, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, zeros_diff_rows), mul(mul(compare_blocks_rows, zeros_diff_cols), ones_diff_cols))
mul(add(add(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(add(ones_diff_rows, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_rows)))
mul(add(mul(mul(zeros_diff_rows, 88), mul(zeros_diff_cols, zeros_diff_cols)), add(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_cols))), mul(mul(add(ones_diff_cols, zeros_diff_rows), mul(1, ones_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, compare_blocks_cols))))
add(mul(mul(ones_diff_cols, -11), add(-15, 48)), mul(add(90, ones_diff_cols), add(zeros_diff_rows, 22)))
COND TREES:
ge(_if_then_else(or_(False, or_(True, False)), 79, -96), _if_then_else(or_(True, True), max_row_clue, _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, ones_diff_rows), _if_then_else(True, max_col_clue, ones_diff_cols))))
and_(False, le(max_col_clue, _if_then_else(or_(False, False), _if_then_else(True, 2, 2), _if_then_else(True, zeros_diff_cols, compare_blocks_cols))))
or_(and_(ge(_if_then_else(ge(0, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 4, ones_diff_rows)), _if_then_else(False, compare_blocks_rows, 0)), or_(ge(_if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), and_(and_(False, False), ge(zeros_diff_cols, max_col_clue)))), ge(_if_then_else(or_(and_(True, False), and_(False, True)), _if_then_else(ge(4, max_row_clue), _if_then_else(True, 0, -14), _if_then_else(False, max_row_clue, 4)), _if_then_else(le(-27, ones_diff_rows), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(True, 2, max_col_clue))), _if_then_else(and_(True, or_(and_(ge(_if_then_else(and_(False, False), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(False, 2, 4)), _if_then_else(or_(True, True), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, 3, -9))), or_(or_(or_(False, True), le(2, 3)), and_(and_(True, True), and_(False, False)))), and_(False, le(_if_then_else(or_(False, True), _if_then_else(True, zeros_diff_cols, -24), _if_then_else(True, ones_diff_cols, ones_diff_cols)), _if_then_else(ge(1, -34), _if_then_else(True, _if_then_else(or_(or_(and_(False, True), ge(3, 2)), le(_if_then_else(True, max_row_clue, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows))), _if_then_else(ge(_if_then_else(False, -60, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_cols)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(False, max_col_clue, 1), _if_then_else(False, 4, max_col_clue)), _if_then_else(or_(True, False), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, zeros_diff_rows, -79))), _if_then_else(or_(le(ones_diff_cols, max_col_clue), or_(True, True)), _if_then_else(or_(False, False), _if_then_else(False, ones_diff_cols, 0), _if_then_else(True, zeros_diff_cols, 1)), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, max_row_clue, 2), _if_then_else(True, 3, -63)))), 25), _if_then_else(False, ones_diff_rows, max_col_clue)))))), _if_then_else(or_(True, True), _if_then_else(False, 2, 4), _if_then_else(True, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, 2), _if_then_else(False, 0, 3)))))
or_(le(_if_then_else(or_(False, True), _if_then_else(True, 4, 1), _if_then_else(False, compare_blocks_cols, 2)), _if_then_else(False, _if_then_else(True, 0, max_col_clue), _if_then_else(True, 4, 3))), le(2, compare_blocks_rows))
ge(_if_then_else(True, _if_then_else(False, _if_then_else(True, 4, 45), _if_then_else(False, zeros_diff_rows, _if_then_else(True, compare_blocks_rows, compare_blocks_rows))), ones_diff_rows), _if_then_else(True, _if_then_else(True, _if_then_else(True, max_col_clue, 3), _if_then_else(False, _if_then_else(True, 3, compare_blocks_cols), compare_blocks_cols)), ones_diff_cols))
VAL TREES:
add(mul(compare_blocks_cols, zeros_diff_cols), mul(mul(83, ones_diff_cols), compare_blocks_cols))
mul(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows))
add(add(add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(38, ones_diff_rows))), add(mul(add(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), mul(mul(78, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_rows))))
add(add(mul(ones_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(add(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_cols, 17), mul(ones_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, ones_diff_rows), add(7, zeros_diff_cols)))
add(mul(mul(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(83, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows)))
COND TREES:
or_(True, and_(ge(4, ones_diff_cols), and_(False, False)))
le(0, _if_then_else(le(2, 4), compare_blocks_cols, ones_diff_cols))
ge(_if_then_else(and_(or_(le(4, 0), or_(False, True)), le(_if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, 2, ones_diff_cols))), max_row_clue, ones_diff_cols), _if_then_else(False, 3, _if_then_else(True, max_col_clue, zeros_diff_rows)))
or_(False, le(ones_diff_cols, -27))
and_(and_(True, False), True)
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(add(add(mul(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows))), mul(mul(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_cols, -52)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))), add(compare_blocks_rows, compare_blocks_cols))))
add(mul(add(add(ones_diff_rows, zeros_diff_rows), add(compare_blocks_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_rows, zeros_diff_rows))), add(compare_blocks_cols, compare_blocks_rows))
add(add(add(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows)), add(add(compare_blocks_cols, ones_diff_rows), add(5, zeros_diff_rows))), add(mul(add(compare_blocks_cols, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_cols)), mul(add(compare_blocks_cols, 91), add(compare_blocks_rows, compare_blocks_rows))))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(add(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows)), mul(mul(zeros_diff_cols, 7), add(ones_diff_cols, zeros_diff_rows))))
COND TREES:
or_(and_(False, True), le(_if_then_else(False, compare_blocks_rows, _if_then_else(False, max_row_clue, max_row_clue)), 0))
le(ones_diff_cols, _if_then_else(or_(True, True), compare_blocks_rows, ones_diff_cols))
ge(_if_then_else(False, max_row_clue, _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, -70), _if_then_else(True, 3, ones_diff_rows))), _if_then_else(or_(False, and_(False, True)), compare_blocks_cols, zeros_diff_rows))
or_(False, False)
and_(or_(or_(False, True), True), or_(or_(ge(2, -32), True), True))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(add(-22, compare_blocks_rows), add(ones_diff_cols, compare_blocks_cols)))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), mul(add(add(mul(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), add(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, ones_diff_cols))), mul(add(add(-38, zeros_diff_cols), mul(-65, ones_diff_rows)), mul(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, zeros_diff_rows))))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(mul(mul(ones_diff_cols, 70), add(zeros_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_cols)))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_rows, 72))))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
ge(zeros_diff_cols, compare_blocks_cols)
ge(_if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(and_(and_(le(_if_then_else(True, ones_diff_cols, 4), _if_then_else(False, zeros_diff_rows, 4)), ge(_if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(False, 4, ones_diff_cols))), and_(le(_if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows)), and_(ge(_if_then_else(True, 2, max_row_clue), _if_then_else(ge(_if_then_else(True, ones_diff_cols, -28), 1), _if_then_else(True, 3, zeros_diff_rows), _if_then_else(or_(True, True), zeros_diff_cols, compare_blocks_cols))), and_(False, True)))), zeros_diff_cols, compare_blocks_cols))
or_(True, True)
le(_if_then_else(or_(le(_if_then_else(False, compare_blocks_rows, compare_blocks_cols), zeros_diff_cols), ge(max_col_clue, 4)), ones_diff_cols, ones_diff_rows), _if_then_else(or_(le(zeros_diff_rows, compare_blocks_cols), ge(1, 3)), _if_then_else(ge(_if_then_else(and_(False, False), _if_then_else(False, 3, 0), _if_then_else(True, max_col_clue, 3)), _if_then_else(and_(True, False), _if_then_else(False, -89, -71), _if_then_else(False, ones_diff_rows, 35))), _if_then_else(and_(ge(ones_diff_cols, max_col_clue), or_(True, True)), _if_then_else(or_(False, True), _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_cols, 2)), _if_then_else(or_(True, True), _if_then_else(False, 2, 1), _if_then_else(True, 3, -18))), _if_then_else(or_(ge(max_col_clue, zeros_diff_rows), le(4, zeros_diff_cols)), _if_then_else(ge(4, compare_blocks_cols), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_cols, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, 3), _if_then_else(False, 3, ones_diff_rows)))), 2))
le(_if_then_else(False, max_row_clue, max_row_clue), _if_then_else(False, max_col_clue, _if_then_else(True, max_row_clue, 2)))
VAL TREES:
add(mul(ones_diff_rows, zeros_diff_rows), add(-49, zeros_diff_rows))
add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, -94))
mul(mul(zeros_diff_rows, ones_diff_cols), mul(mul(add(61, ones_diff_cols), zeros_diff_cols), ones_diff_rows))
add(mul(zeros_diff_cols, mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), 67))
mul(add(zeros_diff_rows, -21), add(zeros_diff_rows, zeros_diff_cols))
add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols))
COND TREES:
or_(or_(or_(True, False), True), le(_if_then_else(False, compare_blocks_rows, _if_then_else(False, max_row_clue, _if_then_else(False, compare_blocks_cols, ones_diff_rows))), 3))
le(ones_diff_cols, zeros_diff_cols)
ge(_if_then_else(False, max_row_clue, _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, -70), _if_then_else(True, 3, ones_diff_rows))), _if_then_else(or_(False, True), compare_blocks_cols, zeros_diff_rows))
or_(True, ge(_if_then_else(False, 3, compare_blocks_rows), zeros_diff_cols))
and_(or_(or_(False, True), True), or_(True, or_(True, False)))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(add(-22, compare_blocks_rows), add(ones_diff_cols, compare_blocks_cols)))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), mul(add(add(mul(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), add(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, ones_diff_cols))), mul(add(add(-38, zeros_diff_cols), mul(-65, ones_diff_rows)), mul(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, zeros_diff_rows))))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(mul(mul(mul(compare_blocks_cols, compare_blocks_cols), mul(zeros_diff_cols, compare_blocks_rows)), add(zeros_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_cols)))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_rows, mul(add(zeros_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, add(48, ones_diff_rows)))))))
add(add(mul(mul(add(compare_blocks_rows, zeros_diff_rows), mul(39, ones_diff_rows)), add(add(ones_diff_rows, ones_diff_rows), mul(ones_diff_cols, zeros_diff_cols))), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(mul(mul(add(add(add(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), mul(add(-87, ones_diff_cols), mul(zeros_diff_rows, 21))), add(mul(add(-30, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_cols), mul(23, compare_blocks_cols)))), mul(mul(mul(add(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)), add(mul(compare_blocks_cols, 11), add(zeros_diff_rows, compare_blocks_cols))), mul(mul(add(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, 44)), add(mul(ones_diff_rows, ones_diff_rows), mul(compare_blocks_rows, compare_blocks_rows))))), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
ge(_if_then_else(False, zeros_diff_rows, max_col_clue), max_row_clue)
and_(ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(or_(True, True), compare_blocks_cols, _if_then_else(and_(False, and_(ge(42, max_row_clue), and_(ge(0, compare_blocks_rows), True))), _if_then_else(False, ones_diff_cols, 49), _if_then_else(ge(max_col_clue, _if_then_else(False, 1, 62)), 0, _if_then_else(True, 4, _if_then_else(True, max_row_clue, _if_then_else(True, compare_blocks_cols, max_col_clue)))))), zeros_diff_cols), _if_then_else(False, 1, max_col_clue)), False)
and_(True, le(_if_then_else(False, 1, 4), _if_then_else(False, ones_diff_rows, zeros_diff_cols)))
ge(zeros_diff_rows, _if_then_else(False, _if_then_else(and_(False, le(_if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(and_(ge(-75, 1), True), compare_blocks_rows, max_row_clue))), 2, _if_then_else(le(_if_then_else(True, 0, -77), 4), compare_blocks_rows, 4)), ones_diff_rows))
and_(le(_if_then_else(True, max_col_clue, max_col_clue), max_row_clue), or_(le(_if_then_else(le(1, zeros_diff_cols), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(True, max_row_clue, max_col_clue)), max_col_clue), False))
VAL TREES:
mul(mul(zeros_diff_cols, compare_blocks_cols), add(mul(add(mul(mul(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, 96)), mul(mul(compare_blocks_cols, -28), mul(zeros_diff_cols, 13))), add(mul(mul(ones_diff_cols, -96), mul(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_cols, zeros_diff_rows), add(-98, ones_diff_cols)))), compare_blocks_cols))
mul(mul(add(add(ones_diff_rows, 13), compare_blocks_rows), add(compare_blocks_cols, mul(add(add(ones_diff_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols))))), add(ones_diff_cols, -82))
add(mul(zeros_diff_cols, add(mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_cols, ones_diff_rows)), compare_blocks_rows)), mul(compare_blocks_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_rows), add(mul(mul(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_cols)), add(mul(ones_diff_rows, ones_diff_rows), add(ones_diff_cols, zeros_diff_cols))), mul(mul(mul(ones_diff_cols, zeros_diff_rows), add(-79, 44)), mul(add(-92, compare_blocks_rows), mul(75, compare_blocks_cols)))))
add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, mul(mul(mul(mul(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols))), mul(add(mul(ones_diff_rows, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, -85), add(zeros_diff_cols, compare_blocks_cols)))), mul(add(mul(add(-7, zeros_diff_rows), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(add(add(ones_diff_rows, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_cols)), add(mul(compare_blocks_cols, 91), mul(zeros_diff_cols, compare_blocks_rows)))))))
mul(add(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_rows))))
COND TREES:
ge(_if_then_else(or_(le(_if_then_else(le(_if_then_else(True, 2, 0), _if_then_else(True, 4, compare_blocks_cols)), _if_then_else(ge(0, 2), _if_then_else(False, 2, 1), _if_then_else(True, 2, ones_diff_cols)), _if_then_else(le(2, 4), _if_then_else(False, max_col_clue, 1), _if_then_else(True, compare_blocks_rows, max_row_clue))), _if_then_else(ge(_if_then_else(False, 0, max_col_clue), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(compare_blocks_cols, 3), _if_then_else(True, max_row_clue, 0), _if_then_else(False, 4, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_rows, 2), _if_then_else(False, max_row_clue, ones_diff_cols)))), ge(_if_then_else(le(_if_then_else(True, 4, max_row_clue), _if_then_else(True, zeros_diff_rows, 3)), _if_then_else(ge(-30, max_col_clue), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, max_col_clue, 1)), _if_then_else(le(max_col_clue, 4), _if_then_else(True, 3, 3), _if_then_else(False, 3, 1))), _if_then_else(or_(or_(True, True), or_(True, False)), _if_then_else(or_(True, False), _if_then_else(False, ones_diff_cols, 4), _if_then_else(True, 1, ones_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, 4))))), zeros_diff_rows, max_col_clue), _if_then_else(False, 2, ones_diff_rows))
and_(and_(le(_if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, -22)), or_(and_(False, True), and_(True, True))), or_(or_(False, True), True))
and_(True, le(_if_then_else(and_(and_(and_(or_(True, False), le(zeros_diff_rows, 0)), and_(and_(False, False), or_(False, True))), and_(ge(_if_then_else(False, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, 1)), and_(or_(False, True), or_(True, False)))), 3, 70), 53))
ge(zeros_diff_rows, _if_then_else(False, _if_then_else(and_(False, False), 2, _if_then_else(True, compare_blocks_rows, _if_then_else(False, ones_diff_cols, ones_diff_rows))), ones_diff_rows))
and_(ge(_if_then_else(or_(ge(_if_then_else(False, 3, ones_diff_rows), _if_then_else(True, 2, ones_diff_rows)), and_(or_(True, False), and_(True, False))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, -17, max_col_clue)), _if_then_else(le(3, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(False, -52, 1)), _if_then_else(le(0, compare_blocks_rows), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, ones_diff_cols, max_col_clue))), _if_then_else(or_(or_(True, False), and_(True, True)), _if_then_else(le(max_col_clue, max_col_clue), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(True, max_row_clue, compare_blocks_cols)), _if_then_else(ge(max_row_clue, compare_blocks_cols), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, 3, zeros_diff_cols)))), _if_then_else(or_(le(_if_then_else(False, max_row_clue, zeros_diff_rows), _if_then_else(False, -61, ones_diff_rows)), and_(ge(max_col_clue, 0), le(max_col_clue, 2))), _if_then_else(or_(and_(False, False), ge(4, 0)), _if_then_else(le(0, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, max_col_clue), _if_then_else(False, 3, -34)), _if_then_else(and_(True, False), _if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(True, 2, compare_blocks_rows))), _if_then_else(and_(le(ones_diff_rows, 1), and_(True, False)), _if_then_else(and_(False, True), _if_then_else(False, 1, 55), _if_then_else(False, 4, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(True, zeros_diff_rows, 2))))), or_(False, False))
VAL TREES:
mul(mul(zeros_diff_cols, compare_blocks_cols), add(mul(zeros_diff_cols, add(compare_blocks_cols, zeros_diff_cols)), compare_blocks_cols))
mul(mul(add(add(ones_diff_rows, 13), compare_blocks_rows), add(compare_blocks_cols, mul(-28, ones_diff_rows))), add(ones_diff_cols, -82))
add(mul(zeros_diff_cols, add(zeros_diff_cols, compare_blocks_rows)), mul(compare_blocks_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_cols))
add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))
mul(add(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, -66))
COND TREES:
ge(zeros_diff_cols, _if_then_else(and_(and_(ge(ones_diff_cols, zeros_diff_rows), ge(max_col_clue, compare_blocks_rows)), True), max_row_clue, 1))
ge(_if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(and_(and_(le(_if_then_else(True, ones_diff_cols, 4), _if_then_else(False, zeros_diff_rows, 4)), ge(_if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(False, 4, ones_diff_cols))), and_(le(_if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows)), and_(and_(True, and_(False, False)), and_(False, True)))), zeros_diff_cols, compare_blocks_cols))
or_(ge(max_row_clue, _if_then_else(and_(True, True), _if_then_else(False, 3, 25), _if_then_else(False, zeros_diff_rows, ones_diff_rows))), True)
le(4, _if_then_else(True, zeros_diff_rows, 2))
le(_if_then_else(False, _if_then_else(ge(56, max_row_clue), _if_then_else(True, _if_then_else(le(_if_then_else(False, 4, compare_blocks_rows), 0), 2, -54), max_row_clue), _if_then_else(le(_if_then_else(False, max_col_clue, compare_blocks_cols), max_row_clue), ones_diff_cols, 2)), max_row_clue), _if_then_else(False, ones_diff_rows, -67))
VAL TREES:
add(mul(ones_diff_rows, mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows))), add(-49, zeros_diff_rows))
add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, -94))
mul(mul(zeros_diff_rows, ones_diff_cols), mul(mul(add(61, ones_diff_cols), mul(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows))), ones_diff_rows))
add(mul(zeros_diff_cols, add(mul(add(add(-21, compare_blocks_cols), mul(-6, zeros_diff_cols)), mul(mul(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(add(mul(compare_blocks_cols, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols))))), add(add(ones_diff_cols, compare_blocks_rows), 67))
mul(add(mul(57, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_rows)), add(zeros_diff_rows, zeros_diff_cols))
add(add(compare_blocks_rows, zeros_diff_cols), add(mul(add(mul(compare_blocks_cols, mul(zeros_diff_cols, zeros_diff_rows)), compare_blocks_cols), add(add(zeros_diff_cols, zeros_diff_rows), add(zeros_diff_rows, add(ones_diff_rows, ones_diff_cols)))), ones_diff_cols))
COND TREES:
ge(_if_then_else(False, _if_then_else(ge(max_col_clue, compare_blocks_cols), _if_then_else(True, _if_then_else(False, 0, compare_blocks_cols), _if_then_else(and_(False, False), 1, 1)), _if_then_else(False, max_row_clue, _if_then_else(True, 0, zeros_diff_cols))), max_col_clue), _if_then_else(False, 2, ones_diff_rows))
and_(ge(_if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(False, 1, max_col_clue)), or_(or_(False, True), False))
and_(True, or_(le(max_col_clue, compare_blocks_cols), le(0, 3)))
ge(zeros_diff_rows, _if_then_else(False, max_col_clue, ones_diff_rows))
and_(le(_if_then_else(False, max_col_clue, compare_blocks_cols), max_row_clue), or_(le(_if_then_else(and_(False, False), _if_then_else(False, ones_diff_rows, 1), _if_then_else(False, 4, -75)), _if_then_else(True, ones_diff_cols, compare_blocks_rows)), False))
VAL TREES:
mul(mul(zeros_diff_cols, compare_blocks_cols), add(mul(zeros_diff_cols, add(compare_blocks_cols, zeros_diff_cols)), compare_blocks_cols))
mul(mul(add(add(ones_diff_rows, 13), compare_blocks_rows), add(compare_blocks_cols, mul(-28, ones_diff_rows))), add(ones_diff_cols, -82))
add(mul(zeros_diff_cols, add(zeros_diff_cols, compare_blocks_rows)), mul(compare_blocks_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_cols))
add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))
mul(add(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, -66))
COND TREES:
and_(and_(and_(True, True), True), ge(max_row_clue, _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, max_row_clue), _if_then_else(True, 4, 3))))
ge(_if_then_else(False, max_row_clue, max_row_clue), _if_then_else(True, _if_then_else(True, compare_blocks_cols, _if_then_else(False, 3, 2)), compare_blocks_cols))
ge(_if_then_else(True, zeros_diff_cols, 2), _if_then_else(True, _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_row_clue), _if_then_else(False, max_col_clue, compare_blocks_rows)), _if_then_else(le(ones_diff_rows, max_row_clue), _if_then_else(True, max_col_clue, 4), _if_then_else(True, zeros_diff_rows, max_col_clue))))
ge(_if_then_else(True, compare_blocks_cols, compare_blocks_cols), _if_then_else(le(1, _if_then_else(False, zeros_diff_cols, 2)), max_col_clue, zeros_diff_cols))
ge(_if_then_else(False, -81, 1), _if_then_else(True, max_col_clue, 3))
VAL TREES:
mul(add(mul(add(add(zeros_diff_rows, 85), add(compare_blocks_cols, compare_blocks_cols)), add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(mul(10, -86), mul(-78, compare_blocks_cols)))), mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(54, zeros_diff_rows))), mul(mul(mul(ones_diff_cols, zeros_diff_rows), mul(-49, compare_blocks_rows)), mul(add(compare_blocks_rows, -24), add(ones_diff_rows, compare_blocks_cols)))))
mul(mul(ones_diff_cols, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, zeros_diff_rows), mul(mul(compare_blocks_rows, zeros_diff_cols), ones_diff_cols))
mul(add(add(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(add(ones_diff_rows, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_rows)))
mul(add(mul(mul(zeros_diff_rows, 88), mul(zeros_diff_cols, zeros_diff_cols)), add(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_cols))), mul(mul(add(ones_diff_cols, zeros_diff_rows), mul(1, ones_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, compare_blocks_cols))))
add(mul(mul(ones_diff_cols, -11), add(-15, 48)), mul(add(90, ones_diff_cols), add(zeros_diff_rows, 22)))
COND TREES:
or_(or_(or_(True, le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, -6, 1))), True), and_(False, True))
le(_if_then_else(True, compare_blocks_cols, _if_then_else(and_(True, True), max_col_clue, _if_then_else(False, zeros_diff_cols, 3))), _if_then_else(True, compare_blocks_cols, ones_diff_cols))
ge(_if_then_else(ge(_if_then_else(True, 46, compare_blocks_cols), _if_then_else(True, ones_diff_rows, compare_blocks_cols)), max_row_clue, ones_diff_cols), _if_then_else(or_(ge(1, 2), True), compare_blocks_cols, zeros_diff_rows))
and_(and_(True, True), le(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, ones_diff_cols, zeros_diff_rows)))
and_(or_(False, True), le(max_col_clue, compare_blocks_rows))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
or_(and_(and_(True, False), and_(False, True)), and_(False, le(ones_diff_cols, ones_diff_cols)))
le(_if_then_else(True, _if_then_else(True, compare_blocks_rows, zeros_diff_cols), compare_blocks_rows), _if_then_else(False, 1, zeros_diff_cols))
and_(False, and_(True, True))
le(_if_then_else(True, 3, _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_cols, max_row_clue), _if_then_else(True, 4, 3))), max_col_clue)
and_(or_(True, False), False)
VAL TREES:
add(mul(add(mul(zeros_diff_rows, compare_blocks_rows), zeros_diff_rows), ones_diff_cols), mul(zeros_diff_rows, -35))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(mul(mul(ones_diff_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), zeros_diff_rows))
add(add(add(-63, zeros_diff_cols), mul(49, 62)), mul(-33, compare_blocks_rows))
add(add(zeros_diff_rows, zeros_diff_cols), add(mul(add(compare_blocks_cols, 2), add(zeros_diff_cols, ones_diff_cols)), ones_diff_cols))
add(add(compare_blocks_cols, zeros_diff_rows), add(42, add(add(add(add(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, 24)), mul(mul(compare_blocks_cols, -41), add(compare_blocks_cols, compare_blocks_rows))), add(add(add(zeros_diff_cols, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), add(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols))))))
add(add(7, zeros_diff_rows), mul(mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)), ones_diff_rows))
COND TREES:
or_(False, True)
or_(le(max_col_clue, 2), False)
ge(_if_then_else(False, _if_then_else(le(max_col_clue, 4), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, max_row_clue, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(False, _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, 3, max_col_clue)), ge(4, compare_blocks_rows))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_cols))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(or_(False, True), zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, mul(mul(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows))), add(compare_blocks_cols, 59))
mul(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(add(add(zeros_diff_rows, ones_diff_rows), mul(ones_diff_rows, ones_diff_rows)), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
or_(le(max_col_clue, zeros_diff_rows), True)
or_(le(max_col_clue, 2), ge(0, zeros_diff_cols))
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), _if_then_else(le(max_col_clue, 4), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, max_row_clue, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(False, _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(ge(compare_blocks_cols, zeros_diff_rows), 3, max_col_clue)), ge(4, compare_blocks_rows))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(or_(False, True), zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
or_(le(compare_blocks_rows, _if_then_else(True, 1, max_col_clue)), ge(_if_then_else(False, -92, 4), compare_blocks_rows))
le(_if_then_else(ge(4, 1), compare_blocks_rows, max_row_clue), _if_then_else(False, max_row_clue, _if_then_else(False, max_col_clue, 2)))
and_(True, or_(False, True))
ge(4, _if_then_else(False, 3, compare_blocks_rows))
or_(ge(0, -74), ge(ones_diff_rows, _if_then_else(False, _if_then_else(or_(True, False), _if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(False, compare_blocks_cols, ones_diff_cols)), 4)))
VAL TREES:
mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_cols))
add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_rows))
add(add(mul(mul(add(compare_blocks_cols, ones_diff_cols), mul(-85, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_rows))), mul(mul(add(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)), mul(mul(compare_blocks_rows, 44), add(compare_blocks_rows, ones_diff_cols))), mul(add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, zeros_diff_rows), add(-49, ones_diff_cols)))))
add(add(ones_diff_rows, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows))
mul(add(mul(ones_diff_rows, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_cols)), add(75, zeros_diff_cols))
mul(mul(zeros_diff_cols, -79), mul(compare_blocks_cols, ones_diff_cols))
COND TREES:
or_(le(max_col_clue, zeros_diff_rows), True)
or_(le(max_col_clue, 1), ge(0, zeros_diff_cols))
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), _if_then_else(False, max_row_clue, 4), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(ge(2, ones_diff_rows), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, 3, 3)), le(_if_then_else(True, 0, -77), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)))
or_(ge(ones_diff_cols, _if_then_else(and_(False, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
and_(True, or_(False, False))
ge(_if_then_else(le(ones_diff_cols, 2), _if_then_else(and_(False, or_(True, True)), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(False, max_col_clue, 2)), _if_then_else(le(-66, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, 4), _if_then_else(False, max_row_clue, 4))), _if_then_else(le(_if_then_else(True, max_row_clue, max_row_clue), _if_then_else(True, zeros_diff_rows, zeros_diff_cols)), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(le(compare_blocks_cols, 3), _if_then_else(True, compare_blocks_rows, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, 0))))
le(zeros_diff_cols, _if_then_else(False, ones_diff_rows, _if_then_else(True, 3, max_row_clue)))
or_(ge(_if_then_else(False, _if_then_else(True, 50, ones_diff_cols), _if_then_else(True, zeros_diff_rows, -46)), _if_then_else(False, _if_then_else(True, 4, 3), _if_then_else(True, compare_blocks_cols, ones_diff_rows))), and_(or_(le(_if_then_else(False, compare_blocks_rows, compare_blocks_cols), zeros_diff_cols), ge(max_col_clue, 4)), or_(ge(4, zeros_diff_cols), ge(2, 2))))
or_(or_(False, True), True)
VAL TREES:
add(mul(mul(add(add(ones_diff_rows, -79), add(ones_diff_rows, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols))), mul(add(mul(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_cols)), mul(mul(-30, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)))), add(add(mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)), add(add(compare_blocks_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_rows))), mul(mul(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_cols)))))
add(add(compare_blocks_rows, -17), add(ones_diff_rows, compare_blocks_rows))
add(mul(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, add(zeros_diff_rows, compare_blocks_rows)))
add(add(ones_diff_rows, compare_blocks_rows), add(-44, add(ones_diff_cols, ones_diff_rows)))
add(mul(mul(mul(ones_diff_rows, -100), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, mul(mul(add(zeros_diff_cols, compare_blocks_rows), mul(99, ones_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), mul(compare_blocks_rows, compare_blocks_cols)))), mul(zeros_diff_rows, zeros_diff_cols))), mul(mul(mul(zeros_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_cols, compare_blocks_cols))))
add(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols))
COND TREES:
and_(and_(True, True), or_(True, or_(or_(True, False), True)))
ge(_if_then_else(or_(ge(compare_blocks_rows, 0), False), max_row_clue, 2), _if_then_else(True, _if_then_else(True, _if_then_else(or_(le(_if_then_else(le(4, ones_diff_rows), _if_then_else(False, 2, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(ge(ones_diff_cols, 3), _if_then_else(True, 2, 1), _if_then_else(False, compare_blocks_cols, 0))), or_(le(_if_then_else(False, 0, ones_diff_rows), _if_then_else(True, 1, 4)), and_(ge(4, 1), le(2, max_col_clue)))), _if_then_else(and_(and_(and_(True, False), ge(0, ones_diff_cols)), le(_if_then_else(False, 0, 2), _if_then_else(True, max_row_clue, 0))), _if_then_else(or_(ge(compare_blocks_cols, -86), le(zeros_diff_cols, 2)), _if_then_else(or_(False, True), _if_then_else(True, zeros_diff_rows, 0), _if_then_else(True, zeros_diff_rows, 3)), _if_then_else(or_(True, False), _if_then_else(True, 0, max_row_clue), _if_then_else(False, 2, 1))), _if_then_else(le(_if_then_else(False, zeros_diff_rows, zeros_diff_cols), _if_then_else(True, 2, 1)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, max_col_clue, max_col_clue)), _if_then_else(and_(False, False), _if_then_else(True, 1, 1), _if_then_else(False, max_col_clue, 0)))), _if_then_else(or_(and_(or_(False, False), ge(max_col_clue, ones_diff_cols)), ge(_if_then_else(True, max_col_clue, max_row_clue), _if_then_else(True, zeros_diff_cols, 0))), _if_then_else(and_(or_(False, False), le(compare_blocks_rows, 0)), _if_then_else(le(3, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, compare_blocks_cols, 3)), _if_then_else(and_(True, True), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(True, max_row_clue, 1))), _if_then_else(le(_if_then_else(False, 2, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, 0)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(False, ones_diff_rows, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(True, 2, 4), _if_then_else(False, 4, 4))))), _if_then_else(False, 3, 2)), 0))
ge(_if_then_else(True, zeros_diff_cols, 2), _if_then_else(or_(ge(compare_blocks_rows, compare_blocks_cols), and_(or_(True, or_(False, False)), or_(True, True))), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, 2), 3), _if_then_else(le(ones_diff_rows, max_row_clue), _if_then_else(True, max_col_clue, max_row_clue), _if_then_else(True, zeros_diff_rows, max_col_clue))))
ge(_if_then_else(le(ones_diff_cols, -27), compare_blocks_cols, compare_blocks_cols), _if_then_else(and_(and_(le(ones_diff_cols, 1), True), ge(0, zeros_diff_rows)), max_col_clue, zeros_diff_cols))
ge(_if_then_else(le(_if_then_else(and_(and_(ge(2, max_col_clue), ge(compare_blocks_cols, compare_blocks_rows)), le(_if_then_else(False, 0, 2), _if_then_else(True, 1, ones_diff_cols))), _if_then_else(and_(and_(True, True), and_(False, False)), _if_then_else(and_(True, False), _if_then_else(False, -48, 89), _if_then_else(True, compare_blocks_cols, 1)), _if_then_else(ge(compare_blocks_cols, zeros_diff_rows), _if_then_else(False, 4, max_col_clue), _if_then_else(False, -64, 0))), _if_then_else(and_(and_(True, False), and_(False, True)), _if_then_else(and_(False, False), _if_then_else(False, 3, -100), _if_then_else(False, 4, 1)), _if_then_else(ge(max_row_clue, compare_blocks_cols), _if_then_else(True, compare_blocks_cols, 2), _if_then_else(False, max_col_clue, 3)))), _if_then_else(or_(ge(_if_then_else(False, 88, max_row_clue), _if_then_else(False, 3, ones_diff_rows)), ge(_if_then_else(False, 0, 2), _if_then_else(True, zeros_diff_cols, 3))), _if_then_else(ge(_if_then_else(False, 94, ones_diff_cols), _if_then_else(True, compare_blocks_rows, 0)), _if_then_else(and_(True, True), _if_then_else(False, -27, max_row_clue), _if_then_else(False, zeros_diff_rows, max_row_clue)), _if_then_else(or_(True, False), _if_then_else(True, 0, 3), _if_then_else(False, 4, max_row_clue))), _if_then_else(ge(_if_then_else(False, 2, 1), _if_then_else(True, 1, 4)), _if_then_else(and_(True, False), _if_then_else(False, 14, 3), _if_then_else(True, 2, compare_blocks_rows)), _if_then_else(le(ones_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, 4))))), -81, 1), _if_then_else(or_(True, True), max_col_clue, 3))
VAL TREES:
mul(add(mul(add(add(zeros_diff_rows, 85), add(compare_blocks_cols, compare_blocks_cols)), add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(mul(10, -86), mul(-78, compare_blocks_cols)))), mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(54, zeros_diff_rows))), mul(mul(mul(ones_diff_cols, zeros_diff_rows), mul(-49, compare_blocks_rows)), mul(add(compare_blocks_rows, -24), add(ones_diff_rows, compare_blocks_cols)))))
mul(mul(ones_diff_cols, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, zeros_diff_rows), mul(mul(compare_blocks_rows, zeros_diff_cols), ones_diff_cols))
mul(add(add(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(add(ones_diff_rows, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_rows)))
mul(add(mul(mul(zeros_diff_rows, 88), mul(zeros_diff_cols, zeros_diff_cols)), add(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_cols))), mul(mul(add(ones_diff_cols, zeros_diff_rows), mul(1, ones_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, compare_blocks_cols))))
add(mul(mul(ones_diff_cols, -11), add(-15, 48)), mul(add(90, ones_diff_cols), add(zeros_diff_rows, 22)))
COND TREES:
ge(max_row_clue, _if_then_else(or_(True, False), compare_blocks_rows, max_row_clue))
ge(_if_then_else(and_(and_(False, False), False), _if_then_else(False, 1, max_col_clue), max_col_clue), _if_then_else(False, zeros_diff_cols, compare_blocks_cols))
or_(or_(False, False), le(_if_then_else(False, max_col_clue, 0), _if_then_else(le(ones_diff_cols, 53), ones_diff_rows, ones_diff_rows)))
le(_if_then_else(or_(True, True), ones_diff_cols, _if_then_else(True, _if_then_else(True, _if_then_else(False, 1, ones_diff_rows), ones_diff_rows), 4)), _if_then_else(False, zeros_diff_rows, 2))
le(3, _if_then_else(ge(_if_then_else(True, ones_diff_rows, ones_diff_rows), _if_then_else(True, 0, max_col_clue)), ones_diff_rows, -67))
VAL TREES:
add(mul(ones_diff_rows, zeros_diff_rows), add(add(mul(mul(add(add(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_rows, 93)), mul(add(compare_blocks_cols, ones_diff_cols), add(42, zeros_diff_rows))), mul(add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(ones_diff_cols, ones_diff_cols)))), mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_cols)), add(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_rows), mul(compare_blocks_rows, 95))))), zeros_diff_rows))
add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, -94))
mul(mul(zeros_diff_rows, ones_diff_cols), mul(add(mul(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_rows, ones_diff_cols)), ones_diff_rows))
add(add(mul(ones_diff_cols, zeros_diff_rows), add(ones_diff_cols, mul(ones_diff_cols, ones_diff_cols))), add(add(ones_diff_cols, compare_blocks_rows), 67))
mul(add(zeros_diff_rows, -21), mul(add(add(compare_blocks_cols, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_cols)), add(mul(ones_diff_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows))))
add(add(compare_blocks_rows, zeros_diff_cols), mul(mul(add(add(zeros_diff_cols, ones_diff_rows), add(94, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, -31))), mul(mul(add(compare_blocks_rows, ones_diff_cols), add(48, zeros_diff_cols)), mul(mul(compare_blocks_cols, ones_diff_cols), mul(compare_blocks_cols, 60)))))
COND TREES:
or_(le(max_col_clue, zeros_diff_rows), le(compare_blocks_rows, _if_then_else(True, 1, max_col_clue)))
or_(le(max_col_clue, 2), ge(0, zeros_diff_cols))
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), _if_then_else(le(max_col_clue, 4), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, max_row_clue, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(ge(2, ones_diff_rows), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, 3, max_col_clue)), le(_if_then_else(True, 0, -77), _if_then_else(False, 3, compare_blocks_rows)))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
ge(_if_then_else(or_(ge(1, max_row_clue), or_(True, False)), 79, -96), _if_then_else(True, max_row_clue, 3))
and_(le(compare_blocks_cols, 3), le(max_col_clue, ones_diff_cols))
or_(and_(ge(_if_then_else(ge(0, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 4, ones_diff_rows)), _if_then_else(False, compare_blocks_rows, 0)), and_(and_(and_(True, True), and_(False, True)), or_(ge(ones_diff_cols, zeros_diff_rows), and_(False, True)))), ge(_if_then_else(or_(and_(True, False), and_(False, True)), _if_then_else(ge(4, max_row_clue), _if_then_else(True, 0, -14), _if_then_else(False, max_row_clue, 4)), _if_then_else(le(-27, ones_diff_rows), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(True, 2, max_col_clue))), _if_then_else(True, _if_then_else(or_(True, True), _if_then_else(False, 2, 4), _if_then_else(True, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, 2), _if_then_else(False, 0, 3)))))
or_(False, le(2, compare_blocks_rows))
or_(True, True)
VAL TREES:
add(mul(compare_blocks_cols, zeros_diff_cols), mul(mul(mul(add(add(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, -52)), mul(add(zeros_diff_cols, compare_blocks_rows), add(ones_diff_rows, ones_diff_cols))), add(add(mul(ones_diff_cols, 1), add(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))), ones_diff_cols), compare_blocks_cols))
mul(add(add(add(mul(add(ones_diff_cols, 72), add(ones_diff_cols, -79)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(zeros_diff_cols, compare_blocks_cols), mul(41, zeros_diff_rows)))), add(add(add(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(add(ones_diff_cols, zeros_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))))), add(zeros_diff_cols, ones_diff_rows))
add(add(add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(38, ones_diff_rows))), add(mul(add(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), mul(mul(78, ones_diff_cols), mul(zeros_diff_cols, add(mul(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_rows))))))
add(add(mul(ones_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(add(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_cols, 17), mul(ones_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, ones_diff_rows), add(7, zeros_diff_cols)))
add(mul(mul(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(83, ones_diff_rows), add(mul(mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), mul(add(zeros_diff_rows, 34), mul(zeros_diff_rows, compare_blocks_rows))), mul(add(mul(ones_diff_cols, -34), mul(ones_diff_rows, -98)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows))))))
COND TREES:
or_(or_(or_(True, False), True), le(_if_then_else(False, compare_blocks_rows, _if_then_else(False, max_row_clue, max_row_clue)), 0))
le(_if_then_else(True, compare_blocks_cols, 1), _if_then_else(or_(True, True), compare_blocks_cols, ones_diff_cols))
ge(_if_then_else(False, max_row_clue, _if_then_else(False, 4, 2)), _if_then_else(or_(False, True), compare_blocks_cols, ones_diff_cols))
or_(False, le(1, _if_then_else(ge(max_col_clue, 4), zeros_diff_cols, 2)))
and_(or_(or_(False, True), False), or_(True, True))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
and_(True, False)
ge(_if_then_else(True, _if_then_else(True, 0, compare_blocks_cols), zeros_diff_cols), _if_then_else(ge(_if_then_else(le(_if_then_else(False, 1, 4), _if_then_else(True, 2, zeros_diff_cols)), 2, zeros_diff_cols), _if_then_else(and_(le(0, 52), and_(True, True)), _if_then_else(ge(4, ones_diff_rows), _if_then_else(False, max_row_clue, compare_blocks_rows), 0), _if_then_else(True, zeros_diff_cols, _if_then_else(True, compare_blocks_rows, 2)))), _if_then_else(False, 4, -96), _if_then_else(ge(_if_then_else(False, compare_blocks_rows, 3), compare_blocks_rows), compare_blocks_rows, max_row_clue)))
le(_if_then_else(ge(_if_then_else(False, max_col_clue, 4), _if_then_else(le(compare_blocks_cols, 0), _if_then_else(le(zeros_diff_rows, ones_diff_rows), 4, zeros_diff_cols), 2)), ones_diff_cols, zeros_diff_cols), _if_then_else(True, max_row_clue, _if_then_else(ge(zeros_diff_cols, 37), _if_then_else(False, ones_diff_rows, _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_rows, max_row_clue), _if_then_else(True, max_col_clue, max_row_clue), _if_then_else(True, zeros_diff_rows, max_col_clue)))), _if_then_else(False, 2, 51))))
and_(or_(False, or_(le(_if_then_else(True, max_col_clue, ones_diff_cols), _if_then_else(False, zeros_diff_cols, 2)), and_(ge(zeros_diff_rows, compare_blocks_rows), and_(False, True)))), le(_if_then_else(and_(and_(False, True), ge(0, zeros_diff_rows)), max_col_clue, zeros_diff_cols), zeros_diff_cols))
ge(_if_then_else(le(max_col_clue, 3), 1, ones_diff_cols), _if_then_else(or_(le(_if_then_else(True, -84, compare_blocks_cols), _if_then_else(False, ones_diff_cols, ones_diff_rows)), and_(and_(True, False), ge(3, ones_diff_rows))), zeros_diff_cols, ones_diff_rows))
VAL TREES:
add(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols))
add(add(add(ones_diff_cols, add(74, mul(zeros_diff_rows, ones_diff_cols))), compare_blocks_rows), mul(mul(ones_diff_rows, ones_diff_cols), add(add(compare_blocks_rows, ones_diff_cols), -65)))
add(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_rows, mul(add(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_rows, ones_diff_cols)), mul(mul(48, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)))))
mul(mul(add(zeros_diff_rows, compare_blocks_cols), add(add(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_cols, compare_blocks_rows))), add(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_cols)))
add(mul(zeros_diff_cols, -71), add(add(add(mul(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -47))), add(mul(mul(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)))), mul(compare_blocks_rows, add(compare_blocks_rows, zeros_diff_rows))))
mul(mul(mul(mul(zeros_diff_rows, -8), mul(compare_blocks_cols, compare_blocks_rows)), compare_blocks_cols), mul(ones_diff_cols, zeros_diff_rows))
COND TREES:
and_(and_(True, True), or_(ge(compare_blocks_cols, _if_then_else(True, -63, compare_blocks_cols)), ge(_if_then_else(False, max_row_clue, _if_then_else(ge(compare_blocks_cols, max_col_clue), _if_then_else(False, ones_diff_rows, 4), _if_then_else(True, ones_diff_cols, 1))), _if_then_else(ge(zeros_diff_cols, ones_diff_rows), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(True, 4, _if_then_else(le(_if_then_else(or_(le(zeros_diff_rows, compare_blocks_cols), or_(True, False)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(True, max_row_clue, max_row_clue)), _if_then_else(or_(True, True), _if_then_else(True, 3, max_row_clue), _if_then_else(True, 2, 3))), _if_then_else(ge(_if_then_else(True, 2, ones_diff_rows), _if_then_else(True, 28, max_row_clue)), _if_then_else(le(3, 2), _if_then_else(False, 0, compare_blocks_cols), _if_then_else(False, max_row_clue, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(False, 4, 4), _if_then_else(False, 2, zeros_diff_rows)))), _if_then_else(ge(_if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, 1, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, 4), _if_then_else(True, ones_diff_rows, 0))), _if_then_else(and_(or_(True, False), le(0, ones_diff_rows)), _if_then_else(ge(2, 2), _if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, compare_blocks_cols, max_col_clue)), _if_then_else(and_(True, False), _if_then_else(True, 4, max_row_clue), _if_then_else(False, max_row_clue, ones_diff_rows))), _if_then_else(and_(or_(False, True), le(-51, 4)), _if_then_else(and_(False, False), _if_then_else(True, ones_diff_rows, 4), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, True), _if_then_else(False, ones_diff_rows, compare_blocks_rows), _if_then_else(True, ones_diff_cols, 4)))), _if_then_else(ge(_if_then_else(ge(-98, 2), _if_then_else(False, 51, 51), _if_then_else(False, 3, zeros_diff_cols)), _if_then_else(le(compare_blocks_cols, zeros_diff_cols), _if_then_else(False, max_col_clue, 21), _if_then_else(True, compare_blocks_cols, -35))), _if_then_else(and_(le(-30, 4), le(compare_blocks_rows, zeros_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, 2, 1)), _if_then_else(and_(True, False), _if_then_else(False, 4, ones_diff_cols), _if_then_else(True, 43, 2))), _if_then_else(le(_if_then_else(True, 4, ones_diff_rows), _if_then_else(True, zeros_diff_cols, ones_diff_cols)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(True, 4, 0)), _if_then_else(le(3, zeros_diff_cols), _if_then_else(False, 3, ones_diff_cols), _if_then_else(True, max_row_clue, compare_blocks_rows))))))))))
ge(_if_then_else(or_(ge(compare_blocks_rows, 0), False), max_row_clue, 2), _if_then_else(ge(_if_then_else(or_(False, True), _if_then_else(True, max_col_clue, ones_diff_cols), ones_diff_rows), -52), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, max_row_clue, ones_diff_cols)))
ge(_if_then_else(True, zeros_diff_cols, 2), _if_then_else(or_(ge(compare_blocks_rows, compare_blocks_cols), True), _if_then_else(and_(or_(ge(87, 0), and_(False, False)), True), _if_then_else(False, zeros_diff_rows, 2), 3), -82))
ge(_if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, 1, 2)), compare_blocks_rows)
ge(_if_then_else(True, _if_then_else(ge(zeros_diff_cols, _if_then_else(le(zeros_diff_rows, compare_blocks_rows), compare_blocks_rows, _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, ones_diff_cols), 2))), _if_then_else(True, 0, max_row_clue), _if_then_else(False, 3, max_col_clue)), 1), _if_then_else(or_(True, True), max_col_clue, compare_blocks_rows))
VAL TREES:
mul(add(mul(add(add(zeros_diff_rows, 85), add(compare_blocks_cols, compare_blocks_cols)), add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(mul(10, -86), mul(-78, compare_blocks_cols)))), mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(54, zeros_diff_rows))), mul(mul(mul(ones_diff_cols, zeros_diff_rows), mul(-49, compare_blocks_rows)), mul(add(compare_blocks_rows, -24), add(ones_diff_rows, compare_blocks_cols)))))
mul(mul(ones_diff_cols, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, zeros_diff_rows), mul(mul(compare_blocks_rows, zeros_diff_cols), ones_diff_cols))
mul(add(add(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(add(ones_diff_rows, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_rows)))
mul(add(mul(mul(zeros_diff_rows, 88), mul(zeros_diff_cols, zeros_diff_cols)), add(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_cols))), mul(mul(add(ones_diff_cols, zeros_diff_rows), mul(1, ones_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, compare_blocks_cols))))
add(mul(mul(ones_diff_cols, -11), add(-15, 48)), mul(add(90, ones_diff_cols), add(zeros_diff_rows, 22)))
COND TREES:
or_(le(1, 4), True)
or_(le(max_col_clue, ones_diff_rows), or_(True, True))
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), _if_then_else(le(max_col_clue, 4), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, max_row_clue, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(False, _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(le(2, compare_blocks_rows), ge(4, compare_blocks_rows))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_row_clue))), False)
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
and_(or_(True, False), le(max_row_clue, ones_diff_cols))
ge(_if_then_else(False, zeros_diff_cols, max_row_clue), _if_then_else(le(max_col_clue, ones_diff_cols), 2, max_row_clue))
or_(le(_if_then_else(ge(ones_diff_rows, -85), _if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, -14), _if_then_else(True, 0, ones_diff_cols))), or_(and_(or_(False, True), or_(False, True)), and_(or_(False, False), and_(True, True))))
or_(ge(_if_then_else(le(_if_then_else(False, compare_blocks_rows, compare_blocks_cols), zeros_diff_cols), max_col_clue, ones_diff_cols), _if_then_else(ge(compare_blocks_cols, zeros_diff_rows), 3, max_col_clue)), ge(_if_then_else(False, ones_diff_cols, 0), ones_diff_rows))
or_(True, or_(le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))), True))
VAL TREES:
add(mul(ones_diff_cols, 52), mul(compare_blocks_cols, zeros_diff_rows))
add(add(add(add(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols))), add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols))))
add(mul(zeros_diff_cols, 30), add(zeros_diff_rows, ones_diff_rows))
add(mul(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols))
add(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows))
add(mul(add(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_rows)), mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, -54))), add(add(mul(zeros_diff_rows, zeros_diff_rows), mul(20, ones_diff_cols)), mul(mul(compare_blocks_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))), mul(add(add(mul(42, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, ones_diff_cols))), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows)))))
COND TREES:
ge(_if_then_else(le(_if_then_else(ge(1, 4), _if_then_else(False, max_row_clue, 2), _if_then_else(True, 1, max_col_clue)), _if_then_else(le(zeros_diff_rows, max_col_clue), _if_then_else(False, ones_diff_rows, 0), _if_then_else(False, 1, 2))), _if_then_else(le(_if_then_else(False, ones_diff_rows, 0), _if_then_else(True, zeros_diff_cols, zeros_diff_rows)), _if_then_else(or_(False, True), _if_then_else(True, 0, 95), _if_then_else(True, max_row_clue, 4)), _if_then_else(ge(zeros_diff_cols, compare_blocks_cols), _if_then_else(False, ones_diff_rows, 2), _if_then_else(False, 1, compare_blocks_rows))), _if_then_else(le(_if_then_else(False, ones_diff_rows, max_row_clue), _if_then_else(True, zeros_diff_cols, max_col_clue)), _if_then_else(or_(True, True), _if_then_else(False, max_row_clue, -14), _if_then_else(False, compare_blocks_cols, compare_blocks_rows)), _if_then_else(le(compare_blocks_cols, 2), _if_then_else(False, 61, ones_diff_cols), _if_then_else(True, 3, 3)))), _if_then_else(or_(le(_if_then_else(True, 3, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, 2)), or_(or_(False, True), le(1, ones_diff_rows))), _if_then_else(and_(le(max_row_clue, 3), or_(False, True)), _if_then_else(le(ones_diff_cols, 1), _if_then_else(True, ones_diff_rows, 3), _if_then_else(True, 1, zeros_diff_rows)), _if_then_else(le(zeros_diff_cols, -57), _if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(False, 63, compare_blocks_rows))), _if_then_else(and_(and_(False, False), ge(compare_blocks_cols, max_row_clue)), _if_then_else(ge(compare_blocks_cols, max_row_clue), _if_then_else(False, -23, ones_diff_cols), _if_then_else(False, 4, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, ones_diff_cols, compare_blocks_cols), _if_then_else(False, ones_diff_rows, 4)))))
ge(_if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, _if_then_else(le(compare_blocks_cols, _if_then_else(or_(True, True), compare_blocks_cols, 0)), zeros_diff_rows, max_col_clue), ones_diff_rows))
or_(and_(False, False), le(ones_diff_rows, compare_blocks_cols))
or_(True, and_(le(_if_then_else(False, zeros_diff_rows, 2), _if_then_else(True, max_col_clue, 2)), and_(ge(2, 0), and_(False, True))))
ge(_if_then_else(and_(or_(False, and_(True, True)), and_(False, False)), 2, _if_then_else(False, _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, 0, compare_blocks_rows))), _if_then_else(ge(_if_then_else(True, 0, 4), _if_then_else(False, 0, 2)), _if_then_else(and_(False, True), _if_then_else(True, 0, 1), _if_then_else(False, 1, 0)), _if_then_else(ge(zeros_diff_cols, 2), _if_then_else(False, 3, max_row_clue), _if_then_else(False, 0, 1))))
VAL TREES:
mul(add(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))
add(add(98, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_cols))
add(add(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols))
mul(add(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_cols))
mul(mul(mul(ones_diff_rows, ones_diff_cols), add(compare_blocks_rows, ones_diff_rows)), mul(add(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)))
add(mul(mul(zeros_diff_cols, -60), mul(ones_diff_rows, compare_blocks_cols)), add(mul(50, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)))
COND TREES:
ge(_if_then_else(or_(ge(1, max_row_clue), le(4, zeros_diff_rows)), 79, -96), _if_then_else(True, max_row_clue, 3))
and_(le(compare_blocks_cols, 3), True)
or_(and_(ge(_if_then_else(ge(0, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 4, ones_diff_rows)), _if_then_else(False, compare_blocks_rows, 0)), and_(and_(and_(True, True), and_(False, True)), or_(ge(ones_diff_cols, ones_diff_cols), and_(False, True)))), ge(_if_then_else(or_(and_(True, False), and_(False, True)), _if_then_else(ge(4, max_row_clue), _if_then_else(True, 0, -14), _if_then_else(False, max_row_clue, 4)), _if_then_else(le(-27, ones_diff_rows), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(True, 2, max_col_clue))), _if_then_else(True, _if_then_else(or_(True, True), _if_then_else(False, 2, 4), _if_then_else(True, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, 2), _if_then_else(False, 0, 3)))))
or_(le(1, _if_then_else(ge(max_col_clue, 4), zeros_diff_cols, 2)), and_(True, ge(3, zeros_diff_rows)))
or_(False, and_(and_(False, False), True))
VAL TREES:
add(mul(compare_blocks_cols, zeros_diff_cols), mul(mul(83, ones_diff_cols), compare_blocks_cols))
mul(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows))
add(add(add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(38, ones_diff_rows))), add(mul(add(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), mul(mul(78, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_rows))))
add(add(mul(ones_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(add(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_cols, 17), mul(ones_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, ones_diff_rows), add(7, zeros_diff_cols)))
add(mul(mul(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(83, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows)))
COND TREES:
le(_if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, _if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(and_(False, ge(_if_then_else(True, max_col_clue, compare_blocks_rows), ones_diff_rows)), compare_blocks_rows, compare_blocks_cols)))
le(_if_then_else(or_(ge(0, zeros_diff_cols), True), ones_diff_rows, _if_then_else(True, _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(ge(14, compare_blocks_cols), _if_then_else(and_(True, False), _if_then_else(False, max_col_clue, 3), _if_then_else(True, zeros_diff_cols, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(True, 1, compare_blocks_cols))))), _if_then_else(False, zeros_diff_cols, max_col_clue))
le(_if_then_else(and_(and_(le(4, _if_then_else(False, 0, zeros_diff_cols)), or_(False, True)), and_(le(38, max_col_clue), or_(True, True))), _if_then_else(and_(ge(zeros_diff_cols, compare_blocks_cols), ge(compare_blocks_cols, 2)), _if_then_else(le(ones_diff_rows, 0), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(le(0, 3), _if_then_else(False, 3, ones_diff_cols), _if_then_else(False, compare_blocks_rows, max_row_clue))), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(ge(_if_then_else(and_(False, True), _if_then_else(False, 2, 1), _if_then_else(True, 3, max_col_clue)), _if_then_else(and_(True, False), _if_then_else(False, 1, 3), _if_then_else(False, ones_diff_cols, ones_diff_cols))), _if_then_else(or_(ge(-20, max_col_clue), le(_if_then_else(ge(max_row_clue, 2), _if_then_else(True, 3, 1), _if_then_else(True, max_col_clue, 0)), max_row_clue)), _if_then_else(le(compare_blocks_cols, 0), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(True, _if_then_else(False, _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows)), zeros_diff_cols), _if_then_else(False, ones_diff_rows, compare_blocks_rows))), _if_then_else(or_(ge(compare_blocks_cols, 0), or_(False, True)), _if_then_else(ge(compare_blocks_cols, 4), _if_then_else(False, 3, max_col_clue), _if_then_else(True, max_col_clue, 3)), _if_then_else(le(ones_diff_rows, max_col_clue), _if_then_else(False, -2, max_col_clue), _if_then_else(False, 4, ones_diff_rows)))))
and_(and_(le(_if_then_else(False, 3, 3), _if_then_else(True, 4, zeros_diff_rows)), False), ge(_if_then_else(ge(max_col_clue, 4), _if_then_else(False, ones_diff_rows, max_col_clue), _if_then_else(False, ones_diff_rows, max_col_clue)), _if_then_else(and_(False, True), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(False, 1, 4))))
and_(or_(True, le(2, _if_then_else(True, compare_blocks_cols, zeros_diff_cols))), True)
VAL TREES:
mul(mul(ones_diff_cols, add(add(mul(ones_diff_rows, compare_blocks_rows), ones_diff_rows), add(mul(add(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_rows, compare_blocks_cols))), add(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)), add(add(ones_diff_cols, -18), add(compare_blocks_rows, 33)))))), add(compare_blocks_cols, compare_blocks_cols))
add(add(compare_blocks_rows, zeros_diff_cols), mul(add(add(ones_diff_cols, -39), mul(ones_diff_cols, compare_blocks_cols)), add(add(-27, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_rows))))
mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 84)), mul(mul(mul(mul(mul(ones_diff_cols, zeros_diff_cols), mul(60, ones_diff_rows)), add(mul(compare_blocks_cols, 20), mul(zeros_diff_rows, ones_diff_cols))), add(mul(add(ones_diff_rows, -100), mul(ones_diff_rows, compare_blocks_cols)), mul(add(ones_diff_cols, ones_diff_rows), mul(ones_diff_cols, -67)))), add(compare_blocks_rows, zeros_diff_cols))), add(add(add(ones_diff_cols, -2), add(compare_blocks_cols, compare_blocks_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows))))
mul(add(compare_blocks_cols, zeros_diff_cols), add(add(zeros_diff_rows, compare_blocks_rows), mul(add(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, -62))))
mul(mul(mul(add(ones_diff_rows, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(add(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_rows))), add(mul(mul(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, 83)), add(mul(compare_blocks_rows, 31), mul(zeros_diff_cols, 4))))
add(mul(add(mul(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_rows)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_rows))), mul(mul(add(13, ones_diff_cols), add(add(add(mul(add(ones_diff_rows, compare_blocks_rows), mul(-55, ones_diff_cols)), mul(mul(compare_blocks_rows, ones_diff_rows), mul(-67, ones_diff_cols))), add(mul(mul(zeros_diff_cols, 19), add(compare_blocks_rows, compare_blocks_rows)), mul(mul(-69, zeros_diff_cols), add(ones_diff_rows, zeros_diff_cols)))), compare_blocks_rows)), add(mul(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_cols, ones_diff_rows))))
COND TREES:
or_(False, True)
or_(le(ones_diff_rows, 2), False)
ge(_if_then_else(False, _if_then_else(le(max_col_clue, 4), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, max_row_clue, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(False, _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(ge(_if_then_else(False, 4, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, zeros_diff_rows)), 3, max_col_clue)), ge(4, compare_blocks_rows))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, 4, zeros_diff_rows), ones_diff_rows)), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(or_(False, True), zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
or_(or_(or_(True, False), True), le(_if_then_else(False, compare_blocks_rows, _if_then_else(False, _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_cols, max_row_clue), _if_then_else(False, 4, 3)), max_row_clue)), 0))
le(_if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(ge(4, 4), _if_then_else(True, 3, max_col_clue), max_row_clue))
ge(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(or_(False, True), compare_blocks_cols, zeros_diff_rows))
or_(False, False)
and_(or_(or_(False, True), True), or_(True, and_(or_(True, True), True)))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
and_(and_(True, True), ge(max_row_clue, max_row_clue))
ge(_if_then_else(True, max_row_clue, max_row_clue), _if_then_else(True, _if_then_else(True, compare_blocks_cols, 4), compare_blocks_cols))
ge(_if_then_else(True, zeros_diff_cols, 2), _if_then_else(True, _if_then_else(False, _if_then_else(False, zeros_diff_rows, 2), _if_then_else(False, max_col_clue, ones_diff_cols)), 4))
ge(_if_then_else(ge(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, max_col_clue), compare_blocks_cols), _if_then_else(le(_if_then_else(False, _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, max_row_clue)), _if_then_else(False, zeros_diff_cols, 2)), max_col_clue, _if_then_else(False, max_row_clue, 4)))
ge(_if_then_else(False, -81, 1), _if_then_else(True, max_col_clue, 3))
VAL TREES:
mul(add(mul(add(add(zeros_diff_rows, 85), add(compare_blocks_cols, compare_blocks_cols)), add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(mul(10, -86), mul(-78, compare_blocks_cols)))), mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(54, zeros_diff_rows))), mul(mul(mul(ones_diff_cols, zeros_diff_rows), mul(-49, compare_blocks_rows)), mul(add(compare_blocks_rows, -24), add(ones_diff_rows, compare_blocks_cols)))))
mul(mul(ones_diff_cols, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, zeros_diff_rows), mul(mul(compare_blocks_rows, zeros_diff_cols), ones_diff_cols))
mul(add(add(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(add(ones_diff_rows, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_rows)))
mul(add(mul(mul(zeros_diff_rows, 88), mul(zeros_diff_cols, zeros_diff_cols)), add(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_cols))), mul(mul(add(ones_diff_cols, zeros_diff_rows), mul(1, ones_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, compare_blocks_cols))))
add(mul(mul(ones_diff_cols, -11), add(-15, 48)), mul(add(90, ones_diff_cols), add(zeros_diff_rows, 22)))
COND TREES:
or_(and_(and_(True, False), and_(False, True)), and_(le(ones_diff_cols, _if_then_else(and_(and_(ge(ones_diff_cols, zeros_diff_rows), ge(max_col_clue, compare_blocks_rows)), False), max_row_clue, 1)), False))
le(compare_blocks_cols, zeros_diff_rows)
and_(ge(1, 3), and_(True, le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), compare_blocks_cols)))
le(_if_then_else(ge(_if_then_else(ge(1, 3), compare_blocks_rows, 0), 1), 3, 1), _if_then_else(False, ones_diff_cols, zeros_diff_rows))
and_(True, False)
VAL TREES:
add(mul(add(mul(zeros_diff_rows, compare_blocks_rows), zeros_diff_rows), ones_diff_cols), mul(zeros_diff_rows, -35))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_rows))
add(mul(ones_diff_rows, ones_diff_cols), mul(-33, compare_blocks_rows))
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols))
add(add(compare_blocks_cols, zeros_diff_rows), add(42, zeros_diff_cols))
add(add(7, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows))
COND TREES:
ge(_if_then_else(False, max_col_clue, 0), _if_then_else(False, 2, ones_diff_rows))
and_(ge(_if_then_else(ge(0, zeros_diff_cols), zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 1, max_col_clue)), or_(or_(False, True), False))
and_(True, False)
ge(zeros_diff_rows, _if_then_else(False, _if_then_else(and_(False, False), 2, _if_then_else(le(_if_then_else(True, 0, -77), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), 3, compare_blocks_rows)), compare_blocks_rows, 4)), ones_diff_rows))
and_(False, True)
VAL TREES:
mul(mul(zeros_diff_cols, compare_blocks_cols), add(mul(zeros_diff_cols, add(compare_blocks_cols, zeros_diff_cols)), compare_blocks_cols))
mul(mul(add(add(ones_diff_rows, 13), compare_blocks_rows), add(compare_blocks_cols, mul(-28, ones_diff_rows))), add(ones_diff_cols, -82))
add(mul(zeros_diff_cols, add(zeros_diff_cols, compare_blocks_rows)), mul(compare_blocks_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_cols))
add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))
mul(add(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, -66))
COND TREES:
or_(le(zeros_diff_cols, zeros_diff_rows), le(compare_blocks_rows, _if_then_else(True, 1, max_col_clue)))
or_(le(max_col_clue, _if_then_else(True, _if_then_else(True, compare_blocks_cols, _if_then_else(False, 3, 2)), compare_blocks_cols)), ge(0, zeros_diff_cols))
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), _if_then_else(False, max_row_clue, 4), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(ge(2, ones_diff_rows), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, 3, 3)), le(_if_then_else(True, 0, -77), _if_then_else(False, 3, compare_blocks_rows)))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
and_(and_(and_(True, True), True), ge(max_row_clue, _if_then_else(and_(True, True), _if_then_else(True, max_col_clue, max_row_clue), _if_then_else(True, 4, 3))))
ge(_if_then_else(False, max_row_clue, max_row_clue), _if_then_else(False, max_col_clue, 2))
ge(_if_then_else(True, zeros_diff_cols, 2), _if_then_else(True, _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_row_clue), _if_then_else(False, max_col_clue, compare_blocks_rows)), _if_then_else(le(ones_diff_rows, max_row_clue), _if_then_else(True, max_col_clue, 4), _if_then_else(True, zeros_diff_rows, max_col_clue))))
ge(_if_then_else(True, compare_blocks_cols, compare_blocks_cols), _if_then_else(le(1, _if_then_else(False, zeros_diff_cols, 2)), max_col_clue, zeros_diff_cols))
ge(_if_then_else(False, -81, 1), _if_then_else(True, max_col_clue, 3))
VAL TREES:
mul(add(mul(add(add(zeros_diff_rows, 85), add(compare_blocks_cols, compare_blocks_cols)), add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(mul(10, -86), mul(-78, compare_blocks_cols)))), mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(54, zeros_diff_rows))), mul(mul(mul(ones_diff_cols, zeros_diff_rows), mul(-49, compare_blocks_rows)), mul(add(compare_blocks_rows, -24), add(ones_diff_rows, compare_blocks_cols)))))
mul(mul(ones_diff_cols, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, zeros_diff_rows), mul(mul(compare_blocks_rows, zeros_diff_cols), ones_diff_cols))
mul(add(add(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(add(ones_diff_rows, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_rows)))
mul(add(mul(mul(zeros_diff_rows, 88), mul(zeros_diff_cols, zeros_diff_cols)), add(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_cols))), mul(mul(add(ones_diff_cols, zeros_diff_rows), mul(1, ones_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, compare_blocks_cols))))
add(mul(mul(ones_diff_cols, -11), add(-15, 48)), mul(add(90, ones_diff_cols), add(zeros_diff_rows, 22)))
COND TREES:
le(_if_then_else(and_(ge(_if_then_else(True, 1, 0), _if_then_else(True, max_row_clue, 4)), and_(ge(ones_diff_cols, max_row_clue), and_(False, False))), _if_then_else(le(_if_then_else(False, 1, compare_blocks_rows), _if_then_else(True, ones_diff_rows, zeros_diff_rows)), _if_then_else(le(zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_cols, -37), _if_then_else(True, zeros_diff_cols, zeros_diff_cols)), _if_then_else(le(compare_blocks_cols, ones_diff_cols), _if_then_else(False, -82, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, 4, 3), _if_then_else(True, compare_blocks_cols, ones_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, ones_diff_cols, max_col_clue)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, compare_blocks_cols), _if_then_else(False, _if_then_else(True, 2, max_row_clue), 4)))), _if_then_else(le(_if_then_else(ge(compare_blocks_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, 4), _if_then_else(False, 2, 0)), _if_then_else(le(ones_diff_cols, ones_diff_cols), _if_then_else(True, 2, 1), _if_then_else(False, -69, 1))), _if_then_else(or_(or_(True, False), ge(3, max_col_clue)), _if_then_else(le(max_row_clue, compare_blocks_rows), max_col_clue, _if_then_else(True, max_col_clue, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_cols, 2), _if_then_else(True, 3, 2))), _if_then_else(ge(_if_then_else(True, 0, compare_blocks_cols), _if_then_else(False, max_row_clue, max_row_clue)), _if_then_else(le(zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 2, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 0)), _if_then_else(and_(False, True), _if_then_else(True, 1, 4), _if_then_else(False, 0, 4)))))
or_(or_(True, True), le(_if_then_else(True, compare_blocks_rows, zeros_diff_cols), max_row_clue))
le(_if_then_else(False, 3, _if_then_else(False, ones_diff_rows, _if_then_else(True, 3, max_row_clue))), _if_then_else(or_(or_(True, False), ge(zeros_diff_cols, compare_blocks_cols)), compare_blocks_rows, zeros_diff_rows))
ge(_if_then_else(ge(_if_then_else(True, 0, zeros_diff_cols), _if_then_else(False, ones_diff_rows, max_col_clue)), _if_then_else(and_(False, True), _if_then_else(False, 4, compare_blocks_cols), compare_blocks_cols), max_col_clue), _if_then_else(or_(ge(3, compare_blocks_rows), and_(True, False)), _if_then_else(ge(ones_diff_rows, 1), _if_then_else(False, compare_blocks_cols, _if_then_else(and_(True, False), _if_then_else(False, 2, ones_diff_cols), _if_then_else(True, 3, compare_blocks_rows))), _if_then_else(False, compare_blocks_rows, 4)), _if_then_else(True, 0, ones_diff_cols)))
and_(and_(or_(False, True), or_(True, False)), True)
VAL TREES:
add(mul(mul(61, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, zeros_diff_cols), mul(ones_diff_cols, ones_diff_rows)))
add(add(zeros_diff_rows, ones_diff_cols), mul(zeros_diff_rows, mul(compare_blocks_rows, mul(compare_blocks_cols, compare_blocks_cols))))
add(add(compare_blocks_rows, mul(ones_diff_rows, zeros_diff_cols)), add(ones_diff_rows, add(compare_blocks_cols, zeros_diff_cols)))
mul(mul(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_rows))
add(mul(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_rows))
add(mul(-2, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols))
COND TREES:
and_(False, le(zeros_diff_rows, _if_then_else(True, 2, ones_diff_cols)))
ge(_if_then_else(le(ones_diff_cols, 2), _if_then_else(and_(False, le(zeros_diff_cols, 2)), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(le(-66, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, 4), _if_then_else(False, max_row_clue, 4))), _if_then_else(le(_if_then_else(True, max_row_clue, max_row_clue), _if_then_else(True, zeros_diff_rows, zeros_diff_cols)), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(le(compare_blocks_cols, 3), 4, _if_then_else(True, zeros_diff_cols, 0))))
le(ones_diff_cols, max_col_clue)
or_(ge(_if_then_else(le(ones_diff_cols, 1), _if_then_else(True, 50, ones_diff_cols), _if_then_else(True, zeros_diff_rows, -46)), _if_then_else(False, _if_then_else(True, _if_then_else(False, 4, ones_diff_cols), 3), _if_then_else(True, compare_blocks_cols, ones_diff_rows))), and_(or_(le(_if_then_else(False, compare_blocks_rows, compare_blocks_cols), zeros_diff_cols), ge(_if_then_else(and_(False, True), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, compare_blocks_cols)), 4)), or_(ge(4, zeros_diff_cols), ge(2, 2))))
or_(True, le(compare_blocks_cols, 2))
VAL TREES:
add(mul(mul(add(add(ones_diff_rows, -79), add(ones_diff_rows, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols))), mul(add(mul(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_cols)), mul(mul(-30, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)))), add(add(mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)), add(add(compare_blocks_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_rows))), mul(mul(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_cols)))))
add(mul(add(ones_diff_cols, ones_diff_rows), ones_diff_cols), add(ones_diff_cols, compare_blocks_cols))
add(mul(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, add(zeros_diff_rows, compare_blocks_rows)))
add(add(ones_diff_cols, add(compare_blocks_rows, compare_blocks_cols)), mul(zeros_diff_rows, add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(mul(ones_diff_rows, -100), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_cols))), mul(mul(mul(zeros_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_cols, compare_blocks_cols))))
add(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols))
COND TREES:
and_(False, True)
ge(_if_then_else(le(ones_diff_cols, 2), _if_then_else(and_(False, or_(True, True)), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(le(-66, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, 4), _if_then_else(False, max_row_clue, 4))), _if_then_else(le(_if_then_else(True, zeros_diff_cols, max_row_clue), _if_then_else(le(zeros_diff_cols, 4), zeros_diff_rows, _if_then_else(le(ones_diff_cols, 2), _if_then_else(and_(False, or_(True, True)), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(le(-66, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, 4), _if_then_else(False, max_row_clue, 4))))), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, max_col_clue, max_row_clue)), _if_then_else(le(compare_blocks_cols, 3), _if_then_else(True, compare_blocks_rows, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, 0))))
le(-24, _if_then_else(False, ones_diff_rows, compare_blocks_rows))
or_(ge(_if_then_else(le(ones_diff_cols, 1), _if_then_else(ge(max_col_clue, 4), 50, ones_diff_cols), _if_then_else(True, zeros_diff_rows, -46)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, ones_diff_rows, 3), _if_then_else(True, compare_blocks_cols, ones_diff_rows))), and_(or_(le(_if_then_else(False, 3, compare_blocks_cols), zeros_diff_cols), ge(max_col_clue, 4)), or_(ge(zeros_diff_rows, zeros_diff_cols), ge(2, 2))))
or_(True, False)
VAL TREES:
add(mul(mul(add(add(ones_diff_rows, -79), add(ones_diff_rows, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols))), mul(add(mul(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_cols)), mul(mul(-30, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)))), add(add(mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)), add(add(compare_blocks_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_rows))), mul(mul(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_cols)))))
add(mul(add(ones_diff_cols, ones_diff_rows), ones_diff_cols), add(ones_diff_cols, compare_blocks_cols))
add(mul(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, add(zeros_diff_rows, compare_blocks_rows)))
add(add(ones_diff_cols, add(compare_blocks_rows, compare_blocks_cols)), mul(zeros_diff_rows, add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(mul(ones_diff_rows, -100), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_cols))), mul(mul(mul(zeros_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_cols, compare_blocks_cols))))
add(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols))
COND TREES:
and_(False, True)
ge(zeros_diff_cols, _if_then_else(le(_if_then_else(True, zeros_diff_cols, max_row_clue), _if_then_else(le(zeros_diff_cols, 4), zeros_diff_rows, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, max_col_clue, max_row_clue)), _if_then_else(le(compare_blocks_cols, 3), _if_then_else(True, compare_blocks_rows, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, 0))))
le(-24, _if_then_else(False, ones_diff_rows, compare_blocks_rows))
or_(ge(_if_then_else(le(ones_diff_cols, 1), _if_then_else(True, 50, ones_diff_cols), _if_then_else(True, zeros_diff_rows, -46)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, ones_diff_rows, 3), _if_then_else(True, compare_blocks_cols, ones_diff_rows))), and_(or_(le(_if_then_else(False, 3, compare_blocks_cols), zeros_diff_cols), True), or_(ge(zeros_diff_rows, zeros_diff_cols), ge(2, 2))))
or_(True, False)
VAL TREES:
add(mul(mul(add(add(ones_diff_rows, -79), add(ones_diff_rows, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols))), mul(add(mul(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_cols)), mul(mul(-30, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)))), add(add(mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)), add(add(compare_blocks_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_rows))), mul(mul(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_cols)))))
add(mul(add(ones_diff_cols, ones_diff_rows), ones_diff_cols), add(ones_diff_cols, compare_blocks_cols))
add(mul(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, add(zeros_diff_rows, compare_blocks_rows)))
add(add(ones_diff_cols, add(compare_blocks_rows, compare_blocks_cols)), mul(zeros_diff_rows, add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(mul(ones_diff_rows, -100), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_cols))), mul(mul(mul(zeros_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_cols, compare_blocks_cols))))
add(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols))
COND TREES:
or_(or_(or_(le(_if_then_else(and_(or_(False, True), ge(3, 4)), _if_then_else(or_(False, True), _if_then_else(False, 3, 4), _if_then_else(True, zeros_diff_rows, ones_diff_rows)), _if_then_else(True, _if_then_else(True, 2, 0), _if_then_else(False, 3, 0))), _if_then_else(le(_if_then_else(True, 2, compare_blocks_rows), _if_then_else(False, zeros_diff_cols, max_col_clue)), _if_then_else(or_(False, True), _if_then_else(False, 0, max_col_clue), _if_then_else(True, _if_then_else(ge(_if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, max_row_clue, 2)), _if_then_else(le(28, 4), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(False, 3, 0)), _if_then_else(le(compare_blocks_cols, zeros_diff_cols), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, 4, -36))), 46)), _if_then_else(or_(False, True), _if_then_else(False, zeros_diff_cols, ones_diff_rows), _if_then_else(True, 51, zeros_diff_cols)))), False), le(ones_diff_cols, 0)), False)
le(_if_then_else(le(max_col_clue, ones_diff_cols), 2, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, ones_diff_cols))
ge(3, _if_then_else(True, 2, _if_then_else(or_(or_(and_(ge(max_col_clue, zeros_diff_cols), and_(True, True)), or_(and_(True, False), le(3, 1))), ge(_if_then_else(and_(True, True), _if_then_else(False, 0, max_row_clue), _if_then_else(True, 4, 1)), _if_then_else(and_(False, False), _if_then_else(True, 0, 0), _if_then_else(True, max_col_clue, max_row_clue)))), _if_then_else(le(_if_then_else(le(zeros_diff_rows, 4), _if_then_else(True, ones_diff_cols, 3), _if_then_else(True, 3, 3)), _if_then_else(le(max_row_clue, 68), _if_then_else(True, 4, ones_diff_rows), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(ge(_if_then_else(False, 13, 3), _if_then_else(True, 0, ones_diff_rows)), _if_then_else(ge(max_row_clue, 1), _if_then_else(True, 82, compare_blocks_rows), _if_then_else(True, 0, zeros_diff_rows)), _if_then_else(and_(True, False), _if_then_else(True, 1, compare_blocks_rows), _if_then_else(False, -30, 3))), _if_then_else(or_(le(zeros_diff_rows, _if_then_else(ge(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(False, 2, 3)), _if_then_else(or_(True, True), _if_then_else(False, 22, compare_blocks_rows), _if_then_else(False, 4, 2))), _if_then_else(le(_if_then_else(False, 1, compare_blocks_rows), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(False, 4, max_row_clue)), _if_then_else(ge(0, 57), _if_then_else(True, 1, 2), _if_then_else(False, 2, ones_diff_rows))), _if_then_else(le(_if_then_else(True, 1, zeros_diff_rows), _if_then_else(False, 1, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(True, max_row_clue, ones_diff_rows), _if_then_else(False, max_row_clue, zeros_diff_rows)), _if_then_else(or_(False, False), _if_then_else(False, max_col_clue, zeros_diff_cols), _if_then_else(False, 4, ones_diff_rows))))), and_(False, False)), _if_then_else(or_(False, True), _if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, zeros_diff_rows)), _if_then_else(le(zeros_diff_rows, -25), _if_then_else(True, compare_blocks_rows, 1), _if_then_else(False, 0, ones_diff_cols)))), _if_then_else(ge(_if_then_else(ge(max_row_clue, zeros_diff_cols), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, max_row_clue, max_row_clue)), _if_then_else(ge(max_row_clue, max_row_clue), _if_then_else(True, max_col_clue, 4), _if_then_else(False, compare_blocks_cols, zeros_diff_rows))), _if_then_else(and_(and_(True, False), or_(True, False)), _if_then_else(le(ones_diff_cols, 0), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, 3)), _if_then_else(le(0, zeros_diff_rows), _if_then_else(True, 4, -53), _if_then_else(True, ones_diff_rows, 4))), _if_then_else(or_(ge(ones_diff_rows, ones_diff_rows), le(compare_blocks_cols, 2)), _if_then_else(ge(2, 2), _if_then_else(False, 0, 1), _if_then_else(False, 81, 3)), _if_then_else(le(max_row_clue, 1), _if_then_else(True, max_col_clue, ones_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)))))))
or_(le(_if_then_else(le(3, 2), _if_then_else(True, ones_diff_rows, 0), _if_then_else(True, 2, compare_blocks_cols)), _if_then_else(le(zeros_diff_rows, 1), _if_then_else(or_(or_(True, False), or_(False, and_(True, True))), 60, compare_blocks_cols), _if_then_else(True, max_col_clue, ones_diff_cols))), and_(or_(True, False), ge(zeros_diff_cols, zeros_diff_rows)))
and_(le(_if_then_else(and_(False, le(3, max_col_clue)), _if_then_else(True, 92, 4), _if_then_else(False, zeros_diff_rows, ones_diff_rows)), _if_then_else(or_(le(_if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(False, zeros_diff_cols, 3)), le(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(False, ones_diff_rows, compare_blocks_rows))), zeros_diff_rows, max_col_clue)), le(4, compare_blocks_rows))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
or_(le(max_col_clue, zeros_diff_rows), True)
or_(le(max_col_clue, 2), ge(0, zeros_diff_cols))
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), _if_then_else(le(max_col_clue, 4), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, max_row_clue, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(False, _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(ge(compare_blocks_cols, zeros_diff_rows), 3, max_col_clue)), ge(4, compare_blocks_rows))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(or_(False, True), zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
ge(_if_then_else(le(4, zeros_diff_rows), 79, -96), _if_then_else(True, max_row_clue, 3))
and_(le(max_row_clue, 3), le(max_col_clue, ones_diff_cols))
or_(and_(ge(_if_then_else(ge(0, zeros_diff_rows), _if_then_else(ge(_if_then_else(True, compare_blocks_cols, _if_then_else(False, compare_blocks_cols, ones_diff_cols)), _if_then_else(and_(True, True), _if_then_else(True, 3, 3), _if_then_else(False, zeros_diff_rows, ones_diff_rows))), compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 4, ones_diff_rows)), _if_then_else(False, compare_blocks_rows, 0)), and_(and_(and_(True, True), and_(False, True)), or_(ge(ones_diff_cols, ones_diff_cols), and_(False, True)))), ge(_if_then_else(or_(and_(True, False), and_(False, True)), _if_then_else(ge(4, max_row_clue), _if_then_else(True, 0, -14), _if_then_else(False, max_row_clue, 4)), _if_then_else(le(-27, ones_diff_rows), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(True, 2, max_col_clue))), _if_then_else(True, _if_then_else(or_(True, True), _if_then_else(False, 2, 4), _if_then_else(True, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, 2), _if_then_else(False, 0, 3)))))
or_(le(1, _if_then_else(ge(max_col_clue, 4), zeros_diff_cols, 2)), le(2, ones_diff_cols))
or_(False, True)
VAL TREES:
add(mul(compare_blocks_cols, zeros_diff_cols), mul(mul(83, ones_diff_cols), compare_blocks_cols))
mul(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows))
add(add(add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(38, ones_diff_rows))), add(mul(add(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), mul(mul(78, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_rows))))
add(add(mul(ones_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(add(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_cols, 17), mul(ones_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, ones_diff_rows), add(7, zeros_diff_cols)))
add(mul(mul(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(83, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows)))
COND TREES:
and_(or_(ge(1, max_row_clue), or_(True, False)), le(max_row_clue, max_row_clue))
ge(24, _if_then_else(True, ones_diff_rows, compare_blocks_cols))
or_(False, or_(and_(or_(False, True), False), and_(or_(False, False), and_(True, True))))
or_(and_(True, ge(3, zeros_diff_rows)), ge(_if_then_else(False, compare_blocks_rows, 0), ones_diff_rows))
or_(and_(and_(False, True), True), or_(False, True))
VAL TREES:
add(mul(ones_diff_cols, 52), mul(compare_blocks_cols, zeros_diff_rows))
add(add(add(add(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols))), add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols))))
add(mul(zeros_diff_cols, 30), add(zeros_diff_rows, ones_diff_rows))
add(mul(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols))
add(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows))
add(mul(add(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_rows)), mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, -54))), add(add(mul(zeros_diff_rows, zeros_diff_rows), mul(20, ones_diff_cols)), mul(mul(compare_blocks_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))), mul(add(add(mul(42, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, ones_diff_cols))), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows)))))
COND TREES:
or_(le(max_col_clue, zeros_diff_rows), le(compare_blocks_rows, _if_then_else(True, 1, max_col_clue)))
or_(False, ge(0, zeros_diff_cols))
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), _if_then_else(le(max_col_clue, 4), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, max_row_clue, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(ge(2, ones_diff_rows), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(ge(compare_blocks_cols, max_col_clue), 2, compare_blocks_rows))))
and_(ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, 3, max_col_clue)), le(_if_then_else(True, 0, -77), _if_then_else(False, 3, compare_blocks_rows)))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
or_(le(max_col_clue, zeros_diff_rows), le(compare_blocks_rows, _if_then_else(True, 1, 4)))
or_(ge(_if_then_else(False, 3, -61), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)), and_(ge(ones_diff_rows, zeros_diff_cols), or_(False, False)))
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), _if_then_else(False, max_row_clue, 4), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(and_(or_(True, ge(max_col_clue, 4)), or_(False, True)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(False, _if_then_else(False, ones_diff_rows, _if_then_else(True, 3, max_row_clue)), 2)), _if_then_else(ge(2, ones_diff_rows), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(False, _if_then_else(False, 3, 3), ones_diff_cols), _if_then_else(False, 3, _if_then_else(le(zeros_diff_cols, 3), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 25)))), le(_if_then_else(True, 0, -77), _if_then_else(False, 3, compare_blocks_rows)))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), max_row_clue), _if_then_else(and_(False, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(False, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
or_(le(3, zeros_diff_rows), and_(True, True))
or_(le(max_col_clue, _if_then_else(False, max_col_clue, 2)), True)
ge(_if_then_else(or_(le(max_row_clue, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), compare_blocks_cols, _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(ge(2, ones_diff_rows), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(and_(False, False), 2, 4), _if_then_else(False, 3, 3)), le(_if_then_else(True, 0, -77), _if_then_else(False, 3, compare_blocks_rows)))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(False, True), zeros_diff_rows, _if_then_else(True, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
or_(or_(or_(True, False), True), le(max_col_clue, 0))
le(_if_then_else(ge(0, 1), compare_blocks_cols, compare_blocks_rows), _if_then_else(ge(max_col_clue, compare_blocks_rows), compare_blocks_cols, ones_diff_cols))
ge(_if_then_else(False, 2, ones_diff_cols), _if_then_else(le(_if_then_else(True, 3, zeros_diff_cols), 2), compare_blocks_cols, compare_blocks_cols))
or_(ge(_if_then_else(ge(1, compare_blocks_rows), _if_then_else(False, ones_diff_cols, 1), _if_then_else(False, ones_diff_cols, compare_blocks_cols)), zeros_diff_cols), and_(or_(True, False), ge(max_row_clue, max_col_clue)))
and_(or_(False, True), or_(True, True))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
and_(le(4, zeros_diff_rows), le(max_col_clue, max_row_clue))
ge(24, _if_then_else(True, ones_diff_rows, max_row_clue))
or_(le(_if_then_else(ge(ones_diff_rows, -85), _if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(and_(True, True), _if_then_else(True, 3, -14), _if_then_else(True, 0, ones_diff_cols))), or_(and_(or_(False, True), False), and_(or_(False, False), and_(True, True))))
or_(and_(True, ge(3, zeros_diff_rows)), ge(_if_then_else(ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, 3, max_col_clue)), ones_diff_cols, 0), ones_diff_rows))
or_(and_(True, True), or_(False, True))
VAL TREES:
add(mul(ones_diff_cols, 52), mul(compare_blocks_cols, zeros_diff_rows))
add(add(add(add(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols))), add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols))))
add(mul(zeros_diff_cols, 30), add(zeros_diff_rows, ones_diff_rows))
add(mul(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols))
add(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows))
add(mul(add(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_rows)), mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, -54))), add(add(mul(zeros_diff_rows, zeros_diff_rows), mul(20, ones_diff_cols)), mul(mul(compare_blocks_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))), mul(add(add(mul(42, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, ones_diff_cols))), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows)))))
COND TREES:
or_(le(max_row_clue, zeros_diff_rows), le(compare_blocks_rows, _if_then_else(True, 1, max_col_clue)))
or_(le(max_col_clue, 2), ge(0, zeros_diff_cols))
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), _if_then_else(le(max_col_clue, 4), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, max_row_clue, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(ge(2, ones_diff_rows), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(False, le(_if_then_else(True, 0, -77), _if_then_else(False, 3, compare_blocks_rows)))
or_(ge(_if_then_else(and_(True, False), _if_then_else(and_(False, True), max_row_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
ge(zeros_diff_cols, 1)
ge(_if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(and_(and_(le(_if_then_else(True, ones_diff_cols, 4), _if_then_else(False, zeros_diff_rows, 4)), ge(_if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(False, 4, ones_diff_cols))), and_(le(_if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows)), and_(ge(_if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(True, max_col_clue, _if_then_else(False, compare_blocks_rows, max_col_clue))), and_(False, True)))), zeros_diff_cols, zeros_diff_rows))
or_(ge(_if_then_else(True, compare_blocks_cols, _if_then_else(False, compare_blocks_cols, ones_diff_cols)), _if_then_else(and_(True, True), _if_then_else(True, 3, 3), _if_then_else(True, zeros_diff_rows, ones_diff_rows))), True)
le(_if_then_else(or_(le(_if_then_else(False, compare_blocks_rows, compare_blocks_cols), zeros_diff_cols), ge(max_col_clue, 4)), ones_diff_cols, ones_diff_rows), _if_then_else(or_(le(zeros_diff_rows, compare_blocks_cols), and_(True, True)), _if_then_else(False, -42, zeros_diff_cols), 2))
le(_if_then_else(False, max_row_clue, max_row_clue), _if_then_else(False, ones_diff_rows, _if_then_else(True, max_row_clue, 2)))
VAL TREES:
add(mul(ones_diff_rows, zeros_diff_rows), add(-49, zeros_diff_rows))
add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, -94))
mul(mul(zeros_diff_rows, ones_diff_cols), mul(mul(add(61, ones_diff_cols), zeros_diff_cols), ones_diff_rows))
add(mul(zeros_diff_cols, mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), 67))
mul(add(zeros_diff_rows, -21), add(zeros_diff_rows, zeros_diff_cols))
add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols))
COND TREES:
ge(zeros_diff_cols, _if_then_else(and_(True, False), max_row_clue, _if_then_else(False, _if_then_else(False, 20, 2), 1)))
ge(2, 57)
or_(True, True)
le(_if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(le(zeros_diff_rows, _if_then_else(False, 4, compare_blocks_rows)), zeros_diff_rows, 2))
le(max_col_clue, _if_then_else(False, ones_diff_rows, -67))
VAL TREES:
add(mul(ones_diff_rows, zeros_diff_rows), add(-49, zeros_diff_rows))
add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, -94))
mul(mul(zeros_diff_rows, ones_diff_cols), mul(mul(add(61, ones_diff_cols), zeros_diff_cols), ones_diff_rows))
add(mul(zeros_diff_cols, mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), 67))
mul(add(zeros_diff_rows, -21), add(zeros_diff_rows, zeros_diff_cols))
add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols))
COND TREES:
ge(_if_then_else(ge(_if_then_else(False, zeros_diff_cols, 4), _if_then_else(True, zeros_diff_cols, 3)), _if_then_else(or_(False, False), _if_then_else(True, 3, 4), _if_then_else(True, 0, 0)), _if_then_else(or_(False, True), _if_then_else(False, 0, 1), _if_then_else(True, 0, 47))), _if_then_else(and_(or_(True, False), ge(1, 2)), _if_then_else(ge(max_row_clue, max_row_clue), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, 2, 1)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(False, max_row_clue, compare_blocks_rows))))
and_(le(max_col_clue, _if_then_else(ge(max_col_clue, compare_blocks_rows), max_col_clue, max_col_clue)), le(zeros_diff_rows, 0))
le(_if_then_else(True, zeros_diff_rows, 0), _if_then_else(False, ones_diff_rows, _if_then_else(le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), 3), 4, ones_diff_rows)))
le(_if_then_else(and_(and_(False, True), ge(compare_blocks_rows, zeros_diff_rows)), 40, zeros_diff_rows), _if_then_else(True, -11, _if_then_else(True, 6, _if_then_else(False, compare_blocks_cols, compare_blocks_cols))))
ge(_if_then_else(or_(True, True), _if_then_else(True, 3, -9), 1), _if_then_else(le(_if_then_else(False, ones_diff_cols, ones_diff_rows), compare_blocks_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, 3, 4)))
VAL TREES:
add(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows)), add(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_rows))), mul(mul(add(zeros_diff_cols, 6), add(-64, ones_diff_cols)), add(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_cols)))), add(mul(mul(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows)), mul(add(compare_blocks_rows, 36), mul(compare_blocks_rows, ones_diff_cols))), mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), add(add(40, compare_blocks_cols), add(compare_blocks_rows, ones_diff_rows)))))
add(mul(zeros_diff_rows, ones_diff_rows), mul(28, compare_blocks_rows))
mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))
mul(add(mul(23, -70), add(compare_blocks_rows, 93)), mul(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, ones_diff_cols)))
mul(add(add(mul(compare_blocks_rows, -50), add(zeros_diff_rows, zeros_diff_rows)), add(add(ones_diff_rows, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_cols))), add(add(add(zeros_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, 28)), add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows))))
mul(add(mul(add(zeros_diff_cols, zeros_diff_cols), mul(-78, 27)), mul(add(86, ones_diff_rows), mul(compare_blocks_rows, compare_blocks_rows))), mul(mul(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(10, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows))))
COND TREES:
and_(True, or_(ge(compare_blocks_cols, _if_then_else(True, -63, compare_blocks_cols)), ge(_if_then_else(False, max_row_clue, _if_then_else(ge(compare_blocks_cols, max_col_clue), _if_then_else(False, ones_diff_rows, 4), _if_then_else(True, ones_diff_cols, 1))), _if_then_else(ge(zeros_diff_cols, ones_diff_rows), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(True, 4, compare_blocks_rows)))))
ge(_if_then_else(True, _if_then_else(True, 0, compare_blocks_cols), zeros_diff_cols), _if_then_else(ge(_if_then_else(le(_if_then_else(False, 1, 4), _if_then_else(True, 2, zeros_diff_cols)), 2, zeros_diff_cols), _if_then_else(and_(le(0, 52), and_(True, True)), _if_then_else(ge(4, ones_diff_rows), _if_then_else(False, max_row_clue, compare_blocks_rows), 0), _if_then_else(True, zeros_diff_cols, _if_then_else(True, compare_blocks_rows, 2)))), _if_then_else(False, 4, -96), _if_then_else(ge(_if_then_else(False, compare_blocks_rows, 3), compare_blocks_rows), compare_blocks_rows, max_row_clue)))
le(_if_then_else(ge(_if_then_else(False, max_col_clue, 4), _if_then_else(le(compare_blocks_cols, 0), _if_then_else(le(zeros_diff_rows, ones_diff_rows), 4, zeros_diff_cols), 2)), ones_diff_cols, zeros_diff_cols), _if_then_else(True, max_row_clue, _if_then_else(ge(zeros_diff_cols, 37), _if_then_else(False, ones_diff_rows, _if_then_else(False, ones_diff_rows, -82)), _if_then_else(False, 2, 51))))
and_(or_(False, or_(le(_if_then_else(True, max_col_clue, ones_diff_cols), _if_then_else(False, zeros_diff_cols, 2)), and_(ge(zeros_diff_rows, 0), and_(False, True)))), le(compare_blocks_rows, zeros_diff_cols))
ge(_if_then_else(le(max_col_clue, compare_blocks_rows), 1, ones_diff_cols), _if_then_else(or_(le(_if_then_else(True, -84, compare_blocks_cols), 3), and_(and_(True, False), ge(3, ones_diff_rows))), zeros_diff_cols, ones_diff_rows))
VAL TREES:
add(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols))
add(add(add(ones_diff_cols, add(74, mul(zeros_diff_rows, ones_diff_cols))), compare_blocks_rows), mul(mul(ones_diff_rows, ones_diff_cols), add(add(compare_blocks_rows, ones_diff_cols), -65)))
add(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_rows, mul(add(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_rows, ones_diff_cols)), mul(mul(48, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)))))
mul(mul(add(zeros_diff_rows, compare_blocks_cols), add(add(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_cols, compare_blocks_rows))), add(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_cols)))
add(mul(zeros_diff_cols, -71), add(add(add(mul(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -47))), add(mul(mul(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)))), mul(compare_blocks_rows, add(compare_blocks_rows, zeros_diff_rows))))
mul(mul(mul(mul(zeros_diff_rows, -8), mul(compare_blocks_cols, compare_blocks_rows)), compare_blocks_cols), mul(ones_diff_cols, zeros_diff_rows))
COND TREES:
or_(or_(True, ge(max_col_clue, 2)), False)
and_(le(zeros_diff_cols, 4), True)
or_(or_(False, False), le(_if_then_else(and_(or_(True, True), False), max_col_clue, _if_then_else(True, ones_diff_rows, 1)), _if_then_else(False, -24, -58)))
and_(le(_if_then_else(False, 4, _if_then_else(False, ones_diff_rows, 3)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(False, 4, ones_diff_cols), _if_then_else(True, 1, 1))), and_(or_(False, or_(ge(max_col_clue, 4), True)), or_(and_(True, True), and_(True, False))))
le(_if_then_else(or_(False, False), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(True, 3, 4)), _if_then_else(and_(True, and_(True, False)), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(True, 53, zeros_diff_rows)))
VAL TREES:
mul(mul(add(mul(-51, compare_blocks_cols), add(ones_diff_cols, 58)), mul(mul(zeros_diff_rows, zeros_diff_rows), add(compare_blocks_cols, 19))), mul(add(add(69, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(-83, 36), add(-91, zeros_diff_cols))))
mul(mul(mul(-86, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)))
add(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols))
mul(add(mul(ones_diff_cols, -1), ones_diff_cols), add(add(compare_blocks_cols, ones_diff_rows), zeros_diff_cols))
add(mul(compare_blocks_cols, compare_blocks_cols), add(mul(ones_diff_rows, add(ones_diff_rows, zeros_diff_cols)), zeros_diff_cols))
add(mul(mul(zeros_diff_cols, zeros_diff_cols), compare_blocks_rows), mul(ones_diff_rows, add(zeros_diff_rows, zeros_diff_rows)))
COND TREES:
or_(and_(and_(False, False), and_(False, True)), and_(False, le(ones_diff_cols, compare_blocks_cols)))
le(_if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(and_(False, False), 1, zeros_diff_cols))
and_(ge(ones_diff_cols, 2), and_(True, True))
le(_if_then_else(True, 3, _if_then_else(and_(True, le(_if_then_else(True, 0, -77), _if_then_else(or_(le(_if_then_else(False, 3, compare_blocks_cols), zeros_diff_cols), False), 3, compare_blocks_rows))), _if_then_else(False, zeros_diff_cols, max_row_clue), _if_then_else(True, 4, 3))), _if_then_else(True, ones_diff_cols, zeros_diff_rows))
and_(le(max_col_clue, 0), False)
VAL TREES:
add(mul(add(mul(zeros_diff_rows, compare_blocks_rows), zeros_diff_rows), ones_diff_cols), mul(zeros_diff_rows, -35))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(mul(mul(ones_diff_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), zeros_diff_rows))
add(add(add(-63, zeros_diff_cols), mul(49, 62)), mul(-33, compare_blocks_rows))
add(add(zeros_diff_rows, zeros_diff_cols), add(mul(add(compare_blocks_cols, 2), add(zeros_diff_cols, ones_diff_cols)), ones_diff_cols))
add(add(compare_blocks_cols, zeros_diff_rows), add(42, add(add(add(add(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, 24)), mul(mul(compare_blocks_cols, -41), add(compare_blocks_cols, compare_blocks_rows))), add(add(add(zeros_diff_cols, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), add(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols))))))
add(add(7, zeros_diff_rows), mul(mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)), ones_diff_rows))
COND TREES:
or_(True, le(4, 4))
le(0, _if_then_else(False, compare_blocks_cols, ones_diff_cols))
ge(_if_then_else(False, 70, ones_diff_cols), _if_then_else(False, max_col_clue, _if_then_else(True, 2, ones_diff_rows)))
or_(False, ge(4, zeros_diff_rows))
and_(or_(False, False), le(2, _if_then_else(or_(True, False), _if_then_else(False, max_row_clue, 3), _if_then_else(False, 0, max_col_clue))))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
or_(or_(or_(or_(or_(True, False), True), False), True), le(zeros_diff_rows, 0))
le(0, _if_then_else(False, compare_blocks_cols, compare_blocks_cols))
ge(_if_then_else(le(_if_then_else(False, max_row_clue, max_row_clue), compare_blocks_rows), max_row_clue, ones_diff_cols), _if_then_else(False, compare_blocks_cols, compare_blocks_cols))
or_(False, and_(or_(True, and_(or_(False, True), ge(max_row_clue, 2))), ge(ones_diff_cols, zeros_diff_cols)))
and_(or_(False, False), False)
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, add(mul(ones_diff_cols, ones_diff_cols), add(zeros_diff_cols, mul(add(add(ones_diff_rows, zeros_diff_cols), zeros_diff_cols), compare_blocks_cols)))))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_rows))), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(mul(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, mul(mul(mul(add(compare_blocks_rows, ones_diff_rows), mul(42, compare_blocks_cols)), mul(mul(42, compare_blocks_rows), mul(compare_blocks_cols, compare_blocks_rows))), add(mul(mul(-82, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), add(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows))))), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
or_(le(max_col_clue, 1), le(_if_then_else(or_(False, False), _if_then_else(False, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, zeros_diff_rows)), _if_then_else(ge(2, compare_blocks_cols), _if_then_else(False, max_col_clue, 3), _if_then_else(False, 1, zeros_diff_rows))))
or_(le(_if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, 0, zeros_diff_cols)), le(_if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, max_row_clue, ones_diff_rows)))
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), _if_then_else(False, max_row_clue, 4), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(ge(2, ones_diff_rows), _if_then_else(True, max_row_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(True, le(_if_then_else(True, 0, -77), _if_then_else(False, ones_diff_cols, compare_blocks_rows)))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(False, True), ones_diff_rows, _if_then_else(True, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), 3, _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
ge(_if_then_else(or_(False, or_(True, False)), 79, -96), _if_then_else(le(compare_blocks_rows, _if_then_else(False, 1, _if_then_else(le(zeros_diff_cols, _if_then_else(False, 4, max_col_clue)), _if_then_else(False, _if_then_else(False, _if_then_else(or_(True, False), max_col_clue, max_row_clue), max_col_clue), _if_then_else(False, _if_then_else(True, 0, max_row_clue), 1)), _if_then_else(False, _if_then_else(True, max_row_clue, max_col_clue), ones_diff_rows)))), max_row_clue, 3))
and_(False, False)
or_(and_(ge(_if_then_else(ge(0, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 4, ones_diff_rows)), _if_then_else(False, compare_blocks_rows, 0)), or_(ge(_if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, compare_blocks_cols)), and_(and_(False, False), ge(zeros_diff_cols, max_col_clue)))), ge(_if_then_else(or_(and_(True, False), and_(False, True)), _if_then_else(ge(4, max_row_clue), _if_then_else(True, 0, -14), _if_then_else(False, max_row_clue, 4)), _if_then_else(le(-27, ones_diff_rows), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(True, 2, max_col_clue))), _if_then_else(and_(le(4, 1), or_(and_(ge(_if_then_else(and_(False, False), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(False, 2, 4)), _if_then_else(or_(True, True), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, 3, -9))), or_(or_(or_(False, True), le(2, 3)), and_(and_(True, True), and_(False, False)))), and_(and_(or_(le(4, 0), le(max_row_clue, 3)), le(_if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, 2, ones_diff_cols))), le(_if_then_else(or_(False, True), _if_then_else(True, zeros_diff_cols, -24), _if_then_else(True, ones_diff_cols, ones_diff_cols)), _if_then_else(ge(1, -34), _if_then_else(True, max_row_clue, 25), _if_then_else(False, ones_diff_rows, max_col_clue)))))), _if_then_else(or_(True, True), _if_then_else(False, 2, 4), _if_then_else(True, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, 2), _if_then_else(False, 0, 3)))))
or_(le(1, _if_then_else(True, _if_then_else(True, 0, max_col_clue), _if_then_else(and_(True, False), _if_then_else(ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(le(ones_diff_rows, 0), _if_then_else(False, max_col_clue, ones_diff_rows), _if_then_else(True, max_row_clue, ones_diff_cols))), 2, -91), _if_then_else(False, 1, 0)))), le(2, ones_diff_rows))
or_(True, ge(ones_diff_cols, _if_then_else(False, 4, zeros_diff_rows)))
VAL TREES:
add(mul(compare_blocks_cols, zeros_diff_cols), mul(mul(83, ones_diff_cols), compare_blocks_cols))
mul(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows))
add(add(add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(38, ones_diff_rows))), add(mul(add(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), mul(mul(78, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_rows))))
add(add(mul(ones_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(add(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_cols, 17), mul(ones_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, ones_diff_rows), add(7, zeros_diff_cols)))
add(mul(mul(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(83, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows)))
COND TREES:
ge(max_row_clue, _if_then_else(or_(True, True), _if_then_else(False, ones_diff_cols, max_col_clue), _if_then_else(or_(True, False), _if_then_else(ge(zeros_diff_cols, compare_blocks_cols), ones_diff_rows, _if_then_else(False, compare_blocks_rows, -74)), compare_blocks_cols)))
ge(_if_then_else(and_(and_(True, False), False), compare_blocks_rows, max_col_clue), _if_then_else(False, zeros_diff_cols, _if_then_else(le(_if_then_else(or_(True, True), _if_then_else(False, compare_blocks_cols, 3), zeros_diff_rows), 2), _if_then_else(False, 0, _if_then_else(False, _if_then_else(True, compare_blocks_rows, 0), 1)), _if_then_else(True, -58, ones_diff_cols))))
or_(or_(False, and_(and_(ge(_if_then_else(and_(ge(zeros_diff_cols, max_col_clue), or_(True, False)), _if_then_else(ge(ones_diff_cols, max_col_clue), _if_then_else(False, -11, ones_diff_cols), _if_then_else(True, ones_diff_cols, compare_blocks_cols)), _if_then_else(le(compare_blocks_cols, ones_diff_cols), _if_then_else(False, 3, max_col_clue), _if_then_else(False, 4, 1))), _if_then_else(le(_if_then_else(False, 3, compare_blocks_rows), _if_then_else(False, ones_diff_cols, zeros_diff_rows)), _if_then_else(le(1, 4), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(False, 3, max_col_clue), _if_then_else(True, zeros_diff_cols, zeros_diff_rows)))), and_(or_(le(_if_then_else(True, 3, compare_blocks_cols), _if_then_else(False, 2, -52)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(False, ones_diff_rows, ones_diff_cols))), ge(_if_then_else(ge(ones_diff_rows, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(ge(3, max_row_clue), _if_then_else(True, ones_diff_rows, max_col_clue), _if_then_else(True, 3, 0))))), False)), False)
le(_if_then_else(or_(False, and_(le(4, zeros_diff_rows), and_(True, False))), ones_diff_cols, _if_then_else(True, _if_then_else(True, _if_then_else(False, 1, ones_diff_rows), ones_diff_rows), 3)), _if_then_else(False, zeros_diff_rows, 2))
le(3, _if_then_else(ge(zeros_diff_rows, max_row_clue), _if_then_else(True, max_col_clue, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 3)))
VAL TREES:
add(mul(ones_diff_rows, zeros_diff_rows), add(-49, zeros_diff_rows))
add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, -94))
mul(mul(zeros_diff_rows, ones_diff_cols), mul(mul(add(61, ones_diff_cols), zeros_diff_cols), ones_diff_rows))
add(mul(zeros_diff_cols, mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), 67))
mul(add(zeros_diff_rows, -21), add(zeros_diff_rows, zeros_diff_cols))
add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols))
COND TREES:
or_(and_(False, True), ge(_if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(True, 3, 73)))
le(ones_diff_cols, _if_then_else(ge(_if_then_else(and_(le(_if_then_else(False, 1, zeros_diff_cols), _if_then_else(False, -82, ones_diff_rows)), and_(or_(True, False), and_(True, True))), _if_then_else(ge(_if_then_else(True, 1, -77), _if_then_else(False, zeros_diff_rows, 0)), _if_then_else(le(1, 1), _if_then_else(False, max_col_clue, 43), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, 1), _if_then_else(False, 2, 1))), _if_then_else(and_(le(12, ones_diff_cols), ge(1, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(False, zeros_diff_cols, 0), _if_then_else(True, max_row_clue, 0)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 3, ones_diff_cols)))), _if_then_else(and_(ge(_if_then_else(False, 4, 4), _if_then_else(True, 3, 2)), or_(le(zeros_diff_cols, 4), le(ones_diff_cols, ones_diff_cols))), _if_then_else(le(_if_then_else(True, 0, -61), _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), _if_then_else(ge(3, 0), _if_then_else(True, 3, max_col_clue), _if_then_else(True, 4, max_col_clue)), _if_then_else(ge(max_row_clue, 1), _if_then_else(True, ones_diff_rows, 4), _if_then_else(True, zeros_diff_cols, 2))), _if_then_else(ge(_if_then_else(True, 3, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(or_(False, False), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, ones_diff_cols)), _if_then_else(le(4, compare_blocks_rows), _if_then_else(True, ones_diff_rows, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, 2))))), compare_blocks_rows, ones_diff_cols))
ge(_if_then_else(False, max_row_clue, _if_then_else(False, _if_then_else(False, compare_blocks_rows, -70), _if_then_else(True, 3, ones_diff_rows))), _if_then_else(or_(False, and_(False, or_(or_(False, False), or_(le(25, ones_diff_cols), False)))), compare_blocks_cols, zeros_diff_rows))
or_(or_(ge(_if_then_else(False, 3, 0), _if_then_else(True, max_col_clue, 4)), ge(_if_then_else(False, 1, 2), _if_then_else(False, 0, ones_diff_rows))), or_(le(_if_then_else(True, max_col_clue, max_row_clue), _if_then_else(True, zeros_diff_rows, compare_blocks_rows)), and_(or_(False, True), and_(True, True))))
and_(or_(or_(False, True), True), or_(or_(ge(_if_then_else(ge(compare_blocks_rows, _if_then_else(False, -62, 2)), ones_diff_rows, -67), -32), True), True))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(add(-22, compare_blocks_rows), add(ones_diff_cols, compare_blocks_cols)))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), mul(add(add(mul(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), add(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, ones_diff_cols))), mul(add(add(-38, zeros_diff_cols), mul(-65, ones_diff_rows)), mul(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, zeros_diff_rows))))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(mul(mul(ones_diff_cols, 70), add(zeros_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_cols)))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_rows, 72))))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
or_(or_(or_(ge(ones_diff_rows, 0), False), True), and_(False, True))
le(_if_then_else(True, _if_then_else(ge(4, compare_blocks_rows), 94, ones_diff_cols), _if_then_else(and_(True, True), _if_then_else(True, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, 3))), _if_then_else(True, compare_blocks_cols, ones_diff_cols))
ge(_if_then_else(ge(_if_then_else(True, 46, compare_blocks_cols), compare_blocks_cols), max_row_clue, ones_diff_cols), _if_then_else(or_(False, True), compare_blocks_rows, zeros_diff_rows))
and_(and_(True, True), le(_if_then_else(False, zeros_diff_rows, 1), max_col_clue))
and_(or_(False, or_(True, True)), or_(True, False))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
or_(or_(or_(True, le(_if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(True, -6, 1))), True), or_(le(_if_then_else(True, max_row_clue, 1), _if_then_else(False, ones_diff_cols, max_row_clue)), and_(le(ones_diff_rows, 2), and_(le(_if_then_else(or_(True, False), _if_then_else(False, 2, 2), _if_then_else(True, compare_blocks_rows, max_col_clue)), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(False, 2, 3), _if_then_else(True, 1, zeros_diff_rows))), and_(or_(le(max_col_clue, max_col_clue), ge(compare_blocks_rows, compare_blocks_cols)), or_(or_(True, True), le(2, compare_blocks_rows)))))))
le(_if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(or_(and_(ge(_if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), le(_if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, 4, compare_blocks_rows))), and_(False, False)), compare_blocks_cols, ones_diff_cols))
ge(_if_then_else(or_(le(_if_then_else(or_(False, False), max_row_clue, 70), _if_then_else(and_(and_(True, False), True), _if_then_else(True, max_col_clue, 4), _if_then_else(False, max_row_clue, max_row_clue))), False), max_row_clue, ones_diff_cols), _if_then_else(True, max_row_clue, compare_blocks_cols))
or_(le(zeros_diff_cols, -26), and_(or_(True, le(_if_then_else(True, 0, -77), _if_then_else(False, 3, zeros_diff_rows))), or_(or_(ge(_if_then_else(ge(max_col_clue, zeros_diff_cols), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, 3)), _if_then_else(and_(False, True), _if_then_else(True, compare_blocks_cols, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows))), ge(_if_then_else(ge(zeros_diff_rows, zeros_diff_rows), _if_then_else(True, max_col_clue, 1), _if_then_else(False, ones_diff_rows, zeros_diff_rows)), _if_then_else(le(-20, compare_blocks_cols), _if_then_else(False, 1, compare_blocks_cols), _if_then_else(False, 4, 3)))), or_(ge(_if_then_else(le(ones_diff_rows, 0), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, -96, 1)), _if_then_else(or_(False, False), _if_then_else(True, 0, 3), _if_then_else(True, ones_diff_cols, -64))), le(_if_then_else(ge(_if_then_else(False, 4, max_col_clue), _if_then_else(True, ones_diff_cols, -100)), _if_then_else(False, max_row_clue, 3), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_cols, 72), _if_then_else(True, compare_blocks_rows, 4)))))))
and_(le(1, _if_then_else(False, zeros_diff_rows, max_col_clue)), or_(True, or_(True, False)))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
or_(or_(True, ge(_if_then_else(ge(1, max_row_clue), compare_blocks_cols, compare_blocks_rows), compare_blocks_cols)), or_(and_(False, False), and_(True, False)))
and_(le(zeros_diff_cols, compare_blocks_cols), True)
or_(or_(False, False), le(1, compare_blocks_rows))
and_(le(_if_then_else(False, _if_then_else(True, ones_diff_rows, 26), _if_then_else(False, ones_diff_rows, 3)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(True, 1, 1))), and_(or_(le(zeros_diff_cols, compare_blocks_rows), or_(False, True)), or_(le(_if_then_else(False, -42, zeros_diff_cols), _if_then_else(False, 4, compare_blocks_rows)), and_(True, False))))
le(_if_then_else(or_(False, False), _if_then_else(True, 1, ones_diff_cols), _if_then_else(True, 3, 4)), _if_then_else(False, _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(True, 53, zeros_diff_rows)))
VAL TREES:
mul(mul(add(mul(-51, compare_blocks_cols), add(ones_diff_cols, 58)), mul(mul(zeros_diff_rows, zeros_diff_rows), add(compare_blocks_cols, 19))), mul(add(add(69, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(-83, 36), add(-91, zeros_diff_cols))))
mul(mul(mul(-86, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)))
add(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols))
mul(add(mul(ones_diff_cols, -1), ones_diff_cols), add(add(compare_blocks_cols, ones_diff_rows), zeros_diff_cols))
add(mul(compare_blocks_cols, compare_blocks_cols), add(mul(ones_diff_rows, add(ones_diff_rows, zeros_diff_cols)), zeros_diff_cols))
add(mul(mul(zeros_diff_cols, zeros_diff_cols), compare_blocks_rows), mul(ones_diff_rows, add(zeros_diff_rows, zeros_diff_rows)))
COND TREES:
or_(and_(and_(True, False), and_(False, True)), and_(le(ones_diff_cols, _if_then_else(and_(and_(ge(ones_diff_cols, zeros_diff_rows), ge(max_col_clue, 0)), False), max_row_clue, compare_blocks_cols)), False))
le(4, 4)
and_(ge(_if_then_else(and_(or_(True, True), False), max_col_clue, _if_then_else(True, ones_diff_rows, ones_diff_cols)), 3), and_(True, le(_if_then_else(False, zeros_diff_rows, 0), compare_blocks_cols)))
le(_if_then_else(ge(_if_then_else(le(0, 2), compare_blocks_rows, 0), 1), 3, 1), _if_then_else(False, ones_diff_cols, zeros_diff_rows))
and_(True, and_(True, False))
VAL TREES:
add(mul(add(mul(zeros_diff_rows, compare_blocks_rows), zeros_diff_rows), add(add(-36, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), mul(zeros_diff_rows, -35))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_rows))
add(mul(ones_diff_rows, ones_diff_cols), mul(add(mul(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), compare_blocks_rows))
add(add(zeros_diff_rows, zeros_diff_cols), add(add(add(93, mul(zeros_diff_rows, zeros_diff_rows)), ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols)))
add(add(compare_blocks_cols, zeros_diff_rows), add(42, zeros_diff_cols))
mul(mul(compare_blocks_rows, -23), mul(ones_diff_rows, zeros_diff_cols))
COND TREES:
ge(zeros_diff_cols, _if_then_else(False, _if_then_else(False, 20, 0), 1))
ge(_if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(and_(and_(le(_if_then_else(True, ones_diff_cols, 4), _if_then_else(False, zeros_diff_rows, 4)), ge(_if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(False, 4, ones_diff_cols))), and_(le(_if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows)), and_(ge(_if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(True, max_col_clue, 2)), and_(False, True)))), zeros_diff_cols, compare_blocks_cols))
or_(ge(_if_then_else(True, compare_blocks_cols, _if_then_else(False, compare_blocks_cols, ones_diff_cols)), _if_then_else(and_(True, True), _if_then_else(True, 3, 3), 1)), True)
le(-26, _if_then_else(or_(le(zeros_diff_rows, compare_blocks_cols), and_(True, True)), zeros_diff_rows, 2))
le(_if_then_else(False, max_row_clue, max_row_clue), _if_then_else(True, ones_diff_rows, _if_then_else(True, max_row_clue, 2)))
VAL TREES:
add(mul(ones_diff_rows, zeros_diff_rows), add(-49, zeros_diff_rows))
add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, -94))
mul(mul(zeros_diff_rows, ones_diff_cols), mul(mul(add(61, ones_diff_cols), zeros_diff_cols), ones_diff_rows))
add(mul(zeros_diff_cols, mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), 67))
mul(add(zeros_diff_rows, -21), add(zeros_diff_rows, zeros_diff_cols))
add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols))
COND TREES:
or_(or_(or_(True, True), True), le(compare_blocks_cols, 2))
le(_if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(ge(4, compare_blocks_rows), ones_diff_cols, ones_diff_cols))
ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, compare_blocks_cols, ones_diff_rows))
or_(le(zeros_diff_cols, _if_then_else(or_(le(_if_then_else(False, compare_blocks_rows, compare_blocks_cols), zeros_diff_cols), ge(max_col_clue, 4)), ones_diff_cols, ones_diff_rows)), and_(False, True))
and_(and_(or_(True, False), True), False)
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
and_(le(4, zeros_diff_rows), le(max_row_clue, ones_diff_cols))
ge(_if_then_else(False, zeros_diff_cols, max_row_clue), _if_then_else(True, ones_diff_rows, max_row_clue))
or_(le(_if_then_else(ge(ones_diff_rows, -85), _if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, -14), _if_then_else(True, 0, ones_diff_cols))), or_(and_(or_(False, True), or_(False, True)), and_(or_(False, False), and_(True, True))))
or_(and_(True, ge(3, zeros_diff_rows)), ge(_if_then_else(False, ones_diff_cols, 0), ones_diff_rows))
or_(and_(and_(False, False), True), or_(False, True))
VAL TREES:
add(mul(ones_diff_cols, 52), mul(compare_blocks_cols, zeros_diff_rows))
add(add(add(add(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols))), add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols))))
add(mul(zeros_diff_cols, 30), add(zeros_diff_rows, ones_diff_rows))
add(mul(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols))
add(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows))
add(mul(add(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_rows)), mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, -54))), add(add(mul(zeros_diff_rows, zeros_diff_rows), mul(20, ones_diff_cols)), mul(mul(compare_blocks_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))), mul(add(add(mul(42, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, ones_diff_cols))), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows)))))
COND TREES:
ge(zeros_diff_cols, _if_then_else(and_(and_(ge(ones_diff_cols, zeros_diff_rows), ge(max_col_clue, compare_blocks_rows)), False), max_row_clue, 1))
ge(_if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(and_(and_(le(_if_then_else(True, ones_diff_cols, 4), _if_then_else(False, zeros_diff_rows, 4)), ge(_if_then_else(or_(ge(_if_then_else(and_(True, False), _if_then_else(True, ones_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, max_row_clue, 2), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), and_(le(_if_then_else(True, zeros_diff_cols, 2), _if_then_else(False, ones_diff_rows, 3)), le(_if_then_else(True, 4, 83), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)))), max_row_clue, zeros_diff_cols), _if_then_else(False, _if_then_else(True, max_col_clue, compare_blocks_rows), ones_diff_cols))), and_(le(_if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows)), and_(and_(True, True), and_(False, True)))), zeros_diff_cols, compare_blocks_cols))
or_(ge(1, _if_then_else(and_(True, True), _if_then_else(True, 3, 3), _if_then_else(False, zeros_diff_rows, ones_diff_rows))), True)
le(_if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(or_(le(zeros_diff_rows, compare_blocks_cols), ge(1, 3)), zeros_diff_rows, _if_then_else(or_(le(1, 0), True), _if_then_else(True, zeros_diff_cols, _if_then_else(False, ones_diff_rows, 3)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, ones_diff_rows), _if_then_else(True, 0, zeros_diff_cols)))))
and_(le(_if_then_else(True, ones_diff_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), and_(and_(False, True), and_(True, True)))
VAL TREES:
add(mul(ones_diff_rows, zeros_diff_rows), add(-49, zeros_diff_rows))
add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, -94))
mul(mul(zeros_diff_rows, ones_diff_cols), mul(mul(add(61, ones_diff_cols), zeros_diff_cols), ones_diff_rows))
add(mul(zeros_diff_cols, mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), 67))
mul(add(zeros_diff_rows, -21), add(zeros_diff_rows, zeros_diff_cols))
add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols))
COND TREES:
and_(le(4, zeros_diff_rows), le(max_row_clue, ones_diff_cols))
ge(2, _if_then_else(True, ones_diff_rows, max_row_clue))
or_(le(_if_then_else(ge(ones_diff_rows, -85), _if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, -14), _if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), 0, ones_diff_cols))), or_(and_(or_(False, True), or_(False, True)), and_(or_(False, False), and_(True, True))))
or_(and_(True, ge(3, zeros_diff_rows)), ge(_if_then_else(False, ones_diff_cols, _if_then_else(ge(compare_blocks_cols, zeros_diff_rows), 3, max_col_clue)), ones_diff_rows))
or_(and_(and_(False, or_(False, True)), True), or_(False, True))
VAL TREES:
add(mul(ones_diff_cols, mul(mul(mul(add(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_rows, 75)), mul(add(-67, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_cols))), add(add(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_rows)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_rows)))), mul(add(add(mul(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_rows, -55)), mul(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_cols))), add(add(add(compare_blocks_rows, compare_blocks_rows), mul(compare_blocks_rows, -32)), add(mul(ones_diff_rows, compare_blocks_cols), add(zeros_diff_rows, compare_blocks_cols)))))), mul(compare_blocks_cols, zeros_diff_rows))
add(add(add(add(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols))), add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols))))
add(mul(zeros_diff_cols, 30), add(zeros_diff_rows, ones_diff_rows))
add(mul(compare_blocks_rows, ones_diff_rows), mul(add(zeros_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_rows), -59)))
add(mul(add(add(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_cols, 21), mul(compare_blocks_rows, -61))), add(mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, ones_diff_cols)))), add(mul(add(mul(ones_diff_rows, -33), add(ones_diff_rows, compare_blocks_cols)), add(mul(zeros_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols))), mul(mul(add(zeros_diff_rows, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, compare_blocks_rows))))), mul(compare_blocks_rows, zeros_diff_rows))
add(mul(add(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_rows)), mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, -54))), add(add(mul(zeros_diff_rows, zeros_diff_rows), mul(20, ones_diff_cols)), mul(mul(compare_blocks_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))), mul(add(add(mul(42, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(mul(add(ones_diff_cols, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows)), ones_diff_rows), mul(ones_diff_rows, ones_diff_cols))), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows)))))
COND TREES:
or_(le(max_col_clue, zeros_diff_rows), True)
or_(le(max_col_clue, _if_then_else(False, zeros_diff_cols, max_row_clue)), ge(0, zeros_diff_cols))
ge(_if_then_else(True, _if_then_else(le(max_col_clue, 4), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, max_row_clue, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(False, _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(False, max_col_clue, ones_diff_cols), 0), ge(4, compare_blocks_rows))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
or_(or_(or_(le(_if_then_else(or_(and_(or_(True, False), le(2, ones_diff_rows)), le(_if_then_else(False, compare_blocks_rows, max_col_clue), _if_then_else(False, compare_blocks_rows, 3))), _if_then_else(and_(and_(True, False), and_(False, True)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, 3, -9), _if_then_else(True, 2, 4)), _if_then_else(ge(3, 2), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, -56, 3))), _if_then_else(ge(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 1, max_row_clue)), _if_then_else(and_(True, False), _if_then_else(True, 0, max_row_clue), _if_then_else(False, zeros_diff_cols, 2)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_cols, 4), _if_then_else(False, 3, compare_blocks_rows)))), _if_then_else(ge(_if_then_else(le(zeros_diff_rows, ones_diff_cols), _if_then_else(True, max_row_clue, 3), _if_then_else(False, 2, 4)), _if_then_else(le(0, 0), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(True, compare_blocks_cols, 0))), _if_then_else(ge(_if_then_else(False, compare_blocks_cols, 31), _if_then_else(True, 63, 40)), _if_then_else(ge(0, 2), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(False, 97, 3)), _if_then_else(ge(max_row_clue, 0), _if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(True, compare_blocks_rows, 2))), _if_then_else(and_(le(zeros_diff_rows, zeros_diff_cols), and_(False, True)), _if_then_else(ge(3, 1), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_cols, zeros_diff_cols)), _if_then_else(le(max_col_clue, 4), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, ones_diff_cols, max_row_clue))))), False), True), False)
le(_if_then_else(False, _if_then_else(le(zeros_diff_rows, ones_diff_cols), _if_then_else(False, 3, max_col_clue), _if_then_else(True, -55, ones_diff_cols)), compare_blocks_rows), _if_then_else(or_(or_(False, True), and_(False, False)), compare_blocks_cols, ones_diff_cols))
ge(_if_then_else(or_(le(_if_then_else(or_(False, False), max_row_clue, 70), 53), False), max_row_clue, ones_diff_cols), _if_then_else(or_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, ones_diff_cols, 59)))
or_(le(zeros_diff_cols, -26), and_(or_(True, le(_if_then_else(True, 0, _if_then_else(or_(ge(_if_then_else(ge(max_row_clue, 1), _if_then_else(False, compare_blocks_cols, 2), _if_then_else(False, 1, 2)), _if_then_else(or_(True, True), _if_then_else(True, 4, 2), _if_then_else(True, ones_diff_cols, 1))), and_(le(_if_then_else(False, -80, max_col_clue), _if_then_else(False, 44, max_row_clue)), or_(or_(False, True), and_(True, True)))), _if_then_else(le(_if_then_else(or_(False, True), _if_then_else(False, -53, 1), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(le(compare_blocks_cols, zeros_diff_cols), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(True, zeros_diff_rows, 4))), _if_then_else(ge(_if_then_else(True, zeros_diff_cols, 3), _if_then_else(True, zeros_diff_cols, compare_blocks_cols)), _if_then_else(ge(max_row_clue, max_row_clue), _if_then_else(True, 12, zeros_diff_cols), _if_then_else(True, ones_diff_rows, 1)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, 3, 0))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, 3, max_col_clue)), _if_then_else(or_(True, False), _if_then_else(True, 2, 3), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)), _if_then_else(le(0, 2), _if_then_else(False, max_col_clue, ones_diff_rows), _if_then_else(False, 2, 3)))), _if_then_else(ge(_if_then_else(or_(False, False), _if_then_else(False, 40, zeros_diff_cols), _if_then_else(False, 0, 1)), _if_then_else(le(ones_diff_rows, max_row_clue), _if_then_else(False, 2, max_row_clue), _if_then_else(True, max_col_clue, ones_diff_rows))), _if_then_else(or_(or_(False, False), ge(ones_diff_cols, zeros_diff_rows)), _if_then_else(ge(compare_blocks_cols, 0), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, ones_diff_rows, max_col_clue)), _if_then_else(le(compare_blocks_rows, 2), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(True, 4, max_row_clue))), _if_then_else(and_(or_(True, True), ge(compare_blocks_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, 0), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 1, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, 0, 0)))))), _if_then_else(False, 3, zeros_diff_rows))), le(0, zeros_diff_cols)))
and_(le(1, _if_then_else(False, _if_then_else(ge(ones_diff_rows, 2), _if_then_else(ge(4, _if_then_else(False, compare_blocks_cols, ones_diff_cols)), zeros_diff_rows, _if_then_else(or_(False, False), 3, 2)), _if_then_else(and_(True, ge(compare_blocks_rows, 2)), -50, 2)), max_col_clue)), or_(True, or_(True, False)))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
or_(or_(or_(True, True), True), False)
le(_if_then_else(True, 2, compare_blocks_rows), compare_blocks_rows)
ge(_if_then_else(or_(True, False), max_row_clue, ones_diff_cols), _if_then_else(True, _if_then_else(False, compare_blocks_cols, ones_diff_rows), compare_blocks_cols))
or_(le(zeros_diff_cols, -26), and_(False, le(0, 3)))
and_(le(1, _if_then_else(True, zeros_diff_rows, max_col_clue)), True)
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, mul(add(compare_blocks_rows, -56), mul(zeros_diff_cols, zeros_diff_rows))))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), add(add(-94, add(ones_diff_rows, add(zeros_diff_cols, zeros_diff_cols))), add(94, compare_blocks_rows))))
mul(add(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_rows))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(mul(add(mul(compare_blocks_rows, compare_blocks_rows), mul(8, zeros_diff_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_rows))), add(add(mul(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))))
COND TREES:
or_(or_(True, ge(max_row_clue, _if_then_else(ge(_if_then_else(False, max_col_clue, max_row_clue), compare_blocks_rows), _if_then_else(True, _if_then_else(True, max_col_clue, ones_diff_cols), _if_then_else(False, ones_diff_cols, -35)), _if_then_else(False, _if_then_else(and_(False, True), ones_diff_cols, 2), -47)))), or_(and_(False, True), False))
and_(or_(True, or_(or_(True, False), or_(True, False))), False)
or_(or_(False, False), le(_if_then_else(False, _if_then_else(False, ones_diff_rows, _if_then_else(True, _if_then_else(ge(ones_diff_cols, -18), _if_then_else(False, ones_diff_cols, zeros_diff_rows), _if_then_else(and_(True, True), _if_then_else(True, 30, 1), _if_then_else(False, 2, 1))), max_row_clue)), _if_then_else(True, ones_diff_rows, ones_diff_cols)), _if_then_else(False, -24, -58)))
and_(le(_if_then_else(False, _if_then_else(True, _if_then_else(ge(_if_then_else(False, _if_then_else(or_(False, True), _if_then_else(True, 0, max_col_clue), _if_then_else(False, 4, compare_blocks_rows)), _if_then_else(False, _if_then_else(False, zeros_diff_rows, 85), compare_blocks_cols)), compare_blocks_cols), _if_then_else(False, 4, _if_then_else(or_(True, or_(True, False)), zeros_diff_cols, 3)), _if_then_else(False, 90, ones_diff_rows)), 26), _if_then_else(False, ones_diff_rows, 3)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), 4, _if_then_else(True, 1, 1))), and_(or_(False, or_(False, True)), or_(and_(True, True), and_(True, False))))
le(_if_then_else(or_(False, False), _if_then_else(True, 0, max_col_clue), _if_then_else(True, 3, 4)), _if_then_else(False, _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(or_(or_(ge(zeros_diff_cols, ones_diff_cols), and_(True, True)), False), 53, zeros_diff_rows)))
VAL TREES:
mul(mul(add(mul(-51, compare_blocks_cols), add(ones_diff_cols, 58)), mul(mul(zeros_diff_rows, zeros_diff_rows), add(compare_blocks_cols, 19))), mul(add(add(69, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(-83, 36), add(-91, zeros_diff_cols))))
mul(mul(mul(-86, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)))
add(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols))
mul(add(mul(ones_diff_cols, -1), ones_diff_cols), add(add(compare_blocks_cols, ones_diff_rows), zeros_diff_cols))
add(mul(compare_blocks_cols, compare_blocks_cols), add(mul(ones_diff_rows, add(ones_diff_rows, zeros_diff_cols)), zeros_diff_cols))
add(mul(mul(zeros_diff_cols, zeros_diff_cols), compare_blocks_rows), mul(ones_diff_rows, add(zeros_diff_rows, zeros_diff_rows)))
COND TREES:
or_(or_(True, ge(max_col_clue, 2)), or_(and_(False, False), False))
and_(le(zeros_diff_cols, 2), le(_if_then_else(or_(True, False), _if_then_else(True, 3, compare_blocks_cols), _if_then_else(True, compare_blocks_cols, zeros_diff_rows)), _if_then_else(ge(3, 4), _if_then_else(False, 1, 3), _if_then_else(False, compare_blocks_cols, max_row_clue))))
or_(or_(False, False), le(_if_then_else(ge(ones_diff_rows, ones_diff_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(False, -24, -58)))
and_(le(_if_then_else(False, _if_then_else(True, ones_diff_rows, 26), _if_then_else(False, ones_diff_rows, 3)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(False, 4, ones_diff_cols), _if_then_else(True, 1, 1))), and_(or_(False, or_(False, True)), or_(and_(True, True), and_(True, False))))
le(_if_then_else(or_(False, False), _if_then_else(True, 0, max_col_clue), _if_then_else(True, 3, 4)), _if_then_else(or_(ge(_if_then_else(True, 0, -81), _if_then_else(True, zeros_diff_cols, 0)), or_(or_(True, True), or_(True, False))), _if_then_else(and_(or_(False, True), le(zeros_diff_cols, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_rows, 2), _if_then_else(True, max_col_clue, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(True, 0, compare_blocks_cols), _if_then_else(False, max_row_clue, compare_blocks_cols))), _if_then_else(or_(ge(3, zeros_diff_rows), ge(compare_blocks_rows, ones_diff_cols)), _if_then_else(and_(False, False), _if_then_else(True, 2, ones_diff_rows), _if_then_else(False, 4, zeros_diff_rows)), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_rows, 3), _if_then_else(False, 2, 0)))))
VAL TREES:
mul(mul(add(mul(-51, compare_blocks_cols), add(ones_diff_cols, 58)), mul(mul(zeros_diff_rows, zeros_diff_rows), add(compare_blocks_cols, 19))), mul(add(add(69, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(-83, 36), add(-91, zeros_diff_cols))))
mul(mul(mul(-86, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)))
add(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols))
mul(add(mul(ones_diff_cols, -1), ones_diff_cols), add(add(compare_blocks_cols, ones_diff_rows), zeros_diff_cols))
add(mul(compare_blocks_cols, compare_blocks_cols), add(mul(ones_diff_rows, add(ones_diff_rows, zeros_diff_cols)), zeros_diff_cols))
add(mul(mul(zeros_diff_cols, zeros_diff_cols), compare_blocks_rows), mul(ones_diff_rows, add(zeros_diff_rows, zeros_diff_rows)))
COND TREES:
or_(or_(or_(True, False), True), le(_if_then_else(or_(ge(_if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, ones_diff_cols, 4), _if_then_else(True, max_col_clue, zeros_diff_cols)), _if_then_else(ge(2, 4), _if_then_else(True, max_col_clue, 41), _if_then_else(True, ones_diff_cols, ones_diff_cols))), or_(le(_if_then_else(True, 1, max_row_clue), _if_then_else(True, 2, zeros_diff_rows)), or_(or_(False, False), or_(True, False)))), _if_then_else(or_(le(_if_then_else(False, 1, 2), _if_then_else(True, compare_blocks_rows, 4)), and_(ge(-15, compare_blocks_cols), or_(True, False))), _if_then_else(or_(and_(True, False), or_(True, True)), _if_then_else(ge(0, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 78), _if_then_else(True, 3, max_row_clue)), _if_then_else(and_(False, True), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(False, max_col_clue, compare_blocks_cols))), _if_then_else(or_(or_(False, True), ge(ones_diff_cols, max_row_clue)), _if_then_else(le(2, 0), _if_then_else(True, max_col_clue, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)), _if_then_else(and_(True, False), _if_then_else(True, compare_blocks_rows, 0), _if_then_else(True, ones_diff_cols, 2)))), _if_then_else(le(_if_then_else(ge(ones_diff_cols, compare_blocks_rows), _if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(True, zeros_diff_cols, ones_diff_cols)), _if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, 3, 1), _if_then_else(False, 2, ones_diff_cols))), _if_then_else(or_(ge(0, 4), or_(False, False)), _if_then_else(le(zeros_diff_rows, max_row_clue), _if_then_else(True, 3, max_row_clue), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(max_row_clue, 0), _if_then_else(True, 1, max_col_clue), _if_then_else(False, max_col_clue, zeros_diff_cols))), _if_then_else(and_(ge(38, compare_blocks_cols), le(ones_diff_cols, max_col_clue)), _if_then_else(or_(True, True), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(True, max_row_clue, ones_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, 1, ones_diff_rows), _if_then_else(True, 2, max_row_clue))))), 0))
le(_if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(True, _if_then_else(or_(True, False), _if_then_else(True, 4, ones_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), ones_diff_cols))
ge(_if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(or_(False, True), _if_then_else(le(compare_blocks_rows, 4), _if_then_else(True, 4, _if_then_else(True, 0, compare_blocks_rows)), _if_then_else(le(compare_blocks_rows, _if_then_else(True, 1, 4)), 3, -39)), zeros_diff_rows))
or_(and_(True, ge(3, zeros_diff_rows)), le(_if_then_else(False, max_row_clue, compare_blocks_rows), _if_then_else(True, _if_then_else(False, zeros_diff_rows, ones_diff_cols), max_col_clue)))
and_(False, and_(or_(True, False), and_(True, True)))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
and_(le(4, max_row_clue), le(max_row_clue, max_row_clue))
ge(24, _if_then_else(True, ones_diff_rows, compare_blocks_rows))
or_(le(_if_then_else(ge(ones_diff_rows, -85), _if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, -14), _if_then_else(True, 0, ones_diff_cols))), or_(and_(or_(False, True), False), and_(or_(False, False), and_(True, True))))
or_(False, ge(_if_then_else(False, ones_diff_cols, 0), ones_diff_rows))
or_(and_(and_(False, True), True), or_(True, True))
VAL TREES:
add(mul(ones_diff_cols, 52), mul(compare_blocks_cols, zeros_diff_rows))
add(add(add(add(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols))), add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols))))
add(mul(zeros_diff_cols, 30), add(zeros_diff_rows, ones_diff_rows))
add(mul(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols))
add(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows))
add(mul(add(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_rows)), mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, -54))), add(add(mul(zeros_diff_rows, zeros_diff_rows), mul(20, ones_diff_cols)), mul(mul(compare_blocks_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))), mul(add(add(mul(42, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, ones_diff_cols))), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows)))))
COND TREES:
or_(le(max_col_clue, 2), le(compare_blocks_rows, _if_then_else(and_(and_(True, False), and_(and_(and_(True, False), and_(False, True)), True)), 1, max_col_clue)))
or_(le(max_col_clue, 2), ge(_if_then_else(True, max_col_clue, compare_blocks_rows), zeros_diff_cols))
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), _if_then_else(le(max_col_clue, 4), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, max_row_clue, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, ones_diff_rows, 2)), _if_then_else(ge(2, ones_diff_rows), _if_then_else(ge(1, 2), max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(True, le(_if_then_else(True, 0, -77), _if_then_else(False, 3, compare_blocks_rows)))
or_(ge(_if_then_else(and_(True, False), max_col_clue, _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(ge(zeros_diff_cols, 2), _if_then_else(False, 3, max_row_clue), _if_then_else(False, 0, 1))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
ge(_if_then_else(le(_if_then_else(ge(1, 4), _if_then_else(False, max_row_clue, 2), _if_then_else(True, 1, max_col_clue)), _if_then_else(le(zeros_diff_rows, max_col_clue), _if_then_else(False, ones_diff_rows, 0), _if_then_else(False, 1, 2))), _if_then_else(le(_if_then_else(False, ones_diff_rows, 0), _if_then_else(True, zeros_diff_cols, zeros_diff_rows)), _if_then_else(or_(False, True), _if_then_else(True, 0, 95), _if_then_else(True, max_row_clue, 4)), _if_then_else(ge(zeros_diff_cols, compare_blocks_cols), _if_then_else(False, ones_diff_rows, 2), _if_then_else(False, 1, compare_blocks_rows))), _if_then_else(le(_if_then_else(False, ones_diff_rows, max_row_clue), _if_then_else(True, zeros_diff_cols, max_col_clue)), _if_then_else(or_(True, True), _if_then_else(False, max_row_clue, -14), _if_then_else(False, compare_blocks_cols, compare_blocks_rows)), _if_then_else(le(compare_blocks_cols, zeros_diff_rows), _if_then_else(False, 61, ones_diff_cols), _if_then_else(True, 3, 3)))), _if_then_else(or_(le(_if_then_else(True, 3, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, 2)), or_(or_(False, True), le(1, ones_diff_rows))), _if_then_else(and_(le(max_row_clue, 3), or_(False, True)), _if_then_else(le(ones_diff_cols, 1), _if_then_else(True, ones_diff_rows, 3), _if_then_else(True, 1, zeros_diff_rows)), _if_then_else(le(zeros_diff_cols, -57), _if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(False, 63, compare_blocks_rows))), _if_then_else(and_(and_(False, False), ge(compare_blocks_cols, max_row_clue)), _if_then_else(ge(compare_blocks_cols, max_row_clue), _if_then_else(False, -23, ones_diff_cols), _if_then_else(False, 4, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, ones_diff_cols, compare_blocks_cols), _if_then_else(False, ones_diff_rows, 4)))))
ge(_if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, _if_then_else(le(compare_blocks_cols, _if_then_else(or_(True, True), compare_blocks_cols, 0)), zeros_diff_rows, max_col_clue), ones_diff_rows))
or_(and_(False, False), le(4, compare_blocks_cols))
or_(ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, 3, max_col_clue)), and_(le(_if_then_else(False, zeros_diff_rows, 2), _if_then_else(True, max_col_clue, 2)), and_(ge(2, 0), and_(False, True))))
ge(_if_then_else(and_(or_(False, and_(True, True)), and_(False, False)), 2, _if_then_else(False, _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, 0, compare_blocks_rows))), _if_then_else(ge(_if_then_else(True, 0, 4), _if_then_else(False, 0, 2)), _if_then_else(and_(False, True), _if_then_else(True, 0, 1), _if_then_else(False, 1, 0)), _if_then_else(and_(False, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_row_clue))))
VAL TREES:
mul(add(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))
add(add(98, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_cols))
add(add(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols))
mul(add(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_cols))
mul(mul(mul(ones_diff_rows, ones_diff_cols), add(compare_blocks_rows, ones_diff_rows)), mul(add(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)))
add(mul(mul(zeros_diff_cols, -60), mul(ones_diff_rows, compare_blocks_cols)), add(mul(50, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)))
COND TREES:
ge(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(or_(and_(False, True), ge(-12, compare_blocks_rows)), _if_then_else(ge(3, max_row_clue), _if_then_else(True, 3, zeros_diff_rows), _if_then_else(True, 3, -20)), _if_then_else(le(2, 3), _if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(False, ones_diff_rows, ones_diff_cols))))
and_(ge(_if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 1, max_col_clue)), or_(or_(or_(False, False), True), or_(ge(_if_then_else(or_(False, True), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(False, 4, max_row_clue)), _if_then_else(ge(4, max_col_clue), _if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, 2, ones_diff_cols))), or_(or_(and_(True, True), and_(True, False)), le(_if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_cols))))))
and_(ge(_if_then_else(False, 1, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue)), ge(_if_then_else(True, 3, zeros_diff_rows), _if_then_else(True, 1, 0)))
ge(zeros_diff_rows, _if_then_else(False, _if_then_else(and_(False, False), 80, _if_then_else(False, compare_blocks_rows, 4)), 0))
and_(le(_if_then_else(False, max_col_clue, compare_blocks_cols), max_row_clue), or_(le(zeros_diff_rows, max_col_clue), and_(le(_if_then_else(False, 4, zeros_diff_rows), 1), le(-75, compare_blocks_rows))))
VAL TREES:
mul(mul(zeros_diff_cols, compare_blocks_cols), add(mul(zeros_diff_cols, add(compare_blocks_cols, zeros_diff_cols)), compare_blocks_cols))
mul(mul(add(add(ones_diff_rows, 13), compare_blocks_rows), add(compare_blocks_cols, mul(-28, ones_diff_rows))), add(ones_diff_cols, -82))
add(mul(zeros_diff_cols, add(zeros_diff_cols, compare_blocks_rows)), mul(compare_blocks_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_cols))
add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))
mul(add(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, -66))
COND TREES:
or_(or_(or_(True, False), True), le(_if_then_else(and_(or_(le(_if_then_else(True, ones_diff_rows, ones_diff_rows), _if_then_else(False, 1, 67)), ge(_if_then_else(False, 1, compare_blocks_rows), _if_then_else(True, 3, max_row_clue))), ge(_if_then_else(le(77, 0), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, 1, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_cols, max_col_clue)))), compare_blocks_rows, _if_then_else(False, 1, max_row_clue)), 0))
le(_if_then_else(le(_if_then_else(and_(True, False), _if_then_else(False, 4, _if_then_else(False, _if_then_else(False, compare_blocks_rows, -35), 3)), _if_then_else(and_(True, True), zeros_diff_rows, zeros_diff_cols)), _if_then_else(True, compare_blocks_rows, _if_then_else(and_(True, True), zeros_diff_cols, 4))), compare_blocks_cols, compare_blocks_rows), _if_then_else(le(max_col_clue, _if_then_else(False, max_col_clue, 2)), compare_blocks_cols, 1))
ge(_if_then_else(True, max_row_clue, ones_diff_cols), _if_then_else(le(_if_then_else(le(_if_then_else(False, max_col_clue, compare_blocks_cols), 1), max_row_clue, 70), 53), compare_blocks_cols, zeros_diff_rows))
and_(or_(True, or_(True, le(compare_blocks_cols, 2))), le(_if_then_else(ge(4, ones_diff_cols), _if_then_else(True, zeros_diff_rows, -37), _if_then_else(True, max_col_clue, 1)), 66))
and_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), max_row_clue), _if_then_else(and_(le(_if_then_else(le(_if_then_else(False, compare_blocks_rows, ones_diff_rows), _if_then_else(False, 2, 67)), _if_then_else(le(1, ones_diff_cols), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, max_row_clue, compare_blocks_rows)), _if_then_else(le(compare_blocks_rows, 1), _if_then_else(True, max_row_clue, 90), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(le(_if_then_else(False, compare_blocks_rows, 2), _if_then_else(True, -97, max_row_clue)), _if_then_else(ge(zeros_diff_cols, 0), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(False, 1, ones_diff_rows)), _if_then_else(ge(zeros_diff_rows, max_col_clue), _if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(False, 1, ones_diff_rows)))), ge(_if_then_else(ge(_if_then_else(False, ones_diff_cols, max_col_clue), _if_then_else(False, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(4, 2), _if_then_else(True, ones_diff_cols, 0), _if_then_else(False, 4, 0)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_cols, max_col_clue), _if_then_else(False, zeros_diff_rows, max_col_clue))), _if_then_else(and_(and_(False, True), and_(False, False)), _if_then_else(or_(False, True), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(True, ones_diff_rows, ones_diff_cols)), _if_then_else(ge(2, 4), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(True, 4, zeros_diff_rows))))), 3, _if_then_else(True, compare_blocks_cols, max_row_clue))), or_(True, True))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
and_(le(4, zeros_diff_rows), le(max_row_clue, max_row_clue))
ge(24, _if_then_else(True, ones_diff_rows, max_row_clue))
or_(le(_if_then_else(ge(ones_diff_rows, -85), _if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, -14), _if_then_else(True, 0, ones_diff_cols))), or_(and_(or_(False, True), False), and_(or_(False, False), and_(True, True))))
or_(and_(True, ge(3, zeros_diff_rows)), ge(_if_then_else(False, ones_diff_cols, 0), ones_diff_rows))
or_(and_(and_(False, True), True), or_(False, True))
VAL TREES:
add(add(add(add(add(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_cols, zeros_diff_rows))), mul(mul(mul(21, compare_blocks_rows), mul(83, compare_blocks_rows)), mul(add(ones_diff_rows, compare_blocks_rows), add(zeros_diff_rows, 24)))), mul(compare_blocks_cols, zeros_diff_rows))
add(add(add(add(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols))), add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols))))
add(mul(add(zeros_diff_cols, compare_blocks_cols), compare_blocks_rows), mul(mul(compare_blocks_cols, -89), zeros_diff_cols))
add(mul(mul(add(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows)), ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols))
add(add(zeros_diff_cols, compare_blocks_rows), mul(mul(mul(-29, ones_diff_rows), mul(-76, compare_blocks_rows)), zeros_diff_rows))
add(mul(add(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_rows)), mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, -54))), add(add(mul(zeros_diff_rows, zeros_diff_rows), mul(20, ones_diff_cols)), mul(mul(compare_blocks_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))), mul(add(add(mul(42, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, ones_diff_cols))), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_rows)), mul(mul(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_rows, add(mul(ones_diff_rows, ones_diff_rows), compare_blocks_cols))))))
COND TREES:
and_(or_(and_(True, False), or_(True, False)), ge(_if_then_else(True, max_col_clue, ones_diff_cols), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)))
and_(ge(_if_then_else(ge(0, zeros_diff_cols), zeros_diff_cols, zeros_diff_cols), _if_then_else(False, _if_then_else(or_(True, False), _if_then_else(True, 24, ones_diff_cols), _if_then_else(False, 4, compare_blocks_cols)), max_col_clue)), False)
ge(_if_then_else(False, 3, 1), _if_then_else(True, 3, 1))
ge(zeros_diff_rows, _if_then_else(False, _if_then_else(and_(False, False), 2, _if_then_else(le(_if_then_else(True, 0, -77), _if_then_else(False, _if_then_else(and_(True, True), _if_then_else(True, _if_then_else(True, 2, max_col_clue), compare_blocks_rows), _if_then_else(True, 0, 0)), compare_blocks_rows)), compare_blocks_rows, 4)), ones_diff_rows))
and_(le(_if_then_else(False, max_col_clue, max_col_clue), max_row_clue), or_(le(zeros_diff_cols, max_col_clue), False))
VAL TREES:
mul(mul(zeros_diff_cols, compare_blocks_cols), add(mul(add(mul(mul(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, 96)), mul(mul(compare_blocks_cols, -28), mul(zeros_diff_cols, 13))), add(mul(mul(ones_diff_cols, -96), mul(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_cols, zeros_diff_rows), add(-98, ones_diff_cols)))), compare_blocks_cols))
mul(mul(add(add(ones_diff_rows, 13), compare_blocks_rows), add(compare_blocks_cols, mul(add(add(ones_diff_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols))))), add(ones_diff_cols, -82))
add(mul(zeros_diff_cols, add(mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_cols, ones_diff_rows)), compare_blocks_rows)), mul(compare_blocks_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_rows), add(mul(mul(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_cols)), add(mul(ones_diff_rows, ones_diff_rows), add(ones_diff_cols, zeros_diff_cols))), mul(mul(mul(ones_diff_cols, zeros_diff_rows), add(-79, 44)), mul(add(-92, compare_blocks_rows), mul(75, compare_blocks_cols)))))
add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, mul(mul(mul(mul(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols))), mul(add(mul(ones_diff_rows, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, -85), add(zeros_diff_cols, compare_blocks_cols)))), mul(add(mul(add(-7, zeros_diff_rows), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(add(add(ones_diff_rows, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_cols)), add(mul(compare_blocks_cols, 91), mul(zeros_diff_cols, compare_blocks_rows)))))))
mul(add(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_rows))))
COND TREES:
ge(_if_then_else(or_(ge(_if_then_else(True, 1, max_col_clue), max_row_clue), and_(and_(and_(ge(3, 1), ge(zeros_diff_rows, ones_diff_rows)), ge(_if_then_else(True, 0, max_row_clue), _if_then_else(False, compare_blocks_cols, 1))), le(_if_then_else(and_(True, False), _if_then_else(False, 0, ones_diff_cols), _if_then_else(True, compare_blocks_rows, zeros_diff_rows)), _if_then_else(le(2, zeros_diff_cols), _if_then_else(False, max_row_clue, 4), _if_then_else(False, 4, max_col_clue))))), 79, -96), _if_then_else(True, ones_diff_cols, 3))
and_(le(compare_blocks_cols, 3), le(_if_then_else(True, _if_then_else(True, -30, 1), zeros_diff_cols), _if_then_else(False, _if_then_else(False, zeros_diff_cols, 2), compare_blocks_cols)))
or_(and_(ge(_if_then_else(ge(0, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 4, ones_diff_rows)), _if_then_else(False, compare_blocks_rows, 0)), and_(and_(and_(True, True), and_(False, True)), or_(ge(ones_diff_cols, ones_diff_cols), and_(False, True)))), ge(_if_then_else(or_(and_(True, False), and_(False, True)), _if_then_else(ge(4, max_row_clue), _if_then_else(ge(_if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, max_col_clue, compare_blocks_cols)), 0, -14), _if_then_else(False, max_row_clue, 4)), _if_then_else(le(-27, ones_diff_rows), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(True, 2, max_col_clue))), _if_then_else(True, _if_then_else(or_(True, True), _if_then_else(ge(ones_diff_cols, ones_diff_rows), _if_then_else(False, _if_then_else(False, max_row_clue, _if_then_else(False, 1, compare_blocks_cols)), 1), _if_then_else(ge(max_row_clue, ones_diff_rows), 1, 4)), _if_then_else(True, max_col_clue, zeros_diff_cols)), _if_then_else(le(zeros_diff_cols, 0), _if_then_else(True, max_col_clue, 2), _if_then_else(False, 0, 3)))))
or_(le(max_row_clue, _if_then_else(or_(or_(True, True), le(compare_blocks_cols, 3)), _if_then_else(and_(False, False), _if_then_else(True, 0, max_row_clue), _if_then_else(False, max_row_clue, max_row_clue)), _if_then_else(or_(False, True), _if_then_else(False, 2, max_col_clue), _if_then_else(False, zeros_diff_rows, 2)))), le(2, 2))
or_(True, True)
VAL TREES:
add(mul(compare_blocks_cols, zeros_diff_cols), mul(mul(83, ones_diff_cols), compare_blocks_cols))
mul(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows))
add(add(add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(38, ones_diff_rows))), add(mul(add(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), mul(mul(78, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_rows))))
add(add(mul(ones_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(add(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_cols, 17), mul(ones_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, ones_diff_rows), add(7, zeros_diff_cols)))
add(mul(mul(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(83, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows)))
COND TREES:
ge(zeros_diff_cols, _if_then_else(False, _if_then_else(False, max_col_clue, 21), _if_then_else(False, zeros_diff_rows, -64)))
ge(_if_then_else(False, max_row_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_cols, compare_blocks_cols))
or_(True, True)
le(_if_then_else(False, ones_diff_cols, _if_then_else(False, 1, zeros_diff_rows)), _if_then_else(le(_if_then_else(False, -42, zeros_diff_cols), compare_blocks_rows), zeros_diff_rows, compare_blocks_rows))
le(_if_then_else(and_(False, False), max_row_clue, max_row_clue), _if_then_else(True, ones_diff_rows, -67))
VAL TREES:
add(mul(ones_diff_rows, zeros_diff_rows), add(-49, zeros_diff_rows))
add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, -94))
mul(mul(zeros_diff_rows, ones_diff_cols), mul(mul(add(61, ones_diff_cols), zeros_diff_cols), ones_diff_rows))
add(mul(zeros_diff_cols, mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), 67))
mul(add(zeros_diff_rows, -21), add(zeros_diff_rows, zeros_diff_cols))
add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols))
COND TREES:
and_(True, or_(le(_if_then_else(False, max_row_clue, max_row_clue), compare_blocks_rows), False))
ge(_if_then_else(or_(True, True), max_col_clue, 0), _if_then_else(True, _if_then_else(or_(True, True), compare_blocks_rows, ones_diff_cols), compare_blocks_rows))
ge(_if_then_else(True, compare_blocks_rows, 0), -70)
or_(ge(_if_then_else(False, compare_blocks_rows, 0), ones_diff_rows), or_(False, False))
ge(_if_then_else(True, compare_blocks_cols, _if_then_else(True, _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(True, 0, _if_then_else(True, 2, compare_blocks_rows)))), _if_then_else(False, compare_blocks_rows, -95))
VAL TREES:
mul(add(ones_diff_cols, zeros_diff_rows), add(12, 54))
add(add(compare_blocks_cols, zeros_diff_rows), mul(compare_blocks_rows, -54))
add(mul(add(ones_diff_rows, compare_blocks_cols), 14), mul(zeros_diff_rows, mul(-8, add(-7, 73))))
mul(mul(ones_diff_rows, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows))
add(mul(add(mul(-56, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_cols)), mul(mul(compare_blocks_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))), add(mul(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_rows)), add(mul(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, 61))))
mul(add(mul(zeros_diff_cols, ones_diff_rows), add(compare_blocks_cols, -98)), add(add(zeros_diff_rows, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)))
COND TREES:
or_(and_(False, True), le(_if_then_else(False, compare_blocks_rows, 0), 0))
le(ones_diff_cols, _if_then_else(True, 2, zeros_diff_rows))
ge(_if_then_else(False, max_row_clue, _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, _if_then_else(True, compare_blocks_cols, -11)), _if_then_else(True, 3, ones_diff_rows))), _if_then_else(or_(False, and_(False, True)), compare_blocks_cols, zeros_diff_rows))
or_(True, False)
and_(or_(or_(False, le(2, compare_blocks_rows)), True), or_(or_(ge(2, -32), True), True))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), mul(add(-67, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, mul(mul(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, zeros_diff_rows)))), mul(add(add(mul(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), add(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, ones_diff_cols))), mul(add(add(-38, zeros_diff_cols), mul(-65, ones_diff_rows)), mul(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, zeros_diff_rows))))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(mul(mul(ones_diff_cols, mul(mul(add(zeros_diff_cols, zeros_diff_rows), 26), mul(55, zeros_diff_cols))), add(zeros_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_cols)))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_rows, 72))))
add(add(mul(ones_diff_cols, compare_blocks_rows), add(mul(ones_diff_rows, compare_blocks_rows), add(-66, zeros_diff_rows))), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(mul(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_rows, add(compare_blocks_rows, mul(compare_blocks_rows, zeros_diff_cols)))), zeros_diff_rows)))
COND TREES:
and_(le(4, _if_then_else(and_(ge(_if_then_else(False, 1, zeros_diff_rows), _if_then_else(True, 24, zeros_diff_rows)), or_(le(2, 3), or_(True, False))), _if_then_else(or_(ge(4, ones_diff_rows), or_(False, True)), _if_then_else(or_(True, False), _if_then_else(False, max_row_clue, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, max_row_clue, max_col_clue))), _if_then_else(ge(_if_then_else(True, compare_blocks_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, -32)), _if_then_else(or_(False, True), _if_then_else(False, zeros_diff_cols, 1), _if_then_else(True, ones_diff_rows, max_row_clue)), _if_then_else(le(max_row_clue, 3), _if_then_else(False, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 0, 4))))), le(max_row_clue, ones_diff_cols))
le(_if_then_else(False, max_col_clue, zeros_diff_cols), _if_then_else(False, max_row_clue, zeros_diff_rows))
or_(le(_if_then_else(ge(ones_diff_rows, -85), _if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(and_(True, False), _if_then_else(ge(_if_then_else(ge(_if_then_else(False, 3, 3), _if_then_else(False, ones_diff_rows, -2)), _if_then_else(and_(True, False), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(True, 2, ones_diff_rows)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, ones_diff_rows), _if_then_else(True, ones_diff_rows, max_col_clue))), _if_then_else(or_(and_(True, False), and_(True, False)), _if_then_else(or_(True, False), _if_then_else(False, -54, 2), _if_then_else(False, max_row_clue, 0)), _if_then_else(ge(2, 1), _if_then_else(False, ones_diff_rows, max_row_clue), _if_then_else(False, zeros_diff_cols, 6)))), zeros_diff_cols, -14), _if_then_else(True, 0, ones_diff_cols))), or_(and_(or_(False, True), or_(False, True)), and_(or_(False, False), and_(True, True))))
or_(and_(True, ge(3, ones_diff_cols)), ge(_if_then_else(False, ones_diff_cols, 0), _if_then_else(and_(False, True), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(True, 6, 0))))
or_(and_(and_(le(_if_then_else(ge(_if_then_else(and_(False, False), _if_then_else(False, -7, compare_blocks_rows), _if_then_else(False, 0, 2)), _if_then_else(and_(True, True), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(False, -70, max_row_clue))), _if_then_else(le(_if_then_else(True, 3, 2), _if_then_else(False, ones_diff_rows, 3)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, 0), _if_then_else(False, max_row_clue, max_col_clue)), _if_then_else(le(4, max_col_clue), _if_then_else(True, 1, 4), _if_then_else(True, zeros_diff_rows, 2))), _if_then_else(and_(or_(False, False), ge(compare_blocks_cols, 0)), _if_then_else(or_(False, True), _if_then_else(False, 3, 1), _if_then_else(False, compare_blocks_rows, 0)), _if_then_else(ge(1, 3), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, compare_blocks_cols, compare_blocks_rows)))), _if_then_else(le(_if_then_else(le(2, zeros_diff_rows), _if_then_else(False, max_row_clue, ones_diff_rows), _if_then_else(False, zeros_diff_rows, max_row_clue)), _if_then_else(and_(False, True), _if_then_else(True, 46, ones_diff_rows), _if_then_else(False, ones_diff_rows, 0))), _if_then_else(and_(or_(False, False), ge(3, 1)), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_cols, compare_blocks_rows)), _if_then_else(ge(3, ones_diff_rows), _if_then_else(True, 3, 1), _if_then_else(False, zeros_diff_rows, max_row_clue))), _if_then_else(le(_if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, max_col_clue, max_col_clue)), _if_then_else(le(ones_diff_cols, max_col_clue), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, 3, 4)), _if_then_else(le(max_col_clue, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 2), _if_then_else(False, 3, ones_diff_cols))))), False), True), or_(True, True))
VAL TREES:
add(mul(ones_diff_cols, 52), mul(compare_blocks_cols, zeros_diff_rows))
add(add(add(add(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols))), add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols))))
add(mul(zeros_diff_cols, 30), add(zeros_diff_rows, ones_diff_rows))
add(mul(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols))
add(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows))
add(mul(add(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_rows)), mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, -54))), add(add(mul(zeros_diff_rows, zeros_diff_rows), mul(20, ones_diff_cols)), mul(mul(compare_blocks_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))), mul(add(add(mul(42, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, ones_diff_cols))), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows)))))
COND TREES:
ge(max_row_clue, _if_then_else(or_(True, False), compare_blocks_rows, zeros_diff_rows))
ge(_if_then_else(and_(and_(False, False), False), compare_blocks_rows, max_col_clue), _if_then_else(False, zeros_diff_cols, max_row_clue))
or_(or_(False, False), le(_if_then_else(True, max_col_clue, 0), _if_then_else(False, ones_diff_rows, ones_diff_rows)))
le(_if_then_else(or_(True, True), zeros_diff_rows, _if_then_else(True, _if_then_else(True, _if_then_else(False, 1, ones_diff_rows), ones_diff_rows), 3)), _if_then_else(False, zeros_diff_rows, 2))
le(3, _if_then_else(ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(False, -62, 2)), ones_diff_rows, -67))
VAL TREES:
add(mul(ones_diff_rows, zeros_diff_rows), add(-49, zeros_diff_rows))
add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, -94))
mul(mul(zeros_diff_rows, ones_diff_cols), mul(mul(add(61, ones_diff_cols), zeros_diff_cols), ones_diff_rows))
add(mul(zeros_diff_cols, mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), 67))
mul(add(zeros_diff_rows, -21), add(zeros_diff_rows, zeros_diff_cols))
add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols))
COND TREES:
and_(True, or_(ge(compare_blocks_cols, _if_then_else(True, -63, compare_blocks_cols)), ge(_if_then_else(False, max_row_clue, _if_then_else(ge(compare_blocks_cols, max_col_clue), _if_then_else(False, ones_diff_rows, 4), _if_then_else(True, ones_diff_cols, 1))), _if_then_else(ge(zeros_diff_cols, ones_diff_rows), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(True, 4, compare_blocks_rows)))))
ge(_if_then_else(True, _if_then_else(True, 0, compare_blocks_cols), zeros_diff_cols), _if_then_else(ge(_if_then_else(le(_if_then_else(False, 1, 4), _if_then_else(True, 2, zeros_diff_cols)), 2, zeros_diff_cols), _if_then_else(and_(le(0, 52), and_(True, True)), _if_then_else(ge(4, ones_diff_rows), _if_then_else(False, max_row_clue, compare_blocks_rows), 0), _if_then_else(True, zeros_diff_cols, _if_then_else(True, compare_blocks_rows, 2)))), _if_then_else(False, 4, -96), _if_then_else(ge(_if_then_else(False, compare_blocks_rows, 3), compare_blocks_rows), compare_blocks_rows, max_row_clue)))
le(_if_then_else(ge(_if_then_else(False, max_col_clue, 4), _if_then_else(le(compare_blocks_cols, 0), _if_then_else(le(zeros_diff_rows, ones_diff_rows), 4, zeros_diff_cols), 2)), ones_diff_cols, zeros_diff_cols), _if_then_else(True, max_row_clue, _if_then_else(ge(zeros_diff_cols, 37), _if_then_else(False, ones_diff_rows, _if_then_else(False, ones_diff_rows, -82)), _if_then_else(False, 2, 51))))
and_(or_(False, or_(le(_if_then_else(True, max_col_clue, ones_diff_cols), _if_then_else(False, zeros_diff_cols, 2)), and_(ge(zeros_diff_rows, compare_blocks_rows), and_(False, True)))), le(compare_blocks_rows, zeros_diff_cols))
ge(_if_then_else(le(max_col_clue, compare_blocks_rows), 1, ones_diff_cols), _if_then_else(or_(le(_if_then_else(True, -84, compare_blocks_cols), _if_then_else(False, ones_diff_cols, ones_diff_rows)), and_(and_(True, False), ge(3, ones_diff_rows))), zeros_diff_cols, ones_diff_rows))
VAL TREES:
add(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols))
add(add(add(ones_diff_cols, add(74, mul(zeros_diff_rows, ones_diff_cols))), compare_blocks_rows), mul(mul(ones_diff_rows, ones_diff_cols), add(add(compare_blocks_rows, ones_diff_cols), -65)))
add(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_rows, mul(add(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_rows, ones_diff_cols)), mul(mul(48, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)))))
mul(mul(add(zeros_diff_rows, compare_blocks_cols), add(add(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_cols, compare_blocks_rows))), add(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_cols)))
add(mul(zeros_diff_cols, -71), add(add(add(mul(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -47))), add(mul(mul(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)))), mul(compare_blocks_rows, add(compare_blocks_rows, zeros_diff_rows))))
mul(mul(mul(mul(zeros_diff_rows, -8), mul(compare_blocks_cols, compare_blocks_rows)), compare_blocks_cols), mul(ones_diff_cols, zeros_diff_rows))
COND TREES:
ge(_if_then_else(ge(_if_then_else(and_(le(ones_diff_cols, 0), False), max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, 0)), _if_then_else(or_(or_(True, True), True), _if_then_else(True, 2, max_col_clue), _if_then_else(True, 81, ones_diff_rows))), _if_then_else(le(_if_then_else(True, zeros_diff_cols, 4), _if_then_else(True, ones_diff_cols, 3)), _if_then_else(and_(False, True), _if_then_else(le(_if_then_else(False, _if_then_else(ge(_if_then_else(True, 4, 48), _if_then_else(True, 4, max_col_clue)), zeros_diff_rows, 0), _if_then_else(ge(ones_diff_rows, _if_then_else(True, 4, zeros_diff_cols)), max_row_clue, _if_then_else(False, 0, zeros_diff_rows))), _if_then_else(False, 43, zeros_diff_cols)), compare_blocks_cols, 0), _if_then_else(False, 4, 0)), _if_then_else(and_(True, False), _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(False, 40, 4))))
and_(ge(1, _if_then_else(ge(0, 1), _if_then_else(False, _if_then_else(True, 2, zeros_diff_rows), ones_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows))), False)
and_(and_(ge(_if_then_else(or_(True, True), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, zeros_diff_cols, max_row_clue)), _if_then_else(and_(True, False), _if_then_else(False, 1, 3), _if_then_else(True, max_col_clue, compare_blocks_cols))), le(_if_then_else(le(ones_diff_cols, 2), _if_then_else(False, 3, 0), _if_then_else(False, 2, 0)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(False, 3, 4), _if_then_else(False, compare_blocks_cols, max_col_clue)))), or_(and_(le(_if_then_else(True, ones_diff_cols, 4), _if_then_else(True, 3, ones_diff_rows)), ge(_if_then_else(True, max_col_clue, 10), _if_then_else(True, max_row_clue, 1))), or_(le(_if_then_else(True, 4, 4), _if_then_else(True, 0, compare_blocks_rows)), le(_if_then_else(False, zeros_diff_cols, 3), _if_then_else(True, compare_blocks_cols, 3)))))
le(_if_then_else(False, _if_then_else(True, ones_diff_rows, -63), zeros_diff_cols), _if_then_else(True, ones_diff_rows, zeros_diff_cols))
or_(ge(_if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, compare_blocks_cols, compare_blocks_rows)), or_(ge(zeros_diff_cols, zeros_diff_rows), le(compare_blocks_rows, _if_then_else(or_(False, True), _if_then_else(True, max_row_clue, 2), _if_then_else(False, -93, max_row_clue)))))
VAL TREES:
mul(mul(mul(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)), mul(add(-35, compare_blocks_rows), add(-33, ones_diff_cols))), mul(add(mul(zeros_diff_cols, ones_diff_cols), add(ones_diff_rows, compare_blocks_rows)), mul(mul(zeros_diff_rows, 65), mul(ones_diff_rows, zeros_diff_rows))))
mul(mul(add(mul(add(mul(compare_blocks_rows, 10), mul(39, zeros_diff_rows)), add(add(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_cols))), mul(mul(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_rows, -20)), mul(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, 28)))), mul(mul(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), mul(50, zeros_diff_cols))), add(add(mul(compare_blocks_rows, compare_blocks_rows), mul(86, zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_rows))))), add(add(compare_blocks_rows, ones_diff_rows), compare_blocks_cols))
mul(add(mul(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, zeros_diff_rows)), mul(add(zeros_diff_rows, ones_diff_rows), add(ones_diff_cols, compare_blocks_rows)))
add(add(mul(mul(add(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_rows)), mul(mul(compare_blocks_rows, -60), add(compare_blocks_cols, -25))), add(mul(mul(-46, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_cols)), mul(add(zeros_diff_cols, 97), mul(zeros_diff_cols, add(mul(zeros_diff_cols, add(ones_diff_rows, compare_blocks_cols)), add(compare_blocks_cols, compare_blocks_rows)))))), mul(mul(mul(add(ones_diff_rows, ones_diff_cols), mul(-30, zeros_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_rows, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)))))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols))
add(mul(add(add(add(ones_diff_rows, zeros_diff_rows), add(zeros_diff_cols, ones_diff_rows)), add(compare_blocks_rows, compare_blocks_rows)), compare_blocks_rows), add(77, zeros_diff_rows))
COND TREES:
or_(or_(or_(True, or_(or_(False, False), True)), True), le(0, 0))
le(_if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, ones_diff_cols))
ge(_if_then_else(and_(False, False), max_row_clue, ones_diff_cols), _if_then_else(le(_if_then_else(True, 3, zeros_diff_cols), 2), compare_blocks_cols, compare_blocks_cols))
or_(False, and_(or_(True, False), ge(max_row_clue, max_col_clue)))
and_(or_(False, or_(False, True)), True)
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
or_(False, False)
le(_if_then_else(True, 2, _if_then_else(ge(zeros_diff_cols, _if_then_else(ge(max_col_clue, compare_blocks_rows), zeros_diff_cols, max_row_clue)), _if_then_else(False, 1, 34), _if_then_else(True, 4, 3))), _if_then_else(False, compare_blocks_cols, ones_diff_cols))
ge(_if_then_else(and_(le(0, 2), or_(False, False)), _if_then_else(ge(zeros_diff_rows, 2), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(False, 1, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(or_(False, False), 87, 0))), _if_then_else(le(_if_then_else(False, zeros_diff_cols, 1), _if_then_else(True, -62, 0)), _if_then_else(ge(2, 1), _if_then_else(False, max_col_clue, ones_diff_rows), _if_then_else(True, 2, max_col_clue)), _if_then_else(False, _if_then_else(True, max_col_clue, ones_diff_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_cols))))
or_(le(zeros_diff_cols, zeros_diff_rows), and_(or_(True, and_(True, False)), le(0, _if_then_else(False, 4, _if_then_else(ge(compare_blocks_cols, _if_then_else(and_(False, ge(compare_blocks_rows, _if_then_else(False, compare_blocks_rows, compare_blocks_rows))), compare_blocks_rows, 1)), _if_then_else(True, _if_then_else(and_(False, ge(1, compare_blocks_rows)), _if_then_else(and_(False, False), 2, 1), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), 4, compare_blocks_rows)), 78), _if_then_else(or_(True, False), _if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, 0, _if_then_else(False, 3, _if_then_else(False, ones_diff_rows, 2)))))))))
and_(True, ge(_if_then_else(False, _if_then_else(and_(True, True), max_col_clue, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, max_col_clue)), _if_then_else(ge(max_row_clue, zeros_diff_cols), _if_then_else(False, max_row_clue, 2), _if_then_else(True, compare_blocks_cols, ones_diff_cols))))
VAL TREES:
add(mul(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_cols, ones_diff_rows))
add(add(mul(mul(30, mul(mul(ones_diff_rows, ones_diff_rows), mul(ones_diff_cols, zeros_diff_cols))), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(mul(add(mul(mul(add(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)), add(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)), mul(add(ones_diff_rows, compare_blocks_rows), mul(56, compare_blocks_rows)))), mul(mul(mul(mul(ones_diff_rows, -20), add(zeros_diff_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_rows))), mul(mul(add(-87, 20), add(44, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), mul(compare_blocks_rows, compare_blocks_cols))))), zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(add(add(ones_diff_rows, ones_diff_cols), mul(25, compare_blocks_cols)), compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(92, compare_blocks_rows)), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
ge(zeros_diff_cols, _if_then_else(or_(False, True), _if_then_else(False, max_col_clue, 21), _if_then_else(False, zeros_diff_rows, -64)))
ge(_if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, zeros_diff_cols, compare_blocks_cols))
or_(ge(_if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, 4)), True)
le(_if_then_else(False, ones_diff_cols, _if_then_else(False, 1, zeros_diff_rows)), _if_then_else(le(_if_then_else(False, -42, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), zeros_diff_rows, 2))
le(_if_then_else(True, max_row_clue, max_row_clue), _if_then_else(True, ones_diff_rows, -67))
VAL TREES:
add(mul(ones_diff_rows, zeros_diff_rows), add(-49, zeros_diff_rows))
add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, -94))
mul(mul(zeros_diff_rows, ones_diff_cols), mul(mul(add(61, ones_diff_cols), zeros_diff_cols), ones_diff_rows))
add(mul(zeros_diff_cols, mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), 67))
mul(add(zeros_diff_rows, -21), add(zeros_diff_rows, zeros_diff_cols))
add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols))
COND TREES:
ge(max_row_clue, _if_then_else(True, compare_blocks_rows, max_row_clue))
ge(_if_then_else(and_(ge(ones_diff_cols, compare_blocks_rows), False), compare_blocks_rows, max_col_clue), _if_then_else(False, zeros_diff_cols, compare_blocks_rows))
or_(or_(False, False), le(max_col_clue, _if_then_else(False, ones_diff_rows, 3)))
le(_if_then_else(False, ones_diff_cols, _if_then_else(le(3, 2), _if_then_else(True, ones_diff_rows, 0), _if_then_else(True, 2, compare_blocks_cols))), _if_then_else(False, zeros_diff_rows, 2))
le(ones_diff_rows, _if_then_else(True, ones_diff_rows, -67))
VAL TREES:
add(mul(ones_diff_rows, zeros_diff_rows), add(-49, zeros_diff_rows))
add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, -94))
mul(mul(zeros_diff_rows, ones_diff_cols), mul(mul(add(61, ones_diff_cols), zeros_diff_cols), ones_diff_rows))
add(mul(zeros_diff_cols, mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), 67))
mul(add(zeros_diff_rows, -21), add(zeros_diff_rows, zeros_diff_cols))
add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols))
COND TREES:
or_(or_(or_(True, le(_if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, -6, 1))), True), and_(False, True))
le(_if_then_else(True, compare_blocks_cols, _if_then_else(and_(ge(max_col_clue, compare_blocks_rows), True), _if_then_else(True, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, 3))), _if_then_else(True, compare_blocks_cols, ones_diff_cols))
ge(_if_then_else(ge(_if_then_else(True, 46, compare_blocks_cols), _if_then_else(True, ones_diff_rows, compare_blocks_cols)), max_row_clue, compare_blocks_rows), _if_then_else(or_(False, True), compare_blocks_cols, zeros_diff_rows))
and_(and_(True, True), le(_if_then_else(True, zeros_diff_rows, 1), ones_diff_rows))
and_(or_(False, True), or_(True, False))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
or_(and_(and_(True, False), and_(False, True)), or_(and_(True, True), ge(0, 4)))
le(_if_then_else(and_(and_(le(2, ones_diff_rows), and_(True, True)), and_(ge(0, compare_blocks_rows), and_(True, False))), _if_then_else(True, _if_then_else(le(ones_diff_cols, 0), _if_then_else(False, max_row_clue, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, max_row_clue, ones_diff_rows))), _if_then_else(or_(or_(True, False), or_(False, True)), _if_then_else(or_(True, False), _if_then_else(False, 4, 4), _if_then_else(and_(True, True), zeros_diff_rows, -30)), _if_then_else(le(2, compare_blocks_cols), _if_then_else(True, max_row_clue, ones_diff_rows), _if_then_else(True, ones_diff_cols, compare_blocks_rows)))), zeros_diff_rows)
and_(ge(1, 3), and_(le(max_row_clue, ones_diff_cols), ge(max_row_clue, _if_then_else(and_(True, True), _if_then_else(True, 3, 3), 2))))
le(_if_then_else(le(_if_then_else(False, compare_blocks_cols, max_col_clue), _if_then_else(False, max_col_clue, 4)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, -27), _if_then_else(True, compare_blocks_rows, 4)), _if_then_else(or_(True, or_(le(zeros_diff_rows, compare_blocks_cols), False)), _if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, 4, max_row_clue))), _if_then_else(False, ones_diff_cols, zeros_diff_rows))
and_(le(compare_blocks_rows, _if_then_else(ge(_if_then_else(False, _if_then_else(False, max_col_clue, 3), _if_then_else(True, ones_diff_rows, -67)), _if_then_else(True, _if_then_else(False, compare_blocks_rows, ones_diff_rows), ones_diff_cols)), _if_then_else(False, _if_then_else(le(zeros_diff_rows, 1), max_row_clue, ones_diff_cols), 4), _if_then_else(False, max_row_clue, zeros_diff_cols))), le(zeros_diff_rows, 3))
VAL TREES:
add(mul(add(mul(zeros_diff_rows, compare_blocks_rows), zeros_diff_rows), ones_diff_cols), mul(zeros_diff_rows, -35))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_rows))
add(mul(ones_diff_rows, ones_diff_cols), mul(-33, compare_blocks_rows))
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols))
add(add(compare_blocks_cols, zeros_diff_rows), add(42, zeros_diff_cols))
add(add(7, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows))
COND TREES:
and_(and_(True, True), False)
ge(_if_then_else(or_(ge(compare_blocks_rows, 0), False), max_row_clue, 2), _if_then_else(True, _if_then_else(True, compare_blocks_cols, _if_then_else(False, 3, 2)), 0))
ge(_if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(or_(ge(compare_blocks_rows, compare_blocks_cols), True), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, 2), 3), _if_then_else(le(ones_diff_rows, max_row_clue), _if_then_else(True, max_col_clue, max_row_clue), _if_then_else(True, zeros_diff_rows, max_col_clue))))
ge(_if_then_else(le(_if_then_else(False, zeros_diff_rows, 2), _if_then_else(True, max_col_clue, 2)), compare_blocks_cols, compare_blocks_cols), _if_then_else(and_(and_(False, True), ge(0, zeros_diff_rows)), max_col_clue, zeros_diff_cols))
ge(1, _if_then_else(or_(True, True), max_col_clue, 3))
VAL TREES:
mul(add(mul(add(add(zeros_diff_rows, 85), add(compare_blocks_cols, compare_blocks_cols)), add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(mul(10, -86), mul(-78, compare_blocks_cols)))), mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(54, zeros_diff_rows))), mul(mul(mul(ones_diff_cols, zeros_diff_rows), mul(-49, compare_blocks_rows)), mul(add(compare_blocks_rows, -24), add(ones_diff_rows, compare_blocks_cols)))))
mul(mul(ones_diff_cols, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, zeros_diff_rows), mul(mul(compare_blocks_rows, zeros_diff_cols), ones_diff_cols))
mul(add(add(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(add(ones_diff_rows, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_rows)))
mul(add(mul(mul(zeros_diff_rows, 88), mul(zeros_diff_cols, zeros_diff_cols)), add(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_cols))), mul(mul(add(ones_diff_cols, zeros_diff_rows), mul(1, ones_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, compare_blocks_cols))))
add(mul(mul(ones_diff_cols, -11), add(-15, 48)), mul(add(90, ones_diff_cols), add(zeros_diff_rows, 22)))
COND TREES:
ge(_if_then_else(le(_if_then_else(ge(1, 4), _if_then_else(False, max_row_clue, 2), _if_then_else(True, 1, max_col_clue)), _if_then_else(le(zeros_diff_rows, max_col_clue), _if_then_else(False, ones_diff_rows, 0), _if_then_else(False, 1, 2))), _if_then_else(le(_if_then_else(False, ones_diff_rows, 0), _if_then_else(True, zeros_diff_cols, zeros_diff_rows)), _if_then_else(or_(False, True), _if_then_else(True, 0, 95), _if_then_else(True, max_row_clue, 4)), _if_then_else(ge(zeros_diff_cols, compare_blocks_cols), _if_then_else(False, ones_diff_rows, 2), _if_then_else(False, 1, compare_blocks_rows))), _if_then_else(le(_if_then_else(False, ones_diff_rows, max_row_clue), _if_then_else(True, zeros_diff_cols, max_col_clue)), _if_then_else(le(_if_then_else(True, zeros_diff_cols, 1), _if_then_else(False, 4, 94)), _if_then_else(False, max_row_clue, -14), _if_then_else(False, compare_blocks_cols, compare_blocks_rows)), _if_then_else(le(compare_blocks_cols, 2), _if_then_else(False, 61, ones_diff_cols), _if_then_else(True, 3, 3)))), _if_then_else(or_(le(_if_then_else(True, 3, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, 2)), or_(or_(False, True), le(1, ones_diff_rows))), _if_then_else(and_(le(max_row_clue, 3), or_(False, True)), _if_then_else(le(ones_diff_cols, 1), _if_then_else(True, ones_diff_rows, 3), _if_then_else(True, 1, zeros_diff_rows)), _if_then_else(le(zeros_diff_cols, -57), _if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(False, 63, compare_blocks_rows))), _if_then_else(and_(and_(False, False), ge(compare_blocks_cols, max_row_clue)), _if_then_else(ge(compare_blocks_cols, max_row_clue), _if_then_else(False, -23, ones_diff_cols), _if_then_else(False, 4, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, ones_diff_cols, compare_blocks_cols), _if_then_else(False, ones_diff_rows, 4)))))
ge(_if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, _if_then_else(le(compare_blocks_cols, _if_then_else(or_(ge(4, compare_blocks_cols), or_(True, False)), compare_blocks_cols, 0)), zeros_diff_rows, max_col_clue), ones_diff_rows))
or_(and_(False, False), le(2, compare_blocks_cols))
or_(True, and_(le(ones_diff_cols, -27), and_(ge(2, 0), and_(False, True))))
ge(_if_then_else(and_(or_(False, and_(True, True)), and_(False, False)), 2, _if_then_else(False, _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, 0, compare_blocks_rows))), _if_then_else(ge(_if_then_else(True, 0, 4), _if_then_else(False, 0, 2)), _if_then_else(and_(False, True), _if_then_else(True, 0, _if_then_else(True, -81, 1)), _if_then_else(False, 1, 0)), _if_then_else(ge(zeros_diff_cols, 2), _if_then_else(False, 3, max_row_clue), _if_then_else(False, 0, 1))))
VAL TREES:
mul(add(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))
add(add(98, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_cols))
add(add(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols))
mul(add(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_cols))
mul(mul(mul(ones_diff_rows, ones_diff_cols), add(compare_blocks_rows, ones_diff_rows)), mul(add(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)))
add(mul(mul(zeros_diff_cols, -60), mul(ones_diff_rows, compare_blocks_cols)), add(mul(50, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)))
COND TREES:
ge(_if_then_else(ge(_if_then_else(ge(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(False, 4, max_col_clue)), _if_then_else(and_(True, False), _if_then_else(False, 31, 4), _if_then_else(True, 3, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, ones_diff_rows), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(True, 1, ones_diff_rows), _if_then_else(True, 2, max_col_clue)), _if_then_else(and_(False, True), _if_then_else(False, 3, -49), _if_then_else(False, ones_diff_rows, compare_blocks_cols))), _if_then_else(le(_if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, 0, max_row_clue)), _if_then_else(le(1, 0), _if_then_else(False, 0, zeros_diff_cols), _if_then_else(False, 3, 29)), _if_then_else(le(4, zeros_diff_cols), _if_then_else(False, 0, 2), _if_then_else(False, max_col_clue, zeros_diff_cols)))), compare_blocks_cols)
and_(le(_if_then_else(le(2, max_row_clue), _if_then_else(False, 2, 0), _if_then_else(True, ones_diff_cols, max_row_clue)), 3), False)
or_(and_(ge(_if_then_else(ge(0, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(le(_if_then_else(le(0, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, 54)), _if_then_else(and_(False, False), _if_then_else(False, max_col_clue, max_col_clue), _if_then_else(False, ones_diff_cols, 4))), 4, ones_diff_rows)), _if_then_else(False, compare_blocks_rows, 0)), and_(and_(and_(True, True), and_(False, True)), or_(ge(ones_diff_cols, ones_diff_cols), and_(False, True)))), ge(zeros_diff_rows, _if_then_else(True, _if_then_else(or_(True, True), _if_then_else(False, 2, 4), _if_then_else(True, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, 2), _if_then_else(False, 0, 3)))))
or_(le(1, _if_then_else(ge(_if_then_else(le(max_row_clue, 2), _if_then_else(True, compare_blocks_rows, 4), _if_then_else(False, 90, 3)), 4), zeros_diff_cols, 2)), False)
or_(False, le(_if_then_else(le(1, 1), -18, compare_blocks_rows), _if_then_else(True, ones_diff_rows, ones_diff_rows)))
VAL TREES:
add(mul(compare_blocks_cols, zeros_diff_cols), mul(mul(83, ones_diff_cols), compare_blocks_cols))
mul(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows))
add(add(add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(38, ones_diff_rows))), add(mul(add(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), mul(mul(78, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_rows))))
add(add(mul(ones_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(add(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_cols, 17), mul(ones_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, ones_diff_rows), add(7, zeros_diff_cols)))
add(mul(mul(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(83, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows)))
COND TREES:
or_(and_(and_(True, False), and_(False, True)), and_(le(zeros_diff_rows, 0), False))
le(_if_then_else(ge(zeros_diff_cols, ones_diff_rows), _if_then_else(True, 3, max_row_clue), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)
and_(and_(and_(False, True), False), or_(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_rows), -37), ge(_if_then_else(True, 0, 1), 2)))
or_(ge(_if_then_else(False, compare_blocks_rows, 4), _if_then_else(True, ones_diff_rows, max_col_clue)), and_(or_(False, True), ge(4, 2)))
and_(le(compare_blocks_rows, compare_blocks_rows), False)
VAL TREES:
add(mul(mul(zeros_diff_cols, mul(ones_diff_rows, compare_blocks_cols)), add(compare_blocks_cols, compare_blocks_cols)), mul(zeros_diff_rows, -35))
mul(mul(mul(mul(add(mul(compare_blocks_rows, compare_blocks_rows), add(26, compare_blocks_cols)), add(add(zeros_diff_rows, 84), mul(zeros_diff_rows, -97))), add(mul(add(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_cols, zeros_diff_rows)), mul(mul(compare_blocks_cols, ones_diff_cols), mul(compare_blocks_rows, zeros_diff_rows)))), compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_rows))
add(mul(ones_diff_rows, ones_diff_cols), add(add(add(compare_blocks_rows, ones_diff_rows), mul(-84, compare_blocks_rows)), add(zeros_diff_rows, mul(ones_diff_cols, zeros_diff_rows))))
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols))
add(add(add(add(-12, ones_diff_cols), add(-56, ones_diff_cols)), zeros_diff_rows), add(42, zeros_diff_cols))
add(add(7, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows))
COND TREES:
le(_if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, _if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(and_(False, ge(_if_then_else(True, max_col_clue, compare_blocks_rows), ones_diff_rows)), compare_blocks_rows, compare_blocks_cols)))
le(_if_then_else(or_(ge(0, zeros_diff_cols), True), ones_diff_rows, _if_then_else(True, _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(ge(14, compare_blocks_cols), _if_then_else(and_(True, False), zeros_diff_cols, _if_then_else(True, zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(True, 1, compare_blocks_cols))))), _if_then_else(False, zeros_diff_cols, max_col_clue))
le(_if_then_else(and_(and_(le(4, _if_then_else(False, 0, zeros_diff_cols)), or_(False, True)), and_(le(38, max_col_clue), or_(True, True))), _if_then_else(and_(ge(zeros_diff_cols, compare_blocks_cols), ge(compare_blocks_cols, 2)), _if_then_else(le(ones_diff_rows, -58), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(le(0, 3), _if_then_else(False, 3, ones_diff_cols), _if_then_else(False, compare_blocks_rows, max_row_clue))), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(ge(_if_then_else(and_(False, True), _if_then_else(False, 2, 1), _if_then_else(True, 3, max_col_clue)), _if_then_else(and_(True, False), _if_then_else(False, 1, 3), _if_then_else(False, ones_diff_cols, ones_diff_cols))), _if_then_else(or_(ge(-20, max_col_clue), le(_if_then_else(ge(max_row_clue, 2), _if_then_else(True, 3, 1), _if_then_else(True, max_col_clue, 0)), max_row_clue)), _if_then_else(le(compare_blocks_cols, 0), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(True, _if_then_else(False, _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows)), zeros_diff_cols), _if_then_else(False, ones_diff_rows, compare_blocks_rows))), _if_then_else(or_(ge(compare_blocks_cols, 0), or_(False, True)), _if_then_else(ge(compare_blocks_cols, 4), _if_then_else(False, 3, max_col_clue), _if_then_else(True, max_col_clue, 3)), _if_then_else(le(ones_diff_rows, max_col_clue), _if_then_else(False, -2, max_col_clue), _if_then_else(False, ones_diff_cols, ones_diff_rows)))))
and_(and_(le(_if_then_else(False, 3, 3), _if_then_else(True, 4, zeros_diff_rows)), ge(_if_then_else(False, 4, zeros_diff_cols), compare_blocks_cols)), ge(_if_then_else(ge(max_col_clue, 4), _if_then_else(False, ones_diff_rows, max_col_clue), _if_then_else(False, ones_diff_rows, max_col_clue)), _if_then_else(and_(False, True), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(False, 1, 4))))
and_(False, True)
VAL TREES:
mul(mul(ones_diff_cols, add(add(mul(ones_diff_rows, compare_blocks_rows), ones_diff_rows), compare_blocks_cols)), add(compare_blocks_cols, compare_blocks_cols))
add(add(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_rows, compare_blocks_cols))
mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 84)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_cols))), add(add(add(ones_diff_cols, -2), add(compare_blocks_cols, compare_blocks_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows))))
mul(add(compare_blocks_cols, zeros_diff_cols), add(add(zeros_diff_rows, compare_blocks_rows), zeros_diff_cols))
add(mul(add(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), add(mul(ones_diff_rows, ones_diff_cols), mul(79, ones_diff_cols)))
add(mul(add(mul(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_rows)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_rows))), mul(mul(add(13, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_cols, ones_diff_rows))))
COND TREES:
or_(or_(True, ge(_if_then_else(and_(False, True), _if_then_else(and_(True, True), zeros_diff_cols, 4), _if_then_else(True, max_row_clue, ones_diff_rows)), 2)), False)
and_(le(_if_then_else(False, max_col_clue, 3), 4), False)
or_(or_(False, False), le(_if_then_else(and_(or_(True, True), False), max_col_clue, _if_then_else(le(ones_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_cols), _if_then_else(True, 3, zeros_diff_rows))), _if_then_else(False, -24, 0)))
and_(le(_if_then_else(False, 4, _if_then_else(False, _if_then_else(le(_if_then_else(True, _if_then_else(True, zeros_diff_cols, zeros_diff_rows), zeros_diff_rows), ones_diff_rows), _if_then_else(False, _if_then_else(True, 3, zeros_diff_cols), -100), _if_then_else(False, 3, -51)), 3)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(False, 4, ones_diff_cols), _if_then_else(True, 1, 1))), and_(or_(False, or_(False, True)), or_(and_(True, True), and_(True, False))))
le(_if_then_else(or_(False, False), _if_then_else(True, 0, max_col_clue), _if_then_else(True, 3, 4)), _if_then_else(and_(True, and_(True, or_(True, le(2, ones_diff_rows)))), _if_then_else(and_(False, True), _if_then_else(True, _if_then_else(False, max_row_clue, 2), 0), _if_then_else(True, ones_diff_cols, _if_then_else(True, compare_blocks_rows, 0))), _if_then_else(True, 53, zeros_diff_rows)))
VAL TREES:
mul(mul(add(mul(-51, compare_blocks_cols), add(ones_diff_cols, 58)), mul(mul(zeros_diff_rows, zeros_diff_rows), add(compare_blocks_cols, 19))), mul(add(add(69, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(-83, 36), add(-91, zeros_diff_cols))))
mul(mul(mul(-86, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)))
add(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols))
mul(add(mul(ones_diff_cols, -1), ones_diff_cols), add(add(compare_blocks_cols, ones_diff_rows), zeros_diff_cols))
add(mul(compare_blocks_cols, compare_blocks_cols), add(mul(ones_diff_rows, add(ones_diff_rows, zeros_diff_cols)), zeros_diff_cols))
add(mul(mul(zeros_diff_cols, zeros_diff_cols), compare_blocks_rows), mul(ones_diff_rows, add(zeros_diff_rows, zeros_diff_rows)))
COND TREES:
or_(False, le(ones_diff_cols, _if_then_else(and_(and_(ge(ones_diff_cols, zeros_diff_rows), ge(ones_diff_cols, compare_blocks_rows)), False), max_row_clue, _if_then_else(or_(True, True), _if_then_else(or_(True, True), max_row_clue, ones_diff_cols), _if_then_else(False, 2, 24)))))
le(_if_then_else(and_(False, True), _if_then_else(le(max_col_clue, compare_blocks_rows), _if_then_else(False, max_col_clue, zeros_diff_rows), compare_blocks_rows), _if_then_else(or_(True, False), 4, max_row_clue)), zeros_diff_cols)
and_(ge(max_row_clue, zeros_diff_rows), and_(False, False))
le(_if_then_else(True, 3, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 1), _if_then_else(False, max_row_clue, 4))), _if_then_else(False, ones_diff_cols, zeros_diff_rows))
or_(or_(or_(or_(ge(ones_diff_rows, 27), or_(True, False)), ge(_if_then_else(False, ones_diff_rows, 3), _if_then_else(False, compare_blocks_rows, max_row_clue))), and_(or_(le(ones_diff_rows, ones_diff_cols), le(zeros_diff_rows, 3)), ge(_if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, max_col_clue)))), ge(_if_then_else(le(_if_then_else(False, 3, 2), _if_then_else(False, ones_diff_rows, 4)), _if_then_else(le(max_row_clue, 0), _if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(True, 2, 4)), _if_then_else(le(zeros_diff_rows, compare_blocks_cols), _if_then_else(True, ones_diff_cols, ones_diff_cols), _if_then_else(True, 0, max_col_clue))), _if_then_else(le(_if_then_else(False, 4, ones_diff_cols), _if_then_else(True, zeros_diff_cols, -13)), _if_then_else(le(ones_diff_cols, ones_diff_rows), _if_then_else(True, max_row_clue, 2), _if_then_else(True, 2, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(True, 2, 4), _if_then_else(True, max_row_clue, ones_diff_cols)))))
VAL TREES:
add(mul(add(mul(zeros_diff_rows, compare_blocks_rows), zeros_diff_rows), ones_diff_cols), add(add(44, zeros_diff_rows), add(compare_blocks_cols, compare_blocks_cols)))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_rows))
add(mul(add(mul(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_cols))), ones_diff_cols), mul(-33, compare_blocks_rows))
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, add(add(ones_diff_cols, compare_blocks_rows), add(-42, zeros_diff_rows))))
add(add(add(mul(mul(add(-24, ones_diff_cols), add(zeros_diff_rows, ones_diff_cols)), add(mul(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, ones_diff_rows))), mul(mul(mul(zeros_diff_rows, compare_blocks_cols), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(ones_diff_cols, 85), mul(ones_diff_rows, zeros_diff_cols)))), zeros_diff_rows), add(42, zeros_diff_cols))
add(add(7, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows))
COND TREES:
or_(or_(or_(True, le(_if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(True, -6, 1))), True), and_(False, True))
le(_if_then_else(True, _if_then_else(ge(4, compare_blocks_rows), ones_diff_cols, ones_diff_cols), _if_then_else(and_(True, True), _if_then_else(True, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 3))), _if_then_else(True, compare_blocks_cols, ones_diff_cols))
ge(_if_then_else(ge(_if_then_else(True, 46, compare_blocks_cols), compare_blocks_cols), 1, ones_diff_cols), _if_then_else(or_(False, True), compare_blocks_cols, zeros_diff_rows))
and_(and_(True, True), le(_if_then_else(True, zeros_diff_rows, 1), max_col_clue))
and_(or_(False, or_(False, True)), or_(True, False))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
or_(or_(or_(and_(True, False), False), True), le(_if_then_else(le(0, 1), _if_then_else(False, ones_diff_rows, compare_blocks_cols), _if_then_else(or_(True, False), zeros_diff_cols, max_col_clue)), -96))
le(max_col_clue, _if_then_else(False, compare_blocks_cols, ones_diff_cols))
ge(ones_diff_cols, _if_then_else(True, compare_blocks_cols, compare_blocks_cols))
or_(le(zeros_diff_cols, -26), and_(or_(True, True), le(0, 2)))
and_(or_(ge(_if_then_else(or_(or_(False, False), ge(zeros_diff_cols, 2)), _if_then_else(or_(False, False), _if_then_else(True, 4, ones_diff_cols), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(ge(1, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_cols), _if_then_else(False, -25, zeros_diff_cols))), _if_then_else(ge(_if_then_else(False, 0, ones_diff_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(False, 2, 2), _if_then_else(True, ones_diff_cols, ones_diff_rows)), _if_then_else(le(compare_blocks_rows, ones_diff_cols), _if_then_else(False, 92, max_col_clue), _if_then_else(True, -31, 1)))), and_(or_(ge(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, max_col_clue, max_row_clue)), le(_if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(True, ones_diff_rows, zeros_diff_cols))), or_(or_(or_(False, True), ge(ones_diff_rows, 3)), le(_if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(False, compare_blocks_rows, ones_diff_cols))))), or_(le(compare_blocks_cols, 2), True))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
ge(_if_then_else(or_(False, or_(True, False)), 79, 4), _if_then_else(True, max_row_clue, 3))
and_(False, le(_if_then_else(and_(False, False), compare_blocks_cols, _if_then_else(and_(True, and_(and_(True, False), ge(zeros_diff_cols, -5))), max_col_clue, compare_blocks_rows)), compare_blocks_rows))
or_(and_(ge(_if_then_else(ge(0, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 4, ones_diff_rows)), _if_then_else(False, compare_blocks_rows, 0)), or_(ge(_if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), and_(and_(False, False), ge(zeros_diff_cols, max_col_clue)))), ge(_if_then_else(or_(and_(True, False), and_(False, True)), _if_then_else(ge(4, max_row_clue), _if_then_else(True, 0, -14), _if_then_else(False, max_row_clue, 4)), _if_then_else(le(-27, ones_diff_rows), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(True, 2, max_col_clue))), _if_then_else(and_(True, or_(and_(ge(_if_then_else(and_(False, False), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(False, 2, 4)), _if_then_else(or_(True, True), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, 3, -9))), or_(or_(or_(False, True), le(2, 3)), and_(and_(True, True), and_(False, False)))), and_(and_(or_(le(4, 0), or_(False, True)), le(_if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, 2, ones_diff_cols))), le(_if_then_else(or_(False, True), _if_then_else(True, zeros_diff_cols, -24), _if_then_else(True, ones_diff_cols, _if_then_else(le(max_row_clue, 3), max_row_clue, ones_diff_cols))), _if_then_else(ge(1, -34), _if_then_else(True, max_row_clue, 25), _if_then_else(False, ones_diff_rows, max_col_clue)))))), _if_then_else(or_(True, True), _if_then_else(False, 2, 4), _if_then_else(True, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, 2), _if_then_else(False, 0, 3)))))
or_(le(1, _if_then_else(False, _if_then_else(True, 0, max_col_clue), _if_then_else(True, 4, 3))), le(2, compare_blocks_rows))
or_(True, True)
VAL TREES:
add(mul(compare_blocks_cols, zeros_diff_cols), mul(mul(83, ones_diff_cols), compare_blocks_cols))
mul(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows))
add(add(add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(38, ones_diff_rows))), add(mul(add(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), mul(mul(78, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_rows))))
add(add(mul(ones_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(add(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_cols, 17), mul(ones_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, ones_diff_rows), add(7, zeros_diff_cols)))
add(mul(mul(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(83, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows)))
COND TREES:
and_(le(4, zeros_diff_rows), le(max_row_clue, max_row_clue))
ge(24, _if_then_else(True, ones_diff_rows, max_col_clue))
or_(le(_if_then_else(ge(ones_diff_rows, -85), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, -14), _if_then_else(True, 0, ones_diff_cols))), or_(and_(or_(False, True), False), and_(or_(False, False), and_(True, True))))
or_(and_(True, ge(3, zeros_diff_rows)), ge(_if_then_else(False, max_row_clue, 0), ones_diff_rows))
or_(and_(and_(False, True), True), or_(False, True))
VAL TREES:
add(mul(ones_diff_cols, 52), mul(compare_blocks_cols, zeros_diff_rows))
add(add(add(add(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols))), add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols))))
add(mul(zeros_diff_cols, 30), add(zeros_diff_rows, ones_diff_rows))
add(mul(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols))
add(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows))
add(mul(add(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_rows)), mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, -54))), add(add(mul(zeros_diff_rows, zeros_diff_rows), mul(20, ones_diff_cols)), mul(mul(compare_blocks_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))), mul(add(add(mul(42, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, ones_diff_cols))), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows)))))
COND TREES:
or_(or_(or_(True, False), True), le(0, 0))
le(_if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(ge(max_row_clue, compare_blocks_rows), compare_blocks_cols, ones_diff_cols))
ge(_if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(le(_if_then_else(True, 3, zeros_diff_cols), 2), ones_diff_cols, compare_blocks_cols))
or_(False, and_(or_(True, False), ge(ones_diff_cols, max_col_clue)))
and_(or_(False, True), True)
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
ge(_if_then_else(False, _if_then_else(ge(max_col_clue, compare_blocks_cols), _if_then_else(True, _if_then_else(False, 0, compare_blocks_cols), _if_then_else(and_(False, False), 1, 1)), _if_then_else(False, max_row_clue, _if_then_else(True, 0, zeros_diff_cols))), max_col_clue), _if_then_else(False, 2, ones_diff_rows))
and_(ge(_if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(False, 1, max_col_clue)), or_(or_(False, True), False))
and_(True, or_(le(max_col_clue, compare_blocks_cols), le(0, 3)))
ge(zeros_diff_rows, _if_then_else(False, max_col_clue, ones_diff_rows))
and_(le(_if_then_else(False, max_col_clue, compare_blocks_cols), max_row_clue), or_(le(_if_then_else(and_(False, False), _if_then_else(False, ones_diff_rows, 1), _if_then_else(False, 4, -75)), _if_then_else(True, ones_diff_cols, compare_blocks_rows)), False))
VAL TREES:
mul(mul(zeros_diff_cols, compare_blocks_cols), add(mul(zeros_diff_cols, add(compare_blocks_cols, zeros_diff_cols)), compare_blocks_cols))
mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_rows)), add(ones_diff_cols, -82))
add(mul(zeros_diff_cols, add(zeros_diff_cols, compare_blocks_rows)), mul(compare_blocks_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_rows), add(add(add(9, mul(70, compare_blocks_rows)), compare_blocks_rows), add(zeros_diff_rows, 25)))
add(add(ones_diff_rows, ones_diff_cols), mul(mul(mul(add(mul(compare_blocks_cols, -49), mul(zeros_diff_cols, compare_blocks_rows)), add(add(-98, ones_diff_rows), mul(compare_blocks_rows, compare_blocks_rows))), mul(mul(mul(compare_blocks_cols, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)), add(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_rows, compare_blocks_rows)))), mul(mul(mul(add(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_cols, zeros_diff_rows))), mul(mul(mul(zeros_diff_cols, ones_diff_cols), mul(70, -32)), add(mul(zeros_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, -83))))))
mul(add(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, -66))
COND TREES:
ge(zeros_diff_cols, _if_then_else(and_(and_(ge(ones_diff_cols, zeros_diff_rows), ge(max_col_clue, compare_blocks_rows)), False), max_row_clue, 1))
ge(_if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(and_(and_(le(_if_then_else(True, ones_diff_cols, 4), _if_then_else(False, zeros_diff_rows, 4)), ge(_if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(False, 4, ones_diff_cols))), and_(le(_if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows)), and_(and_(True, True), and_(False, True)))), zeros_diff_cols, compare_blocks_cols))
or_(ge(max_row_clue, _if_then_else(and_(True, True), _if_then_else(True, 3, 3), _if_then_else(False, zeros_diff_rows, ones_diff_rows))), True)
le(_if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(or_(le(zeros_diff_rows, compare_blocks_cols), ge(1, 3)), zeros_diff_rows, 2))
le(_if_then_else(False, _if_then_else(ge(56, max_row_clue), _if_then_else(True, _if_then_else(le(_if_then_else(False, 4, compare_blocks_rows), 0), 2, -54), max_row_clue), _if_then_else(le(2, _if_then_else(False, ones_diff_rows, 11)), ones_diff_cols, 2)), max_row_clue), _if_then_else(False, ones_diff_rows, -67))
VAL TREES:
add(mul(ones_diff_rows, zeros_diff_rows), add(-49, zeros_diff_rows))
add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, -94))
mul(mul(zeros_diff_rows, ones_diff_cols), mul(mul(add(61, ones_diff_cols), zeros_diff_cols), ones_diff_rows))
add(mul(zeros_diff_cols, mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), 67))
mul(add(zeros_diff_rows, -21), add(zeros_diff_rows, zeros_diff_cols))
add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols))
COND TREES:
or_(le(max_col_clue, zeros_diff_rows), True)
or_(le(max_col_clue, 2), ge(0, zeros_diff_cols))
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), _if_then_else(le(max_col_clue, 4), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, max_row_clue, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(False, _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(ge(compare_blocks_cols, zeros_diff_rows), 3, max_col_clue)), ge(4, compare_blocks_rows))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(or_(False, True), zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
or_(and_(and_(True, False), and_(False, True)), and_(le(ones_diff_cols, _if_then_else(and_(and_(ge(ones_diff_cols, zeros_diff_rows), ge(max_row_clue, compare_blocks_rows)), False), max_row_clue, 1)), False))
le(compare_blocks_cols, zeros_diff_rows)
and_(ge(1, 3), False)
le(_if_then_else(ge(_if_then_else(ge(_if_then_else(True, 0, -77), 3), compare_blocks_rows, 0), 1), 3, 1), _if_then_else(False, ones_diff_cols, zeros_diff_rows))
and_(le(_if_then_else(False, max_col_clue, compare_blocks_cols), max_row_clue), False)
VAL TREES:
add(mul(add(mul(zeros_diff_rows, compare_blocks_rows), zeros_diff_rows), ones_diff_cols), mul(zeros_diff_rows, -35))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_rows))
add(mul(ones_diff_rows, ones_diff_cols), mul(-33, compare_blocks_rows))
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols))
add(add(compare_blocks_cols, zeros_diff_rows), add(42, zeros_diff_cols))
add(add(7, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows))
COND TREES:
or_(False, True)
or_(and_(and_(le(compare_blocks_rows, 3), ge(max_row_clue, 2)), or_(le(ones_diff_cols, zeros_diff_rows), and_(False, True))), False)
ge(_if_then_else(False, _if_then_else(le(max_col_clue, 4), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, max_row_clue, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(False, _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(ge(_if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, 4, max_row_clue)), 3, max_col_clue)), True)
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_col_clue))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(le(_if_then_else(or_(le(zeros_diff_rows, 1), le(4, 1)), _if_then_else(ge(4, 1), _if_then_else(False, 4, max_col_clue), _if_then_else(True, ones_diff_cols, compare_blocks_rows)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(False, max_col_clue, compare_blocks_rows))), _if_then_else(and_(and_(False, False), and_(True, True)), _if_then_else(and_(True, False), _if_then_else(True, 1, max_col_clue), _if_then_else(True, ones_diff_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)))), _if_then_else(or_(False, True), zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
or_(and_(and_(True, False), and_(False, True)), and_(False, le(ones_diff_cols, compare_blocks_cols)))
le(_if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_cols))
and_(ge(1, 2), and_(True, True))
le(_if_then_else(True, 3, _if_then_else(and_(True, ge(4, compare_blocks_rows)), _if_then_else(False, zeros_diff_cols, max_row_clue), _if_then_else(True, 4, 3))), _if_then_else(True, ones_diff_cols, zeros_diff_rows))
and_(le(zeros_diff_cols, compare_blocks_rows), False)
VAL TREES:
add(mul(add(mul(zeros_diff_rows, compare_blocks_rows), zeros_diff_rows), ones_diff_cols), mul(zeros_diff_rows, -35))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(mul(mul(ones_diff_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), zeros_diff_rows))
add(add(add(-63, zeros_diff_cols), mul(49, 62)), mul(-33, compare_blocks_rows))
add(add(zeros_diff_rows, zeros_diff_cols), add(mul(add(compare_blocks_cols, 2), add(zeros_diff_cols, ones_diff_cols)), ones_diff_cols))
add(add(compare_blocks_cols, zeros_diff_rows), add(42, add(add(add(add(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, 24)), mul(mul(compare_blocks_cols, -41), add(compare_blocks_cols, compare_blocks_rows))), add(add(add(zeros_diff_cols, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), add(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols))))))
add(add(7, zeros_diff_rows), mul(mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)), ones_diff_rows))
COND TREES:
or_(and_(and_(True, False), and_(False, True)), or_(and_(True, True), ge(_if_then_else(or_(or_(True, False), True), max_col_clue, 1), 4)))
le(_if_then_else(and_(and_(le(2, ones_diff_rows), True), and_(ge(0, compare_blocks_rows), and_(True, False))), _if_then_else(True, _if_then_else(le(ones_diff_cols, 0), _if_then_else(False, max_row_clue, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, max_row_clue, ones_diff_rows))), _if_then_else(or_(or_(True, False), or_(False, True)), _if_then_else(or_(True, False), _if_then_else(False, 4, 4), _if_then_else(False, zeros_diff_rows, -30)), _if_then_else(le(2, compare_blocks_cols), _if_then_else(True, max_row_clue, ones_diff_rows), _if_then_else(True, ones_diff_cols, compare_blocks_rows)))), zeros_diff_rows)
and_(ge(1, 3), and_(le(_if_then_else(False, max_row_clue, 70), 53), True))
le(_if_then_else(le(_if_then_else(False, compare_blocks_cols, max_col_clue), _if_then_else(False, 2, 4)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, -27), _if_then_else(True, compare_blocks_rows, 4)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, 4, max_row_clue))), _if_then_else(False, ones_diff_cols, zeros_diff_rows))
and_(le(compare_blocks_rows, _if_then_else(ge(_if_then_else(False, _if_then_else(False, max_col_clue, 3), _if_then_else(True, zeros_diff_rows, ones_diff_rows)), _if_then_else(True, _if_then_else(False, compare_blocks_rows, ones_diff_rows), ones_diff_cols)), _if_then_else(False, _if_then_else(le(zeros_diff_rows, 1), max_row_clue, ones_diff_cols), 4), _if_then_else(False, max_row_clue, zeros_diff_cols))), le(zeros_diff_rows, 3))
VAL TREES:
add(mul(add(mul(zeros_diff_rows, compare_blocks_rows), zeros_diff_rows), ones_diff_cols), mul(zeros_diff_rows, -35))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_rows))
add(mul(ones_diff_rows, ones_diff_cols), mul(-33, compare_blocks_rows))
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols))
add(add(compare_blocks_cols, zeros_diff_rows), add(42, zeros_diff_cols))
add(add(7, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows))
COND TREES:
ge(_if_then_else(False, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, 2, ones_diff_rows))
and_(ge(_if_then_else(ge(0, zeros_diff_cols), zeros_diff_cols, zeros_diff_cols), _if_then_else(and_(False, or_(and_(True, True), True)), 1, max_col_clue)), or_(or_(False, True), and_(False, False)))
and_(True, le(max_row_clue, ones_diff_cols))
ge(zeros_diff_rows, _if_then_else(False, _if_then_else(and_(False, False), max_col_clue, _if_then_else(le(_if_then_else(True, 0, -77), _if_then_else(False, 3, compare_blocks_rows)), compare_blocks_rows, 3)), ones_diff_rows))
and_(le(_if_then_else(True, max_col_clue, compare_blocks_cols), max_row_clue), or_(le(zeros_diff_cols, max_col_clue), False))
VAL TREES:
mul(mul(zeros_diff_cols, compare_blocks_cols), add(mul(add(mul(mul(mul(mul(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), zeros_diff_cols), mul(zeros_diff_cols, 96)), mul(mul(compare_blocks_cols, add(add(mul(zeros_diff_rows, -98), add(zeros_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_cols, -96), mul(compare_blocks_cols, zeros_diff_rows)))), mul(zeros_diff_cols, 13))), add(mul(mul(ones_diff_cols, -96), mul(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_cols, zeros_diff_rows), add(-98, ones_diff_cols)))), compare_blocks_cols))
mul(mul(add(add(ones_diff_rows, 13), compare_blocks_rows), add(compare_blocks_cols, mul(add(add(ones_diff_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows))))), add(ones_diff_cols, -82))
add(mul(mul(add(compare_blocks_rows, add(95, ones_diff_rows)), mul(zeros_diff_rows, add(mul(add(compare_blocks_rows, zeros_diff_cols), zeros_diff_rows), zeros_diff_cols))), add(mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_cols, ones_diff_rows)), compare_blocks_rows)), mul(add(add(add(add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(add(compare_blocks_cols, 86), add(zeros_diff_rows, zeros_diff_rows))), add(mul(add(zeros_diff_rows, compare_blocks_cols), mul(32, ones_diff_cols)), add(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, zeros_diff_cols)))), mul(add(mul(add(75, compare_blocks_rows), add(-83, compare_blocks_rows)), mul(mul(ones_diff_cols, ones_diff_rows), add(-36, zeros_diff_cols))), add(add(mul(-61, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_cols))))), ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_rows), add(mul(mul(mul(zeros_diff_rows, compare_blocks_rows), add(mul(mul(-37, ones_diff_rows), zeros_diff_rows), mul(68, add(22, ones_diff_cols)))), add(mul(ones_diff_rows, ones_diff_rows), add(ones_diff_cols, zeros_diff_cols))), mul(mul(mul(ones_diff_cols, zeros_diff_rows), mul(add(96, -93), add(ones_diff_rows, compare_blocks_rows))), mul(add(-92, compare_blocks_rows), mul(75, compare_blocks_cols)))))
add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, mul(mul(mul(mul(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(add(compare_blocks_rows, zeros_diff_rows), add(mul(mul(ones_diff_rows, add(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_rows, ones_diff_rows))), add(zeros_diff_cols, zeros_diff_cols)), ones_diff_cols))), mul(add(mul(ones_diff_rows, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, -85), add(zeros_diff_cols, compare_blocks_cols)))), mul(add(mul(add(-7, zeros_diff_rows), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(add(add(ones_diff_rows, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_cols)), add(mul(compare_blocks_cols, 91), mul(zeros_diff_cols, compare_blocks_rows)))))))
mul(add(add(add(add(mul(compare_blocks_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows)), add(add(compare_blocks_rows, zeros_diff_rows), add(16, compare_blocks_cols))), mul(add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))), zeros_diff_rows), mul(zeros_diff_rows, mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_rows))))
COND TREES:
or_(and_(and_(True, False), and_(False, True)), and_(le(zeros_diff_rows, _if_then_else(or_(ge(1, max_row_clue), or_(True, False)), 79, -96)), False))
le(_if_then_else(ge(zeros_diff_cols, ones_diff_rows), _if_then_else(True, 3, max_row_clue), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)
and_(and_(and_(False, True), False), or_(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_rows), -37), ge(_if_then_else(True, 0, 1), 2)))
or_(le(1, _if_then_else(ge(max_col_clue, 4), zeros_diff_cols, 2)), and_(or_(False, True), ge(4, 2)))
and_(le(compare_blocks_rows, compare_blocks_rows), False)
VAL TREES:
add(mul(add(mul(zeros_diff_rows, compare_blocks_rows), zeros_diff_rows), ones_diff_cols), mul(zeros_diff_rows, -35))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_rows))
add(mul(ones_diff_rows, ones_diff_cols), mul(-33, compare_blocks_rows))
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols))
add(add(compare_blocks_cols, zeros_diff_rows), add(42, zeros_diff_cols))
add(add(7, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows))
COND TREES:
ge(0, _if_then_else(True, max_row_clue, 3))
and_(le(compare_blocks_cols, 3), le(max_col_clue, ones_diff_cols))
or_(and_(ge(_if_then_else(ge(0, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 4, ones_diff_rows)), _if_then_else(False, compare_blocks_rows, 0)), and_(and_(and_(True, True), and_(False, True)), or_(ge(ones_diff_cols, ones_diff_cols), and_(False, True)))), ge(_if_then_else(or_(and_(True, False), and_(False, True)), _if_then_else(ge(4, max_row_clue), _if_then_else(True, 0, -14), _if_then_else(False, max_row_clue, 4)), _if_then_else(le(-27, ones_diff_rows), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(True, 2, max_col_clue))), _if_then_else(True, _if_then_else(or_(True, True), _if_then_else(False, 2, 4), _if_then_else(True, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, 2), _if_then_else(False, 0, 3)))))
or_(ge(_if_then_else(False, compare_blocks_rows, 4), _if_then_else(True, ones_diff_rows, max_col_clue)), le(2, compare_blocks_rows))
or_(False, True)
VAL TREES:
add(mul(compare_blocks_cols, zeros_diff_cols), mul(mul(83, ones_diff_cols), compare_blocks_cols))
mul(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows))
add(add(add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(38, ones_diff_rows))), add(mul(add(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), mul(mul(78, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_rows))))
add(add(mul(ones_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(add(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_cols, 17), mul(ones_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, ones_diff_rows), add(7, zeros_diff_cols)))
add(mul(mul(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(83, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows)))
COND TREES:
ge(_if_then_else(or_(ge(1, max_row_clue), or_(True, False)), 79, -96), _if_then_else(True, ones_diff_cols, 3))
and_(le(compare_blocks_cols, 3), le(max_col_clue, max_row_clue))
or_(and_(ge(_if_then_else(ge(0, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 4, ones_diff_rows)), _if_then_else(False, compare_blocks_rows, 0)), and_(and_(and_(True, True), and_(False, True)), or_(ge(ones_diff_cols, ones_diff_cols), and_(False, True)))), ge(_if_then_else(or_(and_(True, False), and_(False, True)), _if_then_else(ge(4, max_row_clue), _if_then_else(True, 0, -14), _if_then_else(False, max_row_clue, 4)), _if_then_else(le(-27, ones_diff_rows), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(True, 2, max_col_clue))), _if_then_else(True, _if_then_else(or_(True, True), _if_then_else(False, 2, 4), _if_then_else(True, max_col_clue, zeros_diff_cols)), _if_then_else(le(zeros_diff_cols, 0), _if_then_else(True, max_col_clue, 2), _if_then_else(False, 0, 3)))))
or_(le(1, _if_then_else(ge(max_col_clue, 4), zeros_diff_cols, 2)), le(2, compare_blocks_rows))
or_(False, True)
VAL TREES:
add(mul(compare_blocks_cols, zeros_diff_cols), mul(mul(83, ones_diff_cols), compare_blocks_cols))
mul(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows))
add(add(add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(38, ones_diff_rows))), add(mul(add(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), mul(mul(78, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_rows))))
add(add(mul(ones_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(add(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_cols, 17), mul(ones_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, ones_diff_rows), add(7, zeros_diff_cols)))
add(mul(mul(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(83, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows)))
COND TREES:
or_(le(max_col_clue, zeros_diff_rows), True)
or_(le(max_col_clue, 2), ge(0, zeros_diff_cols))
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), _if_then_else(le(max_col_clue, 4), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, max_row_clue, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(False, _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(ge(compare_blocks_cols, zeros_diff_rows), 3, max_col_clue)), ge(4, compare_blocks_rows))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(or_(False, True), zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
or_(le(1, 4), le(4, zeros_diff_rows))
or_(False, or_(True, True))
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), _if_then_else(le(max_col_clue, 4), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, max_row_clue, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(False, _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(le(ones_diff_rows, zeros_diff_cols), max_col_clue, ones_diff_cols), _if_then_else(ge(compare_blocks_cols, zeros_diff_rows), 3, max_col_clue)), ge(4, compare_blocks_rows))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, and_(and_(False, False), True)), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
and_(True, le(max_row_clue, ones_diff_cols))
ge(_if_then_else(le(max_col_clue, 2), zeros_diff_cols, max_row_clue), _if_then_else(True, ones_diff_rows, max_row_clue))
or_(le(_if_then_else(ge(ones_diff_rows, -85), _if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, -14), _if_then_else(True, 0, ones_diff_cols))), or_(and_(or_(False, True), or_(False, True)), and_(or_(False, False), and_(True, True))))
or_(and_(True, ge(3, zeros_diff_rows)), ge(_if_then_else(False, ones_diff_cols, 0), _if_then_else(False, compare_blocks_rows, compare_blocks_cols)))
or_(True, or_(False, True))
VAL TREES:
add(mul(ones_diff_cols, 52), mul(compare_blocks_cols, zeros_diff_rows))
add(add(add(add(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols))), add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols))))
add(mul(zeros_diff_cols, 30), add(zeros_diff_rows, ones_diff_rows))
add(mul(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols))
add(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows))
add(mul(add(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_rows)), mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, -54))), add(add(mul(zeros_diff_rows, zeros_diff_rows), mul(20, ones_diff_cols)), mul(mul(compare_blocks_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))), mul(add(add(mul(42, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, ones_diff_cols))), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows)))))
COND TREES:
le(_if_then_else(or_(or_(True, False), True), _if_then_else(False, max_row_clue, max_row_clue), 1), _if_then_else(True, ones_diff_cols, ones_diff_cols))
or_(ge(_if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(ge(max_col_clue, compare_blocks_rows), 3, ones_diff_cols)), and_(True, True))
or_(True, le(_if_then_else(True, 3, zeros_diff_cols), 2))
or_(and_(False, True), True)
or_(True, or_(ge(56, compare_blocks_rows), or_(False, True)))
VAL TREES:
mul(mul(mul(add(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_rows, ones_diff_rows))), mul(mul(add(-59, compare_blocks_rows), add(60, ones_diff_cols)), mul(mul(compare_blocks_rows, zeros_diff_rows), mul(add(compare_blocks_cols, -64), mul(-56, ones_diff_rows))))), add(mul(mul(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_cols, zeros_diff_rows)), add(add(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_rows))), mul(mul(add(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)), add(mul(33, compare_blocks_cols), add(zeros_diff_rows, ones_diff_cols)))))
mul(add(zeros_diff_rows, add(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, 75)))), add(add(56, ones_diff_cols), add(ones_diff_cols, ones_diff_rows)))), add(zeros_diff_cols, mul(zeros_diff_rows, ones_diff_cols)))
mul(mul(55, mul(mul(mul(add(mul(-40, zeros_diff_cols), add(ones_diff_rows, -49)), add(add(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols))), mul(mul(add(compare_blocks_cols, 51), add(-57, compare_blocks_rows)), mul(mul(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_rows)))), add(mul(mul(mul(compare_blocks_cols, mul(add(compare_blocks_cols, -47), mul(47, ones_diff_cols))), mul(zeros_diff_rows, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, zeros_diff_rows))), add(add(mul(8, zeros_diff_rows), mul(compare_blocks_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols)))))), mul(zeros_diff_cols, ones_diff_rows))
add(mul(ones_diff_rows, add(mul(mul(add(mul(add(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, compare_blocks_cols)), add(mul(40, 74), mul(ones_diff_rows, ones_diff_rows))), mul(add(add(-99, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_rows)))), compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols))), add(compare_blocks_cols, add(zeros_diff_cols, compare_blocks_cols)))
mul(add(zeros_diff_rows, mul(zeros_diff_cols, mul(mul(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_cols, add(add(31, ones_diff_cols), add(zeros_diff_cols, add(ones_diff_rows, ones_diff_rows))))))), add(add(ones_diff_cols, ones_diff_cols), compare_blocks_cols))
add(add(add(compare_blocks_rows, compare_blocks_cols), add(add(ones_diff_cols, ones_diff_cols), compare_blocks_cols)), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
or_(or_(or_(True, False), True), or_(and_(le(_if_then_else(False, zeros_diff_rows, zeros_diff_cols), _if_then_else(False, 3, max_col_clue)), le(compare_blocks_rows, _if_then_else(True, -92, 21))), False))
le(_if_then_else(True, 2, compare_blocks_rows), 2)
ge(_if_then_else(False, max_row_clue, max_row_clue), _if_then_else(True, compare_blocks_cols, compare_blocks_cols))
or_(le(4, -26), and_(or_(True, False), ge(max_row_clue, 0)))
and_(or_(False, True), or_(True, or_(ge(compare_blocks_cols, 1), le(zeros_diff_rows, 3))))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
or_(le(3, _if_then_else(True, max_col_clue, 65)), le(_if_then_else(False, 2, _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(False, ones_diff_rows, 2), _if_then_else(False, 0, 4))), compare_blocks_cols))
le(_if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(ge(_if_then_else(False, 2, _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_rows, 1), _if_then_else(False, 0, 3))), -66), compare_blocks_cols, zeros_diff_cols))
and_(ge(_if_then_else(or_(ge(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(True, max_row_clue, max_col_clue)), and_(ge(4, 1), le(max_col_clue, ones_diff_rows))), _if_then_else(and_(and_(True, False), or_(False, False)), _if_then_else(or_(False, True), _if_then_else(False, zeros_diff_cols, 1), _if_then_else(False, 3, max_row_clue)), _if_then_else(le(2, max_col_clue), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, max_row_clue))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_col_clue), _if_then_else(True, max_col_clue, max_col_clue)), _if_then_else(and_(False, False), _if_then_else(True, 1, compare_blocks_rows), _if_then_else(True, 1, -13)), _if_then_else(le(ones_diff_rows, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols), _if_then_else(True, max_col_clue, 3)))), _if_then_else(or_(ge(_if_then_else(True, ones_diff_rows, -16), _if_then_else(False, zeros_diff_cols, 4)), and_(ge(max_col_clue, 4), ge(compare_blocks_rows, max_row_clue))), _if_then_else(and_(le(ones_diff_cols, compare_blocks_rows), and_(False, True)), _if_then_else(or_(False, False), _if_then_else(False, 21, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, zeros_diff_rows)), _if_then_else(le(ones_diff_rows, 1), _if_then_else(False, 1, 3), _if_then_else(True, compare_blocks_cols, max_row_clue))), _if_then_else(or_(ge(1, max_col_clue), or_(True, False)), _if_then_else(ge(ones_diff_rows, compare_blocks_cols), _if_then_else(True, 1, max_col_clue), _if_then_else(True, 4, 2)), _if_then_else(ge(ones_diff_rows, compare_blocks_cols), _if_then_else(False, max_col_clue, 3), _if_then_else(True, zeros_diff_cols, 0))))), or_(False, True))
ge(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, max_row_clue))
or_(or_(or_(True, ge(_if_then_else(le(compare_blocks_cols, 4), compare_blocks_cols, _if_then_else(False, 87, max_col_clue)), _if_then_else(False, max_col_clue, _if_then_else(False, _if_then_else(False, 69, zeros_diff_rows), 55)))), le(ones_diff_cols, max_col_clue)), ge(ones_diff_rows, _if_then_else(False, _if_then_else(False, ones_diff_cols, _if_then_else(False, compare_blocks_cols, ones_diff_cols)), 4)))
VAL TREES:
mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_cols))
add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_rows))
add(add(mul(mul(add(compare_blocks_cols, ones_diff_cols), mul(-85, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_rows))), mul(mul(add(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)), mul(mul(compare_blocks_rows, 44), add(compare_blocks_rows, ones_diff_cols))), mul(add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, zeros_diff_rows), add(-49, ones_diff_cols)))))
add(add(ones_diff_rows, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows))
mul(add(mul(ones_diff_rows, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_cols)), add(75, zeros_diff_cols))
mul(mul(zeros_diff_cols, -79), mul(compare_blocks_cols, ones_diff_cols))
COND TREES:
or_(le(max_col_clue, zeros_diff_rows), le(2, _if_then_else(False, 1, max_col_clue)))
or_(or_(or_(False, True), and_(False, False)), ge(0, zeros_diff_cols))
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), _if_then_else(le(max_col_clue, 4), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, max_row_clue, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(ge(2, ones_diff_rows), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, max_row_clue, compare_blocks_rows))))
and_(ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, 3, max_col_clue)), le(_if_then_else(True, compare_blocks_rows, -77), compare_blocks_rows))
or_(ge(zeros_diff_cols, _if_then_else(and_(False, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, add(add(compare_blocks_rows, add(ones_diff_cols, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_rows), zeros_diff_cols)))))
add(add(add(add(-72, ones_diff_cols), add(compare_blocks_rows, ones_diff_cols)), -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(add(mul(mul(-15, zeros_diff_cols), mul(zeros_diff_cols, 84)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))), 60)))
mul(add(-9, add(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, ones_diff_cols))), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
ge(zeros_diff_cols, _if_then_else(False, zeros_diff_cols, zeros_diff_cols))
ge(_if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(and_(and_(le(_if_then_else(True, ones_diff_cols, 4), _if_then_else(False, zeros_diff_rows, 4)), ge(compare_blocks_cols, _if_then_else(False, 4, ones_diff_cols))), and_(le(_if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows)), and_(ge(_if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(ge(_if_then_else(True, ones_diff_cols, -28), 1), _if_then_else(True, 3, zeros_diff_rows), _if_then_else(or_(True, True), zeros_diff_cols, compare_blocks_cols))), and_(False, True)))), zeros_diff_cols, compare_blocks_cols))
or_(ge(_if_then_else(True, compare_blocks_cols, _if_then_else(False, compare_blocks_cols, ones_diff_cols)), _if_then_else(and_(True, True), _if_then_else(True, _if_then_else(True, compare_blocks_cols, _if_then_else(le(38, max_col_clue), compare_blocks_cols, ones_diff_cols)), 3), _if_then_else(False, zeros_diff_rows, ones_diff_rows))), True)
le(_if_then_else(or_(le(_if_then_else(False, compare_blocks_rows, compare_blocks_cols), zeros_diff_cols), ge(max_col_clue, 4)), ones_diff_cols, ones_diff_rows), _if_then_else(or_(le(zeros_diff_rows, compare_blocks_cols), ge(1, 3)), _if_then_else(ge(_if_then_else(and_(False, False), _if_then_else(False, 3, 0), _if_then_else(True, max_col_clue, 3)), _if_then_else(and_(True, False), _if_then_else(False, -89, -71), _if_then_else(False, ones_diff_rows, 35))), _if_then_else(and_(ge(ones_diff_cols, max_col_clue), or_(True, True)), _if_then_else(or_(False, True), max_col_clue, _if_then_else(True, compare_blocks_cols, 2)), _if_then_else(False, _if_then_else(False, 2, 1), _if_then_else(True, 3, -18))), _if_then_else(or_(ge(max_col_clue, zeros_diff_rows), le(4, zeros_diff_cols)), _if_then_else(ge(4, compare_blocks_cols), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_cols, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, 3), _if_then_else(False, 3, ones_diff_rows)))), 2))
le(_if_then_else(False, max_row_clue, max_row_clue), _if_then_else(False, ones_diff_rows, 4))
VAL TREES:
add(mul(ones_diff_rows, zeros_diff_rows), add(-49, zeros_diff_rows))
add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, -94))
mul(mul(zeros_diff_rows, ones_diff_cols), mul(mul(add(61, ones_diff_cols), zeros_diff_cols), ones_diff_rows))
add(mul(zeros_diff_cols, mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), 67))
mul(add(zeros_diff_rows, -21), add(zeros_diff_rows, zeros_diff_cols))
add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols))
COND TREES:
ge(_if_then_else(ge(_if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(False, max_row_clue, 1), _if_then_else(ge(_if_then_else(False, _if_then_else(False, -46, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 2)), _if_then_else(True, 2, zeros_diff_rows)), zeros_diff_cols, 0)), _if_then_else(or_(or_(True, True), True), _if_then_else(True, 2, max_col_clue), _if_then_else(True, 81, ones_diff_rows))), _if_then_else(le(_if_then_else(True, zeros_diff_cols, 4), _if_then_else(True, ones_diff_cols, 3)), _if_then_else(and_(False, True), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, 4, 0)), _if_then_else(and_(True, False), _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(False, 40, 4))))
and_(ge(14, _if_then_else(True, max_row_clue, zeros_diff_cols)), or_(and_(True, or_(False, True)), le(zeros_diff_cols, ones_diff_cols)))
and_(or_(le(0, max_row_clue), and_(True, False)), and_(True, False))
or_(True, ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, -11, _if_then_else(True, 6, _if_then_else(le(_if_then_else(ge(_if_then_else(le(compare_blocks_rows, 4), _if_then_else(True, ones_diff_rows, 0), _if_then_else(True, compare_blocks_rows, 93)), _if_then_else(ge(ones_diff_rows, 0), _if_then_else(True, ones_diff_cols, ones_diff_cols), _if_then_else(False, compare_blocks_cols, 0))), _if_then_else(ge(_if_then_else(True, -54, 4), _if_then_else(True, max_row_clue, max_row_clue)), _if_then_else(ge(zeros_diff_cols, max_col_clue), _if_then_else(False, ones_diff_cols, 2), _if_then_else(False, compare_blocks_rows, 2)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(False, max_row_clue, ones_diff_cols))), _if_then_else(le(_if_then_else(False, max_row_clue, compare_blocks_rows), _if_then_else(False, ones_diff_cols, 3)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 51, ones_diff_cols)), _if_then_else(le(compare_blocks_rows, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, ones_diff_rows), _if_then_else(True, zeros_diff_cols, max_row_clue)))), _if_then_else(le(_if_then_else(or_(True, True), _if_then_else(or_(True, True), 0, 3), _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(True, max_row_clue, 4), _if_then_else(True, compare_blocks_rows, compare_blocks_cols))), _if_then_else(or_(or_(False, True), or_(True, False)), _if_then_else(ge(2, -82), _if_then_else(True, 38, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(and_(True, False), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(True, 2, ones_diff_rows))), _if_then_else(and_(le(0, 4), ge(zeros_diff_rows, 3)), _if_then_else(le(max_col_clue, 59), _if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(True, 4, ones_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, 1, -23), _if_then_else(True, ones_diff_rows, 2))))), compare_blocks_cols, compare_blocks_cols)))))
or_(ge(_if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_cols, compare_blocks_rows)), or_(ge(_if_then_else(or_(or_(False, False), le(24, 1)), _if_then_else(ge(max_col_clue, 32), _if_then_else(False, -22, ones_diff_rows), _if_then_else(True, max_row_clue, zeros_diff_rows)), _if_then_else(ge(max_row_clue, compare_blocks_rows), _if_then_else(le(_if_then_else(False, max_col_clue, compare_blocks_cols), max_row_clue), 1, 1), _if_then_else(False, max_col_clue, ones_diff_rows))), zeros_diff_rows), le(2, _if_then_else(True, compare_blocks_rows, zeros_diff_cols))))
VAL TREES:
mul(mul(zeros_diff_rows, mul(zeros_diff_cols, zeros_diff_rows)), add(add(zeros_diff_cols, ones_diff_cols), ones_diff_rows))
mul(mul(ones_diff_cols, zeros_diff_rows), add(add(compare_blocks_rows, ones_diff_rows), compare_blocks_cols))
mul(add(mul(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, zeros_diff_rows)), mul(add(zeros_diff_rows, ones_diff_rows), add(ones_diff_cols, compare_blocks_rows)))
add(add(mul(mul(add(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_rows)), mul(mul(compare_blocks_rows, -60), add(compare_blocks_cols, -25))), add(mul(mul(-46, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_cols)), mul(add(zeros_diff_cols, 97), mul(zeros_diff_cols, zeros_diff_cols)))), mul(mul(mul(add(ones_diff_rows, ones_diff_cols), mul(-30, zeros_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_rows, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)))))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols))
add(mul(ones_diff_rows, compare_blocks_rows), add(77, zeros_diff_rows))
COND TREES:
and_(ge(_if_then_else(and_(False, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(True, 4, 2)), _if_then_else(True, _if_then_else(True, zeros_diff_rows, 4), _if_then_else(True, ones_diff_cols, max_row_clue))), or_(or_(le(2, max_col_clue), ge(20, 0)), ge(_if_then_else(False, 0, 1), _if_then_else(False, zeros_diff_cols, max_col_clue))))
and_(False, le(max_col_clue, compare_blocks_rows))
or_(and_(ge(_if_then_else(ge(0, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 4, ones_diff_rows)), _if_then_else(False, compare_blocks_rows, 0)), or_(ge(_if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), and_(and_(False, False), ge(zeros_diff_cols, max_col_clue)))), ge(_if_then_else(or_(and_(True, False), and_(False, True)), _if_then_else(ge(4, max_row_clue), _if_then_else(True, 0, -14), _if_then_else(False, max_row_clue, 4)), _if_then_else(le(-27, ones_diff_rows), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(True, 2, max_col_clue))), _if_then_else(and_(le(4, 1), False), _if_then_else(or_(True, True), _if_then_else(False, 2, 4), _if_then_else(True, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, 2), _if_then_else(False, 0, 3)))))
or_(and_(True, or_(True, False)), le(3, _if_then_else(False, 3, 3)))
or_(False, True)
VAL TREES:
add(mul(compare_blocks_cols, zeros_diff_cols), mul(mul(83, ones_diff_cols), compare_blocks_cols))
mul(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows))
add(add(add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(38, ones_diff_rows))), add(mul(add(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), mul(mul(78, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_rows))))
add(add(mul(ones_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(add(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_cols, 17), mul(ones_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, ones_diff_rows), add(7, zeros_diff_cols)))
add(mul(mul(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(83, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows)))
COND TREES:
or_(le(max_col_clue, zeros_diff_rows), le(compare_blocks_rows, _if_then_else(le(ones_diff_cols, ones_diff_rows), 1, 4)))
or_(le(max_col_clue, _if_then_else(le(max_col_clue, _if_then_else(False, max_col_clue, 2)), max_col_clue, 2)), True)
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), _if_then_else(or_(and_(ge(_if_then_else(and_(False, False), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(False, 2, 4)), _if_then_else(or_(True, True), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, 3, -9))), or_(or_(or_(False, True), le(2, 3)), and_(and_(True, True), and_(False, False)))), and_(and_(or_(le(4, 0), or_(False, True)), le(_if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, 2, ones_diff_cols))), le(_if_then_else(or_(False, True), _if_then_else(True, zeros_diff_cols, -24), _if_then_else(True, ones_diff_cols, ones_diff_cols)), _if_then_else(ge(1, -34), _if_then_else(True, max_row_clue, 25), _if_then_else(False, ones_diff_rows, max_col_clue))))), max_row_clue, 4), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(False, _if_then_else(False, ones_diff_rows, _if_then_else(True, 3, max_row_clue)), 2)), _if_then_else(ge(2, ones_diff_rows), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(False, 4, ones_diff_cols), _if_then_else(False, 3, 3)), le(_if_then_else(True, 0, -77), _if_then_else(False, 3, compare_blocks_rows)))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), max_row_clue), _if_then_else(and_(False, True), _if_then_else(or_(False, True), 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(False, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
ge(zeros_diff_cols, _if_then_else(or_(or_(True, False), True), compare_blocks_rows, 1))
ge(_if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(and_(and_(le(_if_then_else(True, ones_diff_cols, 4), ones_diff_rows), ge(_if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(False, 4, ones_diff_cols))), and_(le(_if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows)), and_(False, and_(False, True)))), zeros_diff_cols, compare_blocks_cols))
or_(True, True)
le(_if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2))
le(_if_then_else(le(compare_blocks_cols, ones_diff_cols), max_row_clue, max_row_clue), _if_then_else(True, zeros_diff_rows, ones_diff_rows))
VAL TREES:
add(mul(ones_diff_rows, zeros_diff_rows), add(-49, zeros_diff_rows))
add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, -94))
mul(mul(zeros_diff_rows, ones_diff_cols), mul(mul(add(61, ones_diff_cols), zeros_diff_cols), ones_diff_rows))
add(mul(zeros_diff_cols, mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), 67))
mul(add(zeros_diff_rows, -21), add(zeros_diff_rows, zeros_diff_cols))
add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols))
COND TREES:
ge(_if_then_else(False, zeros_diff_rows, 32), _if_then_else(and_(True, False), compare_blocks_cols, max_col_clue))
ge(_if_then_else(ge(_if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(and_(ge(ones_diff_cols, 4), False), _if_then_else(False, _if_then_else(False, zeros_diff_rows, 4), zeros_diff_cols), _if_then_else(True, max_row_clue, zeros_diff_rows))), _if_then_else(and_(False, False), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(and_(le(-12, 44), and_(True, False)), _if_then_else(True, compare_blocks_rows, 3), _if_then_else(True, max_col_clue, 0))), _if_then_else(le(-66, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, 4), _if_then_else(False, max_row_clue, 4))), _if_then_else(le(_if_then_else(True, max_row_clue, max_row_clue), zeros_diff_rows), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, max_col_clue, 3)), _if_then_else(le(compare_blocks_cols, 3), _if_then_else(True, compare_blocks_rows, zeros_diff_cols), _if_then_else(le(_if_then_else(False, 3, 15), 3), zeros_diff_cols, 0))))
le(_if_then_else(False, compare_blocks_cols, _if_then_else(False, compare_blocks_cols, ones_diff_cols)), _if_then_else(or_(le(_if_then_else(True, 0, max_col_clue), _if_then_else(False, max_col_clue, compare_blocks_cols)), and_(ge(4, 2), le(max_row_clue, zeros_diff_rows))), _if_then_else(or_(and_(True, False), ge(2, 1)), _if_then_else(or_(True, False), _if_then_else(False, 89, zeros_diff_cols), _if_then_else(True, 1, max_col_clue)), _if_then_else(le(12, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, compare_blocks_rows, 1))), _if_then_else(le(_if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, 1, -86)), _if_then_else(or_(False, True), _if_then_else(False, -91, max_row_clue), _if_then_else(True, ones_diff_rows, max_col_clue)), _if_then_else(and_(False, False), _if_then_else(True, 0, ones_diff_cols), _if_then_else(True, zeros_diff_rows, ones_diff_rows)))))
or_(or_(False, True), and_(or_(le(zeros_diff_rows, zeros_diff_cols), ge(_if_then_else(ge(_if_then_else(False, _if_then_else(and_(or_(False, False), False), _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, _if_then_else(False, max_row_clue, max_col_clue))), -99), _if_then_else(False, 2, 1)), _if_then_else(or_(True, True), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(False, -31, 1)), _if_then_else(and_(True, False), _if_then_else(True, 3, 4), _if_then_else(False, zeros_diff_rows, 2))), 4)), False))
or_(or_(or_(le(_if_then_else(and_(True, True), 64, compare_blocks_cols), _if_then_else(True, max_row_clue, 3)), or_(le(ones_diff_rows, 0), and_(or_(le(4, -11), False), True))), False), True)
VAL TREES:
add(mul(mul(add(add(ones_diff_rows, -79), add(ones_diff_rows, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols))), mul(add(mul(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_cols)), mul(mul(-30, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)))), add(add(mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)), add(add(compare_blocks_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_rows))), mul(mul(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_cols)))))
add(mul(add(ones_diff_cols, ones_diff_rows), ones_diff_cols), add(ones_diff_cols, compare_blocks_cols))
add(mul(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, add(zeros_diff_rows, compare_blocks_rows)))
add(add(ones_diff_cols, add(compare_blocks_rows, compare_blocks_cols)), mul(zeros_diff_rows, add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(mul(ones_diff_rows, -100), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_cols))), mul(mul(mul(zeros_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_cols, compare_blocks_cols))))
add(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols))
COND TREES:
or_(and_(False, True), le(_if_then_else(True, compare_blocks_rows, _if_then_else(False, max_row_clue, max_row_clue)), 0))
le(ones_diff_cols, _if_then_else(or_(True, True), compare_blocks_rows, 0))
ge(_if_then_else(False, max_row_clue, _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, -70), _if_then_else(True, 3, ones_diff_rows))), _if_then_else(or_(False, and_(False, True)), compare_blocks_cols, zeros_diff_rows))
or_(False, ge(compare_blocks_cols, zeros_diff_rows))
and_(or_(or_(False, True), True), or_(or_(ge(ones_diff_rows, -32), True), True))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(add(-22, compare_blocks_rows), add(ones_diff_cols, compare_blocks_cols)))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), mul(add(add(mul(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), add(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, ones_diff_cols))), mul(add(add(-38, zeros_diff_cols), mul(-65, ones_diff_rows)), mul(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, zeros_diff_rows))))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(mul(mul(ones_diff_cols, 70), add(zeros_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_cols)))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_rows, 72))))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
or_(le(max_col_clue, zeros_diff_rows), False)
or_(le(max_col_clue, 2), ge(ones_diff_cols, zeros_diff_cols))
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), _if_then_else(le(max_col_clue, 4), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, max_row_clue, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(False, _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, 3, max_col_clue)), ge(4, compare_blocks_rows))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, False), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(or_(False, True), zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)))), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
or_(ge(max_col_clue, compare_blocks_rows), le(zeros_diff_rows, 4))
le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, _if_then_else(ge(_if_then_else(or_(False, True), _if_then_else(False, 1, max_col_clue), _if_then_else(True, compare_blocks_cols, 2)), _if_then_else(and_(False, False), _if_then_else(False, 3, 0), _if_then_else(True, ones_diff_cols, zeros_diff_cols))), _if_then_else(le(_if_then_else(True, 4, zeros_diff_rows), _if_then_else(True, 25, 2)), _if_then_else(and_(False, False), _if_then_else(True, max_row_clue, zeros_diff_rows), _if_then_else(True, 1, ones_diff_cols)), _if_then_else(and_(False, False), _if_then_else(False, 1, compare_blocks_cols), _if_then_else(True, 1, compare_blocks_cols))), _if_then_else(le(_if_then_else(True, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 1)), _if_then_else(le(compare_blocks_cols, max_col_clue), _if_then_else(True, 3, 2), _if_then_else(False, 3, 1)), _if_then_else(le(compare_blocks_cols, 3), _if_then_else(False, 3, max_row_clue), _if_then_else(False, max_row_clue, max_row_clue)))), ones_diff_cols))
ge(_if_then_else(True, max_row_clue, ones_diff_cols), _if_then_else(ge(32, -44), compare_blocks_cols, compare_blocks_cols))
or_(le(2, -26), and_(or_(True, False), le(0, 2)))
and_(or_(False, True), ge(_if_then_else(le(_if_then_else(ge(3, max_row_clue), _if_then_else(True, 0, 4), _if_then_else(True, compare_blocks_cols, 4)), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, -10))), _if_then_else(and_(le(4, compare_blocks_rows), ge(zeros_diff_cols, 48)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, 0, max_col_clue)), _if_then_else(le(max_col_clue, 3), _if_then_else(True, max_col_clue, 4), _if_then_else(False, 3, max_col_clue))), _if_then_else(ge(_if_then_else(True, ones_diff_rows, -27), _if_then_else(False, max_col_clue, zeros_diff_rows)), _if_then_else(and_(True, True), _if_then_else(True, compare_blocks_rows, 4), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(le(1, 2), _if_then_else(False, 4, max_col_clue), _if_then_else(True, ones_diff_rows, -6)))), _if_then_else(ge(_if_then_else(and_(True, False), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, max_row_clue)), _if_then_else(ge(max_row_clue, zeros_diff_rows), _if_then_else(False, 2, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_rows))), _if_then_else(or_(le(2, 3), and_(True, False)), _if_then_else(and_(True, False), _if_then_else(False, 0, 72), _if_then_else(False, 2, 2)), _if_then_else(or_(True, True), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, ones_diff_rows, ones_diff_cols))), _if_then_else(and_(le(0, 3), le(ones_diff_rows, 4)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(False, 1, 2), _if_then_else(True, 2, ones_diff_rows)), _if_then_else(le(max_row_clue, 0), _if_then_else(False, max_col_clue, max_col_clue), _if_then_else(False, max_col_clue, 27))))))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
ge(zeros_diff_cols, _if_then_else(and_(and_(ge(ones_diff_cols, zeros_diff_rows), or_(or_(True, False), True)), False), max_row_clue, 1))
ge(_if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(and_(and_(le(_if_then_else(True, ones_diff_cols, 4), _if_then_else(False, zeros_diff_rows, 4)), ge(_if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(False, _if_then_else(True, max_col_clue, compare_blocks_rows), ones_diff_cols))), and_(le(_if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows)), and_(and_(True, True), and_(False, True)))), zeros_diff_cols, compare_blocks_cols))
or_(ge(1, _if_then_else(and_(True, True), _if_then_else(True, 3, 3), _if_then_else(False, zeros_diff_rows, ones_diff_rows))), False)
le(_if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(or_(le(zeros_diff_rows, compare_blocks_cols), ge(1, 3)), zeros_diff_rows, zeros_diff_cols))
le(_if_then_else(False, _if_then_else(ge(56, max_row_clue), _if_then_else(True, _if_then_else(le(_if_then_else(False, 4, compare_blocks_rows), 0), 2, -54), max_row_clue), _if_then_else(le(2, _if_then_else(False, ones_diff_rows, 11)), ones_diff_cols, 2)), max_row_clue), _if_then_else(False, ones_diff_rows, -67))
VAL TREES:
add(mul(ones_diff_rows, zeros_diff_rows), add(-49, zeros_diff_rows))
add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, -94))
mul(mul(zeros_diff_rows, ones_diff_cols), mul(mul(add(61, ones_diff_cols), zeros_diff_cols), ones_diff_rows))
add(mul(zeros_diff_cols, mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), 67))
mul(add(zeros_diff_rows, -21), add(zeros_diff_rows, zeros_diff_cols))
add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols))
COND TREES:
or_(or_(or_(ge(ones_diff_rows, 0), False), True), or_(le(_if_then_else(True, max_row_clue, 1), _if_then_else(False, ones_diff_cols, max_row_clue)), and_(le(ones_diff_rows, 2), le(2, ones_diff_cols))))
le(_if_then_else(False, 94, compare_blocks_rows), _if_then_else(or_(and_(ge(_if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), le(_if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, compare_blocks_rows))), and_(False, False)), compare_blocks_cols, ones_diff_cols))
ge(_if_then_else(or_(le(_if_then_else(or_(True, False), max_row_clue, 70), _if_then_else(le(_if_then_else(and_(False, False), _if_then_else(False, compare_blocks_cols, 4), _if_then_else(False, zeros_diff_cols, ones_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, max_col_clue, 4), _if_then_else(True, max_row_clue, zeros_diff_rows))), _if_then_else(or_(le(zeros_diff_cols, max_col_clue), or_(False, False)), _if_then_else(le(3, compare_blocks_cols), _if_then_else(False, max_col_clue, 0), _if_then_else(True, 4, compare_blocks_cols)), _if_then_else(and_(False, True), _if_then_else(True, 2, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 2))), _if_then_else(or_(or_(False, True), ge(0, 1)), _if_then_else(ge(4, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 3)), _if_then_else(ge(2, max_row_clue), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(False, 72, max_col_clue))))), False), max_row_clue, ones_diff_cols), _if_then_else(True, max_row_clue, compare_blocks_cols))
or_(le(zeros_diff_cols, -26), and_(or_(True, le(_if_then_else(True, 0, -77), _if_then_else(False, 3, zeros_diff_rows))), or_(or_(ge(_if_then_else(ge(max_col_clue, zeros_diff_cols), _if_then_else(False, 2, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, 3)), _if_then_else(and_(False, True), _if_then_else(True, compare_blocks_cols, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows))), ge(_if_then_else(ge(zeros_diff_rows, zeros_diff_rows), _if_then_else(True, max_col_clue, 1), _if_then_else(False, ones_diff_rows, zeros_diff_rows)), _if_then_else(le(-20, compare_blocks_cols), _if_then_else(False, 1, compare_blocks_cols), _if_then_else(False, 4, 3)))), or_(ge(_if_then_else(le(ones_diff_rows, 0), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, -96, 1)), _if_then_else(or_(False, False), _if_then_else(True, 0, 3), _if_then_else(True, _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_cols, max_row_clue), _if_then_else(True, 4, 3)), -64))), le(_if_then_else(and_(True, False), _if_then_else(False, max_row_clue, 3), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_cols, 72), _if_then_else(True, compare_blocks_rows, 4)))))))
and_(le(1, _if_then_else(False, zeros_diff_rows, max_col_clue)), or_(le(max_col_clue, compare_blocks_rows), or_(True, False)))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
or_(and_(and_(True, False), and_(False, True)), and_(False, le(ones_diff_cols, compare_blocks_cols)))
le(_if_then_else(False, 4, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_cols))
and_(and_(False, False), and_(True, True))
le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(True, 1, zeros_diff_rows))
and_(True, False)
VAL TREES:
add(add(ones_diff_rows, mul(compare_blocks_cols, compare_blocks_rows)), add(add(-50, compare_blocks_rows), -29))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_rows)))
add(add(add(-63, zeros_diff_cols), mul(49, 62)), mul(-33, compare_blocks_rows))
add(add(zeros_diff_rows, zeros_diff_cols), add(mul(add(compare_blocks_cols, mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_rows))), add(zeros_diff_cols, ones_diff_cols)), ones_diff_cols))
add(add(compare_blocks_cols, zeros_diff_rows), add(42, mul(add(add(mul(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, -46), mul(compare_blocks_rows, 43))), mul(add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_rows))))))
add(add(7, zeros_diff_rows), mul(mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)), ones_diff_rows))
COND TREES:
or_(and_(and_(True, False), ge(_if_then_else(or_(le(_if_then_else(or_(False, True), 3, 3), _if_then_else(False, ones_diff_rows, max_row_clue)), False), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(1, 3), _if_then_else(True, max_row_clue, 2), _if_then_else(False, max_row_clue, zeros_diff_rows)))), and_(False, le(ones_diff_cols, compare_blocks_cols)))
le(_if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(ge(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, ones_diff_rows), _if_then_else(False, -1, ones_diff_rows)), _if_then_else(ge(zeros_diff_cols, ones_diff_rows), _if_then_else(True, ones_diff_rows, 0), _if_then_else(True, 86, 2))), 1, zeros_diff_cols))
and_(ge(1, 2), and_(ge(ones_diff_rows, ones_diff_rows), le(ones_diff_rows, 3)))
le(_if_then_else(True, 3, _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_cols, max_row_clue), _if_then_else(and_(or_(le(_if_then_else(True, 66, 4), _if_then_else(True, ones_diff_rows, 0)), and_(ge(2, 1), ge(compare_blocks_cols, zeros_diff_rows))), or_(and_(le(zeros_diff_cols, 1), and_(True, False)), le(_if_then_else(True, compare_blocks_rows, 1), _if_then_else(False, 4, 1)))), _if_then_else(le(_if_then_else(or_(False, False), _if_then_else(False, -55, zeros_diff_cols), _if_then_else(True, ones_diff_cols, compare_blocks_cols)), _if_then_else(le(1, 2), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(True, zeros_diff_rows, zeros_diff_cols))), _if_then_else(or_(and_(True, True), or_(False, False)), _if_then_else(le(95, -43), _if_then_else(False, -49, compare_blocks_rows), _if_then_else(False, 1, max_row_clue)), _if_then_else(le(compare_blocks_rows, 3), _if_then_else(False, zeros_diff_rows, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 2))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, -31), _if_then_else(True, 3, 45)), _if_then_else(le(compare_blocks_rows, 1), _if_then_else(True, 4, ones_diff_rows), _if_then_else(False, -74, 3)), _if_then_else(and_(False, True), _if_then_else(True, ones_diff_cols, zeros_diff_cols), _if_then_else(False, max_col_clue, 0)))), _if_then_else(ge(_if_then_else(or_(False, False), _if_then_else(True, 0, zeros_diff_rows), _if_then_else(False, -95, zeros_diff_rows)), _if_then_else(or_(False, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, compare_blocks_cols))), _if_then_else(or_(le(max_col_clue, max_row_clue), ge(max_row_clue, 1)), _if_then_else(le(-99, ones_diff_rows), _if_then_else(False, ones_diff_rows, max_row_clue), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(ge(zeros_diff_rows, max_col_clue), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, 2, max_row_clue))), _if_then_else(or_(le(-48, 1), ge(max_col_clue, max_row_clue)), _if_then_else(or_(or_(and_(True, True), and_(False, False)), False), _if_then_else(False, max_col_clue, zeros_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, 69), _if_then_else(False, 4, compare_blocks_rows))))))), _if_then_else(True, ones_diff_cols, zeros_diff_rows))
and_(le(max_col_clue, _if_then_else(ge(zeros_diff_rows, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, _if_then_else(True, _if_then_else(False, 49, 1), _if_then_else(False, ones_diff_cols, _if_then_else(ge(_if_then_else(False, max_col_clue, max_row_clue), _if_then_else(False, _if_then_else(le(zeros_diff_cols, 1), 1, 4), 3)), max_row_clue, max_col_clue))), max_col_clue))), False)
VAL TREES:
add(add(ones_diff_rows, mul(compare_blocks_cols, compare_blocks_rows)), add(add(-50, compare_blocks_rows), mul(add(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, -63)), add(mul(ones_diff_rows, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_cols)))))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(zeros_diff_cols, 33)), mul(add(ones_diff_cols, 61), add(compare_blocks_rows, ones_diff_cols))), add(mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_cols)), add(add(zeros_diff_cols, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(compare_blocks_cols, compare_blocks_rows)))
add(add(add(-63, add(mul(zeros_diff_rows, zeros_diff_rows), add(add(zeros_diff_cols, zeros_diff_rows), ones_diff_cols))), mul(49, 62)), mul(-33, compare_blocks_rows))
add(add(zeros_diff_rows, zeros_diff_cols), add(mul(add(compare_blocks_cols, mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_rows))), add(zeros_diff_cols, ones_diff_cols)), add(add(add(mul(mul(zeros_diff_rows, zeros_diff_rows), mul(-1, zeros_diff_cols)), add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows))), mul(add(mul(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_rows, zeros_diff_rows)), add(add(-16, zeros_diff_rows), mul(-25, 91)))), mul(add(mul(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)), mul(add(-8, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))))))
add(add(compare_blocks_cols, zeros_diff_rows), add(42, mul(add(add(mul(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, -46), mul(compare_blocks_rows, 43))), mul(add(add(add(add(mul(mul(add(zeros_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows))), add(add(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_cols)), mul(mul(compare_blocks_rows, -88), add(compare_blocks_rows, compare_blocks_rows)))), mul(mul(mul(add(zeros_diff_rows, zeros_diff_rows), add(ones_diff_cols, compare_blocks_cols)), add(mul(-7, ones_diff_cols), add(zeros_diff_rows, ones_diff_rows))), mul(mul(mul(zeros_diff_cols, zeros_diff_rows), add(-50, zeros_diff_rows)), add(add(ones_diff_cols, zeros_diff_rows), mul(ones_diff_cols, zeros_diff_cols))))), zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_rows))))))
add(add(7, zeros_diff_rows), mul(mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)), ones_diff_rows))
COND TREES:
ge(_if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 2, ones_diff_rows))
and_(ge(_if_then_else(ge(0, zeros_diff_cols), zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 1, max_col_clue)), or_(or_(False, True), and_(False, False)))
and_(True, le(_if_then_else(False, max_row_clue, 70), 53))
ge(zeros_diff_rows, _if_then_else(False, _if_then_else(and_(False, False), 2, _if_then_else(le(_if_then_else(True, 0, -77), _if_then_else(False, 3, compare_blocks_rows)), compare_blocks_rows, 4)), ones_diff_rows))
and_(le(_if_then_else(False, max_col_clue, compare_blocks_cols), max_row_clue), or_(le(zeros_diff_cols, max_col_clue), False))
VAL TREES:
mul(mul(zeros_diff_cols, compare_blocks_cols), add(mul(zeros_diff_cols, add(compare_blocks_cols, zeros_diff_cols)), compare_blocks_cols))
mul(mul(add(add(ones_diff_rows, 13), compare_blocks_rows), add(compare_blocks_cols, mul(-28, ones_diff_rows))), add(ones_diff_cols, -82))
add(mul(zeros_diff_cols, add(zeros_diff_cols, compare_blocks_rows)), mul(compare_blocks_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_cols))
add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))
mul(add(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, -66))
COND TREES:
ge(_if_then_else(and_(ge(_if_then_else(le(2, -90), _if_then_else(True, _if_then_else(True, 0, 0), max_col_clue), 36), _if_then_else(False, 0, 0)), False), ones_diff_cols, max_col_clue), _if_then_else(False, 2, max_col_clue))
and_(ge(2, _if_then_else(False, 1, max_col_clue)), or_(or_(False, or_(and_(ge(4, max_row_clue), le(compare_blocks_rows, _if_then_else(True, zeros_diff_cols, zeros_diff_cols))), and_(ge(_if_then_else(True, _if_then_else(False, ones_diff_rows, max_col_clue), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(False, max_row_clue, compare_blocks_cols)), True))), and_(False, False)))
and_(True, le(_if_then_else(and_(le(_if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(True, zeros_diff_cols, max_row_clue)), ge(_if_then_else(False, max_row_clue, 4), _if_then_else(True, max_col_clue, 4))), _if_then_else(le(_if_then_else(and_(le(_if_then_else(True, max_row_clue, max_row_clue), _if_then_else(True, 0, ones_diff_cols)), le(_if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(True, ones_diff_rows, max_row_clue))), _if_then_else(and_(and_(True, False), and_(True, True)), _if_then_else(le(2, 0), _if_then_else(True, 0, zeros_diff_cols), _if_then_else(False, 1, 2)), _if_then_else(ge(compare_blocks_rows, -74), _if_then_else(True, 4, compare_blocks_cols), _if_then_else(True, 2, -19))), _if_then_else(ge(_if_then_else(False, 1, zeros_diff_cols), _if_then_else(False, 2, 4)), _if_then_else(or_(False, False), _if_then_else(False, 0, compare_blocks_cols), _if_then_else(True, max_row_clue, 1)), _if_then_else(or_(False, False), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, 0)))), _if_then_else(True, compare_blocks_cols, 2)), _if_then_else(and_(False, False), _if_then_else(False, 0, 3), _if_then_else(True, max_row_clue, 3)), _if_then_else(and_(False, False), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, ones_diff_rows, ones_diff_cols))), _if_then_else(or_(le(max_row_clue, ones_diff_cols), and_(True, False)), _if_then_else(and_(True, False), _if_then_else(or_(and_(le(0, max_col_clue), False), le(2, 1)), compare_blocks_rows, ones_diff_rows), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(ge(4, 1), _if_then_else(True, 1, ones_diff_rows), _if_then_else(False, 2, 3)))), 53))
ge(zeros_diff_rows, _if_then_else(le(_if_then_else(False, 5, _if_then_else(False, 3, 1)), _if_then_else(ge(max_col_clue, max_col_clue), ones_diff_cols, 4)), _if_then_else(and_(False, False), 2, _if_then_else(le(1, _if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(False, 1, -75), _if_then_else(True, 2, 63)), _if_then_else(or_(False, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, 1, max_col_clue))), 3, zeros_diff_rows)), compare_blocks_rows, 4)), ones_diff_rows))
and_(True, or_(or_(ge(_if_then_else(or_(and_(True, True), or_(False, False)), _if_then_else(le(compare_blocks_cols, compare_blocks_cols), _if_then_else(False, max_col_clue, 2), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(and_(True, False), _if_then_else(True, 14, ones_diff_rows), _if_then_else(False, compare_blocks_cols, 0))), _if_then_else(or_(and_(True, True), or_(False, True)), _if_then_else(or_(False, False), _if_then_else(True, 4, ones_diff_rows), _if_then_else(True, max_row_clue, 2)), _if_then_else(and_(False, True), _if_then_else(True, 3, 0), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)))), and_(ge(_if_then_else(ge(compare_blocks_cols, -53), _if_then_else(False, 4, 0), _if_then_else(False, zeros_diff_cols, max_col_clue)), _if_then_else(or_(True, False), _if_then_else(False, max_col_clue, -76), _if_then_else(False, max_row_clue, max_col_clue))), le(_if_then_else(ge(zeros_diff_cols, max_col_clue), _if_then_else(True, zeros_diff_cols, ones_diff_cols), _if_then_else(True, compare_blocks_cols, -81)), _if_then_else(le(3, max_row_clue), _if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_rows, max_row_clue))))), ge(compare_blocks_rows, ones_diff_rows)))
VAL TREES:
mul(mul(zeros_diff_cols, compare_blocks_cols), add(mul(zeros_diff_cols, add(compare_blocks_cols, zeros_diff_cols)), compare_blocks_cols))
mul(mul(add(add(ones_diff_rows, 13), compare_blocks_rows), add(compare_blocks_cols, mul(-28, ones_diff_rows))), add(ones_diff_cols, -82))
add(mul(zeros_diff_cols, add(zeros_diff_cols, compare_blocks_rows)), mul(compare_blocks_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_cols))
add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))
mul(add(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, -66))
COND TREES:
or_(or_(True, ge(max_col_clue, compare_blocks_cols)), or_(and_(False, False), False))
and_(le(zeros_diff_cols, _if_then_else(ge(0, zeros_diff_cols), zeros_diff_cols, zeros_diff_cols)), True)
or_(or_(False, False), le(_if_then_else(and_(or_(True, False), False), max_col_clue, _if_then_else(True, ones_diff_cols, ones_diff_cols)), compare_blocks_rows))
and_(le(_if_then_else(False, 4, _if_then_else(and_(or_(and_(False, True), False), le(1, 3)), ones_diff_rows, 3)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(False, 4, ones_diff_cols), _if_then_else(True, 1, 1))), and_(or_(le(zeros_diff_cols, compare_blocks_rows), or_(False, True)), or_(le(_if_then_else(False, -42, zeros_diff_cols), _if_then_else(False, 4, compare_blocks_rows)), and_(True, False))))
le(_if_then_else(or_(False, False), _if_then_else(True, 1, ones_diff_cols), ones_diff_cols), _if_then_else(and_(True, True), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(True, 53, zeros_diff_rows)))
VAL TREES:
mul(mul(add(mul(-51, compare_blocks_cols), add(ones_diff_cols, 58)), mul(mul(zeros_diff_rows, zeros_diff_rows), add(compare_blocks_cols, 19))), mul(add(add(69, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(-83, 36), add(-91, zeros_diff_cols))))
mul(mul(mul(-86, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)))
add(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols))
mul(add(mul(ones_diff_cols, -1), ones_diff_cols), add(add(compare_blocks_cols, ones_diff_rows), zeros_diff_cols))
add(mul(compare_blocks_cols, compare_blocks_cols), add(mul(ones_diff_rows, add(ones_diff_rows, zeros_diff_cols)), zeros_diff_cols))
add(mul(mul(zeros_diff_cols, zeros_diff_cols), compare_blocks_rows), mul(ones_diff_rows, add(zeros_diff_rows, zeros_diff_rows)))
COND TREES:
ge(_if_then_else(or_(False, or_(True, False)), max_col_clue, -96), _if_then_else(True, max_row_clue, 3))
and_(ge(ones_diff_cols, compare_blocks_rows), le(max_col_clue, compare_blocks_rows))
or_(and_(ge(_if_then_else(ge(0, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 4, ones_diff_rows)), _if_then_else(False, compare_blocks_rows, 0)), or_(ge(_if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), and_(and_(False, False), ge(zeros_diff_cols, max_col_clue)))), ge(_if_then_else(or_(and_(True, False), and_(False, True)), _if_then_else(ge(4, max_row_clue), _if_then_else(True, 0, -14), _if_then_else(False, max_row_clue, 4)), _if_then_else(le(-27, ones_diff_rows), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(True, 2, max_col_clue))), _if_then_else(and_(True, or_(and_(ge(_if_then_else(False, _if_then_else(True, compare_blocks_rows, 2), _if_then_else(False, 2, 4)), _if_then_else(or_(True, True), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, 3, -9))), or_(or_(or_(False, True), le(2, 3)), and_(and_(True, True), and_(False, False)))), and_(and_(or_(le(4, 0), or_(False, True)), le(_if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, 2, ones_diff_cols))), le(_if_then_else(or_(False, True), _if_then_else(True, zeros_diff_cols, -24), _if_then_else(True, ones_diff_cols, ones_diff_cols)), _if_then_else(ge(1, -34), _if_then_else(True, max_row_clue, 25), _if_then_else(False, ones_diff_rows, max_col_clue)))))), _if_then_else(or_(True, True), _if_then_else(False, 2, 4), _if_then_else(True, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, 2), _if_then_else(False, 0, 3)))))
or_(le(1, _if_then_else(False, _if_then_else(True, 0, max_col_clue), _if_then_else(True, 4, 3))), le(ones_diff_cols, compare_blocks_rows))
or_(le(-67, 2), True)
VAL TREES:
add(mul(compare_blocks_cols, zeros_diff_cols), mul(mul(83, ones_diff_cols), compare_blocks_cols))
mul(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows))
add(add(add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(38, ones_diff_rows))), add(mul(add(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), mul(mul(78, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_rows))))
add(add(mul(ones_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(add(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_cols, 17), mul(ones_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, ones_diff_rows), add(7, zeros_diff_cols)))
add(mul(mul(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(83, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows)))
COND TREES:
ge(4, _if_then_else(or_(and_(or_(or_(and_(False, True), ge(0, compare_blocks_rows)), le(_if_then_else(False, 3, zeros_diff_rows), _if_then_else(True, 4, zeros_diff_rows))), le(_if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, max_col_clue, max_row_clue)), _if_then_else(or_(True, True), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(True, 3, max_row_clue)))), False), compare_blocks_rows, max_row_clue))
ge(_if_then_else(and_(False, False), compare_blocks_rows, max_col_clue), _if_then_else(ge(0, _if_then_else(and_(or_(le(_if_then_else(True, zeros_diff_rows, 3), _if_then_else(False, 4, 0)), le(_if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(True, 1, ones_diff_rows))), or_(le(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(True, 3, ones_diff_cols)), or_(le(max_row_clue, zeros_diff_rows), or_(False, False)))), _if_then_else(le(_if_then_else(and_(False, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, 4, max_col_clue)), _if_then_else(ge(compare_blocks_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, ones_diff_cols, 3))), _if_then_else(or_(ge(0, -7), or_(False, False)), _if_then_else(and_(True, False), _if_then_else(False, 3, max_col_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, 0, 1), _if_then_else(False, 1, 0))), _if_then_else(ge(_if_then_else(True, ones_diff_rows, 2), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, 0), _if_then_else(True, 3, ones_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(False, 2, max_col_clue)))), _if_then_else(and_(or_(and_(True, True), ge(compare_blocks_cols, 2)), ge(_if_then_else(False, 4, 1), _if_then_else(True, -35, max_row_clue))), _if_then_else(or_(or_(False, True), or_(False, True)), _if_then_else(ge(3, zeros_diff_rows), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 0, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, ones_diff_cols, 2))), _if_then_else(ge(_if_then_else(False, 3, zeros_diff_cols), _if_then_else(True, max_row_clue, 4)), _if_then_else(le(compare_blocks_rows, 3), _if_then_else(False, max_row_clue, -44), _if_then_else(True, max_col_clue, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(True, 1, ones_diff_rows), _if_then_else(True, -10, compare_blocks_rows)))))), zeros_diff_cols, compare_blocks_cols))
or_(le(_if_then_else(True, compare_blocks_rows, 1), _if_then_else(False, ones_diff_rows, 4)), le(max_col_clue, compare_blocks_cols))
le(_if_then_else(and_(or_(True, and_(False, True)), or_(True, True)), 2, _if_then_else(False, _if_then_else(True, _if_then_else(False, 1, ones_diff_rows), ones_diff_rows), 3)), _if_then_else(ge(4, compare_blocks_rows), zeros_diff_rows, 2))
le(3, _if_then_else(and_(True, True), ones_diff_rows, compare_blocks_cols))
VAL TREES:
add(mul(ones_diff_rows, zeros_diff_rows), add(-49, zeros_diff_rows))
add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, -94))
mul(mul(zeros_diff_rows, ones_diff_cols), mul(mul(add(61, ones_diff_cols), zeros_diff_cols), ones_diff_rows))
add(mul(zeros_diff_cols, mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), 67))
mul(add(zeros_diff_rows, -21), add(zeros_diff_rows, zeros_diff_cols))
add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols))
COND TREES:
and_(le(4, zeros_diff_rows), le(max_row_clue, max_row_clue))
ge(24, _if_then_else(True, ones_diff_rows, max_row_clue))
or_(le(_if_then_else(ge(ones_diff_rows, -85), _if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, -14), _if_then_else(True, 0, ones_diff_cols))), or_(and_(or_(False, True), False), and_(or_(False, False), and_(True, True))))
or_(and_(True, ge(3, zeros_diff_rows)), ge(_if_then_else(False, ones_diff_cols, 0), ones_diff_rows))
or_(and_(and_(False, True), True), or_(False, True))
VAL TREES:
add(add(mul(compare_blocks_cols, add(compare_blocks_cols, compare_blocks_cols)), add(compare_blocks_cols, 62)), mul(compare_blocks_cols, zeros_diff_rows))
add(add(add(add(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols))), add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, add(add(mul(ones_diff_cols, 16), mul(compare_blocks_rows, ones_diff_rows)), add(mul(zeros_diff_cols, zeros_diff_rows), add(ones_diff_cols, compare_blocks_cols))))), add(add(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols))))
add(mul(zeros_diff_cols, 30), add(mul(add(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_cols, ones_diff_cols)), ones_diff_rows))
add(mul(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols))
add(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows))
add(mul(add(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_rows)), mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, -54))), add(add(mul(zeros_diff_rows, zeros_diff_rows), mul(20, ones_diff_cols)), mul(mul(compare_blocks_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))), mul(add(add(mul(mul(ones_diff_cols, 32), mul(ones_diff_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), mul(13, zeros_diff_cols))), mul(add(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, ones_diff_cols))), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows)))))
COND TREES:
and_(ge(_if_then_else(and_(False, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(True, 4, 2)), _if_then_else(le(ones_diff_cols, ones_diff_rows), _if_then_else(True, zeros_diff_rows, 4), _if_then_else(True, ones_diff_cols, max_row_clue))), or_(or_(le(2, max_col_clue), ge(20, 0)), ge(_if_then_else(False, 0, 1), _if_then_else(False, zeros_diff_cols, max_col_clue))))
and_(False, le(max_col_clue, compare_blocks_rows))
or_(and_(ge(_if_then_else(ge(0, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 4, ones_diff_rows)), _if_then_else(False, compare_blocks_rows, 0)), or_(ge(_if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), and_(and_(False, False), ge(zeros_diff_cols, max_col_clue)))), ge(_if_then_else(or_(and_(True, False), and_(False, True)), _if_then_else(ge(4, max_row_clue), _if_then_else(True, 0, -14), _if_then_else(False, max_row_clue, 4)), _if_then_else(le(-27, ones_diff_rows), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(True, 2, max_col_clue))), _if_then_else(and_(le(4, 1), or_(and_(ge(_if_then_else(and_(False, False), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(False, 2, 4)), _if_then_else(or_(True, True), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, 3, -9))), or_(or_(or_(False, True), le(2, 3)), and_(and_(True, True), and_(False, False)))), and_(and_(or_(le(4, 0), or_(False, True)), le(_if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, 2, ones_diff_cols))), le(_if_then_else(or_(False, True), _if_then_else(True, zeros_diff_cols, -24), _if_then_else(True, ones_diff_cols, ones_diff_cols)), _if_then_else(ge(1, -34), _if_then_else(True, max_row_clue, 25), _if_then_else(False, ones_diff_rows, max_col_clue)))))), _if_then_else(or_(True, True), _if_then_else(False, 2, 4), _if_then_else(True, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, 2), _if_then_else(False, 0, 3)))))
or_(and_(True, or_(True, False)), le(3, 4))
or_(or_(False, True), True)
VAL TREES:
add(mul(compare_blocks_cols, zeros_diff_cols), mul(mul(83, ones_diff_cols), compare_blocks_cols))
mul(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows))
add(add(add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(38, ones_diff_rows))), add(mul(add(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), mul(mul(78, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_rows))))
add(add(mul(ones_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(add(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_cols, 17), mul(ones_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, ones_diff_rows), add(7, zeros_diff_cols)))
add(mul(mul(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(83, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows)))
COND TREES:
and_(or_(True, ge(zeros_diff_rows, 0)), le(max_row_clue, ones_diff_cols))
ge(_if_then_else(False, compare_blocks_rows, _if_then_else(True, 4, 3)), zeros_diff_rows)
or_(le(_if_then_else(ge(ones_diff_rows, -85), _if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, ones_diff_cols)), 4), or_(and_(or_(False, True), or_(False, True)), and_(or_(False, False), and_(True, True))))
or_(and_(True, ge(3, zeros_diff_rows)), False)
or_(and_(and_(le(max_col_clue, 0), False), False), or_(True, True))
VAL TREES:
add(mul(ones_diff_cols, 52), mul(compare_blocks_cols, zeros_diff_rows))
add(add(add(add(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols))), add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols))))
add(mul(zeros_diff_cols, 30), add(zeros_diff_rows, ones_diff_rows))
add(mul(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols))
add(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows))
add(mul(add(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_rows)), mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, -54))), add(add(mul(zeros_diff_rows, zeros_diff_rows), mul(20, ones_diff_cols)), mul(mul(compare_blocks_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))), mul(add(add(mul(42, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, ones_diff_cols))), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows)))))
COND TREES:
or_(le(max_col_clue, zeros_diff_rows), le(compare_blocks_rows, 4))
or_(True, ge(0, zeros_diff_cols))
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), _if_then_else(le(max_col_clue, 4), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, max_row_clue, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(ge(2, ones_diff_rows), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, 3, compare_blocks_rows)), le(_if_then_else(True, compare_blocks_rows, -77), _if_then_else(False, 3, compare_blocks_rows)))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, ones_diff_rows, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
and_(ge(_if_then_else(and_(False, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(True, 4, 2)), _if_then_else(le(ones_diff_cols, ones_diff_rows), _if_then_else(True, zeros_diff_rows, 4), _if_then_else(True, ones_diff_cols, max_row_clue))), or_(or_(le(2, _if_then_else(True, zeros_diff_rows, max_col_clue)), ge(20, 0)), ge(_if_then_else(False, 0, 1), _if_then_else(False, zeros_diff_cols, max_col_clue))))
and_(False, or_(or_(and_(True, True), and_(True, False)), le(_if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_cols))))
or_(and_(ge(_if_then_else(ge(0, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 4, ones_diff_rows)), _if_then_else(False, compare_blocks_rows, 0)), or_(ge(_if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), and_(and_(False, False), ge(zeros_diff_cols, max_col_clue)))), ge(_if_then_else(or_(and_(True, False), and_(False, True)), _if_then_else(ge(4, max_row_clue), _if_then_else(True, 0, -14), _if_then_else(False, max_row_clue, 4)), _if_then_else(le(-27, ones_diff_rows), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(True, 2, max_col_clue))), _if_then_else(and_(le(4, 1), or_(and_(ge(_if_then_else(and_(False, False), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(False, 2, 4)), _if_then_else(or_(True, True), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, 3, -9))), or_(or_(or_(False, True), le(2, 3)), and_(and_(True, True), and_(False, False)))), and_(and_(or_(le(4, 0), or_(False, True)), le(_if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, 2, ones_diff_cols))), le(_if_then_else(or_(False, True), _if_then_else(True, zeros_diff_cols, -24), _if_then_else(ge(_if_then_else(False, 1, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue)), ones_diff_cols, ones_diff_cols)), _if_then_else(ge(1, -34), _if_then_else(True, max_row_clue, 25), _if_then_else(False, ones_diff_rows, max_col_clue)))))), _if_then_else(or_(True, True), _if_then_else(False, 2, 4), _if_then_else(True, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, 2), _if_then_else(False, 0, 3)))))
or_(and_(True, or_(True, False)), le(3, 4))
or_(le(zeros_diff_rows, max_col_clue), True)
VAL TREES:
add(mul(compare_blocks_cols, zeros_diff_cols), mul(mul(83, ones_diff_cols), compare_blocks_cols))
mul(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows))
add(add(add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(38, ones_diff_rows))), add(mul(add(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), mul(mul(78, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_rows))))
add(add(mul(ones_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(add(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_cols, 17), mul(ones_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, ones_diff_rows), add(7, zeros_diff_cols)))
add(mul(mul(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(83, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows)))
COND TREES:
ge(max_col_clue, _if_then_else(or_(and_(False, True), ge(-12, compare_blocks_rows)), _if_then_else(ge(3, 1), _if_then_else(True, 3, zeros_diff_rows), _if_then_else(True, 3, -20)), _if_then_else(le(2, 3), _if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(False, ones_diff_rows, ones_diff_cols))))
and_(ge(_if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 1, max_col_clue)), or_(or_(or_(False, False), True), or_(ge(_if_then_else(or_(False, True), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(False, 4, max_row_clue)), _if_then_else(ge(4, max_col_clue), _if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, 2, 1))), le(max_col_clue, compare_blocks_rows))))
and_(True, le(_if_then_else(le(_if_then_else(False, max_col_clue, compare_blocks_cols), 1), max_row_clue, 70), 53))
ge(zeros_diff_rows, _if_then_else(False, _if_then_else(and_(False, False), 2, _if_then_else(False, compare_blocks_rows, 4)), 0))
and_(le(_if_then_else(False, max_col_clue, compare_blocks_cols), max_row_clue), or_(or_(False, True), and_(le(3, 1), le(-75, compare_blocks_rows))))
VAL TREES:
mul(mul(zeros_diff_cols, compare_blocks_cols), add(mul(zeros_diff_cols, add(compare_blocks_cols, zeros_diff_cols)), mul(add(zeros_diff_rows, compare_blocks_cols), mul(13, compare_blocks_cols))))
mul(mul(add(add(ones_diff_rows, 13), compare_blocks_rows), add(compare_blocks_cols, mul(add(add(zeros_diff_rows, zeros_diff_cols), mul(-97, 25)), ones_diff_rows))), add(ones_diff_cols, -82))
add(mul(zeros_diff_cols, add(zeros_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, 72)))
mul(mul(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_cols))
mul(mul(ones_diff_cols, ones_diff_cols), add(add(zeros_diff_cols, compare_blocks_cols), -86))
mul(mul(add(add(add(ones_diff_rows, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_rows)), mul(add(ones_diff_cols, -40), mul(ones_diff_rows, compare_blocks_cols))), add(add(mul(65, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_cols)), mul(mul(compare_blocks_rows, ones_diff_cols), add(compare_blocks_rows, -42)))), mul(zeros_diff_rows, -66))
COND TREES:
or_(and_(le(_if_then_else(False, compare_blocks_rows, _if_then_else(False, max_row_clue, max_row_clue)), 0), and_(False, True)), and_(ge(_if_then_else(and_(le(_if_then_else(False, max_col_clue, max_row_clue), _if_then_else(False, max_col_clue, zeros_diff_cols)), ge(_if_then_else(False, 3, 0), _if_then_else(False, max_col_clue, max_col_clue))), _if_then_else(ge(_if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, 1)), _if_then_else(and_(True, True), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(True, -61, 0)), _if_then_else(and_(True, False), _if_then_else(True, 30, 1), _if_then_else(True, max_row_clue, 3))), _if_then_else(ge(_if_then_else(False, 2, 3), _if_then_else(False, 23, ones_diff_rows)), _if_then_else(ge(-67, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(and_(True, True), _if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_rows)))), _if_then_else(le(_if_then_else(le(4, 3), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, 3)), _if_then_else(ge(zeros_diff_rows, 3), _if_then_else(False, 1, compare_blocks_cols), _if_then_else(False, ones_diff_rows, max_row_clue))), _if_then_else(le(_if_then_else(False, -71, ones_diff_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_cols)), _if_then_else(le(4, compare_blocks_cols), _if_then_else(True, max_col_clue, 3), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), _if_then_else(le(4, ones_diff_cols), _if_then_else(True, 4, 2), _if_then_else(False, max_col_clue, compare_blocks_rows))), _if_then_else(ge(_if_then_else(False, 4, max_row_clue), _if_then_else(False, max_row_clue, 2)), _if_then_else(or_(False, True), _if_then_else(False, max_col_clue, max_row_clue), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(and_(False, False), _if_then_else(False, 3, max_col_clue), _if_then_else(False, 3, max_col_clue))))), le(ones_diff_cols, compare_blocks_cols)))
le(_if_then_else(or_(True, True), compare_blocks_cols, ones_diff_cols), _if_then_else(False, 1, zeros_diff_cols))
and_(and_(and_(le(ones_diff_cols, ones_diff_cols), or_(True, False)), False), and_(False, True))
le(_if_then_else(True, 3, _if_then_else(True, _if_then_else(False, zeros_diff_cols, max_row_clue), _if_then_else(True, 4, 3))), _if_then_else(True, 1, zeros_diff_rows))
and_(le(max_col_clue, compare_blocks_rows), le(_if_then_else(False, compare_blocks_rows, 4), _if_then_else(False, zeros_diff_cols, -96)))
VAL TREES:
add(add(ones_diff_rows, mul(compare_blocks_cols, compare_blocks_rows)), add(add(-50, compare_blocks_rows), -29))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_rows)))
add(add(add(-63, zeros_diff_cols), mul(49, 62)), mul(-33, compare_blocks_rows))
add(add(zeros_diff_rows, zeros_diff_cols), add(mul(add(compare_blocks_cols, mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_rows))), add(zeros_diff_cols, ones_diff_cols)), ones_diff_cols))
add(add(compare_blocks_cols, zeros_diff_rows), add(42, mul(add(add(mul(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, -46), mul(compare_blocks_rows, 43))), mul(add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_rows))))))
add(add(7, zeros_diff_rows), mul(mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)), ones_diff_rows))
COND TREES:
or_(or_(or_(True, False), True), and_(True, False))
le(ones_diff_cols, _if_then_else(False, max_col_clue, compare_blocks_rows))
ge(_if_then_else(False, max_row_clue, _if_then_else(and_(True, False), _if_then_else(True, compare_blocks_rows, -70), _if_then_else(True, 3, ones_diff_rows))), _if_then_else(or_(False, True), compare_blocks_cols, zeros_diff_rows))
or_(and_(True, True), False)
and_(or_(or_(False, True), True), or_(False, True))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(add(-22, compare_blocks_rows), add(ones_diff_cols, compare_blocks_cols)))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), mul(add(add(mul(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), add(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, ones_diff_cols))), mul(add(add(-38, zeros_diff_cols), mul(-65, ones_diff_rows)), mul(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, zeros_diff_rows))))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(mul(mul(ones_diff_cols, 70), add(zeros_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_cols)))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_rows, 72))))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
ge(_if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 2, ones_diff_rows))
and_(ge(_if_then_else(ge(0, zeros_diff_cols), zeros_diff_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, max_col_clue)), or_(or_(False, True), and_(False, False)))
and_(True, le(_if_then_else(False, max_row_clue, 70), 53))
ge(zeros_diff_rows, _if_then_else(False, _if_then_else(and_(False, False), 2, _if_then_else(le(_if_then_else(True, 0, -77), _if_then_else(False, 3, compare_blocks_rows)), compare_blocks_rows, 4)), ones_diff_rows))
and_(le(compare_blocks_cols, max_row_clue), or_(le(zeros_diff_cols, max_col_clue), False))
VAL TREES:
mul(mul(zeros_diff_cols, compare_blocks_cols), add(mul(zeros_diff_cols, add(compare_blocks_cols, zeros_diff_cols)), compare_blocks_cols))
mul(mul(add(add(ones_diff_rows, 13), compare_blocks_rows), add(compare_blocks_cols, mul(-28, ones_diff_rows))), add(ones_diff_cols, -82))
add(mul(zeros_diff_cols, add(zeros_diff_cols, compare_blocks_rows)), mul(compare_blocks_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_cols))
add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))
mul(add(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, -66))
COND TREES:
or_(and_(and_(True, False), and_(False, True)), and_(le(ones_diff_cols, _if_then_else(and_(and_(ge(ones_diff_cols, zeros_diff_rows), le(_if_then_else(le(compare_blocks_rows, _if_then_else(True, max_row_clue, ones_diff_rows)), ones_diff_cols, ones_diff_cols), _if_then_else(False, 2, 4))), False), max_row_clue, 1)), False))
ge(_if_then_else(True, _if_then_else(False, 2, _if_then_else(True, max_col_clue, max_row_clue)), _if_then_else(False, 2, ones_diff_rows)), _if_then_else(True, compare_blocks_rows, 3))
and_(ge(1, _if_then_else(or_(True, False), _if_then_else(True, 74, _if_then_else(False, 0, _if_then_else(False, _if_then_else(True, 2, 0), 0))), _if_then_else(True, _if_then_else(False, _if_then_else(or_(True, False), 4, ones_diff_rows), _if_then_else(False, 1, 1)), zeros_diff_rows))), False)
le(_if_then_else(ge(_if_then_else(ge(_if_then_else(True, _if_then_else(and_(and_(True, True), le(zeros_diff_cols, compare_blocks_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, max_row_clue)), _if_then_else(or_(True, False), _if_then_else(True, max_col_clue, 1), _if_then_else(False, 0, ones_diff_cols))), -77), 3), compare_blocks_rows, 0), 1), 3, 1), _if_then_else(False, ones_diff_cols, zeros_diff_rows))
and_(le(_if_then_else(False, max_col_clue, _if_then_else(False, max_col_clue, compare_blocks_cols)), max_row_clue), False)
VAL TREES:
add(mul(add(mul(zeros_diff_rows, compare_blocks_rows), zeros_diff_rows), ones_diff_cols), mul(zeros_diff_rows, -35))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_rows))
add(mul(ones_diff_rows, ones_diff_cols), mul(-33, compare_blocks_rows))
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols))
add(add(compare_blocks_cols, zeros_diff_rows), add(42, zeros_diff_cols))
add(add(7, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows))
COND TREES:
or_(and_(and_(False, False), and_(False, True)), and_(False, le(ones_diff_cols, compare_blocks_cols)))
le(_if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(and_(False, False), 1, zeros_diff_cols))
and_(ge(1, 2), and_(True, True))
le(_if_then_else(True, 3, _if_then_else(and_(True, le(_if_then_else(True, 0, -77), _if_then_else(or_(le(_if_then_else(False, 3, compare_blocks_cols), zeros_diff_cols), ge(max_col_clue, 4)), 3, compare_blocks_rows))), _if_then_else(False, zeros_diff_cols, max_row_clue), _if_then_else(True, 4, 3))), _if_then_else(True, ones_diff_cols, zeros_diff_rows))
and_(le(max_col_clue, compare_blocks_cols), False)
VAL TREES:
add(mul(add(mul(zeros_diff_rows, compare_blocks_rows), zeros_diff_rows), ones_diff_cols), mul(zeros_diff_rows, -35))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(mul(mul(ones_diff_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), zeros_diff_rows))
add(add(add(-63, zeros_diff_cols), mul(49, 62)), mul(-33, compare_blocks_rows))
add(add(zeros_diff_rows, zeros_diff_cols), add(mul(add(compare_blocks_cols, 2), add(zeros_diff_cols, ones_diff_cols)), ones_diff_cols))
add(add(compare_blocks_cols, zeros_diff_rows), add(42, add(add(add(add(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, 24)), mul(mul(compare_blocks_cols, -41), add(compare_blocks_cols, compare_blocks_rows))), add(add(add(zeros_diff_cols, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), add(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols))))))
add(add(7, zeros_diff_rows), mul(mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)), ones_diff_rows))
COND TREES:
or_(le(max_col_clue, zeros_diff_rows), True)
or_(le(max_col_clue, 2), ge(0, zeros_diff_cols))
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), _if_then_else(le(max_col_clue, 4), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, max_row_clue, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(False, _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(ge(compare_blocks_cols, zeros_diff_rows), 3, max_col_clue)), ge(4, compare_blocks_rows))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(or_(False, True), zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, add(add(compare_blocks_cols, zeros_diff_cols), add(7, zeros_diff_cols)))))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), mul(mul(add(mul(mul(zeros_diff_cols, -45), add(zeros_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), mul(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), add(add(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), add(add(add(add(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_cols))), add(mul(mul(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_cols, ones_diff_rows)))))))
mul(add(-9, zeros_diff_cols), add(mul(55, ones_diff_cols), add(zeros_diff_rows, compare_blocks_cols)))
mul(mul(ones_diff_cols, -5), add(mul(mul(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_cols)), ones_diff_cols))
mul(mul(-76, add(mul(add(compare_blocks_rows, ones_diff_cols), ones_diff_rows), mul(add(compare_blocks_cols, zeros_diff_cols), compare_blocks_rows))), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
or_(or_(True, ge(_if_then_else(ge(1, max_row_clue), compare_blocks_cols, 0), compare_blocks_cols)), or_(and_(False, False), and_(True, or_(or_(le(max_col_clue, zeros_diff_rows), False), True))))
and_(le(zeros_diff_cols, 4), True)
or_(or_(False, False), le(_if_then_else(and_(or_(True, True), False), max_col_clue, _if_then_else(True, ones_diff_rows, max_row_clue)), compare_blocks_rows))
and_(le(_if_then_else(False, _if_then_else(True, ones_diff_rows, 26), _if_then_else(False, ones_diff_rows, 3)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(False, 2, ones_diff_cols), _if_then_else(True, 1, 1))), and_(or_(le(zeros_diff_cols, compare_blocks_rows), or_(False, True)), or_(le(_if_then_else(False, -42, zeros_diff_cols), _if_then_else(False, 4, compare_blocks_rows)), and_(True, False))))
le(_if_then_else(or_(False, False), _if_then_else(True, 1, ones_diff_cols), _if_then_else(True, 3, 4)), zeros_diff_rows)
VAL TREES:
mul(mul(add(mul(-51, compare_blocks_cols), add(ones_diff_cols, 58)), mul(mul(zeros_diff_rows, zeros_diff_rows), add(compare_blocks_cols, 19))), mul(add(add(69, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(-83, 36), add(-91, zeros_diff_cols))))
mul(mul(mul(-86, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)))
add(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols))
mul(add(mul(ones_diff_cols, -1), ones_diff_cols), add(add(compare_blocks_cols, ones_diff_rows), zeros_diff_cols))
add(mul(compare_blocks_cols, compare_blocks_cols), add(mul(ones_diff_rows, add(ones_diff_rows, zeros_diff_cols)), zeros_diff_cols))
add(mul(mul(zeros_diff_cols, zeros_diff_cols), compare_blocks_rows), mul(ones_diff_rows, add(zeros_diff_rows, zeros_diff_rows)))
COND TREES:
or_(False, le(_if_then_else(le(0, 1), _if_then_else(False, ones_diff_rows, compare_blocks_cols), _if_then_else(or_(True, False), zeros_diff_cols, max_col_clue)), 4))
le(_if_then_else(and_(False, False), compare_blocks_cols, _if_then_else(True, max_col_clue, compare_blocks_rows)), _if_then_else(False, compare_blocks_cols, ones_diff_cols))
ge(_if_then_else(or_(False, True), ones_diff_cols, ones_diff_cols), _if_then_else(True, compare_blocks_cols, compare_blocks_rows))
or_(le(zeros_diff_cols, -26), and_(or_(True, False), le(max_col_clue, 2)))
and_(or_(ge(_if_then_else(or_(or_(False, False), ge(zeros_diff_cols, 2)), _if_then_else(or_(False, False), _if_then_else(True, 4, ones_diff_cols), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(ge(1, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_cols), _if_then_else(False, -25, zeros_diff_cols))), _if_then_else(ge(_if_then_else(False, 0, ones_diff_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(False, 2, 2), _if_then_else(True, ones_diff_cols, ones_diff_rows)), _if_then_else(le(compare_blocks_rows, ones_diff_cols), _if_then_else(False, 92, max_col_clue), _if_then_else(True, -31, 1)))), and_(or_(ge(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, 4, max_row_clue)), le(_if_then_else(False, max_col_clue, _if_then_else(and_(True, False), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(True, 53, zeros_diff_rows))), _if_then_else(True, ones_diff_rows, zeros_diff_cols))), or_(or_(or_(False, True), ge(ones_diff_rows, 3)), le(_if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(False, compare_blocks_rows, ones_diff_cols))))), or_(True, True))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
or_(and_(and_(True, False), and_(False, True)), and_(True, False))
le(compare_blocks_cols, _if_then_else(False, 14, max_col_clue))
and_(ge(1, 3), and_(True, le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), compare_blocks_cols)))
le(_if_then_else(ge(_if_then_else(ge(1, 3), compare_blocks_rows, 0), 1), 3, 1), _if_then_else(False, ones_diff_cols, zeros_diff_rows))
and_(True, le(2, ones_diff_rows))
VAL TREES:
add(mul(add(mul(zeros_diff_rows, compare_blocks_rows), zeros_diff_rows), ones_diff_cols), mul(zeros_diff_rows, -35))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_rows))
add(mul(ones_diff_rows, ones_diff_cols), mul(-33, compare_blocks_rows))
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols))
add(add(compare_blocks_cols, zeros_diff_rows), add(42, zeros_diff_cols))
add(add(7, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows))
COND TREES:
or_(le(max_col_clue, zeros_diff_rows), le(compare_blocks_rows, _if_then_else(True, 1, max_col_clue)))
or_(le(max_col_clue, 2), ge(0, zeros_diff_cols))
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), _if_then_else(le(max_col_clue, 4), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, max_row_clue, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(ge(2, ones_diff_rows), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, 3, max_col_clue)), le(_if_then_else(True, 0, -77), _if_then_else(False, 3, compare_blocks_rows)))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, add(add(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_rows))), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(mul(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_rows)))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, add(add(add(ones_diff_rows, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_rows)), add(add(compare_blocks_rows, ones_diff_cols), add(ones_diff_rows, compare_blocks_cols))))))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), add(add(compare_blocks_rows, compare_blocks_cols), add(zeros_diff_rows, -40)))
COND TREES:
ge(max_row_clue, _if_then_else(or_(True, False), _if_then_else(or_(or_(ge(_if_then_else(True, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, 0, 0)), le(_if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, max_row_clue))), or_(ge(_if_then_else(False, 2, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, 1)), ge(_if_then_else(False, 2, ones_diff_cols), _if_then_else(True, compare_blocks_rows, 1)))), _if_then_else(and_(le(_if_then_else(True, 3, zeros_diff_cols), _if_then_else(True, 3, ones_diff_rows)), and_(and_(True, True), ge(-78, 85))), _if_then_else(and_(le(zeros_diff_rows, 1), or_(True, False)), _if_then_else(ge(zeros_diff_cols, max_col_clue), _if_then_else(False, ones_diff_cols, 0), _if_then_else(False, 3, 4)), _if_then_else(ge(zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 2, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_col_clue))), _if_then_else(ge(_if_then_else(False, 1, max_row_clue), _if_then_else(False, zeros_diff_cols, 3)), _if_then_else(le(max_row_clue, compare_blocks_rows), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(True, -64, 0)), _if_then_else(ge(ones_diff_rows, 33), _if_then_else(False, max_col_clue, 4), _if_then_else(True, max_col_clue, 0)))), _if_then_else(and_(or_(le(2, 2), le(2, 3)), and_(or_(False, False), or_(False, False))), _if_then_else(and_(le(max_col_clue, max_col_clue), ge(0, 46)), _if_then_else(ge(3, max_row_clue), _if_then_else(True, max_row_clue, 88), _if_then_else(True, compare_blocks_rows, 0)), _if_then_else(and_(True, True), _if_then_else(True, 2, max_col_clue), _if_then_else(False, compare_blocks_rows, max_row_clue))), _if_then_else(or_(le(1, 4), or_(True, False)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_cols, 4)), _if_then_else(and_(True, True), _if_then_else(False, 3, max_col_clue), _if_then_else(False, compare_blocks_rows, max_row_clue))))), zeros_diff_rows))
ge(_if_then_else(and_(and_(False, False), False), compare_blocks_rows, max_col_clue), _if_then_else(le(_if_then_else(ge(2, 2), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(True, ones_diff_rows, ones_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, max_row_clue, ones_diff_rows), _if_then_else(False, ones_diff_rows, ones_diff_cols))), _if_then_else(or_(le(ones_diff_cols, ones_diff_rows), le(1, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, 0, 2)), _if_then_else(or_(True, True), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(True, -67, ones_diff_rows))), _if_then_else(or_(le(ones_diff_rows, compare_blocks_cols), and_(False, True)), _if_then_else(ge(0, 0), _if_then_else(False, ones_diff_rows, max_row_clue), _if_then_else(False, compare_blocks_cols, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(False, max_row_clue, 2)))))
or_(or_(False, False), or_(le(compare_blocks_rows, _if_then_else(False, 87, 4)), ge(3, 3)))
le(_if_then_else(or_(True, True), ones_diff_cols, _if_then_else(True, _if_then_else(True, _if_then_else(False, 1, ones_diff_rows), ones_diff_rows), 3)), _if_then_else(False, zeros_diff_rows, 2))
le(3, _if_then_else(ge(compare_blocks_rows, _if_then_else(False, -62, 2)), ones_diff_rows, _if_then_else(and_(True, False), _if_then_else(True, ones_diff_rows, ones_diff_rows), _if_then_else(True, 1, ones_diff_cols))))
VAL TREES:
add(mul(ones_diff_rows, zeros_diff_rows), add(-49, zeros_diff_rows))
add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, -94))
mul(mul(zeros_diff_rows, ones_diff_cols), mul(mul(add(61, ones_diff_cols), zeros_diff_cols), ones_diff_rows))
add(mul(zeros_diff_cols, mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), 67))
mul(add(zeros_diff_rows, -21), add(zeros_diff_rows, zeros_diff_cols))
add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols))
COND TREES:
or_(or_(or_(ge(_if_then_else(True, ones_diff_cols, ones_diff_cols), _if_then_else(False, compare_blocks_cols, ones_diff_rows)), False), True), False)
le(_if_then_else(True, 2, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, ones_diff_cols))
ge(_if_then_else(or_(True, False), max_row_clue, ones_diff_cols), _if_then_else(True, max_row_clue, compare_blocks_cols))
or_(le(zeros_diff_cols, -26), and_(False, le(max_col_clue, 3)))
and_(le(1, _if_then_else(False, zeros_diff_rows, max_col_clue)), True)
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, mul(add(compare_blocks_rows, -56), mul(zeros_diff_cols, zeros_diff_rows))))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), add(add(-94, add(ones_diff_rows, add(zeros_diff_cols, zeros_diff_cols))), add(94, compare_blocks_rows))))
mul(add(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_rows))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(mul(add(mul(compare_blocks_rows, compare_blocks_rows), mul(8, zeros_diff_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_rows))), add(add(mul(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))))
COND TREES:
and_(True, or_(ge(compare_blocks_cols, _if_then_else(True, -63, compare_blocks_cols)), ge(_if_then_else(False, max_row_clue, _if_then_else(ge(compare_blocks_cols, max_col_clue), _if_then_else(False, ones_diff_rows, 4), _if_then_else(le(compare_blocks_rows, _if_then_else(False, 1, max_col_clue)), ones_diff_cols, 1))), _if_then_else(ge(zeros_diff_cols, ones_diff_rows), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(True, 4, compare_blocks_rows)))))
ge(_if_then_else(True, _if_then_else(True, 0, compare_blocks_cols), zeros_diff_cols), _if_then_else(ge(_if_then_else(le(_if_then_else(False, 1, 4), _if_then_else(True, 2, zeros_diff_cols)), 2, zeros_diff_cols), _if_then_else(and_(le(0, 52), and_(True, True)), _if_then_else(ge(4, ones_diff_rows), _if_then_else(False, max_row_clue, compare_blocks_rows), 0), zeros_diff_cols)), _if_then_else(False, 4, -96), _if_then_else(ge(_if_then_else(False, compare_blocks_rows, 3), compare_blocks_rows), compare_blocks_rows, max_row_clue)))
le(_if_then_else(ge(_if_then_else(False, max_col_clue, 4), _if_then_else(le(compare_blocks_cols, 0), _if_then_else(le(zeros_diff_rows, ones_diff_rows), 4, zeros_diff_cols), 2)), ones_diff_cols, zeros_diff_cols), _if_then_else(True, max_row_clue, _if_then_else(ge(zeros_diff_cols, 37), _if_then_else(False, ones_diff_rows, _if_then_else(False, ones_diff_rows, -82)), _if_then_else(False, 2, 51))))
and_(or_(False, False), le(compare_blocks_rows, zeros_diff_cols))
ge(_if_then_else(le(max_col_clue, compare_blocks_rows), 1, ones_diff_cols), _if_then_else(or_(le(_if_then_else(True, -84, compare_blocks_cols), _if_then_else(False, ones_diff_cols, ones_diff_rows)), and_(and_(True, False), ge(3, ones_diff_rows))), zeros_diff_cols, ones_diff_rows))
VAL TREES:
add(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols))
add(add(add(ones_diff_cols, add(74, mul(zeros_diff_rows, ones_diff_cols))), compare_blocks_rows), mul(mul(ones_diff_rows, ones_diff_cols), add(add(compare_blocks_rows, ones_diff_cols), -65)))
add(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_rows, mul(add(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_rows, ones_diff_cols)), mul(mul(48, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)))))
mul(mul(add(zeros_diff_rows, compare_blocks_cols), add(add(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_cols, compare_blocks_rows))), add(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_cols)))
add(mul(zeros_diff_cols, -71), add(add(add(mul(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -47))), add(mul(mul(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)))), mul(compare_blocks_rows, add(compare_blocks_rows, zeros_diff_rows))))
mul(mul(mul(mul(zeros_diff_rows, -8), mul(compare_blocks_cols, compare_blocks_rows)), compare_blocks_cols), mul(ones_diff_cols, zeros_diff_rows))
COND TREES:
or_(le(max_col_clue, zeros_diff_rows), True)
or_(True, ge(0, _if_then_else(True, zeros_diff_cols, _if_then_else(True, compare_blocks_rows, 2))))
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), _if_then_else(le(max_col_clue, 4), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, max_row_clue, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(ge(2, ones_diff_rows), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(or_(le(_if_then_else(True, max_col_clue, ones_diff_cols), _if_then_else(False, zeros_diff_cols, 2)), and_(ge(zeros_diff_rows, compare_blocks_rows), and_(False, True))), max_col_clue, ones_diff_cols), _if_then_else(False, 3, max_col_clue)), le(_if_then_else(True, compare_blocks_rows, -77), _if_then_else(False, 3, compare_blocks_rows)))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
or_(or_(or_(False, and_(ge(_if_then_else(le(_if_then_else(False, zeros_diff_cols, 4), _if_then_else(False, -98, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(ge(zeros_diff_rows, max_col_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows), _if_then_else(True, 4, compare_blocks_rows))), _if_then_else(or_(or_(True, False), ge(zeros_diff_rows, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, 4, 4), _if_then_else(True, 63, 1)), _if_then_else(or_(True, True), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(False, ones_diff_cols, ones_diff_rows)))), or_(or_(and_(and_(False, False), ge(compare_blocks_rows, 3)), le(_if_then_else(False, compare_blocks_cols, 2), _if_then_else(True, zeros_diff_cols, max_row_clue))), le(_if_then_else(le(4, ones_diff_cols), _if_then_else(False, max_col_clue, 1), _if_then_else(False, max_col_clue, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(False, -59, 1), _if_then_else(False, max_row_clue, -12)))))), True), False)
le(_if_then_else(True, 2, _if_then_else(or_(True, False), _if_then_else(True, 1, 4), _if_then_else(False, max_row_clue, max_col_clue))), _if_then_else(False, compare_blocks_cols, ones_diff_cols))
ge(_if_then_else(and_(le(0, 2), or_(False, False)), _if_then_else(ge(zeros_diff_rows, 2), _if_then_else(and_(and_(False, True), or_(True, ge(zeros_diff_cols, _if_then_else(True, 2, zeros_diff_rows)))), compare_blocks_cols, 1), _if_then_else(False, 1, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(or_(False, False), 87, 0))), _if_then_else(le(_if_then_else(False, zeros_diff_cols, 1), _if_then_else(True, -62, 0)), _if_then_else(ge(2, 1), _if_then_else(False, max_col_clue, ones_diff_rows), _if_then_else(True, 2, max_col_clue)), _if_then_else(and_(False, False), _if_then_else(True, max_col_clue, ones_diff_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_cols))))
or_(le(zeros_diff_cols, zeros_diff_rows), and_(or_(True, and_(True, False)), le(0, _if_then_else(False, 4, _if_then_else(ge(compare_blocks_cols, _if_then_else(and_(False, le(_if_then_else(True, -44, _if_then_else(True, _if_then_else(False, ones_diff_rows, 4), compare_blocks_cols)), _if_then_else(True, 3, ones_diff_cols))), compare_blocks_rows, 1)), _if_then_else(True, _if_then_else(and_(False, ge(1, compare_blocks_rows)), _if_then_else(and_(False, False), 2, 1), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), 4, compare_blocks_rows)), 78), _if_then_else(or_(True, False), _if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, 0, _if_then_else(False, 3, _if_then_else(False, ones_diff_rows, 2)))))))))
and_(or_(False, True), ge(_if_then_else(False, _if_then_else(and_(True, True), max_col_clue, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, max_col_clue)), _if_then_else(ge(max_row_clue, zeros_diff_cols), _if_then_else(False, max_row_clue, 2), _if_then_else(True, compare_blocks_cols, ones_diff_cols))))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
and_(le(4, zeros_diff_rows), le(max_row_clue, max_row_clue))
ge(24, _if_then_else(True, ones_diff_rows, max_row_clue))
or_(le(_if_then_else(ge(ones_diff_rows, -85), _if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, -14), _if_then_else(True, 0, ones_diff_cols))), or_(and_(or_(False, True), False), and_(or_(False, False), and_(True, True))))
or_(and_(True, ge(3, zeros_diff_rows)), ge(_if_then_else(False, ones_diff_cols, 0), ones_diff_rows))
or_(and_(and_(False, True), True), or_(False, True))
VAL TREES:
add(mul(ones_diff_cols, 52), mul(compare_blocks_cols, zeros_diff_rows))
add(add(add(add(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols))), add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols))))
add(mul(zeros_diff_cols, 30), add(zeros_diff_rows, ones_diff_rows))
add(mul(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols))
add(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows))
add(mul(add(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_rows)), mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, -54))), add(add(mul(zeros_diff_rows, zeros_diff_rows), mul(20, ones_diff_cols)), mul(mul(compare_blocks_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))), mul(add(add(mul(42, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, ones_diff_cols))), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows)))))
COND TREES:
or_(le(max_col_clue, zeros_diff_rows), True)
or_(le(max_col_clue, 2), ge(0, zeros_diff_cols))
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), _if_then_else(le(max_col_clue, 4), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, max_row_clue, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(False, _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(ge(compare_blocks_cols, zeros_diff_rows), 3, max_col_clue)), ge(4, compare_blocks_rows))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(or_(False, True), zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
or_(or_(or_(True, False), True), le(0, 0))
le(_if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(ge(max_col_clue, compare_blocks_rows), compare_blocks_cols, ones_diff_cols))
ge(_if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(le(_if_then_else(True, 3, zeros_diff_cols), 2), compare_blocks_cols, compare_blocks_cols))
or_(False, and_(or_(True, False), ge(max_row_clue, max_col_clue)))
and_(or_(False, True), True)
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
ge(zeros_diff_cols, _if_then_else(or_(and_(and_(and_(ge(_if_then_else(True, 1, -76), _if_then_else(False, max_row_clue, 1)), and_(or_(True, True), le(98, compare_blocks_cols))), le(_if_then_else(and_(False, False), _if_then_else(True, compare_blocks_rows, 1), _if_then_else(False, 3, ones_diff_rows)), _if_then_else(ge(95, -13), _if_then_else(True, max_col_clue, compare_blocks_cols), _if_then_else(False, 4, 4)))), le(_if_then_else(or_(ge(max_col_clue, ones_diff_cols), ge(zeros_diff_cols, max_row_clue)), _if_then_else(ge(6, 1), _if_then_else(False, 0, 1), _if_then_else(False, 0, 12)), _if_then_else(ge(3, ones_diff_rows), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, 89))), _if_then_else(ge(_if_then_else(True, max_row_clue, 4), _if_then_else(True, 1, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_rows, ones_diff_cols)), _if_then_else(or_(True, False), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(True, 0, compare_blocks_rows))))), True), _if_then_else(le(0, 1), _if_then_else(False, ones_diff_rows, compare_blocks_cols), _if_then_else(or_(True, False), zeros_diff_cols, max_col_clue)), _if_then_else(False, zeros_diff_rows, -64)))
ge(_if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, zeros_diff_cols, _if_then_else(ge(_if_then_else(le(_if_then_else(True, 3, 1), _if_then_else(True, 0, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(True, 1, max_row_clue), _if_then_else(False, 0, ones_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, max_col_clue, zeros_diff_cols), _if_then_else(False, max_col_clue, 3))), _if_then_else(and_(le(compare_blocks_cols, 4), ge(compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, True), _if_then_else(True, 0, 83), _if_then_else(True, ones_diff_rows, 3)), _if_then_else(ge(ones_diff_cols, zeros_diff_rows), _if_then_else(False, 0, 0), _if_then_else(False, 1, ones_diff_rows)))), _if_then_else(ge(_if_then_else(or_(False, False), _if_then_else(False, compare_blocks_rows, -65), _if_then_else(False, 0, compare_blocks_cols)), _if_then_else(le(2, 2), _if_then_else(False, 3, 30), _if_then_else(False, compare_blocks_rows, max_row_clue))), _if_then_else(and_(and_(True, False), and_(False, True)), _if_then_else(or_(True, True), _if_then_else(False, 0, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_cols)), _if_then_else(ge(3, compare_blocks_cols), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows))), _if_then_else(or_(or_(False, False), or_(True, False)), _if_then_else(ge(zeros_diff_cols, 4), _if_then_else(False, 3, 2), _if_then_else(False, compare_blocks_rows, 2)), _if_then_else(and_(False, False), _if_then_else(True, ones_diff_rows, 4), _if_then_else(False, 0, 4)))), _if_then_else(le(_if_then_else(ge(3, ones_diff_cols), _if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 3)), _if_then_else(ge(ones_diff_rows, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_cols), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), _if_then_else(and_(and_(True, True), le(compare_blocks_rows, zeros_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, 3, ones_diff_rows), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(zeros_diff_rows, ones_diff_rows), _if_then_else(False, 0, 1), _if_then_else(False, 0, zeros_diff_cols))), _if_then_else(le(_if_then_else(False, ones_diff_cols, zeros_diff_rows), _if_then_else(False, ones_diff_rows, -15)), _if_then_else(or_(True, True), _if_then_else(True, 2, ones_diff_rows), _if_then_else(False, 1, ones_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, 38, zeros_diff_cols), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))))))
or_(ge(_if_then_else(le(max_row_clue, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_cols), zeros_diff_cols), _if_then_else(ge(1, zeros_diff_cols), 1, ones_diff_cols)), True)
le(_if_then_else(False, ones_diff_cols, _if_then_else(False, 1, zeros_diff_rows)), _if_then_else(le(_if_then_else(False, -42, zeros_diff_cols), -26), zeros_diff_rows, 2))
le(_if_then_else(True, max_row_clue, max_row_clue), _if_then_else(le(_if_then_else(True, zeros_diff_cols, 4), _if_then_else(True, 1, max_col_clue)), ones_diff_rows, -67))
VAL TREES:
add(mul(ones_diff_rows, zeros_diff_rows), add(-49, zeros_diff_rows))
add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, -94))
mul(mul(zeros_diff_rows, ones_diff_cols), mul(mul(add(61, ones_diff_cols), zeros_diff_cols), ones_diff_rows))
add(mul(zeros_diff_cols, mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), 67))
mul(add(zeros_diff_rows, -21), add(zeros_diff_rows, zeros_diff_cols))
add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols))
COND TREES:
or_(or_(or_(le(max_col_clue, zeros_diff_rows), False), True), le(_if_then_else(False, max_col_clue, 21), 4))
le(_if_then_else(and_(False, False), compare_blocks_cols, _if_then_else(True, max_col_clue, compare_blocks_rows)), _if_then_else(False, compare_blocks_cols, ones_diff_cols))
ge(_if_then_else(or_(False, True), max_row_clue, ones_diff_cols), _if_then_else(ge(_if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, 4)), compare_blocks_cols, compare_blocks_rows))
or_(le(zeros_diff_cols, _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), and_(or_(True, False), le(max_col_clue, 2)))
and_(or_(ge(_if_then_else(or_(or_(False, False), ge(zeros_diff_cols, 2)), _if_then_else(or_(False, False), _if_then_else(True, 4, ones_diff_cols), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(ge(1, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_cols), _if_then_else(False, -25, zeros_diff_cols))), _if_then_else(ge(_if_then_else(False, 0, ones_diff_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(False, 2, 2), _if_then_else(True, ones_diff_cols, ones_diff_rows)), _if_then_else(le(compare_blocks_rows, ones_diff_cols), _if_then_else(False, 92, max_col_clue), _if_then_else(True, -31, 1)))), and_(or_(ge(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, 4, max_row_clue)), le(_if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(True, ones_diff_rows, zeros_diff_cols))), or_(or_(or_(False, True), ge(ones_diff_rows, 3)), le(_if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(False, compare_blocks_rows, ones_diff_cols))))), or_(True, True))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
or_(or_(True, True), le(max_col_clue, zeros_diff_rows))
le(_if_then_else(le(max_col_clue, ones_diff_cols), compare_blocks_cols, zeros_diff_cols), _if_then_else(ge(max_col_clue, compare_blocks_rows), compare_blocks_cols, ones_diff_cols))
ge(_if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(le(_if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), _if_then_else(le(max_col_clue, 4), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, max_row_clue, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), 2), compare_blocks_cols, compare_blocks_cols))
or_(le(zeros_diff_cols, compare_blocks_rows), and_(or_(True, False), ge(max_row_clue, compare_blocks_cols)))
and_(or_(False, True), or_(True, True))
VAL TREES:
mul(add(ones_diff_cols, add(add(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows))), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), add(add(ones_diff_rows, add(zeros_diff_cols, -58)), mul(ones_diff_cols, ones_diff_cols)))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
mul(mul(mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols)), add(add(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_rows, compare_blocks_rows))), mul(add(add(compare_blocks_rows, compare_blocks_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(29, 10), add(zeros_diff_cols, compare_blocks_rows)))), mul(mul(add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_rows))), mul(add(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_cols, -68)), mul(mul(compare_blocks_cols, -81), add(ones_diff_cols, 8)))))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(add(add(mul(96, ones_diff_rows), add(compare_blocks_cols, 59)), mul(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_rows))), mul(mul(add(zeros_diff_rows, compare_blocks_cols), mul(29, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows)))), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
or_(le(zeros_diff_cols, max_row_clue), and_(False, False))
or_(le(max_col_clue, 2), le(_if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(and_(True, ge(max_col_clue, 1)), _if_then_else(True, 0, 4), ones_diff_cols)))
ge(zeros_diff_cols, _if_then_else(or_(and_(le(_if_then_else(True, zeros_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, compare_blocks_cols)), ge(_if_then_else(True, -74, 0), _if_then_else(False, compare_blocks_cols, max_col_clue))), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(False, _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(ge(max_col_clue, zeros_diff_rows), 3, max_col_clue)), ge(4, compare_blocks_rows))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(ge(_if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(False, 0, max_col_clue)), _if_then_else(le(zeros_diff_cols, 0), _if_then_else(False, 3, ones_diff_cols), _if_then_else(True, 2, 3))), _if_then_else(ge(_if_then_else(True, 3, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(False, compare_blocks_rows, max_col_clue)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_cols, 0), _if_then_else(False, 1, compare_blocks_rows))), _if_then_else(or_(ge(4, ones_diff_cols), and_(False, False)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, max_row_clue, max_col_clue), _if_then_else(False, zeros_diff_rows, 3)), _if_then_else(or_(True, False), _if_then_else(False, 0, 4), _if_then_else(False, max_row_clue, 2)))), _if_then_else(le(_if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, 1), _if_then_else(True, 4, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(True, max_row_clue, max_col_clue), _if_then_else(True, zeros_diff_cols, 0))), _if_then_else(le(_if_then_else(True, ones_diff_cols, ones_diff_cols), _if_then_else(True, ones_diff_cols, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, 3, 1), _if_then_else(True, zeros_diff_cols, 40)), _if_then_else(ge(2, 2), _if_then_else(False, 9, 28), _if_then_else(True, 1, compare_blocks_rows))), _if_then_else(ge(_if_then_else(False, max_col_clue, -64), _if_then_else(True, 2, max_col_clue)), _if_then_else(ge(4, 3), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 0, compare_blocks_cols)), _if_then_else(and_(False, True), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, -87, max_col_clue))))), _if_then_else(or_(False, True), zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
ge(_if_then_else(le(_if_then_else(ge(4, ones_diff_rows), _if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, compare_blocks_cols, max_col_clue)), _if_then_else(or_(True, False), _if_then_else(False, 3, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, 3))), zeros_diff_rows, max_col_clue), _if_then_else(False, 2, ones_diff_rows))
and_(ge(_if_then_else(ge(0, zeros_diff_cols), zeros_diff_cols, _if_then_else(le(zeros_diff_cols, 3), _if_then_else(True, 0, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, 2))), compare_blocks_rows), or_(or_(False, True), and_(False, False)))
and_(True, and_(and_(False, False), ge(max_col_clue, 0)))
ge(zeros_diff_rows, _if_then_else(False, _if_then_else(and_(False, False), 2, _if_then_else(le(_if_then_else(True, 0, -77), _if_then_else(False, 3, compare_blocks_rows)), compare_blocks_rows, _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(False, 3, ones_diff_cols), _if_then_else(True, 1, 1)))), ones_diff_rows))
and_(le(_if_then_else(False, _if_then_else(le(_if_then_else(or_(ge(3, 4), or_(True, True)), _if_then_else(le(compare_blocks_rows, 79), _if_then_else(False, 2, ones_diff_cols), _if_then_else(True, -72, -52)), _if_then_else(ge(max_row_clue, compare_blocks_rows), _if_then_else(False, 1, compare_blocks_rows), _if_then_else(False, 4, 0))), _if_then_else(and_(or_(True, False), or_(True, True)), _if_then_else(ge(max_row_clue, 3), _if_then_else(False, 1, max_row_clue), _if_then_else(False, zeros_diff_cols, max_col_clue)), _if_then_else(or_(True, True), _if_then_else(True, 4, ones_diff_rows), _if_then_else(True, zeros_diff_rows, ones_diff_rows)))), _if_then_else(or_(ge(_if_then_else(False, 2, 4), _if_then_else(True, max_row_clue, 4)), le(_if_then_else(False, max_col_clue, max_row_clue), _if_then_else(True, max_row_clue, 2))), _if_then_else(and_(and_(False, True), ge(ones_diff_cols, max_row_clue)), _if_then_else(le(max_row_clue, ones_diff_rows), _if_then_else(True, zeros_diff_cols, ones_diff_cols), _if_then_else(False, 2, 3)), _if_then_else(le(zeros_diff_rows, 1), _if_then_else(False, 3, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, ones_diff_rows))), _if_then_else(or_(or_(True, True), le(max_row_clue, 2)), _if_then_else(le(4, 90), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 1, 0)), _if_then_else(or_(False, False), _if_then_else(True, 4, 4), _if_then_else(True, 0, ones_diff_cols)))), _if_then_else(and_(or_(and_(False, False), ge(0, zeros_diff_cols)), and_(or_(True, True), and_(False, True))), _if_then_else(le(_if_then_else(False, 0, compare_blocks_cols), _if_then_else(False, 4, max_col_clue)), _if_then_else(ge(ones_diff_rows, 1), _if_then_else(False, max_col_clue, ones_diff_rows), _if_then_else(True, ones_diff_rows, 4)), _if_then_else(le(0, zeros_diff_cols), _if_then_else(True, ones_diff_cols, 3), _if_then_else(True, compare_blocks_cols, 63))), _if_then_else(and_(le(compare_blocks_rows, 2), or_(True, True)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 1, ones_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, 2, 4))))), compare_blocks_cols), _if_then_else(or_(False, False), _if_then_else(False, -62, 2), _if_then_else(True, 3, 4))), or_(le(zeros_diff_cols, max_col_clue), False))
VAL TREES:
mul(mul(zeros_diff_cols, compare_blocks_cols), add(mul(zeros_diff_cols, add(compare_blocks_cols, zeros_diff_cols)), compare_blocks_cols))
mul(mul(add(add(ones_diff_rows, 13), compare_blocks_rows), add(compare_blocks_cols, mul(-28, ones_diff_rows))), add(ones_diff_cols, -82))
add(mul(zeros_diff_cols, add(zeros_diff_cols, compare_blocks_rows)), mul(compare_blocks_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_cols))
add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))
mul(add(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, -66))
COND TREES:
or_(le(3, _if_then_else(True, max_col_clue, 65)), le(_if_then_else(False, 2, _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(False, ones_diff_rows, _if_then_else(False, max_row_clue, zeros_diff_cols)), _if_then_else(False, 0, 4))), compare_blocks_cols))
le(_if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(ge(_if_then_else(False, 2, compare_blocks_cols), max_col_clue), compare_blocks_cols, zeros_diff_cols))
and_(False, or_(and_(True, True), True))
ge(compare_blocks_cols, 1)
or_(or_(or_(True, False), le(ones_diff_cols, max_col_clue)), False)
VAL TREES:
mul(mul(ones_diff_rows, mul(mul(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(ones_diff_cols, zeros_diff_cols))
add(mul(ones_diff_rows, compare_blocks_rows), mul(add(mul(compare_blocks_rows, -18), add(compare_blocks_cols, zeros_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols))))
add(add(mul(mul(add(compare_blocks_cols, ones_diff_cols), mul(-85, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_rows))), mul(mul(add(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)), mul(mul(compare_blocks_rows, 44), add(compare_blocks_rows, ones_diff_cols))), mul(add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, zeros_diff_rows), add(-49, ones_diff_cols)))))
add(add(ones_diff_rows, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows))
mul(add(add(mul(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols), mul(compare_blocks_rows, compare_blocks_cols)), add(75, zeros_diff_cols))
mul(mul(zeros_diff_cols, -79), mul(compare_blocks_cols, ones_diff_cols))
COND TREES:
or_(le(max_col_clue, zeros_diff_rows), or_(or_(True, True), True))
or_(le(max_col_clue, _if_then_else(False, max_col_clue, 2)), ge(2, zeros_diff_cols))
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), _if_then_else(False, max_row_clue, 4), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(ge(2, ones_diff_rows), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(and_(False, le(0, 3)), le(_if_then_else(True, 0, -77), _if_then_else(False, 3, compare_blocks_rows)))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, zeros_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
or_(and_(ge(compare_blocks_rows, _if_then_else(False, ones_diff_rows, ones_diff_cols)), or_(True, True)), False)
le(_if_then_else(True, 0, compare_blocks_rows), compare_blocks_rows)
ge(_if_then_else(le(_if_then_else(False, zeros_diff_rows, max_row_clue), _if_then_else(True, max_col_clue, 1)), max_row_clue, ones_diff_cols), _if_then_else(True, _if_then_else(False, compare_blocks_cols, ones_diff_rows), compare_blocks_cols))
or_(le(zeros_diff_cols, -26), ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, 3, 3)))
or_(le(_if_then_else(True, zeros_diff_cols, zeros_diff_cols), 2), or_(True, False))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, mul(add(compare_blocks_rows, -56), mul(zeros_diff_cols, zeros_diff_rows))))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), add(add(-94, add(ones_diff_rows, add(zeros_diff_cols, zeros_diff_cols))), add(94, compare_blocks_rows))))
mul(add(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_rows))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(mul(add(mul(compare_blocks_rows, compare_blocks_rows), mul(8, zeros_diff_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_rows))), add(add(mul(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))))
COND TREES:
or_(or_(or_(True, False), True), le(_if_then_else(False, compare_blocks_rows, _if_then_else(le(4, zeros_diff_rows), max_row_clue, max_row_clue)), 3))
le(ones_diff_cols, _if_then_else(or_(True, True), compare_blocks_cols, ones_diff_cols))
ge(_if_then_else(False, max_row_clue, _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, -70), _if_then_else(True, 3, ones_diff_cols))), _if_then_else(or_(False, True), compare_blocks_cols, zeros_diff_rows))
or_(True, ge(4, zeros_diff_cols))
and_(or_(or_(False, True), True), or_(True, or_(True, and_(and_(False, True), True))))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(add(-22, compare_blocks_rows), add(ones_diff_cols, compare_blocks_cols)))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), mul(add(add(mul(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), add(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, ones_diff_cols))), mul(add(add(-38, zeros_diff_cols), mul(-65, ones_diff_rows)), mul(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, zeros_diff_rows))))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(mul(mul(ones_diff_cols, 70), add(zeros_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_cols)))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_rows, 72))))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
and_(False, le(max_row_clue, max_row_clue))
ge(24, _if_then_else(True, ones_diff_rows, max_row_clue))
or_(le(_if_then_else(ge(ones_diff_rows, -85), _if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, -14), _if_then_else(True, 0, ones_diff_cols))), or_(and_(or_(False, True), False), and_(or_(False, False), and_(True, True))))
or_(and_(True, ge(3, zeros_diff_rows)), ge(_if_then_else(False, ones_diff_cols, 0), ones_diff_rows))
or_(True, or_(False, True))
VAL TREES:
add(mul(ones_diff_cols, 52), mul(compare_blocks_cols, zeros_diff_rows))
add(add(add(add(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols))), add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols))))
add(mul(zeros_diff_cols, 30), add(zeros_diff_rows, ones_diff_rows))
add(mul(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols))
add(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows))
add(mul(add(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_rows)), mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, -54))), add(add(mul(zeros_diff_rows, zeros_diff_rows), mul(20, ones_diff_cols)), mul(mul(compare_blocks_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))), mul(add(add(mul(42, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, ones_diff_cols))), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows)))))
COND TREES:
ge(max_row_clue, _if_then_else(True, compare_blocks_rows, max_row_clue))
ge(_if_then_else(and_(ge(ones_diff_cols, compare_blocks_rows), False), compare_blocks_rows, max_col_clue), _if_then_else(False, zeros_diff_cols, compare_blocks_rows))
or_(or_(False, False), le(max_col_clue, _if_then_else(False, ones_diff_rows, 3)))
le(_if_then_else(False, ones_diff_cols, _if_then_else(le(3, 2), _if_then_else(True, ones_diff_rows, 0), _if_then_else(True, 2, compare_blocks_cols))), _if_then_else(False, zeros_diff_rows, 2))
le(ones_diff_rows, _if_then_else(True, ones_diff_rows, -67))
VAL TREES:
add(mul(ones_diff_rows, zeros_diff_rows), add(-49, zeros_diff_rows))
add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, -94))
mul(mul(zeros_diff_rows, ones_diff_cols), mul(mul(add(61, ones_diff_cols), zeros_diff_cols), ones_diff_rows))
add(mul(zeros_diff_cols, mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), 67))
mul(add(zeros_diff_rows, -21), add(zeros_diff_rows, zeros_diff_cols))
add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols))
COND TREES:
ge(zeros_diff_cols, _if_then_else(or_(False, True), _if_then_else(False, max_col_clue, 21), _if_then_else(False, zeros_diff_rows, -64)))
ge(_if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, zeros_diff_cols, compare_blocks_cols))
or_(ge(_if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, 4)), True)
le(_if_then_else(False, ones_diff_cols, _if_then_else(False, 1, zeros_diff_rows)), _if_then_else(le(_if_then_else(False, -42, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), zeros_diff_rows, 2))
le(_if_then_else(True, max_row_clue, max_row_clue), _if_then_else(True, ones_diff_rows, -67))
VAL TREES:
add(mul(ones_diff_rows, zeros_diff_rows), add(-49, zeros_diff_rows))
add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, -94))
mul(mul(zeros_diff_rows, ones_diff_cols), mul(mul(add(61, ones_diff_cols), zeros_diff_cols), ones_diff_rows))
add(mul(zeros_diff_cols, mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), 67))
mul(add(zeros_diff_rows, -21), add(zeros_diff_rows, zeros_diff_cols))
add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols))
COND TREES:
and_(False, True)
ge(_if_then_else(le(ones_diff_cols, 2), _if_then_else(and_(False, or_(True, True)), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(le(-66, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, 4), _if_then_else(False, max_row_clue, 4))), _if_then_else(le(_if_then_else(True, zeros_diff_cols, max_row_clue), _if_then_else(le(zeros_diff_cols, 4), zeros_diff_rows, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, max_col_clue, max_row_clue)), _if_then_else(le(compare_blocks_cols, 3), _if_then_else(True, compare_blocks_rows, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, 0))))
le(-24, _if_then_else(False, ones_diff_rows, compare_blocks_rows))
or_(ge(_if_then_else(le(ones_diff_cols, 1), _if_then_else(True, 50, ones_diff_cols), _if_then_else(True, zeros_diff_rows, -46)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, ones_diff_rows, 3), _if_then_else(True, compare_blocks_cols, ones_diff_rows))), and_(or_(le(_if_then_else(False, 3, compare_blocks_cols), zeros_diff_cols), ge(max_col_clue, 4)), or_(ge(zeros_diff_rows, zeros_diff_cols), ge(2, 2))))
or_(True, False)
VAL TREES:
add(mul(mul(add(add(ones_diff_rows, -79), add(ones_diff_rows, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols))), mul(add(mul(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_cols)), mul(mul(-30, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)))), add(add(mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)), add(add(compare_blocks_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_rows))), mul(mul(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_cols)))))
add(mul(add(ones_diff_cols, ones_diff_rows), ones_diff_cols), add(ones_diff_cols, compare_blocks_cols))
add(mul(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, add(zeros_diff_rows, compare_blocks_rows)))
add(add(ones_diff_cols, add(compare_blocks_rows, compare_blocks_cols)), mul(zeros_diff_rows, add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(mul(ones_diff_rows, -100), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_cols))), mul(mul(mul(zeros_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_cols, compare_blocks_cols))))
add(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols))
COND TREES:
or_(or_(True, ge(compare_blocks_cols, compare_blocks_cols)), or_(and_(False, False), False))
and_(le(zeros_diff_rows, 2), False)
or_(or_(False, False), le(_if_then_else(and_(or_(True, True), False), max_col_clue, _if_then_else(True, ones_diff_rows, ones_diff_cols)), _if_then_else(False, -24, -58)))
and_(le(_if_then_else(False, _if_then_else(True, ones_diff_rows, 26), _if_then_else(False, ones_diff_rows, 3)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, 1, 1))), and_(or_(le(zeros_diff_cols, 4), or_(False, True)), or_(and_(True, True), and_(True, False))))
le(_if_then_else(or_(False, False), _if_then_else(True, 0, max_col_clue), _if_then_else(True, 3, 4)), _if_then_else(and_(True, True), _if_then_else(False, 0, compare_blocks_rows), _if_then_else(True, 53, zeros_diff_rows)))
VAL TREES:
mul(mul(add(mul(-51, compare_blocks_cols), add(ones_diff_cols, 58)), mul(mul(zeros_diff_rows, zeros_diff_rows), add(compare_blocks_cols, 19))), mul(add(add(69, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(-83, 36), add(-91, zeros_diff_cols))))
mul(mul(mul(-86, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)))
add(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols))
mul(add(mul(ones_diff_cols, -1), ones_diff_cols), add(add(compare_blocks_cols, ones_diff_rows), zeros_diff_cols))
add(mul(compare_blocks_cols, compare_blocks_cols), add(mul(ones_diff_rows, add(ones_diff_rows, zeros_diff_cols)), zeros_diff_cols))
add(mul(mul(zeros_diff_cols, zeros_diff_cols), compare_blocks_rows), mul(ones_diff_rows, add(zeros_diff_rows, zeros_diff_rows)))
COND TREES:
or_(and_(and_(True, False), and_(False, True)), and_(False, le(ones_diff_cols, compare_blocks_cols)))
le(_if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_cols))
and_(and_(True, False), and_(True, True))
le(_if_then_else(True, 3, _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_cols, max_row_clue), _if_then_else(True, 4, 3))), _if_then_else(True, 1, zeros_diff_rows))
and_(le(max_col_clue, compare_blocks_rows), False)
VAL TREES:
add(add(ones_diff_rows, mul(add(mul(mul(ones_diff_rows, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(11, compare_blocks_cols))), add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), add(mul(zeros_diff_cols, zeros_diff_cols), add(zeros_diff_cols, zeros_diff_cols))))), add(add(-50, compare_blocks_rows), -29))
mul(mul(mul(add(add(add(ones_diff_cols, zeros_diff_rows), add(-25, ones_diff_cols)), zeros_diff_rows), ones_diff_cols), add(compare_blocks_rows, mul(99, 9))), mul(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_rows)))
add(add(add(compare_blocks_rows, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(add(mul(ones_diff_rows, zeros_diff_rows), add(9, ones_diff_cols)), compare_blocks_rows))
add(add(zeros_diff_rows, zeros_diff_cols), add(mul(add(compare_blocks_cols, mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_rows))), add(zeros_diff_cols, ones_diff_cols)), ones_diff_cols))
add(add(compare_blocks_cols, zeros_diff_rows), add(42, mul(add(add(mul(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, -46), mul(compare_blocks_rows, 43))), mul(add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)), add(add(mul(mul(add(zeros_diff_cols, zeros_diff_rows), compare_blocks_cols), mul(mul(compare_blocks_cols, zeros_diff_rows), zeros_diff_rows)), compare_blocks_rows), mul(compare_blocks_rows, ones_diff_rows))))))
add(add(7, zeros_diff_rows), mul(mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)), ones_diff_rows))
COND TREES:
ge(_if_then_else(ge(_if_then_else(False, zeros_diff_cols, 4), _if_then_else(True, zeros_diff_cols, 3)), _if_then_else(or_(False, True), _if_then_else(True, 3, 4), _if_then_else(True, 0, 0)), _if_then_else(True, _if_then_else(False, 0, 1), _if_then_else(True, 0, 47))), _if_then_else(and_(or_(True, False), ge(1, 2)), _if_then_else(ge(max_row_clue, max_row_clue), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, 2, 1)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(False, max_row_clue, compare_blocks_rows))))
and_(le(max_col_clue, ones_diff_cols), le(zeros_diff_rows, zeros_diff_cols))
le(_if_then_else(True, zeros_diff_rows, 0), _if_then_else(or_(le(0, ones_diff_rows), or_(False, False)), ones_diff_rows, _if_then_else(True, 4, ones_diff_rows)))
le(_if_then_else(and_(and_(False, True), or_(False, True)), 40, zeros_diff_rows), _if_then_else(True, -14, _if_then_else(True, 6, _if_then_else(False, compare_blocks_cols, compare_blocks_cols))))
ge(_if_then_else(False, _if_then_else(True, 3, _if_then_else(True, max_col_clue, zeros_diff_rows)), _if_then_else(False, 4, 4)), _if_then_else(le(3, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, 3, 4)))
VAL TREES:
add(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows)), add(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_rows))), mul(mul(add(zeros_diff_cols, 6), add(-64, ones_diff_cols)), add(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_cols)))), add(mul(mul(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows)), mul(add(compare_blocks_rows, 36), mul(compare_blocks_rows, ones_diff_cols))), mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), add(add(40, compare_blocks_cols), add(mul(add(add(mul(add(20, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_cols))), mul(mul(add(zeros_diff_rows, 81), mul(zeros_diff_cols, zeros_diff_rows)), mul(mul(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_rows, compare_blocks_rows)))), mul(add(add(mul(mul(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_cols, ones_diff_rows)), add(compare_blocks_cols, 8)), add(mul(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_cols, -71))), add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, ones_diff_cols)), mul(add(compare_blocks_cols, 1), add(compare_blocks_rows, zeros_diff_cols))))), ones_diff_rows)))))
add(mul(add(ones_diff_cols, -78), add(ones_diff_cols, add(compare_blocks_cols, compare_blocks_cols))), mul(28, compare_blocks_rows))
mul(add(add(add(mul(add(81, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, ones_diff_rows))), mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, mul(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_cols)))), mul(add(ones_diff_rows, zeros_diff_cols), mul(66, compare_blocks_cols)))), mul(mul(56, ones_diff_rows), mul(ones_diff_rows, ones_diff_cols))), add(ones_diff_rows, zeros_diff_rows))
mul(add(mul(23, -70), add(compare_blocks_rows, add(mul(add(add(compare_blocks_cols, zeros_diff_cols), mul(mul(mul(add(mul(-27, 45), mul(compare_blocks_cols, ones_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(zeros_diff_rows, compare_blocks_rows), add(ones_diff_rows, -39)), add(add(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_cols, 61)))), add(add(add(add(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_rows)), add(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols))), mul(mul(mul(80, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_cols)), mul(add(83, -57), add(-54, zeros_diff_rows)))))), mul(add(ones_diff_rows, -74), add(compare_blocks_rows, compare_blocks_rows))), add(mul(add(zeros_diff_cols, ones_diff_rows), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))))), mul(add(ones_diff_cols, compare_blocks_cols), mul(add(ones_diff_rows, zeros_diff_rows), mul(-85, compare_blocks_rows))))
mul(add(add(mul(compare_blocks_rows, -50), add(zeros_diff_rows, zeros_diff_rows)), add(add(ones_diff_rows, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_cols))), add(add(mul(6, -70), mul(add(mul(mul(-96, compare_blocks_cols), zeros_diff_cols), add(mul(-83, zeros_diff_rows), -68)), compare_blocks_rows)), add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows))))
mul(add(mul(add(zeros_diff_cols, zeros_diff_cols), mul(-78, 27)), mul(add(86, ones_diff_rows), mul(compare_blocks_rows, compare_blocks_rows))), mul(mul(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(10, add(add(add(mul(compare_blocks_rows, ones_diff_cols), mul(ones_diff_rows, ones_diff_cols)), add(add(45, compare_blocks_cols), mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_cols)), ones_diff_rows))), add(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, -99))))), add(compare_blocks_rows, compare_blocks_rows))))
COND TREES:
or_(and_(and_(True, False), and_(False, ge(_if_then_else(True, ones_diff_cols, 71), _if_then_else(True, zeros_diff_cols, 3)))), and_(False, le(ones_diff_cols, compare_blocks_cols)))
le(1, _if_then_else(False, 1, zeros_diff_cols))
and_(ge(zeros_diff_cols, 2), or_(or_(or_(le(_if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, 2, max_col_clue)), ge(_if_then_else(False, 0, 2), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), ge(_if_then_else(and_(True, False), _if_then_else(False, 3, 3), _if_then_else(True, zeros_diff_cols, 1)), _if_then_else(le(3, 3), _if_then_else(False, zeros_diff_cols, 4), _if_then_else(True, ones_diff_cols, zeros_diff_rows)))), le(_if_then_else(or_(ge(zeros_diff_rows, zeros_diff_rows), le(compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(True, zeros_diff_cols, 2), _if_then_else(True, ones_diff_cols, 46)), _if_then_else(or_(True, True), _if_then_else(False, 1, 1), _if_then_else(False, 4, 3))), _if_then_else(ge(_if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(False, compare_blocks_rows, 2)), _if_then_else(or_(True, False), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, max_col_clue, zeros_diff_rows)), _if_then_else(le(max_row_clue, compare_blocks_rows), _if_then_else(False, 2, 16), _if_then_else(and_(True, True), 4, ones_diff_cols))))))
le(_if_then_else(True, 3, _if_then_else(and_(True, True), _if_then_else(False, _if_then_else(True, -14, max_row_clue), max_row_clue), _if_then_else(and_(and_(False, True), ge(0, zeros_diff_rows)), 4, 3))), _if_then_else(True, ones_diff_cols, zeros_diff_rows))
and_(le(max_col_clue, _if_then_else(and_(False, True), _if_then_else(False, max_row_clue, 4), _if_then_else(False, 2, zeros_diff_rows))), le(ones_diff_cols, 0))
VAL TREES:
add(add(ones_diff_rows, mul(compare_blocks_cols, compare_blocks_rows)), add(add(-50, compare_blocks_rows), -29))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(add(ones_diff_cols, mul(mul(ones_diff_rows, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows))), mul(compare_blocks_cols, compare_blocks_rows)))
add(add(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, zeros_diff_cols)), add(compare_blocks_cols, compare_blocks_rows))
add(add(zeros_diff_rows, zeros_diff_cols), add(mul(add(compare_blocks_cols, mul(add(ones_diff_cols, ones_diff_cols), mul(mul(mul(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, ones_diff_rows)), ones_diff_rows))), add(zeros_diff_cols, ones_diff_cols)), ones_diff_cols))
add(add(mul(add(compare_blocks_cols, ones_diff_cols), mul(mul(compare_blocks_cols, -79), add(compare_blocks_rows, zeros_diff_cols))), zeros_diff_rows), add(42, mul(add(add(mul(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, -46), mul(compare_blocks_rows, 43))), mul(add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_rows))))))
add(add(7, zeros_diff_rows), mul(mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)), ones_diff_rows))
COND TREES:
or_(and_(and_(True, False), and_(False, True)), and_(False, le(ones_diff_cols, compare_blocks_cols)))
le(_if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, _if_then_else(le(max_col_clue, ones_diff_cols), max_col_clue, compare_blocks_rows), zeros_diff_cols))
and_(ge(1, 2), True)
le(_if_then_else(True, 3, _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_cols, max_row_clue), _if_then_else(True, 4, 3))), _if_then_else(True, ones_diff_cols, zeros_diff_rows))
and_(le(max_col_clue, compare_blocks_rows), False)
VAL TREES:
add(mul(add(mul(zeros_diff_rows, compare_blocks_rows), zeros_diff_rows), ones_diff_cols), mul(zeros_diff_rows, -35))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(mul(mul(ones_diff_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), zeros_diff_rows))
add(add(add(-63, zeros_diff_cols), mul(49, 62)), mul(-33, compare_blocks_rows))
add(add(zeros_diff_rows, zeros_diff_cols), add(mul(add(compare_blocks_cols, 2), add(zeros_diff_cols, ones_diff_cols)), ones_diff_cols))
add(add(compare_blocks_cols, zeros_diff_rows), add(42, add(add(add(add(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, 24)), mul(mul(compare_blocks_cols, -41), add(compare_blocks_cols, compare_blocks_rows))), add(add(add(zeros_diff_cols, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), add(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols))))))
add(add(7, zeros_diff_rows), mul(mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)), ones_diff_rows))
COND TREES:
le(_if_then_else(and_(ge(_if_then_else(True, 1, 0), _if_then_else(True, max_row_clue, 4)), and_(ge(ones_diff_cols, max_row_clue), and_(False, False))), _if_then_else(le(_if_then_else(False, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, ones_diff_rows, zeros_diff_rows)), _if_then_else(le(zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_cols, -37), _if_then_else(True, zeros_diff_cols, zeros_diff_cols)), _if_then_else(le(compare_blocks_cols, ones_diff_cols), _if_then_else(False, -82, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, 4, 3), _if_then_else(True, compare_blocks_cols, ones_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, ones_diff_cols, max_col_clue)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, compare_blocks_cols), _if_then_else(or_(ge(max_row_clue, _if_then_else(False, 1, 0)), le(ones_diff_cols, _if_then_else(False, compare_blocks_rows, 1))), _if_then_else(True, 2, max_row_clue), 4)))), _if_then_else(le(_if_then_else(ge(compare_blocks_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, 4), _if_then_else(False, 2, 0)), _if_then_else(le(ones_diff_cols, ones_diff_cols), _if_then_else(True, 2, 1), _if_then_else(False, -69, 1))), _if_then_else(or_(or_(True, False), ge(3, max_col_clue)), _if_then_else(le(max_row_clue, compare_blocks_rows), max_col_clue, _if_then_else(True, max_col_clue, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_cols, 2), _if_then_else(True, 3, 2))), _if_then_else(ge(_if_then_else(True, 0, compare_blocks_cols), _if_then_else(False, max_row_clue, max_row_clue)), _if_then_else(le(zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 2, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 0)), _if_then_else(and_(False, True), _if_then_else(True, 1, 4), _if_then_else(False, 0, 4)))))
or_(or_(True, True), le(_if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, 1, 1)), _if_then_else(or_(False, False), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(True, 0, ones_diff_rows))), _if_then_else(and_(and_(False, False), and_(False, True)), _if_then_else(le(4, 3), _if_then_else(True, 4, 4), _if_then_else(True, max_row_clue, ones_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, max_col_clue, ones_diff_rows), _if_then_else(True, 1, compare_blocks_cols))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(True, zeros_diff_cols, 1)), _if_then_else(or_(False, False), _if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, compare_blocks_rows, 0)), _if_then_else(ge(compare_blocks_cols, -11), _if_then_else(False, 4, 4), _if_then_else(True, 4, 1)))), max_row_clue))
le(_if_then_else(False, 3, _if_then_else(False, ones_diff_rows, _if_then_else(True, 3, max_row_clue))), _if_then_else(ge(compare_blocks_cols, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, _if_then_else(True, 3, ones_diff_cols), compare_blocks_cols)))
ge(_if_then_else(ge(_if_then_else(True, 0, zeros_diff_cols), _if_then_else(False, ones_diff_rows, max_col_clue)), _if_then_else(and_(False, True), _if_then_else(False, 4, compare_blocks_cols), compare_blocks_cols), _if_then_else(and_(False, True), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, compare_blocks_cols))), _if_then_else(or_(ge(3, compare_blocks_rows), and_(le(_if_then_else(and_(le(ones_diff_rows, ones_diff_rows), or_(False, True)), _if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, 1)), _if_then_else(or_(False, True), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(False, 59, 3))), _if_then_else(le(_if_then_else(False, 1, 3), _if_then_else(False, 3, 3)), _if_then_else(ge(ones_diff_cols, ones_diff_cols), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(or_(True, False), _if_then_else(True, max_col_clue, 3), _if_then_else(True, 2, 1)))), False)), _if_then_else(ge(ones_diff_rows, 1), _if_then_else(False, compare_blocks_cols, _if_then_else(and_(True, False), _if_then_else(False, 2, ones_diff_cols), _if_then_else(True, 3, compare_blocks_rows))), _if_then_else(False, compare_blocks_rows, 4)), _if_then_else(True, 0, ones_diff_cols)))
and_(and_(or_(False, True), or_(True, or_(ge(_if_then_else(True, 4, ones_diff_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(ge(1, 3), le(max_row_clue, ones_diff_rows))))), True)
VAL TREES:
add(mul(mul(61, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, zeros_diff_cols), mul(ones_diff_cols, ones_diff_rows)))
add(add(zeros_diff_rows, ones_diff_cols), mul(zeros_diff_rows, mul(compare_blocks_rows, mul(compare_blocks_cols, compare_blocks_cols))))
add(add(compare_blocks_rows, mul(ones_diff_rows, zeros_diff_cols)), add(ones_diff_rows, add(compare_blocks_cols, zeros_diff_cols)))
mul(mul(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_rows))
add(mul(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_rows))
add(mul(-2, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols))
COND TREES:
ge(_if_then_else(False, _if_then_else(True, 2, max_row_clue), _if_then_else(False, 0, max_col_clue)), _if_then_else(ge(3, zeros_diff_cols), zeros_diff_rows, _if_then_else(True, 3, -9)))
or_(or_(or_(True, False), ge(_if_then_else(True, zeros_diff_cols, _if_then_else(True, zeros_diff_rows, max_row_clue)), _if_then_else(False, max_col_clue, _if_then_else(True, max_row_clue, _if_then_else(False, 0, compare_blocks_cols))))), and_(or_(False, False), True))
or_(or_(le(_if_then_else(False, _if_then_else(ge(_if_then_else(True, compare_blocks_rows, 2), 2), _if_then_else(True, 3, ones_diff_rows), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), 4), _if_then_else(True, ones_diff_rows, max_row_clue)), le(_if_then_else(True, 3, max_row_clue), _if_then_else(False, -33, zeros_diff_rows))), ge(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 1, compare_blocks_rows)), _if_then_else(le(_if_then_else(True, max_row_clue, 70), compare_blocks_rows), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(False, ones_diff_rows, zeros_diff_rows))))
and_(le(4, _if_then_else(True, 50, ones_diff_cols)), or_(False, True))
ge(_if_then_else(or_(and_(False, False), ge(compare_blocks_cols, 3)), _if_then_else(False, _if_then_else(False, max_row_clue, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, ones_diff_cols, compare_blocks_rows))), _if_then_else(and_(and_(and_(le(max_col_clue, 0), False), False), le(max_row_clue, max_col_clue)), _if_then_else(le(max_col_clue, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 1, 3)), _if_then_else(ge(3, max_row_clue), _if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 0, ones_diff_cols))))
VAL TREES:
add(add(ones_diff_rows, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols))
mul(mul(add(compare_blocks_cols, 73), mul(ones_diff_rows, compare_blocks_rows)), mul(92, add(compare_blocks_cols, zeros_diff_rows)))
mul(add(compare_blocks_rows, ones_diff_cols), mul(74, 89))
add(add(compare_blocks_cols, compare_blocks_rows), mul(-44, 54))
mul(mul(add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), mul(add(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_rows, ones_diff_rows))), mul(mul(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_cols, zeros_diff_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_rows))))
add(add(compare_blocks_rows, zeros_diff_rows), add(54, ones_diff_rows))
COND TREES:
or_(le(max_col_clue, compare_blocks_cols), True)
or_(le(max_col_clue, 2), le(zeros_diff_rows, 2))
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(max_col_clue, max_row_clue)), _if_then_else(le(max_col_clue, 4), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, max_row_clue, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(False, _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(False, max_col_clue, ones_diff_cols), 26), ge(4, compare_blocks_rows))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), compare_blocks_rows, _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
or_(or_(True, le(_if_then_else(or_(True, False), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(True, zeros_diff_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(True, max_col_clue, 41), _if_then_else(False, ones_diff_cols, 4)))), or_(and_(False, False), False))
and_(ge(0, _if_then_else(le(zeros_diff_cols, 1), _if_then_else(le(2, compare_blocks_cols), 1, 4), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, zeros_diff_rows), 1), zeros_diff_cols, max_row_clue))), False)
or_(or_(False, False), le(_if_then_else(and_(or_(True, True), False), compare_blocks_cols, _if_then_else(True, ones_diff_rows, ones_diff_cols)), _if_then_else(False, _if_then_else(ge(_if_then_else(le(0, zeros_diff_cols), _if_then_else(True, 2, max_col_clue), _if_then_else(True, 4, 0)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_rows, 1), _if_then_else(True, ones_diff_rows, ones_diff_rows))), _if_then_else(or_(or_(False, False), and_(False, False)), _if_then_else(ge(max_col_clue, max_row_clue), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(True, -78, max_col_clue)), _if_then_else(and_(True, False), _if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 3))), _if_then_else(or_(le(compare_blocks_rows, compare_blocks_cols), ge(3, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(False, 1, 4), _if_then_else(True, ones_diff_rows, 4)), _if_then_else(and_(False, True), _if_then_else(False, max_row_clue, ones_diff_rows), _if_then_else(False, -84, ones_diff_cols)))), -58)))
and_(le(_if_then_else(False, _if_then_else(True, ones_diff_rows, _if_then_else(or_(or_(False, False), ge(zeros_diff_rows, 1)), _if_then_else(ge(zeros_diff_cols, max_col_clue), _if_then_else(True, max_row_clue, max_col_clue), _if_then_else(True, 0, ones_diff_rows)), _if_then_else(le(max_row_clue, ones_diff_cols), _if_then_else(False, 2, max_row_clue), _if_then_else(False, compare_blocks_rows, compare_blocks_rows)))), _if_then_else(False, ones_diff_rows, 3)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, 1, 1))), and_(or_(le(zeros_diff_cols, 4), or_(False, True)), or_(and_(True, True), and_(True, False))))
le(_if_then_else(or_(False, False), _if_then_else(True, 0, max_col_clue), _if_then_else(True, 3, 4)), _if_then_else(and_(True, True), _if_then_else(False, _if_then_else(le(_if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(False, 26, 2)), _if_then_else(ge(compare_blocks_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, max_col_clue, zeros_diff_rows)), _if_then_else(le(max_row_clue, 4), _if_then_else(True, ones_diff_cols, ones_diff_cols), _if_then_else(True, ones_diff_rows, 3))), _if_then_else(or_(False, True), zeros_diff_rows, 3)), _if_then_else(True, 53, zeros_diff_rows)))
VAL TREES:
mul(mul(add(mul(-51, compare_blocks_cols), add(ones_diff_cols, 58)), mul(mul(zeros_diff_rows, zeros_diff_rows), add(compare_blocks_cols, 19))), mul(add(add(69, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(-83, 36), add(-91, zeros_diff_cols))))
mul(mul(mul(-86, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)))
add(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols))
mul(add(mul(ones_diff_cols, -1), ones_diff_cols), add(add(compare_blocks_cols, ones_diff_rows), zeros_diff_cols))
add(mul(compare_blocks_cols, compare_blocks_cols), add(mul(ones_diff_rows, add(ones_diff_rows, zeros_diff_cols)), zeros_diff_cols))
add(mul(mul(zeros_diff_cols, zeros_diff_cols), compare_blocks_rows), mul(ones_diff_rows, add(zeros_diff_rows, zeros_diff_rows)))
COND TREES:
or_(or_(or_(True, ge(zeros_diff_rows, 0)), True), le(3, _if_then_else(True, ones_diff_cols, ones_diff_cols)))
le(_if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(ge(max_col_clue, compare_blocks_rows), compare_blocks_cols, ones_diff_cols))
ge(_if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(le(_if_then_else(and_(and_(ge(_if_then_else(True, ones_diff_rows, 0), _if_then_else(False, max_col_clue, 4)), ge(_if_then_else(False, 0, 0), _if_then_else(False, 0, ones_diff_rows))), or_(le(_if_then_else(False, 4, 0), _if_then_else(False, zeros_diff_rows, 0)), ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(False, 4, 0)))), _if_then_else(or_(ge(_if_then_else(True, ones_diff_cols, 4), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), and_(or_(False, True), and_(False, False))), _if_then_else(ge(_if_then_else(True, 3, 0), _if_then_else(False, max_row_clue, -69)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, -81), _if_then_else(True, 4, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, 3), _if_then_else(True, max_row_clue, 4), _if_then_else(True, 20, max_row_clue))), _if_then_else(ge(_if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(True, zeros_diff_rows, ones_diff_rows)), _if_then_else(le(compare_blocks_rows, ones_diff_rows), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(ge(ones_diff_rows, 40), _if_then_else(True, max_row_clue, 14), _if_then_else(True, 1, ones_diff_rows)))), _if_then_else(le(_if_then_else(and_(False, False), _if_then_else(False, 4, 3), _if_then_else(True, max_col_clue, 0)), _if_then_else(ge(zeros_diff_rows, -7), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(False, ones_diff_rows, 0))), _if_then_else(ge(_if_then_else(True, -45, 2), _if_then_else(True, zeros_diff_cols, 4)), _if_then_else(and_(False, True), _if_then_else(True, -92, ones_diff_cols), _if_then_else(True, 0, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, 1), _if_then_else(True, 1, 1), _if_then_else(True, 1, ones_diff_cols))), _if_then_else(and_(and_(False, True), and_(False, True)), _if_then_else(ge(1, zeros_diff_cols), _if_then_else(True, ones_diff_cols, 0), _if_then_else(True, 3, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(True, max_col_clue, 1), _if_then_else(True, 2, 3))))), 2), compare_blocks_cols, compare_blocks_cols))
or_(le(zeros_diff_cols, -26), and_(or_(True, False), ge(-27, _if_then_else(True, zeros_diff_cols, 0))))
and_(or_(False, True), or_(ge(56, compare_blocks_rows), or_(False, True)))
VAL TREES:
mul(add(mul(mul(add(9, ones_diff_rows), -79), mul(zeros_diff_cols, zeros_diff_cols)), ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(add(mul(add(zeros_diff_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols)), add(add(7, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))), add(mul(mul(ones_diff_rows, 37), add(-96, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_rows))))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, add(add(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_cols)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, 85))), add(add(add(compare_blocks_rows, ones_diff_cols), mul(ones_diff_cols, zeros_diff_rows)), add(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_rows)))))))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(mul(mul(add(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, ones_diff_cols))), add(add(mul(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, 85)), mul(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))), ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
le(_if_then_else(or_(le(_if_then_else(True, 3, ones_diff_cols), 2), False), _if_then_else(True, 1, 1), _if_then_else(True, -31, _if_then_else(False, 0, max_row_clue))), 0)
or_(ge(_if_then_else(ge(_if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(True, 81, max_col_clue)), compare_blocks_cols, zeros_diff_cols), 2), and_(True, ge(0, zeros_diff_cols)))
or_(le(zeros_diff_cols, _if_then_else(ge(_if_then_else(le(_if_then_else(True, 2, ones_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(or_(False, False), _if_then_else(False, 93, -18), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, -25, zeros_diff_cols), _if_then_else(False, max_row_clue, max_col_clue))), _if_then_else(or_(and_(False, True), ge(compare_blocks_rows, 4)), _if_then_else(le(4, max_col_clue), _if_then_else(False, 0, -27), _if_then_else(False, 4, 3)), _if_then_else(or_(True, True), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(True, 3, max_col_clue)))), _if_then_else(and_(and_(and_(True, True), ge(zeros_diff_cols, zeros_diff_rows)), or_(ge(max_row_clue, max_row_clue), le(compare_blocks_cols, 1))), _if_then_else(ge(_if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(False, 1, zeros_diff_cols)), _if_then_else(or_(True, True), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, -37, max_col_clue)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(False, zeros_diff_cols, 1))), _if_then_else(ge(_if_then_else(False, 1, 3), _if_then_else(True, zeros_diff_cols, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, zeros_diff_cols, max_row_clue), _if_then_else(True, 3, compare_blocks_rows)), _if_then_else(ge(compare_blocks_rows, max_row_clue), _if_then_else(True, max_col_clue, ones_diff_rows), _if_then_else(False, ones_diff_cols, max_row_clue)))), _if_then_else(ge(_if_then_else(ge(max_col_clue, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, 0, -25)), _if_then_else(ge(2, max_row_clue), _if_then_else(True, 1, max_col_clue), _if_then_else(True, ones_diff_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(False, 3, ones_diff_cols), _if_then_else(False, -39, 2)), _if_then_else(and_(False, False), _if_then_else(True, 2, max_row_clue), _if_then_else(True, zeros_diff_rows, zeros_diff_cols)), _if_then_else(ge(1, 1), _if_then_else(False, max_row_clue, compare_blocks_rows), _if_then_else(False, -75, 1))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(le(zeros_diff_rows, 2), _if_then_else(False, 1, zeros_diff_cols), _if_then_else(False, max_row_clue, 2)), _if_then_else(le(zeros_diff_rows, 1), _if_then_else(True, zeros_diff_cols, 2), _if_then_else(False, compare_blocks_rows, compare_blocks_rows)))))), True)
or_(ge(4, compare_blocks_rows), ge(_if_then_else(ge(3, compare_blocks_rows), 3, 4), _if_then_else(False, _if_then_else(False, ones_diff_cols, _if_then_else(False, 2, ones_diff_rows)), zeros_diff_rows)))
or_(or_(ge(compare_blocks_cols, compare_blocks_rows), True), True)
VAL TREES:
mul(mul(mul(add(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_rows, ones_diff_rows))), mul(mul(add(-59, compare_blocks_rows), add(60, ones_diff_cols)), mul(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)))), add(mul(mul(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_cols, zeros_diff_rows)), add(add(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_rows))), mul(mul(add(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)), add(mul(33, compare_blocks_cols), add(zeros_diff_rows, ones_diff_cols)))))
mul(add(zeros_diff_rows, add(ones_diff_rows, zeros_diff_cols)), add(zeros_diff_cols, mul(zeros_diff_rows, ones_diff_cols)))
mul(mul(55, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows))
add(mul(ones_diff_rows, ones_diff_cols), add(compare_blocks_cols, add(zeros_diff_cols, compare_blocks_cols)))
mul(add(zeros_diff_rows, mul(zeros_diff_cols, compare_blocks_rows)), add(add(ones_diff_cols, ones_diff_cols), compare_blocks_cols))
add(add(compare_blocks_cols, -31), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
or_(or_(or_(True, False), True), le(zeros_diff_rows, 0))
le(1, _if_then_else(False, compare_blocks_cols, compare_blocks_cols))
ge(_if_then_else(True, max_row_clue, ones_diff_cols), _if_then_else(False, compare_blocks_cols, compare_blocks_cols))
or_(False, and_(or_(True, False), ge(4, zeros_diff_cols)))
and_(or_(False, True), False)
VAL TREES:
mul(add(ones_diff_cols, mul(mul(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, compare_blocks_rows))), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows)), ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(mul(mul(mul(add(ones_diff_rows, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_cols)), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))), mul(add(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_cols, compare_blocks_cols)))), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(add(mul(add(compare_blocks_rows, 75), mul(zeros_diff_cols, 45)), add(mul(-37, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols))), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
or_(or_(or_(ge(1, max_row_clue), or_(or_(True, False), False)), True), le(3, 0))
le(_if_then_else(le(max_col_clue, ones_diff_cols), compare_blocks_cols, compare_blocks_rows), _if_then_else(ge(max_col_clue, compare_blocks_rows), compare_blocks_cols, ones_diff_cols))
ge(_if_then_else(False, max_row_clue, ones_diff_cols), compare_blocks_rows)
or_(le(zeros_diff_cols, -26), le(1, _if_then_else(ge(max_col_clue, 4), zeros_diff_cols, _if_then_else(and_(False, False), _if_then_else(False, max_row_clue, max_row_clue), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)))))
and_(or_(False, True), or_(and_(True, True), False))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, add(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols))))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(mul(add(mul(mul(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(27, compare_blocks_cols), mul(zeros_diff_cols, compare_blocks_cols))), mul(mul(add(compare_blocks_rows, 52), mul(compare_blocks_rows, ones_diff_rows)), add(add(zeros_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, 63))), mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_rows), mul(zeros_diff_cols, zeros_diff_rows))))))))
add(add(zeros_diff_rows, mul(mul(mul(add(21, ones_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_rows))), mul(mul(mul(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols))))), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(add(add(mul(mul(mul(-62, -8), mul(zeros_diff_rows, compare_blocks_cols)), add(add(47, zeros_diff_cols), mul(compare_blocks_cols, ones_diff_cols))), add(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(mul(compare_blocks_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)))), mul(add(add(add(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_rows)), add(add(-10, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows))), mul(mul(add(zeros_diff_cols, zeros_diff_cols), add(zeros_diff_cols, zeros_diff_cols)), add(mul(compare_blocks_rows, -81), add(zeros_diff_rows, compare_blocks_rows))))), compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), add(add(add(add(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_cols))), mul(mul(mul(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_rows)), add(add(compare_blocks_rows, ones_diff_rows), mul(42, compare_blocks_cols))))), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
or_(False, le(compare_blocks_rows, _if_then_else(False, 1, max_col_clue)))
or_(le(max_col_clue, 2), True)
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), _if_then_else(or_(False, False), max_row_clue, 2), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(ge(2, ones_diff_rows), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(3, compare_blocks_cols), le(_if_then_else(True, 0, -77), _if_then_else(False, 3, compare_blocks_rows)))
or_(ge(_if_then_else(and_(True, False), max_col_clue, _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_row_clue))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(mul(mul(ones_diff_cols, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_rows)), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, mul(mul(mul(ones_diff_cols, -43), add(compare_blocks_rows, -41)), add(add(compare_blocks_rows, zeros_diff_cols), mul(-69, zeros_diff_rows)))))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(mul(add(compare_blocks_cols, mul(compare_blocks_rows, zeros_diff_cols)), add(ones_diff_rows, add(compare_blocks_rows, ones_diff_cols))), 60)))
add(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_cols))
mul(mul(ones_diff_cols, -5), mul(add(add(mul(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_cols))), mul(add(add(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_cols, 78)), add(add(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_cols)))))
mul(mul(-76, -25), mul(ones_diff_rows, mul(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols))))
COND TREES:
or_(and_(and_(True, True), and_(False, True)), and_(False, le(ones_diff_cols, compare_blocks_cols)))
le(_if_then_else(ge(0, zeros_diff_cols), max_col_clue, compare_blocks_rows), _if_then_else(False, max_col_clue, zeros_diff_cols))
and_(ge(1, 70), and_(True, True))
le(_if_then_else(True, 3, _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_cols, max_row_clue), _if_then_else(True, 4, _if_then_else(False, max_col_clue, ones_diff_cols)))), _if_then_else(True, ones_diff_cols, zeros_diff_rows))
and_(le(1, 3), False)
VAL TREES:
add(add(ones_diff_rows, mul(compare_blocks_cols, compare_blocks_rows)), add(add(-50, compare_blocks_rows), -29))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(add(ones_diff_cols, ones_diff_cols), mul(add(zeros_diff_rows, ones_diff_rows), add(compare_blocks_cols, ones_diff_cols))))
add(add(add(-63, zeros_diff_cols), mul(49, 62)), mul(-33, add(add(ones_diff_rows, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols))))
add(add(mul(mul(compare_blocks_cols, compare_blocks_rows), mul(add(zeros_diff_rows, compare_blocks_cols), ones_diff_cols)), zeros_diff_cols), add(mul(add(compare_blocks_cols, mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_rows))), add(zeros_diff_cols, ones_diff_cols)), ones_diff_cols))
add(add(compare_blocks_cols, zeros_diff_rows), add(42, mul(add(add(mul(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, -46), mul(compare_blocks_rows, 43))), mul(add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)), add(add(mul(add(mul(-87, compare_blocks_cols), add(zeros_diff_cols, ones_diff_cols)), mul(mul(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows))), compare_blocks_rows), mul(compare_blocks_rows, ones_diff_rows))))))
add(add(add(add(zeros_diff_rows, 83), mul(zeros_diff_cols, -6)), zeros_diff_rows), mul(mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)), ones_diff_rows))
COND TREES:
le(_if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, _if_then_else(ge(0, ones_diff_rows), _if_then_else(True, compare_blocks_rows, 3), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)), _if_then_else(False, compare_blocks_rows, compare_blocks_cols)))
le(_if_then_else(or_(ge(0, zeros_diff_cols), True), ones_diff_rows, _if_then_else(True, _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_cols))), _if_then_else(False, 2, max_col_clue))
le(_if_then_else(and_(and_(le(4, _if_then_else(False, 0, zeros_diff_cols)), or_(False, True)), and_(le(38, max_col_clue), or_(True, True))), _if_then_else(and_(ge(zeros_diff_cols, compare_blocks_cols), ge(compare_blocks_cols, 2)), _if_then_else(le(ones_diff_rows, 0), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(le(0, 3), _if_then_else(False, 3, ones_diff_cols), _if_then_else(False, compare_blocks_rows, max_row_clue))), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(ge(_if_then_else(and_(False, True), _if_then_else(False, 2, 1), _if_then_else(True, 3, max_col_clue)), _if_then_else(and_(True, False), _if_then_else(False, 1, 3), _if_then_else(False, ones_diff_cols, ones_diff_cols))), _if_then_else(or_(ge(-20, max_col_clue), le(_if_then_else(ge(max_row_clue, 2), _if_then_else(True, 3, 1), _if_then_else(True, max_col_clue, 0)), max_row_clue)), _if_then_else(le(compare_blocks_cols, 0), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(ge(_if_then_else(ge(_if_then_else(le(3, 3), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, ones_diff_cols, 1)), _if_then_else(le(4, zeros_diff_cols), _if_then_else(True, 1, ones_diff_rows), _if_then_else(True, 4, compare_blocks_rows))), _if_then_else(le(_if_then_else(False, 3, 0), _if_then_else(True, zeros_diff_rows, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, max_col_clue, -87)), _if_then_else(le(4, ones_diff_cols), _if_then_else(False, ones_diff_cols, 1), _if_then_else(False, max_col_clue, 1))), _if_then_else(and_(or_(True, False), ge(compare_blocks_rows, 0)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, max_col_clue, max_row_clue)), _if_then_else(and_(False, True), _if_then_else(False, ones_diff_rows, compare_blocks_cols), _if_then_else(True, 3, 1)))), _if_then_else(le(_if_then_else(and_(True, False), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, 2, ones_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, max_col_clue, max_row_clue), _if_then_else(False, compare_blocks_cols, 50))), _if_then_else(ge(_if_then_else(False, -44, max_col_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, 4, 0), _if_then_else(True, 88, zeros_diff_rows)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(True, zeros_diff_rows, 4), _if_then_else(True, zeros_diff_rows, compare_blocks_rows))), _if_then_else(or_(le(1, 2), or_(False, True)), _if_then_else(ge(2, zeros_diff_cols), _if_then_else(True, 3, 3), _if_then_else(False, max_col_clue, 2)), _if_then_else(le(compare_blocks_rows, 3), _if_then_else(False, ones_diff_cols, ones_diff_cols), _if_then_else(True, 3, -77))))), compare_blocks_cols, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(True, 0, zeros_diff_cols), _if_then_else(False, ones_diff_rows, compare_blocks_rows))), _if_then_else(or_(ge(compare_blocks_cols, 0), or_(False, True)), _if_then_else(ge(compare_blocks_cols, 4), _if_then_else(False, 3, max_col_clue), _if_then_else(True, max_col_clue, 3)), _if_then_else(le(ones_diff_rows, max_col_clue), _if_then_else(False, -2, max_col_clue), _if_then_else(False, ones_diff_cols, ones_diff_rows)))))
and_(and_(le(_if_then_else(False, 3, 3), _if_then_else(True, 4, zeros_diff_rows)), ge(_if_then_else(False, 4, zeros_diff_cols), max_col_clue)), ge(_if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, max_col_clue), _if_then_else(False, ones_diff_rows, max_col_clue)), _if_then_else(and_(False, True), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(False, 1, compare_blocks_cols))))
and_(or_(ge(zeros_diff_cols, zeros_diff_rows), le(2, _if_then_else(True, max_col_clue, compare_blocks_cols))), True)
VAL TREES:
mul(mul(ones_diff_cols, add(add(mul(ones_diff_rows, compare_blocks_rows), ones_diff_rows), compare_blocks_cols)), add(compare_blocks_cols, compare_blocks_cols))
add(add(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_rows, compare_blocks_cols))
mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 84)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_cols))), add(add(add(ones_diff_cols, -2), add(compare_blocks_cols, compare_blocks_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows))))
mul(add(compare_blocks_cols, zeros_diff_cols), add(add(zeros_diff_rows, compare_blocks_rows), zeros_diff_cols))
add(mul(add(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), add(mul(ones_diff_rows, ones_diff_cols), mul(79, ones_diff_cols)))
add(mul(add(mul(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_rows)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_rows))), mul(mul(add(13, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_cols, ones_diff_rows))))
COND TREES:
or_(le(zeros_diff_rows, compare_blocks_cols), and_(False, False))
and_(False, or_(or_(False, True), and_(False, ge(_if_then_else(False, 2, 0), _if_then_else(True, compare_blocks_rows, max_col_clue)))))
and_(True, le(_if_then_else(ge(_if_then_else(le(_if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, -70)), _if_then_else(ge(2, max_row_clue), _if_then_else(True, 0, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, 3)), _if_then_else(ge(zeros_diff_cols, 1), _if_then_else(True, ones_diff_cols, 3), _if_then_else(True, zeros_diff_cols, 1))), _if_then_else(ge(_if_then_else(False, compare_blocks_cols, 0), _if_then_else(False, ones_diff_rows, compare_blocks_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(True, max_row_clue, compare_blocks_rows)), _if_then_else(and_(False, False), _if_then_else(False, max_col_clue, max_row_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)))), _if_then_else(ge(_if_then_else(ge(compare_blocks_rows, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(True, 3, 4)), _if_then_else(le(zeros_diff_rows, 4), _if_then_else(False, 0, -39), _if_then_else(False, compare_blocks_cols, ones_diff_rows))), _if_then_else(ge(_if_then_else(False, 1, 2), _if_then_else(True, 3, 1)), _if_then_else(le(compare_blocks_rows, 3), _if_then_else(True, ones_diff_cols, 4), _if_then_else(True, 4, 0)), _if_then_else(ge(max_col_clue, max_row_clue), _if_then_else(False, ones_diff_rows, 4), _if_then_else(True, zeros_diff_cols, zeros_diff_rows))), _if_then_else(ge(_if_then_else(False, 4, max_row_clue), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(ge(3, -62), _if_then_else(False, 0, 4), _if_then_else(True, zeros_diff_rows, max_row_clue)), _if_then_else(ge(0, max_row_clue), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 0, zeros_diff_rows)))), _if_then_else(or_(or_(le(compare_blocks_cols, ones_diff_rows), le(max_col_clue, compare_blocks_cols)), ge(_if_then_else(False, max_col_clue, 1), _if_then_else(False, 4, ones_diff_rows))), _if_then_else(le(_if_then_else(False, zeros_diff_rows, zeros_diff_cols), _if_then_else(False, ones_diff_cols, zeros_diff_rows)), _if_then_else(ge(3, ones_diff_cols), _if_then_else(True, 3, 3), _if_then_else(True, ones_diff_cols, compare_blocks_cols)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, compare_blocks_cols), _if_then_else(True, 4, zeros_diff_rows))), _if_then_else(and_(ge(compare_blocks_rows, 2), or_(False, False)), _if_then_else(ge(max_col_clue, 4), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(True, 4, 2)), _if_then_else(le(max_row_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_cols, compare_blocks_cols))))), 53))
ge(zeros_diff_rows, _if_then_else(False, _if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(or_(ge(zeros_diff_rows, ones_diff_cols), or_(True, False)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(False, max_col_clue, 0)), _if_then_else(le(2, zeros_diff_cols), _if_then_else(True, ones_diff_rows, max_col_clue), _if_then_else(False, max_col_clue, ones_diff_rows)))))
and_(le(ones_diff_rows, max_row_clue), or_(False, False))
VAL TREES:
mul(mul(zeros_diff_cols, compare_blocks_cols), add(mul(zeros_diff_cols, add(compare_blocks_cols, zeros_diff_cols)), compare_blocks_cols))
mul(mul(add(add(ones_diff_rows, 13), compare_blocks_rows), add(compare_blocks_cols, mul(-28, ones_diff_rows))), add(ones_diff_cols, -82))
add(mul(zeros_diff_cols, add(zeros_diff_cols, compare_blocks_rows)), mul(compare_blocks_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_cols))
add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))
mul(add(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, -66))
COND TREES:
or_(or_(or_(and_(True, False), False), True), le(_if_then_else(le(0, 1), _if_then_else(False, ones_diff_rows, compare_blocks_cols), _if_then_else(or_(True, and_(True, False)), zeros_diff_cols, max_col_clue)), 4))
le(_if_then_else(and_(False, False), compare_blocks_cols, _if_then_else(and_(True, and_(and_(True, False), ge(zeros_diff_cols, -5))), max_col_clue, compare_blocks_rows)), _if_then_else(False, compare_blocks_cols, ones_diff_cols))
ge(_if_then_else(le(max_row_clue, 3), max_row_clue, ones_diff_cols), _if_then_else(False, compare_blocks_cols, compare_blocks_cols))
or_(le(zeros_diff_cols, -26), and_(or_(True, True), le(0, 2)))
and_(or_(ge(_if_then_else(or_(or_(False, False), ge(zeros_diff_cols, 2)), _if_then_else(or_(False, False), _if_then_else(True, 4, ones_diff_cols), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(ge(1, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_cols), _if_then_else(False, -25, zeros_diff_cols))), _if_then_else(ge(_if_then_else(False, 0, ones_diff_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(False, 2, 2), _if_then_else(True, ones_diff_cols, ones_diff_rows)), _if_then_else(le(compare_blocks_rows, ones_diff_cols), _if_then_else(False, 92, max_col_clue), _if_then_else(True, -31, 1)))), and_(or_(ge(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, max_col_clue, max_row_clue)), le(_if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(True, ones_diff_rows, zeros_diff_cols))), or_(or_(or_(False, True), ge(ones_diff_rows, 3)), le(_if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(False, compare_blocks_rows, ones_diff_cols))))), or_(True, True))
VAL TREES:
mul(add(mul(mul(ones_diff_cols, ones_diff_cols), mul(mul(ones_diff_cols, zeros_diff_rows), compare_blocks_rows)), ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(mul(compare_blocks_cols, ones_diff_cols), add(-40, ones_diff_rows)), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(add(add(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_cols)), mul(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows))), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
or_(and_(False, and_(False, True)), and_(and_(False, True), le(ones_diff_cols, max_row_clue)))
le(_if_then_else(and_(True, True), max_col_clue, compare_blocks_rows), _if_then_else(False, _if_then_else(or_(and_(or_(True, True), ge(compare_blocks_cols, max_col_clue)), and_(ge(max_row_clue, 0), or_(True, True))), _if_then_else(and_(and_(True, False), le(1, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_rows, 3), _if_then_else(False, 3, zeros_diff_rows)), _if_then_else(ge(4, zeros_diff_rows), _if_then_else(False, 1, compare_blocks_rows), _if_then_else(True, 2, 1))), _if_then_else(or_(or_(False, False), and_(False, True)), _if_then_else(le(zeros_diff_rows, 3), _if_then_else(False, max_col_clue, 0), _if_then_else(or_(True, True), ones_diff_rows, 91)), _if_then_else(and_(True, True), _if_then_else(False, ones_diff_cols, 43), _if_then_else(True, zeros_diff_cols, 1)))), zeros_diff_cols))
and_(le(max_row_clue, 3), and_(and_(ge(_if_then_else(True, 3, ones_diff_cols), _if_then_else(True, 34, 4)), le(_if_then_else(False, max_row_clue, ones_diff_rows), _if_then_else(True, 2, ones_diff_cols))), ge(1, 2)))
le(_if_then_else(True, 3, zeros_diff_rows), _if_then_else(False, 4, 1))
and_(le(compare_blocks_cols, compare_blocks_rows), or_(False, True))
VAL TREES:
add(mul(add(mul(zeros_diff_rows, compare_blocks_rows), zeros_diff_rows), ones_diff_cols), mul(zeros_diff_rows, -35))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_rows))
add(mul(ones_diff_rows, ones_diff_cols), mul(-33, compare_blocks_rows))
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols))
add(add(compare_blocks_cols, zeros_diff_rows), add(42, zeros_diff_cols))
add(add(7, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows))
COND TREES:
ge(zeros_diff_cols, _if_then_else(or_(False, True), _if_then_else(False, max_col_clue, 21), _if_then_else(True, zeros_diff_rows, -64)))
ge(_if_then_else(ge(0, zeros_diff_cols), compare_blocks_rows, compare_blocks_rows), _if_then_else(False, zeros_diff_cols, compare_blocks_cols))
or_(ge(_if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, 4)), False)
le(_if_then_else(ge(4, compare_blocks_rows), ones_diff_cols, _if_then_else(False, 1, zeros_diff_rows)), _if_then_else(le(_if_then_else(False, -42, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), zeros_diff_rows, 2))
le(_if_then_else(True, max_row_clue, max_row_clue), _if_then_else(True, compare_blocks_cols, max_row_clue))
VAL TREES:
add(mul(ones_diff_rows, zeros_diff_rows), add(-49, add(mul(add(mul(ones_diff_cols, zeros_diff_rows), add(66, -36)), add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))), add(mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_cols, 93)), add(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_cols))))))
add(add(mul(add(zeros_diff_rows, compare_blocks_cols), mul(zeros_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_cols), add(-67, compare_blocks_rows))), mul(mul(mul(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, -15)), mul(add(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_cols, compare_blocks_cols))))
mul(mul(zeros_diff_rows, ones_diff_cols), mul(mul(add(61, ones_diff_cols), add(add(add(mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols)), mul(add(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, compare_blocks_cols))), mul(add(add(ones_diff_rows, 64), mul(zeros_diff_cols, 82)), mul(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_cols)))), mul(add(mul(mul(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, ones_diff_cols)), add(add(compare_blocks_rows, ones_diff_rows), mul(27, zeros_diff_cols))), mul(mul(add(ones_diff_cols, -19), mul(zeros_diff_cols, -59)), add(add(zeros_diff_cols, 15), mul(zeros_diff_cols, ones_diff_cols)))))), ones_diff_rows))
add(mul(zeros_diff_cols, mul(zeros_diff_cols, zeros_diff_rows)), mul(add(mul(add(add(zeros_diff_rows, 98), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(ones_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(mul(mul(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_rows)))), mul(mul(mul(mul(compare_blocks_cols, ones_diff_rows), add(compare_blocks_rows, -37)), add(mul(compare_blocks_rows, ones_diff_cols), add(zeros_diff_rows, ones_diff_rows))), mul(mul(mul(-99, compare_blocks_cols), add(0, -68)), mul(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_cols, compare_blocks_rows))))))
mul(add(compare_blocks_cols, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_cols))
add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols))
COND TREES:
or_(le(max_col_clue, zeros_diff_rows), False)
or_(le(max_col_clue, 2), False)
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), _if_then_else(le(max_col_clue, 4), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, max_row_clue, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(True, ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(False, _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(ge(compare_blocks_cols, zeros_diff_rows), 3, max_col_clue)), False)
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, ones_diff_rows, -67))), le(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(or_(False, True), zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), add(ones_diff_rows, ones_diff_cols))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
or_(and_(and_(True, ge(_if_then_else(le(3, _if_then_else(False, max_row_clue, ones_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, 3, 1), _if_then_else(True, zeros_diff_cols, 1)), ones_diff_cols), _if_then_else(or_(ge(0, 4), or_(True, ge(_if_then_else(le(ones_diff_cols, ones_diff_rows), _if_then_else(False, 2, 2), _if_then_else(False, 1, compare_blocks_cols)), _if_then_else(ge(max_col_clue, 1), _if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(False, 1, ones_diff_rows))))), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, 4), _if_then_else(False, ones_diff_cols, zeros_diff_cols)), _if_then_else(le(3, 0), _if_then_else(False, ones_diff_rows, 4), _if_then_else(False, 4, 2))))), and_(False, True)), and_(le(ones_diff_cols, 0), le(ones_diff_cols, 3)))
le(_if_then_else(ge(_if_then_else(True, _if_then_else(or_(ge(1, zeros_diff_rows), ge(zeros_diff_rows, max_col_clue)), _if_then_else(le(_if_then_else(True, -74, 3), compare_blocks_rows), _if_then_else(True, zeros_diff_cols, 2), _if_then_else(True, 85, 4)), _if_then_else(ge(max_row_clue, 2), _if_then_else(False, max_row_clue, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, compare_blocks_rows))), _if_then_else(ge(_if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, 4, 2)), _if_then_else(or_(False, False), _if_then_else(True, 1, compare_blocks_rows), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(ge(compare_blocks_rows, 2), _if_then_else(True, 4, ones_diff_rows), _if_then_else(True, 3, ones_diff_rows)))), _if_then_else(False, _if_then_else(le(zeros_diff_rows, max_row_clue), _if_then_else(le(compare_blocks_cols, 2), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, 1, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, 0, ones_diff_cols), _if_then_else(False, zeros_diff_cols, max_row_clue))), _if_then_else(or_(and_(True, False), ge(4, 0)), _if_then_else(and_(True, True), _if_then_else(False, ones_diff_cols, compare_blocks_cols), _if_then_else(True, max_row_clue, 0)), _if_then_else(le(ones_diff_rows, 1), _if_then_else(True, compare_blocks_rows, zeros_diff_cols), _if_then_else(True, max_row_clue, compare_blocks_rows))))), max_col_clue, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_cols))
le(_if_then_else(le(max_row_clue, max_row_clue), _if_then_else(True, ones_diff_cols, 3), _if_then_else(True, 4, max_row_clue)), _if_then_else(le(4, ones_diff_cols), _if_then_else(True, max_col_clue, ones_diff_cols), _if_then_else(False, ones_diff_cols, 3)))
le(_if_then_else(ge(_if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, 2, ones_diff_rows)), _if_then_else(ge(zeros_diff_cols, max_row_clue), _if_then_else(False, max_row_clue, 0), _if_then_else(True, zeros_diff_cols, max_row_clue)), _if_then_else(False, ones_diff_rows, 1)), _if_then_else(or_(True, True), ones_diff_cols, zeros_diff_rows))
and_(and_(ge(_if_then_else(True, ones_diff_rows, ones_diff_rows), _if_then_else(False, -62, 2)), False), ge(_if_then_else(True, ones_diff_rows, 2), ones_diff_cols))
VAL TREES:
add(mul(add(mul(zeros_diff_rows, compare_blocks_rows), zeros_diff_rows), ones_diff_cols), mul(zeros_diff_rows, -35))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_rows))
add(mul(ones_diff_rows, mul(add(add(mul(add(compare_blocks_rows, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_cols)), add(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols))), add(mul(add(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_cols)), mul(mul(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_rows)))), mul(add(add(mul(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_cols))), mul(mul(mul(ones_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols)))))), mul(-33, compare_blocks_rows))
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols))
add(mul(add(add(mul(-11, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_rows)), add(add(ones_diff_rows, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols))), add(mul(add(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_cols)))), mul(mul(mul(mul(compare_blocks_cols, compare_blocks_cols), add(zeros_diff_cols, ones_diff_rows)), add(add(compare_blocks_rows, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows))), mul(add(add(compare_blocks_rows, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_rows)), add(add(compare_blocks_cols, -80), add(zeros_diff_rows, zeros_diff_cols)))))
add(add(add(add(ones_diff_rows, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows))
COND TREES:
or_(or_(or_(True, False), True), le(4, 4))
le(0, _if_then_else(False, compare_blocks_cols, ones_diff_cols))
ge(_if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(False, max_col_clue, _if_then_else(True, 2, ones_diff_rows)))
or_(False, ge(ones_diff_cols, zeros_diff_rows))
and_(or_(False, False), le(2, _if_then_else(or_(True, False), _if_then_else(False, max_row_clue, 3), _if_then_else(False, 0, max_col_clue))))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
or_(or_(or_(le(max_col_clue, zeros_diff_rows), False), True), False)
le(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(le(zeros_diff_rows, ones_diff_cols), _if_then_else(False, 3, max_col_clue), _if_then_else(True, -55, ones_diff_cols)), compare_blocks_rows), _if_then_else(or_(or_(False, True), and_(False, False)), compare_blocks_cols, ones_diff_cols))
ge(_if_then_else(or_(True, False), max_row_clue, ones_diff_cols), _if_then_else(or_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, ones_diff_cols, 59)))
or_(le(zeros_diff_cols, -26), and_(or_(True, le(_if_then_else(True, 0, _if_then_else(or_(ge(_if_then_else(ge(max_row_clue, 1), _if_then_else(ge(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, 3, 3)), compare_blocks_cols, 2), _if_then_else(False, 1, 2)), _if_then_else(or_(True, True), _if_then_else(True, 4, 2), _if_then_else(True, ones_diff_cols, 1))), and_(le(_if_then_else(False, -80, max_col_clue), _if_then_else(False, 44, max_row_clue)), or_(or_(False, True), and_(True, True)))), _if_then_else(le(_if_then_else(or_(False, True), _if_then_else(False, -53, 1), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(le(compare_blocks_cols, zeros_diff_cols), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(True, zeros_diff_rows, 4))), _if_then_else(ge(_if_then_else(True, zeros_diff_cols, 3), _if_then_else(True, zeros_diff_cols, compare_blocks_cols)), _if_then_else(ge(max_row_clue, max_row_clue), _if_then_else(True, 12, zeros_diff_cols), _if_then_else(True, ones_diff_rows, 1)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, 3, 0))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, 3, max_col_clue)), _if_then_else(or_(True, False), _if_then_else(True, 2, 3), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)), _if_then_else(le(0, 2), _if_then_else(False, max_col_clue, ones_diff_rows), _if_then_else(False, 2, 3)))), _if_then_else(ge(_if_then_else(or_(False, False), _if_then_else(False, 40, zeros_diff_cols), _if_then_else(False, 0, 1)), _if_then_else(le(ones_diff_rows, max_row_clue), _if_then_else(False, 2, max_row_clue), _if_then_else(True, max_col_clue, ones_diff_rows))), _if_then_else(or_(or_(False, False), ge(ones_diff_cols, zeros_diff_rows)), _if_then_else(ge(compare_blocks_cols, 0), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, ones_diff_rows, max_col_clue)), _if_then_else(le(compare_blocks_rows, 2), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(True, 4, max_row_clue))), _if_then_else(and_(or_(True, True), ge(compare_blocks_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, 0), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 1, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, 0, 0)))))), _if_then_else(False, 3, zeros_diff_rows))), le(0, zeros_diff_cols)))
and_(le(1, _if_then_else(False, _if_then_else(ge(ones_diff_rows, 2), _if_then_else(ge(4, _if_then_else(False, compare_blocks_cols, ones_diff_cols)), zeros_diff_rows, _if_then_else(or_(False, False), compare_blocks_cols, 2)), _if_then_else(and_(True, ge(compare_blocks_rows, 2)), -50, 2)), max_col_clue)), or_(True, or_(True, False)))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))
COND TREES:
or_(le(_if_then_else(or_(and_(or_(True, False), le(2, ones_diff_rows)), le(_if_then_else(False, compare_blocks_rows, max_col_clue), _if_then_else(False, compare_blocks_rows, 3))), _if_then_else(and_(and_(True, False), and_(False, True)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, 3, -9), _if_then_else(True, 2, 4)), _if_then_else(ge(3, 2), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, -56, 3))), _if_then_else(ge(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 1, max_row_clue)), _if_then_else(and_(True, False), _if_then_else(True, 0, max_row_clue), _if_then_else(False, zeros_diff_cols, 2)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_cols, 4), _if_then_else(False, 3, compare_blocks_rows)))), _if_then_else(ge(_if_then_else(le(zeros_diff_rows, ones_diff_cols), _if_then_else(True, max_row_clue, 3), _if_then_else(False, 2, 4)), _if_then_else(le(0, 0), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(True, compare_blocks_cols, 0))), _if_then_else(ge(_if_then_else(False, compare_blocks_cols, 31), _if_then_else(True, 63, 40)), _if_then_else(ge(0, 2), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(False, 97, 3)), _if_then_else(ge(max_row_clue, 0), _if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(True, compare_blocks_rows, 2))), _if_then_else(and_(le(zeros_diff_rows, zeros_diff_cols), and_(False, True)), _if_then_else(ge(3, 1), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_cols, zeros_diff_cols)), _if_then_else(le(max_col_clue, 4), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, ones_diff_cols, max_row_clue))))), le(compare_blocks_rows, _if_then_else(True, 1, max_col_clue)))
or_(le(max_col_clue, zeros_diff_cols), False)
ge(_if_then_else(or_(le(2, compare_blocks_cols), le(compare_blocks_cols, max_row_clue)), _if_then_else(True, max_row_clue, 4), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 94), _if_then_else(le(_if_then_else(or_(False, False), max_row_clue, 70), 53), ones_diff_cols, max_row_clue))), _if_then_else(or_(ge(ones_diff_rows, 1), ge(compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, 4, 2)), _if_then_else(ge(2, ones_diff_rows), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 2, compare_blocks_rows))))
and_(False, le(_if_then_else(True, 0, -77), _if_then_else(False, 3, compare_blocks_rows)))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, 3, max_row_clue))), le(_if_then_else(or_(True, False), 3, _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(add(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_rows, zeros_diff_cols)))
add(add(ones_diff_rows, -45), add(compare_blocks_cols, 59))
mul(add(mul(ones_diff_cols, 83), add(zeros_diff_rows, -84)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, 60)))
mul(add(-9, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))
mul(mul(ones_diff_cols, -5), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(ones_diff_rows, -24), add(zeros_diff_cols, ones_diff_cols))))
mul(mul(-76, -25), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
ge(_if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 2, ones_diff_rows))
and_(ge(_if_then_else(ge(0, zeros_diff_cols), zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 1, max_col_clue)), or_(or_(False, True), and_(False, False)))
and_(True, le(_if_then_else(False, max_row_clue, 70), 53))
ge(zeros_diff_rows, _if_then_else(False, _if_then_else(and_(False, False), 2, _if_then_else(le(_if_then_else(True, 0, -77), _if_then_else(False, 3, compare_blocks_rows)), compare_blocks_rows, 4)), ones_diff_rows))
and_(le(_if_then_else(False, max_col_clue, compare_blocks_cols), max_row_clue), or_(le(zeros_diff_cols, max_col_clue), False))
VAL TREES:
mul(mul(zeros_diff_cols, compare_blocks_cols), add(mul(zeros_diff_cols, add(compare_blocks_cols, zeros_diff_cols)), compare_blocks_cols))
mul(mul(add(add(ones_diff_rows, 13), compare_blocks_rows), add(compare_blocks_cols, mul(-28, ones_diff_rows))), add(ones_diff_cols, -82))
add(mul(zeros_diff_cols, add(zeros_diff_cols, compare_blocks_rows)), mul(compare_blocks_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_cols))
add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))
mul(add(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, -66))
COND TREES:
ge(_if_then_else(le(max_col_clue, zeros_diff_rows), ones_diff_cols, max_col_clue), _if_then_else(False, 2, max_row_clue))
and_(ge(_if_then_else(ge(0, zeros_diff_cols), zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 1, max_col_clue)), or_(or_(False, True), and_(False, False)))
and_(True, le(_if_then_else(le(max_col_clue, 4), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, max_row_clue, compare_blocks_rows)), 53))
ge(zeros_diff_rows, _if_then_else(le(_if_then_else(False, 3, max_col_clue), compare_blocks_cols), _if_then_else(and_(False, False), 2, _if_then_else(le(_if_then_else(True, 0, -77), _if_then_else(False, 3, zeros_diff_rows)), compare_blocks_rows, 4)), ones_diff_rows))
and_(le(_if_then_else(False, _if_then_else(True, max_row_clue, 2), compare_blocks_cols), max_row_clue), or_(le(zeros_diff_cols, max_col_clue), ge(compare_blocks_rows, ones_diff_rows)))
VAL TREES:
mul(mul(zeros_diff_cols, compare_blocks_cols), add(mul(zeros_diff_cols, add(compare_blocks_cols, zeros_diff_cols)), compare_blocks_cols))
mul(mul(add(add(ones_diff_rows, 13), compare_blocks_rows), add(compare_blocks_cols, mul(-28, ones_diff_rows))), add(ones_diff_cols, -82))
add(mul(zeros_diff_cols, add(zeros_diff_cols, compare_blocks_rows)), mul(compare_blocks_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_cols))
add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))
mul(add(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, -66))
COND TREES:
or_(le(3, _if_then_else(True, max_col_clue, 65)), le(_if_then_else(False, 2, _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(False, ones_diff_rows, 2), _if_then_else(False, 0, max_row_clue))), compare_blocks_cols))
le(_if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(ge(_if_then_else(False, 2, compare_blocks_cols), -66), compare_blocks_cols, zeros_diff_cols))
and_(False, or_(False, True))
ge(_if_then_else(or_(le(_if_then_else(False, 3, compare_blocks_cols), zeros_diff_cols), ge(max_col_clue, 4)), 3, compare_blocks_rows), zeros_diff_rows)
or_(or_(or_(True, False), le(ones_diff_cols, max_col_clue)), True)
VAL TREES:
mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_cols))
add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_cols, add(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_rows, -15))))
add(add(mul(mul(add(compare_blocks_cols, ones_diff_cols), mul(-85, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_rows))), mul(mul(add(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(add(compare_blocks_cols, mul(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, add(ones_diff_rows, compare_blocks_rows)))), mul(zeros_diff_rows, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)), mul(mul(compare_blocks_rows, 44), add(compare_blocks_rows, ones_diff_cols))), mul(add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, zeros_diff_rows), add(-49, ones_diff_cols)))))
add(add(ones_diff_rows, ones_diff_rows), add(add(zeros_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(ones_diff_rows, zeros_diff_rows), add(add(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_cols))), add(75, zeros_diff_cols))
mul(mul(zeros_diff_cols, -79), mul(mul(mul(compare_blocks_cols, 55), add(compare_blocks_cols, compare_blocks_rows)), ones_diff_cols))
COND TREES:
or_(or_(or_(True, False), True), le(_if_then_else(le(_if_then_else(ge(zeros_diff_rows, max_row_clue), _if_then_else(False, 1, -74), _if_then_else(False, compare_blocks_rows, 61)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, 1))), _if_then_else(le(_if_then_else(True, 1, 3), _if_then_else(True, 0, compare_blocks_rows)), _if_then_else(ge(ones_diff_cols, compare_blocks_rows), _if_then_else(True, ones_diff_rows, 2), _if_then_else(True, ones_diff_cols, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, ones_diff_rows, 31), _if_then_else(True, ones_diff_rows, ones_diff_rows))), _if_then_else(and_(or_(False, False), and_(False, False)), _if_then_else(and_(True, True), _if_then_else(True, 1, 2), _if_then_else(False, max_row_clue, 4)), _if_then_else(le(3, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, 0), _if_then_else(False, 3, 2)))), 4))
le(_if_then_else(le(_if_then_else(True, zeros_diff_rows, _if_then_else(True, 1, max_col_clue)), _if_then_else(False, 4, zeros_diff_cols)), ones_diff_cols, compare_blocks_rows), _if_then_else(False, _if_then_else(True, max_col_clue, compare_blocks_rows), ones_diff_cols))
ge(_if_then_else(le(_if_then_else(or_(False, False), 3, zeros_diff_cols), 2), max_row_clue, ones_diff_cols), _if_then_else(ge(32, _if_then_else(ge(_if_then_else(False, 2, 2), _if_then_else(False, 2, 2)), _if_then_else(ge(1, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 56), _if_then_else(False, max_col_clue, -5)), _if_then_else(and_(True, True), _if_then_else(False, 1, -26), _if_then_else(False, ones_diff_cols, max_col_clue)))), compare_blocks_cols, compare_blocks_cols))
or_(le(max_col_clue, -26), and_(or_(True, False), le(_if_then_else(or_(True, True), _if_then_else(False, _if_then_else(or_(False, ge(34, 10)), _if_then_else(False, -90, 4), _if_then_else(or_(ge(1, 1), and_(True, False)), 0, compare_blocks_rows)), 1), _if_then_else(True, 3, -18)), 2)))
and_(or_(False, ge(ones_diff_rows, _if_then_else(False, _if_then_else(False, ones_diff_cols, _if_then_else(False, compare_blocks_cols, ones_diff_cols)), 4))), or_(and_(or_(ge(max_row_clue, 4), le(max_row_clue, compare_blocks_rows)), ge(_if_then_else(True, 0, 4), _if_then_else(True, ones_diff_cols, 4))), le(_if_then_else(ge(2, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, max_col_clue), _if_then_else(True, 1, ones_diff_cols)), _if_then_else(ge(0, zeros_diff_cols), _if_then_else(True, 3, 3), _if_then_else(True, 0, compare_blocks_rows)))))
VAL TREES:
mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))
add(add(mul(mul(30, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, -36), mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, -49)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(71, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))


INFO:root:hof: COND TREES:
and_(ge(max_col_clue, ones_diff_cols), ge(zeros_diff_cols, compare_blocks_cols))
or_(le(_if_then_else(False, max_col_clue, -1), _if_then_else(False, max_col_clue, 3)), and_(True, False))
and_(ge(_if_then_else(False, _if_then_else(False, ones_diff_rows, zeros_diff_rows), -61), 1), and_(True, True))
le(_if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_col_clue))
le(_if_then_else(or_(False, True), ones_diff_rows, compare_blocks_cols), _if_then_else(True, _if_then_else(False, _if_then_else(True, 1, max_col_clue), 1), ones_diff_cols))
VAL TREES:
add(add(mul(compare_blocks_cols, compare_blocks_rows), compare_blocks_cols), mul(zeros_diff_cols, compare_blocks_rows))
mul(add(ones_diff_cols, ones_diff_rows), add(compare_blocks_rows, compare_blocks_rows))
add(add(29, 46), add(zeros_diff_cols, ones_diff_cols))
mul(add(mul(compare_blocks_rows, zeros_diff_cols), zeros_diff_rows), mul(compare_blocks_rows, 53))
add(mul(compare_blocks_cols, 84), mul(ones_diff_rows, compare_blocks_cols))
add(add(mul(compare_blocks_cols, 52), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_rows, -27)))


INFO:root:stats: {'fitness': <deap.tools.support.Statistics object at 0x0000016149088780>, 'size': <deap.tools.support.Statistics object at 0x00000161490887B8>}

