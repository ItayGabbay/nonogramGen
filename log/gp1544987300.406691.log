INFO:root:

*******STARTING!!!******


INFO:root:

*******Configuration******


INFO:root:# NUM_ROWS = 20


INFO:root:NUM_ROWS = 5


INFO:root:# NUM_COLS = 20


INFO:root:NUM_COLS = 5


INFO:root:empty_in_split = '\xa0'


INFO:root:


INFO:root:pickle_unsolved_file_path = 'data/%dx%d_nonograms.pkl' % (NUM_ROWS, NUM_COLS)


INFO:root:pickle_solved_file_path = 'data/%dx%d_nonograms_solved.pkl' % (NUM_ROWS, NUM_COLS)


INFO:root:


INFO:root:NUM_COND_TREES = 5


INFO:root:NUM_VAL_TREES = NUM_COND_TREES + 1


INFO:root:prob_crossover_global = 0.4  # global probability for cx


INFO:root:prob_crossover_individual_cond = 1  # probability to cx a specific cond tree in an individual


INFO:root:prob_crossover_individual_val = 1  # probability to cx a specific cond tree in an individual


INFO:root:prob_mutate_global = 0.1


INFO:root:prob_mutate_individual_cond = 1


INFO:root:prob_mutate_individual_val = 1


INFO:root:


INFO:root:points_correct_box = 5


INFO:root:points_incorrect_box = -2


INFO:root:pop_size = 40


INFO:root:hof_size = 1


INFO:root:# num_gen = 40


INFO:root:num_gen = 10


INFO:root:train_size = 5


INFO:root:

*******DONE!!!******


INFO:root:run time: 77 sec

INFO:root:log:    	      	            fitness            	            size           
   	      	-------------------------------	---------------------------
gen	nevals	avg   	max 	min 	std    	avg	max	min	std
0  	40    	51.595	59.6	49  	3.69553	2  	2  	2  	0  
1  	17    	54.87 	59.6	49.6	4.47025	2  	2  	2  	0  
2  	19    	57.59 	59.6	49.6	3.33585	2  	2  	2  	0  
3  	21    	58.85 	59.6	49.6	2.63391	2  	2  	2  	0  
4  	20    	58.53 	59.6	46.8	3.23282	2  	2  	2  	0  
5  	23    	58.455	59.6	49.6	3.08707	2  	2  	2  	0  
6  	21    	58.31 	59.6	49.6	3.16511	2  	2  	2  	0  
7  	15    	59.1  	59.6	49.6	2.17945	2  	2  	2  	0  
8  	14    	59.6  	59.6	59.6	0      	2  	2  	2  	0  
9  	22    	58.31 	59.6	49.6	3.16511	2  	2  	2  	0  
10 	17    	59.6  	59.6	59.6	0      	2  	2  	2  	0  

INFO:root:pop: COND TREES:
ge(if_then_else(or_(le(if_then_else(False, ones_diff_rows, -4), -1), and_(False, True)), if_then_else(False, 3, -4), if_then_else(and_(False, or_(False, True)), -1, if_then_else(False, -1, if_then_else(False, 2, zeros_diff_rows)))), if_then_else(le(0, if_then_else(ge(-1, -1), 0, compare_blocks_rows)), if_then_else(True, if_then_else(le(if_then_else(and_(True, True), -5, if_then_else(True, 3, -4)), if_then_else(False, -4, compare_blocks_cols)), if_then_else(le(compare_blocks_rows, zeros_diff_rows), if_then_else(True, 3, -3), if_then_else(False, zeros_diff_cols, if_then_else(True, 0, zeros_diff_rows))), if_then_else(ge(-3, -3), if_then_else(False, if_then_else(True, -5, -4), 2), if_then_else(True, if_then_else(False, 3, compare_blocks_cols), -1))), if_then_else(False, if_then_else(True, if_then_else(False, ones_diff_rows, -4), -5), if_then_else(False, 3, -2))), if_then_else(True, -5, -3)))
and_(le(if_then_else(True, zeros_diff_rows, compare_blocks_rows), if_then_else(or_(le(if_then_else(True, -3, zeros_diff_cols), if_then_else(True, zeros_diff_cols, -4)), ge(if_then_else(False, -1, 3), if_then_else(True, zeros_diff_cols, zeros_diff_rows))), if_then_else(le(if_then_else(True, 4, 2), if_then_else(False, 1, zeros_diff_cols)), if_then_else(ge(ones_diff_rows, compare_blocks_rows), if_then_else(False, -2, -2), if_then_else(False, ones_diff_rows, 2)), if_then_else(le(zeros_diff_rows, 1), if_then_else(False, 1, ones_diff_rows), if_then_else(False, 0, compare_blocks_rows))), if_then_else(and_(le(ones_diff_cols, zeros_diff_rows), ge(-2, 0)), if_then_else(le(2, 0), if_then_else(False, -2, ones_diff_cols), if_then_else(False, -5, -4)), if_then_else(and_(True, True), if_then_else(True, -2, -2), if_then_else(False, zeros_diff_rows, zeros_diff_cols))))), or_(or_(True, False), or_(False, False)))
or_(and_(or_(False, False), ge(-5, compare_blocks_rows)), ge(if_then_else(True, compare_blocks_rows, zeros_diff_rows), if_then_else(False, -4, -2)))
le(if_then_else(and_(le(0, 3), and_(False, True)), if_then_else(le(2, ones_diff_cols), if_then_else(False, ones_diff_rows, ones_diff_rows), if_then_else(False, 4, compare_blocks_cols)), if_then_else(and_(True, False), if_then_else(False, 2, -4), if_then_else(False, 4, -2))), if_then_else(or_(le(-4, ones_diff_rows), ge(0, -5)), if_then_else(le(if_then_else(False, compare_blocks_rows, -5), if_then_else(True, -4, 3)), if_then_else(ge(zeros_diff_cols, 1), if_then_else(True, 4, -4), if_then_else(True, 4, compare_blocks_cols)), if_then_else(or_(True, False), if_then_else(True, 0, -3), if_then_else(True, 0, ones_diff_rows))), if_then_else(le(compare_blocks_cols, -1), if_then_else(False, ones_diff_rows, zeros_diff_rows), if_then_else(False, ones_diff_rows, -2))))
or_(ge(if_then_else(le(if_then_else(True, -1, ones_diff_rows), if_then_else(False, 1, compare_blocks_cols)), if_then_else(le(-2, -1), if_then_else(False, compare_blocks_cols, -1), if_then_else(True, -1, compare_blocks_rows)), if_then_else(or_(True, False), if_then_else(True, -3, zeros_diff_rows), if_then_else(False, -1, -3))), if_then_else(ge(if_then_else(False, -1, 2), if_then_else(False, 2, 3)), if_then_else(le(1, compare_blocks_cols), if_then_else(False, ones_diff_rows, 0), if_then_else(False, if_then_else(and_(le(compare_blocks_cols, -1), and_(False, True)), if_then_else(or_(True, False), if_then_else(True, 2, -4), if_then_else(True, zeros_diff_cols, 2)), if_then_else(and_(True, True), if_then_else(False, ones_diff_cols, compare_blocks_rows), if_then_else(False, -5, -3))), -3)), if_then_else(ge(ones_diff_rows, compare_blocks_rows), if_then_else(False, zeros_diff_cols, ones_diff_rows), if_then_else(True, 1, 4)))), le(if_then_else(and_(le(ones_diff_rows, ones_diff_rows), True), if_then_else(or_(True, True), if_then_else(False, 0, 4), if_then_else(True, 0, -1)), if_then_else(or_(True, True), if_then_else(True, ones_diff_cols, 1), if_then_else(True, 2, compare_blocks_cols))), if_then_else(le(if_then_else(True, compare_blocks_cols, 3), if_then_else(False, ones_diff_rows, -4)), if_then_else(le(compare_blocks_cols, zeros_diff_cols), if_then_else(True, 3, 1), if_then_else(False, -5, 0)), if_then_else(or_(False, True), if_then_else(False, -2, -3), if_then_else(False, 0, zeros_diff_rows)))))
VAL TREES:
mul(mul(add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, zeros_diff_rows)), add(mul(compare_blocks_cols, ones_diff_rows), add(compare_blocks_cols, ones_diff_rows))), add(add(add(zeros_diff_rows, ones_diff_rows), compare_blocks_cols), add(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows))))
add(mul(add(zeros_diff_cols, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), add(mul(mul(mul(add(add(zeros_diff_rows, ones_diff_cols), compare_blocks_rows), zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)), ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(mul(add(add(mul(add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, zeros_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_cols))), add(mul(add(ones_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)))), ones_diff_cols), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)))
add(add(add(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)))
add(mul(mul(add(mul(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, ones_diff_rows)), add(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows)), add(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(mul(add(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows))), add(mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows)))))
mul(add(add(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_cols, ones_diff_rows)), add(ones_diff_rows, add(zeros_diff_rows, ones_diff_rows))), add(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), add(add(zeros_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows))))
COND TREES:
or_(or_(and_(False, False), ge(2, 4)), ge(if_then_else(False, -1, -5), if_then_else(False, 1, -4)))
or_(ge(if_then_else(ge(2, 4), if_then_else(False, 1, ones_diff_cols), if_then_else(True, compare_blocks_rows, -3)), zeros_diff_rows), or_(ge(if_then_else(True, compare_blocks_cols, ones_diff_rows), if_then_else(False, ones_diff_rows, compare_blocks_cols)), and_(ge(0, ones_diff_rows), and_(True, True))))
or_(ge(if_then_else(False, if_then_else(True, if_then_else(False, 0, -5), if_then_else(False, 4, compare_blocks_cols)), 3), -5), and_(and_(True, le(if_then_else(False, ones_diff_cols, compare_blocks_cols), if_then_else(True, -4, 3))), le(zeros_diff_cols, if_then_else(le(0, -3), -5, compare_blocks_rows))))
le(if_then_else(ge(-4, -3), if_then_else(or_(True, and_(False, True)), -4, 4), if_then_else(False, -4, compare_blocks_rows)), if_then_else(and_(True, False), if_then_else(False, if_then_else(False, -1, if_then_else(False, compare_blocks_cols, ones_diff_rows)), -5), if_then_else(True, zeros_diff_rows, compare_blocks_cols)))
le(if_then_else(le(if_then_else(or_(False, False), if_then_else(True, -1, -1), if_then_else(True, zeros_diff_cols, -3)), if_then_else(le(ones_diff_rows, compare_blocks_cols), if_then_else(False, 1, zeros_diff_rows), if_then_else(True, zeros_diff_rows, -2))), if_then_else(or_(le(0, compare_blocks_rows), or_(False, False)), if_then_else(and_(True, False), if_then_else(True, -4, compare_blocks_rows), if_then_else(False, -3, 2)), if_then_else(le(ones_diff_rows, -3), if_then_else(True, zeros_diff_rows, zeros_diff_rows), if_then_else(False, 2, 0))), if_then_else(and_(and_(True, True), or_(True, False)), if_then_else(or_(False, False), if_then_else(False, ones_diff_cols, ones_diff_cols), if_then_else(False, 4, -2)), if_then_else(ge(-5, zeros_diff_cols), if_then_else(True, compare_blocks_cols, 3), if_then_else(True, ones_diff_rows, -4)))), if_then_else(ge(if_then_else(and_(True, False), if_then_else(False, -5, -3), if_then_else(True, 1, -5)), if_then_else(and_(True, True), if_then_else(False, 3, 2), if_then_else(False, 0, -3))), if_then_else(le(if_then_else(True, -5, 3), if_then_else(False, compare_blocks_rows, compare_blocks_cols)), if_then_else(le(-3, compare_blocks_cols), if_then_else(le(if_then_else(True, -1, ones_diff_rows), if_then_else(False, 1, compare_blocks_cols)), if_then_else(le(-2, -1), if_then_else(False, compare_blocks_cols, -1), if_then_else(True, -1, compare_blocks_rows)), if_then_else(or_(True, False), if_then_else(True, -3, zeros_diff_rows), if_then_else(False, -1, -3))), if_then_else(True, compare_blocks_rows, ones_diff_rows)), if_then_else(or_(False, True), if_then_else(True, compare_blocks_rows, compare_blocks_cols), if_then_else(False, -1, 1))), if_then_else(or_(le(zeros_diff_rows, -1), and_(False, True)), if_then_else(ge(ones_diff_cols, 3), if_then_else(False, 3, 1), if_then_else(False, zeros_diff_rows, zeros_diff_rows)), if_then_else(or_(True, False), if_then_else(False, -5, 4), if_then_else(True, compare_blocks_cols, ones_diff_cols)))))
VAL TREES:
mul(add(add(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows))), add(mul(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(ones_diff_rows, ones_diff_rows), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, zeros_diff_rows)))))
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), add(add(compare_blocks_rows, ones_diff_rows), ones_diff_cols))
mul(add(mul(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(add(mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols))), ones_diff_rows), add(compare_blocks_cols, zeros_diff_cols)))
mul(add(mul(mul(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows)), mul(compare_blocks_rows, add(ones_diff_rows, ones_diff_cols))), mul(add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, zeros_diff_rows)))), compare_blocks_rows)
add(add(zeros_diff_rows, mul(compare_blocks_cols, compare_blocks_rows)), add(mul(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_cols, mul(ones_diff_rows, compare_blocks_cols))), mul(add(zeros_diff_cols, compare_blocks_rows), add(ones_diff_cols, add(zeros_diff_rows, ones_diff_cols))))
COND TREES:
ge(if_then_else(or_(le(if_then_else(False, ones_diff_rows, -4), -1), and_(False, True)), if_then_else(False, 3, -4), if_then_else(and_(False, False), -1, if_then_else(False, -1, if_then_else(False, 2, zeros_diff_rows)))), if_then_else(le(0, if_then_else(ge(2, -1), 0, compare_blocks_rows)), if_then_else(True, compare_blocks_cols, if_then_else(False, if_then_else(True, 0, -5), if_then_else(False, 3, -2))), if_then_else(True, -5, -3)))
and_(le(if_then_else(True, zeros_diff_rows, if_then_else(False, 0, 3)), compare_blocks_cols), or_(or_(True, False), or_(False, False)))
le(if_then_else(ge(compare_blocks_rows, -5), if_then_else(True, ones_diff_cols, if_then_else(True, -5, if_then_else(False, 0, ones_diff_rows))), if_then_else(ge(compare_blocks_cols, -1), ones_diff_rows, if_then_else(True, 1, zeros_diff_rows))), if_then_else(le(-1, if_then_else(or_(True, False), if_then_else(le(-1, if_then_else(le(-3, 3), if_then_else(True, 1, -1), -3)), 1, -1), -3)), if_then_else(or_(True, False), -4, zeros_diff_rows), if_then_else(False, ones_diff_rows, -2)))
le(if_then_else(and_(le(0, 3), and_(False, True)), if_then_else(le(2, ones_diff_cols), if_then_else(False, ones_diff_rows, ones_diff_rows), if_then_else(False, 4, ones_diff_rows)), if_then_else(and_(False, False), if_then_else(False, 2, -4), if_then_else(False, 4, -2))), if_then_else(or_(le(-4, ones_diff_rows), ge(0, -5)), if_then_else(or_(True, False), if_then_else(True, 0, if_then_else(True, 0, compare_blocks_rows)), if_then_else(True, ones_diff_rows, -4)), if_then_else(le(compare_blocks_cols, -1), if_then_else(False, ones_diff_rows, zeros_diff_rows), compare_blocks_rows)))
or_(ge(if_then_else(le(if_then_else(True, -1, ones_diff_rows), if_then_else(False, 1, compare_blocks_cols)), if_then_else(le(-2, -1), -1, if_then_else(True, -1, compare_blocks_rows)), if_then_else(or_(True, False), if_then_else(True, -3, zeros_diff_rows), if_then_else(False, -1, -3))), if_then_else(ge(if_then_else(False, -1, 2), if_then_else(False, 2, 3)), if_then_else(le(1, compare_blocks_cols), if_then_else(False, ones_diff_rows, 0), if_then_else(False, -1, -3)), if_then_else(ge(ones_diff_rows, compare_blocks_rows), if_then_else(False, zeros_diff_cols, ones_diff_rows), if_then_else(True, 1, 4)))), le(if_then_else(and_(le(ones_diff_rows, ones_diff_rows), le(zeros_diff_cols, 2)), if_then_else(or_(True, True), if_then_else(False, 0, 4), if_then_else(True, 0, -1)), if_then_else(or_(True, True), if_then_else(False, 2, ones_diff_cols), if_then_else(True, 2, compare_blocks_cols))), if_then_else(le(if_then_else(True, compare_blocks_cols, 3), if_then_else(False, ones_diff_rows, -4)), if_then_else(le(compare_blocks_cols, zeros_diff_cols), if_then_else(True, 3, 1), if_then_else(False, -5, 0)), if_then_else(or_(False, True), if_then_else(False, -2, -3), if_then_else(le(if_then_else(True, ones_diff_cols, 3), if_then_else(True, -5, compare_blocks_cols)), 0, zeros_diff_rows)))))
VAL TREES:
mul(mul(ones_diff_rows, zeros_diff_rows), add(add(add(zeros_diff_rows, ones_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(compare_blocks_cols, zeros_diff_rows)))
add(mul(add(zeros_diff_cols, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), add(mul(mul(mul(ones_diff_cols, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)), mul(mul(ones_diff_cols, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols))), mul(zeros_diff_cols, zeros_diff_cols)))
mul(mul(add(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_rows, mul(zeros_diff_rows, compare_blocks_rows))), add(mul(ones_diff_rows, compare_blocks_cols), mul(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)), ones_diff_rows)))
add(add(add(compare_blocks_cols, ones_diff_rows), mul(mul(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, ones_diff_cols))), mul(mul(mul(compare_blocks_rows, ones_diff_cols), compare_blocks_cols), add(zeros_diff_cols, ones_diff_cols)))
add(mul(mul(add(mul(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, ones_diff_rows)), add(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), mul(add(mul(ones_diff_rows, ones_diff_rows), add(ones_diff_cols, add(compare_blocks_rows, zeros_diff_rows))), compare_blocks_cols)), mul(mul(mul(mul(zeros_diff_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows)), mul(mul(ones_diff_cols, ones_diff_rows), mul(mul(mul(zeros_diff_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows)), compare_blocks_rows))), add(ones_diff_rows, add(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows)))))
mul(add(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), add(mul(zeros_diff_rows, add(zeros_diff_cols, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_cols, add(zeros_diff_cols, ones_diff_rows))))), add(add(mul(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_rows)), add(add(zeros_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows))))
COND TREES:
ge(if_then_else(or_(le(0, -1), and_(False, True)), if_then_else(False, 3, -4), if_then_else(and_(False, or_(False, True)), -1, if_then_else(False, -1, if_then_else(False, 2, zeros_diff_rows)))), if_then_else(le(0, if_then_else(ge(-1, -1), 0, compare_blocks_rows)), if_then_else(True, compare_blocks_cols, if_then_else(False, if_then_else(True, 0, -5), if_then_else(False, 3, -2))), if_then_else(True, -5, -3)))
and_(le(if_then_else(True, zeros_diff_rows, compare_blocks_rows), if_then_else(True, compare_blocks_cols, compare_blocks_rows)), or_(or_(True, False), or_(False, False)))
le(if_then_else(ge(compare_blocks_rows, -5), if_then_else(True, ones_diff_cols, if_then_else(True, -5, if_then_else(False, 0, ones_diff_rows))), if_then_else(ge(compare_blocks_cols, -1), ones_diff_rows, if_then_else(True, 1, zeros_diff_rows))), if_then_else(le(-1, if_then_else(or_(False, False), if_then_else(True, 1, -1), -3)), if_then_else(or_(True, False), -4, zeros_diff_rows), if_then_else(False, ones_diff_rows, -2)))
le(if_then_else(and_(le(0, 3), and_(False, True)), if_then_else(le(2, ones_diff_cols), if_then_else(False, ones_diff_rows, ones_diff_rows), if_then_else(False, 4, ones_diff_rows)), if_then_else(and_(True, False), if_then_else(False, 2, -4), if_then_else(False, 4, -2))), if_then_else(or_(le(-4, ones_diff_rows), ge(0, -5)), if_then_else(or_(True, False), if_then_else(True, 0, -4), if_then_else(True, ones_diff_rows, -4)), if_then_else(le(ones_diff_rows, -1), if_then_else(False, ones_diff_rows, zeros_diff_rows), if_then_else(False, ones_diff_rows, -2))))
or_(ge(if_then_else(le(if_then_else(True, -1, ones_diff_rows), if_then_else(False, 1, compare_blocks_cols)), if_then_else(le(-2, -1), if_then_else(False, compare_blocks_cols, -1), if_then_else(True, -1, compare_blocks_rows)), if_then_else(or_(True, False), if_then_else(True, -3, zeros_diff_rows), if_then_else(False, -1, -3))), if_then_else(ge(if_then_else(False, -1, 2), if_then_else(False, 2, 3)), if_then_else(le(1, compare_blocks_cols), if_then_else(False, ones_diff_rows, 0), if_then_else(False, -1, -3)), if_then_else(ge(ones_diff_rows, compare_blocks_rows), if_then_else(False, zeros_diff_cols, ones_diff_rows), if_then_else(True, 1, 4)))), le(if_then_else(and_(le(ones_diff_rows, ones_diff_rows), le(zeros_diff_cols, 2)), if_then_else(or_(le(zeros_diff_cols, 2), True), if_then_else(False, 0, 4), if_then_else(True, 0, -1)), if_then_else(or_(True, True), if_then_else(True, ones_diff_cols, 1), if_then_else(True, 2, compare_blocks_cols))), if_then_else(le(if_then_else(True, compare_blocks_cols, 3), if_then_else(False, ones_diff_rows, -4)), if_then_else(le(compare_blocks_cols, zeros_diff_cols), if_then_else(True, 3, 1), if_then_else(False, -5, 0)), if_then_else(or_(False, True), if_then_else(False, -2, -3), if_then_else(False, 0, zeros_diff_rows)))))
VAL TREES:
mul(mul(add(mul(add(compare_blocks_cols, zeros_diff_rows), zeros_diff_rows), add(ones_diff_cols, zeros_diff_rows)), add(mul(compare_blocks_cols, ones_diff_rows), add(compare_blocks_cols, ones_diff_rows))), add(add(add(zeros_diff_rows, ones_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, zeros_diff_rows))))
add(mul(add(zeros_diff_cols, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), add(mul(ones_diff_cols, ones_diff_cols), mul(zeros_diff_rows, add(mul(mul(mul(ones_diff_cols, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)), ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))))
mul(mul(add(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_rows, mul(add(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_rows, compare_blocks_rows)))))
add(ones_diff_rows, mul(zeros_diff_cols, ones_diff_cols))
add(mul(mul(add(mul(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, ones_diff_rows)), add(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), mul(add(mul(ones_diff_rows, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows)), add(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(mul(zeros_diff_rows, mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows))), add(mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_cols, add(mul(ones_diff_rows, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows))), add(zeros_diff_rows, zeros_diff_rows)))))
mul(add(add(zeros_diff_rows, ones_diff_rows), add(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows))), add(add(mul(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_rows)), add(add(zeros_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows))))
COND TREES:
ge(if_then_else(or_(le(0, -1), and_(False, True)), if_then_else(False, 3, -4), if_then_else(and_(False, or_(False, True)), -1, if_then_else(False, -1, if_then_else(False, 2, zeros_diff_rows)))), if_then_else(le(0, if_then_else(ge(-1, -1), 0, compare_blocks_rows)), if_then_else(True, compare_blocks_cols, if_then_else(False, if_then_else(True, 0, -5), if_then_else(False, 3, -2))), if_then_else(True, -5, -3)))
and_(le(if_then_else(True, zeros_diff_rows, compare_blocks_rows), if_then_else(True, compare_blocks_cols, compare_blocks_rows)), or_(or_(True, False), or_(False, False)))
le(if_then_else(ge(compare_blocks_rows, -5), if_then_else(True, ones_diff_cols, if_then_else(True, -5, if_then_else(False, 0, ones_diff_rows))), if_then_else(ge(compare_blocks_cols, -1), ones_diff_rows, if_then_else(True, 1, zeros_diff_rows))), if_then_else(le(-1, if_then_else(or_(False, False), if_then_else(True, 1, -1), -3)), if_then_else(or_(True, False), -4, zeros_diff_rows), if_then_else(False, ones_diff_rows, -2)))
le(if_then_else(and_(le(0, 3), and_(False, True)), if_then_else(le(2, ones_diff_cols), if_then_else(False, ones_diff_rows, ones_diff_rows), if_then_else(False, 4, ones_diff_rows)), if_then_else(and_(True, False), if_then_else(False, 2, -4), if_then_else(False, 4, -2))), if_then_else(or_(le(-4, ones_diff_rows), ge(0, -5)), if_then_else(or_(True, False), if_then_else(True, 0, -4), if_then_else(True, ones_diff_rows, -4)), if_then_else(le(ones_diff_rows, -1), if_then_else(False, ones_diff_rows, zeros_diff_rows), if_then_else(False, ones_diff_rows, -2))))
or_(ge(if_then_else(le(if_then_else(True, -1, ones_diff_rows), if_then_else(False, 1, compare_blocks_cols)), if_then_else(le(-2, -1), if_then_else(False, compare_blocks_cols, -1), if_then_else(True, -1, compare_blocks_rows)), if_then_else(or_(True, False), if_then_else(True, -3, zeros_diff_rows), if_then_else(False, -1, -3))), if_then_else(ge(if_then_else(False, -1, 2), if_then_else(False, 2, 3)), if_then_else(le(1, compare_blocks_cols), if_then_else(False, ones_diff_rows, 0), if_then_else(False, -1, -3)), if_then_else(ge(ones_diff_rows, compare_blocks_rows), if_then_else(False, zeros_diff_cols, ones_diff_rows), if_then_else(True, 1, 4)))), le(if_then_else(and_(le(ones_diff_rows, ones_diff_rows), le(zeros_diff_cols, 2)), if_then_else(or_(le(zeros_diff_cols, 2), True), if_then_else(False, 0, 4), if_then_else(True, 0, -1)), if_then_else(or_(True, True), if_then_else(True, ones_diff_cols, 1), if_then_else(True, 2, compare_blocks_cols))), if_then_else(le(if_then_else(True, compare_blocks_cols, 3), if_then_else(False, ones_diff_rows, -4)), if_then_else(le(compare_blocks_cols, zeros_diff_cols), if_then_else(True, 3, 1), if_then_else(False, -5, 0)), if_then_else(or_(False, True), if_then_else(False, -2, -3), if_then_else(False, 0, zeros_diff_rows)))))
VAL TREES:
mul(mul(add(mul(add(compare_blocks_cols, zeros_diff_rows), zeros_diff_rows), add(ones_diff_cols, zeros_diff_rows)), add(mul(compare_blocks_cols, ones_diff_rows), add(compare_blocks_cols, ones_diff_rows))), add(add(add(zeros_diff_rows, ones_diff_rows), add(add(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, zeros_diff_rows))))
add(mul(mul(add(zeros_diff_rows, compare_blocks_rows), add(mul(add(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows)), compare_blocks_rows)), mul(compare_blocks_rows, zeros_diff_rows)), mul(ones_diff_cols, zeros_diff_cols))
mul(zeros_diff_rows, add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_cols)))
add(ones_diff_rows, mul(mul(ones_diff_rows, compare_blocks_rows), zeros_diff_cols))
add(mul(mul(add(mul(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, ones_diff_rows)), add(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), mul(add(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, zeros_diff_rows)), add(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(mul(mul(mul(zeros_diff_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows))), add(mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_cols, add(mul(ones_diff_rows, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows))), add(zeros_diff_rows, zeros_diff_rows)))))
mul(add(add(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows))), add(add(mul(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows))))
COND TREES:
ge(if_then_else(or_(le(0, -1), and_(False, True)), if_then_else(False, 3, -4), if_then_else(and_(False, or_(False, True)), -1, if_then_else(False, -1, if_then_else(False, 2, zeros_diff_rows)))), if_then_else(le(0, if_then_else(ge(-1, -1), 0, compare_blocks_rows)), if_then_else(True, compare_blocks_cols, if_then_else(False, if_then_else(True, 0, -5), if_then_else(False, 3, -2))), if_then_else(True, -5, -3)))
and_(le(if_then_else(True, zeros_diff_rows, compare_blocks_rows), if_then_else(True, compare_blocks_cols, compare_blocks_rows)), or_(or_(True, False), or_(False, False)))
le(if_then_else(ge(compare_blocks_rows, -5), if_then_else(True, ones_diff_cols, if_then_else(True, -5, if_then_else(False, 0, ones_diff_rows))), if_then_else(ge(compare_blocks_cols, -1), ones_diff_rows, if_then_else(True, 1, zeros_diff_rows))), if_then_else(le(-1, if_then_else(or_(False, False), if_then_else(True, 1, -1), -3)), if_then_else(or_(True, False), -4, zeros_diff_rows), if_then_else(False, ones_diff_rows, -2)))
le(if_then_else(and_(le(0, 3), and_(False, True)), if_then_else(le(2, ones_diff_cols), if_then_else(False, ones_diff_rows, ones_diff_rows), if_then_else(False, 4, ones_diff_rows)), if_then_else(and_(True, False), if_then_else(False, 2, -4), if_then_else(False, 4, -2))), if_then_else(or_(le(-4, ones_diff_rows), ge(0, -5)), if_then_else(or_(True, False), if_then_else(True, 0, -4), if_then_else(True, ones_diff_rows, -4)), if_then_else(le(ones_diff_rows, -1), if_then_else(False, ones_diff_rows, zeros_diff_rows), if_then_else(False, ones_diff_rows, -2))))
or_(ge(if_then_else(le(if_then_else(True, -1, ones_diff_rows), if_then_else(False, 1, compare_blocks_cols)), if_then_else(le(-2, -1), if_then_else(False, compare_blocks_cols, -1), if_then_else(True, -1, compare_blocks_rows)), if_then_else(or_(True, False), if_then_else(True, -3, zeros_diff_rows), if_then_else(False, -1, -3))), if_then_else(ge(if_then_else(False, -1, 2), if_then_else(False, 2, 3)), if_then_else(le(1, compare_blocks_cols), if_then_else(False, ones_diff_rows, 0), if_then_else(False, -1, -3)), if_then_else(ge(ones_diff_rows, compare_blocks_rows), if_then_else(False, zeros_diff_cols, ones_diff_rows), if_then_else(True, 1, 4)))), le(if_then_else(and_(le(ones_diff_rows, ones_diff_rows), le(zeros_diff_cols, 2)), if_then_else(or_(le(zeros_diff_cols, 2), True), if_then_else(False, 0, 4), if_then_else(True, 0, -1)), if_then_else(or_(True, True), if_then_else(True, ones_diff_cols, 1), if_then_else(True, 2, compare_blocks_cols))), if_then_else(le(if_then_else(True, compare_blocks_cols, 3), if_then_else(False, ones_diff_rows, -4)), if_then_else(le(compare_blocks_cols, zeros_diff_cols), if_then_else(True, 3, 1), if_then_else(False, -5, 0)), if_then_else(or_(False, True), if_then_else(False, -2, -3), if_then_else(False, 0, zeros_diff_rows)))))
VAL TREES:
mul(mul(add(mul(add(compare_blocks_cols, zeros_diff_rows), zeros_diff_rows), add(ones_diff_cols, zeros_diff_rows)), add(mul(compare_blocks_cols, ones_diff_rows), add(compare_blocks_cols, ones_diff_rows))), add(add(add(zeros_diff_rows, ones_diff_rows), add(add(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, zeros_diff_rows))))
add(mul(mul(add(zeros_diff_rows, compare_blocks_rows), add(mul(add(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows)), compare_blocks_rows)), mul(compare_blocks_rows, zeros_diff_rows)), mul(ones_diff_cols, zeros_diff_cols))
mul(zeros_diff_rows, add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_cols)))
add(ones_diff_rows, mul(mul(ones_diff_rows, compare_blocks_rows), zeros_diff_cols))
add(mul(mul(add(mul(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, ones_diff_rows)), add(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), mul(add(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, zeros_diff_rows)), add(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(mul(mul(mul(zeros_diff_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows))), add(mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_cols, add(mul(ones_diff_rows, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows))), add(zeros_diff_rows, zeros_diff_rows)))))
mul(add(add(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows))), add(add(mul(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows))))
COND TREES:
le(if_then_else(and_(or_(True, False), False), if_then_else(False, ones_diff_rows, 0), if_then_else(True, zeros_diff_rows, zeros_diff_cols)), if_then_else(or_(le(3, compare_blocks_rows), True), if_then_else(and_(False, True), 2, 0), if_then_else(False, if_then_else(True, -2, 3), 3)))
or_(le(if_then_else(True, zeros_diff_cols, -4), if_then_else(False, ones_diff_cols, zeros_diff_rows)), ge(if_then_else(True, -2, compare_blocks_rows), if_then_else(and_(False, True), if_then_else(False, if_then_else(False, -5, ones_diff_rows), -3), -4)))
or_(and_(le(compare_blocks_rows, ones_diff_rows), or_(True, True)), and_(True, and_(False, False)))
le(if_then_else(le(if_then_else(False, if_then_else(False, -2, 0), 4), if_then_else(or_(False, True), compare_blocks_rows, ones_diff_cols)), if_then_else(True, 1, ones_diff_cols), if_then_else(ge(-1, ones_diff_rows), ones_diff_cols, if_then_else(False, zeros_diff_cols, 1))), if_then_else(le(if_then_else(False, ones_diff_rows, -1), compare_blocks_rows), if_then_else(False, if_then_else(True, -5, -4), 3), if_then_else(False, 1, 1)))
or_(le(if_then_else(or_(and_(False, False), ge(3, -4)), if_then_else(or_(False, False), if_then_else(False, -1, -2), if_then_else(False, 2, 3)), if_then_else(ge(ones_diff_rows, -2), if_then_else(False, 2, -5), if_then_else(True, -5, ones_diff_cols))), if_then_else(ge(if_then_else(True, -2, 4), if_then_else(True, ones_diff_rows, compare_blocks_rows)), if_then_else(ge(-1, ones_diff_cols), if_then_else(False, compare_blocks_cols, 3), if_then_else(True, -4, compare_blocks_cols)), if_then_else(ge(-4, -1), if_then_else(True, ones_diff_rows, -4), if_then_else(True, 2, 2)))), ge(if_then_else(and_(le(0, compare_blocks_rows), or_(False, True)), if_then_else(ge(-5, compare_blocks_cols), if_then_else(False, 1, 2), if_then_else(True, 3, 3)), if_then_else(ge(-2, ones_diff_cols), if_then_else(True, ones_diff_rows, -4), if_then_else(True, 1, compare_blocks_cols))), if_then_else(le(if_then_else(False, compare_blocks_rows, -4), if_then_else(True, ones_diff_rows, 3)), if_then_else(ge(4, -4), if_then_else(False, -3, 0), if_then_else(False, 2, -2)), if_then_else(le(zeros_diff_cols, -1), if_then_else(True, 4, 4), if_then_else(True, -5, 4)))))
VAL TREES:
mul(add(add(compare_blocks_cols, compare_blocks_rows), ones_diff_cols), add(add(compare_blocks_cols, mul(compare_blocks_rows, compare_blocks_rows)), mul(compare_blocks_rows, ones_diff_rows)))
add(add(add(add(compare_blocks_rows, zeros_diff_cols), ones_diff_cols), add(zeros_diff_cols, ones_diff_rows)), add(add(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))
mul(add(mul(add(mul(add(compare_blocks_rows, ones_diff_cols), ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_cols))), add(mul(add(ones_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)))), add(add(mul(mul(compare_blocks_rows, compare_blocks_rows), mul(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)), ones_diff_cols)), add(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows))), mul(mul(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)))))
add(ones_diff_cols, add(add(add(add(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_cols))), mul(compare_blocks_rows, zeros_diff_rows)))
add(mul(mul(add(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols)), add(mul(mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows))), mul(add(mul(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)))), mul(mul(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, compare_blocks_cols)), add(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_rows, zeros_diff_rows))), ones_diff_rows))
add(mul(mul(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols))), compare_blocks_cols), add(mul(mul(add(ones_diff_cols, add(add(zeros_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows))), mul(zeros_diff_rows, compare_blocks_rows)), add(add(compare_blocks_rows, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_rows, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))))
COND TREES:
ge(if_then_else(or_(le(0, -1), and_(False, True)), if_then_else(False, 3, -4), if_then_else(and_(False, or_(False, True)), -1, if_then_else(False, -1, if_then_else(False, 2, zeros_diff_rows)))), if_then_else(le(0, if_then_else(ge(-1, -1), 0, compare_blocks_rows)), if_then_else(True, compare_blocks_cols, if_then_else(False, if_then_else(True, 0, -5), if_then_else(False, 3, -2))), if_then_else(True, -5, -3)))
and_(le(if_then_else(True, zeros_diff_rows, compare_blocks_rows), if_then_else(True, compare_blocks_cols, compare_blocks_rows)), or_(or_(True, False), or_(False, False)))
le(if_then_else(ge(compare_blocks_rows, -5), if_then_else(True, ones_diff_cols, if_then_else(True, -5, if_then_else(False, 0, ones_diff_rows))), if_then_else(ge(compare_blocks_cols, -1), ones_diff_rows, if_then_else(True, 1, zeros_diff_rows))), if_then_else(le(-1, if_then_else(or_(False, False), if_then_else(True, 1, -1), -3)), if_then_else(or_(True, False), -4, zeros_diff_rows), if_then_else(False, ones_diff_rows, -2)))
le(if_then_else(and_(le(0, 3), and_(False, True)), if_then_else(le(2, ones_diff_cols), if_then_else(False, ones_diff_rows, ones_diff_rows), if_then_else(False, 4, ones_diff_rows)), if_then_else(and_(True, False), if_then_else(False, 2, -4), if_then_else(False, 4, -2))), if_then_else(or_(le(-4, ones_diff_rows), ge(0, -5)), if_then_else(or_(True, False), if_then_else(True, 0, -4), if_then_else(True, ones_diff_rows, -4)), if_then_else(le(ones_diff_rows, -1), if_then_else(False, ones_diff_rows, zeros_diff_rows), if_then_else(False, ones_diff_rows, -2))))
or_(ge(if_then_else(le(if_then_else(True, -1, ones_diff_rows), if_then_else(False, 1, compare_blocks_cols)), if_then_else(le(-2, -1), if_then_else(False, compare_blocks_cols, -1), if_then_else(True, -1, compare_blocks_rows)), if_then_else(or_(True, False), if_then_else(True, -3, zeros_diff_rows), if_then_else(False, -1, -3))), if_then_else(ge(if_then_else(False, -1, 2), if_then_else(False, 2, 3)), if_then_else(le(1, compare_blocks_cols), if_then_else(False, ones_diff_rows, 0), if_then_else(False, -1, -3)), if_then_else(ge(ones_diff_rows, compare_blocks_rows), if_then_else(False, zeros_diff_cols, ones_diff_rows), if_then_else(True, 1, 4)))), le(if_then_else(and_(le(ones_diff_rows, ones_diff_rows), le(zeros_diff_cols, 2)), if_then_else(or_(le(zeros_diff_cols, 2), True), if_then_else(False, 0, 4), if_then_else(True, 0, -1)), if_then_else(or_(True, True), if_then_else(True, ones_diff_cols, 1), if_then_else(True, 2, compare_blocks_cols))), if_then_else(le(if_then_else(True, compare_blocks_cols, 3), if_then_else(False, ones_diff_rows, -4)), if_then_else(le(compare_blocks_cols, zeros_diff_cols), if_then_else(True, 3, 1), if_then_else(False, -5, 0)), if_then_else(or_(False, True), if_then_else(False, -2, -3), if_then_else(False, 0, zeros_diff_rows)))))
VAL TREES:
mul(mul(add(mul(add(compare_blocks_cols, zeros_diff_rows), zeros_diff_rows), add(add(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, zeros_diff_rows)), zeros_diff_rows)), add(mul(compare_blocks_cols, ones_diff_rows), add(compare_blocks_cols, ones_diff_rows))), add(add(add(zeros_diff_rows, ones_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, zeros_diff_rows))))
add(mul(add(zeros_diff_cols, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), add(mul(mul(mul(ones_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_cols), mul(zeros_diff_rows, mul(ones_diff_cols, zeros_diff_cols))))
mul(mul(add(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, compare_blocks_rows)), ones_diff_rows)
add(ones_diff_rows, zeros_diff_rows)
add(mul(mul(add(mul(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), mul(add(mul(ones_diff_rows, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows)), add(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(mul(mul(mul(zeros_diff_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows))), add(mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(zeros_diff_rows, add(zeros_diff_rows, zeros_diff_rows)))))
mul(add(add(mul(ones_diff_cols, mul(add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, ones_diff_cols)))), add(zeros_diff_cols, add(zeros_diff_cols, ones_diff_rows))), zeros_diff_rows), add(add(mul(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_rows)), add(add(zeros_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows))))
COND TREES:
or_(or_(and_(False, False), ge(2, 4)), ge(if_then_else(False, -1, -5), if_then_else(False, 1, -4)))
or_(ge(if_then_else(ge(2, 4), if_then_else(False, 1, ones_diff_cols), if_then_else(True, compare_blocks_rows, -3)), zeros_diff_rows), or_(ge(if_then_else(True, compare_blocks_cols, ones_diff_rows), if_then_else(False, ones_diff_rows, compare_blocks_cols)), and_(ge(0, ones_diff_rows), and_(True, True))))
or_(ge(if_then_else(False, if_then_else(True, if_then_else(False, 0, -5), if_then_else(False, 4, compare_blocks_cols)), 3), -5), and_(and_(True, le(if_then_else(False, ones_diff_cols, compare_blocks_cols), if_then_else(True, -4, 3))), le(zeros_diff_cols, if_then_else(le(0, -3), -5, compare_blocks_rows))))
le(if_then_else(ge(-4, -3), if_then_else(or_(True, and_(False, True)), -4, 4), if_then_else(False, -4, compare_blocks_rows)), if_then_else(and_(True, False), if_then_else(False, if_then_else(False, -1, if_then_else(False, compare_blocks_cols, ones_diff_rows)), -5), if_then_else(True, zeros_diff_rows, compare_blocks_cols)))
le(if_then_else(le(if_then_else(or_(False, False), if_then_else(True, -1, -1), if_then_else(True, zeros_diff_cols, -3)), if_then_else(le(ones_diff_rows, compare_blocks_cols), if_then_else(False, 1, zeros_diff_rows), if_then_else(True, zeros_diff_rows, -2))), if_then_else(or_(le(0, compare_blocks_rows), or_(False, False)), if_then_else(and_(True, False), if_then_else(True, -4, compare_blocks_rows), if_then_else(False, -3, 2)), if_then_else(le(ones_diff_rows, -3), if_then_else(True, zeros_diff_rows, zeros_diff_rows), if_then_else(False, 2, 0))), if_then_else(and_(and_(True, True), or_(True, False)), if_then_else(or_(False, False), if_then_else(False, ones_diff_cols, ones_diff_cols), if_then_else(False, 4, -2)), if_then_else(ge(-5, zeros_diff_cols), if_then_else(True, compare_blocks_cols, 3), if_then_else(True, ones_diff_rows, -4)))), if_then_else(ge(if_then_else(and_(True, False), if_then_else(False, -5, -3), if_then_else(True, 1, -5)), if_then_else(and_(True, True), if_then_else(False, 3, 2), if_then_else(False, 0, -3))), if_then_else(le(if_then_else(True, -5, 3), if_then_else(False, compare_blocks_rows, compare_blocks_cols)), if_then_else(le(-3, compare_blocks_cols), if_then_else(le(if_then_else(True, -1, ones_diff_rows), if_then_else(False, 1, compare_blocks_cols)), if_then_else(le(-2, -1), if_then_else(False, compare_blocks_cols, -1), if_then_else(True, -1, compare_blocks_rows)), if_then_else(or_(True, False), if_then_else(True, -3, zeros_diff_rows), if_then_else(False, -1, -3))), if_then_else(True, compare_blocks_rows, ones_diff_rows)), if_then_else(or_(False, True), if_then_else(True, compare_blocks_rows, compare_blocks_cols), if_then_else(False, -1, 1))), if_then_else(or_(le(zeros_diff_rows, -1), and_(False, True)), if_then_else(ge(ones_diff_cols, 3), if_then_else(False, 3, 1), if_then_else(False, zeros_diff_rows, zeros_diff_rows)), if_then_else(or_(True, False), if_then_else(False, -5, 4), if_then_else(True, compare_blocks_cols, ones_diff_cols)))))
VAL TREES:
mul(add(add(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows))), add(mul(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(ones_diff_rows, ones_diff_rows), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, zeros_diff_rows)))))
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), add(add(compare_blocks_rows, ones_diff_rows), ones_diff_cols))
mul(add(mul(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(add(mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols))), ones_diff_rows), add(compare_blocks_cols, zeros_diff_cols)))
mul(add(mul(mul(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows)), mul(compare_blocks_rows, add(ones_diff_rows, ones_diff_cols))), mul(add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, zeros_diff_rows)))), compare_blocks_rows)
add(add(zeros_diff_rows, mul(compare_blocks_cols, compare_blocks_rows)), add(mul(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_cols, mul(ones_diff_rows, compare_blocks_cols))), mul(add(zeros_diff_cols, compare_blocks_rows), add(ones_diff_cols, add(zeros_diff_rows, ones_diff_cols))))
COND TREES:
le(if_then_else(and_(or_(True, False), False), if_then_else(False, ones_diff_rows, 0), if_then_else(True, zeros_diff_rows, zeros_diff_cols)), if_then_else(or_(le(3, compare_blocks_rows), True), if_then_else(and_(False, True), 2, 0), if_then_else(False, if_then_else(True, -2, 3), 3)))
or_(le(if_then_else(True, zeros_diff_cols, -4), if_then_else(False, ones_diff_cols, zeros_diff_rows)), ge(if_then_else(True, -2, compare_blocks_rows), if_then_else(and_(False, True), if_then_else(False, if_then_else(False, -5, ones_diff_rows), -3), -4)))
or_(and_(le(compare_blocks_rows, ones_diff_rows), or_(True, True)), and_(True, and_(False, False)))
le(if_then_else(le(if_then_else(False, if_then_else(False, -2, 0), 4), if_then_else(or_(False, True), compare_blocks_rows, ones_diff_cols)), if_then_else(True, 1, ones_diff_cols), if_then_else(ge(-1, ones_diff_rows), ones_diff_cols, if_then_else(False, zeros_diff_cols, 1))), if_then_else(le(if_then_else(False, ones_diff_rows, -1), compare_blocks_rows), if_then_else(False, if_then_else(True, -5, -4), 3), if_then_else(False, 1, 1)))
or_(le(if_then_else(or_(and_(False, False), ge(3, -4)), if_then_else(or_(False, False), if_then_else(False, -1, -2), if_then_else(False, 2, 3)), if_then_else(ge(ones_diff_rows, -2), if_then_else(False, 2, -5), if_then_else(True, -5, ones_diff_cols))), if_then_else(ge(if_then_else(True, -2, 4), if_then_else(True, ones_diff_rows, compare_blocks_rows)), if_then_else(ge(-1, ones_diff_cols), if_then_else(False, compare_blocks_cols, 3), if_then_else(True, -4, compare_blocks_cols)), if_then_else(ge(-4, -1), if_then_else(True, ones_diff_rows, -4), if_then_else(True, 2, 2)))), ge(if_then_else(and_(le(0, compare_blocks_rows), or_(False, True)), if_then_else(ge(-5, compare_blocks_cols), if_then_else(False, 1, 2), if_then_else(True, 3, 3)), if_then_else(ge(-2, ones_diff_cols), if_then_else(True, ones_diff_rows, -4), if_then_else(True, 1, compare_blocks_cols))), if_then_else(le(if_then_else(False, compare_blocks_rows, -4), if_then_else(True, ones_diff_rows, 3)), if_then_else(ge(4, -4), if_then_else(False, -3, 0), if_then_else(False, 2, -2)), if_then_else(le(zeros_diff_cols, -1), if_then_else(True, 4, 4), if_then_else(True, -5, 4)))))
VAL TREES:
mul(add(add(compare_blocks_cols, compare_blocks_rows), add(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, add(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, zeros_diff_rows))))), add(add(compare_blocks_cols, mul(compare_blocks_rows, compare_blocks_rows)), mul(compare_blocks_rows, ones_diff_rows)))
add(add(add(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), add(add(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))
mul(add(mul(add(mul(add(compare_blocks_rows, ones_diff_cols), ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_cols))), add(mul(add(ones_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, ones_diff_rows), add(compare_blocks_rows, zeros_diff_cols)))), add(add(mul(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), add(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows))), mul(mul(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)))))
add(ones_diff_cols, add(add(add(add(mul(mul(mul(compare_blocks_rows, ones_diff_cols), compare_blocks_cols), add(zeros_diff_cols, ones_diff_cols)), ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols)), zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)))
add(mul(mul(add(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), add(mul(mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows))), ones_diff_rows), mul(mul(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, compare_blocks_cols)), add(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_rows, zeros_diff_rows))), ones_diff_rows))
add(mul(mul(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols))), mul(add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, ones_diff_cols)))), add(mul(mul(zeros_diff_cols, mul(zeros_diff_rows, compare_blocks_rows)), add(add(compare_blocks_rows, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_rows, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))))
COND TREES:
le(if_then_else(and_(False, True), if_then_else(False, ones_diff_rows, 0), if_then_else(True, zeros_diff_rows, zeros_diff_cols)), if_then_else(or_(le(3, compare_blocks_rows), True), if_then_else(and_(False, True), 2, 0), if_then_else(False, if_then_else(True, -2, 3), 3)))
or_(le(if_then_else(True, zeros_diff_cols, -4), if_then_else(ge(if_then_else(True, zeros_diff_cols, 3), if_then_else(False, ones_diff_rows, compare_blocks_rows)), if_then_else(or_(True, False), if_then_else(False, -4, zeros_diff_rows), if_then_else(True, -2, 3)), if_then_else(ge(compare_blocks_rows, ones_diff_rows), if_then_else(True, ones_diff_rows, -5), if_then_else(False, -5, 3)))), ge(if_then_else(True, -2, compare_blocks_rows), if_then_else(and_(True, True), if_then_else(False, if_then_else(False, -5, ones_diff_rows), -3), -4)))
or_(and_(le(-5, ones_diff_rows), or_(True, True)), and_(or_(and_(or_(False, False), le(compare_blocks_cols, if_then_else(False, zeros_diff_cols, if_then_else(True, 0, ones_diff_cols)))), or_(or_(False, True), ge(ones_diff_cols, 4))), and_(False, False)))
le(if_then_else(le(if_then_else(False, if_then_else(False, -2, 0), 4), if_then_else(True, compare_blocks_rows, ones_diff_cols)), if_then_else(True, 1, ones_diff_cols), if_then_else(ge(-1, if_then_else(le(if_then_else(le(4, -2), if_then_else(False, zeros_diff_rows, ones_diff_cols), if_then_else(False, -2, -3)), if_then_else(and_(True, False), if_then_else(False, 3, -1), if_then_else(True, -4, ones_diff_cols))), if_then_else(and_(or_(True, True), ge(0, 1)), if_then_else(or_(True, False), if_then_else(True, 2, 0), ones_diff_rows), if_then_else(and_(True, False), if_then_else(True, -1, 0), if_then_else(True, ones_diff_cols, -2))), if_then_else(and_(le(ones_diff_rows, 3), le(compare_blocks_cols, -1)), if_then_else(ge(zeros_diff_cols, zeros_diff_rows), if_then_else(True, zeros_diff_cols, -3), if_then_else(False, -3, 4)), if_then_else(le(-3, -4), if_then_else(True, -2, compare_blocks_rows), if_then_else(True, compare_blocks_cols, -4))))), ones_diff_cols, if_then_else(False, zeros_diff_cols, 1))), if_then_else(le(if_then_else(False, 4, -1), compare_blocks_rows), if_then_else(False, if_then_else(True, -5, -4), 3), if_then_else(False, 1, 1)))
or_(le(if_then_else(or_(and_(False, False), ge(3, -4)), if_then_else(or_(False, False), if_then_else(False, -1, -2), if_then_else(False, 0, 3)), if_then_else(ge(ones_diff_rows, -2), if_then_else(False, 2, -5), if_then_else(True, -5, ones_diff_cols))), if_then_else(ge(if_then_else(True, -2, 4), if_then_else(True, ones_diff_rows, compare_blocks_rows)), if_then_else(ge(-1, ones_diff_cols), if_then_else(False, compare_blocks_cols, 3), if_then_else(True, -4, compare_blocks_cols)), if_then_else(ge(-4, -1), if_then_else(True, ones_diff_rows, -4), if_then_else(True, 2, 2)))), ge(if_then_else(and_(le(0, compare_blocks_rows), or_(or_(and_(and_(False, True), or_(True, False)), ge(if_then_else(True, 1, 1), if_then_else(False, -2, 0))), True)), if_then_else(ge(-5, compare_blocks_cols), if_then_else(False, 1, 2), if_then_else(True, 3, 3)), if_then_else(ge(-2, ones_diff_cols), if_then_else(True, ones_diff_rows, -4), if_then_else(True, 1, compare_blocks_cols))), if_then_else(le(if_then_else(True, compare_blocks_rows, -4), if_then_else(True, ones_diff_rows, 3)), if_then_else(ge(4, -4), if_then_else(False, -3, 0), if_then_else(False, 2, -2)), if_then_else(le(zeros_diff_cols, -1), if_then_else(True, 4, 4), if_then_else(True, -5, compare_blocks_cols)))))
VAL TREES:
mul(add(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, zeros_diff_rows)), add(add(add(compare_blocks_cols, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)), add(add(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows))))
add(compare_blocks_rows, add(zeros_diff_cols, add(zeros_diff_cols, ones_diff_cols)))
mul(add(mul(add(mul(mul(zeros_diff_rows, compare_blocks_rows), ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_cols))), add(mul(add(ones_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)))), mul(zeros_diff_cols, mul(zeros_diff_cols, zeros_diff_cols)))
add(add(compare_blocks_rows, compare_blocks_rows), add(add(mul(compare_blocks_rows, compare_blocks_rows), zeros_diff_rows), zeros_diff_cols))
add(mul(mul(add(add(ones_diff_cols, ones_diff_rows), add(compare_blocks_rows, zeros_diff_cols)), add(mul(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows))), mul(add(mul(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)))), mul(mul(zeros_diff_cols, add(add(ones_diff_rows, ones_diff_rows), mul(ones_diff_cols, ones_diff_rows))), ones_diff_rows))
add(mul(mul(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols))), mul(add(mul(compare_blocks_cols, mul(zeros_diff_rows, compare_blocks_rows)), mul(zeros_diff_cols, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, ones_diff_cols)))), add(mul(mul(add(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(add(compare_blocks_rows, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_rows, compare_blocks_rows)), mul(mul(add(zeros_diff_rows, compare_blocks_cols), compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_cols)))))
COND TREES:
le(if_then_else(and_(or_(True, False), False), if_then_else(False, ones_diff_rows, 0), if_then_else(True, zeros_diff_rows, zeros_diff_cols)), if_then_else(or_(le(3, compare_blocks_rows), True), if_then_else(and_(or_(ge(if_then_else(or_(or_(or_(or_(False, True), ge(compare_blocks_rows, zeros_diff_cols)), le(if_then_else(True, compare_blocks_rows, zeros_diff_cols), if_then_else(True, ones_diff_cols, zeros_diff_rows))), le(if_then_else(ge(ones_diff_cols, -1), if_then_else(False, zeros_diff_cols, -4), if_then_else(True, compare_blocks_rows, 2)), if_then_else(ge(zeros_diff_cols, -5), if_then_else(True, 2, 4), if_then_else(True, compare_blocks_rows, 4)))), if_then_else(ge(if_then_else(ge(compare_blocks_rows, 4), if_then_else(False, 4, zeros_diff_cols), if_then_else(True, -1, -2)), if_then_else(or_(True, True), if_then_else(False, -2, 3), if_then_else(False, 3, 4))), if_then_else(and_(and_(True, True), le(-4, zeros_diff_cols)), if_then_else(or_(True, False), if_then_else(False, -3, -1), if_then_else(True, -5, 4)), if_then_else(and_(True, True), if_then_else(False, compare_blocks_rows, zeros_diff_rows), if_then_else(True, compare_blocks_rows, -4))), if_then_else(ge(if_then_else(True, -1, -5), if_then_else(True, zeros_diff_rows, zeros_diff_rows)), if_then_else(and_(True, True), if_then_else(True, -2, ones_diff_rows), if_then_else(False, zeros_diff_cols, -3)), if_then_else(and_(False, True), if_then_else(True, -4, 2), if_then_else(True, 1, ones_diff_cols)))), if_then_else(and_(and_(and_(True, False), and_(False, False)), ge(if_then_else(False, ones_diff_cols, 2), if_then_else(True, -1, -3))), if_then_else(le(if_then_else(False, -5, -2), if_then_else(True, -5, 4)), if_then_else(and_(True, True), if_then_else(True, 3, -1), if_then_else(False, -1, 2)), if_then_else(le(zeros_diff_cols, 0), if_then_else(False, ones_diff_rows, ones_diff_rows), if_then_else(False, compare_blocks_rows, zeros_diff_cols))), if_then_else(le(if_then_else(False, 2, 3), if_then_else(False, 3, zeros_diff_rows)), if_then_else(le(compare_blocks_cols, ones_diff_rows), if_then_else(False, -4, -3), if_then_else(True, compare_blocks_rows, zeros_diff_cols)), if_then_else(le(-1, 1), if_then_else(True, -1, 4), if_then_else(False, -4, -2))))), 4), False), False), 2, 0), if_then_else(False, if_then_else(True, -2, if_then_else(False, 3, -2)), 3)))
or_(le(if_then_else(True, zeros_diff_cols, -4), if_then_else(False, ones_diff_cols, zeros_diff_rows)), ge(if_then_else(True, -2, compare_blocks_rows), if_then_else(and_(or_(False, False), True), if_then_else(False, if_then_else(False, -5, ones_diff_rows), 0), -4)))
or_(and_(le(compare_blocks_rows, ones_diff_rows), or_(True, True)), and_(ge(compare_blocks_rows, if_then_else(le(0, -5), ones_diff_cols, compare_blocks_rows)), le(-3, 3)))
le(if_then_else(le(if_then_else(False, if_then_else(False, -2, 0), 4), if_then_else(or_(False, True), compare_blocks_rows, ones_diff_cols)), if_then_else(True, 1, ones_diff_cols), if_then_else(ge(-1, if_then_else(False, compare_blocks_rows, compare_blocks_cols)), ones_diff_cols, if_then_else(False, zeros_diff_cols, compare_blocks_rows))), if_then_else(False, if_then_else(False, if_then_else(True, -5, -4), 3), if_then_else(False, 1, 1)))
or_(le(if_then_else(or_(and_(False, False), ge(3, -4)), if_then_else(or_(False, False), if_then_else(False, -1, -2), if_then_else(False, 2, 3)), if_then_else(ge(ones_diff_rows, -2), if_then_else(False, 2, -5), if_then_else(True, -5, ones_diff_cols))), if_then_else(ge(if_then_else(True, -2, 4), if_then_else(True, ones_diff_rows, compare_blocks_rows)), if_then_else(ge(-1, ones_diff_cols), if_then_else(False, compare_blocks_cols, 3), if_then_else(True, -4, compare_blocks_cols)), if_then_else(ge(-4, -1), if_then_else(True, ones_diff_rows, -4), if_then_else(le(zeros_diff_cols, 2), 2, 2)))), ge(if_then_else(and_(le(0, compare_blocks_rows), or_(False, True)), if_then_else(ge(-5, compare_blocks_cols), if_then_else(False, 1, 2), if_then_else(True, 3, 3)), if_then_else(ge(-2, ones_diff_cols), if_then_else(True, zeros_diff_cols, -4), if_then_else(True, 1, compare_blocks_cols))), if_then_else(le(if_then_else(False, compare_blocks_rows, -4), if_then_else(True, ones_diff_rows, 3)), if_then_else(ge(4, -4), if_then_else(False, -3, 0), if_then_else(False, 2, -2)), if_then_else(le(zeros_diff_cols, -1), if_then_else(False, 4, 4), if_then_else(True, -5, compare_blocks_cols)))))
VAL TREES:
mul(add(add(compare_blocks_cols, compare_blocks_rows), add(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, zeros_diff_rows))), add(add(compare_blocks_cols, mul(compare_blocks_rows, compare_blocks_rows)), mul(compare_blocks_rows, ones_diff_rows)))
add(add(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows)), add(add(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))
mul(add(mul(add(mul(add(compare_blocks_rows, ones_diff_cols), ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_cols))), add(mul(add(ones_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)))), add(add(mul(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), add(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows))), mul(mul(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)))))
add(ones_diff_cols, add(add(add(add(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols)), zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)))
add(mul(mul(add(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), add(mul(mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows))), mul(add(mul(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)))), mul(mul(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, compare_blocks_cols)), add(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_rows, zeros_diff_rows))), ones_diff_rows))
add(mul(mul(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols))), mul(add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, ones_diff_cols)))), add(mul(mul(add(ones_diff_cols, add(add(zeros_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows))), mul(zeros_diff_rows, compare_blocks_rows)), add(add(compare_blocks_rows, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_rows, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))))
COND TREES:
le(if_then_else(and_(True, False), if_then_else(False, ones_diff_rows, 0), compare_blocks_rows), if_then_else(or_(le(3, compare_blocks_rows), True), if_then_else(and_(False, True), 2, 0), if_then_else(False, if_then_else(True, -2, 3), 3)))
or_(le(if_then_else(True, zeros_diff_cols, -4), if_then_else(False, ones_diff_cols, zeros_diff_rows)), ge(if_then_else(True, -2, compare_blocks_rows), compare_blocks_rows))
or_(and_(le(if_then_else(le(-1, if_then_else(or_(False, False), if_then_else(True, 1, -1), -3)), if_then_else(or_(True, False), -4, zeros_diff_rows), if_then_else(False, ones_diff_rows, -2)), ones_diff_rows), or_(True, True)), and_(or_(False, True), and_(False, False)))
le(if_then_else(le(if_then_else(False, if_then_else(False, -2, 0), 4), if_then_else(False, compare_blocks_rows, ones_diff_cols)), if_then_else(or_(le(-4, ones_diff_rows), ge(0, -5)), if_then_else(or_(True, False), if_then_else(True, 0, -4), if_then_else(True, ones_diff_rows, -4)), if_then_else(le(ones_diff_rows, -1), if_then_else(False, ones_diff_rows, zeros_diff_rows), if_then_else(False, ones_diff_rows, -2))), if_then_else(ge(-1, ones_diff_rows), ones_diff_cols, if_then_else(False, zeros_diff_cols, 1))), if_then_else(le(if_then_else(False, 4, -1), compare_blocks_rows), if_then_else(False, if_then_else(True, -5, -4), 3), if_then_else(False, 1, 1)))
or_(le(if_then_else(or_(and_(False, False), ge(3, -4)), if_then_else(or_(False, False), if_then_else(False, -1, -2), if_then_else(False, 2, 3)), if_then_else(ge(ones_diff_rows, -2), if_then_else(False, 2, -5), if_then_else(True, -5, ones_diff_cols))), if_then_else(True, if_then_else(ge(-1, ones_diff_cols), if_then_else(False, compare_blocks_cols, 3), if_then_else(True, -4, compare_blocks_cols)), if_then_else(ge(-4, -1), if_then_else(True, ones_diff_rows, -4), if_then_else(True, 2, 2)))), ge(if_then_else(and_(le(0, compare_blocks_rows), or_(False, True)), if_then_else(ge(-5, compare_blocks_cols), if_then_else(False, 1, ones_diff_rows), if_then_else(True, 3, 3)), if_then_else(ge(-2, ones_diff_cols), if_then_else(True, ones_diff_rows, -4), if_then_else(True, 1, compare_blocks_cols))), if_then_else(le(if_then_else(False, compare_blocks_rows, -4), if_then_else(True, ones_diff_rows, 3)), if_then_else(ge(4, -4), if_then_else(False, -3, 0), if_then_else(False, 2, -2)), if_then_else(le(zeros_diff_cols, -1), if_then_else(True, 4, 4), if_then_else(True, -5, compare_blocks_cols)))))
VAL TREES:
mul(add(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, zeros_diff_rows)), add(add(compare_blocks_cols, mul(compare_blocks_rows, compare_blocks_rows)), mul(compare_blocks_rows, zeros_diff_rows)))
add(add(add(zeros_diff_rows, ones_diff_cols), ones_diff_cols), add(add(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_cols, mul(add(zeros_diff_cols, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)))))
mul(add(mul(add(mul(ones_diff_rows, ones_diff_cols), add(compare_blocks_cols, mul(compare_blocks_rows, ones_diff_rows))), add(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_cols))), add(mul(add(ones_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)))), add(add(mul(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), add(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows))), mul(mul(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)))))
add(ones_diff_cols, add(add(mul(compare_blocks_rows, mul(mul(ones_diff_rows, compare_blocks_cols), zeros_diff_cols)), zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)))
add(mul(mul(add(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), add(mul(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows))), mul(add(mul(mul(zeros_diff_cols, add(mul(ones_diff_rows, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows))), zeros_diff_cols), add(ones_diff_rows, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)))), mul(mul(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, compare_blocks_cols)), add(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_rows, zeros_diff_rows))), ones_diff_rows))
add(mul(mul(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols))), mul(add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, ones_diff_cols)))), add(mul(mul(add(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(add(compare_blocks_rows, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_cols))), mul(mul(add(add(zeros_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows)), add(zeros_diff_rows, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))))
COND TREES:
or_(or_(and_(False, False), ge(2, 4)), ge(if_then_else(False, ones_diff_cols, -5), if_then_else(False, 1, -4)))
or_(ge(if_then_else(ge(2, 4), if_then_else(False, 1, ones_diff_cols), if_then_else(True, compare_blocks_rows, -3)), if_then_else(and_(False, False), if_then_else(True, 0, -1), if_then_else(False, -5, -1))), or_(ge(if_then_else(True, compare_blocks_cols, ones_diff_rows), if_then_else(False, ones_diff_rows, compare_blocks_cols)), and_(ge(0, ones_diff_rows), and_(True, True))))
or_(ge(if_then_else(False, if_then_else(True, if_then_else(False, 0, -5), if_then_else(False, 4, compare_blocks_cols)), 3), if_then_else(False, if_then_else(False, compare_blocks_cols, if_then_else(True, 0, -1)), 4)), and_(and_(True, le(if_then_else(False, ones_diff_cols, compare_blocks_cols), if_then_else(True, -4, 3))), le(zeros_diff_cols, if_then_else(le(0, -3), -5, compare_blocks_rows))))
le(if_then_else(ge(-4, -3), if_then_else(or_(True, and_(False, True)), -4, 4), if_then_else(False, 3, compare_blocks_rows)), if_then_else(and_(True, False), if_then_else(False, if_then_else(False, -1, if_then_else(False, compare_blocks_cols, ones_diff_rows)), -5), if_then_else(True, zeros_diff_rows, compare_blocks_cols)))
le(if_then_else(le(if_then_else(or_(False, False), if_then_else(True, -1, -1), if_then_else(True, zeros_diff_cols, -3)), if_then_else(le(ones_diff_rows, compare_blocks_cols), if_then_else(False, 1, zeros_diff_rows), if_then_else(True, zeros_diff_rows, -2))), if_then_else(or_(le(0, compare_blocks_rows), or_(False, False)), if_then_else(and_(True, False), if_then_else(True, -4, compare_blocks_rows), if_then_else(False, -3, 2)), if_then_else(le(ones_diff_rows, -3), if_then_else(True, zeros_diff_rows, zeros_diff_rows), if_then_else(False, 2, 0))), if_then_else(and_(and_(True, True), or_(True, False)), if_then_else(or_(False, False), if_then_else(False, ones_diff_cols, ones_diff_cols), if_then_else(False, 4, -2)), if_then_else(ge(-5, zeros_diff_cols), if_then_else(True, compare_blocks_cols, 3), if_then_else(True, ones_diff_rows, -4)))), if_then_else(ge(if_then_else(and_(True, False), if_then_else(False, -5, -3), if_then_else(True, 1, -5)), if_then_else(and_(True, True), if_then_else(False, 3, 2), if_then_else(False, 0, -3))), if_then_else(le(if_then_else(True, -5, 3), if_then_else(False, compare_blocks_rows, compare_blocks_cols)), if_then_else(le(-3, compare_blocks_cols), if_then_else(True, 2, -5), if_then_else(True, compare_blocks_rows, ones_diff_rows)), if_then_else(or_(False, True), if_then_else(True, compare_blocks_rows, compare_blocks_cols), if_then_else(False, -1, 1))), if_then_else(or_(le(zeros_diff_rows, -1), and_(False, True)), if_then_else(ge(ones_diff_cols, 3), if_then_else(False, 3, 1), if_then_else(False, zeros_diff_rows, zeros_diff_rows)), if_then_else(or_(True, False), if_then_else(False, -5, 4), if_then_else(True, compare_blocks_cols, ones_diff_cols)))))
VAL TREES:
mul(add(add(ones_diff_rows, add(zeros_diff_rows, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows))), add(mul(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))))
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(compare_blocks_rows, add(zeros_diff_cols, zeros_diff_cols))), add(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))
mul(add(add(mul(zeros_diff_cols, mul(ones_diff_cols, ones_diff_rows)), mul(compare_blocks_cols, zeros_diff_rows)), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, ones_diff_rows), add(compare_blocks_cols, zeros_diff_cols)))
mul(add(mul(mul(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows)), mul(add(zeros_diff_rows, compare_blocks_rows), add(ones_diff_rows, ones_diff_cols))), mul(ones_diff_rows, zeros_diff_rows)), add(add(add(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, compare_blocks_rows))), add(add(add(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_rows)))))
add(ones_diff_rows, add(mul(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))
mul(add(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_cols, ones_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_rows), add(ones_diff_cols, mul(add(zeros_diff_rows, compare_blocks_cols), ones_diff_cols))))
COND TREES:
ge(if_then_else(or_(le(if_then_else(False, ones_diff_rows, -4), -1), and_(False, True)), if_then_else(False, 3, -4), if_then_else(and_(False, or_(False, True)), -1, if_then_else(ge(if_then_else(True, 4, -1), if_then_else(False, zeros_diff_rows, ones_diff_cols)), if_then_else(le(-3, compare_blocks_rows), if_then_else(True, 0, ones_diff_cols), if_then_else(True, -3, -5)), if_then_else(or_(True, False), if_then_else(False, 0, if_then_else(False, -2, 2)), if_then_else(False, -2, ones_diff_cols))))), if_then_else(le(0, if_then_else(ge(-1, -1), 0, compare_blocks_rows)), if_then_else(True, compare_blocks_cols, if_then_else(False, if_then_else(True, if_then_else(False, ones_diff_rows, -4), -5), if_then_else(False, 3, -2))), if_then_else(True, -5, -3)))
and_(le(if_then_else(True, zeros_diff_rows, compare_blocks_rows), if_then_else(True, compare_blocks_cols, if_then_else(le(if_then_else(True, 0, -2), if_then_else(False, 1, -4)), if_then_else(and_(True, True), if_then_else(True, 4, zeros_diff_cols), if_then_else(False, -2, compare_blocks_rows)), if_then_else(or_(True, False), if_then_else(True, compare_blocks_cols, 4), if_then_else(False, zeros_diff_rows, ones_diff_rows))))), or_(or_(True, False), or_(False, False)))
le(if_then_else(le(if_then_else(and_(ge(-3, compare_blocks_rows), ge(2, 4)), if_then_else(and_(True, True), if_then_else(True, ones_diff_cols, -5), if_then_else(False, -1, -3)), if_then_else(le(-4, ones_diff_cols), if_then_else(False, -2, -3), if_then_else(False, zeros_diff_rows, compare_blocks_cols))), if_then_else(ge(if_then_else(False, ones_diff_rows, zeros_diff_cols), if_then_else(True, 3, 3)), if_then_else(and_(True, True), if_then_else(False, zeros_diff_rows, ones_diff_cols), if_then_else(True, -4, -1)), if_then_else(and_(False, True), if_then_else(True, compare_blocks_cols, compare_blocks_cols), if_then_else(False, -2, ones_diff_cols)))), if_then_else(le(if_then_else(and_(True, True), if_then_else(False, -1, compare_blocks_cols), if_then_else(True, -1, -2)), if_then_else(ge(1, 0), if_then_else(False, zeros_diff_rows, compare_blocks_cols), if_then_else(False, -5, compare_blocks_rows))), if_then_else(or_(ge(-3, ones_diff_cols), and_(True, True)), if_then_else(le(compare_blocks_rows, 1), if_then_else(False, 2, zeros_diff_cols), if_then_else(False, 0, -2)), if_then_else(and_(False, False), if_then_else(True, compare_blocks_cols, ones_diff_cols), if_then_else(False, 2, -4))), if_then_else(le(if_then_else(False, ones_diff_rows, 1), if_then_else(True, -2, 3)), if_then_else(and_(True, False), if_then_else(True, 2, 1), if_then_else(False, -3, 2)), if_then_else(or_(False, True), if_then_else(True, -1, 2), if_then_else(True, compare_blocks_rows, -4)))), if_then_else(and_(le(if_then_else(False, compare_blocks_rows, -5), if_then_else(True, 2, ones_diff_rows)), and_(and_(True, False), ge(compare_blocks_rows, ones_diff_rows))), if_then_else(and_(and_(True, False), le(zeros_diff_rows, -2)), if_then_else(and_(False, False), if_then_else(True, compare_blocks_cols, zeros_diff_rows), if_then_else(True, -2, -3)), if_then_else(and_(True, False), if_then_else(True, 3, -5), if_then_else(True, 2, 4))), if_then_else(le(if_then_else(False, zeros_diff_cols, 1), if_then_else(False, -4, -1)), if_then_else(le(-5, zeros_diff_rows), if_then_else(False, zeros_diff_rows, -4), if_then_else(True, 2, compare_blocks_rows)), if_then_else(and_(True, False), if_then_else(True, 1, 2), if_then_else(True, 3, -1))))), if_then_else(le(-1, if_then_else(or_(True, False), if_then_else(True, 1, -1), -3)), if_then_else(or_(True, True), -4, zeros_diff_rows), if_then_else(False, ones_diff_rows, -2)))
le(if_then_else(and_(le(0, 3), and_(False, True)), if_then_else(le(2, ones_diff_cols), if_then_else(False, ones_diff_rows, ones_diff_rows), if_then_else(False, 4, compare_blocks_cols)), if_then_else(and_(True, False), if_then_else(False, 2, -4), if_then_else(False, 4, -2))), if_then_else(or_(ge(if_then_else(and_(False, True), if_then_else(False, ones_diff_rows, -1), if_then_else(False, zeros_diff_rows, -2)), if_then_else(le(1, -1), if_then_else(True, ones_diff_rows, 4), if_then_else(True, -2, 2))), or_(and_(ge(zeros_diff_rows, 2), and_(True, True)), or_(ge(ones_diff_rows, zeros_diff_cols), or_(True, False)))), if_then_else(ge(if_then_else(le(-2, zeros_diff_rows), if_then_else(False, -1, zeros_diff_cols), if_then_else(False, 0, 3)), if_then_else(le(4, compare_blocks_cols), if_then_else(True, 2, zeros_diff_cols), if_then_else(False, 1, 1))), if_then_else(or_(ge(-1, -2), ge(3, -1)), if_then_else(ge(compare_blocks_rows, compare_blocks_cols), if_then_else(True, -2, -5), if_then_else(True, compare_blocks_cols, -3)), if_then_else(le(3, 1), if_then_else(False, compare_blocks_rows, 3), if_then_else(True, compare_blocks_rows, compare_blocks_rows))), if_then_else(and_(le(1, -5), ge(1, -2)), if_then_else(le(-1, ones_diff_rows), if_then_else(False, -2, 0), if_then_else(True, ones_diff_rows, 3)), if_then_else(and_(False, True), if_then_else(False, compare_blocks_rows, 3), if_then_else(False, compare_blocks_rows, compare_blocks_cols)))), if_then_else(and_(ge(if_then_else(False, 4, -3), if_then_else(True, -1, compare_blocks_cols)), ge(if_then_else(False, ones_diff_cols, -1), if_then_else(True, ones_diff_rows, 1))), if_then_else(and_(ge(compare_blocks_cols, zeros_diff_cols), ge(zeros_diff_cols, -1)), if_then_else(and_(True, True), if_then_else(False, -4, zeros_diff_cols), if_then_else(False, 0, -1)), if_then_else(or_(True, True), if_then_else(False, compare_blocks_cols, -3), if_then_else(False, 4, 0))), if_then_else(and_(le(-3, compare_blocks_cols), or_(False, False)), if_then_else(and_(False, False), if_then_else(False, 2, 1), if_then_else(True, -5, compare_blocks_rows)), if_then_else(or_(True, True), if_then_else(True, ones_diff_rows, zeros_diff_cols), if_then_else(False, 4, compare_blocks_cols))))))
or_(ge(if_then_else(le(if_then_else(True, -1, if_then_else(ge(if_then_else(le(-1, -2), -5, zeros_diff_cols), if_then_else(True, -5, 3)), if_then_else(le(compare_blocks_cols, -5), if_then_else(False, if_then_else(True, -1, compare_blocks_rows), -2), if_then_else(le(ones_diff_rows, -4), -3, if_then_else(False, -1, 0))), if_then_else(or_(True, False), if_then_else(True, -1, if_then_else(True, compare_blocks_rows, zeros_diff_cols)), if_then_else(False, -1, -4)))), if_then_else(False, 1, compare_blocks_cols)), if_then_else(le(-2, -1), if_then_else(False, compare_blocks_cols, -1), if_then_else(True, -1, compare_blocks_rows)), if_then_else(or_(True, False), if_then_else(True, -3, zeros_diff_rows), if_then_else(False, -1, -3))), if_then_else(ge(if_then_else(False, -1, 2), if_then_else(False, 2, 3)), if_then_else(le(1, compare_blocks_cols), if_then_else(False, ones_diff_rows, 0), if_then_else(False, -1, -3)), if_then_else(ge(ones_diff_rows, compare_blocks_rows), if_then_else(False, zeros_diff_cols, ones_diff_rows), if_then_else(True, 1, 4)))), le(if_then_else(and_(le(ones_diff_rows, ones_diff_rows), True), if_then_else(or_(True, True), if_then_else(False, 0, 4), if_then_else(True, 0, -1)), if_then_else(or_(True, True), if_then_else(True, ones_diff_cols, 1), if_then_else(True, 2, compare_blocks_cols))), if_then_else(le(if_then_else(True, compare_blocks_cols, 3), if_then_else(False, ones_diff_rows, -4)), if_then_else(le(compare_blocks_cols, zeros_diff_cols), if_then_else(True, 3, 1), if_then_else(False, -5, 0)), if_then_else(or_(False, True), if_then_else(False, -2, -3), if_then_else(False, 0, zeros_diff_rows)))))
VAL TREES:
mul(mul(add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, zeros_diff_rows)), add(mul(compare_blocks_cols, ones_diff_rows), add(compare_blocks_cols, ones_diff_rows))), add(add(add(zeros_diff_rows, ones_diff_rows), compare_blocks_cols), add(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows))))
add(mul(add(zeros_diff_cols, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), add(mul(mul(mul(add(add(zeros_diff_rows, ones_diff_cols), compare_blocks_rows), zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)), ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(mul(add(add(mul(add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, zeros_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_cols))), add(mul(add(ones_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)))), ones_diff_cols), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)))
add(add(add(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)))
add(mul(mul(add(mul(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, ones_diff_rows)), add(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows)), add(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(mul(add(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows))), add(mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows)))))
mul(add(add(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_cols, ones_diff_rows)), add(ones_diff_rows, add(zeros_diff_rows, ones_diff_rows))), add(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), add(add(zeros_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows))))
COND TREES:
ge(if_then_else(or_(le(if_then_else(False, ones_diff_rows, -4), -1), and_(False, True)), if_then_else(False, 3, -4), if_then_else(and_(False, or_(False, True)), -1, if_then_else(False, -1, if_then_else(False, 2, zeros_diff_rows)))), if_then_else(le(0, if_then_else(ge(-1, -1), 0, compare_blocks_rows)), if_then_else(True, compare_blocks_cols, if_then_else(False, if_then_else(True, 0, -5), if_then_else(False, 3, -2))), if_then_else(True, -5, if_then_else(le(if_then_else(or_(False, True), if_then_else(True, 0, 2), if_then_else(False, compare_blocks_cols, -2)), if_then_else(le(0, -4), if_then_else(True, -5, zeros_diff_rows), if_then_else(False, zeros_diff_rows, compare_blocks_cols))), if_then_else(or_(and_(False, False), le(-1, -1)), if_then_else(and_(True, True), if_then_else(False, -2, -5), if_then_else(True, zeros_diff_cols, compare_blocks_cols)), if_then_else(and_(True, False), if_then_else(False, -3, -4), if_then_else(False, ones_diff_rows, -3))), if_then_else(or_(and_(False, True), and_(True, True)), if_then_else(ge(compare_blocks_cols, -3), if_then_else(True, ones_diff_rows, -1), 3), if_then_else(and_(True, True), if_then_else(True, -3, zeros_diff_cols), if_then_else(False, -3, 3)))))))
and_(le(if_then_else(True, zeros_diff_rows, compare_blocks_rows), if_then_else(True, compare_blocks_cols, compare_blocks_rows)), or_(or_(True, False), or_(ge(if_then_else(le(if_then_else(le(-3, 0), if_then_else(True, -3, zeros_diff_rows), if_then_else(False, -3, -5)), if_then_else(and_(False, False), if_then_else(False, 4, 3), if_then_else(False, -5, 0))), if_then_else(ge(if_then_else(True, -4, zeros_diff_cols), if_then_else(False, zeros_diff_cols, -3)), if_then_else(le(zeros_diff_rows, 4), if_then_else(True, 1, -1), if_then_else(False, 3, -3)), if_then_else(ge(4, 2), if_then_else(False, ones_diff_rows, -1), if_then_else(True, ones_diff_cols, 0))), if_then_else(and_(or_(False, True), le(ones_diff_rows, 4)), if_then_else(ge(zeros_diff_rows, 1), if_then_else(False, compare_blocks_cols, ones_diff_cols), if_then_else(True, -4, -1)), if_then_else(ge(3, zeros_diff_cols), if_then_else(True, ones_diff_rows, 3), if_then_else(False, -3, 3)))), if_then_else(le(if_then_else(le(-5, -3), if_then_else(False, -2, zeros_diff_cols), if_then_else(False, 0, ones_diff_cols)), if_then_else(ge(2, -4), if_then_else(False, ones_diff_rows, compare_blocks_cols), if_then_else(True, ones_diff_cols, compare_blocks_cols))), if_then_else(or_(le(ones_diff_rows, -2), le(ones_diff_rows, -5)), if_then_else(and_(False, True), if_then_else(True, zeros_diff_rows, compare_blocks_cols), if_then_else(False, zeros_diff_cols, -3)), if_then_else(and_(True, True), if_then_else(True, -5, compare_blocks_cols), if_then_else(True, -2, compare_blocks_rows))), if_then_else(or_(or_(True, False), and_(True, False)), if_then_else(ge(-5, -3), if_then_else(True, 2, zeros_diff_rows), if_then_else(True, 0, -5)), if_then_else(ge(compare_blocks_cols, -2), if_then_else(True, zeros_diff_rows, ones_diff_rows), if_then_else(True, zeros_diff_rows, -2))))), False)))
le(if_then_else(ge(compare_blocks_rows, -5), if_then_else(True, ones_diff_cols, if_then_else(True, -5, if_then_else(False, 0, ones_diff_rows))), if_then_else(le(if_then_else(le(0, -2), if_then_else(False, ones_diff_rows, ones_diff_rows), if_then_else(False, 4, if_then_else(True, -5, if_then_else(False, 0, ones_diff_rows)))), if_then_else(or_(False, True), if_then_else(False, ones_diff_rows, -5), if_then_else(True, compare_blocks_rows, ones_diff_rows))), ones_diff_rows, if_then_else(True, 1, zeros_diff_rows))), if_then_else(le(-1, ones_diff_rows), if_then_else(or_(True, False), -4, zeros_diff_rows), if_then_else(False, ones_diff_rows, -2)))
le(if_then_else(and_(le(0, 3), and_(False, True)), if_then_else(le(2, ones_diff_cols), if_then_else(le(if_then_else(le(if_then_else(True, -5, -2), if_then_else(True, zeros_diff_rows, 0)), if_then_else(or_(True, False), if_then_else(False, ones_diff_rows, compare_blocks_rows), if_then_else(False, ones_diff_rows, 1)), if_then_else(and_(False, True), if_then_else(True, 2, zeros_diff_rows), if_then_else(False, zeros_diff_cols, ones_diff_cols))), if_then_else(ge(if_then_else(False, -3, compare_blocks_cols), if_then_else(False, compare_blocks_cols, 0)), if_then_else(le(-3, zeros_diff_cols), if_then_else(False, 2, compare_blocks_rows), if_then_else(True, ones_diff_cols, zeros_diff_cols)), if_then_else(and_(False, False), if_then_else(True, 2, 0), if_then_else(True, 0, -2)))), if_then_else(or_(and_(le(zeros_diff_rows, compare_blocks_cols), or_(False, False)), and_(ge(ones_diff_rows, -5), or_(True, True))), if_then_else(le(if_then_else(False, -2, 1), if_then_else(True, -3, ones_diff_cols)), if_then_else(or_(True, True), if_then_else(False, compare_blocks_cols, ones_diff_cols), if_then_else(True, 4, compare_blocks_rows)), if_then_else(le(zeros_diff_cols, -3), if_then_else(False, 1, 4), if_then_else(False, -1, 1))), if_then_else(and_(or_(False, True), or_(False, True)), if_then_else(and_(le(0, 3), and_(False, True)), if_then_else(False, 0, 4), if_then_else(True, 1, -3)), if_then_else(le(3, ones_diff_rows), if_then_else(False, 2, compare_blocks_cols), if_then_else(False, -5, -2)))), if_then_else(le(if_then_else(and_(True, False), if_then_else(True, -3, 2), if_then_else(False, ones_diff_cols, -4)), if_then_else(le(-2, 0), if_then_else(True, 1, -4), if_then_else(False, -2, -1))), if_then_else(and_(or_(True, False), and_(False, False)), if_then_else(ge(-1, 1), if_then_else(False, ones_diff_cols, 1), if_then_else(False, zeros_diff_rows, 4)), if_then_else(and_(False, True), if_then_else(False, -1, -1), if_then_else(False, -4, 4))), if_then_else(ge(if_then_else(True, ones_diff_cols, ones_diff_rows), if_then_else(True, 1, -4)), if_then_else(and_(True, False), if_then_else(True, 0, -4), if_then_else(True, -3, 1)), if_then_else(or_(False, False), if_then_else(True, ones_diff_cols, -1), if_then_else(True, -1, zeros_diff_cols))))), if_then_else(False, 4, ones_diff_rows)), if_then_else(and_(True, False), if_then_else(False, 2, -4), if_then_else(False, 4, -2))), if_then_else(or_(le(-4, ones_diff_rows), ge(0, -5)), if_then_else(or_(True, False), if_then_else(True, 0, -4), if_then_else(True, ones_diff_rows, -4)), if_then_else(le(compare_blocks_cols, -1), if_then_else(False, ones_diff_rows, zeros_diff_rows), if_then_else(False, ones_diff_rows, -2))))
or_(ge(if_then_else(le(if_then_else(True, -1, ones_diff_rows), if_then_else(False, 1, compare_blocks_cols)), if_then_else(le(-2, -1), if_then_else(False, compare_blocks_cols, -1), if_then_else(True, -1, compare_blocks_rows)), if_then_else(or_(True, False), if_then_else(True, -3, zeros_diff_rows), if_then_else(False, -1, -3))), if_then_else(ge(if_then_else(False, -1, 2), if_then_else(False, 2, 3)), if_then_else(le(1, compare_blocks_cols), if_then_else(False, ones_diff_rows, 0), compare_blocks_rows), if_then_else(ge(ones_diff_rows, compare_blocks_rows), if_then_else(False, zeros_diff_cols, ones_diff_rows), if_then_else(True, 1, 4)))), or_(and_(False, False), ge(3, -4)))
VAL TREES:
mul(add(add(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows))), add(add(add(zeros_diff_rows, ones_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(ones_diff_cols, zeros_diff_rows)))
add(mul(ones_diff_cols, mul(compare_blocks_rows, zeros_diff_cols)), add(mul(mul(mul(ones_diff_cols, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)), ones_diff_cols), mul(zeros_diff_rows, add(zeros_diff_cols, ones_diff_rows))))
mul(mul(ones_diff_rows, mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, ones_diff_rows), mul(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)), ones_diff_rows)))
add(mul(compare_blocks_rows, compare_blocks_rows), mul(mul(mul(add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, zeros_diff_rows))), compare_blocks_cols), add(zeros_diff_cols, ones_diff_cols)))
add(mul(mul(add(mul(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, ones_diff_rows)), add(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), mul(add(mul(ones_diff_rows, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows)), compare_blocks_cols)), mul(mul(mul(mul(zeros_diff_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows)), zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_rows)))
mul(add(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), add(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows))), add(zeros_diff_cols, zeros_diff_rows))
COND TREES:
or_(or_(and_(False, False), ge(2, 4)), ge(if_then_else(False, -1, -5), if_then_else(False, 1, -4)))
or_(ge(if_then_else(ge(2, 4), if_then_else(False, 1, ones_diff_cols), if_then_else(True, compare_blocks_rows, -3)), zeros_diff_rows), or_(ge(if_then_else(True, compare_blocks_cols, ones_diff_rows), if_then_else(False, ones_diff_rows, compare_blocks_cols)), and_(ge(0, ones_diff_rows), and_(True, True))))
or_(ge(if_then_else(False, if_then_else(True, if_then_else(False, 0, -5), if_then_else(False, 4, compare_blocks_cols)), 3), -5), and_(and_(True, le(if_then_else(False, ones_diff_cols, compare_blocks_cols), if_then_else(True, -4, 3))), le(zeros_diff_cols, if_then_else(le(0, -3), -5, compare_blocks_rows))))
le(if_then_else(ge(-4, -3), if_then_else(or_(True, and_(False, True)), -4, 4), if_then_else(False, -4, compare_blocks_rows)), if_then_else(and_(True, False), if_then_else(False, if_then_else(False, -1, if_then_else(False, compare_blocks_cols, ones_diff_rows)), -5), if_then_else(True, zeros_diff_rows, compare_blocks_cols)))
le(if_then_else(le(if_then_else(or_(False, False), if_then_else(True, -1, -1), if_then_else(True, zeros_diff_cols, -3)), if_then_else(le(ones_diff_rows, compare_blocks_cols), if_then_else(False, 1, zeros_diff_rows), if_then_else(True, zeros_diff_rows, -2))), if_then_else(or_(le(0, compare_blocks_rows), or_(False, False)), if_then_else(and_(True, False), if_then_else(True, -4, compare_blocks_rows), if_then_else(False, -3, 2)), if_then_else(le(ones_diff_rows, -3), if_then_else(True, zeros_diff_rows, zeros_diff_rows), if_then_else(False, 2, 0))), if_then_else(and_(and_(True, True), or_(True, False)), if_then_else(or_(False, False), if_then_else(False, ones_diff_cols, ones_diff_cols), if_then_else(False, 4, -2)), if_then_else(ge(-5, zeros_diff_cols), if_then_else(True, compare_blocks_cols, 3), if_then_else(True, ones_diff_rows, -4)))), if_then_else(ge(if_then_else(and_(True, False), if_then_else(False, -5, -3), if_then_else(True, 1, -5)), if_then_else(and_(True, True), if_then_else(False, 3, 2), if_then_else(False, 0, -3))), if_then_else(le(if_then_else(True, -5, 3), if_then_else(False, compare_blocks_rows, compare_blocks_cols)), if_then_else(le(-3, compare_blocks_cols), if_then_else(le(if_then_else(True, -1, ones_diff_rows), if_then_else(False, 1, compare_blocks_cols)), if_then_else(le(-2, -1), if_then_else(False, compare_blocks_cols, -1), if_then_else(True, -1, compare_blocks_rows)), if_then_else(or_(True, False), if_then_else(True, -3, zeros_diff_rows), if_then_else(False, -1, -3))), if_then_else(True, compare_blocks_rows, ones_diff_rows)), if_then_else(or_(False, True), if_then_else(True, compare_blocks_rows, compare_blocks_cols), if_then_else(False, -1, 1))), if_then_else(or_(le(zeros_diff_rows, -1), and_(False, True)), if_then_else(ge(ones_diff_cols, 3), if_then_else(False, 3, 1), if_then_else(False, zeros_diff_rows, zeros_diff_rows)), if_then_else(or_(True, False), if_then_else(False, -5, 4), if_then_else(True, compare_blocks_cols, ones_diff_cols)))))
VAL TREES:
mul(add(add(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows))), add(mul(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(ones_diff_rows, ones_diff_rows), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, zeros_diff_rows)))))
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), add(add(compare_blocks_rows, ones_diff_rows), ones_diff_cols))
mul(add(mul(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(add(mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols))), ones_diff_rows), add(compare_blocks_cols, zeros_diff_cols)))
mul(add(mul(mul(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows)), mul(compare_blocks_rows, add(ones_diff_rows, ones_diff_cols))), mul(add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, zeros_diff_rows)))), compare_blocks_rows)
add(add(zeros_diff_rows, mul(compare_blocks_cols, compare_blocks_rows)), add(mul(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_cols, mul(ones_diff_rows, compare_blocks_cols))), mul(add(zeros_diff_cols, compare_blocks_rows), add(ones_diff_cols, add(zeros_diff_rows, ones_diff_cols))))
COND TREES:
or_(or_(and_(False, False), ge(2, 4)), ge(if_then_else(False, -1, -5), if_then_else(False, 1, -4)))
or_(ge(if_then_else(ge(2, 4), if_then_else(False, 1, ones_diff_cols), if_then_else(True, compare_blocks_rows, -3)), zeros_diff_rows), or_(ge(if_then_else(True, compare_blocks_cols, ones_diff_rows), if_then_else(False, ones_diff_rows, compare_blocks_cols)), and_(ge(0, ones_diff_rows), and_(True, True))))
or_(ge(if_then_else(False, if_then_else(True, if_then_else(False, 0, -5), if_then_else(False, 4, compare_blocks_cols)), 3), -5), and_(and_(True, le(if_then_else(False, ones_diff_cols, compare_blocks_cols), if_then_else(True, -4, 3))), le(zeros_diff_cols, if_then_else(le(0, -3), -5, compare_blocks_rows))))
le(if_then_else(ge(-4, -3), if_then_else(or_(True, and_(False, True)), -4, 4), if_then_else(False, -4, compare_blocks_rows)), if_then_else(and_(True, False), if_then_else(False, if_then_else(False, -1, if_then_else(False, compare_blocks_cols, ones_diff_rows)), -5), if_then_else(True, zeros_diff_rows, compare_blocks_cols)))
le(if_then_else(le(if_then_else(or_(False, False), if_then_else(True, -1, -1), if_then_else(True, zeros_diff_cols, -3)), if_then_else(le(ones_diff_rows, compare_blocks_cols), if_then_else(False, 1, zeros_diff_rows), if_then_else(True, zeros_diff_rows, -2))), if_then_else(or_(le(0, compare_blocks_rows), or_(False, False)), if_then_else(and_(True, False), if_then_else(True, -4, compare_blocks_rows), if_then_else(False, -3, 2)), if_then_else(le(ones_diff_rows, -3), if_then_else(True, zeros_diff_rows, zeros_diff_rows), if_then_else(False, 2, 0))), if_then_else(and_(and_(True, True), or_(True, False)), if_then_else(or_(False, False), if_then_else(False, ones_diff_cols, ones_diff_cols), if_then_else(False, 4, -2)), if_then_else(ge(-5, zeros_diff_cols), if_then_else(True, compare_blocks_cols, 3), if_then_else(True, ones_diff_rows, -4)))), if_then_else(ge(if_then_else(and_(True, False), if_then_else(False, -5, -3), if_then_else(True, 1, -5)), if_then_else(and_(True, True), if_then_else(False, 3, 2), if_then_else(False, 0, -3))), if_then_else(le(if_then_else(True, -5, 3), if_then_else(False, compare_blocks_rows, compare_blocks_cols)), if_then_else(le(-3, compare_blocks_cols), if_then_else(le(if_then_else(True, -1, ones_diff_rows), if_then_else(False, 1, compare_blocks_cols)), if_then_else(le(-2, -1), if_then_else(False, compare_blocks_cols, -1), if_then_else(True, -1, compare_blocks_rows)), if_then_else(or_(True, False), if_then_else(True, -3, zeros_diff_rows), if_then_else(False, -1, -3))), if_then_else(True, compare_blocks_rows, ones_diff_rows)), if_then_else(or_(False, True), if_then_else(True, compare_blocks_rows, compare_blocks_cols), if_then_else(False, -1, 1))), if_then_else(or_(le(zeros_diff_rows, -1), and_(False, True)), if_then_else(ge(ones_diff_cols, 3), if_then_else(False, 3, 1), if_then_else(False, zeros_diff_rows, zeros_diff_rows)), if_then_else(or_(True, False), if_then_else(False, -5, 4), if_then_else(True, compare_blocks_cols, ones_diff_cols)))))
VAL TREES:
mul(add(add(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows))), add(mul(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(ones_diff_rows, ones_diff_rows), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, zeros_diff_rows)))))
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), add(add(compare_blocks_rows, ones_diff_rows), ones_diff_cols))
mul(add(mul(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(add(mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols))), ones_diff_rows), add(compare_blocks_cols, zeros_diff_cols)))
mul(add(mul(mul(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows)), mul(compare_blocks_rows, add(ones_diff_rows, ones_diff_cols))), mul(add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, zeros_diff_rows)))), compare_blocks_rows)
add(add(zeros_diff_rows, mul(compare_blocks_cols, compare_blocks_rows)), add(mul(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_cols, mul(ones_diff_rows, compare_blocks_cols))), mul(add(zeros_diff_cols, compare_blocks_rows), add(ones_diff_cols, add(zeros_diff_rows, ones_diff_cols))))
COND TREES:
le(if_then_else(and_(or_(True, False), False), if_then_else(False, ones_diff_rows, 0), if_then_else(True, zeros_diff_rows, zeros_diff_cols)), if_then_else(or_(le(3, compare_blocks_rows), True), if_then_else(and_(False, True), 2, 0), if_then_else(False, if_then_else(True, -2, 3), 3)))
or_(le(if_then_else(True, zeros_diff_cols, -4), if_then_else(False, ones_diff_cols, zeros_diff_rows)), ge(if_then_else(True, -2, compare_blocks_rows), if_then_else(and_(False, True), if_then_else(False, if_then_else(False, -5, ones_diff_rows), -3), -4)))
or_(and_(le(compare_blocks_rows, ones_diff_rows), or_(True, True)), and_(True, and_(False, False)))
le(if_then_else(le(if_then_else(False, if_then_else(False, -2, 0), 4), if_then_else(or_(False, True), compare_blocks_rows, ones_diff_cols)), if_then_else(True, 1, ones_diff_cols), if_then_else(ge(-1, ones_diff_rows), ones_diff_cols, if_then_else(False, zeros_diff_cols, 1))), if_then_else(le(if_then_else(False, ones_diff_rows, -1), compare_blocks_rows), if_then_else(False, if_then_else(True, -5, -4), 3), if_then_else(False, 1, 1)))
or_(le(if_then_else(or_(and_(False, False), ge(3, -4)), if_then_else(or_(False, False), if_then_else(False, -1, -2), if_then_else(False, 2, 3)), if_then_else(ge(ones_diff_rows, -2), if_then_else(False, 2, -5), if_then_else(True, -5, ones_diff_cols))), if_then_else(ge(if_then_else(True, -2, 4), if_then_else(True, ones_diff_rows, compare_blocks_rows)), if_then_else(ge(-1, ones_diff_cols), if_then_else(False, compare_blocks_cols, 3), if_then_else(True, -4, compare_blocks_cols)), if_then_else(ge(-4, -1), if_then_else(True, ones_diff_rows, -4), if_then_else(True, 2, 2)))), ge(if_then_else(and_(le(0, compare_blocks_rows), or_(False, True)), if_then_else(ge(-5, compare_blocks_cols), if_then_else(False, 1, 2), if_then_else(True, 3, 3)), if_then_else(ge(-2, ones_diff_cols), if_then_else(True, ones_diff_rows, -4), if_then_else(True, 1, compare_blocks_cols))), if_then_else(le(if_then_else(False, compare_blocks_rows, -4), if_then_else(True, ones_diff_rows, 3)), if_then_else(ge(4, -4), if_then_else(False, -3, 0), if_then_else(False, 2, -2)), if_then_else(le(zeros_diff_cols, -1), if_then_else(True, 4, 4), if_then_else(True, -5, 4)))))
VAL TREES:
mul(add(add(compare_blocks_cols, compare_blocks_rows), add(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, add(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, zeros_diff_rows))))), add(add(compare_blocks_cols, mul(compare_blocks_rows, compare_blocks_rows)), compare_blocks_cols))
add(add(add(zeros_diff_rows, compare_blocks_rows), ones_diff_cols), add(add(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))
mul(add(mul(add(mul(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_cols))), add(mul(add(ones_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, ones_diff_rows), add(compare_blocks_rows, zeros_diff_cols)))), add(add(mul(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), add(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows))), mul(mul(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)))))
add(ones_diff_cols, add(add(add(add(mul(mul(mul(ones_diff_cols, ones_diff_cols), compare_blocks_cols), add(zeros_diff_cols, ones_diff_cols)), ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols)), zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)))
add(mul(mul(add(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), add(mul(mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows))), ones_diff_rows), mul(mul(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, compare_blocks_cols)), add(add(ones_diff_rows, ones_diff_rows), add(mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows))))), ones_diff_rows))
add(mul(mul(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols))), mul(add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, ones_diff_cols)))), add(mul(mul(zeros_diff_cols, mul(zeros_diff_rows, compare_blocks_rows)), add(add(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_rows, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))))
COND TREES:
ge(if_then_else(or_(le(if_then_else(False, ones_diff_rows, -4), -1), and_(False, True)), if_then_else(False, 3, -4), if_then_else(and_(False, or_(False, True)), -1, if_then_else(False, -1, if_then_else(False, 2, zeros_diff_rows)))), if_then_else(le(0, if_then_else(ge(-1, -1), 0, compare_blocks_rows)), if_then_else(True, compare_blocks_cols, if_then_else(False, if_then_else(or_(le(if_then_else(True, -1, 0), if_then_else(False, 3, -5)), le(if_then_else(False, 4, zeros_diff_rows), if_then_else(False, compare_blocks_rows, -2))), if_then_else(False, ones_diff_rows, -4), -5), if_then_else(False, 3, -2))), if_then_else(True, compare_blocks_rows, -3)))
and_(le(if_then_else(True, if_then_else(ge(if_then_else(False, -4, zeros_diff_cols), if_then_else(True, -5, 1)), if_then_else(or_(False, True), if_then_else(False, -2, -5), if_then_else(True, -5, compare_blocks_cols)), if_then_else(or_(le(zeros_diff_cols, ones_diff_rows), False), if_then_else(False, zeros_diff_cols, -3), if_then_else(ge(-5, if_then_else(True, -2, -3)), 0, -5))), compare_blocks_rows), if_then_else(True, compare_blocks_cols, compare_blocks_rows)), True)
le(if_then_else(ge(compare_blocks_rows, -5), if_then_else(True, ones_diff_cols, if_then_else(True, -5, if_then_else(False, 0, ones_diff_rows))), if_then_else(ge(compare_blocks_cols, -1), ones_diff_rows, if_then_else(True, if_then_else(and_(and_(True, False), le(-5, 4)), if_then_else(or_(False, True), if_then_else(False, ones_diff_rows, compare_blocks_rows), if_then_else(True, 3, 4)), if_then_else(and_(True, True), if_then_else(True, zeros_diff_rows, 0), if_then_else(False, -5, 1))), zeros_diff_rows))), ones_diff_rows)
le(if_then_else(and_(le(if_then_else(le(if_then_else(True, 4, 3), ones_diff_rows), if_then_else(True, compare_blocks_cols, 4), if_then_else(False, ones_diff_rows, -5)), if_then_else(ge(1, if_then_else(False, ones_diff_cols, compare_blocks_cols)), if_then_else(False, -4, zeros_diff_rows), if_then_else(ge(-3, if_then_else(True, 1, 2)), 3, compare_blocks_cols))), and_(False, True)), if_then_else(le(2, ones_diff_cols), if_then_else(False, ones_diff_rows, ones_diff_rows), if_then_else(False, 4, compare_blocks_cols)), if_then_else(and_(True, False), if_then_else(False, 2, -4), if_then_else(False, 4, -2))), if_then_else(or_(le(-4, ones_diff_rows), ge(0, -5)), if_then_else(or_(True, False), if_then_else(True, 0, -4), if_then_else(True, ones_diff_rows, -4)), if_then_else(le(compare_blocks_cols, -1), if_then_else(False, ones_diff_rows, zeros_diff_rows), if_then_else(False, ones_diff_rows, -2))))
or_(ge(if_then_else(le(if_then_else(True, -1, ones_diff_rows), if_then_else(False, 1, compare_blocks_cols)), if_then_else(le(-2, -1), if_then_else(False, compare_blocks_cols, -1), if_then_else(True, -1, compare_blocks_rows)), if_then_else(or_(True, False), if_then_else(True, -3, zeros_diff_rows), if_then_else(False, -1, -3))), if_then_else(ge(if_then_else(False, -1, 2), if_then_else(False, 2, 3)), if_then_else(le(1, compare_blocks_cols), if_then_else(False, ones_diff_rows, 0), if_then_else(False, -1, -3)), if_then_else(ge(ones_diff_rows, compare_blocks_rows), if_then_else(False, zeros_diff_cols, ones_diff_rows), if_then_else(True, 1, 4)))), le(if_then_else(and_(le(ones_diff_rows, ones_diff_rows), True), -2, if_then_else(or_(True, True), if_then_else(True, ones_diff_cols, 1), if_then_else(True, 2, compare_blocks_cols))), if_then_else(le(if_then_else(True, compare_blocks_cols, 3), if_then_else(False, ones_diff_rows, -4)), if_then_else(le(if_then_else(or_(True, True), if_then_else(True, 4, compare_blocks_rows), if_then_else(True, 0, compare_blocks_cols)), if_then_else(le(3, 1), if_then_else(True, -5, 2), if_then_else(True, zeros_diff_rows, ones_diff_rows))), if_then_else(or_(or_(False, True), le(4, -2)), if_then_else(ge(4, ones_diff_cols), if_then_else(False, -5, ones_diff_cols), if_then_else(False, 3, ones_diff_cols)), if_then_else(and_(False, True), if_then_else(False, zeros_diff_cols, -4), if_then_else(True, 1, ones_diff_rows))), if_then_else(ge(if_then_else(True, -1, zeros_diff_rows), if_then_else(False, ones_diff_cols, 1)), if_then_else(ge(zeros_diff_rows, 1), if_then_else(False, -3, ones_diff_rows), if_then_else(False, -5, 2)), if_then_else(or_(True, False), if_then_else(True, -1, 2), if_then_else(False, 0, 3)))), if_then_else(or_(False, True), if_then_else(False, -2, -3), if_then_else(False, 0, zeros_diff_rows)))))
VAL TREES:
mul(mul(add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, zeros_diff_rows)), add(mul(compare_blocks_cols, ones_diff_rows), add(mul(compare_blocks_rows, ones_diff_rows), ones_diff_rows))), add(add(add(zeros_diff_rows, ones_diff_rows), compare_blocks_cols), add(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows))))
add(mul(add(zeros_diff_cols, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), add(mul(mul(mul(add(add(zeros_diff_rows, ones_diff_cols), compare_blocks_rows), zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)), add(zeros_diff_cols, ones_diff_rows)), mul(zeros_diff_rows, ones_diff_cols)))
mul(mul(add(add(mul(add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, zeros_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_cols))), add(mul(add(ones_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)))), ones_diff_cols), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, compare_blocks_cols), mul(add(compare_blocks_rows, ones_diff_cols), ones_diff_cols)))
add(add(add(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)))
add(mul(mul(add(mul(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, ones_diff_rows)), add(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows)), add(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(mul(add(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows))), add(compare_blocks_rows, zeros_diff_rows)))
mul(add(add(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_cols, ones_diff_rows)), add(ones_diff_rows, add(zeros_diff_rows, compare_blocks_rows))), add(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), add(add(zeros_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows))))
COND TREES:
ge(if_then_else(or_(le(0, -1), and_(False, True)), if_then_else(False, 3, -4), if_then_else(and_(False, or_(False, True)), -1, if_then_else(False, -1, if_then_else(False, 2, zeros_diff_rows)))), if_then_else(le(0, if_then_else(ge(-1, -1), 0, compare_blocks_rows)), if_then_else(True, compare_blocks_cols, if_then_else(False, if_then_else(True, 0, -5), if_then_else(False, 3, -2))), if_then_else(True, -5, -3)))
and_(le(if_then_else(True, zeros_diff_rows, compare_blocks_rows), if_then_else(True, compare_blocks_cols, compare_blocks_rows)), or_(or_(True, False), or_(False, False)))
le(if_then_else(ge(compare_blocks_rows, -5), if_then_else(True, ones_diff_cols, if_then_else(True, -5, if_then_else(False, 0, ones_diff_rows))), if_then_else(ge(compare_blocks_cols, -1), ones_diff_rows, if_then_else(True, 1, zeros_diff_rows))), if_then_else(le(-1, if_then_else(or_(False, False), if_then_else(True, 1, -1), -3)), if_then_else(or_(True, False), -4, zeros_diff_rows), if_then_else(False, ones_diff_rows, -2)))
le(if_then_else(and_(le(0, 3), and_(False, True)), if_then_else(le(2, ones_diff_cols), if_then_else(False, ones_diff_rows, ones_diff_rows), if_then_else(False, 4, ones_diff_rows)), if_then_else(and_(True, False), if_then_else(False, 2, -4), if_then_else(False, 4, -2))), if_then_else(or_(le(-4, ones_diff_rows), ge(0, -5)), if_then_else(or_(True, False), if_then_else(True, 0, -4), if_then_else(True, ones_diff_rows, -4)), if_then_else(le(ones_diff_rows, -1), if_then_else(False, ones_diff_rows, zeros_diff_rows), if_then_else(False, ones_diff_rows, -2))))
or_(ge(if_then_else(le(if_then_else(True, -1, ones_diff_rows), if_then_else(False, 1, compare_blocks_cols)), if_then_else(le(-2, -1), if_then_else(False, compare_blocks_cols, -1), if_then_else(True, -1, compare_blocks_rows)), if_then_else(or_(True, False), if_then_else(True, -3, zeros_diff_rows), if_then_else(False, -1, -3))), if_then_else(ge(if_then_else(False, -1, 2), if_then_else(False, 2, 3)), if_then_else(le(1, compare_blocks_cols), if_then_else(False, ones_diff_rows, 0), if_then_else(False, -1, -3)), if_then_else(ge(ones_diff_rows, compare_blocks_rows), if_then_else(False, zeros_diff_cols, ones_diff_rows), if_then_else(True, 1, 4)))), le(if_then_else(and_(le(ones_diff_rows, ones_diff_rows), le(zeros_diff_cols, 2)), if_then_else(or_(le(zeros_diff_cols, 2), True), if_then_else(False, 0, 4), if_then_else(True, 0, -1)), if_then_else(or_(True, True), if_then_else(True, ones_diff_cols, 1), if_then_else(True, 2, compare_blocks_cols))), if_then_else(le(if_then_else(True, compare_blocks_cols, 3), if_then_else(False, ones_diff_rows, -4)), if_then_else(le(compare_blocks_cols, zeros_diff_cols), if_then_else(True, 3, 1), if_then_else(False, -5, 0)), if_then_else(or_(False, True), if_then_else(False, -2, -3), if_then_else(False, 0, zeros_diff_rows)))))
VAL TREES:
mul(mul(add(mul(add(compare_blocks_cols, zeros_diff_rows), zeros_diff_rows), add(ones_diff_cols, zeros_diff_rows)), add(mul(compare_blocks_cols, ones_diff_rows), add(compare_blocks_cols, ones_diff_rows))), add(add(add(zeros_diff_rows, ones_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, zeros_diff_rows))))
add(mul(add(zeros_diff_cols, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), add(mul(mul(mul(ones_diff_cols, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)), ones_diff_cols), mul(zeros_diff_rows, add(mul(mul(mul(ones_diff_cols, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)), ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))))
mul(mul(add(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)))
add(ones_diff_rows, mul(mul(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, ones_diff_cols)))
add(mul(mul(add(mul(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, ones_diff_rows)), add(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), mul(add(mul(ones_diff_rows, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows)), add(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(mul(mul(mul(zeros_diff_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows))), add(mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_cols, add(mul(ones_diff_rows, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows))), add(zeros_diff_rows, zeros_diff_rows)))))
mul(add(add(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_cols, add(zeros_diff_cols, ones_diff_rows))), add(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows))), add(add(mul(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_rows)), add(add(zeros_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows))))
COND TREES:
le(if_then_else(and_(or_(True, False), False), if_then_else(False, ones_diff_rows, 0), if_then_else(True, zeros_diff_rows, zeros_diff_cols)), if_then_else(or_(le(3, compare_blocks_rows), True), if_then_else(and_(False, True), 2, 0), if_then_else(False, if_then_else(True, -2, 3), 3)))
or_(le(if_then_else(True, zeros_diff_cols, -4), if_then_else(False, ones_diff_cols, zeros_diff_rows)), ge(if_then_else(True, -2, compare_blocks_rows), if_then_else(and_(True, True), if_then_else(False, if_then_else(False, -5, ones_diff_rows), -3), -4)))
or_(and_(le(compare_blocks_rows, ones_diff_rows), or_(True, True)), and_(or_(False, True), and_(False, False)))
le(if_then_else(le(if_then_else(False, if_then_else(False, -2, 0), 4), if_then_else(or_(False, True), compare_blocks_rows, ones_diff_cols)), if_then_else(True, 1, ones_diff_cols), if_then_else(ge(-1, ones_diff_rows), ones_diff_cols, if_then_else(False, zeros_diff_cols, 1))), if_then_else(le(if_then_else(False, 4, -1), compare_blocks_rows), if_then_else(False, if_then_else(True, -5, -4), 3), if_then_else(False, 1, 1)))
or_(le(if_then_else(or_(and_(False, False), ge(3, -4)), if_then_else(or_(False, False), if_then_else(False, -1, -2), if_then_else(False, 2, 3)), if_then_else(ge(ones_diff_rows, -2), if_then_else(False, 2, -5), if_then_else(True, -5, ones_diff_cols))), if_then_else(ge(if_then_else(True, -2, 4), if_then_else(True, ones_diff_rows, compare_blocks_rows)), if_then_else(ge(-1, ones_diff_cols), if_then_else(False, compare_blocks_cols, 3), if_then_else(True, -4, compare_blocks_cols)), if_then_else(ge(-4, -1), if_then_else(True, ones_diff_rows, -4), if_then_else(True, 2, 2)))), ge(if_then_else(and_(le(0, compare_blocks_rows), or_(False, True)), if_then_else(ge(-5, compare_blocks_cols), if_then_else(False, 1, 2), if_then_else(True, 3, 3)), if_then_else(ge(-2, ones_diff_cols), if_then_else(True, ones_diff_rows, -4), if_then_else(True, 1, compare_blocks_cols))), if_then_else(le(if_then_else(False, compare_blocks_rows, -4), if_then_else(True, ones_diff_rows, 3)), if_then_else(ge(4, -4), if_then_else(False, -3, 0), if_then_else(False, 2, -2)), if_then_else(le(zeros_diff_cols, -1), if_then_else(True, 4, 4), if_then_else(True, -5, compare_blocks_cols)))))
VAL TREES:
mul(add(add(compare_blocks_cols, compare_blocks_rows), add(mul(add(compare_blocks_cols, compare_blocks_cols), zeros_diff_rows), add(ones_diff_cols, mul(compare_blocks_rows, compare_blocks_rows)))), add(add(compare_blocks_cols, mul(compare_blocks_rows, compare_blocks_rows)), mul(compare_blocks_rows, ones_diff_rows)))
add(add(add(ones_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows)), add(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_rows)))
mul(add(mul(add(mul(add(compare_blocks_rows, ones_diff_cols), ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, mul(compare_blocks_cols, zeros_diff_rows)))), add(mul(add(ones_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)))), add(add(mul(mul(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)), compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), add(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows))), mul(mul(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)))))
add(ones_diff_cols, add(add(mul(mul(mul(ones_diff_rows, compare_blocks_cols), zeros_diff_cols), compare_blocks_rows), zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)))
add(mul(mul(add(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), add(mul(mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows))), mul(add(mul(ones_diff_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)))), mul(mul(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, compare_blocks_cols)), ones_diff_rows), ones_diff_rows))
add(mul(mul(mul(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_cols, compare_blocks_cols)), add(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols))), mul(add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, ones_diff_cols)))), add(mul(mul(add(ones_diff_cols, add(add(zeros_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows))), mul(zeros_diff_rows, compare_blocks_rows)), add(add(compare_blocks_rows, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_rows, compare_blocks_rows)), ones_diff_cols)))
COND TREES:
le(if_then_else(and_(or_(ge(if_then_else(or_(or_(or_(or_(False, True), ge(compare_blocks_rows, zeros_diff_cols)), le(if_then_else(True, compare_blocks_rows, zeros_diff_cols), if_then_else(True, ones_diff_cols, zeros_diff_rows))), le(if_then_else(ge(ones_diff_cols, -1), if_then_else(False, zeros_diff_cols, -4), if_then_else(True, compare_blocks_rows, 2)), if_then_else(ge(zeros_diff_cols, -5), if_then_else(True, 2, 4), if_then_else(True, compare_blocks_rows, 4)))), if_then_else(ge(if_then_else(ge(compare_blocks_rows, 4), if_then_else(False, 4, zeros_diff_cols), if_then_else(True, -1, -2)), if_then_else(or_(True, True), if_then_else(False, -2, 3), if_then_else(False, 3, 4))), if_then_else(and_(and_(True, True), le(-4, zeros_diff_cols)), if_then_else(or_(True, False), if_then_else(False, -3, -1), if_then_else(True, -5, 4)), if_then_else(and_(True, True), if_then_else(False, compare_blocks_rows, zeros_diff_rows), if_then_else(True, compare_blocks_rows, -4))), if_then_else(ge(if_then_else(True, -1, -5), if_then_else(True, zeros_diff_rows, zeros_diff_rows)), if_then_else(and_(True, True), if_then_else(True, -2, ones_diff_rows), if_then_else(False, zeros_diff_cols, -3)), if_then_else(and_(False, True), if_then_else(True, -4, 2), if_then_else(True, 1, ones_diff_cols)))), if_then_else(and_(and_(and_(True, False), and_(False, False)), ge(if_then_else(False, ones_diff_cols, 2), if_then_else(True, -1, -3))), if_then_else(le(if_then_else(False, -5, -2), if_then_else(True, -5, 4)), if_then_else(and_(True, True), if_then_else(True, 3, -1), if_then_else(False, -1, 2)), if_then_else(le(zeros_diff_cols, 0), if_then_else(False, ones_diff_rows, ones_diff_rows), if_then_else(False, compare_blocks_rows, zeros_diff_cols))), if_then_else(le(if_then_else(False, 2, 3), if_then_else(False, 3, zeros_diff_rows)), if_then_else(le(compare_blocks_cols, ones_diff_rows), if_then_else(False, -4, -3), if_then_else(True, compare_blocks_rows, zeros_diff_cols)), if_then_else(le(-1, 1), if_then_else(True, -1, 4), if_then_else(False, -4, -2))))), 4), False), False), if_then_else(False, ones_diff_rows, 0), if_then_else(True, zeros_diff_rows, zeros_diff_cols)), if_then_else(or_(le(3, compare_blocks_rows), True), if_then_else(and_(False, True), 2, 0), if_then_else(False, if_then_else(True, -2, 3), 3)))
or_(le(if_then_else(True, zeros_diff_cols, -4), if_then_else(ge(if_then_else(True, zeros_diff_cols, 3), if_then_else(False, ones_diff_rows, compare_blocks_rows)), if_then_else(or_(True, False), if_then_else(False, -4, 0), if_then_else(True, -2, 3)), if_then_else(ge(compare_blocks_rows, ones_diff_rows), if_then_else(True, ones_diff_rows, -5), if_then_else(False, -5, 3)))), ge(if_then_else(True, -2, compare_blocks_rows), if_then_else(and_(True, True), if_then_else(False, if_then_else(False, -5, ones_diff_rows), -3), -4)))
or_(and_(le(-5, ones_diff_rows), or_(True, True)), and_(or_(and_(or_(False, False), le(compare_blocks_cols, if_then_else(False, zeros_diff_cols, if_then_else(True, 0, ones_diff_cols)))), or_(ge(compare_blocks_rows, if_then_else(le(0, -5), ones_diff_cols, compare_blocks_rows)), ge(ones_diff_cols, 4))), and_(False, False)))
le(if_then_else(le(if_then_else(False, if_then_else(False, -2, 0), 4), if_then_else(True, compare_blocks_rows, ones_diff_cols)), if_then_else(True, 1, ones_diff_cols), if_then_else(ge(-1, if_then_else(le(if_then_else(le(4, -2), if_then_else(False, zeros_diff_rows, ones_diff_cols), if_then_else(False, -2, -3)), if_then_else(and_(True, False), if_then_else(False, 3, -1), if_then_else(True, -4, ones_diff_cols))), if_then_else(and_(or_(True, True), ge(0, 1)), if_then_else(or_(True, False), if_then_else(True, 2, 0), if_then_else(False, compare_blocks_rows, compare_blocks_cols)), if_then_else(and_(True, False), if_then_else(True, -1, 0), if_then_else(True, ones_diff_cols, -2))), if_then_else(and_(le(ones_diff_rows, 3), le(compare_blocks_cols, -1)), if_then_else(ge(zeros_diff_cols, zeros_diff_rows), if_then_else(True, zeros_diff_cols, -3), if_then_else(False, -3, 4)), if_then_else(le(-3, -4), if_then_else(True, -2, compare_blocks_rows), if_then_else(True, compare_blocks_cols, -4))))), ones_diff_cols, if_then_else(False, zeros_diff_cols, 1))), if_then_else(le(if_then_else(False, 4, -1), compare_blocks_rows), if_then_else(False, if_then_else(True, -5, -4), 3), if_then_else(False, 1, 1)))
or_(le(if_then_else(or_(and_(False, False), ge(3, -4)), if_then_else(or_(False, False), if_then_else(False, -1, -2), if_then_else(False, 0, 3)), if_then_else(ge(ones_diff_rows, -2), if_then_else(False, 2, -5), if_then_else(True, -5, ones_diff_cols))), if_then_else(ge(if_then_else(True, -2, 4), if_then_else(True, ones_diff_rows, compare_blocks_rows)), if_then_else(ge(-1, ones_diff_cols), if_then_else(False, compare_blocks_cols, 3), if_then_else(True, -4, compare_blocks_cols)), if_then_else(ge(-4, -1), if_then_else(True, ones_diff_rows, -4), if_then_else(True, 2, 2)))), ge(if_then_else(and_(le(0, compare_blocks_rows), or_(or_(and_(and_(False, True), or_(True, False)), ge(if_then_else(True, 1, 1), if_then_else(False, -2, 0))), True)), if_then_else(ge(-5, compare_blocks_cols), if_then_else(False, 1, 2), if_then_else(True, 3, 3)), if_then_else(ge(-2, ones_diff_cols), if_then_else(True, ones_diff_rows, -4), if_then_else(True, 1, compare_blocks_cols))), if_then_else(le(if_then_else(False, compare_blocks_rows, -4), if_then_else(True, ones_diff_rows, 3)), if_then_else(ge(4, -4), if_then_else(False, -3, 0), if_then_else(False, 2, -2)), if_then_else(le(zeros_diff_cols, -1), if_then_else(True, 4, 4), if_then_else(True, -5, compare_blocks_cols)))))
VAL TREES:
mul(add(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, zeros_diff_rows)), add(add(add(compare_blocks_cols, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)), add(add(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows))))
add(compare_blocks_rows, add(add(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_cols)))
mul(add(mul(add(mul(mul(zeros_diff_rows, compare_blocks_rows), ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_cols))), add(mul(add(ones_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)))), mul(zeros_diff_cols, add(compare_blocks_rows, ones_diff_cols)))
add(add(compare_blocks_rows, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_cols))
add(mul(mul(add(add(ones_diff_cols, ones_diff_rows), add(compare_blocks_rows, zeros_diff_cols)), add(mul(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows))), mul(add(mul(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)))), mul(mul(zeros_diff_cols, add(add(ones_diff_rows, mul(mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), compare_blocks_cols)), mul(ones_diff_cols, ones_diff_rows))), ones_diff_rows))
add(mul(mul(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols))), mul(add(mul(compare_blocks_cols, mul(zeros_diff_rows, compare_blocks_rows)), mul(zeros_diff_cols, zeros_diff_cols)), zeros_diff_cols)), add(mul(mul(add(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(add(compare_blocks_rows, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_rows, compare_blocks_rows)), mul(mul(add(zeros_diff_rows, compare_blocks_cols), compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_cols)))))
COND TREES:
le(if_then_else(and_(or_(True, False), False), if_then_else(False, ones_diff_rows, 0), if_then_else(True, zeros_diff_rows, zeros_diff_cols)), if_then_else(or_(le(3, compare_blocks_rows), True), if_then_else(and_(False, True), 2, 0), if_then_else(False, if_then_else(True, -2, if_then_else(False, 3, -2)), 3)))
or_(le(if_then_else(True, zeros_diff_cols, -4), if_then_else(False, ones_diff_cols, zeros_diff_rows)), ge(if_then_else(True, -2, compare_blocks_rows), if_then_else(and_(or_(False, False), True), if_then_else(False, if_then_else(False, -5, ones_diff_rows), zeros_diff_rows), -4)))
or_(and_(le(compare_blocks_rows, ones_diff_rows), or_(True, True)), and_(or_(False, True), le(-3, 3)))
le(if_then_else(le(if_then_else(False, if_then_else(False, -2, 0), 4), if_then_else(or_(False, True), compare_blocks_rows, ones_diff_cols)), if_then_else(True, 1, ones_diff_cols), if_then_else(ge(-1, ones_diff_rows), ones_diff_cols, if_then_else(False, zeros_diff_cols, compare_blocks_rows))), if_then_else(False, if_then_else(False, if_then_else(True, -5, -4), 3), if_then_else(False, 1, 1)))
or_(le(if_then_else(or_(and_(False, False), ge(3, -4)), if_then_else(or_(False, False), if_then_else(False, -1, -2), if_then_else(False, 2, 3)), if_then_else(ge(ones_diff_rows, -2), if_then_else(False, 2, -5), if_then_else(True, -5, ones_diff_cols))), if_then_else(ge(if_then_else(True, -2, 4), if_then_else(True, ones_diff_rows, compare_blocks_rows)), if_then_else(ge(-1, ones_diff_cols), if_then_else(False, compare_blocks_cols, 3), if_then_else(True, -4, compare_blocks_cols)), if_then_else(ge(-4, -1), if_then_else(True, ones_diff_rows, -4), if_then_else(le(zeros_diff_cols, 2), 2, 2)))), ge(if_then_else(and_(le(0, compare_blocks_rows), or_(False, True)), if_then_else(ge(-5, compare_blocks_cols), if_then_else(False, 1, 2), if_then_else(True, 3, 3)), if_then_else(ge(-2, ones_diff_cols), if_then_else(True, zeros_diff_cols, -4), if_then_else(True, 1, compare_blocks_cols))), if_then_else(le(if_then_else(False, compare_blocks_rows, -4), if_then_else(True, ones_diff_rows, 3)), if_then_else(ge(4, -4), if_then_else(False, -3, 0), if_then_else(False, 2, -2)), if_then_else(le(zeros_diff_cols, -1), if_then_else(True, 4, 4), if_then_else(True, -5, compare_blocks_cols)))))
VAL TREES:
mul(add(add(compare_blocks_cols, compare_blocks_rows), add(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, zeros_diff_rows))), add(add(compare_blocks_cols, mul(compare_blocks_rows, compare_blocks_rows)), mul(compare_blocks_rows, ones_diff_rows)))
add(zeros_diff_cols, add(add(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))
mul(add(mul(add(mul(mul(zeros_diff_cols, zeros_diff_cols), ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_cols))), add(mul(add(ones_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)))), add(add(mul(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), add(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows))), mul(mul(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)))))
add(ones_diff_cols, add(add(add(add(compare_blocks_cols, ones_diff_rows), add(add(mul(compare_blocks_rows, compare_blocks_rows), zeros_diff_rows), zeros_diff_cols)), zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)))
add(mul(mul(add(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), add(ones_diff_rows, mul(zeros_diff_rows, ones_diff_rows))), mul(add(mul(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)))), mul(mul(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, compare_blocks_cols)), add(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_rows, zeros_diff_rows))), ones_diff_rows))
add(mul(mul(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_rows, compare_blocks_rows), mul(mul(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, ones_diff_cols)), ones_diff_cols))), mul(add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, ones_diff_cols)))), add(mul(mul(add(ones_diff_cols, add(add(zeros_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows))), mul(zeros_diff_rows, compare_blocks_rows)), add(add(compare_blocks_rows, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_rows, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))))
COND TREES:
ge(if_then_else(or_(le(0, -1), and_(False, True)), if_then_else(False, 3, -4), if_then_else(and_(False, or_(False, True)), -1, if_then_else(True, -1, if_then_else(False, 2, zeros_diff_rows)))), if_then_else(le(0, if_then_else(ge(-1, -1), 0, compare_blocks_rows)), if_then_else(True, if_then_else(True, zeros_diff_rows, zeros_diff_cols), if_then_else(False, if_then_else(True, 0, -5), if_then_else(False, 3, -2))), if_then_else(True, -5, -3)))
and_(le(if_then_else(True, if_then_else(False, ones_diff_cols, zeros_diff_rows), compare_blocks_rows), if_then_else(True, compare_blocks_cols, if_then_else(False, if_then_else(False, -5, ones_diff_rows), -3))), or_(or_(True, False), or_(False, False)))
le(if_then_else(ge(compare_blocks_rows, -5), if_then_else(True, ones_diff_cols, if_then_else(True, ones_diff_rows, if_then_else(False, 0, ones_diff_rows))), if_then_else(ge(compare_blocks_cols, -1), ones_diff_rows, if_then_else(True, 1, zeros_diff_rows))), if_then_else(le(-1, if_then_else(or_(False, and_(le(compare_blocks_rows, ones_diff_rows), or_(True, True))), if_then_else(True, 1, -1), -3)), if_then_else(or_(True, False), -4, zeros_diff_rows), if_then_else(False, ones_diff_rows, -2)))
le(if_then_else(and_(le(0, 3), and_(False, True)), if_then_else(le(1, ones_diff_cols), if_then_else(False, ones_diff_rows, ones_diff_rows), if_then_else(False, 4, ones_diff_rows)), if_then_else(and_(True, False), if_then_else(False, 2, ones_diff_cols), if_then_else(False, 4, -2))), if_then_else(or_(le(-4, ones_diff_rows), ge(0, -5)), if_then_else(or_(True, False), if_then_else(True, 0, -4), if_then_else(True, ones_diff_rows, -4)), if_then_else(le(ones_diff_rows, -1), if_then_else(False, ones_diff_rows, zeros_diff_rows), if_then_else(False, ones_diff_rows, -2))))
or_(ge(if_then_else(le(if_then_else(True, -1, ones_diff_rows), if_then_else(False, 1, compare_blocks_cols)), if_then_else(le(-2, -1), if_then_else(False, compare_blocks_cols, -1), if_then_else(True, -1, compare_blocks_rows)), if_then_else(or_(True, False), if_then_else(True, -3, zeros_diff_rows), if_then_else(False, -1, -3))), if_then_else(ge(if_then_else(False, -1, 2), if_then_else(False, 2, 3)), if_then_else(le(1, compare_blocks_cols), if_then_else(False, ones_diff_rows, 0), if_then_else(False, -1, -3)), if_then_else(ge(ones_diff_rows, compare_blocks_rows), if_then_else(False, zeros_diff_cols, ones_diff_rows), if_then_else(True, 1, 4)))), le(if_then_else(and_(le(ones_diff_rows, ones_diff_rows), le(zeros_diff_cols, 2)), if_then_else(or_(le(zeros_diff_cols, if_then_else(False, 2, 3)), True), if_then_else(False, 0, 4), if_then_else(True, 0, -1)), if_then_else(or_(True, True), if_then_else(True, ones_diff_cols, 1), if_then_else(True, 2, compare_blocks_cols))), if_then_else(le(if_then_else(True, compare_blocks_cols, 3), if_then_else(False, ones_diff_rows, -4)), if_then_else(le(compare_blocks_cols, zeros_diff_cols), if_then_else(True, 3, 1), if_then_else(False, -5, 0)), if_then_else(or_(False, True), if_then_else(False, -2, -3), if_then_else(False, 0, zeros_diff_rows)))))
VAL TREES:
mul(mul(add(mul(add(compare_blocks_cols, zeros_diff_rows), zeros_diff_rows), add(ones_diff_cols, zeros_diff_rows)), add(mul(compare_blocks_cols, ones_diff_rows), add(compare_blocks_cols, ones_diff_rows))), add(add(add(zeros_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, zeros_diff_rows))))
add(mul(add(zeros_diff_cols, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(ones_diff_cols, zeros_diff_cols))
mul(zeros_diff_rows, add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)))
add(ones_diff_rows, mul(mul(ones_diff_rows, mul(ones_diff_rows, zeros_diff_rows)), zeros_diff_cols))
add(mul(mul(add(mul(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, ones_diff_rows)), add(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), mul(add(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_rows)), add(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(mul(mul(mul(zeros_diff_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows))), add(mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_cols, add(mul(ones_diff_rows, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows))), add(zeros_diff_rows, zeros_diff_rows)))))
mul(add(add(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows))), add(add(mul(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_rows)), add(add(zeros_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows))))
COND TREES:
le(if_then_else(and_(or_(True, False), False), if_then_else(False, ones_diff_rows, 0), compare_blocks_cols), if_then_else(or_(le(3, compare_blocks_rows), True), if_then_else(and_(False, True), 2, 0), if_then_else(False, if_then_else(True, -2, 3), 3)))
or_(le(if_then_else(True, zeros_diff_cols, -4), if_then_else(False, ones_diff_cols, zeros_diff_rows)), ge(if_then_else(True, -2, compare_blocks_rows), if_then_else(and_(False, True), compare_blocks_rows, -4)))
or_(False, and_(True, and_(False, False)))
le(if_then_else(le(if_then_else(False, if_then_else(False, -2, 0), 4), if_then_else(or_(False, True), compare_blocks_rows, ones_diff_cols)), if_then_else(True, 2, ones_diff_cols), if_then_else(ge(-1, ones_diff_rows), ones_diff_cols, if_then_else(False, zeros_diff_cols, 1))), if_then_else(le(if_then_else(False, ones_diff_rows, -1), compare_blocks_rows), if_then_else(False, if_then_else(True, -5, -4), 3), if_then_else(False, 1, 1)))
or_(le(if_then_else(or_(and_(False, False), ge(3, -4)), if_then_else(or_(False, False), if_then_else(False, -1, -2), if_then_else(False, 2, 3)), if_then_else(ge(ones_diff_rows, -2), if_then_else(False, 2, -5), if_then_else(True, -5, ones_diff_cols))), if_then_else(ge(if_then_else(True, -2, 4), if_then_else(True, ones_diff_rows, compare_blocks_rows)), if_then_else(ge(-1, ones_diff_cols), if_then_else(False, compare_blocks_cols, 3), if_then_else(True, -4, compare_blocks_cols)), if_then_else(ge(-4, -1), if_then_else(True, ones_diff_rows, -4), if_then_else(True, 2, 2)))), ge(if_then_else(and_(le(0, compare_blocks_rows), or_(False, True)), if_then_else(ge(-5, compare_blocks_cols), if_then_else(False, 1, 2), if_then_else(True, 3, 3)), if_then_else(ge(-2, ones_diff_cols), if_then_else(True, ones_diff_rows, -4), if_then_else(True, 1, compare_blocks_cols))), if_then_else(le(if_then_else(False, compare_blocks_rows, -4), if_then_else(True, ones_diff_rows, 3)), if_then_else(ge(4, -4), if_then_else(False, -3, 0), if_then_else(False, 2, -2)), if_then_else(le(zeros_diff_cols, -1), if_then_else(True, 4, 4), if_then_else(True, -5, 4)))))
VAL TREES:
mul(add(add(compare_blocks_cols, compare_blocks_rows), add(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, zeros_diff_rows))), add(add(compare_blocks_cols, mul(compare_blocks_rows, compare_blocks_rows)), mul(compare_blocks_rows, ones_diff_rows)))
add(add(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows)), add(add(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))
mul(add(mul(add(mul(add(compare_blocks_rows, ones_diff_cols), ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_cols))), add(mul(add(ones_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)))), add(add(mul(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), add(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows))), mul(mul(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)))))
add(ones_diff_cols, add(add(add(add(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols)), zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)))
add(mul(mul(add(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), add(mul(mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows))), mul(add(mul(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)))), mul(mul(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, compare_blocks_cols)), add(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_rows, zeros_diff_rows))), ones_diff_rows))
add(mul(mul(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols))), mul(add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, ones_diff_cols)))), add(mul(mul(add(ones_diff_cols, add(add(zeros_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows))), mul(zeros_diff_rows, compare_blocks_rows)), add(add(compare_blocks_rows, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_rows, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))))
COND TREES:
ge(if_then_else(or_(le(0, -1), and_(False, True)), if_then_else(False, 3, -4), if_then_else(and_(False, or_(False, True)), -1, if_then_else(False, -1, if_then_else(False, 2, zeros_diff_rows)))), if_then_else(le(0, if_then_else(ge(-1, -1), 0, compare_blocks_rows)), if_then_else(True, compare_blocks_cols, if_then_else(False, if_then_else(True, 0, -5), if_then_else(False, 3, -2))), if_then_else(True, -5, -3)))
and_(le(if_then_else(True, zeros_diff_rows, compare_blocks_rows), if_then_else(True, compare_blocks_cols, compare_blocks_rows)), or_(or_(True, False), or_(False, False)))
le(if_then_else(ge(compare_blocks_rows, -5), if_then_else(True, ones_diff_cols, if_then_else(True, -5, if_then_else(False, 0, ones_diff_rows))), if_then_else(ge(compare_blocks_cols, -1), ones_diff_rows, if_then_else(True, 1, zeros_diff_rows))), if_then_else(le(-1, if_then_else(or_(False, False), if_then_else(True, 1, -1), -3)), if_then_else(or_(True, False), -4, zeros_diff_rows), if_then_else(False, ones_diff_rows, -2)))
le(if_then_else(and_(le(0, 3), and_(False, True)), if_then_else(le(2, ones_diff_cols), if_then_else(False, ones_diff_rows, ones_diff_rows), if_then_else(False, 4, ones_diff_rows)), if_then_else(and_(True, False), if_then_else(False, 2, -4), if_then_else(False, 4, -2))), if_then_else(or_(le(-4, ones_diff_rows), ge(0, -5)), if_then_else(or_(True, False), if_then_else(True, 0, -4), if_then_else(True, ones_diff_rows, -4)), if_then_else(le(ones_diff_rows, -1), if_then_else(False, ones_diff_rows, zeros_diff_rows), if_then_else(False, ones_diff_rows, -2))))
or_(ge(if_then_else(le(if_then_else(True, -1, ones_diff_rows), if_then_else(False, 1, compare_blocks_cols)), if_then_else(le(-2, -1), if_then_else(False, compare_blocks_cols, -1), if_then_else(True, -1, compare_blocks_rows)), if_then_else(or_(True, False), if_then_else(True, -3, zeros_diff_rows), if_then_else(False, -1, -3))), if_then_else(ge(if_then_else(False, -1, 2), if_then_else(False, 2, 3)), if_then_else(le(1, compare_blocks_cols), if_then_else(False, ones_diff_rows, 0), if_then_else(False, -1, -3)), if_then_else(ge(ones_diff_rows, compare_blocks_rows), if_then_else(False, zeros_diff_cols, ones_diff_rows), if_then_else(True, 1, 4)))), le(if_then_else(and_(le(ones_diff_rows, ones_diff_rows), le(zeros_diff_cols, 2)), if_then_else(or_(le(zeros_diff_cols, 2), True), if_then_else(False, 0, 4), if_then_else(True, 0, -1)), if_then_else(or_(True, True), if_then_else(True, ones_diff_cols, 1), if_then_else(True, 2, compare_blocks_cols))), if_then_else(le(if_then_else(True, compare_blocks_cols, 3), if_then_else(False, ones_diff_rows, -4)), if_then_else(le(compare_blocks_cols, zeros_diff_cols), if_then_else(True, 3, 1), if_then_else(False, -5, 0)), if_then_else(or_(False, True), if_then_else(False, -2, -3), if_then_else(False, 0, zeros_diff_rows)))))
VAL TREES:
mul(mul(add(mul(add(compare_blocks_cols, zeros_diff_rows), zeros_diff_rows), add(ones_diff_cols, zeros_diff_rows)), add(mul(compare_blocks_cols, ones_diff_rows), add(compare_blocks_cols, ones_diff_rows))), add(add(add(zeros_diff_rows, ones_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, zeros_diff_rows))))
add(mul(add(zeros_diff_cols, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), add(mul(mul(mul(ones_diff_cols, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)), ones_diff_cols), mul(zeros_diff_rows, mul(ones_diff_cols, zeros_diff_cols))))
mul(mul(add(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)))
add(ones_diff_rows, mul(mul(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_cols)))
add(mul(mul(add(mul(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, ones_diff_rows)), add(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), mul(add(mul(ones_diff_rows, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows)), add(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(mul(mul(mul(zeros_diff_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows))), add(mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(zeros_diff_rows, add(zeros_diff_rows, zeros_diff_rows)))))
mul(add(add(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_cols, add(zeros_diff_cols, ones_diff_rows))), zeros_diff_rows), add(add(mul(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_rows)), add(add(zeros_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows))))
COND TREES:
le(if_then_else(and_(or_(True, False), False), if_then_else(False, ones_diff_rows, 0), if_then_else(False, zeros_diff_rows, zeros_diff_cols)), if_then_else(or_(le(3, -5), True), if_then_else(and_(False, True), 2, 0), if_then_else(False, if_then_else(True, -2, 3), 3)))
or_(le(if_then_else(True, zeros_diff_cols, -4), if_then_else(False, ones_diff_cols, zeros_diff_rows)), ge(if_then_else(True, -2, compare_blocks_rows), if_then_else(and_(or_(or_(True, False), or_(False, False)), True), if_then_else(False, if_then_else(False, -5, ones_diff_rows), if_then_else(True, ones_diff_rows, 0)), -4)))
or_(and_(le(compare_blocks_rows, if_then_else(le(-1, if_then_else(or_(True, False), if_then_else(True, 1, -1), -3)), if_then_else(or_(True, True), -4, zeros_diff_rows), if_then_else(False, ones_diff_rows, -2))), ge(if_then_else(False, -4, compare_blocks_rows), if_then_else(True, 2, -3))), and_(or_(False, True), and_(False, False)))
le(if_then_else(le(if_then_else(False, if_then_else(False, -2, 0), 4), if_then_else(or_(False, True), compare_blocks_rows, 0)), if_then_else(True, 1, ones_diff_cols), if_then_else(False, ones_diff_cols, if_then_else(False, zeros_diff_cols, 1))), if_then_else(le(if_then_else(False, 4, -1), compare_blocks_rows), if_then_else(False, if_then_else(True, -5, -4), 3), if_then_else(False, 1, 1)))
or_(le(if_then_else(or_(and_(False, False), ge(3, -4)), if_then_else(or_(False, False), if_then_else(False, -1, -2), if_then_else(False, 2, 3)), if_then_else(ge(ones_diff_rows, -2), if_then_else(False, 2, -5), if_then_else(True, -5, ones_diff_cols))), if_then_else(ge(if_then_else(True, -2, 4), if_then_else(True, ones_diff_rows, compare_blocks_rows)), if_then_else(ge(-1, ones_diff_cols), if_then_else(False, compare_blocks_cols, 3), if_then_else(True, -4, compare_blocks_cols)), if_then_else(ge(-4, -1), if_then_else(True, ones_diff_rows, -4), if_then_else(True, 2, 2)))), ge(if_then_else(and_(le(0, compare_blocks_rows), or_(False, True)), if_then_else(ge(-5, compare_blocks_cols), if_then_else(False, 1, 2), if_then_else(True, 3, 3)), if_then_else(ge(if_then_else(or_(True, True), if_then_else(False, 0, 4), if_then_else(True, 0, -1)), ones_diff_cols), if_then_else(True, ones_diff_rows, -4), if_then_else(True, 1, compare_blocks_cols))), if_then_else(le(if_then_else(False, compare_blocks_rows, -4), if_then_else(True, ones_diff_rows, 3)), if_then_else(ge(4, -4), if_then_else(False, -3, 0), if_then_else(False, 2, -2)), if_then_else(le(zeros_diff_cols, -1), if_then_else(True, 4, 4), if_then_else(True, -5, compare_blocks_cols)))))
VAL TREES:
mul(compare_blocks_cols, add(add(compare_blocks_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))
add(zeros_diff_rows, add(add(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))
mul(add(mul(add(mul(ones_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_cols))), add(mul(add(ones_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)))), add(add(mul(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), add(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows))), compare_blocks_rows))
add(mul(mul(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(add(mul(compare_blocks_rows, compare_blocks_rows), zeros_diff_rows), mul(compare_blocks_rows, mul(compare_blocks_cols, compare_blocks_cols))))
add(mul(mul(add(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), add(mul(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows))), mul(add(mul(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)))), mul(mul(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, compare_blocks_cols)), add(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_rows, zeros_diff_rows))), mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_rows, zeros_diff_cols)))))
add(mul(mul(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols))), mul(add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_rows, ones_diff_rows)))), add(mul(mul(add(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(add(compare_blocks_rows, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_rows, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))))
COND TREES:
le(if_then_else(and_(or_(True, False), False), if_then_else(False, ones_diff_rows, 0), if_then_else(False, zeros_diff_rows, zeros_diff_cols)), if_then_else(or_(le(3, -5), True), if_then_else(and_(False, True), 2, 0), if_then_else(False, if_then_else(True, -2, 3), 3)))
or_(le(if_then_else(True, zeros_diff_cols, -4), if_then_else(False, ones_diff_cols, zeros_diff_rows)), ge(if_then_else(True, -2, compare_blocks_rows), if_then_else(and_(or_(or_(True, False), or_(False, False)), True), if_then_else(False, if_then_else(False, -5, ones_diff_rows), if_then_else(True, ones_diff_rows, 0)), -4)))
or_(and_(le(compare_blocks_rows, if_then_else(le(-1, if_then_else(or_(True, False), if_then_else(True, 1, -1), -3)), if_then_else(or_(True, True), -4, zeros_diff_rows), if_then_else(False, ones_diff_rows, -2))), ge(if_then_else(False, -4, compare_blocks_rows), if_then_else(True, 2, -3))), and_(or_(False, True), and_(False, False)))
le(if_then_else(le(if_then_else(False, if_then_else(False, -2, 0), 4), if_then_else(or_(False, True), compare_blocks_rows, 0)), if_then_else(True, 1, ones_diff_cols), if_then_else(False, ones_diff_cols, if_then_else(False, zeros_diff_cols, 1))), if_then_else(le(if_then_else(False, 4, -1), compare_blocks_rows), if_then_else(False, if_then_else(True, -5, -4), 3), if_then_else(False, 1, 1)))
or_(le(if_then_else(or_(and_(False, False), ge(3, -4)), if_then_else(or_(False, False), if_then_else(False, -1, -2), if_then_else(False, 2, 3)), if_then_else(ge(ones_diff_rows, -2), if_then_else(False, 2, -5), if_then_else(True, -5, ones_diff_cols))), if_then_else(ge(if_then_else(True, -2, 4), if_then_else(True, ones_diff_rows, compare_blocks_rows)), if_then_else(ge(-1, ones_diff_cols), if_then_else(False, compare_blocks_cols, 3), if_then_else(True, -4, compare_blocks_cols)), if_then_else(ge(-4, -1), if_then_else(True, ones_diff_rows, -4), if_then_else(True, 2, 2)))), ge(if_then_else(and_(le(0, compare_blocks_rows), or_(False, True)), if_then_else(ge(-5, compare_blocks_cols), if_then_else(False, 1, 2), if_then_else(True, 3, 3)), if_then_else(ge(if_then_else(or_(True, True), if_then_else(False, 0, 4), if_then_else(True, 0, -1)), ones_diff_cols), if_then_else(True, ones_diff_rows, -4), if_then_else(True, 1, compare_blocks_cols))), if_then_else(le(if_then_else(False, compare_blocks_rows, -4), if_then_else(True, ones_diff_rows, 3)), if_then_else(ge(4, -4), if_then_else(False, -3, 0), if_then_else(False, 2, -2)), if_then_else(le(zeros_diff_cols, -1), if_then_else(True, 4, 4), if_then_else(True, -5, compare_blocks_cols)))))
VAL TREES:
mul(compare_blocks_cols, add(add(compare_blocks_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))
add(zeros_diff_rows, add(add(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))
mul(add(mul(add(mul(ones_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_cols))), add(mul(add(ones_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)))), add(add(mul(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), add(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows))), compare_blocks_rows))
add(mul(mul(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(add(mul(compare_blocks_rows, compare_blocks_rows), zeros_diff_rows), mul(compare_blocks_rows, mul(compare_blocks_cols, compare_blocks_cols))))
add(mul(mul(add(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), add(mul(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows))), mul(add(mul(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)))), mul(mul(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, compare_blocks_cols)), add(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_rows, zeros_diff_rows))), mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_rows, zeros_diff_cols)))))
add(mul(mul(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols))), mul(add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_rows, ones_diff_rows)))), add(mul(mul(add(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(add(compare_blocks_rows, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_rows, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))))
COND TREES:
le(if_then_else(and_(False, ge(1, -1)), if_then_else(False, -2, -1), if_then_else(or_(False, False), 3, compare_blocks_rows)), if_then_else(and_(ge(ones_diff_cols, 3), True), if_then_else(True, if_then_else(False, ones_diff_rows, 0), compare_blocks_rows), if_then_else(True, 3, zeros_diff_cols)))
ge(if_then_else(True, compare_blocks_rows, if_then_else(False, ones_diff_rows, zeros_diff_rows)), if_then_else(or_(True, True), if_then_else(True, ones_diff_rows, 3), if_then_else(True, ones_diff_rows, 0)))
or_(ge(if_then_else(False, -5, -5), -4), ge(if_then_else(le(if_then_else(le(if_then_else(False, 3, 4), if_then_else(True, -1, 3)), if_then_else(and_(True, True), if_then_else(False, 3, ones_diff_cols), if_then_else(True, compare_blocks_cols, 1)), if_then_else(le(compare_blocks_cols, 2), if_then_else(True, -2, -4), if_then_else(True, compare_blocks_cols, 1))), ones_diff_rows), -4, compare_blocks_rows), if_then_else(True, 2, -3)))
or_(ge(-4, if_then_else(False, 2, 4)), le(if_then_else(or_(False, True), 1, 4), if_then_else(False, zeros_diff_cols, zeros_diff_cols)))
le(if_then_else(or_(or_(False, True), or_(True, True)), if_then_else(ge(zeros_diff_cols, -5), if_then_else(False, ones_diff_rows, 0), if_then_else(False, -4, -5)), if_then_else(le(0, zeros_diff_cols), if_then_else(True, ones_diff_cols, 1), if_then_else(True, 1, 1))), if_then_else(and_(and_(False, True), or_(False, True)), if_then_else(ge(ones_diff_rows, 0), if_then_else(True, -3, zeros_diff_cols), ones_diff_cols), if_then_else(ge(1, ones_diff_cols), if_then_else(False, zeros_diff_rows, -3), -1)))
VAL TREES:
add(mul(add(add(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols)), mul(mul(ones_diff_rows, ones_diff_rows), add(compare_blocks_rows, compare_blocks_rows))), mul(mul(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_cols, ones_diff_rows)), mul(add(add(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols)), mul(mul(ones_diff_rows, ones_diff_rows), add(compare_blocks_rows, compare_blocks_rows))), mul(mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_cols, ones_diff_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_rows)))))), mul(add(add(add(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_cols))), add(add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, zeros_diff_cols)), add(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, ones_diff_rows)))))
mul(mul(add(zeros_diff_rows, compare_blocks_rows), add(mul(add(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows)), compare_blocks_rows)), add(mul(zeros_diff_cols, zeros_diff_cols), add(zeros_diff_cols, zeros_diff_cols)))
mul(add(mul(zeros_diff_cols, mul(zeros_diff_cols, zeros_diff_cols)), mul(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, add(compare_blocks_rows, ones_diff_cols)), add(compare_blocks_cols, compare_blocks_cols)), add(add(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)))
add(mul(mul(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_rows)), add(mul(compare_blocks_cols, zeros_diff_cols), mul(add(compare_blocks_rows, zeros_diff_rows), ones_diff_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_cols)), mul(mul(add(zeros_diff_rows, compare_blocks_cols), compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows)))
COND TREES:
ge(if_then_else(or_(le(if_then_else(False, ones_diff_rows, -4), -1), and_(False, True)), if_then_else(False, 3, -4), if_then_else(and_(False, or_(False, True)), -1, if_then_else(False, -1, if_then_else(False, 2, zeros_diff_rows)))), if_then_else(le(0, if_then_else(ge(-1, -1), 0, compare_blocks_rows)), if_then_else(True, compare_blocks_cols, if_then_else(False, if_then_else(or_(le(if_then_else(True, -1, 0), if_then_else(False, 3, -5)), le(if_then_else(False, 4, zeros_diff_rows), if_then_else(False, compare_blocks_rows, -2))), if_then_else(False, ones_diff_rows, -4), -5), if_then_else(False, 3, -2))), if_then_else(True, compare_blocks_rows, -3)))
and_(le(if_then_else(True, if_then_else(ge(if_then_else(False, -4, zeros_diff_cols), if_then_else(True, -5, 1)), if_then_else(or_(False, True), if_then_else(False, -2, -5), if_then_else(True, -5, compare_blocks_cols)), if_then_else(or_(le(zeros_diff_cols, ones_diff_rows), False), if_then_else(False, zeros_diff_cols, -3), if_then_else(ge(-5, if_then_else(True, -2, -3)), 0, -5))), compare_blocks_rows), if_then_else(True, compare_blocks_cols, compare_blocks_rows)), True)
le(if_then_else(ge(compare_blocks_rows, -5), if_then_else(True, ones_diff_cols, if_then_else(True, -5, if_then_else(False, 0, ones_diff_rows))), if_then_else(ge(compare_blocks_cols, -1), ones_diff_rows, if_then_else(True, if_then_else(False, if_then_else(or_(False, True), if_then_else(False, ones_diff_rows, compare_blocks_rows), if_then_else(True, 3, 4)), if_then_else(and_(True, True), if_then_else(True, zeros_diff_rows, 0), if_then_else(False, -5, 1))), zeros_diff_rows))), ones_diff_rows)
le(if_then_else(False, if_then_else(le(2, ones_diff_cols), if_then_else(False, ones_diff_rows, ones_diff_rows), if_then_else(False, 4, compare_blocks_cols)), if_then_else(and_(True, False), if_then_else(False, 2, -4), if_then_else(False, 4, -2))), if_then_else(or_(le(-4, ones_diff_rows), ge(0, -5)), if_then_else(or_(True, False), if_then_else(True, 0, -4), if_then_else(True, ones_diff_rows, -4)), if_then_else(le(compare_blocks_cols, -1), if_then_else(False, ones_diff_rows, zeros_diff_rows), if_then_else(False, ones_diff_rows, -2))))
or_(ge(if_then_else(le(if_then_else(True, -1, ones_diff_rows), if_then_else(False, 1, compare_blocks_cols)), if_then_else(le(-2, -1), if_then_else(False, compare_blocks_cols, -1), if_then_else(True, -1, compare_blocks_rows)), if_then_else(or_(True, False), if_then_else(True, -3, zeros_diff_rows), if_then_else(False, -1, -3))), if_then_else(ge(if_then_else(False, -1, 2), if_then_else(False, 2, 3)), if_then_else(False, if_then_else(False, ones_diff_rows, 0), if_then_else(False, -1, -3)), if_then_else(ge(ones_diff_rows, compare_blocks_rows), if_then_else(False, zeros_diff_cols, ones_diff_rows), if_then_else(True, 1, 4)))), le(if_then_else(and_(le(ones_diff_rows, ones_diff_rows), True), -2, if_then_else(or_(True, True), if_then_else(True, ones_diff_cols, 1), if_then_else(True, 2, compare_blocks_cols))), if_then_else(le(if_then_else(True, compare_blocks_cols, 3), if_then_else(False, ones_diff_rows, -4)), if_then_else(le(if_then_else(or_(True, True), if_then_else(True, 4, compare_blocks_rows), if_then_else(True, 0, compare_blocks_cols)), if_then_else(le(3, 1), if_then_else(True, -5, 2), if_then_else(True, zeros_diff_rows, ones_diff_rows))), if_then_else(or_(or_(False, True), le(4, -2)), if_then_else(ge(4, ones_diff_cols), if_then_else(False, -5, ones_diff_cols), if_then_else(False, 3, ones_diff_cols)), if_then_else(and_(False, True), if_then_else(False, zeros_diff_cols, -4), if_then_else(True, 1, ones_diff_rows))), if_then_else(ge(if_then_else(True, -1, zeros_diff_rows), if_then_else(False, ones_diff_cols, 1)), if_then_else(ge(zeros_diff_rows, 1), if_then_else(False, -3, ones_diff_rows), if_then_else(False, -5, 2)), if_then_else(or_(True, False), if_then_else(True, -1, 2), if_then_else(False, 0, 3)))), if_then_else(or_(False, True), if_then_else(False, -2, -3), if_then_else(False, 0, zeros_diff_rows)))))
VAL TREES:
mul(mul(add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, zeros_diff_rows)), add(mul(compare_blocks_cols, ones_diff_rows), add(compare_blocks_cols, ones_diff_rows))), add(add(add(zeros_diff_rows, ones_diff_rows), compare_blocks_cols), add(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows))))
add(mul(add(zeros_diff_cols, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), add(mul(mul(mul(add(add(zeros_diff_rows, ones_diff_cols), compare_blocks_rows), zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)), ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))
mul(mul(add(add(mul(add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, zeros_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_cols))), add(mul(add(ones_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)))), ones_diff_cols), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)))
add(add(add(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)))
add(mul(mul(add(mul(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, ones_diff_rows)), add(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows)), add(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(mul(add(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows))), add(mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows)))))
mul(add(add(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_cols, ones_diff_rows)), add(ones_diff_rows, add(zeros_diff_rows, ones_diff_rows))), add(add(zeros_diff_rows, add(zeros_diff_cols, zeros_diff_rows)), add(add(zeros_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows))))
COND TREES:
or_(or_(and_(False, False), ge(2, 4)), ge(if_then_else(False, -1, -5), if_then_else(False, 1, -4)))
or_(ge(if_then_else(ge(2, 4), if_then_else(False, 1, ones_diff_cols), if_then_else(True, compare_blocks_rows, -3)), zeros_diff_rows), or_(ge(if_then_else(True, compare_blocks_cols, ones_diff_rows), if_then_else(False, ones_diff_rows, compare_blocks_cols)), and_(ge(0, ones_diff_rows), and_(True, True))))
or_(ge(if_then_else(False, if_then_else(True, if_then_else(False, 0, -5), if_then_else(False, 4, compare_blocks_cols)), 3), -5), and_(and_(True, le(if_then_else(and_(and_(True, False), le(-5, 4)), ones_diff_cols, compare_blocks_cols), if_then_else(True, -4, 3))), le(zeros_diff_cols, if_then_else(le(0, -3), -5, compare_blocks_rows))))
le(if_then_else(ge(-4, -3), if_then_else(or_(True, and_(False, True)), -4, 4), if_then_else(and_(le(if_then_else(le(if_then_else(True, 4, 3), ones_diff_rows), if_then_else(True, compare_blocks_cols, 4), if_then_else(False, ones_diff_rows, -5)), if_then_else(ge(1, if_then_else(False, ones_diff_cols, compare_blocks_cols)), if_then_else(False, -4, zeros_diff_rows), if_then_else(ge(-3, if_then_else(True, 1, 2)), 3, compare_blocks_cols))), and_(False, True)), -4, compare_blocks_rows)), if_then_else(and_(True, False), if_then_else(False, if_then_else(False, -1, if_then_else(False, compare_blocks_cols, ones_diff_rows)), -5), if_then_else(True, zeros_diff_rows, compare_blocks_cols)))
le(if_then_else(le(if_then_else(or_(False, False), if_then_else(True, -1, -1), if_then_else(True, zeros_diff_cols, -3)), if_then_else(le(ones_diff_rows, compare_blocks_cols), if_then_else(False, 1, zeros_diff_rows), if_then_else(True, zeros_diff_rows, -2))), if_then_else(or_(le(0, compare_blocks_rows), or_(False, False)), if_then_else(and_(True, False), if_then_else(True, -4, compare_blocks_rows), if_then_else(False, -3, 2)), if_then_else(le(ones_diff_rows, -3), if_then_else(True, zeros_diff_rows, zeros_diff_rows), if_then_else(False, 2, 0))), if_then_else(and_(and_(True, True), or_(True, False)), if_then_else(or_(False, False), if_then_else(False, ones_diff_cols, ones_diff_cols), if_then_else(le(1, compare_blocks_cols), 4, -2)), if_then_else(ge(-5, zeros_diff_cols), if_then_else(True, compare_blocks_cols, 3), if_then_else(True, ones_diff_rows, -4)))), if_then_else(ge(if_then_else(and_(True, False), if_then_else(False, -5, -3), if_then_else(True, 1, -5)), if_then_else(and_(True, True), if_then_else(False, 3, 2), if_then_else(False, 0, -3))), if_then_else(le(if_then_else(True, -5, 3), if_then_else(False, compare_blocks_rows, compare_blocks_cols)), if_then_else(le(-3, compare_blocks_cols), if_then_else(le(if_then_else(True, -1, ones_diff_rows), if_then_else(False, 1, compare_blocks_cols)), if_then_else(le(-2, -1), if_then_else(False, compare_blocks_cols, -1), if_then_else(True, -1, compare_blocks_rows)), if_then_else(or_(True, False), if_then_else(True, -3, zeros_diff_rows), if_then_else(False, -1, -3))), if_then_else(True, compare_blocks_rows, ones_diff_rows)), if_then_else(or_(False, True), if_then_else(True, compare_blocks_rows, compare_blocks_cols), if_then_else(False, -1, 1))), if_then_else(or_(le(zeros_diff_rows, -1), and_(False, True)), if_then_else(ge(ones_diff_cols, 3), if_then_else(False, 3, 1), if_then_else(False, zeros_diff_rows, zeros_diff_rows)), if_then_else(or_(True, False), if_then_else(False, -5, 4), if_then_else(True, compare_blocks_cols, ones_diff_cols)))))
VAL TREES:
mul(add(add(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows))), add(mul(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(ones_diff_rows, ones_diff_rows), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, zeros_diff_rows)))))
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), add(add(compare_blocks_rows, ones_diff_rows), ones_diff_cols))
mul(add(mul(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(add(mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols))), ones_diff_rows), add(compare_blocks_cols, zeros_diff_cols)))
mul(add(mul(mul(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows)), mul(compare_blocks_rows, add(ones_diff_rows, ones_diff_cols))), mul(add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, zeros_diff_rows)))), compare_blocks_rows)
add(add(zeros_diff_rows, mul(compare_blocks_cols, compare_blocks_rows)), add(mul(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_cols, mul(ones_diff_rows, compare_blocks_cols))), mul(add(zeros_diff_cols, compare_blocks_rows), add(ones_diff_cols, add(zeros_diff_rows, ones_diff_cols))))
COND TREES:
le(if_then_else(and_(or_(True, False), False), if_then_else(False, ones_diff_rows, 0), if_then_else(True, zeros_diff_rows, zeros_diff_cols)), if_then_else(or_(le(3, compare_blocks_rows), True), if_then_else(and_(False, True), 2, 0), if_then_else(False, if_then_else(True, -2, 3), 3)))
or_(le(if_then_else(True, zeros_diff_cols, -4), if_then_else(False, ones_diff_cols, zeros_diff_rows)), ge(if_then_else(True, -2, compare_blocks_rows), if_then_else(and_(or_(False, False), True), if_then_else(False, if_then_else(False, -5, ones_diff_rows), -3), -4)))
or_(and_(le(compare_blocks_rows, ones_diff_rows), or_(True, True)), and_(or_(False, True), le(-3, 3)))
le(if_then_else(le(if_then_else(False, if_then_else(False, -2, 0), 4), if_then_else(or_(False, True), compare_blocks_rows, ones_diff_cols)), if_then_else(True, 1, ones_diff_cols), if_then_else(ge(-1, ones_diff_rows), ones_diff_cols, if_then_else(False, zeros_diff_cols, compare_blocks_rows))), if_then_else(le(if_then_else(False, 4, -1), compare_blocks_rows), if_then_else(False, if_then_else(True, -5, -4), 3), if_then_else(False, 1, 1)))
or_(le(if_then_else(or_(and_(False, False), ge(3, -4)), if_then_else(or_(False, False), if_then_else(False, -1, -2), if_then_else(False, 2, 3)), if_then_else(ge(ones_diff_rows, -2), if_then_else(False, 2, -5), if_then_else(True, -5, ones_diff_cols))), if_then_else(ge(if_then_else(True, -2, 4), if_then_else(True, ones_diff_rows, compare_blocks_rows)), if_then_else(ge(-1, ones_diff_cols), if_then_else(False, compare_blocks_cols, 3), if_then_else(True, -4, compare_blocks_cols)), if_then_else(ge(-4, -1), if_then_else(True, ones_diff_rows, -4), if_then_else(True, 2, 2)))), ge(if_then_else(and_(le(0, compare_blocks_rows), or_(False, True)), if_then_else(ge(-5, compare_blocks_cols), if_then_else(False, 1, 2), if_then_else(True, 3, 3)), if_then_else(ge(-2, ones_diff_cols), if_then_else(True, zeros_diff_cols, -4), if_then_else(True, 1, compare_blocks_cols))), if_then_else(le(if_then_else(False, compare_blocks_rows, -4), if_then_else(True, ones_diff_rows, 3)), if_then_else(ge(4, -4), if_then_else(False, -3, 0), if_then_else(False, 2, -2)), if_then_else(le(zeros_diff_cols, -1), if_then_else(True, 4, 4), if_then_else(True, -5, compare_blocks_cols)))))
VAL TREES:
mul(add(add(compare_blocks_cols, compare_blocks_rows), add(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, zeros_diff_rows))), add(add(compare_blocks_cols, mul(compare_blocks_rows, compare_blocks_rows)), mul(compare_blocks_rows, ones_diff_rows)))
add(add(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows)), add(add(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))
mul(add(mul(add(mul(add(compare_blocks_rows, ones_diff_cols), ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_cols))), add(mul(add(ones_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)))), add(add(mul(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), add(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows))), mul(mul(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)))))
add(ones_diff_cols, add(add(add(add(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols)), zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)))
add(mul(mul(add(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), add(mul(mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows))), mul(add(mul(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)))), mul(mul(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, compare_blocks_cols)), add(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_rows, zeros_diff_rows))), ones_diff_rows))
add(mul(mul(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols))), mul(add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, ones_diff_cols)))), add(mul(mul(add(ones_diff_cols, add(add(zeros_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows))), mul(zeros_diff_rows, compare_blocks_rows)), add(add(compare_blocks_rows, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_rows, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))))
COND TREES:
le(if_then_else(and_(or_(ge(if_then_else(or_(or_(or_(or_(False, True), ge(compare_blocks_rows, zeros_diff_cols)), le(if_then_else(True, compare_blocks_rows, zeros_diff_cols), if_then_else(True, ones_diff_cols, zeros_diff_rows))), le(if_then_else(ge(ones_diff_cols, -1), if_then_else(False, zeros_diff_cols, -4), if_then_else(True, compare_blocks_rows, 2)), if_then_else(ge(zeros_diff_cols, -5), if_then_else(True, 2, 4), if_then_else(True, compare_blocks_rows, 4)))), if_then_else(ge(if_then_else(ge(compare_blocks_rows, 4), if_then_else(False, 4, zeros_diff_cols), if_then_else(True, -1, -2)), if_then_else(or_(True, True), if_then_else(False, -2, 3), if_then_else(False, 3, 4))), if_then_else(and_(and_(True, True), le(-4, zeros_diff_cols)), if_then_else(or_(True, False), if_then_else(False, -3, -1), if_then_else(True, -5, 4)), if_then_else(and_(True, True), if_then_else(False, compare_blocks_rows, zeros_diff_rows), if_then_else(True, compare_blocks_rows, -4))), if_then_else(ge(if_then_else(True, -1, -5), if_then_else(True, zeros_diff_rows, zeros_diff_rows)), if_then_else(and_(True, True), if_then_else(True, -2, ones_diff_rows), if_then_else(False, zeros_diff_cols, -3)), if_then_else(and_(False, True), if_then_else(True, -4, 2), if_then_else(True, 1, ones_diff_cols)))), if_then_else(and_(and_(and_(True, False), and_(False, False)), ge(if_then_else(False, ones_diff_cols, 2), if_then_else(True, -1, -3))), if_then_else(le(if_then_else(False, -5, -2), if_then_else(True, -5, 4)), if_then_else(and_(True, True), if_then_else(True, 3, -1), if_then_else(False, -1, 2)), if_then_else(le(zeros_diff_cols, 0), if_then_else(False, ones_diff_rows, ones_diff_rows), if_then_else(False, compare_blocks_rows, zeros_diff_cols))), if_then_else(le(if_then_else(False, 2, 3), if_then_else(False, 3, zeros_diff_rows)), if_then_else(le(compare_blocks_cols, ones_diff_rows), if_then_else(False, -4, -3), if_then_else(True, compare_blocks_rows, zeros_diff_cols)), if_then_else(le(-1, 1), if_then_else(True, -1, 4), if_then_else(False, -4, -2))))), 4), False), False), if_then_else(False, ones_diff_rows, 0), if_then_else(True, zeros_diff_rows, zeros_diff_cols)), if_then_else(or_(le(3, compare_blocks_rows), True), if_then_else(and_(False, True), 2, 0), if_then_else(False, if_then_else(True, -2, 3), 3)))
or_(le(if_then_else(True, zeros_diff_cols, -4), if_then_else(ge(if_then_else(True, zeros_diff_cols, 3), if_then_else(False, ones_diff_rows, compare_blocks_rows)), if_then_else(or_(True, False), if_then_else(False, -4, 0), if_then_else(True, -2, 3)), if_then_else(ge(compare_blocks_rows, ones_diff_rows), if_then_else(True, ones_diff_rows, -5), if_then_else(False, -5, 3)))), ge(if_then_else(True, -2, compare_blocks_rows), if_then_else(and_(True, True), if_then_else(False, if_then_else(False, -5, ones_diff_rows), -3), -4)))
or_(and_(le(-5, ones_diff_rows), or_(True, True)), and_(or_(and_(or_(False, False), le(compare_blocks_cols, if_then_else(False, zeros_diff_cols, if_then_else(True, 0, ones_diff_cols)))), or_(ge(compare_blocks_rows, if_then_else(le(0, -5), ones_diff_cols, compare_blocks_rows)), ge(ones_diff_cols, 4))), and_(False, False)))
le(if_then_else(le(if_then_else(False, if_then_else(False, -2, 0), 4), if_then_else(True, compare_blocks_rows, ones_diff_cols)), if_then_else(True, 1, ones_diff_cols), if_then_else(ge(-1, if_then_else(le(if_then_else(le(4, -2), if_then_else(False, zeros_diff_rows, ones_diff_cols), if_then_else(False, -2, -3)), if_then_else(and_(True, False), if_then_else(False, 3, -1), if_then_else(True, -4, ones_diff_cols))), if_then_else(and_(or_(True, True), ge(0, 1)), if_then_else(or_(True, False), if_then_else(True, 2, 0), if_then_else(False, compare_blocks_rows, compare_blocks_cols)), if_then_else(and_(True, False), if_then_else(True, -1, 0), if_then_else(True, ones_diff_cols, -2))), if_then_else(and_(le(ones_diff_rows, 3), le(compare_blocks_cols, -1)), if_then_else(ge(zeros_diff_cols, zeros_diff_rows), if_then_else(True, zeros_diff_cols, -3), if_then_else(False, -3, 4)), if_then_else(le(-3, -4), if_then_else(True, -2, compare_blocks_rows), if_then_else(True, compare_blocks_cols, -4))))), ones_diff_cols, if_then_else(False, zeros_diff_cols, 1))), if_then_else(le(if_then_else(False, 4, -1), compare_blocks_rows), if_then_else(False, if_then_else(True, -5, -4), 3), if_then_else(False, 1, 1)))
or_(le(if_then_else(or_(and_(False, False), ge(3, -4)), if_then_else(or_(False, False), if_then_else(False, -1, -2), if_then_else(False, 0, 3)), if_then_else(ge(ones_diff_rows, -2), if_then_else(False, 2, -5), if_then_else(True, -5, ones_diff_cols))), if_then_else(ge(if_then_else(True, -2, 4), if_then_else(True, ones_diff_rows, compare_blocks_rows)), if_then_else(ge(-1, ones_diff_cols), if_then_else(False, compare_blocks_cols, 3), if_then_else(True, -4, compare_blocks_cols)), if_then_else(ge(-4, -1), if_then_else(True, ones_diff_rows, -4), if_then_else(True, 2, 2)))), ge(if_then_else(and_(le(0, compare_blocks_rows), or_(or_(and_(and_(False, True), or_(True, False)), ge(if_then_else(True, 1, 1), if_then_else(False, -2, 0))), True)), if_then_else(ge(-5, compare_blocks_cols), if_then_else(False, 1, 2), if_then_else(True, 3, 3)), if_then_else(ge(-2, ones_diff_cols), if_then_else(True, ones_diff_rows, -4), if_then_else(True, 1, compare_blocks_cols))), if_then_else(le(if_then_else(False, compare_blocks_rows, -4), if_then_else(True, ones_diff_rows, 3)), if_then_else(ge(4, -4), if_then_else(False, -3, 0), if_then_else(False, 2, -2)), if_then_else(le(zeros_diff_cols, -1), if_then_else(True, 4, 4), if_then_else(True, -5, compare_blocks_cols)))))
VAL TREES:
mul(add(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, zeros_diff_rows)), add(add(add(compare_blocks_cols, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)), add(add(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows))))
add(compare_blocks_rows, add(zeros_diff_cols, add(zeros_diff_cols, ones_diff_cols)))
mul(add(mul(add(mul(mul(zeros_diff_rows, compare_blocks_rows), ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_cols))), add(mul(add(ones_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)))), mul(zeros_diff_cols, mul(zeros_diff_cols, zeros_diff_cols)))
add(add(compare_blocks_rows, compare_blocks_rows), add(add(mul(compare_blocks_rows, compare_blocks_rows), zeros_diff_rows), zeros_diff_cols))
add(mul(mul(add(add(ones_diff_cols, ones_diff_rows), add(compare_blocks_rows, zeros_diff_cols)), add(mul(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows))), mul(add(mul(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)))), mul(mul(zeros_diff_cols, add(add(ones_diff_rows, ones_diff_rows), mul(ones_diff_cols, ones_diff_rows))), ones_diff_rows))
add(mul(mul(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols))), mul(add(mul(compare_blocks_cols, mul(zeros_diff_rows, compare_blocks_rows)), mul(zeros_diff_cols, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, ones_diff_cols)))), add(mul(mul(add(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(add(compare_blocks_rows, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_rows, compare_blocks_rows)), mul(mul(add(zeros_diff_rows, compare_blocks_cols), compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_cols)))))
COND TREES:
le(if_then_else(and_(False, ge(1, -1)), if_then_else(False, -2, -1), if_then_else(or_(False, False), 3, compare_blocks_rows)), if_then_else(and_(ge(ones_diff_cols, 3), True), if_then_else(True, if_then_else(False, ones_diff_rows, 0), compare_blocks_rows), if_then_else(True, 3, zeros_diff_cols)))
ge(if_then_else(True, compare_blocks_rows, if_then_else(False, ones_diff_rows, zeros_diff_rows)), if_then_else(or_(True, True), if_then_else(True, ones_diff_rows, 3), if_then_else(True, ones_diff_rows, 0)))
or_(ge(if_then_else(False, -5, -5), -4), ge(if_then_else(le(if_then_else(le(if_then_else(False, 3, 4), if_then_else(True, -1, 3)), if_then_else(and_(True, True), if_then_else(False, 3, ones_diff_cols), if_then_else(True, compare_blocks_cols, 1)), if_then_else(le(compare_blocks_cols, 2), if_then_else(True, -2, -4), if_then_else(True, compare_blocks_cols, 1))), ones_diff_rows), -4, compare_blocks_rows), if_then_else(True, 2, -3)))
or_(ge(-4, if_then_else(False, 2, 4)), le(if_then_else(or_(False, True), 1, 4), if_then_else(False, zeros_diff_cols, zeros_diff_cols)))
le(if_then_else(or_(or_(False, True), or_(True, True)), if_then_else(ge(zeros_diff_cols, -5), if_then_else(False, ones_diff_rows, 0), if_then_else(False, -4, -5)), if_then_else(le(0, zeros_diff_cols), if_then_else(True, ones_diff_cols, 1), if_then_else(True, 1, 1))), if_then_else(and_(and_(False, True), or_(False, True)), if_then_else(ge(ones_diff_rows, 0), if_then_else(True, -3, zeros_diff_cols), ones_diff_cols), if_then_else(ge(1, ones_diff_cols), if_then_else(False, zeros_diff_rows, -3), -1)))
VAL TREES:
add(mul(add(add(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols)), mul(mul(ones_diff_rows, ones_diff_rows), add(compare_blocks_rows, compare_blocks_rows))), mul(mul(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_cols, ones_diff_rows)), mul(add(add(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols)), mul(mul(ones_diff_rows, ones_diff_rows), add(compare_blocks_rows, compare_blocks_rows))), mul(mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_cols, ones_diff_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_rows)))))), mul(add(add(add(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_cols))), add(add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, zeros_diff_cols)), add(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, ones_diff_rows)))))
mul(mul(add(zeros_diff_rows, compare_blocks_rows), add(mul(add(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows)), compare_blocks_rows)), add(mul(zeros_diff_cols, zeros_diff_cols), add(zeros_diff_cols, zeros_diff_cols)))
mul(add(mul(zeros_diff_cols, mul(zeros_diff_cols, zeros_diff_cols)), mul(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, add(compare_blocks_rows, ones_diff_cols)), add(compare_blocks_cols, compare_blocks_cols)), add(add(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)))
add(mul(mul(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_rows)), add(mul(compare_blocks_cols, zeros_diff_cols), mul(add(compare_blocks_rows, zeros_diff_rows), ones_diff_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_cols)), mul(mul(add(zeros_diff_rows, compare_blocks_cols), compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows)))
COND TREES:
or_(or_(and_(False, False), ge(2, 4)), ge(if_then_else(False, ones_diff_cols, -5), if_then_else(False, 1, -4)))
or_(ge(if_then_else(ge(2, 4), if_then_else(False, 1, ones_diff_cols), if_then_else(True, compare_blocks_rows, -3)), if_then_else(and_(False, False), if_then_else(True, 0, -1), if_then_else(False, -5, -1))), or_(ge(if_then_else(True, compare_blocks_cols, ones_diff_rows), if_then_else(False, ones_diff_rows, compare_blocks_cols)), and_(ge(0, ones_diff_rows), and_(True, True))))
or_(ge(if_then_else(False, if_then_else(True, if_then_else(False, 0, -5), if_then_else(False, 4, compare_blocks_cols)), 3), if_then_else(False, if_then_else(False, compare_blocks_cols, if_then_else(True, 0, -1)), 4)), and_(and_(True, le(if_then_else(False, ones_diff_cols, compare_blocks_cols), if_then_else(True, -4, 3))), le(zeros_diff_cols, if_then_else(le(0, -3), -5, compare_blocks_rows))))
le(if_then_else(ge(-4, -3), if_then_else(or_(True, and_(False, True)), -4, 4), if_then_else(False, 3, compare_blocks_rows)), if_then_else(and_(True, False), if_then_else(False, if_then_else(False, -1, if_then_else(False, compare_blocks_cols, ones_diff_rows)), -5), if_then_else(True, zeros_diff_rows, compare_blocks_cols)))
le(if_then_else(le(if_then_else(or_(False, False), if_then_else(True, -1, -1), if_then_else(True, zeros_diff_cols, -3)), if_then_else(le(ones_diff_rows, compare_blocks_cols), if_then_else(False, 1, zeros_diff_rows), if_then_else(True, zeros_diff_rows, -2))), if_then_else(or_(le(0, compare_blocks_rows), or_(False, False)), if_then_else(and_(True, False), if_then_else(True, -4, compare_blocks_rows), if_then_else(False, -3, 2)), if_then_else(le(ones_diff_rows, -3), if_then_else(True, zeros_diff_rows, zeros_diff_rows), if_then_else(False, 2, 0))), if_then_else(and_(and_(True, True), or_(True, False)), if_then_else(or_(False, False), if_then_else(False, ones_diff_cols, ones_diff_cols), if_then_else(False, 4, -2)), if_then_else(ge(-5, zeros_diff_cols), if_then_else(True, compare_blocks_cols, 3), if_then_else(True, ones_diff_rows, -4)))), if_then_else(ge(if_then_else(and_(True, False), if_then_else(False, -5, -3), if_then_else(True, 1, -5)), if_then_else(and_(True, True), if_then_else(False, 3, 2), if_then_else(False, 0, -3))), if_then_else(le(if_then_else(True, -5, 3), if_then_else(False, compare_blocks_rows, compare_blocks_cols)), if_then_else(le(-3, compare_blocks_cols), if_then_else(True, 2, -5), if_then_else(True, compare_blocks_rows, ones_diff_rows)), if_then_else(or_(False, True), if_then_else(True, compare_blocks_rows, compare_blocks_cols), if_then_else(False, -1, 1))), if_then_else(or_(le(zeros_diff_rows, -1), and_(False, True)), if_then_else(ge(ones_diff_cols, 3), if_then_else(False, 3, 1), if_then_else(False, zeros_diff_rows, zeros_diff_rows)), if_then_else(or_(True, False), if_then_else(False, -5, 4), if_then_else(True, compare_blocks_cols, ones_diff_cols)))))
VAL TREES:
mul(add(add(ones_diff_rows, add(zeros_diff_rows, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows))), add(mul(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))))
mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(compare_blocks_rows, add(zeros_diff_cols, zeros_diff_cols))), add(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))
mul(add(add(mul(zeros_diff_cols, mul(ones_diff_cols, ones_diff_rows)), mul(compare_blocks_cols, zeros_diff_rows)), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, ones_diff_rows), add(compare_blocks_cols, zeros_diff_cols)))
mul(add(mul(mul(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows)), mul(add(zeros_diff_rows, compare_blocks_rows), add(ones_diff_rows, ones_diff_cols))), mul(ones_diff_rows, zeros_diff_rows)), add(add(add(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, compare_blocks_rows))), add(add(add(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_rows)))))
add(ones_diff_rows, add(mul(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))
mul(add(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_cols, ones_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_rows), add(ones_diff_cols, mul(add(zeros_diff_rows, compare_blocks_cols), ones_diff_cols))))
COND TREES:
ge(if_then_else(or_(le(if_then_else(False, ones_diff_rows, -4), -1), and_(False, True)), if_then_else(False, 3, -4), if_then_else(and_(False, or_(False, True)), -1, if_then_else(False, -1, if_then_else(ge(if_then_else(and_(False, True), if_then_else(le(zeros_diff_rows, if_then_else(True, 0, -5)), 1, -2), if_then_else(False, if_then_else(True, -3, if_then_else(True, ones_diff_rows, ones_diff_cols)), if_then_else(le(4, -5), -4, -2))), if_then_else(or_(True, True), if_then_else(le(if_then_else(False, 2, ones_diff_rows), ones_diff_rows), 0, -3), if_then_else(True, 1, zeros_diff_cols))), 2, zeros_diff_rows)))), if_then_else(le(0, if_then_else(ge(-1, -1), 0, compare_blocks_rows)), if_then_else(True, compare_blocks_cols, if_then_else(False, if_then_else(True, 0, -5), if_then_else(False, 3, -2))), if_then_else(True, -5, if_then_else(le(if_then_else(or_(False, True), if_then_else(True, 0, 2), if_then_else(False, compare_blocks_cols, -2)), if_then_else(le(0, -4), if_then_else(True, -5, zeros_diff_rows), if_then_else(False, zeros_diff_rows, compare_blocks_cols))), if_then_else(or_(and_(False, False), le(-1, -1)), if_then_else(and_(True, True), if_then_else(False, -2, -5), if_then_else(True, zeros_diff_cols, compare_blocks_cols)), if_then_else(and_(True, False), if_then_else(False, -3, -4), if_then_else(False, ones_diff_rows, -3))), if_then_else(or_(and_(False, True), and_(True, True)), if_then_else(ge(compare_blocks_cols, -3), if_then_else(True, ones_diff_rows, -1), 3), if_then_else(and_(True, True), if_then_else(True, -3, zeros_diff_cols), if_then_else(False, -3, 3)))))))
and_(le(if_then_else(True, zeros_diff_rows, compare_blocks_rows), if_then_else(True, compare_blocks_cols, compare_blocks_rows)), or_(or_(True, False), or_(ge(if_then_else(le(if_then_else(le(-3, 0), if_then_else(True, -3, zeros_diff_rows), if_then_else(False, -3, -5)), if_then_else(and_(False, False), if_then_else(False, 4, 3), if_then_else(False, -5, 0))), if_then_else(ge(if_then_else(True, -4, zeros_diff_cols), if_then_else(False, zeros_diff_cols, -3)), if_then_else(le(zeros_diff_rows, 4), if_then_else(True, 1, -1), if_then_else(False, 3, -3)), if_then_else(ge(4, 2), if_then_else(False, ones_diff_rows, -1), if_then_else(True, ones_diff_cols, 0))), if_then_else(and_(or_(False, True), le(ones_diff_rows, 4)), if_then_else(ge(zeros_diff_rows, 1), if_then_else(False, compare_blocks_cols, ones_diff_cols), if_then_else(True, -4, -1)), if_then_else(ge(3, zeros_diff_cols), if_then_else(True, ones_diff_rows, if_then_else(or_(and_(le(if_then_else(False, 0, -4), if_then_else(True, 4, 4)), le(if_then_else(True, -3, compare_blocks_cols), if_then_else(True, -2, 0))), le(if_then_else(le(0, ones_diff_cols), if_then_else(True, -3, 0), if_then_else(False, 2, compare_blocks_rows)), if_then_else(or_(True, False), if_then_else(True, zeros_diff_cols, 1), if_then_else(True, 0, compare_blocks_cols)))), if_then_else(or_(le(if_then_else(True, -4, -5), if_then_else(True, ones_diff_rows, -4)), or_(le(-2, compare_blocks_rows), or_(False, True))), if_then_else(ge(if_then_else(False, 4, -4), if_then_else(False, 3, -4)), if_then_else(le(compare_blocks_rows, -2), if_then_else(False, -5, ones_diff_rows), if_then_else(False, -3, zeros_diff_rows)), if_then_else(le(3, compare_blocks_rows), if_then_else(True, compare_blocks_rows, 0), if_then_else(True, 3, 4))), if_then_else(and_(and_(False, True), le(-1, 3)), if_then_else(or_(True, False), if_then_else(False, -3, -2), if_then_else(True, -3, -4)), if_then_else(le(-5, 4), if_then_else(True, ones_diff_rows, compare_blocks_cols), if_then_else(False, ones_diff_cols, compare_blocks_rows)))), if_then_else(ge(if_then_else(ge(ones_diff_cols, 0), if_then_else(False, compare_blocks_rows, ones_diff_cols), if_then_else(True, 2, 0)), if_then_else(le(-3, -2), if_then_else(False, zeros_diff_cols, ones_diff_cols), if_then_else(True, ones_diff_rows, 3))), if_then_else(or_(le(-3, -5), and_(False, True)), if_then_else(le(-3, 2), if_then_else(True, -5, zeros_diff_cols), if_then_else(True, 1, zeros_diff_rows)), if_then_else(and_(True, False), if_then_else(True, 4, ones_diff_rows), if_then_else(True, ones_diff_cols, 1))), if_then_else(ge(if_then_else(False, zeros_diff_cols, ones_diff_cols), if_then_else(False, compare_blocks_cols, compare_blocks_cols)), if_then_else(le(0, zeros_diff_rows), if_then_else(False, -1, -2), if_then_else(False, -2, -4)), if_then_else(or_(False, False), if_then_else(False, zeros_diff_cols, 0), if_then_else(True, ones_diff_cols, -3)))))), if_then_else(False, -3, 3)))), if_then_else(le(if_then_else(le(-5, -3), if_then_else(False, -2, zeros_diff_cols), if_then_else(False, 0, ones_diff_cols)), if_then_else(ge(2, -4), if_then_else(False, ones_diff_rows, compare_blocks_cols), if_then_else(True, ones_diff_cols, compare_blocks_cols))), if_then_else(or_(le(ones_diff_rows, -2), le(ones_diff_rows, -5)), if_then_else(and_(False, True), if_then_else(True, zeros_diff_rows, compare_blocks_cols), if_then_else(False, zeros_diff_cols, -3)), if_then_else(and_(True, True), if_then_else(True, -5, compare_blocks_cols), if_then_else(True, -2, compare_blocks_rows))), if_then_else(or_(or_(True, False), and_(True, False)), if_then_else(ge(-5, -3), if_then_else(True, 2, zeros_diff_rows), if_then_else(True, 0, -5)), if_then_else(ge(compare_blocks_cols, -2), if_then_else(True, zeros_diff_rows, ones_diff_rows), if_then_else(True, zeros_diff_rows, -2))))), False)))
le(if_then_else(ge(compare_blocks_rows, -5), if_then_else(True, ones_diff_cols, if_then_else(and_(ge(if_then_else(ge(if_then_else(True, ones_diff_cols, -4), if_then_else(True, compare_blocks_cols, 3)), if_then_else(or_(True, True), if_then_else(False, 2, -4), if_then_else(True, 1, 0)), if_then_else(and_(True, False), if_then_else(False, -1, zeros_diff_cols), if_then_else(True, 1, ones_diff_cols))), if_then_else(and_(le(zeros_diff_cols, compare_blocks_cols), and_(True, False)), if_then_else(ge(ones_diff_rows, 3), if_then_else(False, 1, -4), if_then_else(True, ones_diff_rows, ones_diff_rows)), if_then_else(le(2, 0), if_then_else(False, zeros_diff_rows, -4), if_then_else(True, 2, ones_diff_rows)))), ge(if_then_else(or_(ge(-5, 0), le(-1, -2)), if_then_else(le(-4, -5), if_then_else(False, 4, zeros_diff_rows), if_then_else(True, -1, zeros_diff_cols)), if_then_else(ge(-2, 0), if_then_else(True, 0, compare_blocks_cols), if_then_else(False, -4, 2))), if_then_else(and_(and_(False, True), ge(zeros_diff_cols, -3)), if_then_else(or_(True, False), if_then_else(True, -4, compare_blocks_cols), if_then_else(False, 1, -5)), if_then_else(ge(compare_blocks_rows, compare_blocks_cols), if_then_else(False, compare_blocks_rows, ones_diff_rows), if_then_else(False, zeros_diff_cols, -5))))), -5, if_then_else(False, 0, ones_diff_rows))), if_then_else(le(if_then_else(le(0, -2), if_then_else(False, ones_diff_rows, ones_diff_rows), if_then_else(False, 4, if_then_else(True, -5, if_then_else(False, 0, ones_diff_rows)))), if_then_else(or_(False, True), if_then_else(False, ones_diff_rows, -5), if_then_else(True, compare_blocks_rows, ones_diff_rows))), ones_diff_rows, if_then_else(True, 1, zeros_diff_rows))), if_then_else(le(-1, ones_diff_rows), if_then_else(or_(True, False), -4, zeros_diff_rows), if_then_else(False, ones_diff_rows, -2)))
le(if_then_else(and_(le(0, 3), and_(False, True)), if_then_else(le(2, ones_diff_cols), if_then_else(le(if_then_else(le(if_then_else(True, -5, -2), if_then_else(True, zeros_diff_rows, 0)), if_then_else(or_(True, False), if_then_else(False, ones_diff_rows, compare_blocks_rows), if_then_else(False, ones_diff_rows, 1)), if_then_else(and_(False, True), if_then_else(True, 2, zeros_diff_rows), if_then_else(False, zeros_diff_cols, ones_diff_cols))), if_then_else(ge(if_then_else(False, -3, compare_blocks_cols), if_then_else(False, compare_blocks_cols, 0)), if_then_else(le(-3, zeros_diff_cols), if_then_else(False, 2, compare_blocks_rows), if_then_else(True, ones_diff_cols, zeros_diff_cols)), if_then_else(and_(False, False), if_then_else(True, 2, 0), if_then_else(True, 0, -2)))), if_then_else(or_(and_(le(zeros_diff_rows, compare_blocks_cols), or_(False, False)), and_(ge(ones_diff_rows, -5), or_(True, True))), if_then_else(le(if_then_else(False, -2, 1), if_then_else(True, -3, ones_diff_cols)), if_then_else(or_(True, True), if_then_else(False, compare_blocks_cols, ones_diff_cols), if_then_else(True, 4, compare_blocks_rows)), if_then_else(le(zeros_diff_cols, if_then_else(le(if_then_else(True, 1, -5), if_then_else(False, zeros_diff_cols, 3)), if_then_else(ge(-2, 3), if_then_else(False, zeros_diff_cols, zeros_diff_cols), if_then_else(True, -1, -3)), if_then_else(ge(1, -4), if_then_else(True, -4, -4), if_then_else(False, -4, zeros_diff_cols)))), if_then_else(False, 1, 4), if_then_else(False, -1, 1))), if_then_else(and_(or_(False, True), or_(False, True)), if_then_else(and_(le(0, 3), and_(False, True)), if_then_else(False, 0, 4), if_then_else(True, 1, -3)), if_then_else(le(3, ones_diff_rows), if_then_else(False, 2, compare_blocks_cols), if_then_else(False, -5, -2)))), if_then_else(le(if_then_else(and_(True, False), if_then_else(True, -3, 2), if_then_else(False, ones_diff_cols, -4)), if_then_else(le(-2, 0), if_then_else(True, 1, -4), if_then_else(False, -2, -1))), if_then_else(and_(or_(True, False), and_(False, False)), if_then_else(ge(-1, 1), if_then_else(False, ones_diff_cols, 1), if_then_else(False, zeros_diff_rows, 4)), if_then_else(and_(False, True), if_then_else(False, -1, -1), if_then_else(False, -4, 4))), if_then_else(ge(if_then_else(True, ones_diff_cols, ones_diff_rows), if_then_else(True, 1, -4)), if_then_else(and_(True, False), if_then_else(True, 0, -4), if_then_else(True, -3, 1)), if_then_else(or_(False, False), if_then_else(True, ones_diff_cols, -1), if_then_else(True, -1, zeros_diff_cols))))), if_then_else(False, 4, ones_diff_rows)), if_then_else(and_(True, False), if_then_else(False, 2, -4), if_then_else(False, 4, -2))), if_then_else(or_(le(-4, ones_diff_rows), ge(0, -5)), if_then_else(or_(True, False), if_then_else(True, 0, -4), if_then_else(True, ones_diff_rows, -4)), if_then_else(le(compare_blocks_cols, -1), if_then_else(False, ones_diff_rows, zeros_diff_rows), if_then_else(False, ones_diff_rows, -2))))
or_(ge(if_then_else(le(if_then_else(True, -1, ones_diff_rows), if_then_else(False, 1, compare_blocks_cols)), if_then_else(le(-2, -1), if_then_else(False, compare_blocks_cols, -1), if_then_else(True, -1, compare_blocks_rows)), if_then_else(or_(True, False), if_then_else(True, -3, zeros_diff_rows), if_then_else(False, -1, -3))), if_then_else(ge(if_then_else(False, -1, 2), if_then_else(False, 2, 3)), if_then_else(le(1, compare_blocks_cols), if_then_else(False, ones_diff_rows, 0), compare_blocks_rows), if_then_else(ge(ones_diff_rows, compare_blocks_rows), if_then_else(False, zeros_diff_cols, ones_diff_rows), if_then_else(True, if_then_else(le(if_then_else(and_(True, True), if_then_else(True, -3, -4), if_then_else(False, compare_blocks_rows, 3)), if_then_else(ge(0, -3), if_then_else(False, zeros_diff_rows, 3), if_then_else(True, -1, compare_blocks_rows))), if_then_else(le(if_then_else(True, -1, zeros_diff_cols), if_then_else(False, -2, compare_blocks_cols)), if_then_else(and_(True, False), if_then_else(True, zeros_diff_rows, zeros_diff_rows), if_then_else(False, -1, ones_diff_cols)), if_then_else(ge(3, zeros_diff_rows), if_then_else(False, -4, -5), if_then_else(False, -1, -2))), if_then_else(or_(or_(True, True), le(ones_diff_cols, ones_diff_rows)), if_then_else(ge(compare_blocks_cols, -4), if_then_else(False, compare_blocks_rows, compare_blocks_cols), if_then_else(False, 4, 1)), if_then_else(and_(False, True), if_then_else(True, -5, -3), if_then_else(True, 2, -3)))), 4)))), or_(and_(False, False), ge(3, -4)))
VAL TREES:
mul(add(add(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows))), add(add(add(zeros_diff_rows, ones_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(ones_diff_cols, zeros_diff_rows)))
add(mul(ones_diff_cols, mul(compare_blocks_rows, zeros_diff_cols)), add(mul(mul(mul(ones_diff_cols, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)), ones_diff_cols), mul(zeros_diff_rows, add(zeros_diff_cols, ones_diff_rows))))
mul(mul(ones_diff_rows, mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, ones_diff_rows), mul(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)), ones_diff_rows)))
add(mul(compare_blocks_rows, compare_blocks_rows), mul(mul(mul(add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, zeros_diff_rows))), compare_blocks_cols), add(zeros_diff_cols, ones_diff_cols)))
add(mul(mul(add(mul(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, ones_diff_rows)), add(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), mul(add(mul(ones_diff_rows, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows)), compare_blocks_cols)), mul(mul(mul(mul(zeros_diff_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows)), zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_rows)))
mul(add(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), add(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows))), add(zeros_diff_cols, zeros_diff_rows))
COND TREES:
ge(if_then_else(or_(le(if_then_else(False, ones_diff_rows, -4), 3), and_(False, True)), if_then_else(False, 3, -4), if_then_else(and_(False, False), -1, if_then_else(False, -1, if_then_else(False, 2, zeros_diff_rows)))), if_then_else(le(0, if_then_else(ge(-1, -1), 0, compare_blocks_rows)), if_then_else(True, compare_blocks_cols, if_then_else(False, if_then_else(True, 0, -5), if_then_else(False, 3, -2))), if_then_else(True, -5, -3)))
and_(le(if_then_else(True, zeros_diff_cols, if_then_else(False, 0, 3)), compare_blocks_cols), or_(or_(True, False), or_(False, False)))
le(if_then_else(ge(compare_blocks_rows, -5), if_then_else(True, ones_diff_cols, if_then_else(True, -5, if_then_else(False, 0, ones_diff_rows))), if_then_else(ge(compare_blocks_cols, -1), ones_diff_rows, if_then_else(True, 1, zeros_diff_rows))), if_then_else(le(-1, if_then_else(or_(True, False), if_then_else(le(-1, if_then_else(or_(True, False), if_then_else(True, 1, -1), -3)), 1, -1), -3)), if_then_else(or_(True, False), -4, zeros_diff_rows), if_then_else(False, ones_diff_rows, -2)))
le(if_then_else(and_(le(0, 3), and_(False, True)), if_then_else(le(2, ones_diff_cols), if_then_else(False, ones_diff_rows, ones_diff_rows), if_then_else(False, 4, ones_diff_rows)), if_then_else(and_(False, False), if_then_else(False, 2, -4), if_then_else(False, 4, -2))), if_then_else(or_(le(-4, ones_diff_rows), ge(0, -5)), if_then_else(or_(True, False), if_then_else(True, 0, if_then_else(True, 0, compare_blocks_rows)), if_then_else(True, ones_diff_rows, -4)), if_then_else(le(compare_blocks_cols, -1), if_then_else(False, ones_diff_rows, if_then_else(False, 1, 1)), if_then_else(False, ones_diff_rows, -2))))
or_(ge(if_then_else(le(if_then_else(True, -1, ones_diff_rows), if_then_else(False, 1, compare_blocks_cols)), if_then_else(le(-2, -1), -1, if_then_else(True, -1, compare_blocks_rows)), if_then_else(or_(True, False), if_then_else(True, -3, zeros_diff_rows), if_then_else(False, -1, -3))), if_then_else(ge(if_then_else(False, -1, 2), if_then_else(False, 2, 3)), if_then_else(le(1, compare_blocks_cols), if_then_else(False, ones_diff_rows, 0), if_then_else(False, -1, -3)), if_then_else(ge(ones_diff_rows, compare_blocks_rows), if_then_else(False, zeros_diff_cols, ones_diff_rows), if_then_else(True, 1, 4)))), le(if_then_else(and_(le(ones_diff_rows, ones_diff_rows), le(zeros_diff_cols, 2)), if_then_else(or_(True, True), if_then_else(False, 0, 4), if_then_else(True, 0, -1)), if_then_else(or_(True, True), if_then_else(False, 2, ones_diff_cols), if_then_else(True, 2, compare_blocks_cols))), if_then_else(le(if_then_else(True, compare_blocks_cols, 3), if_then_else(False, ones_diff_rows, -4)), if_then_else(le(compare_blocks_cols, zeros_diff_cols), if_then_else(True, 3, 1), if_then_else(False, -5, 0)), if_then_else(or_(False, ge(-1, ones_diff_cols)), if_then_else(False, -2, -3), if_then_else(False, 0, zeros_diff_rows)))))
VAL TREES:
mul(mul(ones_diff_rows, zeros_diff_rows), add(mul(compare_blocks_rows, ones_diff_rows), zeros_diff_rows))
add(mul(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, zeros_diff_rows)), add(mul(mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, add(compare_blocks_rows, zeros_diff_cols))), ones_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)))
mul(mul(add(compare_blocks_rows, ones_diff_cols), mul(add(compare_blocks_rows, zeros_diff_cols), compare_blocks_cols)), add(mul(zeros_diff_cols, compare_blocks_cols), mul(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)), ones_diff_rows)))
add(add(mul(mul(ones_diff_cols, compare_blocks_rows), ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols)), compare_blocks_cols)
add(mul(mul(add(mul(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, mul(add(mul(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols))))), add(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), mul(add(mul(ones_diff_rows, ones_diff_rows), ones_diff_cols), compare_blocks_cols)), mul(mul(mul(mul(zeros_diff_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows))), add(mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows)))))
mul(add(add(mul(ones_diff_cols, compare_blocks_rows), add(add(ones_diff_cols, add(add(zeros_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows))), ones_diff_rows)), add(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows))), add(add(mul(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_cols))))
COND TREES:
ge(if_then_else(or_(le(if_then_else(False, ones_diff_rows, -4), 3), and_(False, True)), if_then_else(False, 3, -4), if_then_else(and_(False, False), -1, if_then_else(False, -1, if_then_else(False, 2, zeros_diff_rows)))), if_then_else(le(0, if_then_else(ge(-1, -1), 0, compare_blocks_rows)), if_then_else(True, compare_blocks_cols, if_then_else(False, if_then_else(True, 0, -5), if_then_else(False, 3, -2))), if_then_else(True, -5, -3)))
and_(le(if_then_else(True, zeros_diff_cols, if_then_else(False, 0, 3)), compare_blocks_cols), or_(or_(True, False), or_(False, False)))
le(if_then_else(ge(compare_blocks_rows, -5), if_then_else(True, ones_diff_cols, if_then_else(True, -5, if_then_else(False, 0, ones_diff_rows))), if_then_else(ge(compare_blocks_cols, -1), ones_diff_rows, if_then_else(True, 1, zeros_diff_rows))), if_then_else(le(-1, if_then_else(or_(True, False), if_then_else(le(-1, if_then_else(or_(True, False), if_then_else(True, 1, -1), -3)), 1, -1), -3)), if_then_else(or_(True, False), -4, zeros_diff_rows), if_then_else(False, ones_diff_rows, -2)))
le(if_then_else(and_(le(0, 3), and_(False, True)), if_then_else(le(2, ones_diff_cols), if_then_else(False, ones_diff_rows, ones_diff_rows), if_then_else(False, 4, ones_diff_rows)), if_then_else(and_(False, False), if_then_else(False, 2, -4), if_then_else(False, 4, -2))), if_then_else(or_(le(-4, ones_diff_rows), ge(0, -5)), if_then_else(or_(True, False), if_then_else(True, 0, if_then_else(True, 0, compare_blocks_rows)), if_then_else(True, ones_diff_rows, -4)), if_then_else(le(compare_blocks_cols, -1), if_then_else(False, ones_diff_rows, if_then_else(False, 1, 1)), if_then_else(False, ones_diff_rows, -2))))
or_(ge(if_then_else(le(if_then_else(True, -1, ones_diff_rows), if_then_else(False, 1, compare_blocks_cols)), if_then_else(le(-2, -1), -1, if_then_else(True, -1, compare_blocks_rows)), if_then_else(or_(True, False), if_then_else(True, -3, zeros_diff_rows), if_then_else(False, -1, -3))), if_then_else(ge(if_then_else(False, -1, 2), if_then_else(False, 2, 3)), if_then_else(le(1, compare_blocks_cols), if_then_else(False, ones_diff_rows, 0), if_then_else(False, -1, -3)), if_then_else(ge(ones_diff_rows, compare_blocks_rows), if_then_else(False, zeros_diff_cols, ones_diff_rows), if_then_else(True, 1, 4)))), le(if_then_else(and_(le(ones_diff_rows, ones_diff_rows), le(zeros_diff_cols, 2)), if_then_else(or_(True, True), if_then_else(False, 0, 4), if_then_else(True, 0, -1)), if_then_else(or_(True, True), if_then_else(False, 2, ones_diff_cols), if_then_else(True, 2, compare_blocks_cols))), if_then_else(le(if_then_else(True, compare_blocks_cols, 3), if_then_else(False, ones_diff_rows, -4)), if_then_else(le(compare_blocks_cols, zeros_diff_cols), if_then_else(True, 3, 1), if_then_else(False, -5, 0)), if_then_else(or_(False, ge(-1, ones_diff_cols)), if_then_else(False, -2, -3), if_then_else(False, 0, zeros_diff_rows)))))
VAL TREES:
mul(mul(ones_diff_rows, zeros_diff_rows), add(add(add(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)), zeros_diff_rows))
add(mul(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, zeros_diff_rows)), add(mul(mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)))
mul(mul(add(compare_blocks_rows, ones_diff_cols), mul(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)), ones_diff_rows)))
add(add(mul(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows)), mul(compare_blocks_rows, ones_diff_cols)), compare_blocks_cols)
add(mul(mul(add(mul(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, mul(add(mul(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols))))), add(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), mul(add(mul(ones_diff_rows, ones_diff_rows), ones_diff_cols), compare_blocks_cols)), mul(mul(mul(mul(zeros_diff_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows))), add(mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows)))))
mul(add(add(mul(ones_diff_cols, compare_blocks_rows), add(add(ones_diff_cols, add(add(zeros_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows))), ones_diff_rows)), add(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows))), add(add(mul(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_rows)), add(add(zeros_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_cols))))
COND TREES:
ge(if_then_else(or_(le(if_then_else(False, ones_diff_rows, -4), 3), and_(False, True)), if_then_else(False, 3, -4), if_then_else(and_(False, False), -1, if_then_else(False, -1, if_then_else(False, 2, zeros_diff_rows)))), if_then_else(le(0, if_then_else(ge(-1, -1), 0, compare_blocks_rows)), if_then_else(True, compare_blocks_cols, if_then_else(False, if_then_else(True, 0, -5), if_then_else(False, 3, -2))), if_then_else(True, -5, -3)))
and_(le(if_then_else(True, zeros_diff_cols, if_then_else(False, 0, 3)), compare_blocks_cols), or_(or_(True, False), or_(False, False)))
le(if_then_else(ge(compare_blocks_rows, -5), if_then_else(True, ones_diff_cols, if_then_else(True, -5, if_then_else(False, 0, ones_diff_rows))), if_then_else(ge(compare_blocks_cols, -1), ones_diff_rows, if_then_else(True, 1, zeros_diff_rows))), if_then_else(le(-1, if_then_else(or_(True, False), if_then_else(le(-1, if_then_else(or_(True, False), if_then_else(True, 1, -1), -3)), 1, -1), -3)), if_then_else(or_(True, False), -4, zeros_diff_rows), if_then_else(False, ones_diff_rows, -2)))
le(if_then_else(and_(le(0, 3), and_(False, True)), if_then_else(le(2, ones_diff_cols), if_then_else(False, ones_diff_rows, ones_diff_rows), if_then_else(False, 4, ones_diff_rows)), if_then_else(and_(False, False), if_then_else(False, 2, -4), if_then_else(False, 4, -2))), if_then_else(or_(le(-4, ones_diff_rows), ge(0, -5)), if_then_else(or_(True, False), if_then_else(True, 0, if_then_else(True, 0, compare_blocks_rows)), if_then_else(True, ones_diff_rows, -4)), if_then_else(le(compare_blocks_cols, -1), if_then_else(False, ones_diff_rows, if_then_else(False, 1, 1)), if_then_else(False, ones_diff_rows, -2))))
or_(ge(if_then_else(le(if_then_else(True, -1, ones_diff_rows), if_then_else(False, 1, compare_blocks_cols)), if_then_else(le(-2, -1), -1, if_then_else(True, -1, compare_blocks_rows)), if_then_else(or_(True, False), if_then_else(True, -3, zeros_diff_rows), if_then_else(False, -1, -3))), if_then_else(ge(if_then_else(False, -1, 2), if_then_else(False, 2, 3)), if_then_else(le(1, compare_blocks_cols), if_then_else(False, ones_diff_rows, 0), if_then_else(False, -1, -3)), if_then_else(ge(ones_diff_rows, compare_blocks_rows), if_then_else(False, zeros_diff_cols, ones_diff_rows), if_then_else(True, 1, 4)))), le(if_then_else(and_(le(ones_diff_rows, ones_diff_rows), le(zeros_diff_cols, 2)), if_then_else(or_(True, True), if_then_else(False, 0, 4), if_then_else(True, 0, -1)), if_then_else(or_(True, True), if_then_else(False, 2, ones_diff_cols), if_then_else(True, 2, compare_blocks_cols))), if_then_else(le(if_then_else(True, compare_blocks_cols, 3), if_then_else(False, ones_diff_rows, -4)), if_then_else(le(compare_blocks_cols, zeros_diff_cols), if_then_else(True, 3, 1), if_then_else(False, -5, 0)), if_then_else(or_(False, ge(-1, ones_diff_cols)), if_then_else(False, -2, -3), if_then_else(False, 0, zeros_diff_rows)))))
VAL TREES:
mul(mul(ones_diff_rows, zeros_diff_rows), add(add(add(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)), zeros_diff_rows))
add(mul(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, zeros_diff_rows)), add(mul(mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)))
mul(mul(add(compare_blocks_rows, ones_diff_cols), mul(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_rows))), add(mul(zeros_diff_cols, compare_blocks_cols), mul(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)), ones_diff_rows)))
add(add(mul(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows)), mul(compare_blocks_rows, ones_diff_cols)), compare_blocks_cols)
add(mul(mul(add(mul(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, mul(add(mul(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols))))), add(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), mul(add(mul(ones_diff_rows, ones_diff_rows), ones_diff_cols), compare_blocks_cols)), mul(mul(mul(mul(zeros_diff_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows))), add(mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows)))))
mul(add(add(mul(ones_diff_cols, compare_blocks_rows), add(add(ones_diff_cols, add(add(zeros_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows))), ones_diff_rows)), add(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows))), add(add(mul(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_rows)), add(add(zeros_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_cols))))


INFO:root:hof: COND TREES:
le(if_then_else(and_(False, ge(1, -1)), if_then_else(False, -2, -1), if_then_else(or_(False, False), 3, compare_blocks_rows)), if_then_else(and_(ge(ones_diff_cols, 1), False), if_then_else(True, -5, compare_blocks_rows), if_then_else(True, 3, zeros_diff_cols)))
ge(if_then_else(or_(False, True), if_then_else(False, 0, 3), if_then_else(False, ones_diff_rows, zeros_diff_rows)), if_then_else(or_(True, True), if_then_else(True, ones_diff_rows, -2), if_then_else(True, ones_diff_rows, 0)))
or_(ge(if_then_else(False, -5, -5), if_then_else(True, 3, 1)), ge(if_then_else(True, -4, compare_blocks_rows), if_then_else(True, 2, -3)))
or_(ge(if_then_else(True, 0, compare_blocks_rows), if_then_else(False, 2, 4)), le(if_then_else(True, 1, 4), if_then_else(False, -1, zeros_diff_cols)))
le(if_then_else(or_(or_(False, True), or_(True, True)), if_then_else(ge(zeros_diff_cols, -5), if_then_else(False, ones_diff_rows, 0), if_then_else(False, -4, -5)), if_then_else(le(0, zeros_diff_cols), if_then_else(False, 2, ones_diff_cols), if_then_else(True, 1, 1))), if_then_else(and_(and_(False, True), or_(False, True)), if_then_else(ge(ones_diff_rows, 0), if_then_else(True, -3, zeros_diff_cols), if_then_else(True, zeros_diff_rows, -3)), if_then_else(ge(1, ones_diff_cols), if_then_else(False, zeros_diff_rows, -3), if_then_else(False, zeros_diff_cols, -1))))
VAL TREES:
add(mul(add(add(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols)), mul(mul(ones_diff_rows, ones_diff_rows), add(compare_blocks_rows, compare_blocks_rows))), mul(mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_cols, ones_diff_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_rows)))), mul(add(add(add(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_cols))), add(add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, zeros_diff_cols)), add(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, ones_diff_rows)))))
mul(mul(add(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, zeros_diff_cols)))
mul(add(mul(zeros_diff_cols, mul(zeros_diff_cols, zeros_diff_cols)), mul(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)))
mul(add(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, compare_blocks_cols)), add(add(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)))
add(mul(mul(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_cols, add(ones_diff_rows, ones_diff_rows))), add(mul(compare_blocks_cols, zeros_diff_cols), mul(add(compare_blocks_rows, zeros_diff_rows), ones_diff_rows)))
mul(add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_cols)), mul(mul(add(zeros_diff_rows, compare_blocks_cols), compare_blocks_cols), mul(compare_blocks_cols, add(compare_blocks_cols, zeros_diff_rows))))


INFO:root:stats: {'fitness': <deap.tools.support.Statistics object at 0x0000028567440E48>, 'size': <deap.tools.support.Statistics object at 0x0000028567440E80>}

