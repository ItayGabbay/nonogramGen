INFO:root:

*******STARTING!!!******


INFO:root:

*******Configuration******


INFO:root:# NUM_ROWS = 20


INFO:root:NUM_ROWS = 5


INFO:root:# NUM_COLS = 20


INFO:root:NUM_COLS = 5


INFO:root:empty_in_split = '\xa0'


INFO:root:


INFO:root:pickle_unsolved_file_path = 'data/%dx%d_nonograms.pkl' % (NUM_ROWS, NUM_COLS)


INFO:root:pickle_solved_file_path = 'data/%dx%d_nonograms_solved.pkl' % (NUM_ROWS, NUM_COLS)


INFO:root:should_run_in_parallel = True


INFO:root:


INFO:root:NUM_COND_TREES = 5


INFO:root:NUM_VAL_TREES = NUM_COND_TREES + 1


INFO:root:prob_crossover_global = 0.7  # global probability for cx


INFO:root:prob_crossover_individual_cond = 0.8  # probability to cx a specific cond tree in an individual


INFO:root:prob_crossover_individual_val = 0.8  # probability to cx a specific cond tree in an individual


INFO:root:prob_mutate_global = 0.2


INFO:root:prob_mutate_individual_cond = 0.5


INFO:root:prob_mutate_individual_val = 0.5


INFO:root:


INFO:root:points_correct_box = 5


INFO:root:points_incorrect_box = 0


INFO:root:# points_incorrect_box = -2


INFO:root:pop_size = 50


INFO:root:hof_size = 1


INFO:root:# num_gen = 40


INFO:root:num_gen = 10


INFO:root:train_size = 3


INFO:root:

*******DONE!!!******


INFO:root:run time: 44 sec

INFO:root:max possible fitness for the nonograms ran: 70

INFO:root:log:    	      	              fitness              	              size              
   	      	-----------------------------------	--------------------------------
gen	nevals	avg    	max    	min    	std        	avg 	max	min	std     
0  	50    	41.6667	41.6667	41.6667	7.10543e-15	7.42	8  	7  	0.493559
1  	37    	43.5667	60     	35     	5.79281    	7.78	11 	7  	0.965194
2  	32    	45.5667	60     	35     	7.2235     	7.86	11 	7  	0.938296
3  	38    	48.6   	60     	38.3333	7.81992    	8.06	10 	7  	0.858138
4  	40    	48     	60     	35     	8.15135    	8.08	11 	7  	0.955824
5  	34    	49.0333	60     	35     	7.4914     	8.06	10 	7  	0.858138
6  	38    	51.7667	60     	36.6667	6.9395     	8.06	11 	7  	0.925419
7  	38    	51.7333	60     	35     	7.33303    	8.04	11 	7  	0.915642
8  	41    	52.3   	60     	35     	6.55651    	8.16	11 	7  	0.966644
9  	40    	52.1333	60     	35     	6.63358    	8.18	11 	7  	0.84119 
10 	39    	51.8333	60     	35     	6.37922    	8.32	10 	7  	0.926067

INFO:root:pop: COND TREES:
and_(le(_if_then_else(ge(max_col_clue, max_row_clue), _if_then_else(True, 1, 0), _if_then_else(True, max_row_clue, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, max_row_clue, compare_blocks_rows), _if_then_else(False, 1, ones_diff_cols))), and_(and_(False, True), ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, max_col_clue, 4))))
and_(and_(True, ge(zeros_diff_rows, compare_blocks_rows)), False)
ge(_if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, 3)), _if_then_else(or_(True, and_(ge(compare_blocks_rows, 3), and_(False, False))), _if_then_else(False, 3, ones_diff_cols), _if_then_else(or_(le(ones_diff_cols, zeros_diff_rows), ge(1, _if_then_else(True, zeros_diff_rows, compare_blocks_rows))), compare_blocks_cols, compare_blocks_rows)))
le(_if_then_else(le(max_col_clue, max_row_clue), _if_then_else(False, max_col_clue, ones_diff_cols), zeros_diff_rows), _if_then_else(True, _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, 4, 2)))
or_(and_(ge(max_row_clue, _if_then_else(False, ones_diff_rows, ones_diff_rows)), ge(3, zeros_diff_cols)), or_(and_(False, True), or_(True, or_(True, True))))
VAL TREES:
add(add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols)), add(mul(zeros_diff_rows, mul(compare_blocks_rows, compare_blocks_rows)), add(compare_blocks_rows, mul(zeros_diff_cols, zeros_diff_cols))))
add(mul(mul(mul(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)), add(compare_blocks_cols, ones_diff_rows)))
mul(mul(mul(zeros_diff_cols, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)))
mul(add(add(zeros_diff_cols, mul(ones_diff_rows, mul(compare_blocks_rows, zeros_diff_cols))), mul(ones_diff_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, mul(zeros_diff_cols, compare_blocks_cols)), mul(ones_diff_cols, ones_diff_rows)))
add(mul(add(add(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_cols))), mul(add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), add(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_rows))))
COND TREES:
and_(le(ones_diff_cols, _if_then_else(or_(True, True), _if_then_else(False, max_row_clue, 1), _if_then_else(False, 1, ones_diff_cols))), and_(and_(le(max_col_clue, compare_blocks_cols), ge(max_col_clue, max_row_clue)), ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, max_col_clue, 4))))
and_(and_(True, ge(zeros_diff_rows, compare_blocks_rows)), ge(_if_then_else(and_(False, True), _if_then_else(False, ones_diff_rows, compare_blocks_rows), _if_then_else(False, zeros_diff_cols, max_row_clue)), _if_then_else(ge(zeros_diff_rows, 3), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols))))
ge(_if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, 3)), _if_then_else(or_(True, and_(ge(compare_blocks_rows, 3), and_(False, ge(4, 1)))), _if_then_else(and_(True, False), _if_then_else(False, ones_diff_cols, 0), _if_then_else(True, 2, ones_diff_cols)), _if_then_else(or_(le(ones_diff_cols, zeros_diff_rows), ge(1, _if_then_else(True, zeros_diff_rows, compare_blocks_rows))), compare_blocks_cols, compare_blocks_rows)))
le(_if_then_else(le(max_col_clue, max_row_clue), _if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(le(_if_then_else(False, ones_diff_cols, 4), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), _if_then_else(True, _if_then_else(True, 4, 1), _if_then_else(True, 4, compare_blocks_cols)), _if_then_else(and_(False, False), _if_then_else(False, 0, max_row_clue), _if_then_else(False, 3, 2)))), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, 4, 2)))
or_(and_(False, ge(3, ones_diff_rows)), or_(and_(False, True), or_(True, or_(True, True))))
VAL TREES:
add(add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols)), add(mul(zeros_diff_rows, mul(compare_blocks_rows, compare_blocks_rows)), add(compare_blocks_rows, mul(zeros_diff_cols, zeros_diff_cols))))
add(mul(mul(mul(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)), add(compare_blocks_cols, ones_diff_rows)))
mul(mul(mul(zeros_diff_cols, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)))
mul(add(add(zeros_diff_cols, mul(ones_diff_rows, mul(compare_blocks_rows, zeros_diff_cols))), mul(ones_diff_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, mul(zeros_diff_cols, compare_blocks_cols)), mul(ones_diff_cols, ones_diff_rows)))
add(mul(add(add(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_cols))), mul(add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), add(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_rows))))
COND TREES:
or_(and_(or_(or_(True, True), or_(True, False)), ge(_if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, zeros_diff_cols))), le(_if_then_else(and_(True, True), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, ones_diff_cols, max_row_clue)), _if_then_else(or_(True, True), _if_then_else(True, 0, max_row_clue), _if_then_else(True, ones_diff_cols, 0))))
or_(le(_if_then_else(True, _if_then_else(ge(_if_then_else(le(3, _if_then_else(ge(3, zeros_diff_cols), ones_diff_cols, compare_blocks_rows)), _if_then_else(True, _if_then_else(True, _if_then_else(False, compare_blocks_cols, 2), 1), max_col_clue), _if_then_else(False, max_col_clue, 3)), _if_then_else(and_(True, True), _if_then_else(or_(and_(False, False), le(ones_diff_rows, max_row_clue)), ones_diff_cols, 4), _if_then_else(False, max_row_clue, ones_diff_cols))), zeros_diff_rows, zeros_diff_rows), 2), ones_diff_rows), True)
or_(le(max_col_clue, _if_then_else(and_(ge(max_row_clue, compare_blocks_rows), or_(True, False)), _if_then_else(le(3, 4), _if_then_else(True, 0, compare_blocks_rows), _if_then_else(True, ones_diff_rows, 0)), _if_then_else(and_(False, False), _if_then_else(False, 2, ones_diff_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_rows)))), False)
or_(le(_if_then_else(and_(and_(False, False), and_(True, False)), _if_then_else(le(max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 1, 2)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows))), _if_then_else(le(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(False, _if_then_else(False, 0, compare_blocks_rows), compare_blocks_rows), _if_then_else(False, zeros_diff_rows, max_col_clue)), _if_then_else(or_(le(zeros_diff_cols, zeros_diff_rows), True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 2, 0)))), and_(ge(_if_then_else(ge(compare_blocks_rows, zeros_diff_cols), _if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(compare_blocks_rows, ones_diff_rows), _if_then_else(False, 1, zeros_diff_cols), _if_then_else(False, ones_diff_rows, 4))), le(_if_then_else(False, _if_then_else(and_(le(_if_then_else(False, max_row_clue, 4), _if_then_else(True, max_row_clue, max_row_clue)), or_(ge(compare_blocks_rows, ones_diff_rows), and_(True, False))), zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 2, 4)), _if_then_else(and_(False, False), _if_then_else(and_(False, False), ones_diff_cols, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_cols)))))
or_(or_(and_(True, False), le(_if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), compare_blocks_cols), ones_diff_rows)), False)
VAL TREES:
mul(mul(add(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), mul(add(ones_diff_rows, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows)))
add(add(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)), add(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)))
add(mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), mul(compare_blocks_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_rows)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)))
add(add(add(add(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows))), mul(mul(add(ones_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))))
add(add(add(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, zeros_diff_rows), mul(mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(ones_diff_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_rows)))))
COND TREES:
and_(le(ones_diff_cols, _if_then_else(or_(True, True), _if_then_else(False, max_row_clue, 1), _if_then_else(False, 1, ones_diff_cols))), and_(and_(le(max_col_clue, compare_blocks_cols), ge(max_col_clue, max_row_clue)), ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, max_col_clue, 4))))
and_(and_(True, ge(zeros_diff_rows, compare_blocks_rows)), ge(_if_then_else(and_(False, True), _if_then_else(False, ones_diff_rows, compare_blocks_rows), _if_then_else(False, zeros_diff_cols, max_row_clue)), _if_then_else(ge(zeros_diff_rows, 3), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols))))
ge(_if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, 3)), _if_then_else(or_(True, and_(ge(compare_blocks_rows, 3), and_(False, ge(4, 1)))), _if_then_else(and_(True, False), _if_then_else(False, ones_diff_cols, 0), _if_then_else(True, 2, ones_diff_cols)), _if_then_else(or_(le(ones_diff_cols, zeros_diff_rows), ge(1, _if_then_else(True, zeros_diff_rows, compare_blocks_rows))), compare_blocks_cols, compare_blocks_rows)))
le(_if_then_else(le(max_col_clue, max_row_clue), _if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(le(_if_then_else(False, ones_diff_cols, 4), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), _if_then_else(True, _if_then_else(True, 4, 1), _if_then_else(True, 4, compare_blocks_cols)), _if_then_else(and_(False, False), _if_then_else(False, 0, max_row_clue), _if_then_else(False, 3, 2)))), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, 4, 2)))
or_(and_(False, ge(3, ones_diff_rows)), or_(and_(False, True), or_(True, or_(True, True))))
VAL TREES:
add(add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols)), add(mul(zeros_diff_rows, mul(compare_blocks_rows, compare_blocks_rows)), add(compare_blocks_rows, mul(zeros_diff_cols, zeros_diff_cols))))
add(mul(mul(mul(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)), add(compare_blocks_cols, ones_diff_rows)))
mul(mul(mul(zeros_diff_cols, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)))
mul(add(add(zeros_diff_cols, mul(ones_diff_rows, mul(compare_blocks_rows, zeros_diff_cols))), mul(ones_diff_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, mul(zeros_diff_cols, compare_blocks_cols)), mul(ones_diff_cols, ones_diff_rows)))
add(mul(add(add(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_cols))), mul(add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), add(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_rows))))
COND TREES:
or_(and_(or_(or_(True, True), or_(True, False)), ge(compare_blocks_rows, _if_then_else(False, _if_then_else(False, 1, ones_diff_cols), zeros_diff_cols))), le(_if_then_else(and_(False, True), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, ones_diff_cols, max_row_clue)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(True, ones_diff_cols, 0))))
or_(le(_if_then_else(True, _if_then_else(False, zeros_diff_rows, zeros_diff_rows), 2), _if_then_else(or_(False, True), _if_then_else(False, 1, 3), compare_blocks_cols)), ge(_if_then_else(le(compare_blocks_cols, 3), 2, _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(True, _if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(False, compare_blocks_cols, 1))))
or_(le(_if_then_else(le(compare_blocks_rows, zeros_diff_cols), 0, 2), _if_then_else(True, zeros_diff_rows, 2)), False)
or_(le(_if_then_else(and_(and_(False, False), and_(True, False)), _if_then_else(le(max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, max_col_clue, 2)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows))), _if_then_else(le(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(False, 0, compare_blocks_rows), _if_then_else(False, ones_diff_rows, max_col_clue)), _if_then_else(or_(le(zeros_diff_cols, zeros_diff_rows), True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 2, 0)))), and_(ge(_if_then_else(ge(compare_blocks_rows, zeros_diff_cols), _if_then_else(and_(True, True), _if_then_else(False, 0, max_col_clue), _if_then_else(True, max_col_clue, ones_diff_rows)), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(compare_blocks_rows, ones_diff_rows), _if_then_else(False, 1, zeros_diff_cols), _if_then_else(False, ones_diff_rows, 4))), le(_if_then_else(and_(False, True), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 2, 4)), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_cols)))))
or_(or_(and_(True, False), le(_if_then_else(False, _if_then_else(False, zeros_diff_rows, _if_then_else(True, 4, compare_blocks_rows)), ones_diff_rows), ones_diff_rows)), or_(le(max_row_clue, _if_then_else(False, ones_diff_rows, 4)), ge(max_col_clue, _if_then_else(True, 0, 0))))
VAL TREES:
mul(mul(add(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), mul(add(ones_diff_rows, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows)))
mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(mul(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)))
add(mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), mul(compare_blocks_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_rows)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)))
add(add(add(add(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows))), mul(mul(add(ones_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))))
add(add(add(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))
COND TREES:
and_(le(_if_then_else(ge(max_col_clue, max_row_clue), _if_then_else(True, 1, 0), _if_then_else(True, max_row_clue, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, max_row_clue, compare_blocks_rows), _if_then_else(False, 1, ones_diff_cols))), and_(and_(False, ge(compare_blocks_rows, ones_diff_cols)), ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, max_col_clue, 4))))
and_(and_(True, ge(zeros_diff_rows, compare_blocks_rows)), False)
ge(_if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, 3)), _if_then_else(or_(True, and_(ge(compare_blocks_rows, 3), and_(False, True))), _if_then_else(False, 3, ones_diff_cols), _if_then_else(or_(le(ones_diff_cols, zeros_diff_rows), ge(1, _if_then_else(True, zeros_diff_rows, compare_blocks_rows))), compare_blocks_cols, compare_blocks_rows)))
le(_if_then_else(le(max_col_clue, max_row_clue), _if_then_else(False, max_col_clue, ones_diff_cols), zeros_diff_rows), _if_then_else(True, _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, ones_diff_rows, 2)))
or_(and_(ge(max_row_clue, _if_then_else(False, ones_diff_rows, ones_diff_rows)), or_(False, True)), or_(and_(False, True), or_(True, or_(True, True))))
VAL TREES:
add(add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols)), add(mul(zeros_diff_rows, mul(compare_blocks_rows, compare_blocks_rows)), add(compare_blocks_rows, mul(zeros_diff_cols, zeros_diff_cols))))
add(mul(mul(mul(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)), add(compare_blocks_cols, ones_diff_rows)))
mul(mul(mul(zeros_diff_cols, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)))
mul(add(add(zeros_diff_cols, mul(ones_diff_rows, mul(compare_blocks_rows, zeros_diff_cols))), mul(ones_diff_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, mul(zeros_diff_cols, compare_blocks_cols)), mul(ones_diff_cols, ones_diff_rows)))
add(mul(add(add(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_cols))), mul(add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), add(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_rows))))
COND TREES:
and_(le(_if_then_else(ge(max_col_clue, max_row_clue), _if_then_else(or_(True, False), 1, 0), _if_then_else(True, max_row_clue, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, max_row_clue, compare_blocks_rows), _if_then_else(False, 1, ones_diff_cols))), and_(and_(le(max_col_clue, compare_blocks_cols), ge(_if_then_else(True, max_row_clue, zeros_diff_rows), max_row_clue)), ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, max_col_clue, 4))))
and_(True, True)
ge(_if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, 3)), _if_then_else(or_(True, and_(ge(compare_blocks_rows, 3), and_(False, ge(4, 1)))), _if_then_else(False, 3, ones_diff_cols), _if_then_else(or_(le(ones_diff_cols, zeros_diff_rows), ge(_if_then_else(le(compare_blocks_rows, zeros_diff_cols), 0, _if_then_else(or_(le(ones_diff_cols, zeros_diff_rows), ge(1, _if_then_else(True, zeros_diff_rows, compare_blocks_rows))), compare_blocks_cols, compare_blocks_rows)), _if_then_else(True, zeros_diff_rows, compare_blocks_rows))), compare_blocks_cols, compare_blocks_rows)))
le(_if_then_else(le(max_col_clue, max_row_clue), _if_then_else(False, max_col_clue, _if_then_else(False, 1, zeros_diff_cols)), zeros_diff_rows), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_rows, _if_then_else(le(max_col_clue, max_row_clue), _if_then_else(False, max_col_clue, ones_diff_cols), zeros_diff_rows)), _if_then_else(False, 4, 2)))
or_(and_(ge(max_row_clue, _if_then_else(False, 3, max_col_clue)), ge(3, zeros_diff_cols)), or_(and_(False, True), or_(True, or_(le(max_row_clue, _if_then_else(False, ones_diff_rows, 4)), True))))
VAL TREES:
add(add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols)), add(mul(zeros_diff_rows, mul(compare_blocks_rows, compare_blocks_rows)), add(compare_blocks_rows, mul(zeros_diff_cols, zeros_diff_cols))))
add(mul(mul(mul(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)), add(compare_blocks_cols, ones_diff_rows)))
mul(mul(mul(zeros_diff_cols, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)))
mul(add(add(zeros_diff_cols, mul(ones_diff_rows, mul(compare_blocks_rows, zeros_diff_cols))), mul(ones_diff_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, mul(zeros_diff_cols, compare_blocks_cols)), mul(ones_diff_cols, ones_diff_rows)))
add(mul(add(add(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_cols))), mul(add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), add(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_rows))))
COND TREES:
and_(le(_if_then_else(ge(max_col_clue, max_row_clue), _if_then_else(True, 1, 0), max_col_clue), _if_then_else(or_(True, True), ones_diff_cols, _if_then_else(False, 1, ones_diff_cols))), and_(and_(le(max_col_clue, compare_blocks_cols), ge(max_col_clue, max_row_clue)), ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, max_col_clue, 4))))
and_(and_(True, ge(zeros_diff_rows, _if_then_else(True, _if_then_else(False, zeros_diff_rows, _if_then_else(le(max_col_clue, zeros_diff_rows), _if_then_else(and_(True, ge(zeros_diff_rows, compare_blocks_rows)), ones_diff_rows, 0), _if_then_else(True, _if_then_else(False, 1, 0), zeros_diff_rows))), 2))), True)
ge(_if_then_else(or_(False, True), _if_then_else(and_(False, True), _if_then_else(True, _if_then_else(False, compare_blocks_rows, compare_blocks_rows), ones_diff_rows), _if_then_else(False, 4, compare_blocks_cols)), _if_then_else(False, zeros_diff_rows, 3)), _if_then_else(or_(True, and_(ge(compare_blocks_rows, 3), and_(False, ge(4, 1)))), _if_then_else(False, 3, ones_diff_cols), 2))
le(zeros_diff_rows, _if_then_else(or_(True, True), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, 4, 2)))
or_(and_(or_(True, ge(zeros_diff_cols, _if_then_else(True, 0, 0))), ge(3, zeros_diff_cols)), or_(and_(False, True), or_(True, or_(True, True))))
VAL TREES:
add(add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols)), add(mul(zeros_diff_rows, mul(compare_blocks_rows, compare_blocks_rows)), add(compare_blocks_rows, mul(zeros_diff_cols, zeros_diff_cols))))
add(mul(mul(mul(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)), add(compare_blocks_cols, ones_diff_rows)))
mul(mul(mul(zeros_diff_cols, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)))
mul(add(add(zeros_diff_cols, mul(ones_diff_rows, mul(compare_blocks_rows, zeros_diff_cols))), mul(ones_diff_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, mul(zeros_diff_cols, compare_blocks_cols)), mul(ones_diff_cols, ones_diff_rows)))
add(mul(add(add(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_cols))), mul(add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), add(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_rows))))
COND TREES:
or_(and_(or_(or_(True, True), or_(True, False)), ge(_if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, zeros_diff_cols))), le(_if_then_else(and_(True, True), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, ones_diff_cols, max_row_clue)), _if_then_else(or_(True, True), _if_then_else(True, 0, max_row_clue), _if_then_else(True, ones_diff_cols, 0))))
or_(le(_if_then_else(True, _if_then_else(False, zeros_diff_rows, zeros_diff_rows), 2), ones_diff_rows), True)
or_(le(max_col_clue, zeros_diff_cols), False)
or_(le(_if_then_else(and_(and_(False, False), and_(True, False)), _if_then_else(le(max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 1, 2)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows))), _if_then_else(le(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(False, _if_then_else(False, 0, compare_blocks_rows), compare_blocks_rows), _if_then_else(False, zeros_diff_rows, max_col_clue)), _if_then_else(or_(le(zeros_diff_cols, zeros_diff_rows), True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 2, 0)))), and_(ge(_if_then_else(ge(compare_blocks_rows, zeros_diff_cols), _if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(compare_blocks_rows, ones_diff_rows), _if_then_else(False, 1, zeros_diff_cols), _if_then_else(False, ones_diff_rows, 4))), le(_if_then_else(False, _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 2, 4)), _if_then_else(and_(False, False), _if_then_else(and_(False, False), ones_diff_cols, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_cols)))))
or_(or_(and_(True, False), le(_if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), compare_blocks_cols), ones_diff_rows)), False)
VAL TREES:
mul(mul(add(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), mul(add(ones_diff_rows, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows)))
add(add(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)), add(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)))
add(mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), mul(compare_blocks_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_rows)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)))
add(add(add(add(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows))), mul(mul(add(ones_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))))
add(add(add(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, zeros_diff_rows), mul(mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(ones_diff_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_rows)))))
COND TREES:
and_(le(_if_then_else(ge(max_col_clue, max_row_clue), _if_then_else(True, 1, 0), _if_then_else(True, max_row_clue, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(False, max_row_clue, compare_blocks_rows), ones_diff_cols)), and_(and_(False, True), ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, max_col_clue, 4))))
and_(and_(True, ge(zeros_diff_rows, ones_diff_cols)), False)
ge(_if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, 3)), _if_then_else(or_(True, and_(ge(compare_blocks_rows, 3), and_(False, False))), _if_then_else(False, 3, ones_diff_cols), _if_then_else(or_(False, ge(1, _if_then_else(True, zeros_diff_rows, compare_blocks_rows))), compare_blocks_cols, compare_blocks_rows)))
le(_if_then_else(le(1, max_row_clue), _if_then_else(False, max_col_clue, ones_diff_cols), zeros_diff_rows), _if_then_else(True, _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, 4, 2)))
or_(and_(ge(max_row_clue, _if_then_else(False, ones_diff_rows, ones_diff_rows)), ge(3, zeros_diff_cols)), or_(and_(False, True), or_(True, or_(or_(and_(False, True), or_(and_(True, False), or_(True, True))), True))))
VAL TREES:
add(add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols)), add(mul(zeros_diff_rows, mul(mul(mul(add(mul(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, ones_diff_cols)), mul(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, compare_blocks_cols))), mul(mul(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)))), add(add(mul(add(zeros_diff_cols, ones_diff_rows), add(compare_blocks_cols, compare_blocks_rows)), add(add(ones_diff_cols, ones_diff_cols), add(ones_diff_rows, ones_diff_rows))), mul(mul(add(ones_diff_cols, zeros_diff_rows), mul(ones_diff_cols, zeros_diff_rows)), mul(mul(compare_blocks_rows, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_rows)))))), add(compare_blocks_rows, mul(zeros_diff_cols, zeros_diff_cols))))
add(mul(mul(mul(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(mul(add(add(add(mul(compare_blocks_rows, zeros_diff_rows), compare_blocks_rows), compare_blocks_rows), mul(ones_diff_cols, ones_diff_rows)), mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_cols))), compare_blocks_cols)), add(compare_blocks_cols, ones_diff_rows)))
mul(mul(mul(zeros_diff_cols, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(mul(add(mul(mul(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_rows)), mul(compare_blocks_rows, mul(zeros_diff_rows, compare_blocks_cols))), mul(mul(mul(compare_blocks_rows, zeros_diff_rows), compare_blocks_cols), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)))), zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)))
mul(add(add(zeros_diff_cols, mul(ones_diff_rows, mul(compare_blocks_rows, zeros_diff_cols))), mul(ones_diff_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, mul(zeros_diff_cols, compare_blocks_cols)), mul(ones_diff_cols, ones_diff_rows)))
add(mul(add(add(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_rows)), add(mul(add(zeros_diff_rows, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, compare_blocks_cols)))), mul(add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), add(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_rows))))
COND TREES:
and_(le(ones_diff_cols, _if_then_else(or_(True, True), _if_then_else(False, max_row_clue, 1), _if_then_else(False, 1, ones_diff_cols))), and_(and_(le(max_col_clue, compare_blocks_cols), ge(max_col_clue, max_row_clue)), ge(_if_then_else(True, ones_diff_cols, max_col_clue), max_col_clue)))
and_(and_(True, ge(zeros_diff_rows, compare_blocks_rows)), ge(_if_then_else(and_(False, True), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, zeros_diff_cols, max_row_clue)), _if_then_else(ge(zeros_diff_rows, 3), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols))))
ge(_if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, 3)), _if_then_else(or_(True, and_(ge(compare_blocks_rows, 3), and_(False, ge(4, 1)))), _if_then_else(and_(True, False), _if_then_else(False, ones_diff_cols, 0), _if_then_else(True, 2, ones_diff_cols)), _if_then_else(or_(le(ones_diff_cols, zeros_diff_rows), ge(1, _if_then_else(True, zeros_diff_rows, compare_blocks_rows))), compare_blocks_cols, compare_blocks_rows)))
le(_if_then_else(le(max_col_clue, max_row_clue), _if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(le(_if_then_else(False, ones_diff_cols, 4), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), _if_then_else(True, _if_then_else(True, 4, 1), _if_then_else(True, 4, compare_blocks_cols)), _if_then_else(and_(False, False), _if_then_else(False, 0, max_row_clue), _if_then_else(False, 3, 2)))), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, 4, 2)))
or_(and_(False, ge(3, ones_diff_rows)), or_(and_(False, True), or_(and_(False, True), or_(True, True))))
VAL TREES:
add(add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols)), add(mul(zeros_diff_rows, mul(compare_blocks_rows, compare_blocks_rows)), add(compare_blocks_rows, mul(zeros_diff_cols, zeros_diff_cols))))
add(mul(mul(mul(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)), add(compare_blocks_cols, ones_diff_rows)))
mul(mul(mul(zeros_diff_cols, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)))
mul(add(add(zeros_diff_cols, mul(ones_diff_rows, mul(compare_blocks_rows, zeros_diff_cols))), mul(ones_diff_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, mul(zeros_diff_cols, compare_blocks_cols)), mul(ones_diff_cols, ones_diff_rows)))
add(mul(add(add(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_cols))), mul(add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), add(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_rows))))
COND TREES:
and_(le(_if_then_else(ge(max_col_clue, max_row_clue), _if_then_else(True, 1, 0), _if_then_else(True, max_row_clue, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, max_row_clue, compare_blocks_rows), _if_then_else(False, 1, ones_diff_cols))), and_(and_(le(max_col_clue, compare_blocks_cols), ge(_if_then_else(True, max_col_clue, 4), max_row_clue)), ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, max_col_clue, 4))))
and_(and_(False, ge(zeros_diff_rows, compare_blocks_rows)), True)
ge(_if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, 3)), _if_then_else(or_(True, and_(ge(compare_blocks_rows, 3), and_(False, ge(4, 1)))), _if_then_else(False, 3, ones_diff_cols), _if_then_else(or_(le(ones_diff_cols, zeros_diff_rows), ge(1, _if_then_else(True, zeros_diff_rows, compare_blocks_rows))), compare_blocks_cols, compare_blocks_rows)))
le(_if_then_else(le(max_col_clue, max_row_clue), _if_then_else(False, max_col_clue, ones_diff_cols), zeros_diff_rows), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, 4, 2)))
or_(and_(ge(max_row_clue, _if_then_else(False, 3, ones_diff_rows)), ge(3, zeros_diff_cols)), or_(True, or_(True, or_(True, True))))
VAL TREES:
add(add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols)), add(mul(zeros_diff_rows, mul(compare_blocks_rows, compare_blocks_rows)), add(compare_blocks_rows, mul(zeros_diff_cols, zeros_diff_cols))))
add(mul(mul(mul(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)), add(compare_blocks_cols, ones_diff_rows)))
mul(mul(mul(zeros_diff_cols, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)))
mul(add(add(zeros_diff_cols, mul(ones_diff_rows, mul(compare_blocks_rows, zeros_diff_cols))), mul(ones_diff_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, mul(zeros_diff_cols, compare_blocks_cols)), mul(ones_diff_cols, ones_diff_rows)))
add(mul(add(add(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_cols))), mul(add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), add(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_rows))))
COND TREES:
or_(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, max_col_clue, 4)), le(_if_then_else(and_(True, True), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, ones_diff_cols, max_row_clue)), _if_then_else(or_(True, True), _if_then_else(True, 0, max_row_clue), _if_then_else(True, ones_diff_cols, 0))))
or_(False, True)
or_(le(compare_blocks_rows, zeros_diff_cols), False)
or_(le(_if_then_else(and_(and_(False, False), and_(True, False)), _if_then_else(le(max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 1, 2)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows))), _if_then_else(le(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(False, _if_then_else(False, 0, compare_blocks_rows), compare_blocks_rows), _if_then_else(False, zeros_diff_rows, max_col_clue)), _if_then_else(or_(le(zeros_diff_cols, zeros_diff_rows), True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 2, 0)))), and_(ge(_if_then_else(ge(compare_blocks_rows, zeros_diff_cols), _if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(compare_blocks_rows, ones_diff_rows), _if_then_else(False, 1, zeros_diff_cols), _if_then_else(False, ones_diff_rows, 4))), le(_if_then_else(False, _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 2, 4)), _if_then_else(and_(False, False), _if_then_else(and_(False, False), ones_diff_cols, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_cols)))))
or_(or_(and_(True, False), le(_if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), compare_blocks_cols), max_row_clue)), False)
VAL TREES:
mul(mul(add(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), mul(add(ones_diff_rows, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows)))
add(add(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)), add(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)))
add(mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), mul(compare_blocks_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_rows)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)))
add(add(add(add(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows))), mul(mul(add(ones_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))))
add(add(add(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, zeros_diff_rows), mul(mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(ones_diff_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_rows)))))
COND TREES:
and_(le(_if_then_else(ge(max_col_clue, max_row_clue), _if_then_else(True, 1, 0), _if_then_else(True, max_row_clue, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, max_row_clue, compare_blocks_rows), _if_then_else(False, 1, ones_diff_cols))), and_(and_(False, ge(compare_blocks_rows, ones_diff_cols)), and_(or_(or_(True, True), or_(True, False)), ge(_if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, zeros_diff_cols)))))
and_(and_(True, ge(zeros_diff_rows, compare_blocks_rows)), le(_if_then_else(True, _if_then_else(False, zeros_diff_rows, zeros_diff_rows), 2), ones_diff_rows))
ge(_if_then_else(or_(False, True), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, 3)), _if_then_else(or_(True, and_(ge(compare_blocks_rows, 3), and_(False, True))), _if_then_else(False, 3, ones_diff_cols), _if_then_else(or_(le(ones_diff_cols, zeros_diff_rows), ge(1, _if_then_else(True, zeros_diff_rows, compare_blocks_rows))), compare_blocks_cols, compare_blocks_rows)))
le(_if_then_else(le(max_col_clue, max_row_clue), _if_then_else(False, max_col_clue, ones_diff_cols), zeros_diff_rows), _if_then_else(True, _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, ones_diff_rows, 2)))
or_(and_(ge(ones_diff_rows, _if_then_else(False, ones_diff_rows, ones_diff_rows)), or_(False, True)), or_(and_(False, True), or_(True, or_(True, True))))
VAL TREES:
add(add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols)), add(mul(zeros_diff_rows, mul(compare_blocks_rows, compare_blocks_rows)), add(compare_blocks_rows, mul(zeros_diff_cols, zeros_diff_cols))))
add(mul(mul(mul(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)), add(compare_blocks_cols, ones_diff_rows)))
mul(mul(mul(zeros_diff_cols, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)))
mul(add(add(zeros_diff_cols, mul(ones_diff_rows, mul(compare_blocks_rows, zeros_diff_cols))), mul(ones_diff_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, mul(zeros_diff_cols, compare_blocks_cols)), mul(ones_diff_cols, ones_diff_rows)))
add(mul(add(add(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_cols))), mul(add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), add(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_rows))))
COND TREES:
or_(and_(or_(or_(True, True), or_(True, False)), ge(_if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, zeros_diff_cols))), le(_if_then_else(and_(True, True), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, ones_diff_cols, max_row_clue)), _if_then_else(or_(True, True), _if_then_else(True, 0, max_row_clue), _if_then_else(True, ones_diff_cols, 0))))
or_(le(_if_then_else(True, _if_then_else(False, zeros_diff_rows, zeros_diff_rows), 2), ones_diff_rows), ge(zeros_diff_cols, 4))
or_(le(_if_then_else(or_(False, False), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 1)), zeros_diff_cols), False)
or_(le(_if_then_else(and_(and_(False, False), and_(True, False)), _if_then_else(le(max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 1, 2)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows))), _if_then_else(le(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 0, _if_then_else(le(max_col_clue, compare_blocks_rows), _if_then_else(False, max_col_clue, zeros_diff_cols), _if_then_else(True, 3, compare_blocks_rows)))), _if_then_else(or_(True, False), _if_then_else(False, _if_then_else(False, 0, compare_blocks_rows), compare_blocks_rows), _if_then_else(False, zeros_diff_rows, max_col_clue)), _if_then_else(or_(le(zeros_diff_cols, zeros_diff_rows), True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 2, 0)))), and_(ge(_if_then_else(ge(compare_blocks_rows, zeros_diff_cols), _if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(compare_blocks_rows, ones_diff_rows), _if_then_else(ge(_if_then_else(True, _if_then_else(True, _if_then_else(True, max_row_clue, max_col_clue), _if_then_else(True, zeros_diff_rows, max_row_clue)), _if_then_else(and_(True, False), zeros_diff_cols, max_col_clue)), _if_then_else(True, _if_then_else(False, max_row_clue, compare_blocks_cols), _if_then_else(False, 4, 3))), _if_then_else(or_(True, False), _if_then_else(True, _if_then_else(ge(zeros_diff_cols, 0), 1, ones_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_cols, 0), zeros_diff_rows)), _if_then_else(False, zeros_diff_cols, 3)), _if_then_else(le(_if_then_else(False, 3, _if_then_else(True, ones_diff_rows, 0)), zeros_diff_rows), _if_then_else(True, _if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, zeros_diff_cols)), _if_then_else(False, 4, 2))), _if_then_else(False, ones_diff_rows, 4))), le(_if_then_else(False, _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 2, 4)), _if_then_else(and_(False, False), _if_then_else(and_(False, False), ones_diff_cols, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_cols)))))
or_(or_(and_(True, False), le(_if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), _if_then_else(le(_if_then_else(True, 4, max_row_clue), _if_then_else(ge(compare_blocks_rows, compare_blocks_cols), 3, max_row_clue)), _if_then_else(and_(True, False), _if_then_else(le(zeros_diff_cols, max_row_clue), zeros_diff_cols, 3), _if_then_else(and_(True, False), _if_then_else(True, zeros_diff_cols, zeros_diff_rows), ones_diff_cols)), _if_then_else(ge(4, _if_then_else(False, ones_diff_cols, 2)), _if_then_else(False, 3, compare_blocks_cols), _if_then_else(True, 3, ones_diff_rows)))), ones_diff_rows)), False)
VAL TREES:
mul(mul(add(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), mul(add(ones_diff_rows, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows)))
mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(mul(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)))
add(mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), mul(compare_blocks_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_rows)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)))
add(add(add(add(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows))), mul(mul(add(ones_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))))
add(add(add(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))
COND TREES:
ge(_if_then_else(or_(False, True), _if_then_else(True, _if_then_else(True, compare_blocks_cols, ones_diff_cols), compare_blocks_cols), _if_then_else(False, _if_then_else(True, 4, compare_blocks_cols), max_row_clue)), _if_then_else(ge(compare_blocks_rows, ones_diff_rows), _if_then_else(True, 3, zeros_diff_cols), _if_then_else(le(3, 3), _if_then_else(True, 4, ones_diff_rows), _if_then_else(False, 3, compare_blocks_rows))))
and_(and_(and_(and_(True, False), True), ge(2, max_row_clue)), ge(_if_then_else(True, _if_then_else(False, _if_then_else(False, ones_diff_cols, ones_diff_cols), max_row_clue), _if_then_else(False, _if_then_else(False, compare_blocks_cols, ones_diff_cols), compare_blocks_cols)), _if_then_else(True, compare_blocks_rows, 2)))
and_(ge(_if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_cols), _if_then_else(True, 0, 0), _if_then_else(True, max_row_clue, 0))), ge(max_col_clue, _if_then_else(and_(True, True), _if_then_else(True, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, 1, compare_blocks_rows))))
and_(ge(_if_then_else(ge(_if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(True, max_col_clue, ones_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, ones_diff_rows, 1), _if_then_else(False, 1, compare_blocks_rows)), _if_then_else(le(max_col_clue, zeros_diff_cols), _if_then_else(True, max_row_clue, 3), _if_then_else(False, ones_diff_cols, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(le(compare_blocks_rows, 0), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(True, 2, ones_diff_cols)), compare_blocks_rows)), and_(le(_if_then_else(and_(True, False), _if_then_else(False, 1, max_col_clue), _if_then_else(True, ones_diff_rows, compare_blocks_cols)), _if_then_else(le(1, 3), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, 0, zeros_diff_cols))), and_(or_(or_(True, False), le(1, zeros_diff_rows)), and_(le(3, ones_diff_rows), le(1, ones_diff_rows)))))
or_(and_(True, ge(1, 1)), le(0, _if_then_else(True, zeros_diff_cols, 4)))
VAL TREES:
mul(mul(add(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)), add(mul(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols)))
mul(add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols)), mul(mul(mul(mul(ones_diff_cols, ones_diff_rows), mul(add(zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)), mul(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, mul(zeros_diff_cols, compare_blocks_cols)))), add(compare_blocks_rows, compare_blocks_rows)))
mul(mul(add(add(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_cols)), mul(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_cols))), mul(add(add(add(mul(mul(zeros_diff_cols, add(mul(compare_blocks_cols, zeros_diff_cols), compare_blocks_rows)), add(mul(mul(ones_diff_cols, compare_blocks_rows), ones_diff_rows), compare_blocks_cols)), add(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_cols, ones_diff_rows))), compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(compare_blocks_cols, compare_blocks_rows), mul(compare_blocks_cols, compare_blocks_rows))))
add(mul(mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_cols, zeros_diff_cols)), add(mul(add(add(zeros_diff_cols, ones_diff_rows), add(compare_blocks_cols, compare_blocks_rows)), mul(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows))), mul(zeros_diff_cols, compare_blocks_rows))), add(add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(add(add(mul(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), mul(mul(ones_diff_rows, zeros_diff_cols), add(mul(mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(add(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols))), add(mul(add(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows)), add(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_rows)))), ones_diff_cols))), add(mul(add(ones_diff_cols, ones_diff_rows), add(compare_blocks_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_rows))))
add(add(mul(zeros_diff_cols, mul(zeros_diff_cols, zeros_diff_rows)), add(ones_diff_rows, compare_blocks_rows)), add(add(compare_blocks_rows, ones_diff_rows), mul(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_cols, compare_blocks_rows))))
COND TREES:
ge(_if_then_else(and_(or_(ge(_if_then_else(or_(True, True), _if_then_else(True, ones_diff_rows, compare_blocks_cols), _if_then_else(False, 0, 4)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, 2, zeros_diff_cols))), and_(le(_if_then_else(True, ones_diff_cols, 3), _if_then_else(False, compare_blocks_cols, max_row_clue)), and_(and_(True, True), ge(4, 4)))), ge(_if_then_else(and_(and_(True, False), ge(1, zeros_diff_cols)), _if_then_else(and_(False, False), _if_then_else(True, 3, zeros_diff_rows), _if_then_else(False, max_col_clue, ones_diff_cols)), _if_then_else(le(max_col_clue, max_row_clue), _if_then_else(True, 3, zeros_diff_rows), _if_then_else(True, 1, max_row_clue))), _if_then_else(or_(ge(compare_blocks_cols, ones_diff_cols), and_(True, True)), _if_then_else(le(3, 4), _if_then_else(False, 1, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(or_(False, False), _if_then_else(False, 4, ones_diff_cols), _if_then_else(True, ones_diff_rows, ones_diff_rows))))), _if_then_else(True, _if_then_else(True, compare_blocks_cols, ones_diff_cols), compare_blocks_cols), _if_then_else(False, _if_then_else(True, 4, compare_blocks_cols), max_row_clue)), _if_then_else(ge(compare_blocks_rows, ones_diff_rows), _if_then_else(True, 3, zeros_diff_cols), _if_then_else(True, _if_then_else(True, 4, ones_diff_rows), _if_then_else(False, 3, compare_blocks_rows))))
and_(and_(le(_if_then_else(and_(False, True), _if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, 2)), _if_then_else(le(3, compare_blocks_rows), _if_then_else(False, zeros_diff_cols, max_row_clue), _if_then_else(False, 4, zeros_diff_cols))), ge(2, max_row_clue)), ge(_if_then_else(True, _if_then_else(False, _if_then_else(True, ones_diff_cols, ones_diff_cols), max_row_clue), _if_then_else(False, _if_then_else(False, compare_blocks_cols, ones_diff_cols), compare_blocks_cols)), _if_then_else(True, compare_blocks_rows, 2)))
and_(ge(_if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_cols, max_col_clue)), _if_then_else(ge(3, compare_blocks_cols), _if_then_else(True, 0, 0), _if_then_else(True, max_row_clue, max_col_clue))), ge(_if_then_else(or_(le(max_col_clue, zeros_diff_cols), False), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(True, _if_then_else(False, ones_diff_cols, 0), 1)), _if_then_else(and_(True, True), _if_then_else(True, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, 1, compare_blocks_rows))))
and_(ge(_if_then_else(ge(_if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(True, max_col_clue, ones_diff_cols)), _if_then_else(or_(False, False), _if_then_else(or_(or_(False, False), or_(True, False)), _if_then_else(ge(4, 3), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 1, ones_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, 3, max_col_clue), _if_then_else(False, zeros_diff_cols, ones_diff_rows))), _if_then_else(False, 1, compare_blocks_rows)), _if_then_else(le(max_col_clue, zeros_diff_cols), _if_then_else(True, max_row_clue, 3), _if_then_else(False, ones_diff_cols, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(le(compare_blocks_rows, 0), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(True, 2, ones_diff_cols)), _if_then_else(le(max_col_clue, compare_blocks_rows), _if_then_else(False, max_col_clue, zeros_diff_cols), _if_then_else(True, 3, compare_blocks_rows)))), and_(le(_if_then_else(and_(True, False), _if_then_else(or_(True, False), 1, max_col_clue), _if_then_else(True, ones_diff_rows, compare_blocks_cols)), _if_then_else(le(1, 3), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, 0, zeros_diff_cols))), and_(or_(or_(True, False), le(1, zeros_diff_rows)), and_(le(3, ones_diff_rows), le(1, ones_diff_rows)))))
or_(and_(ge(compare_blocks_rows, _if_then_else(le(_if_then_else(True, 4, max_row_clue), _if_then_else(True, 3, max_row_clue)), _if_then_else(and_(True, False), _if_then_else(le(zeros_diff_cols, max_row_clue), zeros_diff_cols, 3), _if_then_else(and_(True, False), _if_then_else(True, zeros_diff_cols, zeros_diff_rows), ones_diff_cols)), _if_then_else(ge(4, _if_then_else(False, ones_diff_cols, 2)), _if_then_else(False, 3, compare_blocks_cols), _if_then_else(True, 3, ones_diff_rows)))), ge(1, 1)), False)
VAL TREES:
mul(mul(add(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)), add(mul(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols)))
mul(add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols)), mul(mul(ones_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_rows)))
mul(mul(add(add(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_cols)), mul(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_cols))), mul(add(add(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(compare_blocks_cols, compare_blocks_rows), mul(compare_blocks_cols, compare_blocks_rows))))
add(mul(mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_cols, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, compare_blocks_rows))), add(add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(add(add(mul(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), mul(mul(ones_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols))), add(mul(add(ones_diff_cols, ones_diff_rows), add(compare_blocks_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_rows))))
add(add(mul(zeros_diff_cols, mul(zeros_diff_cols, zeros_diff_rows)), add(ones_diff_rows, compare_blocks_rows)), add(add(compare_blocks_rows, ones_diff_rows), mul(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_cols, compare_blocks_rows))))
COND TREES:
or_(and_(or_(or_(True, True), or_(True, False)), ge(_if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, zeros_diff_cols))), le(_if_then_else(and_(True, True), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, ones_diff_cols, max_row_clue)), _if_then_else(or_(True, True), _if_then_else(True, 0, max_row_clue), _if_then_else(True, ones_diff_cols, 0))))
or_(le(_if_then_else(True, _if_then_else(False, zeros_diff_rows, zeros_diff_rows), ones_diff_cols), ones_diff_rows), True)
or_(False, False)
or_(le(_if_then_else(and_(and_(False, False), and_(True, False)), _if_then_else(le(max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 1, 2)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows))), _if_then_else(le(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(False, _if_then_else(False, 0, compare_blocks_rows), compare_blocks_rows), _if_then_else(False, zeros_diff_rows, max_col_clue)), _if_then_else(or_(le(zeros_diff_cols, zeros_diff_rows), True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 2, 0)))), and_(ge(_if_then_else(ge(compare_blocks_rows, zeros_diff_cols), _if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(compare_blocks_rows, ones_diff_rows), _if_then_else(ge(_if_then_else(True, _if_then_else(True, _if_then_else(True, max_row_clue, max_col_clue), _if_then_else(True, zeros_diff_rows, max_row_clue)), _if_then_else(and_(True, False), zeros_diff_cols, max_col_clue)), _if_then_else(True, _if_then_else(False, max_row_clue, compare_blocks_cols), _if_then_else(False, 4, 3))), _if_then_else(or_(True, False), _if_then_else(True, _if_then_else(ge(zeros_diff_cols, 0), 1, ones_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_cols, 0), zeros_diff_rows)), _if_then_else(False, zeros_diff_cols, 3)), _if_then_else(le(_if_then_else(False, 3, _if_then_else(True, ones_diff_rows, 0)), zeros_diff_rows), _if_then_else(True, _if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, zeros_diff_cols)), _if_then_else(False, 4, 2))), _if_then_else(False, ones_diff_rows, 4))), le(_if_then_else(False, _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 2, 4)), _if_then_else(and_(False, False), _if_then_else(and_(False, False), ones_diff_cols, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_cols)))))
or_(or_(and_(True, False), le(_if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), compare_blocks_cols), ones_diff_rows)), False)
VAL TREES:
mul(mul(add(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), mul(add(ones_diff_rows, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows)))
mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(mul(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)))
add(mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), mul(compare_blocks_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_rows)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)))
add(add(add(add(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows))), mul(mul(add(ones_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))))
add(add(add(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))
COND TREES:
or_(and_(or_(or_(True, True), or_(True, False)), ge(max_row_clue, max_row_clue)), True)
or_(le(_if_then_else(True, _if_then_else(False, zeros_diff_rows, zeros_diff_rows), 2), _if_then_else(or_(False, True), compare_blocks_cols, compare_blocks_cols)), ge(_if_then_else(le(compare_blocks_cols, 3), 2, _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(and_(le(_if_then_else(True, 4, _if_then_else(True, zeros_diff_cols, zeros_diff_cols)), _if_then_else(True, _if_then_else(False, _if_then_else(False, 1, 3), zeros_diff_rows), 4)), ge(zeros_diff_rows, compare_blocks_rows)), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, zeros_diff_rows, _if_then_else(ge(_if_then_else(False, zeros_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(or_(False, False), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(True, compare_blocks_rows, 2)), _if_then_else(or_(False, True), _if_then_else(False, 3, compare_blocks_cols), _if_then_else(True, 2, 0)))))))
or_(le(_if_then_else(le(compare_blocks_rows, _if_then_else(le(compare_blocks_rows, zeros_diff_cols), 0, _if_then_else(False, zeros_diff_rows, 3))), 0, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, 2)), ge(compare_blocks_rows, 3))
or_(le(_if_then_else(and_(and_(False, False), and_(True, False)), _if_then_else(le(max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 1, 2)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows))), _if_then_else(le(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(False, 0, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, max_col_clue)), _if_then_else(or_(le(max_col_clue, max_row_clue), True), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(False, 2, 0)))), le(max_col_clue, max_row_clue))
or_(or_(and_(True, False), le(ones_diff_rows, ones_diff_rows)), or_(True, False))
VAL TREES:
mul(mul(add(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), mul(add(ones_diff_rows, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows)))
mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(mul(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)))
add(mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), mul(compare_blocks_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_rows)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)))
add(add(add(add(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows))), mul(mul(add(ones_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))))
add(add(add(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))
COND TREES:
and_(le(_if_then_else(ge(max_col_clue, _if_then_else(False, ones_diff_cols, zeros_diff_cols)), _if_then_else(True, 1, 0), _if_then_else(True, max_row_clue, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(False, max_row_clue, compare_blocks_rows), ones_diff_cols)), and_(and_(False, True), ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, max_col_clue, 4))))
and_(and_(True, ge(zeros_diff_cols, ones_diff_cols)), False)
ge(_if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 3)), _if_then_else(or_(True, and_(ge(compare_blocks_rows, 3), and_(False, False))), _if_then_else(False, 3, ones_diff_cols), _if_then_else(or_(False, ge(1, _if_then_else(True, zeros_diff_rows, compare_blocks_rows))), compare_blocks_cols, compare_blocks_rows)))
le(_if_then_else(le(1, max_row_clue), _if_then_else(False, max_col_clue, ones_diff_cols), zeros_diff_rows), _if_then_else(True, _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, 4, 2)))
or_(and_(ge(max_row_clue, _if_then_else(False, ones_diff_rows, ones_diff_rows)), ge(3, zeros_diff_cols)), or_(and_(False, True), or_(True, or_(or_(and_(False, True), or_(and_(True, False), or_(True, True))), True))))
VAL TREES:
add(add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols)), add(mul(zeros_diff_rows, mul(compare_blocks_rows, compare_blocks_rows)), add(compare_blocks_rows, mul(zeros_diff_cols, zeros_diff_cols))))
add(mul(mul(mul(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)), add(compare_blocks_cols, ones_diff_rows)))
mul(mul(mul(zeros_diff_cols, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)))
mul(add(add(zeros_diff_cols, mul(ones_diff_rows, mul(compare_blocks_rows, zeros_diff_cols))), mul(ones_diff_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, mul(zeros_diff_cols, compare_blocks_cols)), mul(ones_diff_cols, ones_diff_rows)))
add(mul(add(add(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_cols))), mul(add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), add(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_rows))))
COND TREES:
and_(le(_if_then_else(ge(max_row_clue, max_row_clue), max_col_clue, _if_then_else(True, max_row_clue, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, max_row_clue, compare_blocks_rows), _if_then_else(False, 1, ones_diff_cols))), and_(and_(le(max_col_clue, compare_blocks_cols), ge(max_col_clue, max_row_clue)), ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, max_col_clue, 4))))
and_(and_(True, True), True)
ge(_if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(or_(True, and_(False, and_(True, ge(4, 1)))), zeros_diff_rows, 3)), 0)
le(_if_then_else(True, _if_then_else(False, max_col_clue, ones_diff_cols), zeros_diff_rows), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, 4, 2)))
or_(and_(ge(ones_diff_rows, 3), ge(3, zeros_diff_cols)), or_(and_(False, True), or_(True, or_(True, True))))
VAL TREES:
add(add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols)), add(mul(add(add(compare_blocks_cols, mul(compare_blocks_rows, zeros_diff_cols)), add(ones_diff_cols, compare_blocks_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, compare_blocks_rows))), add(compare_blocks_rows, mul(zeros_diff_cols, zeros_diff_cols))))
add(mul(mul(mul(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)), add(compare_blocks_cols, ones_diff_rows)))
mul(mul(mul(zeros_diff_cols, compare_blocks_rows), add(add(mul(zeros_diff_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, zeros_diff_rows)))), mul(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)))
mul(add(add(zeros_diff_cols, mul(ones_diff_rows, mul(compare_blocks_rows, zeros_diff_cols))), mul(ones_diff_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, mul(add(add(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols))), mul(mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_cols, compare_blocks_cols)), mul(add(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_cols))))), mul(ones_diff_cols, ones_diff_rows)))
add(mul(add(add(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_cols))), mul(mul(mul(mul(mul(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows))), mul(add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_cols, compare_blocks_rows)), mul(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_cols)))), add(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_rows))))
COND TREES:
or_(and_(or_(or_(True, True), or_(True, False)), ge(max_col_clue, _if_then_else(False, ones_diff_cols, zeros_diff_cols))), True)
or_(le(_if_then_else(True, _if_then_else(False, zeros_diff_rows, zeros_diff_rows), 2), _if_then_else(or_(False, True), compare_blocks_cols, compare_blocks_cols)), ge(_if_then_else(le(compare_blocks_cols, 3), 2, _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(and_(le(_if_then_else(True, 4, _if_then_else(True, zeros_diff_cols, zeros_diff_cols)), _if_then_else(True, _if_then_else(False, _if_then_else(False, 1, 3), zeros_diff_cols), 4)), ge(zeros_diff_rows, compare_blocks_rows)), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, zeros_diff_rows, _if_then_else(ge(_if_then_else(False, zeros_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(or_(False, False), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(True, compare_blocks_rows, 2)), _if_then_else(or_(False, True), _if_then_else(False, 3, compare_blocks_cols), _if_then_else(True, 2, 0)))))))
or_(le(_if_then_else(le(compare_blocks_rows, _if_then_else(le(compare_blocks_rows, zeros_diff_cols), _if_then_else(or_(True, and_(ge(compare_blocks_rows, 3), and_(False, ge(4, 1)))), _if_then_else(False, 3, ones_diff_cols), _if_then_else(or_(le(ones_diff_cols, zeros_diff_rows), ge(1, _if_then_else(True, zeros_diff_rows, compare_blocks_rows))), compare_blocks_cols, compare_blocks_rows)), _if_then_else(False, zeros_diff_rows, 3))), 0, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 2)), ge(compare_blocks_rows, 3))
or_(le(_if_then_else(and_(and_(False, False), and_(True, True)), _if_then_else(le(max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 1, 2)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows))), _if_then_else(le(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(False, 0, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, max_col_clue)), _if_then_else(or_(le(max_col_clue, max_row_clue), True), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(False, 2, 0)))), le(max_col_clue, max_row_clue))
or_(or_(and_(True, False), le(ones_diff_rows, max_row_clue)), or_(True, False))
VAL TREES:
mul(mul(add(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), mul(add(ones_diff_rows, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows)))
mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(mul(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)))
add(mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), mul(compare_blocks_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_rows)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)))
add(add(add(add(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows))), mul(mul(add(ones_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))))
add(add(add(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))
COND TREES:
and_(le(_if_then_else(ge(max_col_clue, max_row_clue), _if_then_else(or_(True, False), 1, 0), _if_then_else(True, max_row_clue, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, max_row_clue, compare_blocks_rows), _if_then_else(False, 1, ones_diff_cols))), and_(and_(le(max_col_clue, compare_blocks_cols), ge(zeros_diff_rows, max_row_clue)), ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, max_col_clue, 4))))
and_(and_(True, ge(ones_diff_rows, compare_blocks_rows)), True)
ge(_if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, 3)), _if_then_else(or_(True, and_(ge(compare_blocks_rows, 3), and_(False, ge(4, 1)))), _if_then_else(False, 3, ones_diff_cols), _if_then_else(or_(le(ones_diff_cols, zeros_diff_rows), ge(_if_then_else(le(compare_blocks_rows, zeros_diff_cols), 0, 2), _if_then_else(True, max_col_clue, compare_blocks_rows))), compare_blocks_cols, compare_blocks_rows)))
le(_if_then_else(le(max_col_clue, max_row_clue), _if_then_else(False, max_col_clue, _if_then_else(False, 1, zeros_diff_cols)), zeros_diff_rows), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, 4, 2)))
or_(and_(ge(max_row_clue, _if_then_else(False, 3, max_col_clue)), ge(3, _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), compare_blocks_cols))), or_(and_(False, True), or_(True, or_(True, True))))
VAL TREES:
add(add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols)), add(mul(zeros_diff_rows, mul(compare_blocks_rows, compare_blocks_rows)), add(compare_blocks_rows, mul(zeros_diff_cols, zeros_diff_cols))))
add(mul(mul(mul(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)), add(compare_blocks_cols, ones_diff_rows)))
mul(mul(mul(zeros_diff_cols, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)))
mul(add(add(zeros_diff_cols, mul(ones_diff_rows, mul(compare_blocks_rows, zeros_diff_cols))), mul(ones_diff_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, mul(zeros_diff_cols, compare_blocks_cols)), mul(ones_diff_cols, ones_diff_rows)))
add(mul(add(add(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_cols))), mul(add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), add(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_rows))))
COND TREES:
or_(and_(or_(or_(True, True), or_(True, False)), ge(_if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, zeros_diff_cols))), le(_if_then_else(and_(True, True), _if_then_else(False, 0, max_col_clue), _if_then_else(False, ones_diff_cols, max_row_clue)), _if_then_else(or_(True, True), _if_then_else(True, 0, max_row_clue), _if_then_else(True, ones_diff_cols, 0))))
or_(le(_if_then_else(True, _if_then_else(False, zeros_diff_rows, zeros_diff_rows), 2), zeros_diff_rows), True)
or_(le(zeros_diff_rows, zeros_diff_cols), False)
or_(le(_if_then_else(and_(and_(False, False), and_(True, False)), _if_then_else(le(max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 1, 2)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows))), _if_then_else(le(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(False, _if_then_else(False, 0, compare_blocks_rows), compare_blocks_rows), _if_then_else(False, zeros_diff_rows, max_col_clue)), _if_then_else(or_(le(zeros_diff_cols, zeros_diff_rows), True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 2, 0)))), and_(ge(_if_then_else(ge(compare_blocks_rows, zeros_diff_cols), _if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(compare_blocks_rows, ones_diff_rows), _if_then_else(False, 1, zeros_diff_cols), _if_then_else(False, ones_diff_rows, 4))), le(_if_then_else(False, _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 2, 4)), _if_then_else(and_(False, False), _if_then_else(and_(False, False), ones_diff_cols, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_cols)))))
or_(or_(and_(True, False), le(zeros_diff_cols, ones_diff_rows)), False)
VAL TREES:
mul(mul(add(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), mul(add(ones_diff_rows, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows)))
add(add(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)), add(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)))
add(mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), mul(compare_blocks_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_rows)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)))
add(add(add(add(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows))), mul(mul(add(ones_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))))
add(add(add(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, zeros_diff_rows), mul(mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(ones_diff_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_rows)))))
COND TREES:
or_(and_(or_(or_(True, True), True), ge(_if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, zeros_diff_cols))), le(_if_then_else(and_(True, True), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, ones_diff_cols, max_row_clue)), _if_then_else(or_(True, True), _if_then_else(True, 0, max_row_clue), _if_then_else(True, ones_diff_cols, 0))))
or_(le(_if_then_else(True, _if_then_else(False, zeros_diff_rows, 2), 2), ones_diff_rows), True)
or_(le(_if_then_else(False, ones_diff_cols, 0), zeros_diff_cols), False)
or_(le(_if_then_else(and_(and_(False, False), and_(True, False)), _if_then_else(le(max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 1, 2)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows))), _if_then_else(le(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(False, _if_then_else(False, 0, compare_blocks_rows), compare_blocks_rows), _if_then_else(False, zeros_diff_rows, max_col_clue)), _if_then_else(or_(le(zeros_diff_cols, zeros_diff_rows), True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 2, 0)))), and_(ge(_if_then_else(ge(compare_blocks_rows, zeros_diff_cols), _if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(compare_blocks_rows, ones_diff_rows), _if_then_else(ge(_if_then_else(True, _if_then_else(True, _if_then_else(True, max_row_clue, max_col_clue), compare_blocks_rows), _if_then_else(and_(True, False), zeros_diff_cols, max_col_clue)), _if_then_else(True, _if_then_else(False, max_row_clue, compare_blocks_cols), _if_then_else(False, 4, 3))), _if_then_else(or_(True, False), _if_then_else(True, _if_then_else(ge(zeros_diff_cols, 0), 1, ones_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_cols, 0), zeros_diff_rows)), _if_then_else(False, zeros_diff_cols, 3)), _if_then_else(le(_if_then_else(False, 3, _if_then_else(True, ones_diff_rows, 0)), zeros_diff_rows), _if_then_else(True, _if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, zeros_diff_cols)), _if_then_else(False, 4, 2))), _if_then_else(False, ones_diff_rows, 4))), le(_if_then_else(False, _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 2, 4)), _if_then_else(and_(False, False), _if_then_else(and_(False, False), ones_diff_cols, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_cols)))))
or_(or_(and_(True, False), le(_if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), _if_then_else(le(_if_then_else(True, 4, max_row_clue), _if_then_else(and_(False, True), 3, max_row_clue)), _if_then_else(and_(True, False), _if_then_else(le(zeros_diff_cols, max_row_clue), zeros_diff_cols, 3), _if_then_else(and_(True, False), _if_then_else(True, zeros_diff_cols, zeros_diff_rows), ones_diff_cols)), _if_then_else(ge(4, _if_then_else(False, ones_diff_cols, 2)), _if_then_else(False, 3, compare_blocks_cols), _if_then_else(True, 3, ones_diff_rows)))), ones_diff_rows)), False)
VAL TREES:
mul(mul(add(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), mul(add(ones_diff_rows, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows)))
mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(mul(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)))
add(mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), mul(compare_blocks_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_rows)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)))
add(add(add(add(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows))), mul(mul(add(ones_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))))
add(add(add(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))
COND TREES:
or_(and_(or_(or_(True, or_(True, False)), True), ge(_if_then_else(True, ones_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, zeros_diff_cols))), le(_if_then_else(and_(False, True), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, ones_diff_cols, _if_then_else(True, 0, 1))), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(True, ones_diff_cols, 0))))
or_(le(_if_then_else(True, _if_then_else(False, zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), _if_then_else(or_(False, True), _if_then_else(False, 1, 3), compare_blocks_cols)), ge(_if_then_else(le(compare_blocks_cols, 3), 2, _if_then_else(False, ones_diff_cols, 4)), _if_then_else(True, _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, compare_blocks_cols, 1))))
or_(le(1, _if_then_else(and_(ge(_if_then_else(or_(or_(True, True), False), _if_then_else(False, ones_diff_rows, 2), _if_then_else(and_(True, True), 0, 2)), max_row_clue), or_(True, True)), _if_then_else(and_(False, True), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(False, 4, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(True, 1, max_col_clue), _if_then_else(False, zeros_diff_cols, _if_then_else(and_(or_(True, True), and_(False, False)), _if_then_else(and_(False, True), _if_then_else(True, 3, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(and_(True, False), max_col_clue, _if_then_else(True, _if_then_else(False, 2, ones_diff_rows), ones_diff_cols))))))), False)
or_(le(_if_then_else(and_(and_(False, False), and_(True, False)), _if_then_else(le(max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 1, 2)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows))), _if_then_else(le(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(False, 0, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, max_col_clue)), _if_then_else(or_(le(zeros_diff_cols, zeros_diff_rows), True), _if_then_else(False, 0, max_col_clue), _if_then_else(False, 2, 0)))), and_(ge(_if_then_else(ge(_if_then_else(True, zeros_diff_rows, max_row_clue), zeros_diff_cols), _if_then_else(and_(True, True), _if_then_else(False, 0, max_col_clue), _if_then_else(True, max_col_clue, ones_diff_rows)), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(compare_blocks_rows, ones_diff_rows), ones_diff_cols, _if_then_else(False, ones_diff_rows, 4))), le(_if_then_else(and_(False, True), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 2, 4)), _if_then_else(and_(False, True), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_cols)))))
or_(or_(and_(True, False), True), or_(le(max_row_clue, _if_then_else(False, ones_diff_rows, 4)), ge(ones_diff_rows, _if_then_else(True, 0, 0))))
VAL TREES:
mul(mul(add(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), mul(add(ones_diff_rows, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows)))
mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(mul(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)))
add(mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), mul(compare_blocks_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_rows)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)))
add(add(add(add(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows))), mul(mul(add(ones_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))))
add(add(add(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))
COND TREES:
ge(_if_then_else(or_(True, True), _if_then_else(True, _if_then_else(True, compare_blocks_cols, ones_diff_cols), compare_blocks_cols), _if_then_else(True, 0, max_row_clue)), _if_then_else(ge(compare_blocks_rows, ones_diff_rows), _if_then_else(True, 3, zeros_diff_cols), _if_then_else(True, _if_then_else(True, 4, ones_diff_rows), _if_then_else(False, 3, compare_blocks_rows))))
and_(and_(and_(and_(True, False), ge(zeros_diff_rows, compare_blocks_rows)), ge(2, max_row_clue)), True)
and_(ge(_if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_cols, max_col_clue)), _if_then_else(and_(False, True), _if_then_else(True, 0, 0), _if_then_else(True, max_row_clue, max_col_clue))), ge(_if_then_else(or_(False, False), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(True, _if_then_else(False, ones_diff_cols, max_col_clue), 1)), _if_then_else(and_(True, True), _if_then_else(True, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, 1, compare_blocks_rows))))
and_(ge(_if_then_else(ge(_if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(True, max_col_clue, ones_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, ones_diff_rows, 1), _if_then_else(False, 1, compare_blocks_rows)), _if_then_else(le(max_col_clue, zeros_diff_cols), _if_then_else(True, max_row_clue, 3), _if_then_else(False, ones_diff_cols, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(le(compare_blocks_rows, 0), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(True, 2, ones_diff_cols)), _if_then_else(le(max_col_clue, compare_blocks_rows), _if_then_else(le(max_col_clue, max_row_clue), _if_then_else(False, max_col_clue, ones_diff_cols), zeros_diff_rows), _if_then_else(True, 3, compare_blocks_rows)))), and_(le(_if_then_else(and_(True, False), _if_then_else(or_(True, False), 1, max_col_clue), _if_then_else(True, ones_diff_rows, compare_blocks_cols)), _if_then_else(le(1, 3), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, 0, zeros_diff_cols))), False))
or_(True, or_(and_(False, True), or_(True, or_(True, True))))
VAL TREES:
mul(mul(add(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)), add(mul(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols)))
mul(add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols)), mul(mul(ones_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_rows)))
mul(mul(add(add(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_cols)), mul(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_cols))), mul(add(add(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(compare_blocks_cols, compare_blocks_rows), mul(compare_blocks_cols, compare_blocks_rows))))
add(mul(mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_cols, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, compare_blocks_rows))), add(add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))
mul(add(add(mul(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), mul(mul(ones_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols))), add(mul(add(ones_diff_cols, ones_diff_rows), add(compare_blocks_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_rows))))
add(add(mul(zeros_diff_cols, mul(zeros_diff_cols, zeros_diff_rows)), add(ones_diff_rows, compare_blocks_rows)), add(add(compare_blocks_rows, ones_diff_rows), mul(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_cols, compare_blocks_rows))))
COND TREES:
and_(le(_if_then_else(ge(max_col_clue, max_row_clue), _if_then_else(True, 1, 0), _if_then_else(True, max_row_clue, zeros_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, max_row_clue, compare_blocks_rows), _if_then_else(False, 1, ones_diff_cols))), and_(and_(False, ge(compare_blocks_rows, ones_diff_cols)), ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, max_col_clue, 4))))
and_(le(_if_then_else(le(3, _if_then_else(True, _if_then_else(False, compare_blocks_rows, 4), zeros_diff_rows)), _if_then_else(True, 3, _if_then_else(False, max_row_clue, _if_then_else(False, ones_diff_rows, 2))), _if_then_else(False, 1, _if_then_else(True, 1, 1))), _if_then_else(ge(max_col_clue, zeros_diff_cols), _if_then_else(True, max_row_clue, 1), _if_then_else(le(ones_diff_cols, 1), max_col_clue, _if_then_else(False, zeros_diff_rows, ones_diff_rows)))), False)
ge(_if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, 3)), _if_then_else(or_(True, and_(ge(compare_blocks_rows, 3), ge(3, compare_blocks_cols))), _if_then_else(False, 3, ones_diff_cols), _if_then_else(or_(le(ones_diff_cols, zeros_diff_rows), ge(1, _if_then_else(True, zeros_diff_rows, compare_blocks_rows))), compare_blocks_cols, compare_blocks_rows)))
le(_if_then_else(False, max_col_clue, zeros_diff_cols), _if_then_else(True, _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, ones_diff_rows, 2)))
or_(and_(and_(le(_if_then_else(and_(True, False), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, compare_blocks_rows, 4)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_cols, 1), _if_then_else(True, compare_blocks_rows, max_row_clue))), or_(ge(_if_then_else(True, 3, 4), _if_then_else(False, 3, 1)), or_(or_(True, True), or_(False, True)))), or_(or_(and_(ge(max_col_clue, zeros_diff_cols), ge(1, ones_diff_rows)), le(_if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(True, max_col_clue, max_col_clue))), or_(or_(le(max_row_clue, 1), or_(False, False)), le(_if_then_else(True, 3, zeros_diff_cols), _if_then_else(True, compare_blocks_cols, zeros_diff_rows))))), False)
VAL TREES:
add(add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols)), add(mul(zeros_diff_rows, mul(compare_blocks_rows, compare_blocks_rows)), add(compare_blocks_rows, mul(zeros_diff_cols, zeros_diff_cols))))
add(mul(mul(mul(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)), add(compare_blocks_cols, ones_diff_rows)))
mul(mul(mul(zeros_diff_cols, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)))
mul(add(add(zeros_diff_cols, mul(ones_diff_rows, mul(compare_blocks_rows, zeros_diff_cols))), mul(ones_diff_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, mul(zeros_diff_cols, compare_blocks_cols)), mul(ones_diff_cols, ones_diff_rows)))
add(mul(add(add(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_cols))), mul(add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), add(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_rows))))
COND TREES:
or_(and_(or_(or_(True, True), or_(True, False)), ge(_if_then_else(True, ones_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, zeros_diff_cols))), le(_if_then_else(True, _if_then_else(and_(False, True), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, ones_diff_cols, _if_then_else(True, 0, 1))), _if_then_else(False, ones_diff_cols, _if_then_else(True, 0, 1))), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(True, ones_diff_cols, 0))))
or_(le(_if_then_else(True, _if_then_else(False, zeros_diff_rows, zeros_diff_rows), 2), _if_then_else(or_(False, True), _if_then_else(False, 1, max_col_clue), compare_blocks_cols)), ge(zeros_diff_rows, _if_then_else(True, _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, compare_blocks_cols, 1))))
or_(le(_if_then_else(le(compare_blocks_rows, zeros_diff_cols), 0, 2), _if_then_else(and_(ge(_if_then_else(or_(or_(True, True), False), _if_then_else(False, ones_diff_rows, 2), _if_then_else(and_(True, True), 0, 2)), 3), or_(True, True)), _if_then_else(and_(False, True), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(False, 4, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(True, 1, max_col_clue), _if_then_else(False, zeros_diff_cols, _if_then_else(and_(or_(True, True), and_(False, False)), ones_diff_rows, _if_then_else(and_(True, False), _if_then_else(False, ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, 2, ones_diff_rows), ones_diff_cols))))))), False)
or_(le(_if_then_else(and_(and_(False, False), and_(True, False)), _if_then_else(False, _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 1, 2)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows))), _if_then_else(le(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(False, 0, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, max_col_clue)), _if_then_else(or_(le(zeros_diff_cols, zeros_diff_rows), True), _if_then_else(False, 0, max_col_clue), _if_then_else(False, 2, 0)))), and_(ge(_if_then_else(ge(compare_blocks_rows, zeros_diff_cols), _if_then_else(and_(True, True), _if_then_else(False, 0, max_col_clue), _if_then_else(True, max_col_clue, ones_diff_rows)), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(False, _if_then_else(False, 1, zeros_diff_cols), _if_then_else(False, ones_diff_rows, 4))), le(_if_then_else(and_(False, True), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 2, 4)), _if_then_else(and_(False, True), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_cols)))))
or_(or_(and_(True, False), and_(False, True)), or_(le(max_row_clue, 0), ge(max_col_clue, _if_then_else(True, 0, 0))))
VAL TREES:
mul(mul(add(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), mul(add(ones_diff_rows, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows)))
mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(mul(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)))
add(mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), mul(compare_blocks_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_rows)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)))
add(add(add(add(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows))), mul(mul(add(ones_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))))
add(add(add(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))
COND TREES:
or_(and_(or_(or_(True, True), or_(and_(False, True), False)), ge(_if_then_else(True, ones_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, zeros_diff_cols))), le(_if_then_else(True, max_row_clue, zeros_diff_rows), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(True, ones_diff_cols, 0))))
or_(le(3, _if_then_else(or_(False, True), _if_then_else(False, 1, 3), compare_blocks_cols)), ge(_if_then_else(le(compare_blocks_cols, 3), 2, _if_then_else(False, ones_diff_cols, 4)), _if_then_else(True, _if_then_else(True, ones_diff_cols, _if_then_else(True, _if_then_else(False, zeros_diff_rows, zeros_diff_rows), 2)), _if_then_else(False, compare_blocks_cols, 1))))
or_(le(_if_then_else(le(compare_blocks_rows, zeros_diff_cols), 0, 2), _if_then_else(and_(ge(_if_then_else(or_(or_(True, True), False), _if_then_else(False, _if_then_else(and_(False, True), _if_then_else(True, max_row_clue, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), 2), _if_then_else(and_(True, True), 0, 2)), max_row_clue), or_(True, True)), _if_then_else(and_(False, True), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(False, 4, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(True, 1, max_col_clue), _if_then_else(False, zeros_diff_cols, _if_then_else(and_(or_(True, True), and_(False, False)), _if_then_else(and_(False, True), _if_then_else(True, 3, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, ones_diff_cols, 0), _if_then_else(True, 2, ones_diff_cols))))))), False)
or_(le(_if_then_else(and_(and_(le(max_col_clue, compare_blocks_rows), False), and_(True, False)), _if_then_else(le(max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 1, 2)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows))), _if_then_else(le(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(False, 0, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, max_col_clue)), _if_then_else(or_(le(zeros_diff_cols, zeros_diff_rows), True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 2, 0)))), and_(ge(_if_then_else(ge(compare_blocks_rows, zeros_diff_cols), _if_then_else(and_(True, True), _if_then_else(False, 0, max_col_clue), _if_then_else(True, max_col_clue, ones_diff_rows)), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(compare_blocks_rows, ones_diff_rows), _if_then_else(False, 1, zeros_diff_cols), _if_then_else(False, ones_diff_rows, 4))), le(_if_then_else(and_(False, True), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 2, 4)), _if_then_else(and_(le(compare_blocks_rows, ones_diff_rows), True), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_cols)))))
or_(or_(and_(True, False), le(_if_then_else(False, ones_diff_cols, ones_diff_rows), ones_diff_rows)), or_(le(max_row_clue, _if_then_else(False, ones_diff_rows, 4)), ge(max_col_clue, _if_then_else(True, _if_then_else(False, ones_diff_rows, 4), 0))))
VAL TREES:
mul(mul(add(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), mul(add(ones_diff_rows, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows)))
mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(mul(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)))
add(mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), mul(compare_blocks_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_rows)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)))
add(add(add(add(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows))), mul(mul(add(ones_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))))
add(add(add(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))
COND TREES:
and_(le(_if_then_else(ge(max_col_clue, max_row_clue), _if_then_else(True, 1, 0), _if_then_else(True, max_row_clue, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, max_row_clue, compare_blocks_rows), _if_then_else(False, 1, ones_diff_cols))), and_(and_(False, ge(max_col_clue, compare_blocks_rows)), ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, max_col_clue, 4))))
and_(and_(True, ge(zeros_diff_rows, 3)), False)
ge(_if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, 3)), _if_then_else(or_(True, False), _if_then_else(False, 3, ones_diff_cols), _if_then_else(or_(le(ones_diff_cols, zeros_diff_rows), ge(1, _if_then_else(True, zeros_diff_rows, compare_blocks_rows))), compare_blocks_cols, compare_blocks_rows)))
le(_if_then_else(le(max_col_clue, max_row_clue), _if_then_else(False, max_col_clue, ones_diff_cols), zeros_diff_rows), _if_then_else(True, _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(ge(_if_then_else(ge(compare_blocks_rows, zeros_diff_cols), _if_then_else(and_(True, True), _if_then_else(False, 0, max_col_clue), _if_then_else(True, max_col_clue, ones_diff_rows)), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(compare_blocks_rows, ones_diff_rows), _if_then_else(False, 1, zeros_diff_cols), _if_then_else(False, ones_diff_rows, 4))), 4, 2)))
or_(and_(ge(max_row_clue, _if_then_else(False, 3, ones_diff_rows)), ge(3, zeros_diff_cols)), or_(and_(False, True), or_(True, or_(True, True))))
VAL TREES:
add(add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, add(mul(add(mul(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_rows))), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_rows, zeros_diff_cols)))), add(add(add(mul(ones_diff_cols, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_rows))), add(add(mul(ones_diff_rows, ones_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, ones_diff_rows)))))), add(zeros_diff_cols, ones_diff_cols)), add(mul(zeros_diff_rows, mul(compare_blocks_rows, compare_blocks_rows)), add(compare_blocks_rows, mul(zeros_diff_cols, zeros_diff_cols))))
add(mul(mul(mul(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)), add(compare_blocks_cols, ones_diff_rows)))
mul(mul(mul(zeros_diff_cols, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_rows, mul(add(mul(mul(mul(zeros_diff_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_rows)), mul(mul(compare_blocks_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows))), add(mul(add(zeros_diff_rows, ones_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, compare_blocks_cols)))), add(mul(add(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows))), mul(add(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_cols)))))), add(ones_diff_rows, zeros_diff_rows)))
mul(add(add(zeros_diff_cols, mul(ones_diff_rows, mul(add(add(add(mul(mul(ones_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_cols)), mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols))), mul(add(mul(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows)), mul(add(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, compare_blocks_cols)))), add(add(mul(mul(compare_blocks_cols, ones_diff_rows), add(compare_blocks_rows, ones_diff_rows)), add(mul(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows))), add(mul(add(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_rows)), mul(mul(zeros_diff_rows, ones_diff_rows), mul(compare_blocks_cols, ones_diff_cols))))), zeros_diff_cols))), mul(ones_diff_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, mul(zeros_diff_cols, compare_blocks_cols)), mul(ones_diff_cols, ones_diff_rows)))
add(mul(add(add(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_cols))), mul(add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), add(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_rows))))
COND TREES:
and_(le(_if_then_else(ge(max_col_clue, max_row_clue), _if_then_else(True, 1, 0), _if_then_else(False, 0, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, max_row_clue, compare_blocks_rows), _if_then_else(False, 1, ones_diff_cols))), and_(and_(le(max_col_clue, compare_blocks_cols), True), ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, max_col_clue, 4))))
and_(and_(True, ge(_if_then_else(le(compare_blocks_cols, compare_blocks_rows), 2, _if_then_else(False, ones_diff_cols, 4)), compare_blocks_rows)), False)
ge(_if_then_else(or_(False, True), _if_then_else(and_(ge(compare_blocks_rows, 3), and_(False, False)), compare_blocks_rows, compare_blocks_rows), 2), _if_then_else(or_(True, and_(ge(compare_blocks_rows, 3), and_(False, ge(4, 1)))), _if_then_else(False, 3, ones_diff_cols), _if_then_else(or_(le(ones_diff_cols, zeros_diff_rows), ge(1, _if_then_else(True, zeros_diff_rows, compare_blocks_rows))), compare_blocks_cols, compare_blocks_rows)))
le(_if_then_else(and_(False, le(_if_then_else(and_(False, True), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 2, 4)), _if_then_else(False, _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_cols)))), _if_then_else(False, max_col_clue, ones_diff_cols), zeros_diff_rows), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, 4, 2)))
or_(and_(ge(max_row_clue, _if_then_else(False, ones_diff_rows, ones_diff_rows)), ge(3, zeros_diff_cols)), or_(and_(False, True), or_(True, or_(True, True))))
VAL TREES:
add(add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols)), add(mul(zeros_diff_rows, mul(compare_blocks_rows, compare_blocks_rows)), add(compare_blocks_rows, mul(zeros_diff_cols, zeros_diff_cols))))
add(mul(mul(mul(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)), add(compare_blocks_cols, ones_diff_rows)))
mul(mul(mul(zeros_diff_cols, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)))
mul(add(add(zeros_diff_cols, mul(ones_diff_rows, mul(compare_blocks_rows, zeros_diff_cols))), mul(ones_diff_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, mul(zeros_diff_cols, compare_blocks_cols)), mul(ones_diff_cols, ones_diff_rows)))
add(mul(add(add(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_cols))), mul(add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), add(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_rows))))
COND TREES:
or_(and_(or_(or_(True, True), or_(True, False)), ge(_if_then_else(or_(True, True), ones_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, zeros_diff_cols))), le(_if_then_else(and_(False, True), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, ones_diff_cols, _if_then_else(True, _if_then_else(or_(or_(True, le(max_col_clue, compare_blocks_cols)), ge(_if_then_else(False, 0, compare_blocks_cols), zeros_diff_rows)), _if_then_else(ge(_if_then_else(False, ones_diff_cols, 3), _if_then_else(False, 2, ones_diff_rows)), _if_then_else(False, 3, ones_diff_cols), _if_then_else(False, 0, ones_diff_cols)), _if_then_else(ge(_if_then_else(True, 0, 1), 2), _if_then_else(True, _if_then_else(False, ones_diff_cols, 0), 2), _if_then_else(False, _if_then_else(True, 2, 1), _if_then_else(True, compare_blocks_cols, 1)))), 1))), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(True, ones_diff_cols, 0))))
or_(le(_if_then_else(True, _if_then_else(False, zeros_diff_rows, zeros_diff_rows), 2), _if_then_else(or_(False, True), _if_then_else(False, 1, 3), compare_blocks_cols)), ge(_if_then_else(le(compare_blocks_cols, 3), 2, _if_then_else(False, ones_diff_cols, 4)), _if_then_else(True, _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, compare_blocks_cols, 1))))
or_(le(_if_then_else(or_(le(ones_diff_cols, zeros_diff_rows), ge(1, _if_then_else(True, zeros_diff_rows, compare_blocks_rows))), compare_blocks_cols, _if_then_else(and_(True, True), 0, 2)), _if_then_else(and_(ge(_if_then_else(or_(or_(True, True), False), _if_then_else(False, ones_diff_rows, 2), _if_then_else(and_(True, True), 0, 2)), max_row_clue), or_(True, True)), _if_then_else(and_(False, True), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(False, 4, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(True, 1, max_col_clue), _if_then_else(False, zeros_diff_cols, _if_then_else(and_(or_(True, True), and_(False, False)), _if_then_else(and_(False, True), _if_then_else(le(_if_then_else(or_(False, False), _if_then_else(True, 2, 1), _if_then_else(False, 3, 4)), _if_then_else(and_(True, False), _if_then_else(True, max_col_clue, 3), _if_then_else(False, 0, 1))), 3, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, ones_diff_cols, 0), _if_then_else(True, 2, ones_diff_cols))))))), False)
or_(le(_if_then_else(and_(and_(False, False), and_(True, False)), _if_then_else(le(max_col_clue, compare_blocks_rows), _if_then_else(or_(and_(le(4, 0), and_(True, False)), ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, max_row_clue, ones_diff_rows))), zeros_diff_rows, max_col_clue), _if_then_else(False, 1, zeros_diff_rows)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows))), _if_then_else(le(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(False, 0, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, max_col_clue)), _if_then_else(or_(le(zeros_diff_cols, zeros_diff_rows), True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 2, 0)))), and_(ge(_if_then_else(ge(compare_blocks_rows, zeros_diff_cols), _if_then_else(and_(True, True), _if_then_else(False, 0, max_col_clue), _if_then_else(True, max_col_clue, ones_diff_rows)), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(compare_blocks_rows, ones_diff_rows), _if_then_else(False, 1, zeros_diff_cols), _if_then_else(False, ones_diff_rows, 4))), le(_if_then_else(and_(False, True), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 2, 4)), _if_then_else(and_(False, True), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_cols)))))
or_(or_(and_(True, False), le(_if_then_else(False, ones_diff_cols, ones_diff_rows), ones_diff_rows)), or_(and_(le(_if_then_else(False, zeros_diff_rows, zeros_diff_cols), 2), le(zeros_diff_rows, 3)), or_(le(1, zeros_diff_cols), le(ones_diff_cols, 0))))
VAL TREES:
mul(mul(add(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), mul(add(ones_diff_rows, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows)))
mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(mul(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)))
add(mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), mul(compare_blocks_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_rows)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)))
add(add(add(add(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows))), mul(mul(add(ones_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))))
add(add(add(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))
COND TREES:
or_(and_(or_(or_(True, True), True), ge(_if_then_else(True, ones_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, zeros_diff_cols))), le(_if_then_else(and_(False, True), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, ones_diff_cols, _if_then_else(True, 0, 1))), _if_then_else(True, _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(True, ones_diff_cols, 0))))
or_(le(_if_then_else(True, _if_then_else(False, zeros_diff_rows, zeros_diff_rows), 2), _if_then_else(or_(False, True), _if_then_else(False, 1, 3), compare_blocks_cols)), ge(_if_then_else(le(compare_blocks_cols, 3), 2, _if_then_else(False, ones_diff_cols, 4)), _if_then_else(True, _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, compare_blocks_cols, 1))))
or_(le(1, _if_then_else(and_(ge(_if_then_else(or_(or_(True, True), False), _if_then_else(False, ones_diff_rows, 2), compare_blocks_rows), max_row_clue), or_(True, True)), _if_then_else(and_(False, True), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(False, 4, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(True, 1, max_col_clue), _if_then_else(False, zeros_diff_cols, _if_then_else(and_(or_(True, True), and_(False, False)), _if_then_else(and_(False, True), _if_then_else(True, 3, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, 2, ones_diff_rows), ones_diff_cols))))))), False)
or_(le(_if_then_else(and_(and_(False, False), and_(True, False)), _if_then_else(le(max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 1, 2)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows))), _if_then_else(le(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(False, 0, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, max_col_clue)), _if_then_else(or_(le(zeros_diff_cols, 2), True), _if_then_else(False, 0, max_col_clue), _if_then_else(False, 2, 0)))), and_(ge(_if_then_else(ge(compare_blocks_rows, zeros_diff_cols), _if_then_else(and_(True, True), _if_then_else(False, 0, max_col_clue), _if_then_else(True, max_col_clue, ones_diff_rows)), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(compare_blocks_rows, ones_diff_rows), ones_diff_cols, _if_then_else(False, ones_diff_rows, 4))), le(_if_then_else(and_(False, True), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 2, 4)), _if_then_else(and_(False, True), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_cols)))))
or_(or_(and_(True, False), and_(False, True)), or_(le(max_row_clue, _if_then_else(False, ones_diff_rows, 4)), ge(ones_diff_rows, _if_then_else(True, 0, 0))))
VAL TREES:
mul(mul(add(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), mul(add(ones_diff_rows, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows)))
mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(mul(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)))
add(mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), mul(compare_blocks_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_rows)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)))
add(add(add(add(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows))), mul(mul(add(ones_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))))
add(add(add(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))
COND TREES:
and_(le(_if_then_else(ge(max_col_clue, max_row_clue), _if_then_else(True, compare_blocks_rows, 0), _if_then_else(True, max_row_clue, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, max_row_clue, compare_blocks_rows), _if_then_else(False, 1, ones_diff_cols))), True)
and_(False, False)
ge(_if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, 3)), _if_then_else(or_(True, and_(ge(compare_blocks_rows, compare_blocks_rows), and_(False, False))), _if_then_else(False, 3, ones_diff_cols), _if_then_else(or_(le(ones_diff_cols, zeros_diff_rows), ge(1, _if_then_else(True, zeros_diff_rows, compare_blocks_rows))), compare_blocks_cols, compare_blocks_rows)))
le(_if_then_else(le(max_col_clue, max_row_clue), _if_then_else(False, max_col_clue, ones_diff_cols), zeros_diff_rows), _if_then_else(True, _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, 4, 2)))
or_(and_(ge(max_row_clue, _if_then_else(False, max_row_clue, ones_diff_rows)), ge(3, zeros_diff_cols)), or_(and_(False, True), or_(True, or_(True, True))))
VAL TREES:
add(add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols)), add(mul(zeros_diff_rows, mul(compare_blocks_rows, compare_blocks_rows)), add(compare_blocks_rows, mul(zeros_diff_cols, zeros_diff_cols))))
add(mul(mul(mul(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)), add(compare_blocks_cols, ones_diff_rows)))
mul(mul(mul(zeros_diff_cols, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)))
mul(add(add(zeros_diff_cols, mul(ones_diff_rows, mul(compare_blocks_rows, zeros_diff_cols))), mul(ones_diff_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, mul(zeros_diff_cols, compare_blocks_cols)), mul(ones_diff_cols, ones_diff_rows)))
add(mul(add(add(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_cols))), mul(add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), add(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_rows))))
COND TREES:
and_(le(_if_then_else(ge(max_col_clue, max_row_clue), _if_then_else(True, 1, 0), _if_then_else(and_(and_(False, True), ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, max_col_clue, 4))), max_row_clue, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, max_row_clue, compare_blocks_rows), _if_then_else(False, 1, ones_diff_cols))), and_(and_(False, True), ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, max_col_clue, 4))))
and_(and_(True, ge(zeros_diff_rows, compare_blocks_rows)), and_(True, ge(zeros_diff_rows, zeros_diff_rows)))
ge(_if_then_else(or_(False, True), _if_then_else(False, 3, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, 3)), _if_then_else(or_(True, and_(ge(compare_blocks_rows, 3), and_(False, False))), _if_then_else(False, 3, ones_diff_cols), _if_then_else(or_(le(ones_diff_cols, zeros_diff_rows), ge(1, _if_then_else(True, zeros_diff_rows, compare_blocks_rows))), compare_blocks_cols, compare_blocks_rows)))
le(_if_then_else(le(max_col_clue, max_row_clue), _if_then_else(False, max_col_clue, ones_diff_cols), zeros_diff_rows), _if_then_else(True, _if_then_else(le(4, compare_blocks_rows), zeros_diff_rows, zeros_diff_rows), _if_then_else(False, 4, 2)))
or_(and_(ge(zeros_diff_cols, _if_then_else(False, ones_diff_rows, ones_diff_rows)), ge(3, zeros_diff_cols)), or_(and_(False, True), or_(True, or_(True, True))))
VAL TREES:
add(add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols)), add(mul(zeros_diff_rows, mul(compare_blocks_rows, compare_blocks_rows)), add(compare_blocks_rows, mul(zeros_diff_cols, zeros_diff_cols))))
add(mul(mul(mul(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)), add(compare_blocks_cols, ones_diff_rows)))
mul(mul(mul(add(add(compare_blocks_rows, compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows)), add(mul(compare_blocks_rows, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows))), add(ones_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)))
mul(add(add(zeros_diff_cols, mul(ones_diff_rows, mul(compare_blocks_rows, zeros_diff_cols))), mul(ones_diff_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, mul(zeros_diff_cols, compare_blocks_cols)), mul(ones_diff_cols, ones_diff_rows)))
add(mul(add(add(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_cols))), mul(add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), add(add(mul(mul(add(compare_blocks_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), add(add(ones_diff_rows, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols))), compare_blocks_rows), mul(ones_diff_cols, zeros_diff_rows))))
COND TREES:
or_(and_(or_(or_(True, True), or_(True, False)), ge(compare_blocks_rows, _if_then_else(False, _if_then_else(False, 1, ones_diff_cols), zeros_diff_cols))), le(_if_then_else(and_(False, True), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(or_(True, True), _if_then_else(False, _if_then_else(True, 4, compare_blocks_cols), max_row_clue), _if_then_else(True, ones_diff_cols, 0))), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(True, ones_diff_cols, 0))))
or_(False, ge(_if_then_else(le(compare_blocks_cols, 3), 2, _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(True, _if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(False, compare_blocks_cols, 1))))
or_(le(_if_then_else(le(compare_blocks_rows, zeros_diff_cols), 0, 2), _if_then_else(True, 0, 2)), False)
or_(le(_if_then_else(and_(and_(False, False), and_(True, False)), _if_then_else(le(max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, max_col_clue, 2)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows))), _if_then_else(le(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(False, 0, compare_blocks_rows), _if_then_else(False, ones_diff_rows, max_col_clue)), _if_then_else(or_(le(zeros_diff_cols, zeros_diff_rows), True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 2, 0)))), and_(ge(_if_then_else(ge(compare_blocks_rows, zeros_diff_cols), _if_then_else(and_(True, True), _if_then_else(False, 0, max_col_clue), _if_then_else(and_(and_(ge(_if_then_else(False, 1, max_row_clue), _if_then_else(True, 4, 4)), and_(and_(False, True), and_(True, False))), ge(_if_then_else(ge(1, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, compare_blocks_rows)), _if_then_else(le(1, 0), _if_then_else(True, 4, compare_blocks_cols), _if_then_else(False, 3, 4)))), _if_then_else(and_(and_(or_(True, True), or_(True, False)), or_(and_(True, True), ge(1, ones_diff_rows))), _if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(True, ones_diff_rows, 4)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_rows, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, 1, 2), _if_then_else(True, ones_diff_rows, 4))), _if_then_else(and_(ge(zeros_diff_rows, 3), ge(max_row_clue, max_col_clue)), _if_then_else(le(max_col_clue, 2), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(True, 0, zeros_diff_rows)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_cols, 2), _if_then_else(True, 3, 0)))), _if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, max_col_clue, ones_diff_rows)), _if_then_else(le(1, 4), _if_then_else(True, 3, ones_diff_rows), _if_then_else(True, max_row_clue, max_row_clue))), _if_then_else(le(_if_then_else(True, 0, max_col_clue), _if_then_else(True, 4, ones_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, ones_diff_rows, 2), _if_then_else(False, ones_diff_rows, 2)), _if_then_else(and_(False, True), _if_then_else(True, 3, 2), _if_then_else(False, 4, 2))), _if_then_else(ge(_if_then_else(False, 2, 4), _if_then_else(False, max_col_clue, max_col_clue)), _if_then_else(ge(2, 3), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(True, ones_diff_rows, 0)), _if_then_else(ge(zeros_diff_rows, 2), _if_then_else(True, 2, ones_diff_rows), _if_then_else(False, zeros_diff_cols, 3)))))), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(compare_blocks_rows, ones_diff_rows), _if_then_else(False, 1, zeros_diff_cols), _if_then_else(False, ones_diff_rows, 4))), le(_if_then_else(and_(False, True), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 2, 4)), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_cols)))))
or_(or_(and_(True, False), le(_if_then_else(False, _if_then_else(False, zeros_diff_rows, _if_then_else(True, 4, compare_blocks_rows)), _if_then_else(and_(le(zeros_diff_cols, 3), ge(zeros_diff_cols, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_cols, 4)), _if_then_else(le(ones_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 4, 1)))), ones_diff_rows)), or_(or_(and_(and_(ge(compare_blocks_rows, compare_blocks_cols), ge(1, 1)), False), le(_if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), compare_blocks_cols), ones_diff_rows)), ge(max_col_clue, _if_then_else(True, 0, 0))))
VAL TREES:
mul(mul(add(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), mul(add(ones_diff_rows, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows)))
mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(mul(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)))
add(mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), mul(compare_blocks_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_rows)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)))
add(add(add(add(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows))), mul(mul(add(ones_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))))
add(add(add(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))
COND TREES:
or_(and_(or_(or_(True, True), or_(True, False)), ge(_if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, zeros_diff_cols))), le(_if_then_else(and_(True, True), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, ones_diff_cols, max_row_clue)), _if_then_else(False, ones_diff_cols, max_row_clue)))
or_(le(_if_then_else(True, _if_then_else(le(_if_then_else(True, _if_then_else(False, zeros_diff_rows, zeros_diff_rows), 2), _if_then_else(or_(False, True), _if_then_else(False, 1, 3), compare_blocks_cols)), zeros_diff_rows, zeros_diff_rows), 2), ones_diff_rows), ge(_if_then_else(True, _if_then_else(False, _if_then_else(True, ones_diff_cols, ones_diff_cols), max_row_clue), _if_then_else(False, _if_then_else(False, compare_blocks_cols, ones_diff_cols), compare_blocks_cols)), _if_then_else(True, compare_blocks_rows, 2)))
or_(le(zeros_diff_rows, zeros_diff_cols), False)
or_(le(_if_then_else(and_(and_(False, False), and_(True, False)), _if_then_else(le(max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(and_(or_(or_(True, False), le(1, zeros_diff_rows)), and_(le(3, ones_diff_rows), le(1, ones_diff_rows))), 1, 2)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows))), _if_then_else(le(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(False, _if_then_else(False, 0, compare_blocks_rows), compare_blocks_rows), _if_then_else(False, zeros_diff_rows, max_col_clue)), _if_then_else(or_(le(zeros_diff_cols, zeros_diff_rows), True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 2, 0)))), and_(ge(_if_then_else(ge(compare_blocks_rows, zeros_diff_cols), _if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(compare_blocks_rows, ones_diff_rows), _if_then_else(False, 1, zeros_diff_cols), _if_then_else(False, ones_diff_rows, 4))), le(_if_then_else(False, _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 2, 4)), _if_then_else(and_(False, False), _if_then_else(and_(False, False), ones_diff_cols, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_cols)))))
or_(le(max_row_clue, _if_then_else(False, ones_diff_rows, 4)), False)
VAL TREES:
mul(mul(add(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), mul(add(ones_diff_rows, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows)))
mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(mul(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)))
add(mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), mul(compare_blocks_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_rows)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)))
add(add(add(add(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows))), mul(mul(add(ones_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))))
add(add(add(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))
COND TREES:
le(_if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, _if_then_else(False, compare_blocks_rows, 0), ones_diff_cols), _if_then_else(or_(le(_if_then_else(le(3, max_col_clue), _if_then_else(True, 4, 3), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(True, 1, 2), _if_then_else(True, compare_blocks_cols, compare_blocks_rows))), ge(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, 3), _if_then_else(True, ones_diff_cols, zeros_diff_cols)), _if_then_else(and_(False, False), _if_then_else(True, 2, 0), _if_then_else(True, 4, 4)))), 3, zeros_diff_cols)), _if_then_else(ge(ones_diff_rows, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, _if_then_else(False, max_row_clue, compare_blocks_rows)), _if_then_else(True, compare_blocks_rows, max_row_clue)))
le(zeros_diff_rows, _if_then_else(or_(True, False), _if_then_else(False, _if_then_else(ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(and_(True, False), 1, zeros_diff_rows)), _if_then_else(le(0, 1), _if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, max_col_clue)), _if_then_else(le(_if_then_else(False, compare_blocks_cols, zeros_diff_rows), compare_blocks_cols), _if_then_else(and_(True, False), _if_then_else(True, 1, zeros_diff_cols), 3), _if_then_else(or_(True, True), _if_then_else(False, compare_blocks_rows, 1), 1))), zeros_diff_rows), _if_then_else(True, 0, zeros_diff_rows)))
or_(or_(or_(ge(max_col_clue, _if_then_else(True, 3, zeros_diff_cols)), le(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, _if_then_else(False, 4, 3), 2)), _if_then_else(and_(False, ge(zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(False, False), ones_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(and_(le(ones_diff_rows, ones_diff_cols), le(ones_diff_rows, 2)), _if_then_else(True, 0, ones_diff_cols), _if_then_else(False, _if_then_else(True, 1, compare_blocks_rows), zeros_diff_cols))), ones_diff_cols)), ge(_if_then_else(False, max_row_clue, ones_diff_rows), _if_then_else(le(compare_blocks_rows, zeros_diff_cols), max_row_clue, compare_blocks_rows))), and_(le(_if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(False, 2, ones_diff_rows)), le(max_row_clue, 2)))
le(_if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(False, zeros_diff_cols, ones_diff_rows), _if_then_else(True, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(True, 2, zeros_diff_rows), _if_then_else(False, 1, compare_blocks_cols)))
le(_if_then_else(or_(le(_if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), ge(_if_then_else(False, max_col_clue, 0), _if_then_else(False, 0, 1))), _if_then_else(le(_if_then_else(False, 4, ones_diff_cols), _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), _if_then_else(and_(False, False), _if_then_else(True, 1, 2), _if_then_else(False, zeros_diff_cols, max_row_clue)), _if_then_else(ge(0, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(True, ones_diff_rows, max_row_clue))), _if_then_else(le(_if_then_else(False, 3, max_row_clue), _if_then_else(True, 4, compare_blocks_rows)), _if_then_else(le(ones_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(True, 4, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, 4, 0), _if_then_else(True, 4, compare_blocks_rows)))), _if_then_else(ge(_if_then_else(ge(compare_blocks_rows, max_row_clue), _if_then_else(le(_if_then_else(False, _if_then_else(False, zeros_diff_rows, 4), compare_blocks_cols), ones_diff_rows), zeros_diff_cols, 3), _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), _if_then_else(or_(False, True), _if_then_else(False, 0, ones_diff_cols), _if_then_else(False, max_row_clue, max_row_clue))), _if_then_else(and_(or_(True, False), and_(True, False)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(False, 1, zeros_diff_rows)), _if_then_else(or_(False, True), _if_then_else(False, 4, 2), _if_then_else(False, ones_diff_cols, zeros_diff_cols))), _if_then_else(and_(and_(False, False), le(ones_diff_cols, 4)), _if_then_else(le(3, ones_diff_cols), _if_then_else(False, zeros_diff_rows, ones_diff_cols), _if_then_else(False, ones_diff_cols, max_row_clue)), _if_then_else(or_(True, True), _if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(False, 0, 4)))))
VAL TREES:
add(add(mul(compare_blocks_cols, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_cols)), add(add(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, ones_diff_cols)))
add(mul(mul(mul(mul(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(add(add(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_rows)))), mul(add(add(mul(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_cols)), add(add(zeros_diff_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_cols))), add(add(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, ones_diff_cols)), mul(add(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)))))
mul(add(add(add(mul(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_rows)), add(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, zeros_diff_rows))), mul(mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_rows, ones_diff_rows)))), add(mul(add(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_rows)), add(mul(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_cols))), add(add(mul(ones_diff_cols, zeros_diff_rows), add(zeros_diff_cols, ones_diff_cols)), add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)))))
add(add(mul(add(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)), mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows))), add(add(add(ones_diff_rows, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_rows)), mul(add(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_rows)))), mul(mul(add(add(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)), mul(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_cols))), add(mul(mul(compare_blocks_rows, ones_diff_cols), add(compare_blocks_rows, ones_diff_cols)), mul(mul(compare_blocks_rows, ones_diff_cols), mul(ones_diff_cols, ones_diff_rows)))))
add(add(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)), mul(mul(compare_blocks_rows, ones_diff_cols), add(zeros_diff_rows, compare_blocks_cols)))
add(mul(add(add(ones_diff_rows, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_cols)), add(zeros_diff_rows, zeros_diff_cols)), add(add(mul(ones_diff_cols, zeros_diff_cols), compare_blocks_rows), mul(mul(compare_blocks_rows, ones_diff_cols), ones_diff_rows)))
COND TREES:
and_(le(_if_then_else(ge(max_col_clue, max_row_clue), _if_then_else(True, 1, 0), _if_then_else(True, max_row_clue, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, max_row_clue, compare_blocks_rows), _if_then_else(False, 1, ones_diff_cols))), and_(and_(False, True), ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, max_col_clue, 4))))
and_(and_(True, ge(zeros_diff_rows, compare_blocks_rows)), False)
ge(_if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, 3)), _if_then_else(or_(True, and_(ge(compare_blocks_rows, 3), and_(False, False))), _if_then_else(False, 3, ones_diff_cols), _if_then_else(or_(le(ones_diff_cols, zeros_diff_rows), ge(1, _if_then_else(True, zeros_diff_rows, compare_blocks_rows))), compare_blocks_cols, compare_blocks_rows)))
le(_if_then_else(le(max_col_clue, max_row_clue), _if_then_else(False, max_col_clue, ones_diff_cols), zeros_diff_rows), _if_then_else(True, _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, 4, 2)))
or_(and_(ge(max_row_clue, _if_then_else(False, ones_diff_rows, ones_diff_rows)), ge(3, zeros_diff_cols)), or_(and_(False, True), or_(True, or_(True, True))))
VAL TREES:
add(add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols)), add(mul(zeros_diff_rows, mul(compare_blocks_rows, compare_blocks_rows)), add(compare_blocks_rows, mul(zeros_diff_cols, zeros_diff_cols))))
add(mul(mul(mul(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)), add(compare_blocks_cols, ones_diff_rows)))
mul(mul(mul(zeros_diff_cols, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)))
mul(add(add(zeros_diff_cols, mul(ones_diff_rows, mul(compare_blocks_rows, zeros_diff_cols))), mul(ones_diff_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, mul(zeros_diff_cols, compare_blocks_cols)), mul(ones_diff_cols, ones_diff_rows)))
add(mul(add(add(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_cols))), mul(add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), add(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_rows))))
COND TREES:
or_(and_(or_(or_(True, True), or_(True, False)), ge(compare_blocks_rows, _if_then_else(False, _if_then_else(False, 1, ones_diff_cols), zeros_diff_cols))), le(_if_then_else(and_(False, True), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, ones_diff_cols, max_row_clue)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(True, ones_diff_cols, 0))))
or_(le(_if_then_else(True, _if_then_else(False, zeros_diff_rows, zeros_diff_rows), 2), _if_then_else(or_(False, True), _if_then_else(False, 1, 3), compare_blocks_cols)), ge(_if_then_else(le(compare_blocks_cols, 3), 2, _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(True, _if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(False, compare_blocks_cols, 1))))
or_(le(_if_then_else(le(compare_blocks_rows, zeros_diff_cols), 0, 2), _if_then_else(True, zeros_diff_rows, 2)), False)
or_(le(_if_then_else(and_(and_(False, False), and_(True, False)), _if_then_else(le(max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, max_col_clue, 2)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows))), _if_then_else(le(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(False, 0, compare_blocks_rows), _if_then_else(False, ones_diff_rows, max_col_clue)), _if_then_else(or_(le(zeros_diff_cols, zeros_diff_rows), True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 2, 0)))), and_(ge(_if_then_else(ge(compare_blocks_rows, zeros_diff_cols), _if_then_else(and_(True, True), _if_then_else(False, 0, max_col_clue), _if_then_else(True, max_col_clue, ones_diff_rows)), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(compare_blocks_rows, ones_diff_rows), _if_then_else(False, 1, zeros_diff_cols), _if_then_else(False, ones_diff_rows, 4))), le(_if_then_else(and_(False, True), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 2, 4)), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_cols)))))
or_(or_(and_(True, False), le(_if_then_else(False, _if_then_else(False, zeros_diff_rows, _if_then_else(True, 4, compare_blocks_rows)), ones_diff_rows), ones_diff_rows)), or_(le(max_row_clue, _if_then_else(False, ones_diff_rows, 4)), ge(max_col_clue, _if_then_else(True, 0, 0))))
VAL TREES:
mul(mul(add(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), mul(add(ones_diff_rows, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows)))
mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(mul(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)))
add(mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), mul(compare_blocks_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_rows)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)))
add(add(add(add(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows))), mul(mul(add(ones_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))))
add(add(add(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))
COND TREES:
or_(and_(or_(or_(True, True), or_(True, False)), ge(_if_then_else(True, ones_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, zeros_diff_cols))), le(_if_then_else(True, _if_then_else(True, max_row_clue, zeros_diff_rows), _if_then_else(False, ones_diff_cols, _if_then_else(True, 0, 1))), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(True, ones_diff_cols, 0))))
or_(le(_if_then_else(True, _if_then_else(False, zeros_diff_rows, zeros_diff_rows), 2), _if_then_else(or_(False, True), _if_then_else(False, 1, _if_then_else(True, _if_then_else(False, zeros_diff_rows, zeros_diff_rows), 2)), compare_blocks_cols)), ge(zeros_diff_rows, _if_then_else(True, _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, compare_blocks_cols, 1))))
or_(le(_if_then_else(le(compare_blocks_rows, zeros_diff_cols), 0, 2), _if_then_else(and_(ge(_if_then_else(or_(or_(True, True), False), _if_then_else(False, ones_diff_rows, 2), _if_then_else(and_(True, True), 0, 2)), max_row_clue), or_(True, True)), _if_then_else(and_(False, True), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(False, 4, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(True, 1, max_col_clue), _if_then_else(False, zeros_diff_cols, _if_then_else(and_(or_(True, True), and_(False, False)), ones_diff_rows, _if_then_else(and_(True, False), _if_then_else(False, ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, 2, ones_diff_rows), ones_diff_cols))))))), False)
or_(le(_if_then_else(and_(and_(False, False), and_(True, False)), _if_then_else(False, _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 1, 2)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows))), _if_then_else(le(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(False, 0, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, max_col_clue)), _if_then_else(or_(le(zeros_diff_cols, zeros_diff_rows), True), _if_then_else(False, 0, max_col_clue), _if_then_else(False, 2, 0)))), and_(ge(_if_then_else(ge(compare_blocks_rows, zeros_diff_cols), _if_then_else(and_(True, True), _if_then_else(False, 0, max_col_clue), _if_then_else(True, max_col_clue, ones_diff_rows)), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(compare_blocks_rows, ones_diff_rows), _if_then_else(False, 1, zeros_diff_cols), _if_then_else(False, ones_diff_rows, 4))), le(_if_then_else(and_(False, True), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 2, 4)), _if_then_else(and_(False, True), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_cols)))))
or_(or_(and_(True, False), and_(False, True)), or_(le(max_row_clue, _if_then_else(False, ones_diff_rows, 4)), ge(max_col_clue, _if_then_else(True, 0, 0))))
VAL TREES:
mul(mul(add(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), mul(add(ones_diff_rows, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows)))
mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(mul(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)))
add(mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), mul(compare_blocks_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_rows)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)))
add(add(add(add(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows))), mul(mul(add(ones_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))))
add(add(add(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))
COND TREES:
and_(le(_if_then_else(ge(max_col_clue, _if_then_else(False, 0, _if_then_else(True, ones_diff_cols, max_col_clue))), _if_then_else(True, 1, 0), _if_then_else(True, max_row_clue, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, max_row_clue, compare_blocks_rows), _if_then_else(False, 1, ones_diff_cols))), and_(and_(False, True), ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, max_col_clue, 4))))
and_(and_(True, False), False)
ge(_if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, 3)), _if_then_else(or_(True, and_(ge(compare_blocks_rows, 3), and_(False, False))), _if_then_else(False, 3, ones_diff_cols), compare_blocks_rows))
le(_if_then_else(le(max_col_clue, max_row_clue), _if_then_else(False, max_col_clue, ones_diff_cols), zeros_diff_rows), _if_then_else(True, _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, 4, 2)))
or_(and_(ge(max_row_clue, _if_then_else(False, ones_diff_rows, ones_diff_rows)), False), or_(and_(False, True), or_(True, or_(True, True))))
VAL TREES:
add(add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols)), add(mul(zeros_diff_rows, mul(compare_blocks_rows, compare_blocks_rows)), add(compare_blocks_rows, mul(zeros_diff_cols, zeros_diff_cols))))
add(mul(mul(mul(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)), add(compare_blocks_cols, ones_diff_rows)))
mul(mul(mul(zeros_diff_cols, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)))
mul(add(add(zeros_diff_cols, mul(ones_diff_rows, mul(compare_blocks_rows, zeros_diff_cols))), mul(ones_diff_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, mul(zeros_diff_cols, compare_blocks_cols)), mul(ones_diff_cols, ones_diff_rows)))
add(mul(add(add(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_cols))), mul(add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), add(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_rows))))
COND TREES:
and_(le(_if_then_else(or_(or_(False, True), ge(_if_then_else(True, _if_then_else(True, max_col_clue, max_row_clue), ones_diff_cols), ones_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, 3), 0), 1), _if_then_else(and_(False, False), _if_then_else(True, 3, zeros_diff_rows), zeros_diff_rows)), _if_then_else(ge(_if_then_else(False, zeros_diff_rows, _if_then_else(True, 0, zeros_diff_cols)), _if_then_else(or_(True, False), 1, 4)), _if_then_else(or_(False, or_(True, True)), 1, ones_diff_rows), _if_then_else(True, max_row_clue, _if_then_else(True, 3, _if_then_else(True, max_row_clue, compare_blocks_rows))))), _if_then_else(or_(True, True), _if_then_else(False, max_row_clue, compare_blocks_rows), ones_diff_cols)), and_(and_(False, True), ge(zeros_diff_rows, _if_then_else(True, max_col_clue, 4))))
and_(and_(True, ge(zeros_diff_rows, ones_diff_cols)), ge(zeros_diff_rows, compare_blocks_rows))
ge(_if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, 3)), _if_then_else(or_(True, and_(ge(_if_then_else(or_(le(ones_diff_cols, zeros_diff_rows), ge(1, _if_then_else(True, zeros_diff_rows, _if_then_else(le(_if_then_else(True, _if_then_else(True, _if_then_else(True, zeros_diff_cols, ones_diff_cols), ones_diff_rows), 3), _if_then_else(or_(True, True), ones_diff_rows, _if_then_else(le(compare_blocks_rows, 4), compare_blocks_rows, _if_then_else(False, max_row_clue, compare_blocks_cols)))), _if_then_else(le(4, max_row_clue), _if_then_else(False, 1, compare_blocks_cols), _if_then_else(False, 2, compare_blocks_rows)), _if_then_else(le(ones_diff_rows, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, ones_diff_rows, max_row_clue)))))), compare_blocks_cols, compare_blocks_rows), 3), and_(False, False))), _if_then_else(False, 3, ones_diff_cols), _if_then_else(or_(False, ge(1, _if_then_else(True, zeros_diff_rows, compare_blocks_rows))), compare_blocks_cols, compare_blocks_rows)))
le(_if_then_else(le(1, max_row_clue), _if_then_else(False, max_col_clue, ones_diff_cols), zeros_diff_rows), _if_then_else(True, _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, 4, 2)))
or_(and_(ge(max_row_clue, _if_then_else(False, ones_diff_rows, ones_diff_rows)), ge(3, zeros_diff_cols)), or_(and_(False, True), or_(True, or_(or_(and_(False, True), or_(and_(True, False), or_(True, True))), True))))
VAL TREES:
add(add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols)), add(mul(zeros_diff_rows, mul(compare_blocks_rows, compare_blocks_rows)), add(compare_blocks_rows, mul(zeros_diff_cols, zeros_diff_cols))))
add(mul(mul(mul(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)), add(compare_blocks_cols, ones_diff_rows)))
mul(mul(mul(zeros_diff_cols, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)))
mul(add(add(zeros_diff_cols, mul(ones_diff_rows, mul(compare_blocks_rows, zeros_diff_cols))), mul(ones_diff_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, mul(zeros_diff_cols, compare_blocks_cols)), mul(ones_diff_cols, ones_diff_rows)))
add(mul(add(add(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_cols))), mul(add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), add(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_rows))))
COND TREES:
or_(and_(or_(or_(True, True), True), ge(_if_then_else(True, ones_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, zeros_diff_cols))), le(_if_then_else(and_(False, True), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, ones_diff_cols, _if_then_else(True, 0, 1))), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(True, ones_diff_cols, 0))))
or_(le(_if_then_else(True, _if_then_else(False, zeros_diff_rows, zeros_diff_rows), 2), _if_then_else(or_(False, True), _if_then_else(False, 1, 3), compare_blocks_cols)), ge(_if_then_else(le(compare_blocks_cols, 3), 2, _if_then_else(False, ones_diff_cols, 4)), _if_then_else(True, _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, compare_blocks_cols, 1))))
or_(le(1, _if_then_else(and_(ge(_if_then_else(or_(or_(True, True), False), _if_then_else(False, ones_diff_rows, 2), _if_then_else(and_(True, True), 0, 2)), max_row_clue), or_(True, True)), _if_then_else(and_(False, True), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(False, 4, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(True, 1, max_col_clue), _if_then_else(False, zeros_diff_cols, _if_then_else(and_(or_(True, True), and_(False, False)), _if_then_else(and_(False, True), _if_then_else(True, 3, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, 2, ones_diff_rows), ones_diff_cols))))))), False)
or_(le(_if_then_else(and_(and_(False, False), and_(True, False)), _if_then_else(le(max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 1, 2)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows))), _if_then_else(le(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(False, 0, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, max_col_clue)), _if_then_else(or_(le(zeros_diff_cols, zeros_diff_rows), True), _if_then_else(False, 0, max_col_clue), _if_then_else(False, 2, 0)))), and_(ge(_if_then_else(ge(compare_blocks_rows, zeros_diff_cols), _if_then_else(and_(True, True), _if_then_else(False, 0, max_col_clue), _if_then_else(True, max_col_clue, ones_diff_rows)), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(compare_blocks_rows, ones_diff_rows), ones_diff_cols, _if_then_else(False, ones_diff_rows, 4))), le(_if_then_else(and_(False, True), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 2, 4)), _if_then_else(and_(False, True), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_cols)))))
or_(or_(and_(True, False), and_(False, True)), or_(le(max_row_clue, _if_then_else(False, ones_diff_rows, 4)), ge(ones_diff_rows, _if_then_else(True, 0, 0))))
VAL TREES:
mul(mul(add(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), mul(add(ones_diff_rows, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows)))
mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(mul(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)))
add(mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), mul(compare_blocks_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_rows)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)))
add(add(add(add(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows))), mul(mul(add(ones_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))))
add(add(add(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, compare_blocks_cols)))
COND TREES:
le(_if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, _if_then_else(False, compare_blocks_rows, 0), ones_diff_cols), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), 3, zeros_diff_cols)), _if_then_else(ge(ones_diff_rows, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, _if_then_else(False, max_row_clue, compare_blocks_rows)), _if_then_else(True, compare_blocks_rows, max_row_clue)))
le(zeros_diff_rows, _if_then_else(or_(True, False), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, 0, zeros_diff_rows)))
or_(or_(or_(ge(max_col_clue, _if_then_else(True, 3, zeros_diff_cols)), le(max_col_clue, ones_diff_cols)), ge(_if_then_else(False, max_row_clue, ones_diff_rows), _if_then_else(le(compare_blocks_rows, zeros_diff_cols), max_row_clue, compare_blocks_rows))), and_(le(_if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(False, 2, ones_diff_rows)), le(max_row_clue, 2)))
le(_if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(False, zeros_diff_cols, ones_diff_rows), _if_then_else(True, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(True, 2, zeros_diff_rows), _if_then_else(False, 1, compare_blocks_cols)))
le(_if_then_else(or_(le(_if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), ge(_if_then_else(False, max_col_clue, 0), _if_then_else(False, 0, 1))), _if_then_else(le(_if_then_else(False, 4, ones_diff_cols), _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), _if_then_else(and_(False, False), _if_then_else(True, 1, 2), _if_then_else(False, zeros_diff_cols, max_row_clue)), _if_then_else(ge(0, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(True, ones_diff_rows, max_row_clue))), _if_then_else(le(_if_then_else(False, 3, max_row_clue), _if_then_else(True, 4, compare_blocks_rows)), _if_then_else(le(ones_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(True, 4, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, 4, 0), _if_then_else(True, 4, compare_blocks_rows)))), _if_then_else(ge(_if_then_else(ge(compare_blocks_rows, max_row_clue), _if_then_else(le(_if_then_else(False, _if_then_else(False, zeros_diff_rows, 4), compare_blocks_cols), ones_diff_rows), zeros_diff_cols, 3), _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), _if_then_else(or_(False, True), _if_then_else(False, 0, ones_diff_cols), _if_then_else(False, max_row_clue, max_row_clue))), _if_then_else(and_(or_(True, False), and_(True, False)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(False, 1, zeros_diff_rows)), _if_then_else(or_(False, True), _if_then_else(False, 4, 2), _if_then_else(False, ones_diff_cols, zeros_diff_cols))), _if_then_else(and_(and_(False, False), le(ones_diff_cols, 4)), _if_then_else(le(3, ones_diff_cols), _if_then_else(False, zeros_diff_rows, ones_diff_cols), _if_then_else(False, ones_diff_cols, max_row_clue)), _if_then_else(or_(True, True), _if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(False, 0, 4)))))
VAL TREES:
add(add(mul(compare_blocks_cols, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_cols)), add(add(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, ones_diff_cols)))
add(mul(mul(mul(mul(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(add(add(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_rows)))), mul(add(add(mul(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_cols)), add(add(zeros_diff_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_cols))), add(add(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, ones_diff_cols)), mul(add(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)))))
mul(add(add(add(mul(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_rows)), add(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, zeros_diff_rows))), mul(mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_rows, ones_diff_rows)))), add(mul(add(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_rows)), add(mul(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_cols))), add(add(mul(ones_diff_cols, zeros_diff_rows), add(zeros_diff_cols, ones_diff_cols)), add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)))))
add(add(mul(add(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)), mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows))), add(add(add(ones_diff_rows, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_rows)), mul(add(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_rows)))), mul(mul(add(add(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)), mul(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_cols))), add(mul(mul(compare_blocks_rows, ones_diff_cols), add(compare_blocks_rows, ones_diff_cols)), mul(mul(compare_blocks_rows, ones_diff_cols), mul(ones_diff_cols, ones_diff_rows)))))
add(add(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)), mul(mul(compare_blocks_rows, ones_diff_cols), add(zeros_diff_rows, compare_blocks_cols)))
add(mul(add(add(ones_diff_rows, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_cols)), add(zeros_diff_rows, zeros_diff_cols)), add(add(mul(ones_diff_cols, zeros_diff_cols), compare_blocks_rows), mul(mul(compare_blocks_rows, ones_diff_cols), ones_diff_rows)))
COND TREES:
and_(le(_if_then_else(ge(1, ones_diff_cols), _if_then_else(True, 1, 0), _if_then_else(or_(True, True), _if_then_else(False, max_row_clue, compare_blocks_rows), _if_then_else(False, 1, ones_diff_cols))), _if_then_else(or_(True, True), _if_then_else(False, max_row_clue, _if_then_else(True, ones_diff_cols, 0)), _if_then_else(False, 1, ones_diff_cols))), and_(and_(le(max_col_clue, compare_blocks_cols), ge(max_col_clue, max_row_clue)), ge(_if_then_else(True, ones_diff_cols, _if_then_else(and_(or_(and_(True, True), False), and_(False, False)), _if_then_else(le(_if_then_else(False, 0, ones_diff_rows), compare_blocks_rows), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, 0, 3)), _if_then_else(or_(False, False), _if_then_else(True, _if_then_else(True, max_row_clue, compare_blocks_cols), 4), _if_then_else(False, 2, ones_diff_rows)))), _if_then_else(True, max_col_clue, 4))))
and_(True, le(compare_blocks_cols, 3))
ge(_if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, max_col_clue), _if_then_else(False, zeros_diff_rows, 3)), _if_then_else(or_(True, and_(le(compare_blocks_rows, zeros_diff_cols), and_(True, ge(4, 1)))), _if_then_else(False, 3, ones_diff_cols), _if_then_else(le(compare_blocks_rows, zeros_diff_cols), compare_blocks_cols, compare_blocks_rows)))
le(_if_then_else(le(max_col_clue, max_row_clue), _if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols)), _if_then_else(False, _if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(False, ones_diff_cols, _if_then_else(le(_if_then_else(True, compare_blocks_rows, 3), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), _if_then_else(le(max_col_clue, 1), _if_then_else(True, ones_diff_rows, compare_blocks_cols), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(le(4, 4), _if_then_else(True, ones_diff_rows, 0), _if_then_else(False, ones_diff_cols, compare_blocks_cols))))))
or_(and_(and_(ge(max_row_clue, _if_then_else(False, zeros_diff_rows, 1)), ge(zeros_diff_rows, zeros_diff_cols)), ge(3, zeros_diff_cols)), or_(and_(False, le(max_row_clue, _if_then_else(or_(and_(True, False), or_(False, True)), _if_then_else(ge(ones_diff_rows, zeros_diff_cols), _if_then_else(True, max_row_clue, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, 4, 1), _if_then_else(False, 4, zeros_diff_rows))))), or_(True, ge(max_col_clue, _if_then_else(True, 0, 0)))))
VAL TREES:
add(add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols)), add(mul(zeros_diff_rows, mul(compare_blocks_rows, compare_blocks_rows)), add(compare_blocks_rows, mul(zeros_diff_cols, zeros_diff_cols))))
add(mul(mul(mul(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)), add(compare_blocks_cols, ones_diff_rows)))
mul(mul(mul(zeros_diff_cols, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)))
mul(add(add(zeros_diff_cols, mul(ones_diff_rows, mul(compare_blocks_rows, zeros_diff_cols))), mul(ones_diff_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, mul(zeros_diff_cols, compare_blocks_cols)), mul(ones_diff_cols, ones_diff_rows)))
add(mul(add(add(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_cols))), mul(add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), add(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_rows))))
COND TREES:
and_(le(_if_then_else(ge(max_col_clue, max_row_clue), _if_then_else(or_(True, False), 1, 0), _if_then_else(True, max_row_clue, zeros_diff_rows)), 0), and_(and_(le(max_col_clue, compare_blocks_cols), ge(max_col_clue, max_row_clue)), ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, max_col_clue, 4))))
and_(and_(True, ge(zeros_diff_rows, compare_blocks_rows)), True)
ge(_if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, 3)), _if_then_else(or_(True, and_(ge(compare_blocks_rows, 3), and_(False, ge(4, 1)))), _if_then_else(False, 3, ones_diff_cols), _if_then_else(or_(le(ones_diff_cols, zeros_diff_rows), ge(_if_then_else(False, 0, 2), _if_then_else(True, zeros_diff_rows, compare_blocks_rows))), compare_blocks_cols, compare_blocks_rows)))
le(_if_then_else(le(zeros_diff_rows, max_row_clue), _if_then_else(False, max_col_clue, _if_then_else(False, 1, zeros_diff_cols)), zeros_diff_rows), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, 4, 2)))
or_(and_(ge(max_row_clue, _if_then_else(False, 3, max_col_clue)), ge(3, zeros_diff_cols)), or_(and_(False, True), or_(True, or_(True, True))))
VAL TREES:
add(add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols)), add(mul(zeros_diff_rows, mul(compare_blocks_rows, compare_blocks_rows)), add(compare_blocks_rows, mul(zeros_diff_cols, zeros_diff_cols))))
add(mul(mul(mul(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)), add(compare_blocks_cols, ones_diff_rows)))
mul(mul(mul(zeros_diff_cols, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)))
mul(add(add(zeros_diff_cols, mul(ones_diff_rows, mul(compare_blocks_rows, zeros_diff_cols))), mul(ones_diff_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, mul(zeros_diff_cols, compare_blocks_cols)), mul(ones_diff_cols, ones_diff_rows)))
add(mul(add(add(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_cols))), mul(add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), add(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_rows))))
COND TREES:
or_(and_(or_(or_(True, True), or_(True, False)), ge(_if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, zeros_diff_cols))), le(_if_then_else(and_(False, True), _if_then_else(or_(True, True), 0, zeros_diff_rows), _if_then_else(False, ones_diff_cols, _if_then_else(True, 0, 1))), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(True, ones_diff_cols, 0))))
or_(le(compare_blocks_rows, _if_then_else(or_(False, True), ones_diff_cols, compare_blocks_cols)), ge(_if_then_else(True, zeros_diff_rows, _if_then_else(False, ones_diff_cols, 4)), _if_then_else(True, _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, compare_blocks_cols, 1))))
or_(True, False)
or_(le(_if_then_else(and_(and_(False, False), and_(True, False)), _if_then_else(le(max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 1, 2)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows))), _if_then_else(le(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(False, 0, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, max_col_clue)), _if_then_else(or_(le(zeros_diff_cols, zeros_diff_rows), True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 2, 0)))), and_(ge(_if_then_else(ge(compare_blocks_rows, zeros_diff_cols), _if_then_else(and_(True, True), _if_then_else(False, 0, max_col_clue), _if_then_else(True, max_col_clue, ones_diff_rows)), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(compare_blocks_rows, ones_diff_rows), _if_then_else(False, 1, zeros_diff_cols), _if_then_else(False, ones_diff_rows, 4))), le(_if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 2, 4)), _if_then_else(and_(False, True), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_cols)))))
or_(or_(and_(True, False), le(_if_then_else(False, _if_then_else(False, _if_then_else(False, ones_diff_rows, ones_diff_rows), 4), 2), ones_diff_rows)), ge(max_row_clue, _if_then_else(False, 3, ones_diff_rows)))
VAL TREES:
mul(mul(add(mul(add(add(add(zeros_diff_cols, ones_diff_rows), zeros_diff_cols), mul(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_cols), mul(ones_diff_rows, zeros_diff_rows))), ones_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), mul(add(ones_diff_rows, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows)))
mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(mul(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)))
add(mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), mul(compare_blocks_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), add(add(mul(zeros_diff_cols, zeros_diff_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows)))), add(compare_blocks_rows, compare_blocks_rows)))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)))
add(add(add(add(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows))), mul(mul(add(mul(add(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, add(compare_blocks_cols, ones_diff_rows))), mul(mul(ones_diff_cols, zeros_diff_cols), add(compare_blocks_rows, ones_diff_cols))), zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))))
add(add(add(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(mul(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_cols)))))
COND TREES:
and_(le(_if_then_else(ge(max_col_clue, max_row_clue), _if_then_else(True, 1, 0), _if_then_else(True, max_row_clue, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, max_row_clue, compare_blocks_rows), _if_then_else(False, 1, ones_diff_cols))), and_(and_(True, True), ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, max_col_clue, 4))))
and_(and_(True, ge(2, compare_blocks_rows)), False)
ge(_if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, 3)), _if_then_else(or_(True, and_(ge(compare_blocks_rows, 3), and_(False, False))), _if_then_else(False, 3, ones_diff_cols), _if_then_else(or_(le(ones_diff_cols, zeros_diff_rows), ge(1, _if_then_else(True, zeros_diff_rows, compare_blocks_rows))), compare_blocks_cols, compare_blocks_rows)))
le(_if_then_else(le(max_col_clue, max_row_clue), _if_then_else(False, max_col_clue, ones_diff_cols), zeros_diff_rows), _if_then_else(True, _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, 4, 2)))
or_(and_(ge(max_row_clue, zeros_diff_rows), ge(3, zeros_diff_cols)), or_(and_(False, True), or_(True, or_(True, True))))
VAL TREES:
add(add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols)), add(mul(zeros_diff_rows, mul(compare_blocks_rows, compare_blocks_rows)), add(compare_blocks_rows, mul(zeros_diff_cols, zeros_diff_cols))))
add(mul(mul(mul(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)), add(compare_blocks_cols, ones_diff_rows)))
mul(mul(mul(zeros_diff_cols, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)))
mul(add(add(zeros_diff_cols, mul(ones_diff_rows, mul(compare_blocks_rows, zeros_diff_cols))), mul(ones_diff_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, mul(zeros_diff_cols, compare_blocks_cols)), mul(ones_diff_cols, ones_diff_rows)))
add(mul(add(add(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_cols))), mul(add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), add(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_rows))))


INFO:root:hof: COND TREES:
ge(_if_then_else(ge(_if_then_else(or_(True, False), _if_then_else(False, max_row_clue, 4), _if_then_else(True, 1, zeros_diff_rows)), _if_then_else(and_(False, False), _if_then_else(False, 0, max_row_clue), _if_then_else(True, max_row_clue, 0))), _if_then_else(ge(_if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(True, zeros_diff_cols, zeros_diff_rows)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, 1), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), _if_then_else(le(_if_then_else(False, compare_blocks_cols, 0), _if_then_else(True, ones_diff_rows, ones_diff_cols)), _if_then_else(le(ones_diff_cols, ones_diff_rows), _if_then_else(True, 0, 0), _if_then_else(True, 4, zeros_diff_cols)), _if_then_else(le(compare_blocks_cols, ones_diff_cols), _if_then_else(False, compare_blocks_rows, 2), _if_then_else(True, 0, compare_blocks_rows)))), _if_then_else(and_(or_(le(4, compare_blocks_cols), ge(compare_blocks_rows, zeros_diff_rows)), ge(_if_then_else(False, max_col_clue, max_row_clue), _if_then_else(False, 1, 0))), _if_then_else(and_(or_(True, True), le(3, 4)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(False, max_row_clue, 1)), _if_then_else(or_(False, True), _if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, 3, compare_blocks_rows))), _if_then_else(le(_if_then_else(True, 3, compare_blocks_rows), _if_then_else(False, zeros_diff_cols, 4)), _if_then_else(and_(False, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, 2, compare_blocks_cols)), _if_then_else(ge(0, 0), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, 2, zeros_diff_cols)))))
or_(and_(or_(True, True), and_(True, True)), ge(_if_then_else(True, ones_diff_cols, zeros_diff_cols), _if_then_else(False, ones_diff_cols, compare_blocks_cols)))
or_(le(_if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(False, 3, 4)), ge(_if_then_else(True, 3, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, zeros_diff_rows)))
and_(le(_if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, compare_blocks_cols, 1)), le(_if_then_else(False, 1, ones_diff_rows), _if_then_else(True, ones_diff_cols, compare_blocks_rows)))
le(_if_then_else(ge(1, zeros_diff_cols), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, max_col_clue, ones_diff_cols)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, zeros_diff_cols), _if_then_else(False, 4, 1)))
VAL TREES:
add(mul(mul(mul(add(zeros_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_rows)), add(add(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_rows))), mul(mul(add(zeros_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_rows), add(ones_diff_rows, ones_diff_rows)))), mul(mul(mul(add(zeros_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows))), mul(mul(mul(compare_blocks_cols, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_cols)), mul(mul(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_rows)))))
mul(mul(add(zeros_diff_cols, ones_diff_cols), add(compare_blocks_rows, compare_blocks_rows)), add(add(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_cols, ones_diff_rows)))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, compare_blocks_cols)), mul(add(zeros_diff_cols, add(zeros_diff_cols, ones_diff_rows)), mul(ones_diff_rows, ones_diff_rows)))
add(add(add(compare_blocks_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), add(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_cols)))
mul(mul(mul(ones_diff_rows, zeros_diff_rows), add(mul(compare_blocks_rows, mul(compare_blocks_cols, ones_diff_rows)), ones_diff_cols)), mul(mul(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)))
mul(mul(add(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_cols, compare_blocks_cols)), mul(mul(add(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_rows)), add(ones_diff_rows, zeros_diff_rows)))


INFO:root:stats: {'fitness': <deap.tools.support.Statistics object at 0x000001C525466A20>, 'size': <deap.tools.support.Statistics object at 0x000001C525466A58>}

