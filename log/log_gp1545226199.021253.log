INFO:root:

*******STARTING!!!******


INFO:root:

*******Configuration******


INFO:root:# NUM_ROWS = 20


INFO:root:NUM_ROWS = 5


INFO:root:# NUM_COLS = 20


INFO:root:NUM_COLS = 5


INFO:root:empty_in_split = '\xa0'


INFO:root:


INFO:root:pickle_unsolved_file_path = 'data/%dx%d_nonograms.pkl' % (NUM_ROWS, NUM_COLS)


INFO:root:pickle_solved_file_path = 'data/%dx%d_nonograms_solved.pkl' % (NUM_ROWS, NUM_COLS)


INFO:root:should_ran_in_parallel = True


INFO:root:


INFO:root:NUM_COND_TREES = 5


INFO:root:NUM_VAL_TREES = NUM_COND_TREES + 1


INFO:root:prob_crossover_global = 0.7  # global probability for cx


INFO:root:prob_crossover_individual_cond = 0.8  # probability to cx a specific cond tree in an individual


INFO:root:prob_crossover_individual_val = 0.8  # probability to cx a specific cond tree in an individual


INFO:root:prob_mutate_global = 0.2


INFO:root:prob_mutate_individual_cond = 0.5


INFO:root:prob_mutate_individual_val = 0.5


INFO:root:


INFO:root:points_correct_box = 5


INFO:root:points_incorrect_box = 0


INFO:root:# points_incorrect_box = -2


INFO:root:pop_size = 100


INFO:root:hof_size = 1


INFO:root:# num_gen = 40


INFO:root:num_gen = 10


INFO:root:train_size = 3


INFO:root:

*******DONE!!!******


INFO:root:run time: 86 sec

INFO:root:max possible fitness for the nonograms ran: 66

INFO:root:log:    	      	            fitness            	            size           
   	      	-------------------------------	---------------------------
gen	nevals	avg    	max    	min	std    	avg	max	min	std
0  	100   	43.3833	55     	35 	5.22523	2  	2  	2  	0  
1  	71    	46.4167	55     	35 	5.35088	2  	2  	2  	0  
2  	68    	48.4   	55     	35 	5.61209	2  	2  	2  	0  
3  	85    	47.3   	55     	35 	5.55168	2  	2  	2  	0  
4  	73    	48.0833	56.6667	35 	5.78972	2  	2  	2  	0  
5  	80    	48.0833	55     	40 	5.11737	2  	2  	2  	0  
6  	77    	48.9667	56.6667	35 	5.32698	2  	2  	2  	0  
7  	79    	48.6333	56.6667	35 	5.63412	2  	2  	2  	0  
8  	82    	48.0667	56.6667	35 	6.19462	2  	2  	2  	0  
9  	73    	49.9333	56.6667	35 	5.56737	2  	2  	2  	0  
10 	65    	50.8333	56.6667	35 	6.10328	2  	2  	2  	0  

INFO:root:pop: COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, _if_then_else(True, 2, ones_diff_cols), 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), 3, _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(zeros_diff_rows, zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(mul(add(add(zeros_diff_rows, ones_diff_rows), mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_cols)), add(zeros_diff_rows, zeros_diff_rows)), add(add(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows))), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(add(mul(add(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_rows, ones_diff_cols)), mul(add(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols))), add(add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols)), add(add(ones_diff_rows, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_rows)))), add(mul(add(mul(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)), mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_rows))), mul(add(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)), add(mul(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))))))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(ones_diff_rows, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)))), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(mul(add(ones_diff_cols, zeros_diff_cols), add(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_cols, ones_diff_cols))))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(add(mul(ones_diff_rows, ones_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), add(mul(ones_diff_rows, ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols))), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols)))))), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, _if_then_else(True, 2, ones_diff_cols), 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), 3, _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, compare_blocks_cols)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(ones_diff_cols, mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, zeros_diff_cols)))
COND TREES:
le(_if_then_else(le(0, 0), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), 2), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(False, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
le(_if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, _if_then_else(le(_if_then_else(False, _if_then_else(True, max_col_clue, 1), _if_then_else(False, ones_diff_rows, max_row_clue)), _if_then_else(le(max_col_clue, 3), 1, _if_then_else(False, zeros_diff_cols, ones_diff_rows))), _if_then_else(ge(max_col_clue, compare_blocks_cols), _if_then_else(le(1, zeros_diff_rows), max_col_clue, max_row_clue), _if_then_else(False, 0, _if_then_else(False, 4, ones_diff_rows))), _if_then_else(and_(True, le(3, ones_diff_rows)), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 3)))), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(and_(ge(_if_then_else(True, max_row_clue, _if_then_else(le(0, zeros_diff_rows), _if_then_else(False, max_col_clue, ones_diff_rows), ones_diff_cols)), _if_then_else(True, _if_then_else(True, _if_then_else(False, 4, max_col_clue), 0), max_col_clue)), ge(_if_then_else(True, zeros_diff_rows, _if_then_else(False, _if_then_else(True, 4, 1), _if_then_else(True, zeros_diff_cols, 0))), _if_then_else(True, compare_blocks_cols, _if_then_else(False, max_col_clue, 4)))), 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, _if_then_else(True, max_col_clue, 4))), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, 2, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(True, 3, max_row_clue)), _if_then_else(ge(max_row_clue, _if_then_else(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(True, 2, max_col_clue)), _if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(False, ones_diff_rows, 3))), _if_then_else(or_(le(max_col_clue, 4), and_(True, False)), _if_then_else(le(1, compare_blocks_cols), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(3, max_row_clue), _if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), _if_then_else(le(_if_then_else(False, 0, 2), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(1, 2), _if_then_else(False, 0, max_col_clue), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(or_(True, True), _if_then_else(False, compare_blocks_cols, 4), _if_then_else(False, zeros_diff_cols, 4))))), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, max_row_clue, ones_diff_rows)), ge(max_row_clue, _if_then_else(True, 3, 1)))
and_(le(_if_then_else(le(ones_diff_rows, 4), _if_then_else(False, 3, ones_diff_rows), _if_then_else(le(zeros_diff_cols, 2), _if_then_else(True, 0, _if_then_else(False, ones_diff_cols, compare_blocks_rows)), zeros_diff_cols)), _if_then_else(ge(ones_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(True, 3, 2))), le(_if_then_else(True, 3, zeros_diff_cols), _if_then_else(True, ones_diff_rows, zeros_diff_rows)))
le(_if_then_else(or_(ge(_if_then_else(le(_if_then_else(True, ones_diff_cols, ones_diff_cols), _if_then_else(True, 1, 0)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, 4), _if_then_else(True, 1, ones_diff_cols)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_rows, 1), _if_then_else(True, 0, ones_diff_rows))), _if_then_else(or_(le(ones_diff_rows, ones_diff_cols), and_(False, True)), _if_then_else(ge(zeros_diff_cols, 4), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(False, ones_diff_rows, zeros_diff_rows)), _if_then_else(ge(4, 4), _if_then_else(False, 0, ones_diff_rows), _if_then_else(False, compare_blocks_rows, ones_diff_rows)))), False), _if_then_else(True, max_row_clue, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(le(2, zeros_diff_rows), _if_then_else(False, 1, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_rows)))
and_(or_(or_(ge(1, zeros_diff_cols), and_(False, True)), and_(or_(True, or_(ge(zeros_diff_cols, 2), and_(True, False))), ge(max_col_clue, 1))), le(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, ones_diff_cols), _if_then_else(True, 4, compare_blocks_rows)), _if_then_else(le(_if_then_else(False, 4, compare_blocks_cols), _if_then_else(True, 2, 2)), _if_then_else(ge(4, 2), _if_then_else(True, 3, compare_blocks_cols), _if_then_else(False, 1, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(False, 0, ones_diff_rows), _if_then_else(True, 1, zeros_diff_rows)))))
ge(_if_then_else(and_(False, False), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(False, _if_then_else(True, 1, ones_diff_cols), zeros_diff_cols)), _if_then_else(le(max_col_clue, 2), _if_then_else(False, compare_blocks_rows, 1), _if_then_else(True, 2, max_col_clue)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(ones_diff_rows, add(compare_blocks_rows, compare_blocks_rows))), add(mul(mul(ones_diff_rows, compare_blocks_rows), ones_diff_rows), mul(ones_diff_cols, ones_diff_cols)))
mul(add(add(zeros_diff_rows, compare_blocks_rows), mul(add(mul(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols)), zeros_diff_rows)), mul(mul(ones_diff_cols, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols)))
mul(mul(add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_rows))), mul(mul(mul(ones_diff_cols, add(mul(add(ones_diff_cols, compare_blocks_cols), mul(mul(mul(ones_diff_cols, zeros_diff_cols), compare_blocks_cols), mul(ones_diff_cols, add(compare_blocks_cols, zeros_diff_rows)))), mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_cols)))), add(ones_diff_cols, ones_diff_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(mul(compare_blocks_cols, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_cols)))))
mul(mul(mul(compare_blocks_rows, zeros_diff_rows), mul(add(mul(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_cols)))), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_cols)))
mul(add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(mul(mul(add(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_rows)), mul(mul(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols))))))
add(mul(add(zeros_diff_rows, mul(compare_blocks_rows, compare_blocks_rows)), add(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, zeros_diff_rows))), mul(mul(zeros_diff_rows, compare_blocks_cols), mul(mul(ones_diff_cols, zeros_diff_rows), zeros_diff_cols)))
COND TREES:
and_(ge(_if_then_else(True, max_col_clue, _if_then_else(False, 3, zeros_diff_cols)), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), or_(or_(True, True), True))
le(_if_then_else(True, _if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, ones_diff_rows, 4)), _if_then_else(ge(compare_blocks_cols, 2), 4, _if_then_else(True, 4, ones_diff_cols)))
or_(le(_if_then_else(and_(le(zeros_diff_rows, zeros_diff_cols), or_(True, False)), _if_then_else(ge(3, 0), _if_then_else(False, zeros_diff_cols, 2), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(1, 1), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(True, 0, zeros_diff_rows))), _if_then_else(and_(and_(False, True), and_(False, True)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(True, compare_blocks_rows, max_col_clue)), _if_then_else(le(max_col_clue, 0), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(True, max_row_clue, compare_blocks_cols)))), ge(_if_then_else(le(_if_then_else(False, 1, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(le(compare_blocks_cols, ones_diff_rows), _if_then_else(True, compare_blocks_cols, 4), _if_then_else(False, max_row_clue, max_row_clue)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(True, ones_diff_rows, max_row_clue))), _if_then_else(and_(and_(False, False), or_(True, True)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(le(ones_diff_cols, max_row_clue), compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, ones_diff_rows, max_row_clue)))))
and_(False, le(_if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(True, 3, 4)))
le(_if_then_else(or_(ge(_if_then_else(True, max_col_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), and_(and_(True, False), le(ones_diff_cols, ones_diff_rows))), _if_then_else(and_(or_(True, True), ge(ones_diff_rows, ones_diff_rows)), _if_then_else(le(max_row_clue, 3), _if_then_else(False, 1, 3), _if_then_else(True, 2, 1)), _if_then_else(le(4, ones_diff_rows), _if_then_else(False, max_col_clue, 2), _if_then_else(True, ones_diff_cols, 1))), _if_then_else(le(_if_then_else(True, 4, 0), _if_then_else(False, 0, 1)), _if_then_else(ge(1, compare_blocks_cols), _if_then_else(True, max_col_clue, ones_diff_cols), _if_then_else(False, ones_diff_rows, 4)), _if_then_else(ge(max_row_clue, max_col_clue), _if_then_else(True, ones_diff_rows, 0), _if_then_else(False, compare_blocks_rows, compare_blocks_rows)))), _if_then_else(ge(_if_then_else(and_(True, False), _if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_cols)), _if_then_else(ge(3, 3), _if_then_else(True, 0, ones_diff_rows), _if_then_else(False, max_col_clue, compare_blocks_cols))), _if_then_else(or_(or_(False, True), or_(True, False)), _if_then_else(ge(zeros_diff_cols, 2), _if_then_else(False, 2, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(and_(True, False), _if_then_else(True, 3, 0), _if_then_else(True, ones_diff_rows, compare_blocks_cols))), _if_then_else(ge(_if_then_else(True, 3, max_row_clue), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(le(compare_blocks_cols, 1), _if_then_else(True, 4, 0), _if_then_else(True, 2, 1)), _if_then_else(ge(zeros_diff_cols, 3), _if_then_else(True, ones_diff_cols, 0), zeros_diff_rows))))
VAL TREES:
mul(add(add(compare_blocks_rows, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), mul(mul(zeros_diff_cols, compare_blocks_rows), mul(add(ones_diff_rows, compare_blocks_rows), ones_diff_cols)))
add(add(add(add(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_cols, compare_blocks_cols)), mul(mul(zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)), add(mul(mul(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(compare_blocks_cols, ones_diff_cols), mul(compare_blocks_rows, zeros_diff_rows)))), add(add(add(mul(mul(mul(ones_diff_cols, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), ones_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), add(add(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_cols, ones_diff_rows))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(compare_blocks_rows, ones_diff_cols)), add(add(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_cols)))))
mul(mul(mul(mul(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_rows)), add(add(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_rows)), ones_diff_rows)), mul(add(add(mul(zeros_diff_rows, ones_diff_rows), add(compare_blocks_cols, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), add(zeros_diff_rows, add(compare_blocks_cols, zeros_diff_cols)))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, ones_diff_rows)), mul(add(zeros_diff_rows, ones_diff_rows), mul(ones_diff_rows, ones_diff_rows)))))
mul(add(add(add(add(mul(add(ones_diff_rows, ones_diff_cols), ones_diff_rows), compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows)), compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_rows)))
add(mul(add(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)), add(add(zeros_diff_cols, add(ones_diff_cols, compare_blocks_rows)), add(zeros_diff_cols, zeros_diff_rows))), mul(add(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), add(add(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, zeros_diff_rows))))
mul(add(add(add(ones_diff_rows, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_rows)), add(mul(ones_diff_cols, ones_diff_rows), add(ones_diff_cols, mul(ones_diff_rows, zeros_diff_cols)))), add(add(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, mul(zeros_diff_rows, compare_blocks_cols))), add(add(ones_diff_rows, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, _if_then_else(True, 2, ones_diff_cols), 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), 3, _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), add(mul(mul(ones_diff_rows, compare_blocks_rows), ones_diff_rows), mul(ones_diff_cols, ones_diff_cols)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, zeros_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(compare_blocks_cols, mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), compare_blocks_cols)
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, add(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, zeros_diff_rows))), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, mul(ones_diff_rows, zeros_diff_cols)))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, _if_then_else(or_(ge(1, 1), le(compare_blocks_rows, _if_then_else(False, ones_diff_rows, 0))), _if_then_else(le(3, zeros_diff_rows), _if_then_else(or_(True, True), compare_blocks_cols, compare_blocks_cols), _if_then_else(False, _if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, ones_diff_cols, zeros_diff_rows))), _if_then_else(le(2, _if_then_else(False, 1, 3)), _if_then_else(False, _if_then_else(True, max_row_clue, ones_diff_cols), 2), _if_then_else(True, 1, 0)))), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, _if_then_else(True, 2, ones_diff_cols), 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), 3, _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(ones_diff_rows, add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), zeros_diff_cols)), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(ge(_if_then_else(True, max_col_clue, max_row_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), compare_blocks_rows, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, _if_then_else(True, 2, ones_diff_cols), 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, or_(ge(zeros_diff_cols, 2), and_(True, False))), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(le(_if_then_else(True, 4, 0), _if_then_else(False, 0, 1)), zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), 3, _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
and_(le(2, ones_diff_rows), or_(or_(True, True), True))
le(_if_then_else(True, _if_then_else(True, 0, compare_blocks_cols), _if_then_else(True, ones_diff_rows, 4)), _if_then_else(ge(compare_blocks_cols, 2), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(True, 4, ones_diff_cols)))
or_(le(_if_then_else(and_(le(zeros_diff_rows, zeros_diff_cols), or_(True, False)), _if_then_else(ge(3, 0), _if_then_else(False, zeros_diff_cols, 2), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(1, 1), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(True, 0, zeros_diff_rows))), _if_then_else(and_(and_(False, True), and_(False, True)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(True, compare_blocks_rows, max_col_clue)), _if_then_else(le(max_col_clue, 0), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(True, max_row_clue, compare_blocks_cols)))), ge(_if_then_else(le(_if_then_else(False, 1, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(le(compare_blocks_cols, ones_diff_rows), _if_then_else(True, compare_blocks_cols, 4), _if_then_else(False, max_row_clue, max_row_clue)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(True, ones_diff_rows, max_row_clue))), _if_then_else(and_(and_(False, False), or_(True, True)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(le(ones_diff_cols, max_row_clue), compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, ones_diff_rows, max_row_clue)))))
and_(True, le(_if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(True, 3, 4)))
le(_if_then_else(or_(ge(_if_then_else(True, max_col_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), and_(and_(True, False), le(ones_diff_cols, ones_diff_rows))), _if_then_else(and_(or_(True, True), ge(ones_diff_rows, ones_diff_rows)), _if_then_else(le(max_row_clue, 3), _if_then_else(False, 1, 3), _if_then_else(True, 2, 1)), _if_then_else(le(4, ones_diff_rows), _if_then_else(False, max_col_clue, 2), _if_then_else(True, ones_diff_cols, 1))), _if_then_else(True, _if_then_else(ge(1, compare_blocks_cols), _if_then_else(True, max_col_clue, ones_diff_cols), _if_then_else(False, ones_diff_rows, 4)), _if_then_else(ge(max_row_clue, max_col_clue), _if_then_else(True, ones_diff_rows, 0), _if_then_else(False, compare_blocks_rows, compare_blocks_rows)))), _if_then_else(ge(_if_then_else(and_(True, False), _if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_cols)), _if_then_else(ge(3, 3), _if_then_else(True, 0, ones_diff_rows), _if_then_else(False, max_col_clue, compare_blocks_cols))), _if_then_else(or_(or_(False, True), or_(True, False)), _if_then_else(ge(zeros_diff_cols, 2), _if_then_else(False, 2, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(and_(True, False), _if_then_else(True, 3, 0), _if_then_else(True, ones_diff_rows, compare_blocks_cols))), _if_then_else(ge(_if_then_else(True, 3, max_row_clue), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(le(compare_blocks_cols, 1), _if_then_else(True, 4, 0), _if_then_else(True, 2, 1)), _if_then_else(ge(zeros_diff_cols, 3), _if_then_else(True, ones_diff_cols, 0), _if_then_else(True, 1, ones_diff_cols)))))
VAL TREES:
mul(add(add(compare_blocks_rows, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), mul(mul(zeros_diff_cols, compare_blocks_rows), mul(add(ones_diff_rows, compare_blocks_rows), ones_diff_cols)))
add(add(add(add(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_cols, compare_blocks_cols)), mul(mul(zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)), add(mul(mul(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(compare_blocks_cols, ones_diff_cols), mul(compare_blocks_rows, zeros_diff_rows)))), add(add(add(mul(mul(mul(ones_diff_cols, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), ones_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), add(add(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_cols, ones_diff_rows))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(compare_blocks_rows, ones_diff_cols)), add(add(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_cols)))))
mul(mul(mul(mul(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_rows)), add(add(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_rows)), ones_diff_rows)), mul(add(add(mul(zeros_diff_rows, ones_diff_rows), add(compare_blocks_cols, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), add(zeros_diff_rows, add(add(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)), mul(mul(ones_diff_cols, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows)))))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, ones_diff_rows)), mul(add(zeros_diff_rows, ones_diff_rows), mul(ones_diff_rows, ones_diff_rows)))))
mul(add(add(add(add(mul(add(ones_diff_rows, ones_diff_cols), ones_diff_rows), compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows)), compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(add(mul(add(mul(ones_diff_rows, zeros_diff_cols), ones_diff_rows), zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_cols)), mul(mul(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_rows, mul(ones_diff_rows, zeros_diff_rows))), add(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, add(zeros_diff_rows, compare_blocks_rows))))))
add(mul(add(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)), add(add(add(add(mul(zeros_diff_cols, mul(compare_blocks_rows, zeros_diff_cols)), add(compare_blocks_cols, compare_blocks_cols)), add(add(compare_blocks_cols, zeros_diff_rows), mul(mul(compare_blocks_rows, compare_blocks_rows), compare_blocks_cols))), add(ones_diff_cols, compare_blocks_rows)), add(zeros_diff_cols, zeros_diff_rows))), mul(add(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), add(add(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, zeros_diff_rows))))
mul(add(add(add(ones_diff_rows, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_rows)), add(add(mul(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), mul(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_rows))), add(ones_diff_cols, mul(ones_diff_rows, zeros_diff_cols)))), add(add(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, mul(zeros_diff_rows, compare_blocks_cols))), add(add(ones_diff_rows, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)), 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(3, _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, _if_then_else(True, 2, ones_diff_cols), 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), 3, 3))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), add(mul(mul(ones_diff_rows, compare_blocks_rows), ones_diff_rows), mul(ones_diff_cols, ones_diff_cols)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, zeros_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), compare_blocks_cols)
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, add(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, zeros_diff_rows))), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), compare_blocks_rows)
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, _if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, _if_then_else(True, 4, compare_blocks_cols), max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(add(mul(mul(mul(add(compare_blocks_rows, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_rows)), mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_rows))), mul(mul(add(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_cols, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_cols)), add(add(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, zeros_diff_cols))), mul(add(add(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_rows, zeros_diff_rows), add(compare_blocks_cols, compare_blocks_cols))))), ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(add(mul(mul(add(ones_diff_rows, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_rows))), mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(compare_blocks_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols)))), add(add(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, compare_blocks_rows)), mul(mul(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_rows))), mul(add(add(ones_diff_rows, zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols)), mul(mul(ones_diff_cols, ones_diff_rows), add(compare_blocks_cols, ones_diff_rows))))), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(add(mul(mul(mul(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, compare_blocks_rows)), mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))), add(add(mul(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_cols)), add(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_cols, ones_diff_cols)))), add(mul(add(mul(zeros_diff_rows, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_cols)), mul(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_rows))), add(mul(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_cols, ones_diff_rows), add(ones_diff_cols, zeros_diff_cols)))))))
mul(mul(add(ones_diff_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols)), add(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, _if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, 3, 2), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(True, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, _if_then_else(False, 3, max_row_clue))), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(mul(add(add(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows))), zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, mul(mul(ones_diff_rows, zeros_diff_cols), add(ones_diff_rows, add(compare_blocks_rows, compare_blocks_rows))))))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(mul(mul(ones_diff_cols, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(mul(mul(add(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, zeros_diff_cols)), mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_cols))), mul(add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(add(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_cols)))), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), mul(add(mul(add(ones_diff_rows, ones_diff_cols), ones_diff_rows), compare_blocks_cols), add(ones_diff_rows, mul(add(mul(mul(add(ones_diff_cols, ones_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_rows))), add(add(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_rows), mul(zeros_diff_cols, zeros_diff_rows)))), mul(add(add(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, ones_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, compare_blocks_cols))), mul(add(add(ones_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), add(mul(compare_blocks_cols, zeros_diff_cols), add(compare_blocks_cols, ones_diff_rows)))))))), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(mul(add(add(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows))), zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(zeros_diff_rows, add(compare_blocks_rows, add(add(mul(add(add(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols))), add(mul(add(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_cols)))), add(mul(add(add(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_rows))), add(mul(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols)), add(add(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_rows))))))))
COND TREES:
or_(ge(compare_blocks_cols, _if_then_else(False, max_row_clue, 1)), ge(_if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, 3, 1)))
and_(or_(and_(True, True), or_(False, False)), le(_if_then_else(True, 3, zeros_diff_cols), _if_then_else(True, max_row_clue, _if_then_else(True, 0, 4))))
le(_if_then_else(or_(False, False), _if_then_else(True, max_row_clue, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(le(2, zeros_diff_rows), _if_then_else(False, 1, 4), _if_then_else(or_(le(compare_blocks_cols, max_col_clue), le(compare_blocks_cols, 0)), max_row_clue, compare_blocks_rows)))
and_(or_(or_(ge(1, zeros_diff_cols), and_(False, True)), and_(or_(True, False), ge(max_col_clue, 1))), le(_if_then_else(or_(True, True), _if_then_else(True, _if_then_else(False, 3, _if_then_else(False, zeros_diff_rows, _if_then_else(or_(False, False), zeros_diff_rows, compare_blocks_rows))), ones_diff_cols), _if_then_else(True, 4, compare_blocks_rows)), _if_then_else(or_(False, True), _if_then_else(True, max_row_clue, zeros_diff_rows), _if_then_else(True, max_col_clue, zeros_diff_rows))))
ge(_if_then_else(and_(False, False), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(le(max_col_clue, 2), _if_then_else(False, compare_blocks_rows, 1), _if_then_else(True, 2, max_col_clue)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(ones_diff_rows, add(compare_blocks_rows, compare_blocks_rows))), add(mul(mul(ones_diff_rows, compare_blocks_rows), ones_diff_rows), mul(ones_diff_cols, ones_diff_cols)))
mul(add(add(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_rows)), mul(add(mul(mul(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols))), add(add(add(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), add(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols))), mul(mul(mul(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_cols, ones_diff_rows), add(zeros_diff_cols, zeros_diff_rows))))))
mul(mul(add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_rows))), mul(mul(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols))))
mul(mul(mul(add(mul(mul(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_cols)))
add(add(add(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols))), add(add(mul(ones_diff_cols, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)), mul(add(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols))))
add(mul(add(zeros_diff_rows, ones_diff_rows), add(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, zeros_diff_rows))), mul(mul(zeros_diff_rows, compare_blocks_cols), mul(mul(ones_diff_cols, zeros_diff_rows), zeros_diff_cols)))
COND TREES:
or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(True, max_row_clue, ones_diff_rows)), ge(_if_then_else(False, 3, zeros_diff_cols), _if_then_else(True, 3, 1)))
and_(le(_if_then_else(le(ones_diff_rows, 4), _if_then_else(False, 3, ones_diff_rows), _if_then_else(le(zeros_diff_cols, 2), zeros_diff_rows, zeros_diff_cols)), _if_then_else(ge(ones_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(True, 3, 2))), le(_if_then_else(True, 3, zeros_diff_cols), _if_then_else(True, ones_diff_rows, zeros_diff_rows)))
le(_if_then_else(or_(ge(_if_then_else(le(_if_then_else(True, ones_diff_cols, ones_diff_cols), _if_then_else(True, 1, 0)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, 4), _if_then_else(True, 1, ones_diff_cols)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_rows, 1), _if_then_else(True, 0, ones_diff_rows))), _if_then_else(or_(le(ones_diff_rows, ones_diff_cols), and_(False, True)), _if_then_else(ge(zeros_diff_cols, 4), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(False, ones_diff_rows, zeros_diff_rows)), _if_then_else(ge(4, 4), _if_then_else(False, 3, ones_diff_rows), _if_then_else(False, compare_blocks_rows, ones_diff_rows)))), False), _if_then_else(True, max_row_clue, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(le(2, zeros_diff_rows), _if_then_else(False, 1, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_rows)))
and_(or_(or_(ge(1, zeros_diff_cols), and_(False, True)), and_(or_(True, False), ge(max_col_clue, 1))), le(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, ones_diff_cols), _if_then_else(True, 4, compare_blocks_rows)), _if_then_else(le(_if_then_else(False, 4, compare_blocks_cols), _if_then_else(True, 2, 2)), _if_then_else(ge(4, 2), _if_then_else(True, 3, compare_blocks_cols), _if_then_else(False, 1, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(False, 0, ones_diff_rows), _if_then_else(True, 1, zeros_diff_rows)))))
ge(_if_then_else(and_(False, False), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(le(max_col_clue, 2), _if_then_else(False, compare_blocks_rows, 1), _if_then_else(True, 2, max_col_clue)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(ones_diff_rows, add(compare_blocks_rows, compare_blocks_rows))), add(mul(mul(ones_diff_rows, compare_blocks_rows), ones_diff_rows), mul(ones_diff_cols, ones_diff_cols)))
mul(add(add(zeros_diff_rows, compare_blocks_rows), mul(add(mul(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols)), zeros_diff_rows)), mul(mul(ones_diff_cols, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols)))
mul(mul(add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_rows))), mul(mul(mul(ones_diff_cols, add(mul(add(ones_diff_cols, compare_blocks_cols), mul(mul(mul(ones_diff_cols, zeros_diff_cols), compare_blocks_cols), mul(ones_diff_cols, add(compare_blocks_cols, zeros_diff_rows)))), mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_cols)))), add(ones_diff_cols, ones_diff_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(mul(compare_blocks_cols, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_cols)))))
mul(mul(mul(compare_blocks_rows, zeros_diff_rows), mul(add(mul(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_cols)))), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_cols)))
mul(add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(mul(mul(add(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_rows)), mul(mul(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols))))))
add(mul(add(zeros_diff_rows, mul(compare_blocks_rows, compare_blocks_rows)), add(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, zeros_diff_rows))), mul(mul(zeros_diff_rows, compare_blocks_cols), mul(mul(ones_diff_cols, zeros_diff_rows), zeros_diff_cols)))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(True, 3, 1)), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(False, _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, _if_then_else(True, 2, ones_diff_cols), 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), 3, _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows)), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_cols), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, compare_blocks_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), compare_blocks_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(compare_blocks_rows, add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows)), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_cols), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, compare_blocks_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), compare_blocks_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(compare_blocks_rows, add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(compare_blocks_rows, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), compare_blocks_rows)), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), ones_diff_cols))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, add(compare_blocks_cols, ones_diff_rows))), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), compare_blocks_rows)), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(mul(add(add(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows))), zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_rows))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(compare_blocks_rows, ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, _if_then_else(True, 2, ones_diff_cols), 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), 3, _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), add(mul(mul(ones_diff_rows, compare_blocks_rows), ones_diff_rows), mul(ones_diff_cols, ones_diff_cols)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, zeros_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), compare_blocks_cols)
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, add(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, zeros_diff_rows))), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), zeros_diff_cols)
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_cols), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(zeros_diff_rows, mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), compare_blocks_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(compare_blocks_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), compare_blocks_rows), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(compare_blocks_rows, add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows)), add(mul(mul(add(mul(ones_diff_cols, mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows)), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)), ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(ones_diff_cols, mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_cols), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, compare_blocks_rows))), add(ones_diff_cols, compare_blocks_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), compare_blocks_cols), mul(mul(zeros_diff_cols, add(zeros_diff_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), add(compare_blocks_cols, ones_diff_cols)), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(compare_blocks_rows, add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(compare_blocks_rows, ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, _if_then_else(True, 2, ones_diff_cols), 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), 4))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), 3, _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(le(_if_then_else(ge(_if_then_else(False, max_row_clue, ones_diff_cols), 0), _if_then_else(False, _if_then_else(False, 0, 0), ones_diff_cols), _if_then_else(True, zeros_diff_cols, 4)), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_rows, 2), _if_then_else(True, max_row_clue, 1))), ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(True, _if_then_else(and_(le(_if_then_else(True, max_row_clue, 2), _if_then_else(True, 2, _if_then_else(True, 3, _if_then_else(True, compare_blocks_rows, 0)))), or_(or_(False, and_(True, le(0, 3))), or_(False, or_(True, True)))), _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, _if_then_else(and_(or_(False, True), and_(False, True)), _if_then_else(or_(False, True), _if_then_else(True, 0, ones_diff_rows), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(ge(zeros_diff_cols, ones_diff_rows), _if_then_else(False, max_row_clue, ones_diff_rows), _if_then_else(True, max_col_clue, 2)))), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, _if_then_else(and_(ge(_if_then_else(and_(False, True), _if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 4, zeros_diff_cols)), _if_then_else(ge(zeros_diff_rows, 2), _if_then_else(False, 4, 3), _if_then_else(False, zeros_diff_rows, 3))), and_(ge(_if_then_else(True, max_row_clue, 0), _if_then_else(False, 1, 3)), ge(_if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, 4)))), _if_then_else(or_(ge(_if_then_else(False, compare_blocks_rows, 4), _if_then_else(False, 2, max_row_clue)), ge(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, 1, 0))), _if_then_else(ge(_if_then_else(False, max_col_clue, max_row_clue), _if_then_else(True, ones_diff_rows, 4)), _if_then_else(ge(compare_blocks_cols, max_col_clue), _if_then_else(False, compare_blocks_cols, max_col_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(ones_diff_rows, zeros_diff_cols), _if_then_else(True, max_row_clue, 1), _if_then_else(True, max_col_clue, max_col_clue))), _if_then_else(and_(or_(False, False), or_(False, False)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_rows, 1), _if_then_else(False, 4, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, 0, 2)))), _if_then_else(le(_if_then_else(le(compare_blocks_cols, 3), _if_then_else(False, max_col_clue, 3), _if_then_else(True, 3, max_col_clue)), _if_then_else(ge(zeros_diff_rows, max_row_clue), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, max_row_clue, 4))), _if_then_else(or_(and_(False, True), le(2, compare_blocks_rows)), _if_then_else(le(compare_blocks_cols, zeros_diff_cols), _if_then_else(False, 0, 0), _if_then_else(False, compare_blocks_rows, 4)), _if_then_else(le(compare_blocks_cols, ones_diff_rows), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_cols))), _if_then_else(le(_if_then_else(True, 0, zeros_diff_rows), _if_then_else(False, 0, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 3, 3)), _if_then_else(ge(max_col_clue, max_col_clue), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(True, 1, 0))))))), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 4, ones_diff_cols)), _if_then_else(le(_if_then_else(or_(and_(True, True), ge(3, 1)), _if_then_else(ge(0, 1), _if_then_else(True, ones_diff_rows, max_col_clue), _if_then_else(False, compare_blocks_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_rows), _if_then_else(False, max_col_clue, _if_then_else(or_(or_(False, False), or_(and_(True, False), le(zeros_diff_cols, 4))), _if_then_else(ge(ones_diff_cols, ones_diff_rows), _if_then_else(True, _if_then_else(False, 0, 4), 2), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), max_row_clue, _if_then_else(True, zeros_diff_rows, zeros_diff_cols))), _if_then_else(le(max_col_clue, max_col_clue), _if_then_else(True, _if_then_else(True, compare_blocks_rows, 3), 4), _if_then_else(ge(ones_diff_cols, max_row_clue), _if_then_else(True, 0, max_col_clue), _if_then_else(True, zeros_diff_cols, 2))))), _if_then_else(False, zeros_diff_rows, 4))), _if_then_else(ge(_if_then_else(True, ones_diff_rows, 1), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(ge(max_col_clue, compare_blocks_cols), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, 0)), _if_then_else(or_(True, False), _if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, ones_diff_cols, 1)))), _if_then_else(or_(or_(or_(False, False), ge(compare_blocks_rows, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, compare_blocks_rows))), _if_then_else(and_(ge(3, _if_then_else(ge(_if_then_else(True, max_row_clue, 4), _if_then_else(True, 0, 2)), _if_then_else(le(ones_diff_rows, _if_then_else(True, 4, zeros_diff_rows)), _if_then_else(or_(False, True), 0, 3), _if_then_else(False, compare_blocks_cols, max_row_clue)), _if_then_else(and_(or_(False, False), True), _if_then_else(False, 3, _if_then_else(False, 1, 2)), _if_then_else(ge(2, 2), max_col_clue, ones_diff_cols)))), and_(True, False)), _if_then_else(le(compare_blocks_rows, 4), _if_then_else(True, 1, 0), _if_then_else(False, 4, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, ones_diff_cols, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, max_col_clue, max_col_clue)), _if_then_else(ge(0, max_col_clue), _if_then_else(False, ones_diff_cols, compare_blocks_cols), _if_then_else(True, 2, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(False, 1, 3), _if_then_else(True, 4, 2)))), _if_then_else(or_(or_(le(zeros_diff_rows, 4), ge(ones_diff_rows, 3)), or_(le(zeros_diff_rows, ones_diff_rows), or_(False, True))), _if_then_else(or_(le(1, 2), and_(False, False)), _if_then_else(le(2, max_row_clue), _if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 4, 2)), _if_then_else(ge(0, zeros_diff_cols), _if_then_else(True, 3, zeros_diff_cols), _if_then_else(True, compare_blocks_cols, 4))), _if_then_else(and_(le(ones_diff_rows, max_col_clue), le(max_col_clue, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, max_row_clue, max_row_clue)), _if_then_else(le(zeros_diff_rows, zeros_diff_rows), _if_then_else(True, max_col_clue, 0), _if_then_else(True, max_col_clue, ones_diff_cols))))))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, max_row_clue, ones_diff_rows)), ge(_if_then_else(False, 3, zeros_diff_cols), _if_then_else(True, 3, 1)))
and_(or_(and_(True, True), or_(False, False)), le(_if_then_else(True, 3, zeros_diff_cols), _if_then_else(True, ones_diff_rows, zeros_diff_rows)))
le(_if_then_else(or_(False, False), _if_then_else(True, max_row_clue, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(le(2, zeros_diff_rows), _if_then_else(False, _if_then_else(le(_if_then_else(False, 2, ones_diff_rows), _if_then_else(False, max_col_clue, 1)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, 4, 3)), _if_then_else(or_(True, True), _if_then_else(False, max_row_clue, ones_diff_rows), _if_then_else(True, 2, 1))), max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_rows)))
and_(ge(_if_then_else(and_(False, False), _if_then_else(False, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(True, ones_diff_rows, 0), _if_then_else(False, 1, ones_diff_rows))), le(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, ones_diff_cols), _if_then_else(True, 4, compare_blocks_rows)), _if_then_else(or_(False, True), _if_then_else(True, max_row_clue, zeros_diff_rows), _if_then_else(True, max_col_clue, zeros_diff_rows))))
ge(_if_then_else(and_(False, False), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(ge(compare_blocks_cols, ones_diff_cols), ge(2, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_cols, 1), _if_then_else(True, 3, 0)), _if_then_else(le(0, 1), _if_then_else(True, ones_diff_rows, 2), _if_then_else(False, 2, compare_blocks_cols))))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(mul(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows))), add(mul(mul(ones_diff_rows, compare_blocks_rows), ones_diff_rows), mul(ones_diff_cols, ones_diff_cols)))
mul(add(add(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_rows)), mul(mul(ones_diff_cols, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols)))
mul(mul(add(add(compare_blocks_cols, ones_diff_rows), add(compare_blocks_rows, compare_blocks_rows)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_rows))), mul(mul(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols))))
mul(mul(mul(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(add(add(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, zeros_diff_rows)), zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_cols)))
mul(add(zeros_diff_rows, add(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)))
add(mul(add(zeros_diff_rows, ones_diff_rows), add(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, zeros_diff_rows))), mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(ones_diff_cols, zeros_diff_rows), zeros_diff_cols)))
COND TREES:
or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, max_row_clue, ones_diff_rows)), ge(_if_then_else(False, 3, zeros_diff_cols), _if_then_else(True, 3, 1)))
and_(or_(and_(True, True), or_(False, False)), le(_if_then_else(True, 3, zeros_diff_cols), _if_then_else(True, ones_diff_rows, zeros_diff_rows)))
le(_if_then_else(or_(False, False), _if_then_else(True, max_row_clue, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(le(2, zeros_diff_rows), _if_then_else(False, _if_then_else(le(_if_then_else(False, 2, ones_diff_rows), _if_then_else(False, max_col_clue, 1)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, 4, 3)), _if_then_else(or_(True, True), _if_then_else(False, max_row_clue, ones_diff_rows), _if_then_else(True, 2, 1))), max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_rows)))
and_(ge(_if_then_else(and_(False, False), _if_then_else(False, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(True, ones_diff_rows, 0), _if_then_else(False, 1, ones_diff_rows))), le(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, ones_diff_cols), _if_then_else(True, 4, compare_blocks_rows)), _if_then_else(or_(False, True), _if_then_else(True, max_row_clue, zeros_diff_rows), _if_then_else(True, max_col_clue, zeros_diff_rows))))
ge(_if_then_else(and_(False, False), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(le(max_col_clue, 2), _if_then_else(False, compare_blocks_rows, 1), _if_then_else(True, 2, max_col_clue)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(mul(zeros_diff_cols, mul(mul(mul(compare_blocks_cols, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_cols, ones_diff_rows)))), add(compare_blocks_rows, compare_blocks_rows))), add(mul(mul(ones_diff_rows, compare_blocks_rows), ones_diff_rows), mul(ones_diff_cols, ones_diff_cols)))
mul(add(add(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_rows)), mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)))
mul(mul(add(add(compare_blocks_cols, ones_diff_rows), add(compare_blocks_rows, compare_blocks_rows)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_rows))), mul(mul(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols))))
mul(mul(mul(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(add(add(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, zeros_diff_rows)), zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_cols)))
mul(add(mul(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows)))
add(mul(add(zeros_diff_rows, ones_diff_rows), add(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows)), mul(compare_blocks_rows, add(compare_blocks_rows, ones_diff_rows))), add(zeros_diff_rows, ones_diff_rows))))), mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(ones_diff_cols, zeros_diff_rows), zeros_diff_cols)))
COND TREES:
or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, max_row_clue, ones_diff_rows)), ge(_if_then_else(False, ones_diff_rows, 1), _if_then_else(True, 3, 1)))
and_(or_(and_(True, True), or_(False, False)), le(_if_then_else(True, 2, zeros_diff_cols), _if_then_else(and_(and_(True, True), le(3, ones_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, 0), _if_then_else(False, 2, ones_diff_cols)), 3)))
le(_if_then_else(or_(False, False), _if_then_else(True, max_row_clue, max_col_clue), _if_then_else(ge(_if_then_else(and_(True, False), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, compare_blocks_rows, ones_diff_rows))), _if_then_else(or_(ge(ones_diff_cols, ones_diff_cols), ge(1, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, max_col_clue, compare_blocks_cols)), _if_then_else(and_(False, True), _if_then_else(le(_if_then_else(False, 0, _if_then_else(ge(zeros_diff_rows, compare_blocks_cols), 3, _if_then_else(False, zeros_diff_rows, max_col_clue))), _if_then_else(False, compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, le(4, 3)), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, 2, compare_blocks_rows)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, 1), _if_then_else(False, compare_blocks_rows, 3))), _if_then_else(True, 0, zeros_diff_cols))), _if_then_else(le(_if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(True, 0, max_row_clue)), _if_then_else(le(max_col_clue, 0), _if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, 0, 4))))), _if_then_else(le(2, zeros_diff_rows), _if_then_else(False, 1, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_rows)))
or_(or_(and_(True, False), le(max_row_clue, _if_then_else(False, _if_then_else(False, compare_blocks_rows, 0), 0))), and_(or_(False, False), ge(0, 0)))
ge(_if_then_else(and_(False, False), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(ge(_if_then_else(True, max_col_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(True, True), compare_blocks_rows, 1), _if_then_else(True, _if_then_else(and_(or_(le(ones_diff_cols, 2), and_(True, False)), ge(_if_then_else(True, zeros_diff_cols, max_row_clue), _if_then_else(True, 3, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, 3, max_row_clue), _if_then_else(False, compare_blocks_cols, compare_blocks_cols)), _if_then_else(ge(1, compare_blocks_rows), _if_then_else(True, 0, 2), _if_then_else(False, max_row_clue, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, 3, ones_diff_rows), _if_then_else(True, compare_blocks_cols, 1))), _if_then_else(ge(_if_then_else(True, 3, max_row_clue), _if_then_else(False, 3, 3)), _if_then_else(or_(True, False), _if_then_else(True, 1, 4), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, compare_blocks_cols, ones_diff_rows)))), max_col_clue)))
VAL TREES:
add(add(zeros_diff_cols, ones_diff_cols), add(mul(mul(ones_diff_rows, compare_blocks_rows), ones_diff_rows), mul(zeros_diff_cols, ones_diff_cols)))
mul(add(add(compare_blocks_cols, mul(ones_diff_cols, ones_diff_cols)), zeros_diff_rows), mul(mul(ones_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_cols)))
mul(mul(add(mul(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(mul(compare_blocks_cols, compare_blocks_cols), zeros_diff_rows))), mul(mul(mul(ones_diff_cols, mul(ones_diff_rows, compare_blocks_rows)), add(ones_diff_cols, ones_diff_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), compare_blocks_rows)))
mul(mul(mul(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(add(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_cols)))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(mul(ones_diff_cols, compare_blocks_cols), add(add(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols))))
add(mul(add(zeros_diff_rows, ones_diff_rows), add(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, zeros_diff_rows))), mul(mul(compare_blocks_rows, zeros_diff_rows), mul(mul(ones_diff_cols, zeros_diff_rows), zeros_diff_cols)))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(True, max_row_clue, 1)), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, _if_then_else(False, compare_blocks_rows, 1), ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, zeros_diff_rows, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_rows)), add(add(mul(compare_blocks_rows, compare_blocks_rows), ones_diff_cols), add(ones_diff_cols, zeros_diff_rows)))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, add(add(mul(mul(mul(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(mul(compare_blocks_cols, ones_diff_cols), add(zeros_diff_rows, ones_diff_rows))), add(mul(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), add(ones_diff_rows, ones_diff_rows)))), add(mul(mul(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_rows, ones_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, compare_blocks_rows))), add(mul(add(zeros_diff_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, zeros_diff_rows)))))), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(le(_if_then_else(False, _if_then_else(False, _if_then_else(False, 0, 0), ones_diff_cols), _if_then_else(True, zeros_diff_cols, 4)), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_rows, 2), ones_diff_rows)), ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(True, _if_then_else(and_(le(_if_then_else(True, max_row_clue, 2), _if_then_else(True, 2, _if_then_else(True, 3, _if_then_else(True, compare_blocks_rows, 0)))), or_(or_(False, and_(True, le(0, 3))), or_(False, or_(True, True)))), _if_then_else(True, zeros_diff_rows, 4), 1), 3), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, _if_then_else(and_(ge(_if_then_else(and_(False, True), _if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 4, zeros_diff_cols)), _if_then_else(ge(zeros_diff_rows, 2), _if_then_else(False, 4, 3), _if_then_else(False, zeros_diff_rows, 3))), and_(ge(_if_then_else(True, max_row_clue, 0), _if_then_else(False, 1, 3)), ge(_if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, 4)))), _if_then_else(or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), ge(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, 1, 0))), _if_then_else(ge(_if_then_else(False, max_col_clue, max_row_clue), _if_then_else(True, ones_diff_rows, 4)), _if_then_else(ge(compare_blocks_cols, max_col_clue), _if_then_else(False, compare_blocks_cols, max_col_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(ones_diff_rows, zeros_diff_cols), _if_then_else(True, max_row_clue, 1), _if_then_else(True, max_col_clue, max_col_clue))), _if_then_else(and_(or_(False, False), or_(False, False)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_rows, 1), _if_then_else(False, 4, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, 0, 2)))), _if_then_else(le(_if_then_else(le(compare_blocks_cols, 3), _if_then_else(False, max_col_clue, 3), _if_then_else(True, 3, max_col_clue)), _if_then_else(ge(zeros_diff_rows, max_row_clue), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, max_row_clue, 4))), _if_then_else(or_(and_(False, True), le(2, compare_blocks_rows)), _if_then_else(le(compare_blocks_cols, zeros_diff_cols), _if_then_else(False, 0, 0), _if_then_else(False, compare_blocks_rows, 4)), _if_then_else(le(compare_blocks_cols, ones_diff_rows), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_cols))), _if_then_else(le(_if_then_else(True, 0, zeros_diff_rows), _if_then_else(False, 0, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 3, 3)), _if_then_else(ge(max_col_clue, max_col_clue), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(True, 1, 0))))))), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 4, ones_diff_cols)), _if_then_else(le(_if_then_else(or_(and_(True, True), ge(3, 1)), _if_then_else(ge(0, 1), _if_then_else(True, ones_diff_rows, max_col_clue), _if_then_else(False, compare_blocks_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_rows), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, 4))), _if_then_else(ge(_if_then_else(True, ones_diff_rows, 1), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(ge(max_col_clue, compare_blocks_cols), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, 0)), _if_then_else(or_(True, False), _if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, ones_diff_cols, 1)))), _if_then_else(or_(or_(or_(False, False), ge(compare_blocks_rows, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, compare_blocks_rows))), _if_then_else(and_(ge(3, 4), and_(True, False)), _if_then_else(le(compare_blocks_rows, 4), _if_then_else(True, 1, 0), _if_then_else(False, 4, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, ones_diff_cols, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, max_col_clue, max_col_clue)), _if_then_else(ge(0, max_col_clue), _if_then_else(False, ones_diff_cols, compare_blocks_cols), _if_then_else(True, 2, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(False, 1, 3), _if_then_else(True, 4, 2)))), _if_then_else(or_(or_(le(zeros_diff_rows, 4), ge(ones_diff_rows, 3)), or_(le(zeros_diff_rows, ones_diff_rows), or_(False, and_(True, True)))), _if_then_else(or_(le(1, 2), and_(False, False)), _if_then_else(le(2, max_row_clue), _if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 4, 2)), _if_then_else(ge(0, zeros_diff_cols), _if_then_else(True, 3, zeros_diff_cols), _if_then_else(True, compare_blocks_cols, 4))), _if_then_else(and_(le(ones_diff_rows, max_col_clue), le(max_col_clue, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, max_row_clue, max_row_clue)), _if_then_else(le(3, zeros_diff_rows), _if_then_else(True, max_col_clue, 0), _if_then_else(True, max_col_clue, ones_diff_cols))))))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(ones_diff_cols, ones_diff_rows)), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, add(ones_diff_cols, ones_diff_rows)))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, mul(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(mul(add(add(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows))), zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, _if_then_else(and_(and_(False, False), or_(False, False)), _if_then_else(ge(ones_diff_rows, 1), _if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(True, max_col_clue, 1)), _if_then_else(or_(False, False), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, max_col_clue, ones_diff_rows))), 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, ge(_if_then_else(le(_if_then_else(ge(max_col_clue, 2), _if_then_else(False, max_row_clue, 0), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(and_(True, True), _if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(True, compare_blocks_cols, 1))), _if_then_else(or_(ge(4, max_row_clue), ge(2, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(False, 2, 1)), _if_then_else(ge(zeros_diff_rows, 0), _if_then_else(False, 4, zeros_diff_cols), _if_then_else(False, max_row_clue, max_row_clue))), _if_then_else(or_(and_(False, False), and_(True, True)), _if_then_else(le(0, max_col_clue), _if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(ge(compare_blocks_cols, 4), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)))), _if_then_else(or_(le(_if_then_else(True, zeros_diff_cols, ones_diff_cols), _if_then_else(True, 3, 1)), le(_if_then_else(True, max_row_clue, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_rows))), _if_then_else(ge(_if_then_else(True, 2, 1), _if_then_else(True, max_col_clue, 2)), _if_then_else(ge(ones_diff_cols, compare_blocks_rows), _if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(False, max_row_clue, 4)), _if_then_else(and_(True, False), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(True, 2, compare_blocks_rows))), _if_then_else(ge(_if_then_else(True, max_row_clue, 0), _if_then_else(False, zeros_diff_cols, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(True, 0, ones_diff_cols), _if_then_else(True, 2, 3)), _if_then_else(ge(zeros_diff_cols, ones_diff_rows), _if_then_else(False, 1, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 1)))))), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(ge(_if_then_else(and_(ge(_if_then_else(False, compare_blocks_rows, ones_diff_rows), _if_then_else(True, 2, 4)), and_(True, False)), _if_then_else(True, compare_blocks_rows, 3), _if_then_else(False, zeros_diff_rows, ones_diff_rows)), _if_then_else(ge(3, _if_then_else(ge(4, compare_blocks_rows), compare_blocks_cols, 4)), _if_then_else(False, 4, 4), _if_then_else(True, 3, ones_diff_cols))), zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(mul(add(add(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows))), zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
and_(ge(_if_then_else(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(False, ones_diff_cols, 0)), _if_then_else(le(max_row_clue, 1), _if_then_else(True, 1, max_col_clue), _if_then_else(False, ones_diff_rows, 1)), _if_then_else(le(max_row_clue, max_col_clue), _if_then_else(True, 3, 3), _if_then_else(True, zeros_diff_cols, 4))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, 2), _if_then_else(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, max_row_clue, ones_diff_rows)), max_row_clue, ones_diff_rows)), compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, True), _if_then_else(False, 3, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, max_row_clue)), _if_then_else(and_(True, False), _if_then_else(True, 0, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, compare_blocks_rows)))), le(_if_then_else(and_(ge(0, 1), or_(True, False)), _if_then_else(ge(zeros_diff_rows, 2), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, 0)), _if_then_else(and_(False, False), _if_then_else(True, max_col_clue, 2), _if_then_else(True, max_col_clue, 1))), _if_then_else(ge(_if_then_else(True, 4, ones_diff_rows), _if_then_else(False, compare_blocks_rows, max_row_clue)), _if_then_else(False, _if_then_else(True, 2, max_row_clue), _if_then_else(False, 2, 1)), _if_then_else(le(0, 3), _if_then_else(True, 2, _if_then_else(le(_if_then_else(True, 3, _if_then_else(or_(False, False), 3, _if_then_else(False, compare_blocks_cols, ones_diff_cols))), _if_then_else(False, zeros_diff_rows, _if_then_else(False, compare_blocks_rows, 4))), _if_then_else(and_(ge(0, compare_blocks_rows), False), _if_then_else(True, ones_diff_rows, max_col_clue), _if_then_else(False, 0, 3)), _if_then_else(and_(False, False), _if_then_else(ge(4, max_row_clue), _if_then_else(True, 0, ones_diff_cols), _if_then_else(True, compare_blocks_rows, 3)), _if_then_else(or_(False, False), _if_then_else(False, max_row_clue, compare_blocks_cols), ones_diff_cols)))), _if_then_else(False, 4, 1)))))
ge(_if_then_else(or_(ge(ones_diff_cols, 4), or_(True, False)), _if_then_else(True, max_row_clue, zeros_diff_rows), _if_then_else(False, _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, zeros_diff_cols, max_col_clue))), _if_then_else(ge(4, _if_then_else(or_(and_(False, False), ge(0, _if_then_else(True, ones_diff_rows, 4))), _if_then_else(ge(compare_blocks_cols, ones_diff_cols), _if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(_if_then_else(False, ones_diff_cols, 0), ones_diff_cols), _if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, _if_then_else(and_(True, True), 4, 2), compare_blocks_rows)))), _if_then_else(True, ones_diff_cols, _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(True, zeros_diff_cols, ones_diff_rows)))
and_(or_(ge(_if_then_else(True, _if_then_else(False, ones_diff_rows, 1), 2), zeros_diff_rows), True), and_(le(ones_diff_cols, max_row_clue), and_(False, True)))
or_(le(_if_then_else(True, 4, _if_then_else(ge(_if_then_else(or_(and_(False, True), ge(3, 3)), _if_then_else(or_(True, True), _if_then_else(False, zeros_diff_rows, 0), _if_then_else(True, ones_diff_cols, 1)), _if_then_else(or_(True, False), _if_then_else(False, 0, ones_diff_rows), _if_then_else(False, 1, 1))), _if_then_else(ge(_if_then_else(True, 1, 0), _if_then_else(False, zeros_diff_cols, 4)), _if_then_else(ge(max_col_clue, ones_diff_cols), _if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 1, 4)), _if_then_else(or_(False, True), _if_then_else(True, 3, 3), _if_then_else(False, compare_blocks_cols, ones_diff_rows)))), _if_then_else(ge(_if_then_else(le(2, 1), _if_then_else(True, 4, max_col_clue), _if_then_else(False, ones_diff_rows, 2)), _if_then_else(le(3, ones_diff_rows), _if_then_else(False, ones_diff_cols, max_row_clue), _if_then_else(True, zeros_diff_cols, max_row_clue))), _if_then_else(or_(or_(True, True), ge(2, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_cols, ones_diff_rows), _if_then_else(True, 2, max_row_clue)), _if_then_else(le(0, 4), _if_then_else(False, zeros_diff_rows, 0), _if_then_else(True, max_row_clue, max_col_clue))), _if_then_else(ge(_if_then_else(False, 3, ones_diff_cols), _if_then_else(False, 4, zeros_diff_cols)), _if_then_else(le(2, compare_blocks_rows), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, max_row_clue), _if_then_else(True, 1, zeros_diff_rows)))), _if_then_else(and_(or_(le(zeros_diff_cols, 1), or_(False, True)), ge(_if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, ones_diff_rows, 0))), _if_then_else(ge(_if_then_else(True, 0, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(max_col_clue, ones_diff_cols), _if_then_else(False, max_row_clue, ones_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(le(max_col_clue, zeros_diff_rows), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, 2, 3))), _if_then_else(le(_if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(True, 1, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_rows), _if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(True, max_col_clue, zeros_diff_rows)), _if_then_else(ge(ones_diff_rows, compare_blocks_cols), _if_then_else(False, 3, 0), _if_then_else(True, 1, 1)))))), _if_then_else(True, 2, 2)), or_(True, True))
or_(or_(and_(ge(_if_then_else(and_(ge(zeros_diff_rows, zeros_diff_cols), True), _if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(False, _if_then_else(True, max_row_clue, compare_blocks_cols), max_row_clue)), _if_then_else(ge(ones_diff_cols, compare_blocks_rows), _if_then_else(False, 2, 4), _if_then_else(True, 0, 4))), True), ge(_if_then_else(le(max_col_clue, 2), ones_diff_cols, zeros_diff_rows), 0)), and_(or_(False, False), and_(True, True)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_rows)), add(add(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)))
add(mul(mul(compare_blocks_rows, add(zeros_diff_rows, compare_blocks_rows)), add(ones_diff_rows, add(zeros_diff_cols, ones_diff_cols))), mul(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_rows)))
mul(add(mul(compare_blocks_cols, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_cols)), mul(mul(ones_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols)), mul(add(compare_blocks_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)))
add(add(mul(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)), mul(compare_blocks_rows, add(compare_blocks_rows, ones_diff_rows))), add(zeros_diff_rows, zeros_diff_rows)), mul(add(zeros_diff_rows, compare_blocks_cols), mul(mul(add(zeros_diff_cols, ones_diff_cols), zeros_diff_cols), add(add(zeros_diff_cols, zeros_diff_cols), compare_blocks_cols))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), compare_blocks_cols), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, 3, 2), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, _if_then_else(False, 3, ones_diff_cols)), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(compare_blocks_rows, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), compare_blocks_rows)), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), ones_diff_cols))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, add(compare_blocks_cols, ones_diff_rows))), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), compare_blocks_rows)), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(mul(add(add(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows))), zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_rows))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(or_(or_(ge(_if_then_else(or_(True, False), _if_then_else(False, ones_diff_cols, 3), _if_then_else(True, 2, 4)), _if_then_else(or_(False, True), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, 2, 4))), or_(ge(_if_then_else(False, max_col_clue, 3), _if_then_else(True, ones_diff_rows, 1)), and_(ge(compare_blocks_rows, 4), and_(True, False)))), and_(or_(or_(or_(True, False), le(compare_blocks_rows, zeros_diff_cols)), le(_if_then_else(True, 1, 4), _if_then_else(True, compare_blocks_cols, 2))), and_(or_(ge(compare_blocks_cols, zeros_diff_rows), or_(True, False)), or_(le(max_col_clue, ones_diff_cols), and_(True, False))))), _if_then_else(True, _if_then_else(False, ones_diff_cols, ones_diff_cols), 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, 3)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, and_(or_(and_(True, or_(ge(zeros_diff_rows, compare_blocks_cols), ge(max_col_clue, 4))), or_(True, True)), le(_if_then_else(False, max_row_clue, 3), _if_then_else(False, 4, 4)))), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), ones_diff_cols), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, _if_then_else(or_(ge(_if_then_else(False, compare_blocks_cols, 0), _if_then_else(False, 1, max_row_clue)), ge(_if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, 3, ones_diff_rows))), _if_then_else(or_(ge(max_row_clue, zeros_diff_cols), ge(3, ones_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(True, max_col_clue, compare_blocks_cols)), _if_then_else(ge(3, 3), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, ones_diff_rows, 2))), _if_then_else(and_(le(1, 1), or_(True, False)), _if_then_else(le(4, compare_blocks_rows), _if_then_else(True, 4, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 4, ones_diff_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_cols)))), ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, mul(compare_blocks_rows, zeros_diff_cols)))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(False, 4, 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(True, _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(False, _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(ones_diff_cols, mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(ones_diff_cols, ones_diff_rows)), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(zeros_diff_rows, zeros_diff_rows)))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), ones_diff_cols)
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), zeros_diff_rows)
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, add(ones_diff_cols, ones_diff_rows)))), mul(ones_diff_rows, compare_blocks_cols))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, mul(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), compare_blocks_cols), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, max_row_clue, ones_diff_rows)), ge(_if_then_else(False, 3, zeros_diff_cols), _if_then_else(True, 3, 1)))
and_(or_(and_(True, True), or_(False, False)), le(_if_then_else(True, 3, zeros_diff_cols), _if_then_else(True, ones_diff_rows, zeros_diff_rows)))
le(_if_then_else(or_(False, False), _if_then_else(True, max_row_clue, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(le(2, zeros_diff_rows), _if_then_else(False, 1, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_rows)))
and_(or_(or_(ge(1, zeros_diff_cols), and_(False, True)), and_(or_(True, False), ge(max_col_clue, 1))), le(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, ones_diff_cols), _if_then_else(or_(le(max_row_clue, zeros_diff_rows), or_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(False, 3, compare_blocks_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)))), _if_then_else(or_(False, True), _if_then_else(True, max_row_clue, zeros_diff_rows), _if_then_else(True, max_col_clue, zeros_diff_rows))))
ge(_if_then_else(and_(False, False), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(and_(and_(ge(_if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(False, max_col_clue, 1)), and_(or_(True, False), and_(False, True))), le(_if_then_else(and_(False, False), _if_then_else(False, ones_diff_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, ones_diff_cols)))), _if_then_else(False, compare_blocks_rows, 1), _if_then_else(True, 2, max_col_clue)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(ones_diff_rows, add(compare_blocks_rows, compare_blocks_rows))), add(ones_diff_rows, mul(zeros_diff_cols, mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))))))
mul(add(zeros_diff_rows, mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))), mul(mul(ones_diff_cols, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols)))
mul(mul(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), mul(mul(mul(ones_diff_cols, add(mul(add(mul(add(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_rows)), compare_blocks_cols), mul(mul(mul(ones_diff_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_rows)), mul(ones_diff_cols, add(compare_blocks_cols, zeros_diff_rows)))), mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_cols)))), add(ones_diff_cols, ones_diff_rows)), add(mul(mul(add(add(add(add(ones_diff_rows, compare_blocks_rows), add(zeros_diff_cols, zeros_diff_rows)), add(mul(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))), mul(add(add(ones_diff_cols, ones_diff_rows), mul(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows)))), mul(add(mul(mul(compare_blocks_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), add(add(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_cols, zeros_diff_rows))), mul(mul(add(ones_diff_rows, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_cols))))), compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols))))
mul(mul(mul(compare_blocks_rows, zeros_diff_rows), mul(add(mul(zeros_diff_cols, compare_blocks_cols), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(ones_diff_cols, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_rows))), zeros_diff_cols)), mul(add(mul(add(ones_diff_rows, ones_diff_cols), ones_diff_rows), compare_blocks_cols), add(ones_diff_rows, compare_blocks_cols)))), add(add(mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)), zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_cols)))
mul(add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(mul(mul(add(mul(mul(mul(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), mul(mul(zeros_diff_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows))), ones_diff_cols), add(ones_diff_cols, compare_blocks_rows)), mul(mul(compare_blocks_cols, compare_blocks_cols), add(mul(compare_blocks_cols, compare_blocks_cols), ones_diff_cols))), mul(mul(add(ones_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))))))
add(add(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_rows, add(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), zeros_diff_cols)))
COND TREES:
and_(ge(_if_then_else(True, max_col_clue, max_row_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), or_(or_(True, True), True))
le(_if_then_else(True, _if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, ones_diff_rows, 4)), _if_then_else(ge(compare_blocks_cols, 2), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(True, 4, ones_diff_cols)))
or_(le(_if_then_else(and_(le(zeros_diff_rows, zeros_diff_cols), or_(True, False)), _if_then_else(ge(3, 0), _if_then_else(False, zeros_diff_cols, 2), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(1, 1), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(True, 0, zeros_diff_rows))), _if_then_else(and_(and_(False, True), and_(False, True)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(True, compare_blocks_rows, max_col_clue)), _if_then_else(le(max_col_clue, 0), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(True, max_row_clue, compare_blocks_cols)))), ge(_if_then_else(le(_if_then_else(False, 1, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(le(compare_blocks_cols, ones_diff_rows), _if_then_else(True, compare_blocks_cols, 4), _if_then_else(False, max_row_clue, max_row_clue)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(True, ones_diff_rows, max_row_clue))), _if_then_else(and_(and_(False, False), or_(True, True)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(le(ones_diff_cols, max_row_clue), compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, ones_diff_rows, max_row_clue)))))
and_(or_(ge(zeros_diff_cols, 2), and_(True, False)), le(_if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(True, 3, 4)))
le(_if_then_else(or_(ge(_if_then_else(True, max_col_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), and_(and_(True, False), le(ones_diff_cols, ones_diff_rows))), _if_then_else(and_(or_(True, True), ge(ones_diff_rows, ones_diff_rows)), _if_then_else(le(max_row_clue, 3), _if_then_else(False, 1, 3), _if_then_else(True, 2, 1)), _if_then_else(le(4, ones_diff_rows), _if_then_else(False, max_col_clue, 2), _if_then_else(True, ones_diff_cols, 1))), _if_then_else(le(_if_then_else(True, 4, 0), _if_then_else(False, 0, 1)), _if_then_else(ge(1, compare_blocks_cols), _if_then_else(True, max_col_clue, ones_diff_cols), _if_then_else(False, ones_diff_rows, 4)), _if_then_else(ge(max_row_clue, max_col_clue), _if_then_else(True, ones_diff_rows, 0), _if_then_else(False, compare_blocks_rows, compare_blocks_rows)))), _if_then_else(ge(_if_then_else(and_(True, False), _if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_cols)), _if_then_else(ge(3, 3), _if_then_else(True, 0, ones_diff_rows), _if_then_else(False, max_col_clue, compare_blocks_cols))), _if_then_else(or_(or_(False, True), or_(True, False)), _if_then_else(ge(zeros_diff_cols, 2), _if_then_else(False, 2, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(and_(True, False), _if_then_else(True, 3, 0), _if_then_else(True, ones_diff_rows, compare_blocks_cols))), _if_then_else(ge(_if_then_else(True, 3, max_row_clue), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(le(compare_blocks_cols, 1), _if_then_else(True, 4, 0), _if_then_else(True, 2, 1)), _if_then_else(ge(zeros_diff_cols, 3), _if_then_else(True, ones_diff_cols, 0), _if_then_else(True, 1, ones_diff_cols)))))
VAL TREES:
mul(add(add(compare_blocks_rows, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), add(add(add(ones_diff_rows, mul(ones_diff_rows, zeros_diff_rows)), mul(compare_blocks_rows, mul(zeros_diff_rows, zeros_diff_rows))), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, mul(zeros_diff_rows, compare_blocks_rows)))))
add(add(add(add(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_cols, compare_blocks_cols)), mul(mul(zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)), add(mul(mul(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(compare_blocks_cols, ones_diff_cols), mul(mul(mul(mul(compare_blocks_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(mul(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_cols)), mul(add(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, ones_diff_cols))))))), add(add(add(mul(mul(mul(ones_diff_cols, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), ones_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), add(add(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_cols, ones_diff_rows))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(compare_blocks_rows, ones_diff_cols)), add(add(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_cols)))))
mul(mul(mul(mul(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_rows)), add(add(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), mul(add(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_rows)), add(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_cols))), mul(add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(add(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_cols, compare_blocks_cols))))), mul(add(add(mul(zeros_diff_rows, ones_diff_rows), add(compare_blocks_cols, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), add(zeros_diff_rows, add(compare_blocks_cols, zeros_diff_cols)))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, ones_diff_rows)), mul(add(zeros_diff_rows, ones_diff_rows), mul(ones_diff_rows, ones_diff_rows)))))
mul(add(add(add(add(mul(add(ones_diff_rows, ones_diff_cols), ones_diff_rows), compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows)), compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_rows)))
add(mul(add(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)), add(add(zeros_diff_cols, add(ones_diff_cols, compare_blocks_rows)), add(zeros_diff_cols, zeros_diff_rows))), mul(add(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), add(add(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, zeros_diff_rows))))
mul(add(add(add(ones_diff_rows, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_rows)), add(mul(ones_diff_cols, ones_diff_rows), add(ones_diff_cols, mul(ones_diff_rows, zeros_diff_cols)))), add(add(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, mul(zeros_diff_rows, compare_blocks_cols))), add(add(ones_diff_rows, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(compare_blocks_rows, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), compare_blocks_rows)), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), ones_diff_cols))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, add(compare_blocks_cols, ones_diff_rows))), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), compare_blocks_rows)), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(mul(add(add(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows))), zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_rows))))))))
COND TREES:
or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, max_row_clue, ones_diff_rows)), True)
and_(or_(and_(True, True), or_(False, False)), le(_if_then_else(True, 3, zeros_diff_cols), _if_then_else(True, ones_diff_rows, zeros_diff_rows)))
le(_if_then_else(or_(False, False), _if_then_else(True, max_row_clue, max_col_clue), _if_then_else(or_(True, False), compare_blocks_cols, zeros_diff_rows)), _if_then_else(le(2, zeros_diff_rows), _if_then_else(False, 1, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_rows)))
and_(or_(or_(ge(1, zeros_diff_cols), and_(False, True)), and_(or_(True, False), ge(max_col_clue, 1))), le(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, ones_diff_cols), _if_then_else(or_(True, True), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(False, 3, compare_blocks_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)))), _if_then_else(or_(False, True), _if_then_else(True, max_row_clue, zeros_diff_rows), _if_then_else(True, max_col_clue, zeros_diff_rows))))
ge(_if_then_else(and_(False, False), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(and_(and_(ge(_if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(False, max_col_clue, 1)), and_(or_(True, False), and_(False, True))), le(_if_then_else(and_(False, False), _if_then_else(False, ones_diff_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, max_col_clue)), _if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, ones_diff_cols)))), _if_then_else(False, compare_blocks_rows, 1), _if_then_else(True, 2, max_col_clue)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(ones_diff_rows, add(compare_blocks_rows, compare_blocks_rows))), add(ones_diff_rows, mul(zeros_diff_cols, ones_diff_cols)))
mul(add(zeros_diff_rows, mul(zeros_diff_rows, zeros_diff_rows)), mul(mul(ones_diff_cols, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols)))
mul(mul(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), mul(mul(mul(ones_diff_cols, add(mul(add(ones_diff_cols, compare_blocks_cols), mul(mul(mul(ones_diff_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_rows)), mul(ones_diff_cols, add(compare_blocks_cols, zeros_diff_rows)))), mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_cols)))), add(ones_diff_cols, ones_diff_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols))))
mul(mul(mul(compare_blocks_rows, zeros_diff_rows), mul(add(mul(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_cols)), mul(add(mul(add(ones_diff_rows, ones_diff_cols), ones_diff_rows), compare_blocks_cols), add(ones_diff_rows, compare_blocks_cols)))), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_cols)))
mul(add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(mul(mul(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, compare_blocks_rows)), mul(mul(compare_blocks_cols, compare_blocks_cols), add(mul(compare_blocks_cols, compare_blocks_cols), ones_diff_cols))), mul(mul(add(ones_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols))))))
add(add(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_rows, compare_blocks_cols), mul(mul(ones_diff_cols, zeros_diff_rows), zeros_diff_cols)))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(True, 3, 1)), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(ge(_if_then_else(False, 3, zeros_diff_cols), _if_then_else(True, 3, 1)), _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(False, _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(False, le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, _if_then_else(True, 2, ones_diff_cols), 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(le(max_row_clue, zeros_diff_rows), or_(True, False)), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(or_(False, False), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), 3, _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, 2), _if_then_else(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, max_row_clue, ones_diff_rows)), max_row_clue, ones_diff_rows)), compare_blocks_rows, max_row_clue)), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, compare_blocks_cols), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, ones_diff_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(compare_blocks_rows, ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
and_(ge(_if_then_else(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(False, ones_diff_cols, 0)), _if_then_else(le(max_row_clue, 1), _if_then_else(True, max_col_clue, _if_then_else(True, 3, 1)), _if_then_else(False, ones_diff_rows, 1)), _if_then_else(or_(le(_if_then_else(True, ones_diff_cols, _if_then_else(le(ones_diff_cols, compare_blocks_rows), max_col_clue, zeros_diff_rows)), _if_then_else(True, 0, compare_blocks_cols)), and_(ge(3, _if_then_else(False, _if_then_else(True, 3, ones_diff_cols), _if_then_else(True, ones_diff_cols, 2))), ge(zeros_diff_rows, zeros_diff_cols))), _if_then_else(True, 3, 3), _if_then_else(True, zeros_diff_cols, 4))), _if_then_else(le(2, ones_diff_rows), _if_then_else(and_(False, True), _if_then_else(False, 3, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, max_row_clue)), _if_then_else(and_(True, False), _if_then_else(True, 0, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, compare_blocks_rows)))), le(_if_then_else(and_(ge(0, 1), or_(True, False)), _if_then_else(ge(zeros_diff_rows, 2), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, 0)), _if_then_else(and_(False, False), _if_then_else(True, max_col_clue, 2), _if_then_else(True, max_col_clue, 1))), _if_then_else(ge(_if_then_else(True, 4, ones_diff_rows), _if_then_else(False, compare_blocks_rows, max_row_clue)), _if_then_else(False, _if_then_else(True, 2, max_row_clue), _if_then_else(False, 2, 1)), _if_then_else(le(0, 3), _if_then_else(True, 2, zeros_diff_cols), _if_then_else(False, 4, 1)))))
ge(_if_then_else(or_(ge(ones_diff_cols, 4), or_(True, False)), _if_then_else(ge(4, 4), _if_then_else(False, compare_blocks_rows, 3), ones_diff_cols), _if_then_else(False, _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(and_(ge(2, compare_blocks_rows), and_(False, True)), _if_then_else(ge(compare_blocks_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, 3, compare_blocks_rows)), _if_then_else(le(0, ones_diff_cols), _if_then_else(False, max_col_clue, max_row_clue), _if_then_else(True, max_row_clue, max_row_clue))))), _if_then_else(ge(4, _if_then_else(True, 3, compare_blocks_rows)), _if_then_else(True, ones_diff_cols, _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(True, zeros_diff_cols, _if_then_else(False, ones_diff_rows, 4))))
and_(or_(ge(_if_then_else(True, _if_then_else(False, ones_diff_rows, 1), 2), _if_then_else(le(_if_then_else(False, 1, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(le(compare_blocks_cols, ones_diff_rows), _if_then_else(and_(le(_if_then_else(False, 0, ones_diff_cols), _if_then_else(False, max_row_clue, compare_blocks_cols)), ge(_if_then_else(False, 0, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows))), 3, 4), _if_then_else(False, max_row_clue, max_row_clue)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(True, ones_diff_rows, max_row_clue)))), or_(False, True)), and_(le(ones_diff_cols, max_row_clue), and_(False, True)))
or_(le(_if_then_else(True, 4, max_col_clue), _if_then_else(False, 2, 2)), and_(True, le(_if_then_else(and_(False, False), _if_then_else(False, zeros_diff_rows, zeros_diff_cols), _if_then_else(False, 1, compare_blocks_rows)), _if_then_else(le(compare_blocks_rows, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(True, ones_diff_rows, max_row_clue)))))
or_(or_(and_(True, True), ge(_if_then_else(le(max_col_clue, 2), ones_diff_cols, zeros_diff_rows), 0)), le(ones_diff_cols, max_row_clue))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(mul(ones_diff_rows, zeros_diff_cols), compare_blocks_rows)), add(add(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)))
add(mul(mul(compare_blocks_rows, add(zeros_diff_rows, compare_blocks_rows)), add(ones_diff_rows, add(zeros_diff_cols, ones_diff_cols))), mul(mul(ones_diff_rows, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_cols)))
mul(mul(add(mul(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(mul(compare_blocks_cols, compare_blocks_cols), zeros_diff_rows))), mul(mul(ones_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)))
add(add(mul(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(compare_blocks_cols, compare_blocks_cols))
add(mul(add(mul(mul(add(zeros_diff_rows, mul(compare_blocks_rows, compare_blocks_rows)), add(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, zeros_diff_rows))), add(ones_diff_cols, compare_blocks_rows)), mul(compare_blocks_rows, add(compare_blocks_rows, ones_diff_rows))), add(zeros_diff_rows, zeros_diff_rows)), mul(add(zeros_diff_rows, compare_blocks_cols), mul(mul(add(zeros_diff_cols, ones_diff_cols), zeros_diff_cols), add(add(zeros_diff_cols, zeros_diff_cols), compare_blocks_cols))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, _if_then_else(True, 2, ones_diff_cols), 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), 4))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), 3, _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), add(add(add(ones_diff_cols, add(compare_blocks_rows, compare_blocks_cols)), add(ones_diff_cols, mul(ones_diff_cols, zeros_diff_rows))), add(mul(compare_blocks_cols, mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, zeros_diff_rows))))))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), mul(add(mul(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_cols)))), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(mul(add(add(zeros_diff_cols, add(add(zeros_diff_rows, ones_diff_cols), zeros_diff_cols)), mul(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_rows, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_cols))), ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
and_(ge(_if_then_else(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(False, ones_diff_cols, 0)), _if_then_else(le(max_row_clue, 1), _if_then_else(True, max_col_clue, _if_then_else(True, 3, 1)), _if_then_else(False, ones_diff_rows, 1)), _if_then_else(or_(le(_if_then_else(True, ones_diff_cols, _if_then_else(le(ones_diff_cols, compare_blocks_rows), max_col_clue, zeros_diff_rows)), _if_then_else(True, 0, compare_blocks_cols)), and_(ge(3, _if_then_else(False, _if_then_else(True, 3, ones_diff_cols), _if_then_else(True, ones_diff_cols, 2))), ge(zeros_diff_rows, zeros_diff_cols))), _if_then_else(True, 3, 3), _if_then_else(True, zeros_diff_cols, 4))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, 2), _if_then_else(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, max_row_clue, ones_diff_rows)), max_row_clue, ones_diff_rows)), compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, True), _if_then_else(False, 3, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, max_row_clue)), _if_then_else(and_(True, False), _if_then_else(True, 0, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, compare_blocks_rows)))), le(_if_then_else(and_(ge(0, 1), or_(True, False)), _if_then_else(ge(zeros_diff_rows, 2), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, 0)), _if_then_else(and_(False, False), _if_then_else(True, max_col_clue, 2), _if_then_else(True, max_col_clue, 1))), _if_then_else(ge(_if_then_else(True, 4, ones_diff_rows), _if_then_else(False, compare_blocks_rows, max_row_clue)), _if_then_else(False, _if_then_else(True, 2, max_row_clue), _if_then_else(False, 2, 1)), _if_then_else(le(0, 3), _if_then_else(True, 2, zeros_diff_cols), _if_then_else(False, 4, 1)))))
ge(_if_then_else(or_(ge(ones_diff_cols, 4), or_(True, False)), _if_then_else(ge(4, 4), _if_then_else(False, compare_blocks_rows, 3), ones_diff_cols), _if_then_else(False, _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(and_(ge(2, compare_blocks_rows), and_(False, True)), _if_then_else(ge(compare_blocks_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, 3, compare_blocks_rows)), _if_then_else(le(0, ones_diff_cols), _if_then_else(False, max_col_clue, max_row_clue), _if_then_else(True, max_row_clue, max_row_clue))))), _if_then_else(ge(4, _if_then_else(True, 3, compare_blocks_rows)), _if_then_else(True, ones_diff_cols, _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(True, zeros_diff_cols, _if_then_else(False, ones_diff_rows, 4))))
and_(or_(ge(_if_then_else(True, _if_then_else(False, ones_diff_rows, 1), 2), _if_then_else(le(_if_then_else(False, 1, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(le(compare_blocks_cols, ones_diff_rows), _if_then_else(and_(le(_if_then_else(False, 0, ones_diff_cols), _if_then_else(False, max_row_clue, compare_blocks_cols)), ge(_if_then_else(False, 0, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows))), compare_blocks_cols, 4), _if_then_else(False, max_row_clue, max_row_clue)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(True, ones_diff_rows, max_row_clue)))), or_(False, True)), and_(le(ones_diff_cols, max_row_clue), and_(False, True)))
or_(le(_if_then_else(True, 4, max_col_clue), _if_then_else(False, 2, 2)), and_(True, le(_if_then_else(and_(False, False), _if_then_else(False, zeros_diff_rows, zeros_diff_cols), _if_then_else(False, 1, compare_blocks_rows)), _if_then_else(le(compare_blocks_rows, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(True, ones_diff_rows, max_row_clue)))))
or_(or_(and_(True, True), ge(_if_then_else(le(max_col_clue, 2), ones_diff_cols, zeros_diff_rows), 0)), le(ones_diff_cols, ones_diff_rows))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(mul(ones_diff_rows, zeros_diff_cols), compare_blocks_rows)), add(add(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)))
add(mul(mul(compare_blocks_rows, add(zeros_diff_rows, compare_blocks_rows)), add(ones_diff_rows, add(zeros_diff_cols, ones_diff_cols))), mul(mul(ones_diff_rows, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_cols)))
mul(mul(add(mul(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(mul(compare_blocks_cols, compare_blocks_cols), zeros_diff_rows))), mul(mul(ones_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)))
add(add(mul(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(compare_blocks_cols, compare_blocks_cols))
add(mul(add(mul(mul(add(zeros_diff_rows, mul(compare_blocks_rows, compare_blocks_rows)), add(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, zeros_diff_rows))), add(ones_diff_cols, compare_blocks_rows)), mul(compare_blocks_rows, add(compare_blocks_rows, ones_diff_rows))), add(zeros_diff_rows, zeros_diff_rows)), mul(add(zeros_diff_rows, compare_blocks_cols), mul(mul(add(zeros_diff_cols, ones_diff_cols), zeros_diff_cols), add(add(zeros_diff_cols, zeros_diff_cols), compare_blocks_cols))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(ones_diff_cols, ones_diff_rows)), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, add(ones_diff_cols, ones_diff_rows)))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, mul(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(or_(ge(3, 1), ge(_if_then_else(True, compare_blocks_cols, ones_diff_rows), 4)), _if_then_else(ge(1, compare_blocks_cols), _if_then_else(True, max_row_clue, max_col_clue), _if_then_else(True, 4, max_row_clue)), _if_then_else(or_(and_(True, False), True), _if_then_else(False, 2, ones_diff_cols), _if_then_else(True, 4, 2))), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(and_(and_(or_(False, False), and_(False, False)), ge(_if_then_else(True, 0, _if_then_else(False, 4, max_row_clue)), _if_then_else(le(compare_blocks_rows, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, 3), compare_blocks_rows))), ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(le(_if_then_else(and_(ge(compare_blocks_rows, compare_blocks_cols), True), ones_diff_rows, ones_diff_rows), _if_then_else(False, _if_then_else(and_(False, True), _if_then_else(True, 1, 1), 2), zeros_diff_cols)), _if_then_else(ge(_if_then_else(False, 1, compare_blocks_rows), _if_then_else(False, 3, max_col_clue)), _if_then_else(False, 2, 3), _if_then_else(ge(max_row_clue, _if_then_else(False, max_row_clue, 1)), compare_blocks_rows, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(True, _if_then_else(True, _if_then_else(True, zeros_diff_cols, max_row_clue), _if_then_else(False, ones_diff_rows, 3)), 1), _if_then_else(False, _if_then_else(True, 3, ones_diff_rows), 0))), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(mul(add(add(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows))), zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, max_row_clue, ones_diff_rows)), max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, zeros_diff_cols))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 2, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(compare_blocks_rows, ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
or_(True, ge(_if_then_else(False, 3, zeros_diff_cols), _if_then_else(True, 3, 1)))
and_(le(_if_then_else(le(ones_diff_rows, 4), _if_then_else(False, 3, ones_diff_rows), _if_then_else(le(zeros_diff_cols, 2), _if_then_else(True, 0, 4), zeros_diff_cols)), _if_then_else(ge(ones_diff_cols, zeros_diff_rows), _if_then_else(or_(False, False), compare_blocks_cols, compare_blocks_cols), _if_then_else(True, 3, 2))), le(_if_then_else(True, 3, zeros_diff_cols), _if_then_else(True, ones_diff_rows, zeros_diff_rows)))
le(_if_then_else(or_(ge(_if_then_else(le(_if_then_else(True, ones_diff_cols, ones_diff_cols), _if_then_else(True, 1, 0)), _if_then_else(ge(max_row_clue, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, 4), _if_then_else(True, 1, ones_diff_cols)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_rows, 1), _if_then_else(True, 0, ones_diff_rows))), _if_then_else(or_(le(ones_diff_rows, ones_diff_cols), and_(False, True)), _if_then_else(ge(zeros_diff_cols, 4), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(False, ones_diff_rows, zeros_diff_rows)), _if_then_else(ge(4, 4), _if_then_else(False, 0, ones_diff_rows), _if_then_else(False, compare_blocks_rows, ones_diff_rows)))), False), _if_then_else(True, max_row_clue, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(le(2, zeros_diff_rows), _if_then_else(False, 1, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_rows)))
and_(or_(or_(ge(1, zeros_diff_cols), and_(False, True)), and_(or_(True, False), ge(max_col_clue, 1))), le(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, ones_diff_cols), _if_then_else(True, 4, compare_blocks_rows)), _if_then_else(le(_if_then_else(False, 4, compare_blocks_cols), _if_then_else(True, 2, 2)), _if_then_else(ge(4, 2), _if_then_else(True, 3, compare_blocks_cols), _if_then_else(False, 1, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(False, 0, ones_diff_rows), _if_then_else(True, 1, zeros_diff_rows)))))
ge(_if_then_else(and_(False, False), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(le(max_col_clue, 3), _if_then_else(False, compare_blocks_rows, 1), _if_then_else(True, 2, max_col_clue)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(ones_diff_rows, add(compare_blocks_rows, compare_blocks_rows))), add(mul(mul(ones_diff_rows, compare_blocks_rows), ones_diff_rows), mul(ones_diff_cols, ones_diff_cols)))
mul(add(add(zeros_diff_rows, compare_blocks_rows), mul(add(mul(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols)), zeros_diff_rows)), mul(mul(ones_diff_cols, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols)))
mul(mul(add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_rows))), mul(mul(mul(ones_diff_cols, add(mul(add(ones_diff_cols, compare_blocks_cols), mul(mul(mul(ones_diff_cols, zeros_diff_cols), compare_blocks_cols), mul(ones_diff_cols, add(compare_blocks_cols, zeros_diff_rows)))), mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_cols)))), add(ones_diff_cols, ones_diff_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(mul(compare_blocks_cols, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_cols)))))
mul(mul(mul(compare_blocks_rows, zeros_diff_rows), mul(add(mul(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_cols)))), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_cols)))
mul(add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(mul(mul(add(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_rows)), mul(mul(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols))))))
add(mul(add(zeros_diff_rows, mul(compare_blocks_rows, compare_blocks_rows)), add(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, zeros_diff_rows))), mul(mul(zeros_diff_rows, compare_blocks_cols), mul(mul(ones_diff_cols, zeros_diff_rows), zeros_diff_cols)))
COND TREES:
and_(ge(_if_then_else(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(False, ones_diff_cols, 0)), _if_then_else(le(max_row_clue, 1), _if_then_else(True, 1, max_col_clue), _if_then_else(False, ones_diff_rows, 1)), _if_then_else(le(max_row_clue, max_col_clue), _if_then_else(True, 3, 3), _if_then_else(True, zeros_diff_cols, 4))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, 2), _if_then_else(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, max_row_clue, ones_diff_rows)), max_row_clue, ones_diff_rows)), compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, True), _if_then_else(False, 3, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, max_row_clue)), _if_then_else(and_(True, False), _if_then_else(True, 0, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, compare_blocks_rows)))), le(_if_then_else(and_(ge(0, 1), or_(True, False)), _if_then_else(ge(zeros_diff_rows, 2), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, 0)), _if_then_else(and_(False, False), _if_then_else(True, max_col_clue, 2), _if_then_else(True, max_col_clue, 1))), _if_then_else(ge(_if_then_else(True, 4, ones_diff_rows), _if_then_else(False, compare_blocks_rows, max_row_clue)), _if_then_else(False, _if_then_else(True, 2, max_row_clue), _if_then_else(False, 2, 1)), _if_then_else(le(0, 3), _if_then_else(True, 2, zeros_diff_cols), _if_then_else(False, 4, 1)))))
ge(_if_then_else(or_(ge(ones_diff_cols, 4), or_(True, False)), _if_then_else(ge(4, 4), _if_then_else(False, compare_blocks_rows, 3), ones_diff_cols), _if_then_else(False, _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, zeros_diff_cols, max_col_clue))), _if_then_else(ge(4, _if_then_else(False, 3, compare_blocks_rows)), _if_then_else(True, ones_diff_cols, _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(True, zeros_diff_cols, ones_diff_rows)))
and_(or_(ge(_if_then_else(True, _if_then_else(False, ones_diff_rows, 1), 2), zeros_diff_rows), or_(False, True)), and_(le(ones_diff_cols, max_row_clue), True))
or_(le(_if_then_else(True, 4, max_col_clue), _if_then_else(False, 2, 2)), or_(True, True))
or_(or_(False, ge(_if_then_else(le(max_col_clue, 2), ones_diff_cols, zeros_diff_rows), 0)), and_(or_(False, False), le(compare_blocks_cols, 2)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_rows)), add(add(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)))
add(mul(mul(compare_blocks_rows, add(zeros_diff_rows, compare_blocks_rows)), add(ones_diff_rows, add(zeros_diff_cols, ones_diff_cols))), mul(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_rows)))
mul(add(mul(compare_blocks_cols, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_cols)), mul(mul(ones_diff_cols, compare_blocks_rows), mul(add(mul(compare_blocks_rows, compare_blocks_rows), compare_blocks_rows), ones_diff_cols)))
mul(mul(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_cols, zeros_diff_cols)), mul(add(compare_blocks_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)))
add(add(mul(compare_blocks_rows, add(zeros_diff_cols, zeros_diff_cols)), mul(zeros_diff_rows, ones_diff_rows)), add(add(ones_diff_cols, zeros_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(add(mul(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, compare_blocks_rows)), mul(compare_blocks_rows, add(compare_blocks_rows, ones_diff_rows))), add(zeros_diff_rows, zeros_diff_rows)), mul(add(zeros_diff_rows, compare_blocks_cols), mul(mul(add(zeros_diff_cols, ones_diff_cols), zeros_diff_cols), add(add(zeros_diff_cols, zeros_diff_cols), compare_blocks_cols))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(True, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(and_(False, True), True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, _if_then_else(True, 2, ones_diff_cols), 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(and_(True, True), 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), 3, _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, _if_then_else(True, 2, ones_diff_cols), 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), 4))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), 3, _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(False, 4, 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(True, _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(False, _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(ones_diff_cols, ones_diff_rows)), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, add(ones_diff_cols, ones_diff_rows)))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, mul(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(compare_blocks_rows, ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, compare_blocks_cols))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, compare_blocks_cols)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(compare_blocks_rows, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), compare_blocks_rows)), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), ones_diff_cols))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(ones_diff_rows, add(compare_blocks_cols, ones_diff_rows))), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), compare_blocks_rows)), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(mul(add(add(ones_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows))), zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_rows))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(True, 3, 1)), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(le(compare_blocks_cols, max_col_clue), compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(False, _if_then_else(False, _if_then_else(True, _if_then_else(True, 3, ones_diff_cols), 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, _if_then_else(True, 2, ones_diff_cols), 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), 3, _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(False, max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(zeros_diff_rows, _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(compare_blocks_rows, ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, mul(ones_diff_rows, ones_diff_cols)), mul(ones_diff_cols, ones_diff_rows))), ones_diff_cols), mul(ones_diff_rows, ones_diff_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(add(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_rows), add(add(zeros_diff_cols, ones_diff_rows), zeros_diff_cols))))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(mul(add(mul(zeros_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows))), ones_diff_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
or_(ge(compare_blocks_cols, _if_then_else(True, max_row_clue, ones_diff_rows)), ge(_if_then_else(False, 3, zeros_diff_cols), _if_then_else(True, 3, 1)))
and_(or_(and_(True, True), or_(False, False)), le(_if_then_else(True, 3, zeros_diff_cols), _if_then_else(True, max_row_clue, _if_then_else(True, ones_diff_rows, zeros_diff_rows))))
le(_if_then_else(or_(False, False), _if_then_else(True, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(le(2, zeros_diff_rows), _if_then_else(False, 1, max_col_clue), _if_then_else(or_(le(compare_blocks_cols, max_col_clue), le(compare_blocks_cols, 3)), max_row_clue, compare_blocks_rows)))
and_(or_(or_(ge(1, zeros_diff_cols), and_(False, True)), and_(or_(ge(1, zeros_diff_cols), and_(False, True)), ge(max_col_clue, 1))), le(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, ones_diff_cols), _if_then_else(True, 4, compare_blocks_rows)), _if_then_else(or_(False, True), _if_then_else(True, max_row_clue, zeros_diff_rows), _if_then_else(True, max_col_clue, zeros_diff_rows))))
ge(_if_then_else(and_(False, False), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(le(max_col_clue, 2), _if_then_else(False, compare_blocks_rows, 1), _if_then_else(True, 2, max_col_clue)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(ones_diff_rows, add(compare_blocks_rows, compare_blocks_rows))), add(mul(mul(ones_diff_rows, compare_blocks_rows), ones_diff_rows), mul(ones_diff_cols, ones_diff_cols)))
mul(add(add(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_rows)), mul(add(mul(mul(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols))), add(add(add(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), add(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols))), mul(mul(mul(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_cols, ones_diff_rows), add(zeros_diff_cols, zeros_diff_rows))))))
mul(mul(add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_rows))), mul(mul(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols))))
mul(mul(mul(add(mul(mul(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_cols)))
add(add(add(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols))), add(add(mul(ones_diff_cols, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)), mul(add(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols))))
add(mul(add(zeros_diff_rows, ones_diff_rows), add(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, zeros_diff_rows))), mul(mul(zeros_diff_rows, compare_blocks_cols), mul(mul(ones_diff_cols, zeros_diff_rows), zeros_diff_cols)))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, _if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, 3, 2), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(True, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, _if_then_else(False, 3, max_row_clue))), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(mul(add(add(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows))), zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(False, max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(or_(or_(False, or_(ge(_if_then_else(False, max_col_clue, 3), _if_then_else(True, ones_diff_rows, 1)), and_(ge(compare_blocks_rows, 4), and_(True, False)))), and_(or_(or_(or_(True, False), le(compare_blocks_rows, zeros_diff_cols)), le(_if_then_else(True, 1, 4), _if_then_else(True, compare_blocks_cols, 2))), and_(or_(ge(compare_blocks_cols, zeros_diff_rows), or_(True, False)), or_(le(max_col_clue, ones_diff_cols), and_(True, False))))), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), 1), and_(or_(or_(True, and_(or_(and_(True, or_(ge(zeros_diff_rows, compare_blocks_cols), ge(max_col_clue, 4))), or_(True, True)), le(_if_then_else(False, max_row_clue, 3), _if_then_else(False, 4, 4)))), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, _if_then_else(or_(ge(_if_then_else(False, compare_blocks_cols, 0), _if_then_else(False, 1, max_row_clue)), True), _if_then_else(or_(ge(max_row_clue, zeros_diff_cols), ge(3, ones_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(True, max_col_clue, compare_blocks_cols)), _if_then_else(ge(3, 3), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, ones_diff_rows, 2))), _if_then_else(and_(le(1, 1), or_(True, False)), _if_then_else(le(4, compare_blocks_rows), _if_then_else(True, 4, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 4, ones_diff_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_cols)))), ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, mul(compare_blocks_rows, zeros_diff_cols)))))))))
COND TREES:
and_(ge(_if_then_else(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(False, ones_diff_cols, 0)), _if_then_else(le(max_row_clue, 1), _if_then_else(True, 1, max_col_clue), _if_then_else(False, ones_diff_rows, 1)), _if_then_else(le(max_row_clue, max_col_clue), _if_then_else(True, 3, 3), _if_then_else(True, zeros_diff_cols, 4))), _if_then_else(le(ones_diff_cols, _if_then_else(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, max_row_clue, ones_diff_rows)), max_row_clue, ones_diff_rows)), compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, True), _if_then_else(False, 3, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, max_row_clue)), _if_then_else(and_(True, False), _if_then_else(True, 0, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, compare_blocks_rows)))), le(_if_then_else(and_(ge(0, 1), or_(True, False)), _if_then_else(ge(zeros_diff_rows, 2), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, 0)), _if_then_else(and_(False, False), _if_then_else(True, max_col_clue, 2), _if_then_else(True, max_col_clue, 1))), _if_then_else(ge(_if_then_else(True, 4, ones_diff_rows), _if_then_else(False, compare_blocks_rows, max_row_clue)), _if_then_else(False, _if_then_else(True, 2, max_row_clue), _if_then_else(False, 2, 1)), _if_then_else(le(0, 3), _if_then_else(True, 2, zeros_diff_cols), _if_then_else(False, 4, 1)))))
ge(_if_then_else(or_(ge(ones_diff_cols, 4), or_(True, False)), _if_then_else(True, max_row_clue, zeros_diff_rows), _if_then_else(False, _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, zeros_diff_cols, max_col_clue))), _if_then_else(ge(4, _if_then_else(True, 3, compare_blocks_rows)), _if_then_else(True, ones_diff_cols, _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(True, zeros_diff_cols, ones_diff_rows)))
and_(or_(ge(_if_then_else(True, _if_then_else(False, ones_diff_rows, 1), 2), zeros_diff_rows), True), and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, _if_then_else(True, 2, ones_diff_cols), 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))))
or_(le(_if_then_else(True, 4, max_col_clue), _if_then_else(True, 2, 2)), or_(True, True))
or_(or_(and_(True, True), ge(_if_then_else(le(max_col_clue, 2), ones_diff_cols, zeros_diff_rows), 0)), and_(or_(False, False), and_(True, True)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_rows)), add(add(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)))
add(mul(mul(compare_blocks_rows, add(zeros_diff_rows, compare_blocks_rows)), add(ones_diff_rows, add(zeros_diff_cols, ones_diff_cols))), mul(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_rows)))
mul(add(mul(compare_blocks_cols, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_cols)), mul(mul(ones_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_cols)))
mul(mul(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols)), mul(add(compare_blocks_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)))
add(add(mul(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)), mul(compare_blocks_rows, add(compare_blocks_rows, ones_diff_rows))), add(zeros_diff_rows, zeros_diff_rows)), mul(add(zeros_diff_rows, compare_blocks_cols), mul(mul(add(zeros_diff_cols, ones_diff_cols), zeros_diff_cols), add(add(zeros_diff_cols, zeros_diff_cols), compare_blocks_cols))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(True, 3, 1)), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, 2), 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(False, _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(ones_diff_cols, max_row_clue), and_(False, True)), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), 3, _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, mul(mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, ones_diff_cols)), add(mul(ones_diff_rows, add(compare_blocks_cols, ones_diff_cols)), add(ones_diff_rows, zeros_diff_cols)))), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(mul(mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_cols, ones_diff_cols)), mul(mul(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, ones_diff_rows))), zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(mul(add(add(mul(compare_blocks_rows, compare_blocks_rows), ones_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)), mul(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(le(_if_then_else(False, _if_then_else(False, _if_then_else(False, 0, 0), ones_diff_cols), _if_then_else(True, zeros_diff_cols, 4)), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_rows, 2), _if_then_else(True, max_row_clue, 1))), ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(True, _if_then_else(and_(le(_if_then_else(True, max_row_clue, 2), _if_then_else(True, 2, _if_then_else(True, 3, _if_then_else(True, compare_blocks_rows, 0)))), or_(or_(False, and_(True, le(0, 3))), or_(False, or_(True, True)))), _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, _if_then_else(and_(ge(_if_then_else(and_(False, True), _if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 4, zeros_diff_cols)), _if_then_else(ge(zeros_diff_rows, 2), _if_then_else(False, 4, 3), _if_then_else(False, zeros_diff_rows, 3))), and_(ge(_if_then_else(True, max_row_clue, 0), _if_then_else(False, 1, 3)), ge(_if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, 4)))), _if_then_else(or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), ge(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, 1, 0))), _if_then_else(ge(_if_then_else(False, max_col_clue, max_row_clue), _if_then_else(True, ones_diff_rows, 4)), _if_then_else(ge(compare_blocks_cols, max_col_clue), _if_then_else(False, compare_blocks_cols, max_col_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(ones_diff_rows, zeros_diff_cols), _if_then_else(True, max_row_clue, 1), _if_then_else(True, max_col_clue, max_col_clue))), _if_then_else(and_(or_(False, False), or_(False, False)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_rows, 1), _if_then_else(False, 4, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, 0, 2)))), _if_then_else(le(_if_then_else(le(compare_blocks_cols, 3), _if_then_else(False, max_col_clue, 3), _if_then_else(True, 3, max_col_clue)), _if_then_else(ge(zeros_diff_rows, max_row_clue), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, max_row_clue, 4))), _if_then_else(or_(and_(False, True), le(2, compare_blocks_rows)), _if_then_else(le(compare_blocks_cols, zeros_diff_cols), _if_then_else(False, 0, 0), _if_then_else(False, compare_blocks_rows, 4)), _if_then_else(le(compare_blocks_cols, ones_diff_rows), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_cols))), _if_then_else(le(_if_then_else(True, 0, zeros_diff_rows), _if_then_else(False, 0, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 3, 3)), _if_then_else(ge(max_col_clue, max_col_clue), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(True, 1, 0))))))), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 4, ones_diff_cols)), _if_then_else(le(_if_then_else(or_(and_(True, True), ge(3, 1)), _if_then_else(ge(0, 1), _if_then_else(True, ones_diff_rows, max_col_clue), _if_then_else(False, compare_blocks_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_rows), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, 4))), _if_then_else(ge(_if_then_else(True, ones_diff_rows, 1), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(ge(max_col_clue, compare_blocks_cols), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, 0)), _if_then_else(or_(True, False), _if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, ones_diff_cols, 1)))), _if_then_else(or_(or_(or_(False, False), ge(compare_blocks_rows, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, compare_blocks_rows))), _if_then_else(and_(ge(3, 4), and_(True, False)), _if_then_else(le(compare_blocks_rows, 4), _if_then_else(True, 1, 0), _if_then_else(False, 4, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, ones_diff_cols, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, max_col_clue, max_col_clue)), _if_then_else(ge(0, max_col_clue), _if_then_else(False, ones_diff_cols, compare_blocks_cols), _if_then_else(True, 2, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(False, 1, 3), _if_then_else(True, 4, 2)))), _if_then_else(or_(or_(le(zeros_diff_rows, 4), ge(ones_diff_rows, 3)), or_(le(zeros_diff_rows, ones_diff_rows), or_(False, and_(True, True)))), _if_then_else(or_(le(1, 2), and_(False, False)), _if_then_else(le(2, max_row_clue), _if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 4, 2)), _if_then_else(ge(0, zeros_diff_cols), _if_then_else(True, 3, zeros_diff_cols), _if_then_else(True, compare_blocks_cols, 4))), _if_then_else(and_(le(ones_diff_rows, max_col_clue), le(max_col_clue, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, max_row_clue, max_row_clue)), _if_then_else(le(zeros_diff_rows, zeros_diff_rows), _if_then_else(True, max_col_clue, 0), _if_then_else(True, max_col_clue, ones_diff_cols))))))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
or_(ge(compare_blocks_cols, _if_then_else(True, max_row_clue, ones_diff_rows)), ge(_if_then_else(False, 3, zeros_diff_cols), _if_then_else(True, 3, 1)))
and_(or_(and_(True, True), or_(False, False)), le(_if_then_else(True, 3, zeros_diff_cols), _if_then_else(True, max_row_clue, _if_then_else(True, ones_diff_rows, zeros_diff_rows))))
le(_if_then_else(or_(False, False), _if_then_else(True, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(le(2, zeros_diff_rows), _if_then_else(False, 1, max_col_clue), _if_then_else(or_(le(compare_blocks_cols, max_col_clue), le(compare_blocks_cols, 3)), max_row_clue, compare_blocks_rows)))
and_(or_(or_(ge(1, zeros_diff_cols), and_(False, True)), and_(or_(ge(1, zeros_diff_cols), and_(False, True)), ge(max_col_clue, 1))), le(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, ones_diff_cols), _if_then_else(True, 4, compare_blocks_rows)), _if_then_else(or_(False, True), _if_then_else(True, max_row_clue, zeros_diff_rows), _if_then_else(True, max_col_clue, zeros_diff_rows))))
ge(_if_then_else(and_(False, False), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(le(max_col_clue, 2), _if_then_else(False, compare_blocks_rows, 1), _if_then_else(True, 2, max_col_clue)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(ones_diff_rows, add(compare_blocks_rows, compare_blocks_rows))), add(mul(mul(ones_diff_rows, compare_blocks_rows), ones_diff_rows), mul(ones_diff_cols, ones_diff_cols)))
mul(add(add(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_rows)), mul(add(mul(mul(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols))), add(add(add(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), add(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols))), mul(mul(mul(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_cols, ones_diff_rows), add(zeros_diff_cols, zeros_diff_rows))))))
mul(mul(add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_rows))), mul(mul(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols))))
mul(mul(mul(add(mul(mul(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_cols)))
add(add(add(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols))), add(add(mul(ones_diff_cols, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)), mul(add(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols))))
add(mul(add(zeros_diff_rows, ones_diff_rows), add(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, zeros_diff_rows))), mul(mul(zeros_diff_rows, compare_blocks_cols), mul(mul(ones_diff_cols, zeros_diff_rows), zeros_diff_cols)))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, _if_then_else(True, 2, ones_diff_cols), 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), 3, _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(ones_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), zeros_diff_cols)
mul(add(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, compare_blocks_cols)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(compare_blocks_rows, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), compare_blocks_rows)), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), ones_diff_cols))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, add(compare_blocks_cols, ones_diff_rows))), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), compare_blocks_rows)), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(mul(add(add(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows))), zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_rows))))))))
COND TREES:
or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, max_row_clue, ones_diff_rows)), ge(_if_then_else(False, 3, zeros_diff_cols), _if_then_else(True, 3, 1)))
and_(or_(and_(True, True), or_(False, False)), le(_if_then_else(True, 3, zeros_diff_cols), _if_then_else(True, ones_diff_rows, zeros_diff_rows)))
le(_if_then_else(or_(False, False), _if_then_else(True, max_row_clue, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(le(2, zeros_diff_rows), _if_then_else(False, 1, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_rows)))
and_(or_(or_(ge(1, zeros_diff_cols), and_(False, True)), and_(or_(True, False), ge(max_col_clue, 1))), le(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, ones_diff_cols), _if_then_else(or_(le(max_row_clue, zeros_diff_rows), or_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(False, 3, compare_blocks_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)))), _if_then_else(or_(False, True), _if_then_else(True, max_row_clue, zeros_diff_rows), _if_then_else(True, max_col_clue, zeros_diff_rows))))
ge(_if_then_else(and_(False, False), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(and_(and_(ge(_if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(False, max_col_clue, 1)), and_(or_(True, False), and_(False, True))), le(_if_then_else(and_(False, False), _if_then_else(False, ones_diff_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, ones_diff_cols)))), _if_then_else(False, compare_blocks_rows, 1), _if_then_else(True, 2, max_col_clue)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(ones_diff_rows, add(compare_blocks_rows, compare_blocks_rows))), add(ones_diff_rows, mul(zeros_diff_cols, ones_diff_cols)))
mul(add(zeros_diff_rows, mul(zeros_diff_rows, zeros_diff_rows)), mul(mul(ones_diff_cols, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols)))
mul(mul(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), mul(mul(mul(ones_diff_cols, add(mul(add(ones_diff_cols, compare_blocks_cols), mul(mul(mul(ones_diff_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_rows)), mul(ones_diff_cols, add(compare_blocks_cols, zeros_diff_rows)))), mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_cols)))), add(ones_diff_cols, ones_diff_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols))))
mul(mul(mul(compare_blocks_rows, zeros_diff_rows), mul(add(mul(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_cols)), mul(add(mul(add(ones_diff_rows, ones_diff_cols), ones_diff_rows), compare_blocks_cols), add(ones_diff_rows, compare_blocks_cols)))), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_cols)))
mul(add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(mul(mul(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, compare_blocks_rows)), mul(mul(compare_blocks_cols, compare_blocks_cols), add(mul(compare_blocks_cols, compare_blocks_cols), ones_diff_cols))), mul(mul(add(ones_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols))))))
add(add(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_rows, compare_blocks_cols), mul(mul(ones_diff_cols, zeros_diff_rows), zeros_diff_cols)))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, _if_then_else(or_(ge(compare_blocks_cols, ones_diff_rows), le(compare_blocks_cols, 1)), _if_then_else(or_(False, True), _if_then_else(False, _if_then_else(le(2, 3), max_col_clue, _if_then_else(True, compare_blocks_rows, max_col_clue)), 2), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(and_(or_(True, False), False), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, max_col_clue, 2))), 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, _if_then_else(True, 2, ones_diff_cols), 1)), le(_if_then_else(le(_if_then_else(le(zeros_diff_cols, zeros_diff_cols), _if_then_else(True, ones_diff_cols, compare_blocks_cols), _if_then_else(False, 3, 3)), _if_then_else(or_(True, True), _if_then_else(False, 0, compare_blocks_rows), _if_then_else(False, ones_diff_cols, 4))), _if_then_else(or_(ge(4, max_col_clue), ge(zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(1, ones_diff_cols), _if_then_else(False, 2, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, 2))), _if_then_else(ge(_if_then_else(False, 0, 1), _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_cols, zeros_diff_rows), _if_then_else(False, max_col_clue, 4)), _if_then_else(or_(True, False), _if_then_else(False, 1, 1), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)))), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), 3, _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, _if_then_else(True, 2, ones_diff_cols), 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), 3, _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), ones_diff_cols), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(add(compare_blocks_cols, zeros_diff_rows), zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, _if_then_else(ge(_if_then_else(or_(True, False), max_row_clue, 1), _if_then_else(False, _if_then_else(False, ones_diff_cols, max_row_clue), 0)), _if_then_else(ge(max_row_clue, ones_diff_rows), _if_then_else(False, _if_then_else(False, max_col_clue, 3), _if_then_else(ge(zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 2, max_row_clue), compare_blocks_rows)), _if_then_else(False, _if_then_else(True, 2, 0), ones_diff_cols)), _if_then_else(le(0, 0), _if_then_else(False, 3, 0), _if_then_else(and_(True, True), _if_then_else(True, _if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, compare_blocks_rows, ones_diff_cols)), max_row_clue)))), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(and_(and_(False, False), or_(True, True)), _if_then_else(le(compare_blocks_rows, max_col_clue), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(or_(True, True), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, ones_diff_rows, 0)))), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, le(_if_then_else(ge(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(True, 1, 3)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(True, 1, max_row_clue), _if_then_else(True, max_row_clue, compare_blocks_rows))), _if_then_else(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, 0)), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, max_row_clue, compare_blocks_rows)), _if_then_else(le(1, 1), _if_then_else(False, 0, 0), _if_then_else(False, 4, zeros_diff_rows))), _if_then_else(ge(_if_then_else(True, zeros_diff_cols, 0), _if_then_else(True, zeros_diff_rows, zeros_diff_cols)), _if_then_else(le(max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, 2, 0)), _if_then_else(ge(3, 3), _if_then_else(True, 2, 4), _if_then_else(False, 1, ones_diff_cols)))), _if_then_else(or_(or_(or_(True, True), and_(True, False)), ge(_if_then_else(True, max_col_clue, compare_blocks_cols), _if_then_else(True, 1, compare_blocks_cols))), _if_then_else(le(_if_then_else(True, max_col_clue, ones_diff_cols), _if_then_else(True, max_row_clue, compare_blocks_rows)), _if_then_else(ge(0, 0), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(False, max_row_clue, max_row_clue)), _if_then_else(le(2, ones_diff_cols), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, 1, compare_blocks_cols))), _if_then_else(ge(_if_then_else(True, max_col_clue, 1), _if_then_else(True, 1, max_row_clue)), _if_then_else(le(0, compare_blocks_rows), _if_then_else(True, max_col_clue, 2), _if_then_else(True, zeros_diff_rows, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(False, 1, 0), _if_then_else(True, 0, compare_blocks_rows)))))), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, _if_then_else(and_(or_(or_(False, True), le(compare_blocks_cols, ones_diff_rows)), le(_if_then_else(False, compare_blocks_rows, 4), _if_then_else(True, zeros_diff_rows, 0))), _if_then_else(le(_if_then_else(True, ones_diff_cols, 2), _if_then_else(True, 1, ones_diff_rows)), _if_then_else(le(ones_diff_cols, 0), _if_then_else(False, 0, 4), _if_then_else(False, max_col_clue, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, 3))), _if_then_else(and_(and_(True, False), le(_if_then_else(le(_if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 1, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, max_col_clue, compare_blocks_cols), _if_then_else(True, compare_blocks_cols, max_row_clue)), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(True, max_row_clue, 2))), ones_diff_cols)), _if_then_else(and_(True, True), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 4)), _if_then_else(and_(True, False), _if_then_else(True, compare_blocks_rows, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, 3)))), ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, compare_blocks_cols, _if_then_else(or_(or_(False, False), and_(False, True)), _if_then_else(le(1, 0), _if_then_else(False, max_col_clue, 0), _if_then_else(False, ones_diff_rows, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, 2, zeros_diff_cols), _if_then_else(False, 4, zeros_diff_rows)))), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(mul(zeros_diff_rows, compare_blocks_rows), zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(compare_blocks_cols, add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(ones_diff_rows, add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, mul(compare_blocks_rows, zeros_diff_cols)))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(False, max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(or_(or_(False, or_(ge(_if_then_else(False, max_col_clue, 3), _if_then_else(True, ones_diff_rows, 1)), and_(ge(compare_blocks_rows, 4), and_(True, False)))), and_(or_(or_(or_(True, False), le(compare_blocks_rows, zeros_diff_cols)), le(_if_then_else(True, 1, 4), _if_then_else(True, compare_blocks_cols, 2))), and_(or_(ge(compare_blocks_cols, zeros_diff_rows), or_(True, False)), or_(le(max_col_clue, ones_diff_cols), and_(True, False))))), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), 1), and_(or_(or_(True, and_(or_(and_(True, or_(ge(zeros_diff_rows, compare_blocks_cols), ge(max_col_clue, 4))), or_(True, True)), le(_if_then_else(False, max_row_clue, 3), _if_then_else(False, 4, 4)))), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, _if_then_else(or_(ge(_if_then_else(False, compare_blocks_cols, 0), _if_then_else(False, 1, max_row_clue)), True), _if_then_else(or_(ge(max_row_clue, zeros_diff_cols), ge(3, ones_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(True, max_col_clue, compare_blocks_cols)), _if_then_else(ge(3, 3), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, ones_diff_rows, 2))), _if_then_else(and_(le(1, 1), or_(True, False)), _if_then_else(le(4, compare_blocks_rows), _if_then_else(True, 4, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 4, ones_diff_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_cols)))), ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, mul(compare_blocks_rows, zeros_diff_cols)))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(ones_diff_cols, ones_diff_rows)), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, add(ones_diff_cols, ones_diff_rows)))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, mul(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), 1), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), 3, _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(add(mul(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols))), add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(add(mul(mul(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, ones_diff_cols)), add(mul(ones_diff_cols, zeros_diff_rows), add(zeros_diff_rows, compare_blocks_rows))), add(add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), mul(zeros_diff_rows, compare_blocks_rows)))), ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(or_(or_(ge(_if_then_else(or_(True, False), _if_then_else(False, ones_diff_cols, 3), _if_then_else(True, 2, 4)), _if_then_else(or_(False, True), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, 2, 4))), or_(ge(_if_then_else(False, max_col_clue, 3), _if_then_else(True, ones_diff_rows, 1)), and_(ge(compare_blocks_rows, 4), and_(True, False)))), and_(or_(or_(or_(True, False), le(compare_blocks_rows, zeros_diff_cols)), le(_if_then_else(True, 1, 4), _if_then_else(True, compare_blocks_cols, 2))), and_(or_(ge(compare_blocks_cols, zeros_diff_rows), or_(True, False)), or_(le(max_col_clue, ones_diff_cols), and_(True, False))))), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, _if_then_else(False, _if_then_else(True, 2, ones_diff_cols), 1), zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, and_(or_(and_(True, or_(ge(zeros_diff_rows, compare_blocks_cols), ge(max_col_clue, 4))), or_(True, True)), le(_if_then_else(False, max_row_clue, 3), _if_then_else(False, 4, 4)))), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, _if_then_else(or_(ge(_if_then_else(False, compare_blocks_cols, 0), _if_then_else(True, 1, max_row_clue)), ge(_if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, 3, ones_diff_rows))), _if_then_else(or_(ge(max_row_clue, zeros_diff_cols), ge(3, ones_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(True, max_col_clue, compare_blocks_cols)), _if_then_else(ge(3, 3), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, ones_diff_rows, 2))), _if_then_else(and_(le(1, 1), or_(True, False)), _if_then_else(le(4, compare_blocks_rows), _if_then_else(True, 4, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 4, ones_diff_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_cols)))), ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, mul(compare_blocks_rows, zeros_diff_cols)))))))))
COND TREES:
or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, max_row_clue, ones_diff_rows)), True)
and_(or_(and_(True, True), or_(False, False)), le(_if_then_else(True, 3, zeros_diff_cols), _if_then_else(True, ones_diff_rows, 4)))
le(_if_then_else(or_(False, False), _if_then_else(True, max_row_clue, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(le(2, zeros_diff_rows), _if_then_else(le(compare_blocks_cols, ones_diff_rows), _if_then_else(True, compare_blocks_cols, 4), _if_then_else(False, max_row_clue, max_row_clue)), _if_then_else(False, max_row_clue, compare_blocks_rows)))
and_(or_(or_(ge(1, zeros_diff_cols), and_(False, True)), and_(or_(True, False), ge(max_col_clue, 1))), le(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, ones_diff_cols), _if_then_else(True, 4, compare_blocks_rows)), _if_then_else(or_(False, True), _if_then_else(True, max_row_clue, zeros_diff_rows), _if_then_else(True, max_col_clue, zeros_diff_rows))))
ge(compare_blocks_cols, _if_then_else(le(max_col_clue, 2), _if_then_else(False, compare_blocks_rows, 1), _if_then_else(True, 2, max_col_clue)))
VAL TREES:
add(add(zeros_diff_cols, ones_diff_cols), add(mul(mul(ones_diff_rows, zeros_diff_cols), ones_diff_rows), mul(ones_diff_cols, ones_diff_cols)))
mul(add(add(zeros_diff_rows, zeros_diff_cols), zeros_diff_rows), mul(mul(ones_diff_cols, ones_diff_cols), add(zeros_diff_rows, mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, compare_blocks_rows)), add(ones_diff_rows, add(zeros_diff_cols, ones_diff_cols))), add(ones_diff_rows, add(zeros_diff_cols, ones_diff_cols))))))
mul(mul(add(mul(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, compare_blocks_rows)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(mul(compare_blocks_cols, compare_blocks_cols), zeros_diff_rows))), mul(mul(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), compare_blocks_rows)))
mul(mul(mul(compare_blocks_rows, mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows))), mul(mul(compare_blocks_cols, zeros_diff_rows), zeros_diff_rows)), add(zeros_diff_rows, mul(add(compare_blocks_rows, ones_diff_cols), zeros_diff_cols)))
mul(add(mul(mul(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), ones_diff_rows), add(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_cols, add(compare_blocks_cols, zeros_diff_rows)), add(zeros_diff_cols, mul(add(zeros_diff_cols, ones_diff_cols), ones_diff_cols))))
add(mul(add(zeros_diff_rows, ones_diff_cols), add(mul(mul(zeros_diff_rows, compare_blocks_cols), mul(mul(ones_diff_cols, zeros_diff_rows), zeros_diff_cols)), add(ones_diff_rows, zeros_diff_rows))), mul(mul(compare_blocks_rows, mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), add(zeros_diff_rows, zeros_diff_rows))), mul(mul(ones_diff_cols, zeros_diff_rows), zeros_diff_cols)))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, _if_then_else(True, 2, ones_diff_cols), 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), 3, _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(compare_blocks_rows, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(zeros_diff_rows, add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, add(ones_diff_cols, zeros_diff_cols)), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(compare_blocks_rows, add(compare_blocks_rows, ones_diff_rows))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, max_row_clue, ones_diff_rows)), ge(_if_then_else(False, 3, zeros_diff_cols), _if_then_else(True, 3, 1)))
and_(or_(and_(True, True), or_(False, False)), le(_if_then_else(True, 3, zeros_diff_cols), _if_then_else(True, ones_diff_rows, zeros_diff_rows)))
le(_if_then_else(or_(False, False), _if_then_else(True, max_row_clue, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(le(2, zeros_diff_rows), _if_then_else(False, 1, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_rows)))
and_(or_(or_(ge(1, zeros_diff_cols), and_(False, True)), and_(or_(True, False), ge(max_col_clue, 1))), le(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, ones_diff_cols), _if_then_else(or_(le(max_row_clue, zeros_diff_rows), or_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(False, 3, compare_blocks_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)))), _if_then_else(or_(False, True), _if_then_else(True, max_row_clue, zeros_diff_rows), _if_then_else(True, max_col_clue, zeros_diff_rows))))
ge(_if_then_else(and_(False, False), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(and_(and_(ge(_if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(False, max_col_clue, 1)), and_(or_(True, False), and_(False, True))), le(_if_then_else(and_(False, False), _if_then_else(False, ones_diff_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, ones_diff_cols)))), _if_then_else(False, compare_blocks_rows, 1), _if_then_else(True, 2, max_col_clue)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(ones_diff_rows, add(compare_blocks_rows, compare_blocks_rows))), add(ones_diff_rows, mul(zeros_diff_cols, ones_diff_cols)))
mul(add(zeros_diff_rows, mul(zeros_diff_rows, zeros_diff_rows)), mul(mul(ones_diff_cols, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols)))
mul(mul(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), mul(mul(mul(ones_diff_cols, add(mul(add(ones_diff_cols, compare_blocks_cols), mul(mul(mul(ones_diff_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_rows)), mul(ones_diff_cols, add(compare_blocks_cols, zeros_diff_rows)))), mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_cols)))), add(ones_diff_cols, ones_diff_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols))))
mul(mul(mul(compare_blocks_rows, zeros_diff_rows), mul(add(mul(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_cols)), mul(add(mul(add(ones_diff_rows, ones_diff_cols), ones_diff_rows), compare_blocks_cols), add(ones_diff_rows, compare_blocks_cols)))), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_cols)))
mul(add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(mul(mul(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, compare_blocks_rows)), mul(mul(compare_blocks_cols, compare_blocks_cols), add(mul(compare_blocks_cols, compare_blocks_cols), ones_diff_cols))), mul(mul(add(ones_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols))))))
add(add(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_rows, compare_blocks_cols), mul(mul(ones_diff_cols, zeros_diff_rows), zeros_diff_cols)))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, _if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, 3, 2), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(True, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, _if_then_else(False, 3, max_row_clue))), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(mul(add(add(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows))), zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(compare_blocks_rows, ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, add(zeros_diff_cols, ones_diff_cols))), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, mul(ones_diff_rows, compare_blocks_rows)), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, mul(add(add(add(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_cols))), add(add(mul(zeros_diff_rows, ones_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)), mul(add(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, compare_blocks_rows)))))), add(add(compare_blocks_cols, ones_diff_rows), ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(mul(compare_blocks_rows, ones_diff_cols), compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(mul(mul(add(add(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_cols)), add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_rows, zeros_diff_cols))), add(mul(mul(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_cols, compare_blocks_cols)))), add(mul(mul(add(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, ones_diff_rows))), mul(mul(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)), mul(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_rows))))), ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, _if_then_else(True, 2, ones_diff_cols), 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), 3, _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), ones_diff_cols), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), zeros_diff_rows))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, zeros_diff_cols), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), ones_diff_cols)), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), compare_blocks_rows))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(True, max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), compare_blocks_rows), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, _if_then_else(True, 0, 3)))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(ones_diff_cols, _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(le(compare_blocks_cols, max_col_clue), ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, _if_then_else(False, ones_diff_cols, ones_diff_cols), 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, _if_then_else(True, 2, ones_diff_cols), 1)), le(zeros_diff_cols, _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, _if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue))), 3, _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), max_col_clue, 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(or_(or_(ge(_if_then_else(or_(True, False), _if_then_else(False, ones_diff_cols, 3), _if_then_else(True, 2, 4)), _if_then_else(or_(False, True), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, 2, 4))), or_(ge(_if_then_else(False, max_col_clue, 3), _if_then_else(True, ones_diff_rows, 1)), and_(ge(compare_blocks_rows, 4), and_(True, False)))), and_(or_(or_(or_(True, False), le(compare_blocks_rows, zeros_diff_cols)), le(_if_then_else(True, 1, 4), _if_then_else(True, compare_blocks_cols, 2))), and_(or_(ge(compare_blocks_cols, zeros_diff_rows), or_(True, False)), or_(le(max_col_clue, ones_diff_cols), and_(True, False))))), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, and_(or_(and_(True, or_(ge(zeros_diff_rows, compare_blocks_cols), ge(max_col_clue, 4))), or_(True, True)), le(_if_then_else(False, max_row_clue, 3), _if_then_else(False, 4, 4)))), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, _if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2))), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols))), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, _if_then_else(or_(ge(_if_then_else(False, compare_blocks_cols, 0), _if_then_else(False, 1, max_row_clue)), ge(_if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, 3, ones_diff_rows))), max_row_clue, _if_then_else(and_(le(1, 1), or_(True, False)), _if_then_else(le(4, compare_blocks_rows), _if_then_else(True, 4, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 4, ones_diff_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_cols)))), ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, mul(compare_blocks_rows, zeros_diff_cols)))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, _if_then_else(True, zeros_diff_cols, compare_blocks_cols)), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(3, _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, _if_then_else(True, 2, ones_diff_cols), 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(max_col_clue, _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, _if_then_else(or_(ge(max_row_clue, zeros_diff_cols), ge(3, ones_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(True, max_col_clue, compare_blocks_cols)), _if_then_else(ge(3, 3), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, ones_diff_rows, 2))))), _if_then_else(ge(max_row_clue, ones_diff_cols), 3, _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
and_(ge(_if_then_else(True, max_col_clue, _if_then_else(True, 3, 1)), _if_then_else(le(2, ones_diff_rows), _if_then_else(and_(ge(_if_then_else(True, 2, 4), _if_then_else(True, max_col_clue, ones_diff_rows)), or_(or_(True, True), or_(False, False))), _if_then_else(or_(le(zeros_diff_rows, compare_blocks_cols), le(compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_cols, 3), _if_then_else(True, max_col_clue, max_col_clue)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(False, max_col_clue, compare_blocks_cols))), _if_then_else(and_(and_(False, False), le(max_col_clue, zeros_diff_rows)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, compare_blocks_cols)), _if_then_else(and_(False, False), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(True, ones_diff_rows, max_col_clue)))), zeros_diff_cols)), and_(True, False))
le(_if_then_else(le(max_col_clue, 1), zeros_diff_cols, _if_then_else(False, ones_diff_rows, 4)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(or_(ge(3, 1), ge(max_row_clue, zeros_diff_cols)), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(False, 3, 0), _if_then_else(False, 4, 2)), _if_then_else(and_(False, False), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, compare_blocks_cols, max_row_clue)))))
or_(le(_if_then_else(and_(le(zeros_diff_rows, zeros_diff_cols), or_(True, False)), _if_then_else(ge(3, 0), _if_then_else(False, zeros_diff_cols, 2), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(1, 1), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(and_(False, True), 0, zeros_diff_rows))), _if_then_else(and_(and_(False, True), and_(False, True)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(True, compare_blocks_rows, max_col_clue)), _if_then_else(le(max_col_clue, 0), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(True, max_row_clue, compare_blocks_cols)))), ge(_if_then_else(le(_if_then_else(False, 1, zeros_diff_cols), _if_then_else(False, _if_then_else(ge(_if_then_else(False, ones_diff_rows, 0), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(True, 1, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, zeros_diff_rows)), _if_then_else(ge(3, max_row_clue), _if_then_else(False, 4, ones_diff_rows), _if_then_else(False, 4, 1))), zeros_diff_rows)), _if_then_else(le(compare_blocks_cols, ones_diff_rows), _if_then_else(True, compare_blocks_cols, 4), _if_then_else(False, max_row_clue, max_row_clue)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(True, ones_diff_rows, max_row_clue))), _if_then_else(and_(and_(False, False), or_(True, True)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, ones_diff_rows, max_row_clue)))))
and_(or_(ge(compare_blocks_rows, 0), and_(True, False)), le(_if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(True, 3, 4)))
le(_if_then_else(or_(ge(_if_then_else(True, max_col_clue, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), and_(and_(True, False), le(ones_diff_cols, ones_diff_rows))), _if_then_else(and_(or_(True, True), ge(ones_diff_rows, ones_diff_rows)), _if_then_else(le(max_row_clue, 3), _if_then_else(False, 1, 3), _if_then_else(True, 2, 1)), _if_then_else(le(4, ones_diff_rows), _if_then_else(False, max_col_clue, 2), _if_then_else(True, ones_diff_cols, 1))), _if_then_else(and_(or_(True, False), le(compare_blocks_cols, 2)), _if_then_else(ge(1, compare_blocks_cols), _if_then_else(True, max_col_clue, ones_diff_cols), _if_then_else(False, ones_diff_rows, 4)), _if_then_else(ge(max_row_clue, max_col_clue), _if_then_else(True, ones_diff_rows, 0), _if_then_else(False, compare_blocks_rows, compare_blocks_rows)))), _if_then_else(ge(_if_then_else(and_(True, False), _if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, ones_diff_rows, ones_diff_cols)), _if_then_else(ge(3, 3), _if_then_else(True, 0, ones_diff_rows), _if_then_else(False, max_col_clue, compare_blocks_cols))), _if_then_else(or_(or_(False, True), or_(True, False)), _if_then_else(ge(zeros_diff_cols, 2), _if_then_else(False, 2, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(and_(True, False), _if_then_else(True, 3, 0), _if_then_else(True, ones_diff_rows, compare_blocks_cols))), _if_then_else(ge(_if_then_else(True, 3, max_row_clue), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(le(compare_blocks_cols, 1), _if_then_else(True, 4, 0), _if_then_else(True, 2, 1)), _if_then_else(ge(zeros_diff_cols, 3), _if_then_else(True, ones_diff_cols, 0), _if_then_else(True, 1, ones_diff_cols)))))
VAL TREES:
mul(add(add(compare_blocks_rows, ones_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), mul(mul(zeros_diff_cols, compare_blocks_rows), mul(add(ones_diff_rows, compare_blocks_rows), ones_diff_cols)))
add(add(add(add(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_cols, compare_blocks_cols)), mul(mul(zeros_diff_cols, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_cols))), add(mul(mul(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(compare_blocks_cols, ones_diff_cols), mul(compare_blocks_rows, zeros_diff_rows)))), add(add(add(mul(zeros_diff_rows, ones_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), add(add(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_cols, ones_diff_rows))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(compare_blocks_rows, ones_diff_cols)), add(add(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_cols)))))
mul(mul(mul(mul(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_rows)), add(add(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_cols)))), mul(add(add(mul(zeros_diff_rows, ones_diff_rows), add(compare_blocks_cols, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), add(zeros_diff_rows, add(compare_blocks_cols, zeros_diff_cols)))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, ones_diff_rows)), mul(add(zeros_diff_rows, ones_diff_rows), mul(ones_diff_rows, ones_diff_rows)))))
mul(add(add(add(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, zeros_diff_rows)), compare_blocks_cols), add(compare_blocks_rows, compare_blocks_rows)), add(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_rows)))
add(mul(add(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_cols, zeros_diff_rows))), mul(add(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), add(add(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, zeros_diff_rows))))
mul(add(add(add(ones_diff_rows, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_rows)), add(mul(ones_diff_cols, ones_diff_rows), add(ones_diff_cols, mul(ones_diff_rows, zeros_diff_cols)))), add(add(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_rows)), add(add(ones_diff_rows, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols))))
COND TREES:
and_(ge(_if_then_else(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(False, ones_diff_cols, 0)), _if_then_else(le(max_row_clue, 1), _if_then_else(True, 1, max_col_clue), _if_then_else(False, ones_diff_rows, 1)), _if_then_else(le(max_row_clue, max_col_clue), _if_then_else(True, 3, 3), _if_then_else(True, zeros_diff_cols, 4))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, 2), _if_then_else(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, max_row_clue, ones_diff_rows)), max_row_clue, ones_diff_rows)), compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, True), _if_then_else(False, 3, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, max_row_clue)), _if_then_else(and_(True, False), _if_then_else(True, 0, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, compare_blocks_rows)))), le(_if_then_else(and_(ge(0, 1), or_(True, False)), _if_then_else(ge(zeros_diff_rows, 2), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, 0)), _if_then_else(and_(False, False), _if_then_else(True, max_col_clue, 2), _if_then_else(ge(_if_then_else(le(2, compare_blocks_rows), _if_then_else(True, 0, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, 1), _if_then_else(True, max_row_clue, 3), _if_then_else(False, max_row_clue, max_row_clue))), zeros_diff_rows, 0))), _if_then_else(ge(_if_then_else(True, 4, ones_diff_rows), _if_then_else(False, compare_blocks_rows, max_row_clue)), _if_then_else(ge(1, ones_diff_cols), _if_then_else(True, 2, max_row_clue), _if_then_else(False, 1, 1)), _if_then_else(le(0, 3), _if_then_else(and_(and_(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(True, 4, zeros_diff_rows)), le(_if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, max_col_clue, 4))), or_(and_(ge(1, 0), ge(2, zeros_diff_rows)), ge(_if_then_else(True, 3, 0), _if_then_else(True, 0, 3)))), _if_then_else(and_(or_(and_(False, False), le(zeros_diff_rows, zeros_diff_rows)), and_(le(ones_diff_rows, 0), le(ones_diff_rows, 3))), _if_then_else(or_(ge(zeros_diff_cols, 2), or_(True, False)), _if_then_else(ge(1, ones_diff_cols), _if_then_else(False, max_col_clue, 1), _if_then_else(False, 2, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(True, 3, compare_blocks_rows), _if_then_else(True, 2, ones_diff_cols))), _if_then_else(or_(and_(False, False), and_(False, False)), _if_then_else(ge(3, compare_blocks_cols), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, 4, 0)), _if_then_else(or_(True, True), _if_then_else(False, compare_blocks_rows, max_col_clue), _if_then_else(False, _if_then_else(and_(ge(max_row_clue, compare_blocks_cols), or_(or_(True, True), ge(2, 1))), _if_then_else(and_(True, True), _if_then_else(True, 0, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, max_col_clue)), _if_then_else(le(compare_blocks_cols, 2), _if_then_else(False, 1, compare_blocks_rows), _if_then_else(True, 3, max_col_clue))), compare_blocks_rows)))), _if_then_else(and_(ge(_if_then_else(True, 3, compare_blocks_cols), _if_then_else(True, 0, max_row_clue)), le(_if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, 1, 4))), _if_then_else(ge(_if_then_else(False, max_row_clue, 2), _if_then_else(True, 0, 4)), _if_then_else(le(3, 2), _if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(False, compare_blocks_cols, 3)), _if_then_else(le(3, zeros_diff_rows), _if_then_else(False, max_col_clue, max_row_clue), _if_then_else(True, compare_blocks_cols, max_row_clue))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, zeros_diff_cols, max_col_clue)), _if_then_else(le(max_col_clue, compare_blocks_rows), _if_then_else(False, 0, max_row_clue), _if_then_else(True, 4, max_row_clue)), _if_then_else(le(max_row_clue, ones_diff_cols), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, 4))))), _if_then_else(False, 4, 1)))))
ge(_if_then_else(or_(ge(ones_diff_cols, 4), or_(True, False)), _if_then_else(ge(4, 4), _if_then_else(False, compare_blocks_rows, 3), ones_diff_cols), _if_then_else(False, _if_then_else(False, ones_diff_cols, max_col_clue), _if_then_else(False, zeros_diff_cols, max_col_clue))), _if_then_else(ge(4, _if_then_else(True, 3, compare_blocks_rows)), _if_then_else(True, ones_diff_cols, _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(True, _if_then_else(True, compare_blocks_cols, _if_then_else(le(_if_then_else(ge(compare_blocks_cols, 2), _if_then_else(True, 4, 2), _if_then_else(True, zeros_diff_rows, 4)), _if_then_else(ge(compare_blocks_rows, ones_diff_rows), _if_then_else(True, max_col_clue, ones_diff_rows), _if_then_else(False, ones_diff_rows, 3))), _if_then_else(or_(ge(ones_diff_cols, ones_diff_rows), le(ones_diff_rows, 3)), _if_then_else(and_(False, False), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 1, 0)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, 3, ones_diff_cols))), _if_then_else(le(_if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(True, 0, zeros_diff_cols)), _if_then_else(ge(ones_diff_rows, 4), _if_then_else(True, ones_diff_rows, 3), _if_then_else(False, 3, 4)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_rows, zeros_diff_rows), _if_then_else(True, ones_diff_cols, compare_blocks_rows))))), ones_diff_rows)))
and_(or_(ge(_if_then_else(True, _if_then_else(False, ones_diff_rows, 1), 2), zeros_diff_rows), or_(False, True)), and_(le(ones_diff_cols, max_row_clue), True))
or_(le(_if_then_else(True, 4, max_col_clue), _if_then_else(le(_if_then_else(le(_if_then_else(and_(True, True), _if_then_else(False, max_col_clue, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, zeros_diff_rows, max_row_clue))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, 4, 0)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 2, zeros_diff_cols)), _if_then_else(le(zeros_diff_cols, 4), _if_then_else(False, compare_blocks_cols, max_col_clue), _if_then_else(False, compare_blocks_cols, 2))), _if_then_else(le(_if_then_else(True, 0, compare_blocks_rows), _if_then_else(False, 1, ones_diff_cols)), _if_then_else(or_(True, False), _if_then_else(True, 2, 0), _if_then_else(False, 3, 2)), _if_then_else(le(0, 0), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, 1)))), _if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(False, compare_blocks_cols, 3), _if_then_else(True, zeros_diff_cols, zeros_diff_cols)), _if_then_else(le(ones_diff_cols, max_col_clue), _if_then_else(True, 0, ones_diff_cols), _if_then_else(False, 0, zeros_diff_rows))), _if_then_else(le(_if_then_else(True, 3, 1), _if_then_else(True, 4, max_col_clue)), _if_then_else(ge(3, 2), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, 4, 0)), _if_then_else(or_(True, True), _if_then_else(True, ones_diff_rows, zeros_diff_rows), _if_then_else(True, 4, 1))), _if_then_else(ge(_if_then_else(False, 4, max_col_clue), _if_then_else(False, 0, zeros_diff_rows)), _if_then_else(le(compare_blocks_cols, 0), _if_then_else(False, 0, ones_diff_rows), _if_then_else(True, 0, 3)), _if_then_else(ge(4, 0), _if_then_else(True, 2, 3), _if_then_else(False, 3, compare_blocks_cols))))), 2, 2)), True)
or_(or_(and_(ge(_if_then_else(ge(_if_then_else(True, 1, 0), _if_then_else(False, max_row_clue, max_col_clue)), _if_then_else(le(zeros_diff_cols, ones_diff_rows), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, 0)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(True, 1, 1))), _if_then_else(or_(and_(False, False), le(compare_blocks_rows, compare_blocks_cols)), _if_then_else(False, _if_then_else(False, zeros_diff_rows, zeros_diff_cols), _if_then_else(False, 3, 1)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(False, max_row_clue, max_col_clue)))), True), ge(_if_then_else(le(max_col_clue, 2), ones_diff_cols, zeros_diff_rows), 0)), le(_if_then_else(True, 4, 0), _if_then_else(False, 0, 1)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_rows)), add(add(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)))
add(mul(mul(compare_blocks_rows, add(zeros_diff_rows, compare_blocks_rows)), add(ones_diff_rows, add(zeros_diff_cols, ones_diff_cols))), mul(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_rows)))
mul(add(mul(add(mul(add(ones_diff_cols, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), mul(mul(ones_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))), compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_cols)), mul(mul(ones_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_cols)))
mul(mul(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_rows)))
add(mul(mul(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_rows)), mul(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)))
add(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)), mul(compare_blocks_rows, add(compare_blocks_rows, ones_diff_rows))), add(zeros_diff_rows, zeros_diff_rows)), mul(add(zeros_diff_rows, compare_blocks_cols), mul(mul(add(zeros_diff_cols, ones_diff_cols), zeros_diff_cols), add(add(zeros_diff_cols, zeros_diff_cols), compare_blocks_cols))))
COND TREES:
or_(ge(compare_blocks_cols, _if_then_else(False, max_row_clue, 1)), ge(_if_then_else(True, 3, zeros_diff_cols), _if_then_else(True, 3, 1)))
and_(or_(and_(True, True), or_(False, False)), le(_if_then_else(True, 3, zeros_diff_cols), _if_then_else(True, max_row_clue, zeros_diff_rows)))
le(_if_then_else(or_(False, False), _if_then_else(True, max_row_clue, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(le(2, zeros_diff_rows), _if_then_else(False, 1, 4), _if_then_else(or_(le(compare_blocks_cols, max_col_clue), or_(ge(zeros_diff_rows, compare_blocks_cols), ge(max_col_clue, 4))), max_row_clue, compare_blocks_rows)))
and_(or_(or_(ge(1, zeros_diff_cols), and_(False, True)), and_(or_(True, False), ge(max_col_clue, 1))), le(_if_then_else(or_(True, True), _if_then_else(True, _if_then_else(False, 3, _if_then_else(False, zeros_diff_rows, _if_then_else(or_(False, False), zeros_diff_rows, compare_blocks_rows))), ones_diff_cols), _if_then_else(True, 4, compare_blocks_rows)), _if_then_else(or_(False, True), _if_then_else(True, max_row_clue, zeros_diff_rows), _if_then_else(True, max_col_clue, zeros_diff_rows))))
ge(_if_then_else(and_(False, False), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(False, _if_then_else(False, compare_blocks_rows, 1), _if_then_else(True, 2, max_col_clue)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(ones_diff_rows, add(compare_blocks_rows, compare_blocks_rows))), add(mul(mul(ones_diff_rows, compare_blocks_rows), ones_diff_rows), mul(ones_diff_cols, ones_diff_cols)))
mul(add(add(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_rows)), mul(add(mul(mul(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols))), add(add(add(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), add(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols))), mul(mul(mul(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_cols, ones_diff_rows), add(zeros_diff_cols, zeros_diff_rows))))))
mul(mul(add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_rows))), mul(mul(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols))))
mul(mul(mul(add(mul(mul(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_cols)))
add(add(add(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols))), add(add(mul(ones_diff_cols, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)), mul(add(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols))))
add(mul(add(zeros_diff_rows, ones_diff_rows), add(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, zeros_diff_rows))), mul(mul(zeros_diff_rows, compare_blocks_cols), mul(mul(ones_diff_cols, zeros_diff_rows), zeros_diff_cols)))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(or_(or_(ge(_if_then_else(or_(True, False), _if_then_else(False, ones_diff_cols, 3), _if_then_else(True, 2, 4)), _if_then_else(or_(False, True), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, 2, 4))), or_(ge(_if_then_else(False, max_col_clue, 3), _if_then_else(True, ones_diff_rows, 1)), and_(ge(compare_blocks_rows, 4), and_(True, False)))), and_(or_(or_(or_(True, False), le(compare_blocks_rows, zeros_diff_cols)), le(_if_then_else(True, 1, 4), _if_then_else(True, compare_blocks_cols, 2))), and_(or_(ge(compare_blocks_cols, zeros_diff_rows), or_(True, False)), or_(le(max_col_clue, ones_diff_cols), and_(True, False))))), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, and_(or_(and_(True, le(compare_blocks_cols, 3)), or_(True, True)), le(_if_then_else(False, max_row_clue, 3), _if_then_else(False, 4, 4)))), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(le(max_col_clue, 2), 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, _if_then_else(or_(ge(_if_then_else(False, compare_blocks_cols, 0), _if_then_else(False, 1, max_row_clue)), ge(_if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, 3, ones_diff_rows))), _if_then_else(or_(ge(max_row_clue, zeros_diff_cols), ge(3, ones_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(True, max_col_clue, compare_blocks_cols)), _if_then_else(ge(3, 3), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, ones_diff_rows, 2))), _if_then_else(and_(le(1, 1), or_(True, False)), _if_then_else(le(4, compare_blocks_rows), _if_then_else(True, 4, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 4, ones_diff_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_cols)))), ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, mul(compare_blocks_rows, zeros_diff_cols)))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, _if_then_else(True, 2, ones_diff_cols), 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), 3, _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, _if_then_else(and_(le(ones_diff_cols, 3), or_(True, False)), _if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, 3, compare_blocks_cols), _if_then_else(False, max_col_clue, zeros_diff_rows)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_rows, 4), _if_then_else(False, max_row_clue, max_col_clue)))), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(ge(_if_then_else(True, max_col_clue, max_row_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(and_(or_(or_(le(ones_diff_rows, max_col_clue), or_(False, True)), and_(le(ones_diff_cols, max_row_clue), or_(False, False))), le(_if_then_else(le(4, max_row_clue), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, 2, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_cols)))), _if_then_else(or_(and_(or_(True, True), or_(False, False)), and_(and_(False, True), and_(True, False))), _if_then_else(and_(le(4, 0), ge(4, 4)), _if_then_else(and_(True, False), _if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(False, 2, 0)), _if_then_else(and_(True, False), _if_then_else(True, 3, ones_diff_rows), _if_then_else(True, 4, 4))), _if_then_else(and_(le(zeros_diff_cols, 1), ge(zeros_diff_cols, max_row_clue)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_cols, ones_diff_rows), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(le(zeros_diff_cols, ones_diff_rows), _if_then_else(True, 2, max_row_clue), _if_then_else(True, compare_blocks_rows, 0)))), _if_then_else(and_(ge(_if_then_else(False, compare_blocks_rows, 3), _if_then_else(False, 4, 4)), and_(ge(zeros_diff_cols, compare_blocks_rows), or_(True, False))), _if_then_else(and_(le(compare_blocks_cols, zeros_diff_rows), le(1, 2)), _if_then_else(or_(True, True), _if_then_else(False, max_row_clue, compare_blocks_cols), _if_then_else(False, 0, 4)), _if_then_else(and_(True, True), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, 4, max_col_clue))), _if_then_else(or_(le(max_row_clue, max_row_clue), and_(True, False)), _if_then_else(le(2, ones_diff_cols), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(False, 0, ones_diff_rows)), _if_then_else(or_(False, True), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 3, max_col_clue))))), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(False, True))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(True, _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(ge(ones_diff_rows, ones_diff_rows), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(ones_diff_cols, ones_diff_rows)), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, add(ones_diff_cols, ones_diff_rows)))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, mul(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(compare_blocks_rows, ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))
COND TREES:
le(_if_then_else(le(0, ones_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(le(compare_blocks_cols, max_col_clue), max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(and_(le(_if_then_else(False, 3, max_col_clue), _if_then_else(False, 1, 1)), le(_if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 4)), ones_diff_rows)))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 3, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), ones_diff_rows), mul(mul(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(add(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows))))), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(mul(mul(ones_diff_rows, ones_diff_cols), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)))), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(mul(compare_blocks_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), add(compare_blocks_rows, mul(mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))), mul(mul(add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols))))))))


INFO:root:hof: COND TREES:
le(_if_then_else(True, _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(ge(zeros_diff_rows, 2), ones_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), 1))), _if_then_else(le(2, ones_diff_rows), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), _if_then_else(True, max_col_clue, ones_diff_cols)), 0), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_cols), ones_diff_rows), ones_diff_cols)))
ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 4), 1), _if_then_else(False, max_row_clue, 1)), _if_then_else(le(_if_then_else(True, 3, ones_diff_cols), compare_blocks_rows), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(or_(False, False), 0, max_col_clue)))
or_(and_(le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 3, 2)), _if_then_else(le(4, max_col_clue), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), and_(or_(or_(True, False), le(max_row_clue, zeros_diff_cols)), and_(or_(False, True), or_(True, True)))), and_(le(compare_blocks_rows, _if_then_else(False, zeros_diff_cols, 2)), le(_if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, _if_then_else(True, _if_then_else(False, ones_diff_rows, 1), 2), 4)), _if_then_else(le(ones_diff_cols, 3), _if_then_else(False, 4, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 0)))))
ge(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, compare_blocks_cols, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols)))
VAL TREES:
add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows), add(zeros_diff_cols, mul(mul(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))), mul(mul(zeros_diff_rows, add(ones_diff_cols, compare_blocks_cols)), mul(zeros_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_rows)), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))))
add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
mul(add(mul(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), mul(mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows)), add(zeros_diff_cols, ones_diff_rows)))
add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(ones_diff_cols, ones_diff_cols), add(compare_blocks_rows, compare_blocks_rows)))


INFO:root:stats: {'fitness': <deap.tools.support.Statistics object at 0x000002C2DF0B1CF8>, 'size': <deap.tools.support.Statistics object at 0x000002C2DF0B1D30>}

