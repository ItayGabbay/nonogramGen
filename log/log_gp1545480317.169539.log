INFO:root:

*******STARTING!!!******


INFO:root:

*******Configuration******


INFO:root:# NUM_ROWS = 20


INFO:root:NUM_ROWS = 5


INFO:root:# NUM_COLS = 20


INFO:root:NUM_COLS = 5


INFO:root:empty_in_split = '\xa0'


INFO:root:convert_to_sat = True


INFO:root:pickle_unsolved_file_path = 'data/%dx%d_nonograms.pkl' % (NUM_ROWS, NUM_COLS)


INFO:root:pickle_solved_file_path = 'data/%dx%d_nonograms_solved.pkl' % (NUM_ROWS, NUM_COLS)


INFO:root:pickle_row_options_path = 'data/%dx%d_row_options.pkl' % (NUM_ROWS, NUM_ROWS)


INFO:root:should_run_in_parallel = True


INFO:root:print_individual_fitness = False


INFO:root:


INFO:root:NUM_COND_TREES = 5


INFO:root:NUM_VAL_TREES = NUM_COND_TREES + 1


INFO:root:prob_crossover_global = 0.7  # global probability for cx


INFO:root:prob_crossover_individual_cond = 0.8  # probability to cx a specific cond tree in an individual


INFO:root:prob_crossover_individual_val = 0.8  # probability to cx a specific cond tree in an individual


INFO:root:prob_mutate_global = 0.3


INFO:root:prob_mutate_individual_cond = 0.7


INFO:root:prob_mutate_individual_val = 0.7


INFO:root:


INFO:root:points_correct_box = 5


INFO:root:points_incorrect_box = 1


INFO:root:# points_incorrect_box = -2


INFO:root:pop_size = 300


INFO:root:hof_size = 1


INFO:root:# num_gen = 40


INFO:root:num_gen = 10


INFO:root:train_size = 3


INFO:root:

*******DONE!!!******


INFO:root:run time: 411 sec

INFO:root:max possible fitness for the nonograms ran: %d

INFO:root:log:    	      	                      fitness                      	                  size                  
   	      	---------------------------------------------------	----------------------------------------
gen	nevals	avg    	max    	min     	size	std        	avg    	max	min	size	std     
0  	300   	1.07017	1.07017	1.07017 	300 	2.22045e-16	5.76   	8  	4  	300 	0.704083
1  	241   	2.49884	33.3333	0       	300 	5.24696    	6.12   	9  	4  	300 	1.04192 
2  	250   	5.3801 	33.3333	0       	300 	8.74484    	6.50333	10 	4  	300 	1.22882 
3  	224   	8.45873	33.3333	0       	300 	10.2638    	6.64   	11 	4  	300 	1.18479 
4  	257   	12.5866	33.3333	0.358967	300 	11.5778    	6.70667	11 	4  	300 	1.3319  
5  	248   	12.7092	33.3333	0       	300 	12.0079    	6.68   	10 	4  	300 	1.33327 
6  	243   	15.6372	33.3333	0       	300 	12.1388    	6.76667	11 	4  	300 	1.27497 
7  	246   	15.0594	33.3333	0       	300 	12.5822    	6.68333	11 	4  	300 	1.29475 
8  	241   	16.1486	33.3333	0       	300 	12.6073    	6.73   	11 	4  	300 	1.31038 
9  	241   	16.6347	33.3333	0       	300 	12.8377    	6.66   	11 	4  	300 	1.35563 
10 	243   	16.7477	33.3333	0       	300 	12.8387    	6.58667	11 	4  	300 	1.34752 

INFO:root:pop: COND TREES:
ge(zeros_diff_rows, _if_then_else(or_(ge(max_row_clue, compare_blocks_rows), or_(True, False)), _if_then_else(or_(True, True), _if_then_else(True, 0, 0), _if_then_else(True, ones_diff_rows, zeros_diff_rows)), _if_then_else(or_(True, False), _if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, -42, 4))))
and_(ge(_if_then_else(and_(ge(compare_blocks_cols, compare_blocks_rows), True), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(and_(False, True), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, compare_blocks_cols, 1))), _if_then_else(and_(False, or_(False, False)), ones_diff_rows, _if_then_else(and_(True, False), 4, _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(zeros_diff_rows, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(True, max_col_clue, max_col_clue)), or_(or_(False, True), and_(False, and_(False, True))))))
and_(ge(3, _if_then_else(True, 4, compare_blocks_cols)), True)
or_(or_(True, ge(ones_diff_cols, 0)), or_(True, False))
and_(or_(le(_if_then_else(False, compare_blocks_cols, 4), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), or_(True, True)), True)
VAL TREES:
mul(mul(add(add(mul(ones_diff_rows, zeros_diff_cols), mul(-5, ones_diff_cols)), zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(add(mul(zeros_diff_cols, add(compare_blocks_rows, ones_diff_rows)), mul(ones_diff_rows, compare_blocks_rows)), mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, add(add(add(zeros_diff_cols, zeros_diff_cols), compare_blocks_rows), mul(mul(zeros_diff_rows, 39), ones_diff_cols)))))))
mul(mul(compare_blocks_cols, 64), add(mul(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_cols, mul(ones_diff_rows, -68))), mul(ones_diff_rows, zeros_diff_rows)))
COND TREES:
ge(2, _if_then_else(False, 1, _if_then_else(True, 4, zeros_diff_rows)))
or_(ge(_if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(True, 1, 2)), compare_blocks_cols), True)
le(_if_then_else(or_(ge(_if_then_else(True, compare_blocks_rows, zeros_diff_rows), -14), True), -82, ones_diff_rows), _if_then_else(True, -69, compare_blocks_cols))
ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, _if_then_else(True, 0, max_row_clue), zeros_diff_rows))
le(1, _if_then_else(ge(_if_then_else(True, 1, 4), _if_then_else(False, 2, 1)), 2, 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(2, _if_then_else(True, _if_then_else(le(_if_then_else(le(0, zeros_diff_cols), _if_then_else(False, 4, 2), _if_then_else(False, compare_blocks_rows, 2)), _if_then_else(ge(3, max_row_clue), _if_then_else(False, 2, -29), _if_then_else(True, compare_blocks_cols, compare_blocks_cols))), _if_then_else(or_(or_(True, False), or_(False, False)), _if_then_else(ge(compare_blocks_cols, max_row_clue), _if_then_else(True, 1, compare_blocks_rows), _if_then_else(True, max_col_clue, 0)), _if_then_else(le(2, zeros_diff_cols), _if_then_else(False, 3, max_row_clue), _if_then_else(False, 41, 2))), _if_then_else(and_(ge(ones_diff_rows, ones_diff_rows), ge(ones_diff_cols, compare_blocks_cols)), _if_then_else(and_(False, True), _if_then_else(False, 4, 4), _if_then_else(False, compare_blocks_rows, 4)), _if_then_else(and_(False, False), _if_then_else(False, 3, ones_diff_cols), _if_then_else(False, 0, compare_blocks_rows)))), _if_then_else(False, 4, zeros_diff_rows)))
or_(True, and_(ge(_if_then_else(or_(True, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, 4, 4)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, compare_blocks_cols, compare_blocks_cols))), le(_if_then_else(and_(False, True), _if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, -43, zeros_diff_rows)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, 0, 0)))))
le(_if_then_else(le(_if_then_else(or_(True, True), _if_then_else(True, 4, ones_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, ones_diff_cols, 1))), _if_then_else(and_(and_(False, True), ge(max_col_clue, compare_blocks_cols)), _if_then_else(le(4, ones_diff_rows), _if_then_else(True, 2, max_col_clue), _if_then_else(False, ones_diff_rows, zeros_diff_cols)), _if_then_else(ge(ones_diff_cols, 3), _if_then_else(True, ones_diff_cols, 3), _if_then_else(False, zeros_diff_rows, ones_diff_cols))), _if_then_else(or_(or_(False, True), or_(False, True)), _if_then_else(and_(True, False), _if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, 2, max_col_clue)), _if_then_else(ge(zeros_diff_rows, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, zeros_diff_cols), _if_then_else(True, compare_blocks_cols, max_row_clue)))), _if_then_else(True, _if_then_else(True, 1, 0), compare_blocks_cols))
ge(_if_then_else(True, zeros_diff_rows, _if_then_else(and_(and_(ge(max_col_clue, 1), and_(False, True)), or_(ge(max_row_clue, compare_blocks_rows), and_(False, True))), _if_then_else(and_(ge(zeros_diff_rows, max_col_clue), le(ones_diff_cols, compare_blocks_cols)), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(False, max_row_clue, -11), _if_then_else(False, max_col_clue, 4)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(True, compare_blocks_rows, 1))), _if_then_else(or_(ge(compare_blocks_cols, ones_diff_rows), ge(4, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, 0), _if_then_else(True, 1, -70)), _if_then_else(and_(True, True), _if_then_else(False, -97, ones_diff_rows), _if_then_else(True, max_col_clue, 1))))), compare_blocks_cols)
le(_if_then_else(ge(_if_then_else(le(1, 3), _if_then_else(False, max_col_clue, max_row_clue), _if_then_else(False, 1, zeros_diff_rows)), _if_then_else(le(0, 4), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 0))), _if_then_else(and_(ge(0, 4), ge(2, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, 3, 2)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_rows, max_col_clue), _if_then_else(True, 80, zeros_diff_cols))), _if_then_else(or_(ge(4, 4), le(max_row_clue, 1)), _if_then_else(and_(True, True), _if_then_else(True, 0, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, 38)), _if_then_else(ge(0, ones_diff_cols), _if_then_else(True, 4, ones_diff_cols), _if_then_else(True, 4, compare_blocks_rows)))), _if_then_else(or_(False, True), _if_then_else(False, 2, 2), 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(2, _if_then_else(ge(zeros_diff_cols, compare_blocks_cols), _if_then_else(True, ones_diff_cols, ones_diff_rows), _if_then_else(False, 1, 2)))
and_(le(zeros_diff_cols, ones_diff_cols), le(compare_blocks_cols, ones_diff_cols))
le(_if_then_else(and_(or_(False, True), or_(False, True)), _if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, 1, 1), _if_then_else(True, 0, max_row_clue)), _if_then_else(or_(False, True), _if_then_else(True, max_col_clue, 0), _if_then_else(True, 2, compare_blocks_rows))), ones_diff_cols)
ge(_if_then_else(True, zeros_diff_rows, 0), _if_then_else(ge(_if_then_else(or_(or_(or_(True, False), or_(True, True)), ge(_if_then_else(True, 2, 19), _if_then_else(False, ones_diff_cols, compare_blocks_cols))), _if_then_else(le(_if_then_else(True, max_col_clue, ones_diff_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_rows)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, ones_diff_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_rows, 0), _if_then_else(False, ones_diff_rows, max_row_clue))), _if_then_else(ge(_if_then_else(True, zeros_diff_cols, 4), _if_then_else(False, zeros_diff_rows, ones_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(True, max_row_clue, 4)), _if_then_else(le(ones_diff_rows, zeros_diff_cols), _if_then_else(False, ones_diff_rows, 1), _if_then_else(False, compare_blocks_cols, compare_blocks_cols)))), _if_then_else(ge(_if_then_else(ge(zeros_diff_cols, max_col_clue), _if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, 3, ones_diff_rows)), _if_then_else(or_(False, True), _if_then_else(True, 2, 0), _if_then_else(False, compare_blocks_rows, max_row_clue))), _if_then_else(or_(le(zeros_diff_cols, compare_blocks_cols), or_(False, True)), _if_then_else(and_(False, False), _if_then_else(False, 1, 4), _if_then_else(False, ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(True, zeros_diff_rows, 3))), _if_then_else(ge(_if_then_else(False, 3, ones_diff_rows), _if_then_else(False, zeros_diff_rows, ones_diff_rows)), _if_then_else(or_(False, True), _if_then_else(True, zeros_diff_rows, zeros_diff_cols), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(4, 1), _if_then_else(False, 72, ones_diff_rows), _if_then_else(True, ones_diff_rows, ones_diff_cols))))), _if_then_else(ge(4, 62), compare_blocks_rows, max_row_clue), zeros_diff_rows))
le(1, _if_then_else(ge(_if_then_else(and_(ge(zeros_diff_cols, 0), le(3, 0)), _if_then_else(le(36, 1), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(False, 4, 65)), _if_then_else(and_(True, False), _if_then_else(False, 2, zeros_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows))), _if_then_else(ge(_if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, zeros_diff_rows, 4)), _if_then_else(ge(71, 4), _if_then_else(True, max_row_clue, 4), _if_then_else(True, 0, ones_diff_cols)), _if_then_else(le(zeros_diff_cols, zeros_diff_cols), _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(True, 0, compare_blocks_cols)))), 2, 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(_if_then_else(or_(or_(and_(False, True), and_(False, True)), le(_if_then_else(False, max_col_clue, 1), _if_then_else(False, 0, max_col_clue))), _if_then_else(or_(le(0, compare_blocks_rows), or_(False, True)), _if_then_else(ge(ones_diff_rows, max_col_clue), _if_then_else(False, 95, compare_blocks_cols), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, 0, zeros_diff_cols))), _if_then_else(or_(or_(True, False), ge(zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(True, 1, 2), _if_then_else(True, zeros_diff_rows, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 0), _if_then_else(True, 1, 2)), le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, 2, 19))), 2, _if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(True, _if_then_else(False, 3, 3), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(ge(zeros_diff_cols, 2), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(True, 1, compare_blocks_rows)))))
le(_if_then_else(False, zeros_diff_cols, 4), _if_then_else(False, ones_diff_rows, zeros_diff_cols))
or_(and_(or_(False, True), False), ge(compare_blocks_rows, _if_then_else(le(3, compare_blocks_cols), compare_blocks_rows, ones_diff_rows)))
and_(ge(_if_then_else(or_(and_(True, False), ge(compare_blocks_cols, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols)), _if_then_else(True, _if_then_else(True, 2, 2), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), _if_then_else(or_(or_(True, False), and_(True, True)), _if_then_else(and_(le(0, 4), True), _if_then_else(True, max_row_clue, 1), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(max_col_clue, 4), _if_then_else(True, ones_diff_cols, 0), _if_then_else(False, 95, ones_diff_rows)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, -99, 3)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(-96, 3), _if_then_else(True, 2, ones_diff_cols), _if_then_else(False, 0, -87))), _if_then_else(ge(_if_then_else(False, -1, 3), max_row_clue), _if_then_else(ge(compare_blocks_rows, max_row_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, max_col_clue, 99)))))
or_(True, True)
VAL TREES:
add(mul(ones_diff_rows, ones_diff_cols), mul(mul(mul(add(mul(ones_diff_cols, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_rows, zeros_diff_cols))), add(mul(mul(compare_blocks_cols, ones_diff_rows), mul(12, compare_blocks_cols)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)))), add(add(add(add(zeros_diff_rows, ones_diff_cols), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(zeros_diff_cols, 68), mul(compare_blocks_cols, compare_blocks_rows))), mul(mul(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)), add(add(19, compare_blocks_cols), add(ones_diff_cols, compare_blocks_cols))))))
add(add(mul(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)), add(add(zeros_diff_rows, 37), mul(ones_diff_rows, ones_diff_cols))), add(add(mul(ones_diff_rows, -92), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_cols))))
add(add(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows))
mul(mul(ones_diff_cols, add(add(add(ones_diff_rows, ones_diff_rows), compare_blocks_rows), add(add(ones_diff_cols, 21), mul(zeros_diff_rows, mul(compare_blocks_cols, add(-37, -39)))))), add(zeros_diff_cols, ones_diff_rows))
add(add(ones_diff_rows, 58), mul(ones_diff_cols, -22))
mul(mul(add(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_rows, -60)))
COND TREES:
ge(zeros_diff_rows, zeros_diff_rows)
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(and_(False, True), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, compare_blocks_cols, 1))), -23), or_(and_(or_(le(zeros_diff_rows, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(True, max_col_clue, max_col_clue)), or_(or_(False, True), and_(False, True)))))
and_(and_(ge(ones_diff_cols, _if_then_else(True, _if_then_else(False, -25, 47), compare_blocks_rows)), and_(False, True)), False)
or_(or_(True, or_(or_(le(_if_then_else(False, compare_blocks_cols, 1), _if_then_else(True, 1, 45)), and_(and_(False, True), ge(1, 27))), le(_if_then_else(or_(True, True), _if_then_else(or_(True, False), 2, 61), _if_then_else(True, 4, max_col_clue)), _if_then_else(or_(True, True), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(True, 3, compare_blocks_rows))))), or_(True, False))
and_(or_(or_(True, False), False), or_(False, False))
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
ge(2, _if_then_else(True, 1, _if_then_else(ge(_if_then_else(True, ones_diff_rows, _if_then_else(False, 2, compare_blocks_cols)), max_col_clue), 4, zeros_diff_rows)))
or_(ge(_if_then_else(or_(ge(zeros_diff_cols, ones_diff_rows), le(4, 2)), _if_then_else(or_(False, False), _if_then_else(True, max_col_clue, 4), _if_then_else(True, max_row_clue, zeros_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(True, 0, max_row_clue))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, 49, 3), _if_then_else(True, zeros_diff_cols, compare_blocks_cols)), _if_then_else(le(max_col_clue, 3), _if_then_else(False, 2, zeros_diff_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_cols)))), or_(and_(or_(or_(False, False), ge(2, 1)), and_(le(ones_diff_rows, 0), ge(0, 2))), and_(le(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, 1, 1)), or_(le(2, max_row_clue), or_(False, False)))))
le(_if_then_else(False, -82, ones_diff_rows), _if_then_else(True, _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, zeros_diff_cols, ones_diff_cols)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(True, 1, 4)), _if_then_else(ge(ones_diff_rows, 3), _if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, 2, max_col_clue))), compare_blocks_cols))
ge(ones_diff_cols, _if_then_else(True, _if_then_else(True, 0, max_row_clue), zeros_diff_rows))
le(1, _if_then_else(False, zeros_diff_rows, 2))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(mul(add(compare_blocks_cols, ones_diff_cols), ones_diff_cols), add(add(add(ones_diff_rows, ones_diff_rows), add(81, zeros_diff_rows)), ones_diff_cols))
add(add(mul(compare_blocks_cols, ones_diff_cols), add(-66, ones_diff_cols)), mul(mul(ones_diff_rows, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_cols)))
mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, -29)), compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(2, _if_then_else(False, 1, _if_then_else(False, 4, zeros_diff_rows)))
or_(True, True)
le(_if_then_else(True, -82, ones_diff_rows), _if_then_else(True, _if_then_else(True, 1, 0), compare_blocks_cols))
ge(_if_then_else(False, 0, _if_then_else(True, zeros_diff_rows, 0)), compare_blocks_cols)
le(1, _if_then_else(or_(False, True), _if_then_else(False, 2, _if_then_else(True, compare_blocks_cols, 0)), 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
or_(le(2, zeros_diff_rows), ge(_if_then_else(True, max_col_clue, _if_then_else(False, 2, compare_blocks_cols)), max_col_clue))
le(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, 3, _if_then_else(False, max_row_clue, 0))), _if_then_else(True, zeros_diff_rows, 1))), _if_then_else(True, 4, _if_then_else(False, max_row_clue, zeros_diff_cols)))
ge(_if_then_else(ge(-17, 4), _if_then_else(True, max_col_clue, ones_diff_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(False, ge(3, compare_blocks_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, 2, 4)))
le(_if_then_else(or_(False, True), _if_then_else(False, _if_then_else(True, max_row_clue, zeros_diff_cols), compare_blocks_rows), _if_then_else(False, _if_then_else(or_(True, False), 2, zeros_diff_rows), 3)), _if_then_else(and_(False, False), _if_then_else(or_(True, True), zeros_diff_rows, 0), _if_then_else(False, 1, max_row_clue)))
ge(_if_then_else(False, zeros_diff_rows, 2), _if_then_else(False, 2, 95))
VAL TREES:
add(add(66, add(zeros_diff_cols, ones_diff_cols)), add(zeros_diff_rows, -93))
mul(add(mul(add(add(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, 14), mul(compare_blocks_cols, zeros_diff_cols))), mul(add(mul(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), mul(mul(compare_blocks_rows, ones_diff_rows), add(-81, zeros_diff_cols)))), add(add(add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), mul(mul(compare_blocks_rows, 63), add(ones_diff_cols, compare_blocks_cols))), add(mul(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(compare_blocks_cols, 49)))))
add(add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(add(-40, zeros_diff_rows), zeros_diff_cols))
mul(add(compare_blocks_rows, compare_blocks_rows), mul(91, compare_blocks_rows))
add(mul(mul(add(compare_blocks_rows, -93), add(compare_blocks_rows, zeros_diff_rows)), add(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols))), mul(mul(add(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(mul(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
or_(ge(zeros_diff_rows, 0), le(2, 64))
or_(ge(_if_then_else(or_(False, True), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(True, max_col_clue, max_row_clue)), _if_then_else(False, 1, ones_diff_cols)), and_(True, True))
le(_if_then_else(False, -82, ones_diff_rows), _if_then_else(True, -69, compare_blocks_cols))
ge(ones_diff_cols, max_col_clue)
le(_if_then_else(and_(False, False), _if_then_else(True, max_row_clue, -3), _if_then_else(False, 0, 83)), _if_then_else(False, 2, 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(add(mul(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, ones_diff_rows)), zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(mul(compare_blocks_rows, -76), mul(zeros_diff_cols, compare_blocks_cols))
mul(mul(ones_diff_cols, -38), add(add(mul(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(62, compare_blocks_rows))))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(2, _if_then_else(True, _if_then_else(True, max_col_clue, _if_then_else(False, 2, compare_blocks_cols)), _if_then_else(False, 4, _if_then_else(False, compare_blocks_rows, max_row_clue))))
or_(ge(zeros_diff_cols, compare_blocks_cols), and_(False, or_(True, or_(ge(_if_then_else(le(compare_blocks_rows, ones_diff_rows), 2, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), and_(False, True)))))
le(_if_then_else(False, -82, ones_diff_rows), _if_then_else(True, -69, compare_blocks_cols))
ge(_if_then_else(False, zeros_diff_rows, 0), _if_then_else(False, _if_then_else(True, 0, max_row_clue), zeros_diff_rows))
le(_if_then_else(False, zeros_diff_rows, 2), 3)
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
or_(le(2, zeros_diff_rows), ge(1, max_col_clue))
le(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, 3, 4)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 1))), _if_then_else(True, 4, _if_then_else(False, max_row_clue, zeros_diff_cols)))
ge(_if_then_else(ge(-17, 4), _if_then_else(True, max_col_clue, ones_diff_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(False, ge(3, compare_blocks_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(True, 2, 4)))
le(_if_then_else(or_(False, True), _if_then_else(False, _if_then_else(True, max_row_clue, zeros_diff_cols), compare_blocks_rows), _if_then_else(False, max_col_clue, 3)), _if_then_else(and_(False, False), _if_then_else(or_(True, True), zeros_diff_rows, 0), _if_then_else(False, 1, max_row_clue)))
ge(max_row_clue, _if_then_else(False, 2, 95))
VAL TREES:
add(add(66, add(zeros_diff_cols, ones_diff_cols)), add(zeros_diff_rows, -93))
mul(add(mul(add(add(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, 14), mul(compare_blocks_cols, zeros_diff_cols))), mul(add(mul(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), mul(mul(compare_blocks_rows, ones_diff_rows), add(-81, zeros_diff_cols)))), add(add(add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), mul(mul(compare_blocks_rows, 63), add(ones_diff_cols, compare_blocks_cols))), add(mul(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(compare_blocks_cols, 49)))))
add(add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(add(-40, zeros_diff_rows), zeros_diff_cols))
mul(add(compare_blocks_rows, compare_blocks_rows), mul(91, compare_blocks_rows))
add(mul(mul(add(compare_blocks_rows, -93), add(compare_blocks_rows, zeros_diff_rows)), add(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols))), mul(mul(add(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(mul(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
ge(2, _if_then_else(True, _if_then_else(False, 2, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, max_row_clue)))
or_(True, and_(True, True))
le(_if_then_else(True, -82, ones_diff_rows), ones_diff_cols)
ge(_if_then_else(True, 1, 0), _if_then_else(True, _if_then_else(True, compare_blocks_rows, max_row_clue), zeros_diff_rows))
le(1, 2)
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(_if_then_else(False, 4, zeros_diff_rows), _if_then_else(False, ones_diff_rows, zeros_diff_rows))
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), 4), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(3, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, compare_blocks_cols, 1))), _if_then_else(and_(False, or_(False, False)), _if_then_else(or_(True, False), _if_then_else(True, 4, 51), _if_then_else(True, 0, -78)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(False, compare_blocks_cols, max_col_clue)), or_(or_(False, True), True))))
and_(ge(2, 2), True)
or_(or_(False, and_(le(_if_then_else(ge(3, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, max_col_clue), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), max_col_clue), True)), or_(False, False))
and_(True, le(_if_then_else(False, 2, 4), compare_blocks_rows))
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(add(mul(mul(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, 24), mul(compare_blocks_rows, ones_diff_cols))), zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, add(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows))))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(add(mul(mul(ones_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols)), add(mul(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), ones_diff_rows))
COND TREES:
ge(_if_then_else(or_(or_(and_(False, True), and_(False, True)), le(_if_then_else(False, max_col_clue, 1), _if_then_else(False, 0, max_col_clue))), _if_then_else(or_(le(0, compare_blocks_rows), or_(False, True)), _if_then_else(ge(ones_diff_rows, max_col_clue), _if_then_else(False, 95, compare_blocks_cols), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, 0, zeros_diff_cols))), _if_then_else(or_(or_(True, False), ge(zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(True, 1, 2), _if_then_else(True, zeros_diff_rows, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 0), _if_then_else(True, 1, 2)), le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, 2, 19))), _if_then_else(or_(le(ones_diff_rows, zeros_diff_cols), and_(True, True)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, 0, 1)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, 4, max_row_clue))), _if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(True, _if_then_else(False, 3, 3), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(ge(zeros_diff_cols, 2), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(True, 1, compare_blocks_rows)))))
le(_if_then_else(True, ones_diff_rows, 4), _if_then_else(False, ones_diff_rows, zeros_diff_cols))
or_(and_(or_(False, False), False), ge(compare_blocks_rows, _if_then_else(ge(-17, 4), compare_blocks_rows, ones_diff_rows)))
and_(ge(_if_then_else(or_(and_(True, False), True), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 2, 2), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), _if_then_else(or_(or_(True, False), and_(True, True)), _if_then_else(and_(le(0, 4), True), _if_then_else(True, max_row_clue, 1), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(max_col_clue, 4), _if_then_else(True, ones_diff_cols, 0), _if_then_else(False, 95, ones_diff_rows)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, -99, 3)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(-96, 3), _if_then_else(True, 2, ones_diff_cols), _if_then_else(False, 0, -87))), _if_then_else(ge(_if_then_else(False, -1, 3), max_row_clue), _if_then_else(ge(compare_blocks_rows, max_row_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, max_col_clue, 99)))))
or_(or_(False, False), True)
VAL TREES:
add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows))
add(add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(-82, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))))
mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_cols, ones_diff_rows))
add(add(ones_diff_rows, 58), mul(ones_diff_cols, -22))
add(add(compare_blocks_rows, ones_diff_cols), add(add(compare_blocks_rows, compare_blocks_rows), mul(19, compare_blocks_cols)))
COND TREES:
or_(le(max_row_clue, max_col_clue), and_(True, ge(ones_diff_rows, max_col_clue)))
and_(le(_if_then_else(ge(ones_diff_rows, _if_then_else(False, compare_blocks_cols, max_col_clue)), ones_diff_rows, zeros_diff_cols), _if_then_else(ge(max_row_clue, 0), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(ge(ones_diff_cols, zeros_diff_cols), compare_blocks_rows, zeros_diff_cols))), or_(True, False))
and_(le(3, compare_blocks_cols), False)
le(_if_then_else(ge(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(True, 4, 4), _if_then_else(False, 3, compare_blocks_rows)), _if_then_else(le(ones_diff_rows, max_col_clue), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, 4, ones_diff_cols))), _if_then_else(le(_if_then_else(False, ones_diff_cols, 3), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(3, 0), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 4, 4)), _if_then_else(ge(3, zeros_diff_rows), _if_then_else(True, 4, ones_diff_cols), _if_then_else(True, zeros_diff_cols, zeros_diff_rows))), _if_then_else(or_(and_(True, False), and_(False, False)), _if_then_else(and_(True, False), _if_then_else(False, 1, 0), _if_then_else(False, ones_diff_rows, 25)), _if_then_else(False, _if_then_else(ge(compare_blocks_cols, compare_blocks_rows), max_col_clue, max_row_clue), _if_then_else(False, max_col_clue, 4)))), _if_then_else(or_(ge(_if_then_else(False, ones_diff_cols, max_col_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), and_(ge(compare_blocks_cols, 50), and_(True, False))), _if_then_else(and_(ge(max_row_clue, zeros_diff_rows), and_(False, True)), _if_then_else(le(ones_diff_rows, ones_diff_cols), _if_then_else(False, 3, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), _if_then_else(ge(3, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, max_col_clue), _if_then_else(True, zeros_diff_cols, 1))), _if_then_else(ge(_if_then_else(False, 0, compare_blocks_rows), _if_then_else(False, 1, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, -48, max_col_clue), _if_then_else(False, 3, 3)), _if_then_else(and_(True, True), _if_then_else(True, 4, 2), _if_then_else(True, 59, max_row_clue)))))
and_(le(2, compare_blocks_rows), False)
VAL TREES:
mul(mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), mul(add(ones_diff_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(compare_blocks_rows, zeros_diff_cols), add(mul(mul(mul(add(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_cols)), add(add(compare_blocks_rows, compare_blocks_rows), add(ones_diff_rows, -9))), mul(add(add(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(mul(-7, 5), mul(compare_blocks_rows, ones_diff_cols)))), add(add(add(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, zeros_diff_rows)), mul(add(-8, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), mul(mul(add(compare_blocks_rows, 73), add(zeros_diff_rows, compare_blocks_rows)), mul(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols))))))
add(mul(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)), mul(mul(ones_diff_rows, -97), add(zeros_diff_rows, ones_diff_rows)))
add(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, add(add(mul(add(ones_diff_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_rows)), add(add(compare_blocks_cols, -35), mul(ones_diff_cols, compare_blocks_cols))), add(add(mul(zeros_diff_cols, zeros_diff_cols), mul(-69, 2)), add(mul(ones_diff_cols, -47), mul(compare_blocks_rows, compare_blocks_rows))))))
mul(mul(add(add(add(mul(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, zeros_diff_rows), mul(-6, ones_diff_rows))), mul(add(mul(zeros_diff_rows, zeros_diff_rows), add(ones_diff_rows, zeros_diff_rows)), add(mul(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_cols)))), ones_diff_cols), 66), mul(zeros_diff_rows, -5))
mul(add(add(compare_blocks_cols, compare_blocks_rows), add(add(add(zeros_diff_cols, 57), add(compare_blocks_cols, compare_blocks_cols)), compare_blocks_rows)), add(add(ones_diff_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)))
COND TREES:
le(_if_then_else(True, 1, 3), 0)
ge(_if_then_else(ge(compare_blocks_cols, zeros_diff_cols), 1, -11), _if_then_else(ge(compare_blocks_cols, zeros_diff_cols), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, max_row_clue, 4)))
le(_if_then_else(True, _if_then_else(True, 4, ones_diff_rows), 4), _if_then_else(False, _if_then_else(False, compare_blocks_cols, zeros_diff_rows), 4))
and_(True, and_(False, True))
or_(ge(_if_then_else(True, 4, _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(False, 3, _if_then_else(False, ones_diff_rows, max_col_clue))), and_(and_(True, True), or_(False, False)))
VAL TREES:
mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols))
add(add(ones_diff_cols, zeros_diff_cols), add(91, zeros_diff_rows))
add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, mul(zeros_diff_cols, -23)))
mul(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, -72))
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(38, ones_diff_rows)))
add(add(mul(add(ones_diff_rows, ones_diff_rows), mul(-70, ones_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_cols, 4))), add(add(add(compare_blocks_rows, ones_diff_rows), add(-86, compare_blocks_rows)), mul(mul(-86, compare_blocks_cols), add(ones_diff_cols, zeros_diff_cols))))
COND TREES:
or_(True, False)
and_(or_(False, True), True)
or_(True, True)
or_(or_(le(0, 1), ge(zeros_diff_rows, 0)), and_(or_(True, False), le(4, compare_blocks_cols)))
or_(True, le(2, max_row_clue))
VAL TREES:
add(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, -27))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(93, add(compare_blocks_cols, compare_blocks_rows)))
mul(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(compare_blocks_cols, compare_blocks_cols), mul(86, 20))
add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, -88))
add(add(ones_diff_cols, compare_blocks_cols), add(-26, compare_blocks_cols))
COND TREES:
ge(zeros_diff_rows, _if_then_else(or_(ge(max_row_clue, compare_blocks_rows), or_(True, False)), _if_then_else(or_(True, True), _if_then_else(True, 0, 0), _if_then_else(True, ones_diff_rows, zeros_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, max_row_clue, _if_then_else(or_(True, le(1, ones_diff_rows)), _if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 4, ones_diff_rows))), _if_then_else(False, -42, 4))))
and_(ge(_if_then_else(and_(ge(compare_blocks_cols, compare_blocks_rows), True), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(and_(False, True), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, compare_blocks_cols, 1))), _if_then_else(and_(False, or_(False, False)), ones_diff_rows, _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(zeros_diff_rows, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(max_col_clue, _if_then_else(True, max_col_clue, max_col_clue)), or_(or_(False, True), and_(False, True)))))
and_(ge(3, _if_then_else(True, 4, max_row_clue)), True)
or_(or_(True, le(ones_diff_cols, zeros_diff_rows)), True)
and_(or_(True, False), False)
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
or_(True, ge(_if_then_else(or_(ge(max_row_clue, compare_blocks_rows), or_(True, False)), _if_then_else(or_(False, True), _if_then_else(True, 0, 0), _if_then_else(True, ones_diff_rows, zeros_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, max_row_clue, compare_blocks_rows), _if_then_else(False, -42, 4))), _if_then_else(or_(le(compare_blocks_rows, 4), le(compare_blocks_cols, max_col_clue)), _if_then_else(ge(2, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, max_col_clue), _if_then_else(True, zeros_diff_rows, 0)), compare_blocks_rows)))
or_(and_(True, and_(ge(_if_then_else(True, max_row_clue, _if_then_else(False, -23, ones_diff_cols)), -33), True)), False)
ge(0, _if_then_else(or_(False, True), compare_blocks_cols, _if_then_else(False, 0, max_row_clue)))
ge(_if_then_else(le(_if_then_else(or_(and_(ge(_if_then_else(or_(and_(True, True), or_(True, True)), _if_then_else(or_(True, True), _if_then_else(True, 3, max_col_clue), _if_then_else(or_(True, False), compare_blocks_rows, max_row_clue)), _if_then_else(or_(False, True), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 0, 2))), _if_then_else(or_(and_(False, False), and_(True, True)), _if_then_else(and_(True, False), _if_then_else(True, 3, zeros_diff_rows), _if_then_else(False, 63, compare_blocks_cols)), _if_then_else(ge(1, compare_blocks_rows), _if_then_else(False, 0, 2), _if_then_else(True, zeros_diff_rows, compare_blocks_rows)))), and_(le(_if_then_else(le(4, zeros_diff_cols), _if_then_else(True, 3, compare_blocks_cols), _if_then_else(False, 8, 3)), _if_then_else(or_(True, False), _if_then_else(True, 36, max_row_clue), _if_then_else(ge(1, 0), compare_blocks_rows, 0))), ge(_if_then_else(le(max_row_clue, ones_diff_rows), _if_then_else(False, 3, 1), _if_then_else(False, zeros_diff_rows, 2)), _if_then_else(le(ones_diff_cols, max_col_clue), _if_then_else(True, zeros_diff_cols, 2), _if_then_else(True, 40, 0))))), False), zeros_diff_rows, ones_diff_rows), _if_then_else(False, 1, zeros_diff_cols)), _if_then_else(ge(1, 0), _if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(False, max_col_clue, max_col_clue)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, max_row_clue, 0))), _if_then_else(and_(ge(1, 0), or_(True, True)), _if_then_else(ge(0, 1), _if_then_else(True, 0, 0), _if_then_else(True, 1, ones_diff_cols)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(False, compare_blocks_rows, zeros_diff_cols))))
ge(_if_then_else(and_(False, False), 2, ones_diff_rows), _if_then_else(True, max_row_clue, 1))
VAL TREES:
mul(mul(mul(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_rows, -88)), mul(ones_diff_rows, zeros_diff_rows))
mul(add(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, mul(add(mul(-62, add(mul(ones_diff_cols, mul(ones_diff_cols, 11)), add(29, zeros_diff_rows))), ones_diff_cols), mul(add(compare_blocks_cols, -98), ones_diff_cols))))
mul(mul(mul(add(add(add(add(mul(ones_diff_rows, zeros_diff_cols), add(ones_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows))), mul(add(add(zeros_diff_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_rows, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)))), -19), mul(zeros_diff_cols, zeros_diff_rows)), add(ones_diff_cols, 8)), add(mul(zeros_diff_rows, zeros_diff_cols), add(51, ones_diff_rows)))
add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, -46)), add(add(mul(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, compare_blocks_rows), mul(4, -65))))
add(add(add(mul(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_cols))), mul(mul(add(add(mul(20, compare_blocks_cols), mul(ones_diff_rows, ones_diff_rows)), mul(add(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(add(add(add(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_cols, compare_blocks_rows)), mul(mul(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_cols)), add(add(-86, zeros_diff_cols), mul(compare_blocks_cols, zeros_diff_cols)))), add(add(mul(add(compare_blocks_rows, zeros_diff_rows), add(70, compare_blocks_cols)), add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols))), add(add(mul(-66, 80), mul(zeros_diff_rows, zeros_diff_cols)), add(mul(-9, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_rows))))), zeros_diff_rows)), mul(mul(83, -28), mul(-88, zeros_diff_cols)))), add(mul(mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, -3)), mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, ones_diff_rows))), add(add(mul(ones_diff_cols, ones_diff_rows), mul(-67, ones_diff_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_cols)))))
mul(add(add(add(add(14, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_rows)), add(mul(compare_blocks_cols, ones_diff_cols), mul(79, zeros_diff_cols))), add(add(add(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, ones_diff_cols), add(-74, zeros_diff_rows)))), mul(mul(add(add(ones_diff_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_cols)), add(add(compare_blocks_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_rows))), add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_rows, compare_blocks_rows)))))
COND TREES:
ge(1, _if_then_else(False, ones_diff_rows, zeros_diff_rows))
and_(ge(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 1))), _if_then_else(and_(and_(True, True), or_(False, False)), _if_then_else(or_(le(1, zeros_diff_rows), and_(True, False)), _if_then_else(True, 4, 51), _if_then_else(True, 0, -78)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, _if_then_else(True, compare_blocks_cols, 1), compare_blocks_rows)))), or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), True))
and_(ge(3, compare_blocks_cols), and_(and_(True, le(3, 3)), ge(2, _if_then_else(True, 4, compare_blocks_cols))))
or_(or_(True, False), True)
and_(or_(False, False), True)
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(mul(add(add(add(ones_diff_rows, compare_blocks_rows), mul(ones_diff_cols, -22)), add(add(89, ones_diff_rows), mul(zeros_diff_cols, compare_blocks_cols))), mul(mul(mul(ones_diff_rows, -8), mul(compare_blocks_cols, zeros_diff_cols)), add(mul(ones_diff_rows, compare_blocks_rows), add(-67, compare_blocks_rows)))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(mul(add(ones_diff_rows, zeros_diff_rows), mul(-36, 27)), 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
ge(2, _if_then_else(False, 1, _if_then_else(False, 4, zeros_diff_rows)))
or_(True, and_(True, False))
le(_if_then_else(ge(3, ones_diff_rows), -82, ones_diff_rows), _if_then_else(True, _if_then_else(ge(zeros_diff_rows, 0), 1, 0), compare_blocks_cols))
ge(_if_then_else(or_(True, True), zeros_diff_rows, 0), compare_blocks_cols)
le(1, _if_then_else(or_(False, False), _if_then_else(False, 2, 2), 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(zeros_diff_rows, zeros_diff_rows)
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), compare_blocks_rows), _if_then_else(and_(False, True), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, compare_blocks_cols, 1))), _if_then_else(and_(False, or_(False, False)), ones_diff_rows, _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(zeros_diff_rows, zeros_diff_rows), and_(True, False)), True), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(True, compare_blocks_cols, max_col_clue)), or_(or_(False, True), and_(False, True)))))
and_(ge(2, _if_then_else(True, -69, compare_blocks_cols)), True)
or_(or_(le(-84, 0), False), False)
and_(or_(True, False), True)
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
or_(ge(ones_diff_rows, max_col_clue), ge(4, 4))
and_(or_(False, True), le(_if_then_else(ge(ones_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(False, max_row_clue, 1)), 4))
or_(True, True)
or_(or_(and_(False, False), ge(ones_diff_cols, 0)), ge(3, max_col_clue))
le(_if_then_else(and_(ge(_if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 32, max_row_clue)), or_(or_(False, False), le(zeros_diff_rows, ones_diff_cols))), _if_then_else(le(_if_then_else(True, ones_diff_cols, 1), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 4, 4)), _if_then_else(and_(False, True), _if_then_else(False, 2, 0), _if_then_else(True, compare_blocks_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(False, 0, zeros_diff_cols), _if_then_else(False, 1, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, 1), _if_then_else(False, 3, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, compare_blocks_cols), _if_then_else(False, max_row_clue, ones_diff_rows)))), _if_then_else(or_(or_(and_(True, False), le(zeros_diff_cols, 0)), le(4, _if_then_else(True, 0, 3))), _if_then_else(le(_if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(and_(True, False), _if_then_else(True, 4, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(or_(or_(False, False), ge(4, zeros_diff_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 12), _if_then_else(False, 0, 2)), _if_then_else(le(3, zeros_diff_cols), _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, max_row_clue)))))
VAL TREES:
add(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, -27))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(93, add(compare_blocks_cols, compare_blocks_rows)))
mul(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(compare_blocks_cols, compare_blocks_cols), mul(86, 20))
add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, -88))
add(add(ones_diff_cols, compare_blocks_cols), add(-26, compare_blocks_cols))
COND TREES:
ge(2, _if_then_else(True, 1, _if_then_else(False, 4, zeros_diff_rows)))
or_(or_(and_(False, True), ge(zeros_diff_rows, 2)), ge(max_row_clue, 2))
le(_if_then_else(ge(_if_then_else(True, 4, 3), _if_then_else(False, max_row_clue, ones_diff_cols)), _if_then_else(and_(False, False), _if_then_else(False, 2, ones_diff_rows), _if_then_else(True, 81, 42)), _if_then_else(and_(True, False), _if_then_else(True, -86, max_row_clue), _if_then_else(True, compare_blocks_cols, max_col_clue))), _if_then_else(False, -69, compare_blocks_cols))
ge(_if_then_else(True, zeros_diff_rows, 0), _if_then_else(True, _if_then_else(True, 0, max_row_clue), _if_then_else(le(_if_then_else(ge(_if_then_else(False, 0, 3), _if_then_else(True, 2, 1)), _if_then_else(or_(True, True), _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, max_col_clue, compare_blocks_cols))), _if_then_else(or_(or_(False, True), and_(False, True)), _if_then_else(ge(zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 2, 3), _if_then_else(True, 1, 2)), _if_then_else(ge(2, compare_blocks_rows), _if_then_else(False, 2, ones_diff_rows), _if_then_else(False, zeros_diff_rows, ones_diff_rows)))), _if_then_else(or_(ge(_if_then_else(False, compare_blocks_rows, 2), _if_then_else(False, 3, zeros_diff_rows)), and_(le(zeros_diff_cols, 4), and_(True, False))), _if_then_else(or_(or_(True, False), or_(False, True)), _if_then_else(le(75, compare_blocks_rows), _if_then_else(True, 2, 3), _if_then_else(False, compare_blocks_cols, 3)), _if_then_else(le(72, compare_blocks_cols), _if_then_else(False, 2, max_col_clue), _if_then_else(False, 0, zeros_diff_rows))), _if_then_else(ge(_if_then_else(True, 2, 2), _if_then_else(True, -13, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, 4, max_row_clue), _if_then_else(True, -88, compare_blocks_rows)), _if_then_else(ge(zeros_diff_rows, 4), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_rows)))), _if_then_else(or_(and_(or_(False, True), le(ones_diff_cols, 2)), ge(_if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(False, compare_blocks_rows, ones_diff_rows))), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, 2), _if_then_else(True, zeros_diff_cols, 2)), _if_then_else(and_(True, True), _if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, 2, max_row_clue)), _if_then_else(or_(True, False), _if_then_else(True, 4, 4), _if_then_else(False, compare_blocks_rows, max_col_clue))), _if_then_else(ge(_if_then_else(True, max_row_clue, 31), _if_then_else(False, max_row_clue, 1)), _if_then_else(ge(max_col_clue, compare_blocks_rows), _if_then_else(False, 0, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 1)), _if_then_else(le(max_col_clue, max_col_clue), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(True, max_col_clue, ones_diff_cols)))))))
le(1, _if_then_else(and_(or_(ge(_if_then_else(True, 3, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 4)), and_(or_(True, False), le(zeros_diff_rows, 2))), and_(le(_if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, 4)), le(_if_then_else(True, -69, max_row_clue), _if_then_else(True, 3, max_row_clue)))), _if_then_else(or_(le(_if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 0, max_col_clue)), and_(ge(zeros_diff_rows, max_col_clue), le(2, 1))), _if_then_else(or_(or_(False, False), and_(True, False)), _if_then_else(or_(False, False), _if_then_else(True, 3, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, 2, max_col_clue), _if_then_else(True, 2, -16))), _if_then_else(or_(le(-60, 4), or_(False, False)), _if_then_else(or_(False, True), _if_then_else(False, -94, 2), _if_then_else(False, 2, 2)), _if_then_else(and_(True, True), _if_then_else(True, 0, compare_blocks_cols), _if_then_else(False, ones_diff_rows, zeros_diff_cols)))), _if_then_else(ge(_if_then_else(ge(ones_diff_cols, 4), _if_then_else(True, compare_blocks_cols, -3), _if_then_else(False, 2, -23)), _if_then_else(or_(True, False), _if_then_else(False, max_row_clue, 4), _if_then_else(True, zeros_diff_cols, zeros_diff_rows))), _if_then_else(ge(_if_then_else(False, 8, ones_diff_cols), _if_then_else(True, ones_diff_rows, zeros_diff_rows)), _if_then_else(le(26, ones_diff_rows), _if_then_else(True, 0, max_col_clue), _if_then_else(True, ones_diff_rows, 1)), _if_then_else(le(1, 2), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_cols, max_row_clue))), _if_then_else(le(_if_then_else(True, 4, 4), _if_then_else(True, 4, zeros_diff_rows)), _if_then_else(le(max_col_clue, ones_diff_rows), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 3, 2)), _if_then_else(le(ones_diff_rows, ones_diff_cols), _if_then_else(True, max_col_clue, compare_blocks_cols), _if_then_else(True, 0, compare_blocks_cols))))))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
or_(le(2, zeros_diff_rows), ge(_if_then_else(True, max_col_clue, max_col_clue), _if_then_else(or_(or_(False, False), or_(False, False)), _if_then_else(False, -97, 2), _if_then_else(True, zeros_diff_rows, _if_then_else(False, _if_then_else(False, _if_then_else(True, 2, 0), compare_blocks_rows), 3)))))
le(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(ge(ones_diff_rows, _if_then_else(False, compare_blocks_cols, max_col_clue)), False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, _if_then_else(and_(True, False), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(and_(True, False), zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 1))), _if_then_else(True, 4, _if_then_else(False, max_row_clue, zeros_diff_cols)))
ge(_if_then_else(ge(-17, 4), _if_then_else(True, max_col_clue, ones_diff_rows), _if_then_else(False, compare_blocks_cols, _if_then_else(le(max_row_clue, max_col_clue), _if_then_else(True, 1, _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(ge(ones_diff_cols, 4), 4, max_col_clue)))), _if_then_else(and_(False, ge(-17, compare_blocks_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, 2, 4)))
le(_if_then_else(or_(False, True), _if_then_else(False, _if_then_else(True, max_row_clue, zeros_diff_cols), compare_blocks_rows), _if_then_else(False, max_col_clue, 3)), _if_then_else(and_(False, False), _if_then_else(or_(le(_if_then_else(le(zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 4, 0), _if_then_else(True, zeros_diff_cols, max_row_clue)), _if_then_else(le(compare_blocks_cols, ones_diff_cols), _if_then_else(True, 1, ones_diff_rows), _if_then_else(True, ones_diff_cols, 1))), True), zeros_diff_rows, 0), _if_then_else(False, 1, max_row_clue)))
ge(_if_then_else(False, zeros_diff_rows, 2), _if_then_else(False, 2, 95))
VAL TREES:
add(add(66, add(zeros_diff_cols, ones_diff_cols)), add(zeros_diff_rows, -93))
mul(add(mul(add(add(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, 14), mul(compare_blocks_cols, zeros_diff_cols))), mul(add(mul(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), mul(mul(compare_blocks_rows, ones_diff_rows), add(-81, zeros_diff_cols)))), add(add(add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), mul(mul(compare_blocks_rows, 63), add(ones_diff_cols, compare_blocks_cols))), add(mul(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(compare_blocks_cols, 49)))))
add(add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(add(-40, zeros_diff_rows), zeros_diff_cols))
mul(add(compare_blocks_rows, compare_blocks_rows), mul(91, compare_blocks_rows))
add(mul(mul(add(compare_blocks_rows, -93), add(compare_blocks_rows, zeros_diff_rows)), add(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols))), mul(mul(add(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(mul(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
or_(ge(2, _if_then_else(False, 4, max_col_clue)), or_(le(0, compare_blocks_rows), or_(False, True)))
and_(True, ge(_if_then_else(True, max_row_clue, _if_then_else(True, zeros_diff_rows, ones_diff_cols)), _if_then_else(True, 1, zeros_diff_cols)))
or_(or_(and_(False, False), ge(_if_then_else(False, compare_blocks_rows, 0), _if_then_else(le(_if_then_else(False, compare_blocks_rows, -82), _if_then_else(True, _if_then_else(False, 1, max_row_clue), max_row_clue)), max_col_clue, 4))), True)
or_(or_(and_(False, False), ge(0, 0)), and_(or_(True, True), ge(1, 0)))
le(_if_then_else(and_(ge(_if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(or_(and_(False, True), or_(True, True)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 0, ones_diff_cols), _if_then_else(False, 2, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(True, ones_diff_rows, ones_diff_rows)))), or_(or_(True, False), le(zeros_diff_rows, ones_diff_cols))), _if_then_else(le(_if_then_else(True, ones_diff_cols, 1), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 4, 4)), _if_then_else(and_(False, True), _if_then_else(False, 2, 0), _if_then_else(True, compare_blocks_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(False, 0, zeros_diff_cols), _if_then_else(False, 1, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, 1), _if_then_else(False, 3, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, compare_blocks_cols), _if_then_else(False, max_row_clue, ones_diff_rows)))), _if_then_else(or_(or_(and_(True, False), le(zeros_diff_cols, 0)), le(3, _if_then_else(True, 0, 3))), _if_then_else(le(_if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(and_(True, False), _if_then_else(True, 4, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(or_(or_(False, False), ge(4, zeros_diff_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 12), _if_then_else(False, 0, _if_then_else(or_(False, True), 2, 4))), _if_then_else(le(3, zeros_diff_cols), _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, max_row_clue)))))
VAL TREES:
add(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, -27))
add(mul(ones_diff_rows, ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols))
mul(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), add(mul(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, add(mul(ones_diff_rows, add(ones_diff_cols, compare_blocks_rows)), zeros_diff_rows)))))
add(mul(mul(compare_blocks_rows, ones_diff_cols), 48), add(41, compare_blocks_cols))
add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, -88))
add(add(ones_diff_cols, compare_blocks_cols), mul(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)))
COND TREES:
ge(2, _if_then_else(True, 1, _if_then_else(ge(max_col_clue, _if_then_else(True, compare_blocks_rows, _if_then_else(False, zeros_diff_rows, zeros_diff_rows))), 4, zeros_diff_rows)))
or_(ge(max_col_clue, ones_diff_cols), and_(False, True))
le(_if_then_else(or_(False, True), 4, ones_diff_rows), _if_then_else(True, -69, compare_blocks_cols))
ge(_if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, _if_then_else(True, 0, max_row_clue), 1))
le(1, _if_then_else(True, 2, 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
or_(le(2, zeros_diff_rows), ge(_if_then_else(False, max_col_clue, _if_then_else(False, 2, compare_blocks_cols)), ones_diff_rows))
le(_if_then_else(and_(ge(ones_diff_cols, ones_diff_rows), and_(True, False)), 1, 3), 1)
ge(_if_then_else(ge(-17, 4), _if_then_else(True, max_col_clue, 4), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, 2, 4)))
le(_if_then_else(or_(False, True), _if_then_else(False, _if_then_else(True, max_row_clue, zeros_diff_cols), compare_blocks_rows), _if_then_else(False, max_col_clue, 3)), _if_then_else(and_(True, False), _if_then_else(True, zeros_diff_rows, 0), _if_then_else(False, 1, max_row_clue)))
ge(_if_then_else(False, zeros_diff_rows, max_row_clue), _if_then_else(False, 2, 95))
VAL TREES:
add(add(66, add(zeros_diff_cols, ones_diff_cols)), add(zeros_diff_rows, -93))
mul(add(mul(add(add(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, 14), mul(compare_blocks_cols, zeros_diff_cols))), mul(add(mul(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), mul(mul(compare_blocks_rows, ones_diff_rows), add(-81, zeros_diff_cols)))), add(add(add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), mul(mul(compare_blocks_rows, 63), add(ones_diff_cols, compare_blocks_cols))), add(mul(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(compare_blocks_cols, 49)))))
add(add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(add(-40, zeros_diff_rows), zeros_diff_cols))
mul(add(compare_blocks_rows, compare_blocks_rows), mul(91, compare_blocks_rows))
add(mul(mul(add(compare_blocks_rows, -93), add(compare_blocks_rows, zeros_diff_rows)), add(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols))), mul(mul(add(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(mul(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
or_(le(2, zeros_diff_rows), ge(_if_then_else(True, max_col_clue, max_col_clue), max_col_clue))
le(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(ge(ones_diff_rows, _if_then_else(False, compare_blocks_cols, max_col_clue)), False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 1))), _if_then_else(True, 4, _if_then_else(False, max_row_clue, zeros_diff_cols)))
ge(_if_then_else(ge(-17, 4), _if_then_else(True, max_col_clue, ones_diff_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(False, ge(-17, compare_blocks_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, 2, 4)))
le(_if_then_else(or_(False, True), _if_then_else(False, _if_then_else(True, max_row_clue, zeros_diff_cols), compare_blocks_rows), _if_then_else(False, max_col_clue, 3)), _if_then_else(and_(False, False), _if_then_else(or_(True, True), zeros_diff_rows, 0), _if_then_else(False, 1, max_row_clue)))
ge(_if_then_else(False, zeros_diff_rows, 2), _if_then_else(False, 2, 95))
VAL TREES:
add(add(66, add(zeros_diff_cols, ones_diff_cols)), add(zeros_diff_rows, -93))
mul(add(mul(add(add(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, 14), mul(compare_blocks_cols, zeros_diff_cols))), mul(add(mul(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), mul(mul(compare_blocks_rows, ones_diff_rows), add(-81, zeros_diff_cols)))), add(add(add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), mul(mul(compare_blocks_rows, 63), add(ones_diff_cols, compare_blocks_cols))), add(mul(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(compare_blocks_cols, 49)))))
add(add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(add(-40, zeros_diff_rows), zeros_diff_cols))
mul(add(compare_blocks_rows, compare_blocks_rows), mul(91, compare_blocks_rows))
add(mul(mul(add(compare_blocks_rows, -93), add(compare_blocks_rows, zeros_diff_rows)), add(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols))), mul(mul(add(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(mul(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
ge(ones_diff_rows, _if_then_else(True, ones_diff_rows, -18))
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, _if_then_else(True, compare_blocks_cols, 1)), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 1))), _if_then_else(and_(and_(True, True), or_(False, False)), _if_then_else(or_(True, True), _if_then_else(True, 4, 51), _if_then_else(True, 0, -78)), _if_then_else(and_(True, ge(compare_blocks_cols, zeros_diff_cols)), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(True, max_col_clue, max_col_clue)), or_(or_(False, True), and_(False, True)))))
and_(ge(3, 3), and_(False, False))
or_(or_(True, le(0, 1)), False)
and_(False, le(ones_diff_rows, 2))
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
le(_if_then_else(True, 1, 3), 0)
ge(_if_then_else(ge(compare_blocks_cols, zeros_diff_cols), 1, -11), _if_then_else(False, _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, max_row_clue, 4)))
le(_if_then_else(True, _if_then_else(True, 4, ones_diff_rows), 4), _if_then_else(True, _if_then_else(False, compare_blocks_cols, zeros_diff_rows), 4))
and_(True, True)
or_(ge(_if_then_else(True, 4, _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(False, 3, _if_then_else(False, ones_diff_rows, max_col_clue))), and_(and_(True, True), or_(False, False)))
VAL TREES:
mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols))
add(add(ones_diff_cols, zeros_diff_cols), add(91, zeros_diff_rows))
add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, mul(zeros_diff_cols, -23)))
mul(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, -72))
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(38, ones_diff_rows)))
add(add(mul(add(ones_diff_rows, ones_diff_rows), mul(-70, ones_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_cols, 4))), add(add(add(compare_blocks_rows, ones_diff_rows), add(-86, compare_blocks_rows)), mul(mul(-86, compare_blocks_cols), add(ones_diff_cols, zeros_diff_cols))))
COND TREES:
ge(_if_then_else(ge(compare_blocks_rows, _if_then_else(True, compare_blocks_rows, ones_diff_cols)), 3, 3), _if_then_else(False, 4, _if_then_else(True, ones_diff_rows, 0)))
or_(and_(le(_if_then_else(True, 2, compare_blocks_rows), _if_then_else(True, max_row_clue, zeros_diff_rows)), True), or_(True, True))
ge(_if_then_else(False, ones_diff_rows, 1), _if_then_else(and_(True, False), 1, compare_blocks_rows))
or_(and_(and_(le(_if_then_else(True, 3, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, max_col_clue)), ge(_if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(False, 4, zeros_diff_rows))), or_(and_(and_(True, False), ge(4, 62)), ge(_if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 12, 27)))), le(_if_then_else(or_(or_(False, False), and_(False, True)), _if_then_else(or_(False, True), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 0, 3)), _if_then_else(ge(compare_blocks_rows, 1), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, compare_blocks_rows, 1))), _if_then_else(and_(le(max_row_clue, max_col_clue), le(-84, 0)), _if_then_else(ge(4, ones_diff_rows), _if_then_else(False, compare_blocks_cols, 2), _if_then_else(True, compare_blocks_cols, 4)), _if_then_else(ge(ones_diff_cols, 1), _if_then_else(True, 4, 0), _if_then_else(False, 1, 2)))))
ge(4, _if_then_else(or_(False, False), _if_then_else(False, max_col_clue, 3), _if_then_else(True, 0, ones_diff_cols)))
VAL TREES:
add(mul(5, zeros_diff_cols), add(ones_diff_cols, zeros_diff_cols))
mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, add(zeros_diff_rows, zeros_diff_cols)))
mul(mul(mul(add(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), add(add(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), mul(add(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), mul(add(-65, 87), add(compare_blocks_rows, 47))))
add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, 65))
mul(mul(zeros_diff_rows, add(compare_blocks_cols, mul(ones_diff_cols, zeros_diff_rows))), mul(-18, compare_blocks_cols))
add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols))
COND TREES:
or_(False, ge(_if_then_else(or_(ge(max_row_clue, compare_blocks_rows), or_(True, False)), _if_then_else(False, _if_then_else(True, 0, 0), _if_then_else(True, ones_diff_rows, zeros_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, max_row_clue, compare_blocks_rows), _if_then_else(False, -42, 4))), _if_then_else(or_(le(_if_then_else(True, 4, 2), 4), le(compare_blocks_cols, max_col_clue)), _if_then_else(ge(2, compare_blocks_cols), _if_then_else(False, 2, max_col_clue), _if_then_else(True, _if_then_else(or_(True, True), _if_then_else(True, 53, 2), _if_then_else(True, 3, 4)), 0)), _if_then_else(False, _if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 4, ones_diff_rows)))))
or_(and_(True, and_(ge(max_row_clue, ones_diff_cols), True)), or_(True, True))
ge(_if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(or_(False, True), 1, _if_then_else(and_(and_(ge(compare_blocks_cols, zeros_diff_rows), True), le(_if_then_else(False, compare_blocks_cols, 1), _if_then_else(False, 3, max_col_clue))), 0, 0)))
ge(_if_then_else(le(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, 1, zeros_diff_cols)), _if_then_else(ge(compare_blocks_rows, _if_then_else(ge(_if_then_else(and_(True, False), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(ge(zeros_diff_cols, max_col_clue), _if_then_else(False, 2, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(False, 0, 4), _if_then_else(False, ones_diff_rows, 3)), _if_then_else(ge(1, ones_diff_cols), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(True, max_col_clue, 1)), _if_then_else(ge(2, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, 4), _if_then_else(False, 4, ones_diff_cols))), _if_then_else(or_(ge(4, 22), or_(True, False)), _if_then_else(le(zeros_diff_cols, ones_diff_rows), _if_then_else(False, max_row_clue, 4), _if_then_else(False, 1, max_row_clue)), _if_then_else(le(ones_diff_cols, compare_blocks_rows), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(True, -61, 2))))), _if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(False, max_col_clue, max_col_clue)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, max_col_clue, 3), _if_then_else(False, max_row_clue, 0))), _if_then_else(and_(ge(1, 0), or_(False, True)), _if_then_else(ge(0, max_col_clue), _if_then_else(True, 0, 0), _if_then_else(True, 1, ones_diff_cols)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(False, compare_blocks_rows, zeros_diff_cols))))
ge(-47, _if_then_else(False, max_row_clue, _if_then_else(ge(_if_then_else(ge(zeros_diff_cols, 4), _if_then_else(False, ones_diff_cols, 3), _if_then_else(True, 4, compare_blocks_cols)), _if_then_else(le(zeros_diff_rows, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 3, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_col_clue), _if_then_else(True, _if_then_else(le(zeros_diff_cols, max_col_clue), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, 3)), max_col_clue)), _if_then_else(le(2, max_row_clue), _if_then_else(False, zeros_diff_cols, 1), _if_then_else(True, zeros_diff_rows, 3)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols))), _if_then_else(or_(or_(False, False), True), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, 3), _if_then_else(True, 69, max_row_clue)), _if_then_else(and_(True, False), _if_then_else(False, 4, 41), _if_then_else(True, zeros_diff_rows, 2))))))
VAL TREES:
mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_rows))
mul(add(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols))
mul(mul(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, 8)), add(mul(zeros_diff_rows, zeros_diff_cols), add(51, ones_diff_rows)))
add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, -46)), mul(mul(ones_diff_cols, 48), add(compare_blocks_rows, zeros_diff_rows)))
add(add(add(mul(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_cols))), mul(mul(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows)), mul(mul(83, -28), mul(-88, zeros_diff_cols)))), add(mul(mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, -3)), mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, ones_diff_rows))), add(add(mul(ones_diff_cols, ones_diff_rows), mul(-67, ones_diff_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_cols)))))
mul(mul(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, ones_diff_rows))
COND TREES:
ge(2, _if_then_else(ge(_if_then_else(or_(or_(True, False), or_(True, False)), _if_then_else(ge(zeros_diff_rows, ones_diff_rows), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, max_col_clue, ones_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(True, 3, 1))), _if_then_else(and_(or_(False, True), or_(False, False)), _if_then_else(ge(max_col_clue, 1), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, max_col_clue, compare_blocks_cols)), _if_then_else(ge(0, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(True, compare_blocks_rows, 2)))), 1, _if_then_else(False, 4, zeros_diff_rows)))
or_(ge(4, compare_blocks_cols), and_(False, True))
le(_if_then_else(True, -82, ones_diff_rows), _if_then_else(True, -14, -82))
ge(_if_then_else(le(zeros_diff_cols, max_col_clue), zeros_diff_rows, compare_blocks_rows), _if_then_else(True, _if_then_else(True, 0, max_row_clue), zeros_diff_rows))
le(4, _if_then_else(True, 2, 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(add(add(mul(add(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_rows, -43)), mul(mul(-57, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_rows))), mul(add(mul(ones_diff_rows, -3), add(zeros_diff_cols, zeros_diff_cols)), add(mul(ones_diff_rows, -48), add(zeros_diff_cols, zeros_diff_cols)))), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), add(add(add(compare_blocks_rows, zeros_diff_rows), mul(16, ones_diff_rows)), add(add(compare_blocks_rows, 63), mul(4, zeros_diff_rows)))))
add(mul(add(ones_diff_cols, zeros_diff_cols), mul(-47, ones_diff_cols)), add(mul(zeros_diff_cols, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_cols)))
mul(add(mul(add(zeros_diff_cols, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_cols)), compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(2, _if_then_else(True, _if_then_else(False, 2, zeros_diff_rows), _if_then_else(False, 4, zeros_diff_rows)))
ge(_if_then_else(le(_if_then_else(le(compare_blocks_rows, 4), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, max_row_clue, zeros_diff_cols)), _if_then_else(ge(compare_blocks_cols, ones_diff_cols), _if_then_else(True, 78, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, 2), _if_then_else(False, -38, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(False, 4, ones_diff_cols), _if_then_else(True, 2, 1)), _if_then_else(le(2, -9), _if_then_else(False, 3, 3), _if_then_else(False, zeros_diff_cols, 1))), _if_then_else(or_(and_(True, True), ge(ones_diff_cols, zeros_diff_rows)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, 2, max_col_clue), _if_then_else(False, zeros_diff_rows, 3)), _if_then_else(ge(compare_blocks_rows, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(False, zeros_diff_cols, 2)))), _if_then_else(and_(le(_if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_rows)), or_(le(zeros_diff_cols, ones_diff_rows), and_(False, False))), _if_then_else(ge(_if_then_else(True, 4, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, max_col_clue)), _if_then_else(or_(True, True), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(True, compare_blocks_cols, 0)), _if_then_else(and_(False, True), _if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(True, zeros_diff_cols, max_row_clue))), _if_then_else(or_(or_(False, False), and_(False, False)), _if_then_else(and_(False, False), _if_then_else(True, ones_diff_rows, 4), _if_then_else(True, 0, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_rows, 4)))))
le(_if_then_else(True, compare_blocks_cols, ones_diff_rows), ones_diff_cols)
ge(_if_then_else(True, zeros_diff_rows, 0), _if_then_else(or_(True, False), _if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(True, max_row_clue, compare_blocks_rows)))
le(1, _if_then_else(or_(le(1, compare_blocks_cols), le(compare_blocks_cols, zeros_diff_cols)), 2, 1))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(2, _if_then_else(ge(_if_then_else(False, max_col_clue, _if_then_else(False, 2, compare_blocks_cols)), max_col_clue), 1, _if_then_else(False, 4, zeros_diff_rows)))
or_(False, True)
le(compare_blocks_cols, 1)
ge(_if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, _if_then_else(True, 0, 0), zeros_diff_rows))
le(1, ones_diff_rows)
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(_if_then_else(False, compare_blocks_rows, 3), _if_then_else(le(2, zeros_diff_rows), 4, _if_then_else(le(compare_blocks_cols, 1), ones_diff_rows, 0)))
or_(and_(True, False), or_(and_(False, False), True))
ge(_if_then_else(and_(False, ge(3, compare_blocks_cols)), ones_diff_rows, 1), _if_then_else(ge(2, compare_blocks_cols), -69, compare_blocks_rows))
or_(and_(and_(le(_if_then_else(False, 3, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, max_col_clue)), ge(_if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(False, 4, zeros_diff_rows))), or_(False, True)), le(_if_then_else(or_(or_(False, False), and_(False, True)), _if_then_else(or_(False, True), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 0, 3)), _if_then_else(ge(compare_blocks_rows, 1), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, compare_blocks_rows, 1))), _if_then_else(and_(le(max_row_clue, max_col_clue), le(-84, 0)), _if_then_else(True, _if_then_else(False, max_col_clue, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), _if_then_else(ge(ones_diff_cols, 1), _if_then_else(True, 4, 0), _if_then_else(False, 1, 1)))))
ge(_if_then_else(le(2, 3), zeros_diff_cols, 4), -10)
VAL TREES:
add(mul(5, zeros_diff_cols), add(ones_diff_cols, zeros_diff_cols))
mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, add(zeros_diff_rows, zeros_diff_cols)))
mul(mul(mul(add(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), add(add(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), mul(add(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), mul(add(-65, 87), add(compare_blocks_rows, 47))))
add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, 65))
mul(mul(zeros_diff_rows, add(compare_blocks_cols, mul(ones_diff_cols, zeros_diff_rows))), mul(-18, compare_blocks_cols))
add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols))
COND TREES:
ge(1, _if_then_else(ge(_if_then_else(False, 2, zeros_diff_rows), max_col_clue), ones_diff_rows, zeros_diff_rows))
and_(ge(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 1))), _if_then_else(and_(and_(True, True), or_(False, False)), _if_then_else(or_(le(1, zeros_diff_rows), and_(True, False)), _if_then_else(True, 4, 51), _if_then_else(True, 0, -78)), _if_then_else(and_(True, or_(False, True)), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, _if_then_else(True, compare_blocks_cols, 1), compare_blocks_rows)))), or_(False, True))
and_(ge(_if_then_else(False, compare_blocks_cols, 0), compare_blocks_cols), and_(and_(ge(zeros_diff_rows, 0), le(0, 3)), ge(2, _if_then_else(True, 4, compare_blocks_cols))))
or_(or_(True, False), or_(ge(3, max_col_clue), True))
and_(or_(False, False), False)
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
le(_if_then_else(False, 2, ones_diff_cols), _if_then_else(True, 4, 2))
or_(or_(False, and_(ge(ones_diff_cols, ones_diff_rows), le(_if_then_else(and_(False, False), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(True, ones_diff_cols, ones_diff_cols)), _if_then_else(or_(False, False), zeros_diff_cols, _if_then_else(True, compare_blocks_cols, 1))))), and_(False, True))
le(_if_then_else(False, -82, ones_diff_rows), _if_then_else(ge(4, ones_diff_cols), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 3, 2)))
or_(True, le(_if_then_else(or_(False, False), 0, _if_then_else(False, _if_then_else(False, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, ones_diff_cols, 2))), _if_then_else(True, zeros_diff_cols, compare_blocks_cols)))
le(1, _if_then_else(True, _if_then_else(False, 2, compare_blocks_cols), 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(2, 4)
or_(True, and_(False, ge(_if_then_else(False, 2, max_row_clue), _if_then_else(False, compare_blocks_rows, 4))))
le(compare_blocks_cols, -69)
ge(_if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, _if_then_else(le(_if_then_else(le(3, max_row_clue), _if_then_else(True, _if_then_else(True, 0, zeros_diff_cols), 2), _if_then_else(True, compare_blocks_cols, ones_diff_cols)), _if_then_else(True, _if_then_else(ge(max_col_clue, zeros_diff_cols), 1, 2), -42)), 0, 0), zeros_diff_rows))
le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(ge(max_row_clue, -14), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(False, ones_diff_cols, 4)))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
or_(ge(ones_diff_rows, max_col_clue), ge(4, _if_then_else(ge(_if_then_else(False, max_col_clue, _if_then_else(False, 2, compare_blocks_cols)), max_col_clue), 1, _if_then_else(False, 4, zeros_diff_rows))))
and_(or_(False, False), le(_if_then_else(ge(ones_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(False, max_row_clue, 1)), 4))
or_(True, True)
or_(or_(and_(True, False), ge(ones_diff_cols, 0)), ge(3, max_col_clue))
le(_if_then_else(and_(ge(_if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 32, max_row_clue)), or_(or_(False, False), le(zeros_diff_rows, ones_diff_cols))), _if_then_else(le(_if_then_else(True, ones_diff_cols, 1), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 4, 4)), _if_then_else(and_(False, True), _if_then_else(False, 2, 0), _if_then_else(True, compare_blocks_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(False, 0, zeros_diff_cols), _if_then_else(False, 1, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, 1), _if_then_else(False, 3, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, compare_blocks_cols), _if_then_else(False, max_row_clue, ones_diff_rows)))), _if_then_else(or_(or_(and_(True, False), le(zeros_diff_cols, 0)), le(4, _if_then_else(True, 0, 3))), _if_then_else(le(_if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(and_(True, False), _if_then_else(True, 4, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(or_(or_(False, False), ge(4, zeros_diff_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 12), _if_then_else(False, 0, 2)), _if_then_else(le(3, zeros_diff_cols), _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, max_row_clue)))))
VAL TREES:
add(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, -27))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(93, add(compare_blocks_cols, compare_blocks_rows)))
mul(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(compare_blocks_cols, compare_blocks_cols), mul(86, 20))
add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, -88))
add(add(ones_diff_cols, compare_blocks_cols), add(-26, compare_blocks_cols))
COND TREES:
ge(2, _if_then_else(True, 1, _if_then_else(False, 4, _if_then_else(and_(True, ge(ones_diff_rows, max_col_clue)), compare_blocks_rows, max_row_clue))))
or_(ge(zeros_diff_cols, compare_blocks_cols), and_(False, True))
le(_if_then_else(ge(-17, 4), -82, ones_diff_rows), _if_then_else(True, -69, compare_blocks_cols))
ge(_if_then_else(False, zeros_diff_rows, 0), _if_then_else(True, _if_then_else(True, 0, max_row_clue), zeros_diff_rows))
le(1, 3)
VAL TREES:
add(add(mul(add(add(add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, -21), add(zeros_diff_cols, zeros_diff_cols))), add(mul(add(45, -84), add(zeros_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_cols, ones_diff_cols), mul(ones_diff_cols, ones_diff_rows)))), mul(mul(add(mul(-31, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(compare_blocks_rows, compare_blocks_cols), mul(ones_diff_rows, -53))), mul(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols)), add(add(compare_blocks_cols, compare_blocks_cols), add(zeros_diff_cols, -45))))), zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(mul(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_rows)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(59, ones_diff_rows))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(_if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), 3, 3), _if_then_else(False, 4, _if_then_else(True, ones_diff_rows, 0)))
or_(and_(le(_if_then_else(True, 2, compare_blocks_rows), _if_then_else(True, max_row_clue, zeros_diff_rows)), True), or_(True, True))
ge(_if_then_else(False, ones_diff_rows, 1), _if_then_else(and_(True, False), 1, compare_blocks_rows))
or_(and_(and_(le(_if_then_else(True, 3, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, max_col_clue)), ge(_if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(False, 4, zeros_diff_rows))), or_(and_(and_(True, False), ge(4, 62)), ge(_if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 12, 27)))), le(_if_then_else(or_(or_(False, False), and_(False, True)), _if_then_else(or_(False, True), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 0, 3)), _if_then_else(ge(compare_blocks_rows, 1), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, compare_blocks_rows, 1))), _if_then_else(and_(le(max_row_clue, max_col_clue), le(-84, 0)), _if_then_else(ge(4, ones_diff_rows), _if_then_else(False, 22, 2), _if_then_else(True, compare_blocks_cols, 4)), _if_then_else(ge(ones_diff_cols, 1), _if_then_else(True, 4, 0), _if_then_else(False, 1, 2)))))
ge(_if_then_else(le(zeros_diff_cols, max_col_clue), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, 3)), _if_then_else(or_(False, False), _if_then_else(False, max_col_clue, 3), _if_then_else(True, 0, ones_diff_cols)))
VAL TREES:
add(mul(5, zeros_diff_cols), add(ones_diff_cols, zeros_diff_cols))
mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, add(zeros_diff_rows, zeros_diff_cols)))
mul(mul(mul(add(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), add(add(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), mul(add(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), mul(add(-65, 87), add(compare_blocks_rows, 47))))
add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, 65))
mul(mul(zeros_diff_rows, add(compare_blocks_cols, mul(ones_diff_cols, zeros_diff_rows))), mul(-18, compare_blocks_cols))
add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols))
COND TREES:
or_(le(1, _if_then_else(True, 0, zeros_diff_rows)), False)
and_(or_(False, True), le(_if_then_else(ge(ones_diff_cols, 4), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(or_(True, False), max_row_clue, 1)), 4))
or_(or_(ge(compare_blocks_rows, _if_then_else(le(zeros_diff_rows, _if_then_else(True, -69, compare_blocks_cols)), compare_blocks_rows, ones_diff_rows)), ge(_if_then_else(False, 4, 0), _if_then_else(False, max_col_clue, 4))), True)
or_(or_(and_(False, False), ge(0, 0)), and_(or_(True, False), le(0, compare_blocks_cols)))
le(_if_then_else(and_(ge(_if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 32, max_row_clue)), or_(or_(False, False), le(zeros_diff_rows, ones_diff_cols))), _if_then_else(le(_if_then_else(True, ones_diff_cols, 1), _if_then_else(True, compare_blocks_rows, 4)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 4, 4)), _if_then_else(and_(False, True), _if_then_else(False, 2, 0), _if_then_else(True, compare_blocks_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(False, 0, zeros_diff_cols), _if_then_else(False, 1, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, 1), _if_then_else(False, 3, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, compare_blocks_cols), _if_then_else(False, max_row_clue, ones_diff_rows)))), _if_then_else(or_(or_(and_(True, False), le(zeros_diff_cols, 0)), le(_if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(True, 0, 3))), _if_then_else(le(_if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(and_(True, False), _if_then_else(True, 4, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, _if_then_else(True, -10, max_row_clue), 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(or_(True, ge(4, zeros_diff_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 12), _if_then_else(False, 0, 2)), _if_then_else(le(3, zeros_diff_cols), _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, max_row_clue)))))
VAL TREES:
add(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, -27))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(93, add(compare_blocks_cols, compare_blocks_rows)))
mul(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(compare_blocks_cols, compare_blocks_cols), mul(86, 20))
add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, -88))
add(add(ones_diff_cols, compare_blocks_cols), add(-26, compare_blocks_cols))
COND TREES:
ge(3, _if_then_else(ge(ones_diff_rows, 3), 4, _if_then_else(True, ones_diff_rows, 0)))
or_(and_(True, True), False)
ge(_if_then_else(False, ones_diff_rows, 1), _if_then_else(True, 1, 1))
or_(and_(and_(le(_if_then_else(False, 3, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, max_col_clue)), ge(_if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(False, 4, zeros_diff_rows))), or_(and_(and_(True, False), ge(4, 62)), ge(_if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 12, 27)))), le(_if_then_else(or_(or_(False, False), and_(False, True)), _if_then_else(or_(False, True), _if_then_else(False, 2, max_row_clue), _if_then_else(True, _if_then_else(True, ones_diff_cols, 0), 3)), _if_then_else(ge(compare_blocks_rows, 3), _if_then_else(True, 2, ones_diff_cols), _if_then_else(ge(_if_then_else(True, ones_diff_cols, ones_diff_cols), _if_then_else(False, 12, 27)), compare_blocks_rows, 1))), _if_then_else(and_(le(max_row_clue, max_col_clue), le(-84, 0)), _if_then_else(True, _if_then_else(False, max_col_clue, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), _if_then_else(ge(ones_diff_cols, 1), _if_then_else(True, 4, 0), _if_then_else(False, 1, 2)))))
ge(compare_blocks_rows, -10)
VAL TREES:
add(mul(5, zeros_diff_cols), add(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, -55)), zeros_diff_cols))
mul(mul(add(compare_blocks_cols, -94), add(compare_blocks_cols, compare_blocks_rows)), mul(zeros_diff_rows, add(zeros_diff_rows, zeros_diff_cols)))
mul(mul(mul(add(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), add(add(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), mul(add(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), mul(add(-65, 87), add(compare_blocks_rows, 47))))
add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, 65))
mul(mul(zeros_diff_rows, add(compare_blocks_cols, mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, -61)))), mul(-18, compare_blocks_cols))
add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols))
COND TREES:
or_(ge(_if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, 4), _if_then_else(False, zeros_diff_cols, max_row_clue)), 0), True)
or_(ge(_if_then_else(or_(False, True), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(True, max_col_clue, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, 3, _if_then_else(False, max_row_clue, 0)))), and_(True, True))
le(_if_then_else(False, -82, _if_then_else(ge(_if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, 2, zeros_diff_rows)), _if_then_else(ge(4, ones_diff_cols), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, ones_diff_cols, max_col_clue)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, 0, 4)))), _if_then_else(True, -69, compare_blocks_cols))
ge(ones_diff_cols, _if_then_else(or_(True, False), 2, _if_then_else(ge(_if_then_else(True, compare_blocks_cols, 3), _if_then_else(True, 0, compare_blocks_rows)), _if_then_else(ge(compare_blocks_rows, max_col_clue), _if_then_else(True, compare_blocks_rows, 3), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, -44, 4)))))
le(_if_then_else(and_(or_(True, True), and_(False, True)), _if_then_else(True, max_row_clue, -3), _if_then_else(False, 0, 83)), _if_then_else(False, 2, 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(_if_then_else(True, ones_diff_rows, compare_blocks_cols), _if_then_else(le(2, 64), ones_diff_rows, -18))
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 1))), _if_then_else(and_(and_(True, True), or_(False, False)), _if_then_else(or_(True, True), _if_then_else(True, 4, 51), _if_then_else(True, 0, -78)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(True, max_col_clue, max_col_clue)), or_(or_(False, True), and_(False, True)))))
and_(ge(_if_then_else(False, 2, 4), compare_blocks_cols), False)
or_(or_(and_(True, False), True), False)
and_(or_(False, False), le(max_col_clue, max_row_clue))
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
ge(2, _if_then_else(ge(_if_then_else(or_(le(1, compare_blocks_rows), False), _if_then_else(False, 2, 3), _if_then_else(True, 0, zeros_diff_rows)), max_col_clue), 1, _if_then_else(False, 4, zeros_diff_rows)))
or_(True, ge(ones_diff_cols, _if_then_else(le(ones_diff_rows, zeros_diff_cols), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, 1, max_row_clue))))
le(_if_then_else(False, -82, ones_diff_rows), _if_then_else(True, _if_then_else(True, 1, 0), compare_blocks_cols))
ge(_if_then_else(or_(and_(False, False), ge(ones_diff_cols, 0)), zeros_diff_rows, 0), compare_blocks_cols)
le(1, _if_then_else(or_(False, True), _if_then_else(False, 2, 2), 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
or_(ge(ones_diff_rows, max_col_clue), ge(compare_blocks_cols, 4))
and_(or_(False, True), le(_if_then_else(and_(False, True), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(False, max_row_clue, 1)), 4))
or_(True, True)
or_(ge(4, 62), ge(3, max_col_clue))
le(_if_then_else(and_(ge(_if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 32, max_row_clue)), or_(or_(False, False), le(zeros_diff_rows, ones_diff_cols))), _if_then_else(le(_if_then_else(True, ones_diff_cols, 1), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 4, 4)), _if_then_else(and_(False, True), _if_then_else(False, 2, 0), _if_then_else(True, compare_blocks_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(False, 0, zeros_diff_cols), _if_then_else(False, 1, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, 1), _if_then_else(False, 3, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, compare_blocks_cols), _if_then_else(False, max_row_clue, ones_diff_rows)))), _if_then_else(or_(or_(and_(True, False), le(zeros_diff_cols, 0)), le(4, _if_then_else(True, 0, 3))), _if_then_else(le(_if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(and_(True, False), _if_then_else(True, 4, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(or_(or_(False, False), ge(4, zeros_diff_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 12), _if_then_else(False, 0, 2)), _if_then_else(le(3, zeros_diff_cols), _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, max_row_clue)))))
VAL TREES:
add(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, -27))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(93, add(compare_blocks_cols, compare_blocks_rows)))
mul(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(compare_blocks_cols, compare_blocks_cols), mul(86, 20))
add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, -88))
add(add(ones_diff_cols, compare_blocks_cols), add(-26, compare_blocks_cols))
COND TREES:
ge(_if_then_else(or_(False, le(_if_then_else(False, max_col_clue, 1), _if_then_else(False, 0, max_col_clue))), _if_then_else(or_(le(0, compare_blocks_rows), or_(False, True)), _if_then_else(ge(ones_diff_rows, max_col_clue), _if_then_else(False, 95, compare_blocks_cols), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, 0, zeros_diff_cols))), _if_then_else(or_(or_(True, False), ge(zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(True, 1, 2), _if_then_else(True, zeros_diff_rows, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 0), _if_then_else(True, 1, 2)), le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(True, zeros_diff_rows, 19))), _if_then_else(or_(le(ones_diff_rows, zeros_diff_cols), and_(True, True)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 0, 1)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, 4, max_row_clue))), _if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(1, 3), _if_then_else(False, 3, 3), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(ge(zeros_diff_cols, 2), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(True, 1, compare_blocks_rows)))))
le(_if_then_else(True, zeros_diff_cols, -36), _if_then_else(ge(ones_diff_rows, _if_then_else(and_(True, True), compare_blocks_cols, max_col_clue)), ones_diff_rows, zeros_diff_cols))
or_(and_(True, False), False)
and_(ge(_if_then_else(or_(and_(True, False), ge(compare_blocks_cols, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 2, 2), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), _if_then_else(or_(or_(True, False), and_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, max_row_clue, 1), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(max_col_clue, 4), _if_then_else(True, ones_diff_cols, 0), _if_then_else(False, 95, ones_diff_rows)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, -99, 3)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(-96, 3), _if_then_else(True, 2, ones_diff_cols), _if_then_else(False, 0, -87))), _if_then_else(ge(_if_then_else(False, -1, 3), _if_then_else(True, 1, max_row_clue)), _if_then_else(ge(compare_blocks_rows, max_row_clue), compare_blocks_cols, _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, max_col_clue, 99)))))
or_(True, ge(0, -10))
VAL TREES:
add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows))
add(add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(-82, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))))
mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_cols, ones_diff_rows))
add(add(ones_diff_rows, 58), mul(ones_diff_cols, -22))
add(add(compare_blocks_rows, ones_diff_cols), add(add(compare_blocks_rows, compare_blocks_rows), mul(19, compare_blocks_cols)))
COND TREES:
ge(zeros_diff_rows, _if_then_else(False, ones_diff_rows, 0))
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(and_(False, True), _if_then_else(False, 1, ones_diff_cols), zeros_diff_cols)), _if_then_else(and_(False, and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False)))), ones_diff_rows, _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(zeros_diff_rows, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(True, max_col_clue, max_col_clue)), or_(or_(False, True), and_(False, True)))))
and_(False, True)
or_(or_(False, and_(le(max_row_clue, 0), True)), or_(True, False))
and_(or_(True, False), or_(False, False))
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
ge(_if_then_else(True, 3, 3), _if_then_else(ge(ones_diff_rows, max_col_clue), 1, _if_then_else(False, 4, zeros_diff_rows)))
or_(or_(False, and_(True, True)), False)
ge(_if_then_else(False, ones_diff_rows, 1), _if_then_else(False, 1, compare_blocks_rows))
or_(and_(and_(le(_if_then_else(False, 3, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, max_col_clue)), ge(_if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(False, 4, zeros_diff_rows))), or_(and_(and_(True, False), ge(4, 62)), ge(_if_then_else(True, ones_diff_cols, ones_diff_cols), _if_then_else(False, 12, 27)))), le(_if_then_else(or_(or_(False, False), and_(False, True)), _if_then_else(or_(False, True), _if_then_else(False, 2, _if_then_else(le(ones_diff_rows, compare_blocks_cols), _if_then_else(ge(4, 62), 4, 3), _if_then_else(ge(93, max_row_clue), 0, compare_blocks_rows))), _if_then_else(True, 0, 3)), _if_then_else(ge(compare_blocks_rows, 1), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, compare_blocks_rows, 1))), _if_then_else(and_(le(3, max_col_clue), le(-84, 0)), _if_then_else(True, _if_then_else(False, max_col_clue, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), _if_then_else(ge(ones_diff_cols, 1), _if_then_else(True, 4, 0), _if_then_else(False, 1, 2)))))
ge(_if_then_else(ge(ones_diff_cols, max_row_clue), _if_then_else(True, 2, zeros_diff_rows), _if_then_else(False, max_row_clue, 4)), -10)
VAL TREES:
add(mul(5, zeros_diff_cols), add(ones_diff_cols, add(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))))
mul(add(mul(mul(add(zeros_diff_cols, compare_blocks_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows))), mul(add(add(15, zeros_diff_rows), add(ones_diff_rows, compare_blocks_rows)), mul(add(zeros_diff_rows, 69), add(compare_blocks_cols, compare_blocks_rows)))), mul(zeros_diff_rows, add(zeros_diff_rows, zeros_diff_cols)))
mul(mul(mul(add(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), add(add(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), mul(add(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), mul(add(-65, 87), add(compare_blocks_rows, 47))))
add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, 65))
mul(mul(zeros_diff_rows, add(compare_blocks_cols, mul(mul(mul(add(add(zeros_diff_rows, compare_blocks_cols), add(ones_diff_cols, -90)), add(mul(compare_blocks_rows, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_cols))), add(mul(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_rows)))), mul(add(mul(mul(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(compare_blocks_cols, -36))), mul(mul(add(compare_blocks_cols, compare_blocks_cols), add(zeros_diff_rows, -96)), mul(mul(compare_blocks_cols, -42), add(ones_diff_cols, zeros_diff_rows))))))), mul(-18, compare_blocks_cols))
add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols))
COND TREES:
ge(_if_then_else(or_(or_(and_(False, True), and_(False, True)), le(_if_then_else(False, max_col_clue, 1), _if_then_else(False, 0, max_col_clue))), _if_then_else(or_(le(compare_blocks_cols, compare_blocks_rows), or_(False, True)), _if_then_else(ge(ones_diff_rows, max_col_clue), _if_then_else(False, 95, compare_blocks_cols), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, 0, zeros_diff_cols))), _if_then_else(or_(or_(True, False), ge(zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(ge(_if_then_else(True, max_col_clue, _if_then_else(False, 4, compare_blocks_cols)), compare_blocks_rows), _if_then_else(True, 1, 2), _if_then_else(True, zeros_diff_rows, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 0), _if_then_else(True, 1, 2)), le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, 2, 19))), _if_then_else(or_(le(ones_diff_rows, zeros_diff_cols), and_(True, True)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, 0, 1)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, 4, max_row_clue))), _if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(True, _if_then_else(False, 3, 3), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 1), _if_then_else(True, 1, compare_blocks_rows)))))
le(_if_then_else(False, zeros_diff_cols, ones_diff_rows), _if_then_else(True, ones_diff_rows, zeros_diff_cols))
or_(and_(True, True), or_(False, True))
and_(ge(_if_then_else(or_(and_(True, False), ge(compare_blocks_cols, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 2, 2), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), _if_then_else(or_(or_(True, False), and_(True, True)), _if_then_else(and_(le(0, 4), True), _if_then_else(False, max_row_clue, 1), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(max_col_clue, 4), _if_then_else(True, ones_diff_cols, 0), _if_then_else(False, 95, ones_diff_rows)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, 3), _if_then_else(and_(le(max_row_clue, 0), True), -99, 3)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(-96, 3), _if_then_else(True, 2, ones_diff_cols), _if_then_else(False, 0, -87))), _if_then_else(ge(_if_then_else(False, -1, 3), max_row_clue), _if_then_else(ge(compare_blocks_rows, max_row_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, max_col_clue, 99)))))
or_(True, False)
VAL TREES:
add(mul(ones_diff_rows, ones_diff_cols), add(mul(add(mul(zeros_diff_cols, -1), zeros_diff_cols), compare_blocks_rows), mul(add(zeros_diff_rows, ones_diff_cols), zeros_diff_cols)))
mul(mul(zeros_diff_cols, compare_blocks_cols), add(add(add(mul(compare_blocks_rows, ones_diff_cols), zeros_diff_rows), add(compare_blocks_rows, add(add(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)))), compare_blocks_rows))
add(add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(mul(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, compare_blocks_rows))), add(mul(-82, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))))
mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_cols, add(add(add(mul(-55, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, ones_diff_rows), mul(mul(add(add(zeros_diff_cols, compare_blocks_rows), add(42, -97)), mul(add(zeros_diff_rows, ones_diff_rows), add(ones_diff_cols, compare_blocks_rows))), add(add(add(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, 2), mul(zeros_diff_cols, zeros_diff_rows)))))), mul(mul(add(ones_diff_rows, 75), mul(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))))))
add(add(mul(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols)), mul(ones_diff_cols, -22))
add(add(compare_blocks_rows, ones_diff_cols), add(mul(add(-78, mul(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows))), zeros_diff_cols), mul(ones_diff_rows, compare_blocks_cols)))
COND TREES:
le(_if_then_else(True, 3, 3), _if_then_else(or_(or_(True, False), False), 4, 1))
ge(_if_then_else(le(2, 97), 1, -11), _if_then_else(ge(compare_blocks_cols, zeros_diff_cols), _if_then_else(True, _if_then_else(ge(_if_then_else(or_(or_(True, True), False), _if_then_else(le(ones_diff_rows, max_row_clue), _if_then_else(True, 0, zeros_diff_cols), _if_then_else(False, 0, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(False, 3, 1), _if_then_else(False, 2, ones_diff_rows))), _if_then_else(ge(_if_then_else(True, 3, max_col_clue), _if_then_else(False, 1, 2)), _if_then_else(and_(False, True), _if_then_else(False, 2, 4), _if_then_else(False, zeros_diff_cols, 2)), _if_then_else(le(compare_blocks_rows, zeros_diff_cols), _if_then_else(False, max_row_clue, max_row_clue), _if_then_else(False, max_row_clue, max_row_clue)))), _if_then_else(and_(ge(_if_then_else(False, 46, 0), _if_then_else(True, 0, 3)), ge(_if_then_else(True, 4, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(le(_if_then_else(True, max_row_clue, ones_diff_cols), _if_then_else(False, ones_diff_rows, max_row_clue)), _if_then_else(ge(compare_blocks_cols, zeros_diff_rows), _if_then_else(True, ones_diff_rows, 2), _if_then_else(True, 4, 2)), _if_then_else(ge(zeros_diff_cols, 4), _if_then_else(False, max_row_clue, 2), _if_then_else(True, max_col_clue, ones_diff_cols))), _if_then_else(and_(le(zeros_diff_cols, 4), ge(compare_blocks_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, 3, 1), _if_then_else(False, max_row_clue, 3)), _if_then_else(and_(False, True), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(True, 1, 1)))), _if_then_else(ge(_if_then_else(or_(False, False), _if_then_else(True, 0, max_row_clue), _if_then_else(True, zeros_diff_rows, 1)), _if_then_else(le(ones_diff_cols, 2), _if_then_else(True, 0, ones_diff_cols), _if_then_else(True, max_row_clue, 1))), _if_then_else(or_(ge(3, zeros_diff_rows), and_(True, True)), _if_then_else(le(compare_blocks_rows, max_row_clue), _if_then_else(False, max_col_clue, 0), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(le(1, 70), _if_then_else(False, 3, -75), _if_then_else(True, 3, 73))), _if_then_else(or_(and_(True, True), le(ones_diff_cols, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(False, 3, max_row_clue), _if_then_else(True, 0, 3)), _if_then_else(ge(ones_diff_rows, -62), _if_then_else(True, 0, 0), _if_then_else(False, ones_diff_cols, compare_blocks_rows))))), ones_diff_cols), _if_then_else(False, max_row_clue, 4)))
le(_if_then_else(True, _if_then_else(True, 4, _if_then_else(le(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(False, 3, 83)), _if_then_else(and_(False, True), _if_then_else(True, 2, ones_diff_cols), _if_then_else(False, 3, -45))), _if_then_else(and_(or_(False, False), ge(2, ones_diff_rows)), _if_then_else(and_(True, False), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, 4, 4)), compare_blocks_rows), _if_then_else(le(_if_then_else(True, 3, 3), _if_then_else(True, 0, 0)), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(True, 99, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(False, 1, 99))))), 4), _if_then_else(False, _if_then_else(False, compare_blocks_rows, zeros_diff_rows), 4))
and_(True, and_(le(3, max_row_clue), or_(True, False)))
or_(ge(_if_then_else(True, 4, _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(False, 3, _if_then_else(False, 0, max_col_clue))), and_(and_(True, True), or_(False, False)))
VAL TREES:
mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols))
add(add(ones_diff_cols, zeros_diff_cols), add(91, zeros_diff_rows))
add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, mul(zeros_diff_cols, -23)))
mul(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, -72))
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(38, ones_diff_rows)))
add(add(mul(add(ones_diff_rows, ones_diff_rows), mul(-70, ones_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_cols, 4))), add(add(add(compare_blocks_rows, ones_diff_rows), add(-86, compare_blocks_rows)), mul(mul(-86, compare_blocks_cols), add(ones_diff_cols, zeros_diff_cols))))
COND TREES:
ge(_if_then_else(or_(or_(and_(False, True), and_(False, True)), le(_if_then_else(False, max_col_clue, 1), _if_then_else(False, 0, max_col_clue))), _if_then_else(or_(le(0, compare_blocks_rows), or_(le(max_row_clue, 4), True)), _if_then_else(ge(ones_diff_rows, max_col_clue), _if_then_else(False, 95, compare_blocks_cols), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, 0, zeros_diff_cols))), _if_then_else(or_(or_(True, False), ge(zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(True, 1, 2), _if_then_else(True, zeros_diff_rows, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 0), _if_then_else(True, 1, 2)), le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, 2, 19))), _if_then_else(or_(le(ones_diff_rows, zeros_diff_cols), and_(True, True)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, 0, 1)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, 4, max_row_clue))), _if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(True, _if_then_else(False, 3, 3), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(ge(zeros_diff_cols, 2), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(True, 1, compare_blocks_rows)))))
le(_if_then_else(True, zeros_diff_cols, 4), _if_then_else(and_(True, True), ones_diff_rows, zeros_diff_cols))
or_(and_(or_(False, False), False), ge(compare_blocks_rows, _if_then_else(le(3, compare_blocks_cols), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, ones_diff_rows, 1)), ones_diff_rows)))
and_(ge(_if_then_else(or_(and_(True, False), ge(compare_blocks_cols, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 2, 2), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), _if_then_else(or_(or_(True, False), and_(True, True)), _if_then_else(and_(le(0, 4), True), _if_then_else(True, max_row_clue, 1), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(max_col_clue, 4), _if_then_else(True, ones_diff_cols, 0), _if_then_else(False, 95, ones_diff_rows)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, -99, 3)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(-96, 3), _if_then_else(True, 2, ones_diff_cols), _if_then_else(False, 0, -87))), _if_then_else(ge(_if_then_else(False, -1, 3), max_row_clue), _if_then_else(ge(compare_blocks_rows, max_row_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, max_col_clue, 99)))))
or_(or_(False, False), True)
VAL TREES:
add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows))
add(add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(-82, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))))
mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_cols, ones_diff_rows))
add(add(ones_diff_rows, 58), mul(ones_diff_cols, -22))
add(add(compare_blocks_rows, ones_diff_cols), add(add(compare_blocks_rows, compare_blocks_rows), mul(19, compare_blocks_cols)))
COND TREES:
le(_if_then_else(ge(_if_then_else(False, 2, zeros_diff_rows), max_col_clue), 2, ones_diff_cols), _if_then_else(False, 4, 2))
or_(or_(False, and_(ge(ones_diff_cols, ones_diff_rows), le(_if_then_else(and_(or_(False, True), False), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(True, ones_diff_cols, ones_diff_cols)), _if_then_else(or_(False, False), zeros_diff_cols, _if_then_else(True, ones_diff_cols, 1))))), and_(False, True))
le(_if_then_else(and_(True, True), -82, ones_diff_rows), _if_then_else(ge(4, ones_diff_cols), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), 2)))
or_(ge(3, max_col_clue), le(_if_then_else(or_(False, False), 0, _if_then_else(True, _if_then_else(False, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, ones_diff_cols, 2))), _if_then_else(True, zeros_diff_cols, compare_blocks_cols)))
le(1, _if_then_else(False, _if_then_else(False, 2, compare_blocks_cols), 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(_if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), 3, 3), _if_then_else(False, _if_then_else(and_(ge(_if_then_else(le(4, max_row_clue), _if_then_else(False, max_col_clue, 3), _if_then_else(False, compare_blocks_rows, ones_diff_rows)), _if_then_else(ge(4, ones_diff_cols), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 3, compare_blocks_cols))), or_(ge(_if_then_else(False, 0, zeros_diff_cols), _if_then_else(False, 53, 4)), and_(le(ones_diff_rows, ones_diff_cols), ge(1, 3)))), _if_then_else(and_(and_(and_(False, True), ge(0, compare_blocks_rows)), and_(or_(True, False), ge(1, 2))), _if_then_else(ge(_if_then_else(False, 92, compare_blocks_cols), _if_then_else(True, 4, zeros_diff_rows)), _if_then_else(ge(max_col_clue, ones_diff_rows), _if_then_else(True, 21, max_row_clue), _if_then_else(False, zeros_diff_rows, max_row_clue)), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, max_col_clue))), _if_then_else(le(_if_then_else(True, max_row_clue, ones_diff_rows), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, ones_diff_cols, 0), _if_then_else(False, 4, compare_blocks_cols)), _if_then_else(and_(False, False), _if_then_else(True, 4, 0), _if_then_else(False, 1, max_row_clue)))), _if_then_else(ge(_if_then_else(and_(True, False), _if_then_else(True, 1, max_row_clue), _if_then_else(False, ones_diff_rows, max_row_clue)), _if_then_else(and_(True, False), _if_then_else(True, 2, 3), _if_then_else(True, 0, compare_blocks_cols))), _if_then_else(le(_if_then_else(False, 69, compare_blocks_rows), _if_then_else(True, ones_diff_rows, 2)), _if_then_else(le(zeros_diff_cols, -58), _if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(False, 4, max_row_clue)), _if_then_else(ge(zeros_diff_rows, 2), _if_then_else(True, max_row_clue, 2), _if_then_else(False, 3, max_row_clue))), _if_then_else(and_(and_(True, False), and_(False, False)), _if_then_else(le(compare_blocks_cols, ones_diff_rows), _if_then_else(True, zeros_diff_cols, ones_diff_cols), _if_then_else(True, 3, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, ones_diff_cols), _if_then_else(False, 1, 0), _if_then_else(False, 0, zeros_diff_rows))))), _if_then_else(True, ones_diff_rows, 0)))
or_(and_(le(_if_then_else(True, 2, compare_blocks_rows), _if_then_else(le(_if_then_else(or_(False, False), _if_then_else(True, 0, 4), _if_then_else(True, 1, 4)), _if_then_else(le(4, compare_blocks_rows), _if_then_else(False, 1, 3), _if_then_else(False, 1, compare_blocks_rows))), max_row_clue, zeros_diff_rows)), True), or_(True, True))
ge(_if_then_else(False, ones_diff_rows, 1), _if_then_else(and_(ge(_if_then_else(and_(le(ones_diff_rows, max_col_clue), le(compare_blocks_rows, ones_diff_rows)), _if_then_else(ge(46, ones_diff_cols), _if_then_else(True, 0, 0), _if_then_else(False, 0, 2)), _if_then_else(or_(False, True), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, max_row_clue, ones_diff_rows))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, compare_blocks_rows), _if_then_else(True, ones_diff_cols, max_row_clue)), _if_then_else(or_(False, True), _if_then_else(False, 4, ones_diff_rows), _if_then_else(False, 2, 4)), _if_then_else(le(1, 1), _if_then_else(False, 4, max_col_clue), _if_then_else(False, 3, -7)))), False), 1, compare_blocks_rows))
or_(and_(and_(le(_if_then_else(True, 3, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, max_col_clue)), ge(_if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(False, 4, zeros_diff_rows))), or_(and_(and_(True, False), ge(4, 62)), ge(_if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 12, 27)))), le(_if_then_else(or_(or_(False, False), and_(False, True)), _if_then_else(or_(False, True), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 0, 3)), _if_then_else(ge(compare_blocks_rows, 1), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, compare_blocks_rows, 1))), _if_then_else(and_(le(max_row_clue, max_col_clue), le(-84, 0)), _if_then_else(ge(4, ones_diff_rows), _if_then_else(le(_if_then_else(False, max_row_clue, ones_diff_rows), _if_then_else(True, _if_then_else(True, compare_blocks_cols, compare_blocks_cols), ones_diff_cols)), 22, 2), _if_then_else(True, compare_blocks_cols, 4)), _if_then_else(ge(ones_diff_cols, 1), _if_then_else(True, 4, 0), _if_then_else(False, 1, 2)))))
ge(_if_then_else(le(zeros_diff_cols, max_col_clue), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, 3)), _if_then_else(or_(False, False), _if_then_else(False, max_col_clue, 3), _if_then_else(True, 0, ones_diff_cols)))
VAL TREES:
add(mul(5, zeros_diff_cols), add(ones_diff_cols, zeros_diff_cols))
mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, add(zeros_diff_rows, zeros_diff_cols)))
mul(mul(mul(add(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), add(add(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), mul(add(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), mul(add(-65, 87), add(compare_blocks_rows, 47))))
add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, 65))
mul(mul(zeros_diff_rows, add(compare_blocks_cols, mul(ones_diff_cols, zeros_diff_rows))), mul(-18, compare_blocks_cols))
add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols))
COND TREES:
ge(_if_then_else(or_(or_(and_(False, True), and_(False, True)), le(_if_then_else(False, max_col_clue, 1), _if_then_else(False, 0, max_col_clue))), _if_then_else(or_(le(0, compare_blocks_rows), or_(False, True)), _if_then_else(ge(ones_diff_rows, max_col_clue), _if_then_else(False, 95, compare_blocks_cols), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, 0, zeros_diff_cols))), _if_then_else(or_(or_(True, False), ge(zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(True, 1, 2), _if_then_else(True, zeros_diff_rows, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 0), _if_then_else(True, 1, 2)), le(_if_then_else(False, zeros_diff_rows, _if_then_else(le(ones_diff_rows, compare_blocks_cols), _if_then_else(False, 1, max_col_clue), _if_then_else(False, 45, 2))), _if_then_else(False, 2, 19))), 2, _if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(True, _if_then_else(False, 3, 3), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(ge(zeros_diff_cols, 2), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(True, 1, compare_blocks_rows)))))
le(_if_then_else(and_(ge(_if_then_else(le(zeros_diff_cols, compare_blocks_cols), _if_then_else(False, ones_diff_rows, max_col_clue), _if_then_else(False, 34, zeros_diff_cols)), _if_then_else(ge(compare_blocks_cols, max_row_clue), _if_then_else(True, ones_diff_rows, max_col_clue), _if_then_else(True, max_row_clue, compare_blocks_rows))), or_(and_(ge(max_col_clue, max_row_clue), le(4, ones_diff_rows)), le(_if_then_else(True, 3, compare_blocks_rows), _if_then_else(True, 3, 2)))), _if_then_else(or_(or_(le(4, max_col_clue), and_(True, False)), and_(ge(max_row_clue, max_row_clue), le(0, 2))), _if_then_else(or_(le(max_row_clue, 4), or_(True, False)), _if_then_else(or_(True, False), _if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(True, 1, zeros_diff_rows)), _if_then_else(le(zeros_diff_cols, 0), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, ones_diff_rows, compare_blocks_cols))), _if_then_else(or_(or_(False, True), ge(2, 0)), _if_then_else(ge(ones_diff_cols, 2), _if_then_else(False, 2, max_row_clue), _if_then_else(False, -80, max_col_clue)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(False, zeros_diff_cols, ones_diff_rows), _if_then_else(True, 1, 4)))), _if_then_else(or_(ge(_if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, ones_diff_rows, 3)), and_(ge(ones_diff_rows, max_row_clue), ge(zeros_diff_cols, 2))), _if_then_else(ge(_if_then_else(True, 1, 2), _if_then_else(False, max_row_clue, zeros_diff_rows)), _if_then_else(le(0, max_col_clue), _if_then_else(True, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)), _if_then_else(and_(False, False), _if_then_else(False, 0, max_row_clue), _if_then_else(True, compare_blocks_rows, max_col_clue))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, 0, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(True, ones_diff_rows, 2), _if_then_else(True, max_row_clue, zeros_diff_rows)), _if_then_else(le(1, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(True, compare_blocks_cols, 4))))), _if_then_else(False, ones_diff_rows, zeros_diff_cols))
or_(and_(or_(False, False), False), ge(compare_blocks_rows, _if_then_else(ge(_if_then_else(ge(_if_then_else(True, max_row_clue, ones_diff_cols), _if_then_else(False, ones_diff_cols, max_row_clue)), _if_then_else(True, 3, _if_then_else(ge(20, 91), max_col_clue, 3)), ones_diff_cols), _if_then_else(True, _if_then_else(True, 1, compare_blocks_rows), compare_blocks_cols)), compare_blocks_rows, ones_diff_rows)))
and_(ge(_if_then_else(or_(and_(True, False), ge(_if_then_else(ge(ones_diff_cols, 4), _if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, max_row_clue, 4)), compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols)), _if_then_else(True, _if_then_else(True, 2, 2), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), _if_then_else(or_(or_(True, False), and_(True, True)), _if_then_else(and_(le(0, 4), True), _if_then_else(True, max_row_clue, 1), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(max_col_clue, 4), _if_then_else(True, ones_diff_cols, 0), _if_then_else(False, 95, ones_diff_rows)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, -99, 3)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(-96, 3), _if_then_else(True, 2, ones_diff_cols), _if_then_else(False, 0, -87))), _if_then_else(ge(_if_then_else(False, -1, 3), max_row_clue), _if_then_else(ge(compare_blocks_rows, max_row_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, max_col_clue, 99)))))
or_(or_(ge(_if_then_else(True, 0, zeros_diff_rows), _if_then_else(True, 4, 38)), False), True)
VAL TREES:
add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows))
add(add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(-82, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))))
mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_cols, ones_diff_rows))
add(add(ones_diff_rows, 58), mul(ones_diff_cols, -22))
add(add(compare_blocks_rows, ones_diff_cols), add(add(compare_blocks_rows, compare_blocks_rows), mul(19, compare_blocks_cols)))
COND TREES:
ge(zeros_diff_rows, ones_diff_rows)
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(and_(False, True), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, compare_blocks_cols, 1))), _if_then_else(and_(False, or_(False, False)), ones_diff_rows, _if_then_else(le(_if_then_else(and_(False, True), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, 0, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(True, 2, max_col_clue), _if_then_else(False, ones_diff_cols, max_row_clue))), _if_then_else(or_(True, False), _if_then_else(False, 0, 3), _if_then_else(True, max_col_clue, 4)), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(zeros_diff_rows, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(True, max_col_clue, max_col_clue)), or_(or_(False, True), and_(False, True)))))
ge(_if_then_else(le(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, 0, ones_diff_cols), _if_then_else(True, zeros_diff_cols, ones_diff_rows)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(False, 1, -25))), _if_then_else(or_(le(compare_blocks_rows, compare_blocks_rows), and_(True, False)), _if_then_else(or_(True, False), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(True, 0, ones_diff_cols), _if_then_else(True, 41, compare_blocks_cols))))
or_(or_(True, False), False)
and_(and_(ge(_if_then_else(or_(False, False), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(False, 1, 2)), _if_then_else(or_(False, False), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, 2, compare_blocks_rows))), or_(and_(le(compare_blocks_cols, ones_diff_rows), le(-68, 3)), le(_if_then_else(False, zeros_diff_rows, zeros_diff_cols), _if_then_else(True, 0, ones_diff_rows)))), True)
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
ge(1, _if_then_else(True, ones_diff_rows, -18))
and_(ge(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 1))), _if_then_else(and_(and_(True, True), or_(False, True)), _if_then_else(or_(True, True), _if_then_else(True, 4, 51), _if_then_else(True, 0, -78)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), True))
and_(ge(_if_then_else(True, -82, ones_diff_rows), _if_then_else(ge(max_col_clue, ones_diff_cols), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, 2, ones_diff_rows))), and_(and_(ge(zeros_diff_rows, ones_diff_rows), and_(False, False)), False))
or_(or_(False, le(_if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(True, zeros_diff_rows, max_col_clue))), or_(True, False))
and_(or_(ge(zeros_diff_cols, _if_then_else(or_(or_(le(_if_then_else(True, max_col_clue, max_col_clue), _if_then_else(False, max_row_clue, 48)), or_(le(85, ones_diff_cols), le(max_col_clue, 0))), or_(ge(_if_then_else(True, -38, 2), _if_then_else(False, ones_diff_rows, 2)), or_(or_(True, False), or_(True, True)))), _if_then_else(le(_if_then_else(le(2, 1), _if_then_else(False, max_col_clue, 2), _if_then_else(False, 4, 0)), _if_then_else(ge(0, 2), _if_then_else(True, zeros_diff_rows, 2), _if_then_else(False, zeros_diff_rows, zeros_diff_rows))), _if_then_else(ge(_if_then_else(False, 0, 2), _if_then_else(True, 1, compare_blocks_rows)), _if_then_else(le(-48, 2), _if_then_else(False, 0, ones_diff_cols), _if_then_else(False, 41, 3)), _if_then_else(and_(False, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, compare_blocks_cols, -6))), _if_then_else(le(_if_then_else(True, max_row_clue, 3), _if_then_else(True, 4, 4)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, 4), _if_then_else(False, 4, max_col_clue)), _if_then_else(ge(1, 4), _if_then_else(False, compare_blocks_rows, 1), _if_then_else(True, 3, max_row_clue)))), _if_then_else(and_(ge(_if_then_else(False, ones_diff_rows, max_col_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)), ge(_if_then_else(False, zeros_diff_rows, ones_diff_cols), _if_then_else(True, 0, max_col_clue))), _if_then_else(and_(or_(False, False), or_(True, True)), _if_then_else(and_(False, True), _if_then_else(True, 4, max_row_clue), _if_then_else(False, compare_blocks_rows, -70)), _if_then_else(le(0, 3), _if_then_else(True, -4, ones_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_cols))), _if_then_else(le(_if_then_else(False, max_row_clue, ones_diff_rows), _if_then_else(True, max_col_clue, ones_diff_cols)), _if_then_else(le(3, max_col_clue), _if_then_else(True, 2, ones_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_cols)), _if_then_else(ge(3, 1), _if_then_else(False, compare_blocks_cols, -36), _if_then_else(False, ones_diff_cols, max_col_clue)))))), False), True)
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
ge(2, _if_then_else(True, 1, _if_then_else(False, 4, _if_then_else(or_(ge(_if_then_else(ge(2, 2), _if_then_else(False, compare_blocks_rows, max_col_clue), _if_then_else(False, zeros_diff_cols, max_row_clue)), _if_then_else(and_(True, False), _if_then_else(False, max_row_clue, 3), _if_then_else(True, max_row_clue, max_row_clue))), and_(or_(or_(True, True), and_(False, True)), and_(or_(True, False), ge(zeros_diff_rows, compare_blocks_rows)))), _if_then_else(and_(or_(ge(33, 2), le(1, compare_blocks_rows)), or_(le(3, max_row_clue), and_(False, False))), _if_then_else(ge(_if_then_else(False, 3, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 2)), _if_then_else(ge(compare_blocks_cols, -83), _if_then_else(True, -79, 4), _if_then_else(False, compare_blocks_rows, max_row_clue)), _if_then_else(le(1, 4), _if_then_else(False, ones_diff_cols, zeros_diff_rows), _if_then_else(True, 1, zeros_diff_cols))), _if_then_else(le(_if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, 1, zeros_diff_rows)), _if_then_else(ge(max_row_clue, compare_blocks_rows), _if_then_else(True, -58, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows)), _if_then_else(and_(True, False), _if_then_else(False, max_row_clue, 3), _if_then_else(True, 0, ones_diff_cols)))), _if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, max_row_clue, 2), _if_then_else(False, max_row_clue, 3)), _if_then_else(ge(ones_diff_rows, ones_diff_rows), _if_then_else(False, 1, 1), _if_then_else(False, max_col_clue, 3))), _if_then_else(or_(and_(True, False), and_(True, False)), _if_then_else(or_(True, True), _if_then_else(False, 0, 4), _if_then_else(False, 1, ones_diff_rows)), _if_then_else(le(compare_blocks_rows, zeros_diff_rows), _if_then_else(True, 3, max_col_clue), _if_then_else(False, max_row_clue, zeros_diff_rows))), _if_then_else(ge(_if_then_else(True, 4, 3), _if_then_else(False, ones_diff_rows, max_row_clue)), _if_then_else(le(zeros_diff_cols, zeros_diff_cols), _if_then_else(True, -16, 1), _if_then_else(False, 0, ones_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, max_row_clue, compare_blocks_cols))))))))
or_(or_(True, ge(_if_then_else(False, 3, ones_diff_cols), _if_then_else(False, compare_blocks_rows, 3))), and_(False, False))
le(3, _if_then_else(False, -69, compare_blocks_cols))
ge(_if_then_else(True, zeros_diff_rows, 0), _if_then_else(True, _if_then_else(False, 1, ones_diff_rows), zeros_diff_rows))
le(_if_then_else(le(2, max_row_clue), compare_blocks_cols, zeros_diff_cols), _if_then_else(or_(and_(or_(False, True), le(3, 2)), le(_if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_cols, 1))), _if_then_else(or_(le(zeros_diff_cols, zeros_diff_cols), or_(False, False)), _if_then_else(and_(True, False), _if_then_else(True, max_row_clue, max_col_clue), _if_then_else(True, zeros_diff_rows, 2)), _if_then_else(ge(max_col_clue, ones_diff_rows), _if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(True, zeros_diff_rows, 2))), _if_then_else(ge(_if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(False, 4, 4)), _if_then_else(le(ones_diff_rows, zeros_diff_rows), _if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(True, 0, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, compare_blocks_cols, max_col_clue), _if_then_else(False, zeros_diff_rows, ones_diff_cols)))))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(2, _if_then_else(ge(ones_diff_rows, max_row_clue), 1, zeros_diff_rows))
or_(ge(zeros_diff_cols, compare_blocks_cols), and_(True, and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False)))))
le(_if_then_else(True, -82, ones_diff_rows), _if_then_else(True, -69, compare_blocks_cols))
ge(_if_then_else(False, zeros_diff_rows, 0), _if_then_else(True, _if_then_else(True, max_row_clue, max_row_clue), zeros_diff_rows))
le(1, 3)
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(_if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(False, ones_diff_rows, 0))
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, compare_blocks_cols, 1))), _if_then_else(and_(False, or_(False, False)), _if_then_else(or_(True, True), _if_then_else(True, 4, 51), _if_then_else(True, 0, -78)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(True, and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(True, max_col_clue, max_col_clue)), or_(or_(False, True), True))))
and_(ge(_if_then_else(True, 4, zeros_diff_cols), compare_blocks_cols), and_(True, True))
or_(or_(False, and_(le(0, 0), True)), or_(True, False))
and_(or_(False, False), False)
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
ge(1, _if_then_else(True, _if_then_else(or_(le(0, compare_blocks_rows), or_(False, True)), _if_then_else(ge(ones_diff_rows, max_col_clue), _if_then_else(False, 95, compare_blocks_cols), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(ge(zeros_diff_cols, compare_blocks_cols), _if_then_else(False, 0, max_col_clue), _if_then_else(False, 4, zeros_diff_rows)))), -18))
and_(ge(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 1))), _if_then_else(and_(and_(True, True), or_(False, False)), _if_then_else(or_(True, True), _if_then_else(True, 4, 51), _if_then_else(True, 0, -78)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(False, True))
and_(ge(3, compare_blocks_cols), and_(and_(ge(zeros_diff_rows, ones_diff_rows), and_(and_(True, False), False)), False))
or_(True, or_(True, False))
and_(or_(ge(zeros_diff_cols, 3), False), le(2, max_row_clue))
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), add(add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)))), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, mul(add(mul(mul(ones_diff_rows, compare_blocks_cols), mul(ones_diff_cols, ones_diff_rows)), mul(mul(ones_diff_cols, -81), add(-21, ones_diff_rows))), add(add(add(-86, 70), add(ones_diff_rows, zeros_diff_rows)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))))), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
ge(_if_then_else(or_(or_(and_(False, True), and_(False, True)), le(_if_then_else(False, max_col_clue, 1), _if_then_else(False, 0, max_col_clue))), ones_diff_rows, _if_then_else(or_(or_(True, False), ge(zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(True, 1, 2), _if_then_else(True, zeros_diff_rows, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 0), _if_then_else(True, 1, 2)), le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 19))), _if_then_else(or_(le(ones_diff_rows, zeros_diff_cols), and_(True, True)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 0, 1)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, 4, max_row_clue))), _if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(True, _if_then_else(False, 3, 3), _if_then_else(True, 1, max_col_clue)), _if_then_else(ge(zeros_diff_cols, 2), 1, _if_then_else(True, 1, compare_blocks_rows)))))
le(_if_then_else(True, zeros_diff_cols, 4), _if_then_else(and_(or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(False, True)), True), ones_diff_rows, 4))
or_(False, ge(ones_diff_rows, zeros_diff_cols))
and_(ge(_if_then_else(or_(and_(True, False), ge(compare_blocks_cols, compare_blocks_rows)), _if_then_else(and_(True, or_(False, True)), _if_then_else(False, _if_then_else(True, 5, zeros_diff_rows), ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 2, 2), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), _if_then_else(False, _if_then_else(and_(False, True), _if_then_else(False, max_row_clue, 1), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(max_col_clue, 4), _if_then_else(True, ones_diff_cols, 0), _if_then_else(False, 95, ones_diff_rows)))), ge(_if_then_else(ge(4, _if_then_else(True, -99, 3)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, _if_then_else(False, zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(-96, 3), _if_then_else(True, 2, ones_diff_cols), _if_then_else(False, 0, -87))), _if_then_else(ge(_if_then_else(False, -1, 3), _if_then_else(True, 1, max_row_clue)), _if_then_else(True, _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, max_col_clue, 99)))))
or_(and_(False, True), and_(False, False))
VAL TREES:
add(add(add(ones_diff_rows, mul(zeros_diff_cols, ones_diff_rows)), mul(zeros_diff_cols, zeros_diff_cols)), add(ones_diff_cols, ones_diff_cols))
mul(mul(mul(add(mul(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_cols, ones_diff_cols)), add(add(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows))
add(add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(-82, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))))
mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_cols, ones_diff_rows))
add(add(ones_diff_rows, 58), mul(ones_diff_cols, add(mul(ones_diff_rows, -49), add(ones_diff_rows, compare_blocks_rows))))
add(add(compare_blocks_rows, ones_diff_cols), add(add(compare_blocks_rows, compare_blocks_rows), mul(19, compare_blocks_cols)))
COND TREES:
le(_if_then_else(False, 1, 3), 0)
ge(_if_then_else(ge(compare_blocks_cols, zeros_diff_cols), 1, -11), _if_then_else(ge(compare_blocks_cols, zeros_diff_cols), _if_then_else(ge(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 1))), _if_then_else(and_(and_(True, True), or_(False, False)), _if_then_else(or_(le(1, zeros_diff_rows), and_(True, False)), _if_then_else(True, 4, 51), _if_then_else(True, 0, -78)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, _if_then_else(True, compare_blocks_cols, 1), compare_blocks_rows)))), 1, ones_diff_cols), _if_then_else(False, max_row_clue, 4)))
le(3, _if_then_else(False, _if_then_else(False, compare_blocks_cols, zeros_diff_rows), 4))
and_(True, or_(True, True))
or_(ge(_if_then_else(True, 4, _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(False, 3, _if_then_else(False, ones_diff_rows, max_col_clue))), False)
VAL TREES:
mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols))
add(add(ones_diff_cols, zeros_diff_cols), add(91, zeros_diff_rows))
add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, mul(zeros_diff_cols, -23)))
mul(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, -72))
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(38, ones_diff_rows)))
add(add(mul(add(ones_diff_rows, ones_diff_rows), mul(-70, ones_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_cols, 4))), add(add(add(compare_blocks_rows, ones_diff_rows), add(-86, compare_blocks_rows)), mul(mul(-86, compare_blocks_cols), add(ones_diff_cols, zeros_diff_cols))))
COND TREES:
ge(1, _if_then_else(True, ones_diff_rows, zeros_diff_rows))
and_(True, or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), True))
and_(ge(3, compare_blocks_cols), and_(and_(ge(zeros_diff_rows, 0), le(3, _if_then_else(True, _if_then_else(True, 4, ones_diff_rows), 4))), ge(2, _if_then_else(True, 4, compare_blocks_cols))))
or_(or_(True, False), le(0, 1))
and_(or_(and_(and_(True, True), or_(False, False)), False), True)
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(add(mul(add(add(mul(ones_diff_rows, ones_diff_rows), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_rows), add(ones_diff_rows, compare_blocks_rows))), mul(mul(mul(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_cols, 86)), mul(add(-57, ones_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)))), add(mul(add(add(zeros_diff_cols, 88), add(zeros_diff_cols, compare_blocks_rows)), add(add(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_rows))), mul(add(mul(ones_diff_cols, ones_diff_rows), add(compare_blocks_rows, ones_diff_cols)), add(add(compare_blocks_cols, 53), add(ones_diff_rows, zeros_diff_cols))))), ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, add(mul(ones_diff_rows, zeros_diff_rows), add(-97, compare_blocks_rows))), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(add(add(mul(add(add(compare_blocks_rows, ones_diff_rows), add(compare_blocks_rows, ones_diff_rows)), add(mul(ones_diff_rows, compare_blocks_cols), add(ones_diff_cols, compare_blocks_cols))), mul(mul(mul(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_rows, -93)), mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_cols)))), mul(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(26, compare_blocks_rows)), add(mul(68, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))), add(mul(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, -13)), mul(mul(compare_blocks_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_rows))))), mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(add(add(ones_diff_rows, ones_diff_cols), mul(ones_diff_rows, -47)), zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, mul(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_cols, ones_diff_cols))))
COND TREES:
ge(1, _if_then_else(or_(or_(and_(False, True), and_(False, True)), le(_if_then_else(False, max_col_clue, 1), _if_then_else(True, compare_blocks_cols, compare_blocks_cols))), ones_diff_rows, -18))
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 1))), _if_then_else(and_(and_(True, True), or_(False, False)), _if_then_else(or_(True, True), _if_then_else(True, 4, 51), _if_then_else(True, 0, -78)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, 1)))), or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(True, max_col_clue, max_col_clue)), or_(or_(False, True), and_(False, True)))))
and_(ge(3, 4), and_(True, True))
or_(or_(True, True), or_(False, True))
and_(or_(False, False), False)
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
or_(True, ge(4, _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 0, 1))))
and_(or_(False, True), le(_if_then_else(False, compare_blocks_rows, zeros_diff_rows), 4))
or_(or_(and_(False, False), ge(_if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, compare_blocks_cols, 4))), True)
or_(or_(ge(compare_blocks_cols, compare_blocks_rows), ge(ones_diff_cols, 0)), and_(or_(True, True), ge(1, 0)))
le(_if_then_else(and_(ge(_if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 32, max_row_clue)), or_(or_(False, False), le(zeros_diff_rows, ones_diff_cols))), _if_then_else(le(_if_then_else(True, ones_diff_cols, 1), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 4, 4)), _if_then_else(and_(False, True), _if_then_else(False, 2, 0), _if_then_else(True, compare_blocks_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(False, 0, zeros_diff_cols), _if_then_else(False, 1, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, 1), _if_then_else(False, 3, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, compare_blocks_cols), _if_then_else(False, max_row_clue, ones_diff_rows)))), _if_then_else(or_(or_(and_(True, False), le(zeros_diff_cols, 0)), le(3, _if_then_else(True, 0, 3))), _if_then_else(le(_if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(and_(True, False), _if_then_else(True, 4, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(or_(or_(False, False), ge(4, zeros_diff_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 12), _if_then_else(False, 0, _if_then_else(True, 2, 4))), _if_then_else(le(3, zeros_diff_cols), _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, max_row_clue)))))
VAL TREES:
add(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, -27))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(93, add(compare_blocks_cols, compare_blocks_rows)))
mul(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(compare_blocks_cols, compare_blocks_cols), mul(86, 20))
add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, -88))
add(add(ones_diff_cols, compare_blocks_cols), add(-26, compare_blocks_cols))
COND TREES:
ge(_if_then_else(False, compare_blocks_rows, _if_then_else(ge(0, 1), _if_then_else(True, 1, 78), _if_then_else(False, compare_blocks_rows, 0))), _if_then_else(False, ones_diff_rows, zeros_diff_rows))
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), 4), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(3, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, compare_blocks_cols, 1))), _if_then_else(and_(False, or_(False, False)), _if_then_else(or_(True, True), _if_then_else(True, 4, 51), _if_then_else(True, 0, -78)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(False, compare_blocks_cols, max_col_clue)), or_(or_(False, True), True))))
and_(ge(2, _if_then_else(ge(max_col_clue, 4), _if_then_else(False, 0, 4), _if_then_else(True, 1, compare_blocks_cols))), True)
or_(or_(False, and_(le(_if_then_else(ge(3, _if_then_else(le(_if_then_else(ge(max_row_clue, 1), _if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 1)), _if_then_else(ge(89, 2), _if_then_else(True, 57, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 1))), _if_then_else(or_(le(ones_diff_cols, compare_blocks_cols), le(ones_diff_rows, max_row_clue)), _if_then_else(or_(True, True), _if_then_else(False, compare_blocks_rows, 2), _if_then_else(True, 0, zeros_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, 2, -14), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), _if_then_else(le(_if_then_else(False, zeros_diff_cols, 3), _if_then_else(True, compare_blocks_rows, max_col_clue)), _if_then_else(le(2, 3), _if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(True, 1, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 3, ones_diff_cols))))), _if_then_else(False, compare_blocks_rows, max_col_clue), _if_then_else(False, zeros_diff_cols, 1)), max_col_clue), True)), or_(False, False))
and_(True, le(2, compare_blocks_rows))
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(add(mul(mul(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, 24), mul(compare_blocks_rows, ones_diff_cols))), zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, add(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows))))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(add(mul(mul(ones_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols)), add(mul(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), ones_diff_rows))
COND TREES:
ge(_if_then_else(True, ones_diff_rows, compare_blocks_cols), _if_then_else(True, ones_diff_rows, 2))
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), zeros_diff_cols, _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 1))), _if_then_else(and_(and_(True, True), or_(False, False)), _if_then_else(or_(True, True), _if_then_else(True, 4, 51), _if_then_else(True, 0, -78)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(True, max_col_clue, max_col_clue)), or_(or_(False, True), and_(False, True)))))
and_(ge(3, _if_then_else(True, compare_blocks_cols, 0)), False)
or_(or_(and_(True, False), ge(zeros_diff_cols, compare_blocks_rows)), False)
and_(or_(False, False), le(max_col_clue, 95))
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
or_(True, ge(_if_then_else(True, max_col_clue, _if_then_else(False, 2, compare_blocks_cols)), max_col_clue))
and_(or_(False, False), False)
or_(True, True)
or_(or_(and_(False, True), ge(zeros_diff_rows, 0)), and_(or_(True, False), le(4, compare_blocks_cols)))
or_(True, False)
VAL TREES:
add(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, -27))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(93, add(compare_blocks_cols, compare_blocks_rows)))
mul(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(compare_blocks_cols, compare_blocks_cols), mul(86, 20))
add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, -88))
add(add(ones_diff_cols, compare_blocks_cols), add(-26, compare_blocks_cols))
COND TREES:
ge(2, _if_then_else(False, 1, _if_then_else(False, 4, zeros_diff_rows)))
or_(True, and_(True, True))
le(_if_then_else(False, -82, ones_diff_rows), _if_then_else(True, _if_then_else(True, 1, 0), compare_blocks_cols))
ge(_if_then_else(ge(4, 62), zeros_diff_rows, 0), compare_blocks_cols)
le(1, _if_then_else(or_(le(2, max_row_clue), True), _if_then_else(False, 2, 2), 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(2, _if_then_else(ge(_if_then_else(True, max_col_clue, _if_then_else(False, 2, compare_blocks_cols)), max_col_clue), 1, _if_then_else(False, 4, zeros_diff_rows)))
or_(True, and_(False, True))
le(_if_then_else(False, -82, ones_diff_rows), _if_then_else(True, _if_then_else(True, 1, 0), compare_blocks_cols))
ge(_if_then_else(ge(4, 62), zeros_diff_rows, 0), compare_blocks_cols)
le(1, _if_then_else(or_(False, True), _if_then_else(False, 2, 2), 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
or_(True, ge(_if_then_else(or_(ge(max_row_clue, compare_blocks_rows), or_(True, False)), _if_then_else(or_(False, True), _if_then_else(True, 0, 0), _if_then_else(True, ones_diff_rows, zeros_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, max_row_clue, compare_blocks_rows), _if_then_else(False, -42, 4))), _if_then_else(or_(le(compare_blocks_rows, 4), le(compare_blocks_cols, max_col_clue)), _if_then_else(ge(2, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, max_col_clue), _if_then_else(True, zeros_diff_rows, 0)), _if_then_else(or_(True, le(1, ones_diff_rows)), _if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 4, ones_diff_rows)))))
or_(and_(True, and_(ge(_if_then_else(True, max_row_clue, max_col_clue), -33), True)), False)
ge(0, _if_then_else(or_(False, True), max_row_clue, _if_then_else(False, 0, max_row_clue)))
ge(_if_then_else(le(_if_then_else(or_(and_(ge(_if_then_else(or_(and_(True, True), or_(True, True)), _if_then_else(or_(True, True), _if_then_else(True, 3, max_col_clue), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(or_(False, True), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 0, 2))), _if_then_else(or_(and_(False, False), and_(True, True)), _if_then_else(and_(True, False), _if_then_else(True, 3, zeros_diff_rows), _if_then_else(False, 63, compare_blocks_cols)), _if_then_else(ge(1, compare_blocks_rows), _if_then_else(False, 0, 2), _if_then_else(True, zeros_diff_rows, compare_blocks_rows)))), and_(le(_if_then_else(le(4, zeros_diff_cols), _if_then_else(True, 3, compare_blocks_cols), _if_then_else(False, 8, 3)), _if_then_else(or_(True, False), _if_then_else(True, 36, max_row_clue), _if_then_else(ge(1, 0), compare_blocks_rows, 0))), ge(_if_then_else(le(max_row_clue, ones_diff_rows), _if_then_else(False, 3, 1), _if_then_else(False, zeros_diff_rows, 2)), _if_then_else(le(ones_diff_cols, max_col_clue), _if_then_else(True, zeros_diff_cols, 2), _if_then_else(True, 40, 0))))), False), zeros_diff_rows, ones_diff_rows), _if_then_else(False, 1, zeros_diff_cols)), _if_then_else(ge(1, 0), _if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(False, max_col_clue, max_col_clue)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, max_row_clue, 0))), _if_then_else(and_(ge(1, 0), or_(True, True)), _if_then_else(ge(0, 1), _if_then_else(True, 0, 0), _if_then_else(True, 1, ones_diff_cols)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(False, compare_blocks_rows, zeros_diff_cols))))
ge(_if_then_else(and_(False, False), 2, ones_diff_rows), _if_then_else(False, max_row_clue, 1))
VAL TREES:
mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_rows))
mul(add(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, mul(add(mul(-62, ones_diff_rows), ones_diff_cols), mul(add(compare_blocks_cols, -98), ones_diff_cols))))
mul(mul(mul(add(ones_diff_cols, -19), mul(zeros_diff_cols, zeros_diff_rows)), add(ones_diff_cols, 8)), add(mul(zeros_diff_rows, zeros_diff_cols), add(51, ones_diff_rows)))
add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, -46)), mul(add(mul(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), add(compare_blocks_rows, zeros_diff_rows)))
add(add(add(mul(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_cols))), mul(mul(add(add(mul(20, compare_blocks_cols), mul(ones_diff_rows, ones_diff_rows)), mul(add(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, zeros_diff_cols))), add(zeros_diff_rows, zeros_diff_rows)), mul(mul(83, -28), mul(-88, zeros_diff_cols)))), add(mul(mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, -3)), mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, ones_diff_rows))), add(add(mul(ones_diff_cols, ones_diff_rows), mul(-67, ones_diff_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_cols)))))
mul(add(add(zeros_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), mul(ones_diff_rows, ones_diff_rows))
COND TREES:
ge(_if_then_else(or_(False, le(_if_then_else(False, max_col_clue, 1), _if_then_else(False, 0, max_col_clue))), _if_then_else(or_(le(0, compare_blocks_rows), or_(False, True)), _if_then_else(ge(ones_diff_rows, max_col_clue), _if_then_else(False, 95, compare_blocks_cols), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, 0, zeros_diff_cols))), _if_then_else(or_(or_(True, False), ge(zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(True, 1, 2), _if_then_else(True, zeros_diff_rows, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 0), _if_then_else(True, 1, 2)), le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 19))), _if_then_else(and_(and_(False, True), and_(True, le(0, 0))), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 0, 1)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, 4, max_row_clue))), _if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(1, 3), _if_then_else(False, 3, 3), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(ge(zeros_diff_cols, 2), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(True, 1, compare_blocks_rows)))))
le(_if_then_else(True, zeros_diff_cols, 4), _if_then_else(ge(ones_diff_rows, _if_then_else(and_(True, True), compare_blocks_cols, max_col_clue)), ones_diff_rows, zeros_diff_cols))
le(_if_then_else(True, ones_diff_cols, ones_diff_cols), _if_then_else(and_(True, False), _if_then_else(True, _if_then_else(False, 3, max_col_clue), compare_blocks_rows), zeros_diff_cols))
and_(ge(_if_then_else(or_(and_(True, False), ge(compare_blocks_cols, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 2, 2), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), _if_then_else(or_(or_(True, False), and_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, max_row_clue, 1), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(max_col_clue, 4), _if_then_else(True, ones_diff_cols, 0), _if_then_else(False, 95, ones_diff_rows)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, -99, 3)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(-96, 3), _if_then_else(True, 2, ones_diff_cols), _if_then_else(False, _if_then_else(and_(False, True), _if_then_else(False, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, max_col_clue)), -87))), _if_then_else(ge(_if_then_else(False, -1, 3), _if_then_else(True, 1, max_row_clue)), _if_then_else(ge(compare_blocks_rows, max_row_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, max_col_clue, 99)))))
or_(and_(False, True), or_(le(_if_then_else(or_(ge(zeros_diff_cols, 1), ge(compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(True, compare_blocks_rows, -16), _if_then_else(False, ones_diff_rows, -47)), _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, compare_blocks_rows))), _if_then_else(and_(le(-3, 3), ge(zeros_diff_rows, 3)), _if_then_else(or_(True, False), _if_then_else(True, max_col_clue, 3), _if_then_else(False, ones_diff_rows, zeros_diff_cols)), _if_then_else(le(0, compare_blocks_rows), _if_then_else(False, ones_diff_cols, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, 3)))), and_(or_(or_(and_(True, True), or_(False, True)), or_(and_(True, False), ge(ones_diff_rows, 2))), and_(ge(_if_then_else(True, 91, 0), _if_then_else(True, 1, 2)), or_(or_(False, True), or_(False, True))))))
VAL TREES:
add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows))
add(add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(-82, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))))
mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_cols, ones_diff_rows))
add(add(ones_diff_rows, 58), mul(ones_diff_cols, -22))
add(add(compare_blocks_rows, ones_diff_cols), add(add(compare_blocks_rows, compare_blocks_rows), mul(19, compare_blocks_cols)))
COND TREES:
ge(_if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), 3, 3), _if_then_else(False, 4, _if_then_else(True, ones_diff_rows, 0)))
or_(and_(le(_if_then_else(True, 2, compare_blocks_rows), _if_then_else(True, max_row_clue, zeros_diff_rows)), True), or_(True, True))
ge(_if_then_else(False, ones_diff_rows, 1), _if_then_else(and_(True, False), 1, compare_blocks_rows))
or_(and_(and_(le(_if_then_else(True, 3, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, max_col_clue)), ge(_if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(False, 4, zeros_diff_rows))), or_(and_(and_(True, False), ge(4, 62)), ge(_if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 12, 27)))), le(_if_then_else(or_(or_(False, False), and_(False, True)), _if_then_else(or_(False, True), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 0, 3)), _if_then_else(ge(compare_blocks_rows, 1), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, compare_blocks_rows, 1))), _if_then_else(and_(le(max_row_clue, max_col_clue), le(-84, 0)), _if_then_else(ge(4, ones_diff_rows), _if_then_else(False, 22, 2), _if_then_else(True, compare_blocks_cols, 4)), _if_then_else(ge(ones_diff_cols, 1), _if_then_else(True, 4, 0), _if_then_else(False, 1, 2)))))
ge(_if_then_else(le(zeros_diff_cols, max_col_clue), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, 3)), _if_then_else(or_(False, False), _if_then_else(False, max_col_clue, 3), _if_then_else(True, 0, ones_diff_cols)))
VAL TREES:
add(mul(5, zeros_diff_cols), add(ones_diff_cols, zeros_diff_cols))
mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, add(zeros_diff_rows, zeros_diff_cols)))
mul(mul(mul(add(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), add(add(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), mul(add(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), mul(add(-65, 87), add(compare_blocks_rows, 47))))
add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, 65))
mul(mul(zeros_diff_rows, add(compare_blocks_cols, mul(ones_diff_cols, zeros_diff_rows))), mul(-18, compare_blocks_cols))
add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols))
COND TREES:
or_(True, ge(-18, 4))
and_(or_(True, False), le(compare_blocks_cols, _if_then_else(False, zeros_diff_cols, 3)))
or_(or_(False, True), True)
or_(le(3, 4), and_(or_(True, False), le(4, -1)))
or_(True, le(2, max_row_clue))
VAL TREES:
add(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, -27))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(93, add(compare_blocks_cols, compare_blocks_rows)))
mul(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(compare_blocks_cols, compare_blocks_cols), mul(86, 20))
add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, -88))
add(add(ones_diff_cols, compare_blocks_cols), add(-26, compare_blocks_cols))
COND TREES:
ge(2, _if_then_else(ge(_if_then_else(and_(False, True), 4, 3), _if_then_else(True, ones_diff_cols, zeros_diff_rows)), 1, _if_then_else(False, 4, zeros_diff_rows)))
or_(or_(False, and_(and_(ge(2, 1), and_(True, False)), True)), and_(False, True))
le(_if_then_else(False, _if_then_else(le(_if_then_else(and_(False, False), _if_then_else(False, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 2, compare_blocks_cols)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, max_row_clue, max_col_clue))), _if_then_else(le(_if_then_else(False, compare_blocks_rows, 64), _if_then_else(False, 4, 0)), _if_then_else(or_(True, True), _if_then_else(True, 2, ones_diff_rows), _if_then_else(True, zeros_diff_rows, max_row_clue)), _if_then_else(and_(True, False), _if_then_else(True, 1, 1), _if_then_else(False, ones_diff_rows, ones_diff_rows))), _if_then_else(and_(le(zeros_diff_rows, ones_diff_cols), le(zeros_diff_cols, max_col_clue)), _if_then_else(or_(False, True), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(False, ones_diff_rows, zeros_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, ones_diff_cols, 3)))), ones_diff_rows), _if_then_else(True, -69, compare_blocks_cols))
ge(_if_then_else(True, _if_then_else(False, _if_then_else(True, max_row_clue, zeros_diff_cols), compare_blocks_rows), 0), _if_then_else(or_(and_(False, True), ge(ones_diff_cols, 0)), _if_then_else(False, ones_diff_rows, 4), _if_then_else(False, 4, compare_blocks_rows)))
le(_if_then_else(le(_if_then_else(le(2, 1), _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(False, 3, 2)), _if_then_else(ge(4, zeros_diff_cols), _if_then_else(False, ones_diff_rows, max_col_clue), _if_then_else(False, 0, max_col_clue))), _if_then_else(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, ones_diff_cols, 38)), _if_then_else(le(ones_diff_cols, 3), _if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, compare_blocks_cols, 3)), _if_then_else(ge(max_row_clue, 3), _if_then_else(True, compare_blocks_rows, 1), _if_then_else(True, 0, zeros_diff_rows))), _if_then_else(ge(_if_then_else(False, 2, ones_diff_cols), _if_then_else(True, 98, 2)), _if_then_else(ge(1, ones_diff_cols), _if_then_else(True, max_col_clue, compare_blocks_cols), _if_then_else(True, compare_blocks_cols, 2)), _if_then_else(le(max_row_clue, 4), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(True, max_row_clue, -71)))), _if_then_else(False, 2, 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
add(add(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)), add(mul(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows)))
mul(mul(mul(zeros_diff_cols, mul(94, compare_blocks_rows)), mul(ones_diff_rows, zeros_diff_cols)), add(zeros_diff_rows, ones_diff_cols))
mul(add(mul(add(compare_blocks_cols, ones_diff_cols), add(38, ones_diff_rows)), compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(2, _if_then_else(True, 1, _if_then_else(False, 4, zeros_diff_rows)))
or_(ge(compare_blocks_rows, compare_blocks_cols), and_(ge(compare_blocks_cols, zeros_diff_cols), True))
le(_if_then_else(True, -82, 4), _if_then_else(True, -14, compare_blocks_cols))
ge(_if_then_else(or_(True, False), zeros_diff_rows, compare_blocks_rows), _if_then_else(True, _if_then_else(True, 0, max_row_clue), zeros_diff_rows))
le(_if_then_else(True, 4, _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(True, 2, 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(add(add(mul(ones_diff_rows, zeros_diff_cols), zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), ones_diff_rows))
mul(add(mul(add(add(mul(add(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_rows, -43)), mul(mul(-57, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_rows))), mul(add(mul(ones_diff_rows, -3), add(zeros_diff_cols, zeros_diff_cols)), add(mul(ones_diff_rows, -48), add(zeros_diff_cols, zeros_diff_cols)))), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(add(mul(add(2, zeros_diff_rows), add(zeros_diff_cols, ones_diff_rows)), mul(mul(-52, ones_diff_cols), mul(compare_blocks_rows, ones_diff_rows))), add(add(add(zeros_diff_rows, ones_diff_cols), mul(zeros_diff_cols, ones_diff_cols)), add(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, compare_blocks_rows)))))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), add(add(add(compare_blocks_rows, zeros_diff_rows), mul(16, ones_diff_rows)), add(add(compare_blocks_rows, 63), mul(4, zeros_diff_rows)))))
add(mul(add(ones_diff_cols, mul(add(add(add(add(zeros_diff_cols, ones_diff_cols), mul(-21, 53)), add(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows))), mul(mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_rows, ones_diff_rows)), add(mul(zeros_diff_rows, 8), mul(zeros_diff_rows, compare_blocks_rows)))), mul(add(add(add(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, 71)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows))), add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(24, zeros_diff_rows)), mul(mul(compare_blocks_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))))), mul(-47, ones_diff_cols)), add(mul(zeros_diff_cols, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_cols)))
mul(add(mul(add(add(mul(mul(mul(-26, -61), add(ones_diff_cols, zeros_diff_cols)), mul(mul(compare_blocks_cols, -14), add(ones_diff_cols, ones_diff_cols))), add(mul(add(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, zeros_diff_rows), add(ones_diff_rows, compare_blocks_rows)))), zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_cols)), compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
le(_if_then_else(False, _if_then_else(or_(False, False), _if_then_else(False, 4, 95), _if_then_else(False, 4, compare_blocks_rows)), 3), 0)
ge(_if_then_else(False, 1, -11), _if_then_else(ge(compare_blocks_cols, zeros_diff_cols), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, max_row_clue, 4)))
le(_if_then_else(True, _if_then_else(True, 4, ones_diff_rows), ones_diff_rows), _if_then_else(False, _if_then_else(False, _if_then_else(and_(ge(_if_then_else(ge(zeros_diff_rows, 66), _if_then_else(True, ones_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, -89)), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_cols, max_row_clue), _if_then_else(False, ones_diff_rows, max_col_clue))), ge(_if_then_else(and_(True, True), _if_then_else(False, -72, ones_diff_rows), _if_then_else(True, zeros_diff_rows, ones_diff_cols)), _if_then_else(ge(4, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, 0, 4)))), _if_then_else(and_(le(_if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, zeros_diff_cols)), or_(ge(compare_blocks_cols, 1), le(3, 3))), _if_then_else(le(_if_then_else(False, 4, 3), _if_then_else(False, 3, compare_blocks_cols)), _if_then_else(ge(0, 2), _if_then_else(True, max_row_clue, 2), _if_then_else(True, 4, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, compare_blocks_rows), _if_then_else(True, 1, max_row_clue))), _if_then_else(ge(_if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(False, max_row_clue, 2)), _if_then_else(or_(True, True), _if_then_else(False, max_row_clue, -20), _if_then_else(False, compare_blocks_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 98)))), _if_then_else(le(_if_then_else(ge(zeros_diff_rows, compare_blocks_cols), _if_then_else(True, max_col_clue, max_row_clue), _if_then_else(False, -90, 0)), _if_then_else(ge(max_row_clue, 1), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, max_row_clue))), _if_then_else(and_(and_(False, False), and_(False, False)), _if_then_else(le(max_row_clue, 4), _if_then_else(True, -51, 0), _if_then_else(True, compare_blocks_rows, zeros_diff_rows)), _if_then_else(and_(False, False), _if_then_else(False, 3, max_row_clue), _if_then_else(False, zeros_diff_cols, 4))), _if_then_else(ge(_if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, max_row_clue, max_col_clue)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, 88), _if_then_else(True, 2, 0)), _if_then_else(or_(False, False), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, 1))))), zeros_diff_rows), 4))
or_(le(_if_then_else(True, 3, max_col_clue), _if_then_else(True, 2, 0)), or_(ge(2, max_col_clue), ge(1, compare_blocks_cols)))
or_(le(4, 1), ge(ones_diff_rows, max_col_clue))
VAL TREES:
mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols))
add(add(ones_diff_cols, zeros_diff_cols), add(91, zeros_diff_rows))
add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, mul(zeros_diff_cols, -23)))
mul(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, -72))
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(38, ones_diff_rows)))
add(add(mul(add(ones_diff_rows, ones_diff_rows), mul(-70, ones_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_cols, 4))), add(add(add(compare_blocks_rows, ones_diff_rows), add(-86, compare_blocks_rows)), mul(mul(-86, compare_blocks_cols), add(ones_diff_cols, zeros_diff_cols))))
COND TREES:
ge(_if_then_else(True, ones_diff_rows, -18), _if_then_else(True, ones_diff_rows, -18))
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(and_(False, True), zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 1))), _if_then_else(and_(and_(True, True), or_(False, False)), _if_then_else(or_(True, True), _if_then_else(True, 4, 51), _if_then_else(True, 0, 1)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(True, max_col_clue, max_col_clue)), or_(or_(False, True), and_(False, True)))))
and_(ge(3, 3), False)
or_(True, False)
and_(False, le(zeros_diff_cols, max_row_clue))
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, mul(add(mul(add(mul(zeros_diff_rows, zeros_diff_cols), add(17, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), mul(ones_diff_cols, -71))), add(add(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)))), mul(add(add(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_cols, compare_blocks_rows))), add(mul(add(ones_diff_cols, 88), mul(ones_diff_cols, compare_blocks_rows)), add(mul(ones_diff_rows, 75), add(zeros_diff_rows, compare_blocks_cols)))))), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(mul(mul(compare_blocks_rows, ones_diff_cols), add(ones_diff_rows, compare_blocks_rows)), zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(mul(mul(add(zeros_diff_cols, zeros_diff_rows), compare_blocks_rows), mul(compare_blocks_rows, mul(89, compare_blocks_rows))), ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
ge(ones_diff_rows, _if_then_else(True, ones_diff_rows, zeros_diff_rows))
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, _if_then_else(True, compare_blocks_cols, 1)), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, -78))), _if_then_else(and_(and_(True, True), or_(False, False)), _if_then_else(or_(True, True), _if_then_else(True, 4, 51), _if_then_else(True, 0, -78)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(True, max_col_clue, max_col_clue)), or_(or_(False, True), and_(False, True)))))
and_(ge(3, compare_blocks_cols), and_(True, False))
or_(or_(True, True), False)
and_(or_(False, False), le(ones_diff_rows, 2))
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
or_(le(2, zeros_diff_rows), ge(_if_then_else(True, max_col_clue, _if_then_else(False, 2, compare_blocks_cols)), ones_diff_rows))
le(_if_then_else(le(_if_then_else(True, 2, max_col_clue), 97), _if_then_else(or_(True, True), zeros_diff_cols, 65), _if_then_else(or_(True, True), compare_blocks_cols, compare_blocks_rows)), 1)
ge(_if_then_else(ge(-17, 4), _if_then_else(True, max_col_clue, 4), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, 0), _if_then_else(or_(or_(ge(_if_then_else(True, 3, max_row_clue), _if_then_else(False, 1, compare_blocks_rows)), or_(or_(False, False), ge(2, zeros_diff_rows))), le(_if_then_else(and_(False, False), _if_then_else(True, max_row_clue, 1), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(le(zeros_diff_cols, 89), _if_then_else(True, 2, max_col_clue), _if_then_else(False, compare_blocks_cols, ones_diff_cols)))), _if_then_else(or_(and_(ge(ones_diff_cols, ones_diff_rows), ge(compare_blocks_rows, 3)), or_(and_(False, True), and_(False, True))), _if_then_else(le(_if_then_else(True, 3, 4), _if_then_else(False, 0, zeros_diff_rows)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(False, 4, -64), _if_then_else(True, 1, max_col_clue)), _if_then_else(or_(False, True), _if_then_else(False, 4, 0), _if_then_else(True, 66, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, 1, ones_diff_cols), _if_then_else(True, 1, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(True, 1, 92), _if_then_else(True, 3, 1)), _if_then_else(le(-70, 1), _if_then_else(True, max_col_clue, 0), _if_then_else(False, zeros_diff_cols, compare_blocks_cols)))), _if_then_else(or_(or_(or_(False, True), or_(True, True)), ge(_if_then_else(True, 1, ones_diff_cols), _if_then_else(True, max_col_clue, 0))), _if_then_else(or_(ge(ones_diff_rows, compare_blocks_cols), and_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, 4, max_col_clue)), _if_then_else(le(max_row_clue, ones_diff_rows), _if_then_else(False, 4, ones_diff_cols), _if_then_else(False, 53, zeros_diff_cols))), _if_then_else(le(_if_then_else(True, ones_diff_rows, 59), _if_then_else(False, 4, max_col_clue)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, zeros_diff_cols), _if_then_else(True, ones_diff_cols, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, 3, 3), _if_then_else(True, max_row_clue, max_row_clue)))))))
le(_if_then_else(or_(False, True), _if_then_else(False, _if_then_else(True, zeros_diff_cols, zeros_diff_cols), compare_blocks_rows), _if_then_else(False, max_col_clue, 3)), _if_then_else(and_(True, False), _if_then_else(True, zeros_diff_rows, 0), _if_then_else(False, 1, max_row_clue)))
ge(_if_then_else(le(_if_then_else(False, 2, ones_diff_rows), _if_then_else(False, max_col_clue, zeros_diff_rows)), _if_then_else(and_(True, False), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, ones_diff_rows, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(True, ones_diff_rows, zeros_diff_rows), _if_then_else(True, max_row_clue, 4))), _if_then_else(False, 2, zeros_diff_rows))
VAL TREES:
add(add(66, add(zeros_diff_cols, ones_diff_cols)), add(zeros_diff_rows, -93))
mul(add(mul(add(add(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, 14), mul(compare_blocks_cols, zeros_diff_cols))), mul(add(mul(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), mul(mul(compare_blocks_rows, ones_diff_rows), add(-81, zeros_diff_cols)))), add(add(add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), mul(mul(compare_blocks_rows, 63), add(ones_diff_cols, compare_blocks_cols))), add(mul(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(compare_blocks_cols, 49)))))
add(add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(add(-40, zeros_diff_rows), zeros_diff_cols))
mul(add(compare_blocks_rows, compare_blocks_rows), mul(91, compare_blocks_rows))
add(mul(mul(add(compare_blocks_rows, -93), add(compare_blocks_rows, zeros_diff_rows)), add(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols))), mul(mul(add(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(mul(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
or_(le(2, zeros_diff_rows), ge(_if_then_else(False, max_col_clue, _if_then_else(False, 2, compare_blocks_cols)), max_col_clue))
le(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 3)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 1))), _if_then_else(True, 4, _if_then_else(False, max_row_clue, zeros_diff_cols)))
ge(_if_then_else(ge(-17, 4), _if_then_else(True, max_col_clue, ones_diff_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_cols)), _if_then_else(and_(False, ge(3, compare_blocks_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, 2, 4)))
le(_if_then_else(or_(False, True), _if_then_else(False, _if_then_else(True, max_row_clue, max_row_clue), compare_blocks_rows), _if_then_else(False, max_col_clue, 3)), _if_then_else(and_(False, False), _if_then_else(or_(True, True), zeros_diff_rows, 0), _if_then_else(False, 1, max_row_clue)))
ge(_if_then_else(False, 95, 2), _if_then_else(False, 2, 95))
VAL TREES:
add(add(66, add(zeros_diff_cols, ones_diff_cols)), add(zeros_diff_rows, -93))
mul(add(mul(add(add(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, 14), mul(compare_blocks_cols, zeros_diff_cols))), mul(add(mul(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), mul(mul(compare_blocks_rows, ones_diff_rows), add(-81, zeros_diff_cols)))), add(add(add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), mul(mul(compare_blocks_rows, 63), add(ones_diff_cols, compare_blocks_cols))), add(mul(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(compare_blocks_cols, 49)))))
add(add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(add(-40, zeros_diff_rows), zeros_diff_cols))
mul(add(compare_blocks_rows, compare_blocks_rows), mul(91, compare_blocks_rows))
add(mul(mul(add(compare_blocks_rows, -93), add(compare_blocks_rows, zeros_diff_rows)), add(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols))), mul(mul(add(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(mul(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
ge(2, _if_then_else(True, 1, _if_then_else(le(4, 0), _if_then_else(True, 99, 4), _if_then_else(True, ones_diff_rows, 3))))
or_(True, and_(False, False))
le(_if_then_else(False, _if_then_else(and_(False, True), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, 2, zeros_diff_rows)), ones_diff_rows), _if_then_else(False, _if_then_else(True, 1, 0), compare_blocks_cols))
ge(_if_then_else(ge(4, 62), zeros_diff_rows, 0), compare_blocks_cols)
le(1, _if_then_else(or_(False, and_(or_(False, False), ge(4, max_col_clue))), _if_then_else(False, 2, 2), 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(1, _if_then_else(False, ones_diff_rows, zeros_diff_rows))
and_(ge(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 1))), _if_then_else(and_(and_(True, True), or_(False, False)), _if_then_else(or_(le(1, zeros_diff_rows), and_(True, False)), _if_then_else(True, 4, 51), _if_then_else(True, 0, -78)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, _if_then_else(True, compare_blocks_cols, 1), compare_blocks_rows)))), or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), True))
and_(ge(3, compare_blocks_cols), and_(and_(ge(zeros_diff_rows, 0), le(3, 3)), ge(2, _if_then_else(True, 4, compare_blocks_cols))))
or_(or_(True, False), or_(True, True))
and_(or_(False, False), True)
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
ge(2, _if_then_else(True, _if_then_else(False, 2, max_row_clue), _if_then_else(False, 4, zeros_diff_rows)))
or_(True, True)
le(_if_then_else(True, _if_then_else(True, -69, 4), ones_diff_rows), ones_diff_cols)
ge(ones_diff_cols, _if_then_else(True, _if_then_else(True, compare_blocks_rows, max_row_clue), zeros_diff_rows))
le(1, _if_then_else(True, 2, 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
or_(ge(zeros_diff_rows, 0), le(zeros_diff_rows, 64))
or_(ge(_if_then_else(or_(False, and_(False, True)), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(and_(True, False), max_col_clue, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, 3, 2))), and_(True, True))
le(_if_then_else(False, -82, ones_diff_rows), -82)
ge(_if_then_else(True, zeros_diff_rows, 0), _if_then_else(False, 2, zeros_diff_rows))
le(_if_then_else(True, _if_then_else(False, max_row_clue, -3), _if_then_else(True, 0, 83)), _if_then_else(False, 2, 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(mul(mul(mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(ones_diff_cols, -79)), mul(mul(-73, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows))), mul(mul(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_rows, 6)), mul(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_rows, -78)))), mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, 66)), mul(add(ones_diff_cols, compare_blocks_cols), add(60, compare_blocks_rows))), add(add(mul(ones_diff_cols, ones_diff_cols), mul(2, compare_blocks_rows)), add(add(zeros_diff_rows, zeros_diff_cols), mul(-96, ones_diff_rows))))), ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_cols), add(96, zeros_diff_rows))), zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(add(add(mul(mul(add(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_cols)), add(add(compare_blocks_rows, 88), add(zeros_diff_rows, compare_blocks_cols))), mul(mul(mul(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)), add(add(89, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows)))), mul(mul(mul(add(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows))), add(mul(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_rows, compare_blocks_cols)), add(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, zeros_diff_rows))))), -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(mul(add(ones_diff_rows, compare_blocks_cols), add(92, ones_diff_cols)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, ones_diff_cols))), mul(mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, ones_diff_cols)), mul(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_cols, 19))))
COND TREES:
ge(1, _if_then_else(False, ones_diff_rows, zeros_diff_rows))
and_(ge(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 1))), _if_then_else(and_(and_(True, True), or_(False, False)), _if_then_else(or_(le(1, zeros_diff_rows), and_(True, False)), _if_then_else(True, 4, 51), _if_then_else(True, 0, -78)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, _if_then_else(True, compare_blocks_cols, 1), compare_blocks_rows)))), or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), True))
and_(ge(3, compare_blocks_cols), and_(and_(ge(zeros_diff_rows, 0), le(3, 3)), ge(2, _if_then_else(True, 4, compare_blocks_cols))))
or_(or_(True, False), or_(True, True))
and_(or_(False, False), True)
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
ge(_if_then_else(or_(or_(and_(False, True), and_(False, True)), le(_if_then_else(False, max_col_clue, 1), _if_then_else(False, 0, max_col_clue))), _if_then_else(or_(le(0, compare_blocks_rows), or_(False, True)), _if_then_else(ge(ones_diff_rows, max_col_clue), _if_then_else(False, 95, compare_blocks_cols), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, 0, zeros_diff_cols))), _if_then_else(or_(or_(True, False), ge(zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(True, 1, 2), _if_then_else(True, zeros_diff_rows, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 0), _if_then_else(True, 1, 2)), le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, 2, 19))), 2, _if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(True, _if_then_else(False, 3, 3), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(ge(zeros_diff_cols, 2), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(True, 1, compare_blocks_rows)))))
le(_if_then_else(False, zeros_diff_cols, 4), _if_then_else(False, ones_diff_rows, zeros_diff_cols))
or_(and_(or_(False, False), False), ge(compare_blocks_rows, _if_then_else(le(3, compare_blocks_cols), compare_blocks_rows, ones_diff_rows)))
and_(ge(_if_then_else(or_(and_(True, False), ge(compare_blocks_cols, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols)), _if_then_else(True, _if_then_else(True, 2, 2), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), _if_then_else(or_(or_(True, False), and_(True, True)), _if_then_else(and_(le(0, 4), True), _if_then_else(True, max_row_clue, 1), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(max_col_clue, 4), _if_then_else(True, ones_diff_cols, 0), _if_then_else(False, 95, ones_diff_rows)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, -99, 3)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(-96, 3), _if_then_else(True, 2, ones_diff_cols), _if_then_else(False, 0, -87))), _if_then_else(ge(_if_then_else(False, -1, 3), max_row_clue), _if_then_else(ge(compare_blocks_rows, max_row_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, max_col_clue, 99)))))
or_(or_(False, False), True)
VAL TREES:
add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows))
add(add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(-82, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))))
mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_cols, ones_diff_rows))
add(add(ones_diff_rows, 58), mul(ones_diff_cols, -22))
add(add(compare_blocks_rows, ones_diff_cols), add(add(compare_blocks_rows, compare_blocks_rows), mul(19, compare_blocks_cols)))
COND TREES:
ge(zeros_diff_rows, _if_then_else(True, max_col_clue, max_col_clue))
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(and_(False, True), _if_then_else(False, 1, ones_diff_cols), zeros_diff_cols)), _if_then_else(and_(False, and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False)))), ones_diff_rows, _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(zeros_diff_rows, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(True, max_col_clue, max_col_clue)), or_(or_(False, True), and_(False, True)))))
and_(True, True)
or_(or_(False, and_(False, False)), or_(True, False))
and_(or_(True, False), or_(False, False))
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
or_(le(2, zeros_diff_rows), ge(_if_then_else(False, ones_diff_rows, 0), max_col_clue))
le(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(ge(ones_diff_rows, _if_then_else(False, compare_blocks_cols, max_col_clue)), False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 1))), _if_then_else(True, 4, _if_then_else(False, max_row_clue, zeros_diff_cols)))
ge(_if_then_else(ge(-17, 4), _if_then_else(False, max_col_clue, ones_diff_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(False, ge(-17, compare_blocks_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, 2, 4)))
le(_if_then_else(or_(False, True), _if_then_else(False, _if_then_else(True, max_row_clue, zeros_diff_cols), compare_blocks_rows), _if_then_else(False, max_col_clue, 3)), _if_then_else(and_(le(max_row_clue, 0), True), _if_then_else(or_(True, True), zeros_diff_rows, 0), _if_then_else(False, 1, max_row_clue)))
ge(_if_then_else(False, zeros_diff_rows, 2), _if_then_else(False, 2, 95))
VAL TREES:
add(add(66, add(zeros_diff_cols, ones_diff_cols)), add(zeros_diff_rows, -93))
mul(add(mul(add(add(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, 14), mul(compare_blocks_cols, zeros_diff_cols))), mul(add(mul(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), mul(mul(compare_blocks_rows, ones_diff_rows), add(-81, zeros_diff_cols)))), add(add(add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), mul(mul(compare_blocks_rows, 63), add(ones_diff_cols, compare_blocks_cols))), add(mul(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(compare_blocks_cols, 49)))))
add(add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(add(-40, zeros_diff_rows), zeros_diff_cols))
mul(add(compare_blocks_rows, compare_blocks_rows), mul(91, compare_blocks_rows))
add(mul(mul(add(compare_blocks_rows, -93), add(compare_blocks_rows, zeros_diff_rows)), add(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols))), mul(mul(add(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(mul(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
le(_if_then_else(True, 2, 3), _if_then_else(or_(and_(ge(compare_blocks_cols, 1), ge(3, zeros_diff_cols)), le(max_row_clue, 4)), 4, 1))
ge(_if_then_else(le(2, 97), 1, -11), _if_then_else(ge(compare_blocks_cols, zeros_diff_cols), _if_then_else(or_(True, True), 1, ones_diff_cols), _if_then_else(True, max_row_clue, 4)))
le(_if_then_else(True, _if_then_else(True, 4, ones_diff_rows), 4), _if_then_else(False, _if_then_else(False, compare_blocks_rows, zeros_diff_rows), 4))
and_(ge(_if_then_else(le(_if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(True, -53, 2)), _if_then_else(or_(True, False), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(True, zeros_diff_cols, zeros_diff_rows)), _if_then_else(ge(3, compare_blocks_cols), _if_then_else(False, 3, max_col_clue), _if_then_else(True, 1, 3))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, zeros_diff_rows, -12)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, -66, 2), _if_then_else(True, 0, max_col_clue)))), True)
or_(ge(3, _if_then_else(False, 3, _if_then_else(False, 0, max_col_clue))), and_(and_(le(_if_then_else(True, 0, ones_diff_cols), _if_then_else(True, 1, _if_then_else(True, _if_then_else(False, max_row_clue, max_row_clue), compare_blocks_rows))), True), or_(and_(False, False), False)))
VAL TREES:
mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols))
add(add(ones_diff_cols, zeros_diff_cols), add(91, zeros_diff_rows))
add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, mul(zeros_diff_cols, -23)))
mul(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, -72))
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(38, ones_diff_rows)))
add(add(mul(add(ones_diff_rows, ones_diff_rows), mul(-70, ones_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_cols, 4))), add(add(add(compare_blocks_rows, ones_diff_rows), add(-86, compare_blocks_rows)), mul(mul(-86, compare_blocks_cols), add(ones_diff_cols, zeros_diff_cols))))
COND TREES:
ge(_if_then_else(or_(or_(and_(False, True), and_(False, True)), le(_if_then_else(False, max_col_clue, 1), _if_then_else(False, 0, max_col_clue))), _if_then_else(or_(le(compare_blocks_cols, compare_blocks_rows), or_(False, True)), _if_then_else(ge(ones_diff_rows, max_col_clue), _if_then_else(False, 95, compare_blocks_cols), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, 0, zeros_diff_cols))), _if_then_else(or_(or_(True, False), ge(zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(True, 1, 2), _if_then_else(True, zeros_diff_rows, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 0), _if_then_else(True, 1, 2)), le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, 2, 19))), _if_then_else(or_(le(ones_diff_rows, zeros_diff_cols), and_(True, True)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, 0, 1)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, 4, max_row_clue))), _if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(True, _if_then_else(False, 3, 3), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 1), _if_then_else(True, 1, compare_blocks_rows)))))
le(_if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(True, ones_diff_rows, zeros_diff_cols))
or_(and_(True, False), or_(False, True))
and_(ge(_if_then_else(or_(and_(True, False), ge(compare_blocks_cols, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 2, 2), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), _if_then_else(or_(or_(True, False), and_(True, True)), _if_then_else(and_(le(0, 4), True), _if_then_else(False, max_row_clue, 1), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(max_col_clue, 4), _if_then_else(True, ones_diff_cols, 0), _if_then_else(False, 95, ones_diff_rows)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, 3), _if_then_else(and_(le(max_row_clue, 0), True), -99, 3)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(-96, 3), _if_then_else(True, 2, ones_diff_cols), _if_then_else(False, 0, -87))), _if_then_else(ge(_if_then_else(False, -1, 3), max_row_clue), _if_then_else(ge(compare_blocks_rows, max_row_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, max_col_clue, 99)))))
or_(True, False)
VAL TREES:
add(mul(ones_diff_rows, ones_diff_cols), add(mul(add(mul(zeros_diff_cols, -1), zeros_diff_cols), compare_blocks_rows), mul(add(zeros_diff_rows, ones_diff_cols), zeros_diff_cols)))
mul(mul(zeros_diff_cols, compare_blocks_cols), add(add(add(mul(compare_blocks_rows, ones_diff_cols), zeros_diff_rows), add(compare_blocks_rows, mul(compare_blocks_cols, zeros_diff_cols))), compare_blocks_rows))
add(add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(mul(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, compare_blocks_rows))), add(mul(-82, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))))
mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_cols, add(add(add(mul(-55, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, ones_diff_rows), add(compare_blocks_rows, compare_blocks_rows))), mul(mul(add(ones_diff_rows, 75), mul(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))))))
add(add(mul(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols)), mul(ones_diff_cols, -22))
add(add(compare_blocks_rows, ones_diff_cols), add(mul(add(-78, mul(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows))), zeros_diff_cols), mul(ones_diff_rows, compare_blocks_cols)))
COND TREES:
ge(2, _if_then_else(ge(_if_then_else(True, max_col_clue, _if_then_else(False, 2, compare_blocks_cols)), max_col_clue), 1, _if_then_else(False, 4, zeros_diff_rows)))
or_(or_(False, True), and_(False, True))
le(_if_then_else(True, -82, ones_diff_rows), _if_then_else(True, _if_then_else(True, 1, 0), compare_blocks_cols))
ge(_if_then_else(or_(and_(False, False), ge(ones_diff_cols, 0)), zeros_diff_rows, 0), compare_blocks_cols)
le(1, _if_then_else(or_(False, True), _if_then_else(False, 2, 2), 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
or_(ge(ones_diff_rows, max_col_clue), ge(4, 4))
and_(True, le(_if_then_else(ge(ones_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(False, max_row_clue, 1)), 4))
or_(False, True)
or_(ge(4, 62), ge(3, max_col_clue))
le(_if_then_else(and_(ge(_if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 32, max_row_clue)), or_(or_(False, False), le(zeros_diff_rows, ones_diff_cols))), _if_then_else(le(_if_then_else(True, ones_diff_cols, 1), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 4, 4)), _if_then_else(and_(False, True), _if_then_else(False, 2, 0), _if_then_else(True, compare_blocks_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(False, 0, zeros_diff_cols), _if_then_else(False, 1, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, 1), _if_then_else(False, 3, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, compare_blocks_cols), _if_then_else(False, max_row_clue, ones_diff_rows)))), _if_then_else(or_(or_(and_(True, False), le(zeros_diff_cols, 0)), le(4, _if_then_else(True, 0, 3))), _if_then_else(le(_if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(and_(True, False), _if_then_else(True, 4, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(or_(or_(False, False), ge(4, zeros_diff_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 12), _if_then_else(False, 0, 2)), _if_then_else(le(3, zeros_diff_cols), _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, max_row_clue)))))
VAL TREES:
add(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, -27))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(93, add(compare_blocks_cols, compare_blocks_rows)))
mul(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(compare_blocks_cols, compare_blocks_cols), mul(86, 20))
add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, -88))
add(add(ones_diff_cols, compare_blocks_cols), add(-26, compare_blocks_cols))
COND TREES:
ge(_if_then_else(ge(4, max_row_clue), compare_blocks_rows, max_row_clue), _if_then_else(False, ones_diff_rows, 0))
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), zeros_diff_rows)), _if_then_else(and_(False, or_(False, False)), _if_then_else(or_(True, True), _if_then_else(True, 4, 51), _if_then_else(True, 0, -78)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(True, max_col_clue, max_col_clue)), or_(or_(False, True), True))))
and_(ge(_if_then_else(True, 4, zeros_diff_cols), compare_blocks_cols), and_(True, True))
or_(or_(False, and_(le(max_row_clue, 0), True)), or_(True, True))
and_(or_(False, False), or_(False, False))
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
or_(ge(_if_then_else(ge(0, zeros_diff_rows), _if_then_else(False, 1, max_col_clue), _if_then_else(or_(True, False), 2, zeros_diff_rows)), _if_then_else(False, 4, zeros_diff_rows)), ge(4, 4))
and_(or_(False, True), and_(False, and_(True, and_(ge(max_row_clue, ones_diff_cols), True))))
or_(or_(False, ge(_if_then_else(False, compare_blocks_cols, _if_then_else(or_(and_(True, False), or_(False, False)), _if_then_else(ge(2, 4), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, 1)), _if_then_else(and_(False, True), _if_then_else(False, max_row_clue, compare_blocks_rows), _if_then_else(True, ones_diff_rows, 1)))), _if_then_else(False, max_col_clue, 4))), True)
or_(True, and_(or_(True, True), le(0, compare_blocks_cols)))
le(_if_then_else(and_(ge(_if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 32, max_row_clue)), or_(or_(False, False), le(zeros_diff_rows, ones_diff_cols))), _if_then_else(le(_if_then_else(True, ones_diff_cols, 1), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 4, 4)), _if_then_else(and_(False, True), _if_then_else(False, 2, 0), _if_then_else(True, compare_blocks_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(False, 0, zeros_diff_cols), _if_then_else(False, 1, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, 1), _if_then_else(False, 3, _if_then_else(True, _if_then_else(False, _if_then_else(ge(-61, 1), zeros_diff_rows, ones_diff_cols), 2), _if_then_else(False, zeros_diff_cols, 2)))), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, compare_blocks_cols), _if_then_else(False, max_row_clue, ones_diff_rows)))), _if_then_else(or_(or_(and_(True, False), le(zeros_diff_cols, 0)), le(_if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(True, 0, 3))), _if_then_else(le(_if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(and_(True, False), _if_then_else(True, 4, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(or_(or_(False, False), ge(4, zeros_diff_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 12), _if_then_else(False, 0, _if_then_else(or_(False, True), 2, 4))), _if_then_else(le(3, zeros_diff_cols), _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, max_row_clue)))))
VAL TREES:
add(add(zeros_diff_cols, ones_diff_cols), mul(add(add(add(14, -46), mul(-3, compare_blocks_rows)), mul(add(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows))), add(mul(mul(compare_blocks_cols, ones_diff_cols), mul(57, zeros_diff_cols)), add(add(ones_diff_rows, add(add(add(add(compare_blocks_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_rows))), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(90, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))))), add(compare_blocks_rows, compare_blocks_rows)))))
mul(add(mul(mul(add(mul(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(zeros_diff_rows, 57), add(23, compare_blocks_rows))), add(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, 14), add(ones_diff_cols, ones_diff_rows)))), mul(add(add(mul(ones_diff_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_cols, ones_diff_cols), add(zeros_diff_rows, ones_diff_rows))), add(mul(mul(ones_diff_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, zeros_diff_cols))))), mul(93, add(compare_blocks_cols, compare_blocks_rows)))
mul(add(mul(add(mul(ones_diff_rows, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols)), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_rows))), add(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(add(add(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), compare_blocks_cols), add(add(mul(ones_diff_rows, -8), ones_diff_cols), add(zeros_diff_rows, mul(add(zeros_diff_rows, zeros_diff_cols), ones_diff_rows))))
add(mul(mul(add(-85, zeros_diff_rows), add(mul(add(add(add(mul(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, -63)), add(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_cols, ones_diff_rows))), add(add(add(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(-45, zeros_diff_cols)))), add(add(mul(add(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_rows)), mul(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_rows, zeros_diff_rows))), mul(mul(mul(ones_diff_rows, ones_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), mul(add(compare_blocks_rows, 69), add(ones_diff_cols, zeros_diff_rows))))), add(compare_blocks_rows, ones_diff_cols))), mul(zeros_diff_rows, mul(compare_blocks_cols, zeros_diff_rows))), mul(ones_diff_cols, -88))
add(add(add(compare_blocks_cols, compare_blocks_cols), mul(zeros_diff_cols, ones_diff_cols)), add(-26, compare_blocks_cols))
COND TREES:
le(_if_then_else(ge(_if_then_else(False, 2, zeros_diff_rows), max_col_clue), 2, ones_diff_cols), _if_then_else(True, 4, _if_then_else(or_(and_(ge(1, zeros_diff_cols), and_(True, False)), le(_if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, 1, 3))), _if_then_else(and_(and_(False, True), ge(max_col_clue, compare_blocks_rows)), _if_then_else(le(1, 0), _if_then_else(True, zeros_diff_rows, 2), _if_then_else(True, 3, 1)), _if_then_else(or_(False, True), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(True, ones_diff_rows, 75))), _if_then_else(ge(_if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, 4, 60)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, 2, compare_blocks_cols)), _if_then_else(and_(le(1, _if_then_else(and_(False, and_(True, ge(4, _if_then_else(True, max_col_clue, compare_blocks_rows)))), _if_then_else(and_(False, True), zeros_diff_rows, max_col_clue), _if_then_else(False, _if_then_else(False, zeros_diff_cols, compare_blocks_rows), ones_diff_cols))), False), _if_then_else(True, 2, ones_diff_rows), _if_then_else(True, 1, max_col_clue))))))
or_(or_(False, and_(ge(ones_diff_cols, ones_diff_rows), le(_if_then_else(and_(or_(False, True), False), _if_then_else(True, 2, _if_then_else(ge(_if_then_else(le(_if_then_else(le(_if_then_else(or_(False, False), _if_then_else(False, 0, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, ones_diff_rows, 2), _if_then_else(False, -23, 27))), _if_then_else(and_(or_(False, True), ge(4, compare_blocks_rows)), _if_then_else(and_(False, False), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(True, max_col_clue, 2)), _if_then_else(le(0, ones_diff_rows), _if_then_else(False, zeros_diff_rows, -13), _if_then_else(False, max_col_clue, compare_blocks_cols))), _if_then_else(or_(le(ones_diff_rows, 1), and_(True, True)), _if_then_else(or_(True, True), _if_then_else(True, -16, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, 2)), _if_then_else(or_(True, True), _if_then_else(False, zeros_diff_rows, 0), _if_then_else(True, 1, 3)))), ones_diff_rows), _if_then_else(True, 4, 0), _if_then_else(False, 4, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, -75, 3), _if_then_else(False, max_col_clue, 3))), _if_then_else(le(_if_then_else(True, max_col_clue, max_row_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)), _if_then_else(and_(True, False), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, 1, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_rows, 4), _if_then_else(True, zeros_diff_rows, zeros_diff_cols))), _if_then_else(le(_if_then_else(True, 0, max_col_clue), _if_then_else(False, 68, ones_diff_cols)), _if_then_else(ge(ones_diff_rows, 4), _if_then_else(True, ones_diff_cols, 3), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, zeros_diff_rows))))), _if_then_else(True, ones_diff_cols, ones_diff_cols)), _if_then_else(or_(False, False), zeros_diff_cols, _if_then_else(True, compare_blocks_cols, 1))))), and_(False, True))
le(_if_then_else(or_(le(_if_then_else(and_(ge(zeros_diff_rows, 0), ge(3, zeros_diff_cols)), _if_then_else(le(compare_blocks_cols, -93), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, ones_diff_cols, zeros_diff_cols)), _if_then_else(ge(zeros_diff_cols, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, ones_diff_rows, compare_blocks_cols))), _if_then_else(le(_if_then_else(False, max_col_clue, ones_diff_rows), _if_then_else(True, 2, 4)), _if_then_else(and_(True, False), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(False, 4, 4)), _if_then_else(and_(True, False), _if_then_else(True, 0, ones_diff_cols), _if_then_else(True, 2, 3)))), le(_if_then_else(le(_if_then_else(True, 4, zeros_diff_rows), _if_then_else(True, max_row_clue, -29)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 54, ones_diff_rows)), _if_then_else(le(compare_blocks_rows, 2), _if_then_else(True, 4, max_col_clue), _if_then_else(True, compare_blocks_cols, 1))), _if_then_else(or_(le(0, compare_blocks_rows), or_(False, True)), _if_then_else(ge(-49, compare_blocks_rows), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(False, max_row_clue, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, 2, ones_diff_rows), _if_then_else(False, max_col_clue, max_row_clue))))), -82, ones_diff_rows), _if_then_else(False, _if_then_else(and_(True, False), _if_then_else(False, 1, max_row_clue), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), 2)))
or_(ge(3, max_col_clue), or_(or_(and_(and_(False, False), or_(False, False)), False), and_(True, False)))
le(1, _if_then_else(le(_if_then_else(le(0, 3), _if_then_else(False, ones_diff_cols, compare_blocks_cols), _if_then_else(True, 2, max_col_clue)), _if_then_else(le(2, compare_blocks_cols), _if_then_else(False, 3, 2), _if_then_else(False, -41, -10))), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(False, compare_blocks_cols, max_row_clue)), _if_then_else(and_(False, or_(or_(and_(True, False), False), le(2, compare_blocks_cols))), _if_then_else(True, compare_blocks_rows, 0), _if_then_else(False, max_col_clue, 2)), _if_then_else(or_(False, False), _if_then_else(False, max_row_clue, 0), _if_then_else(True, ones_diff_rows, 2))), _if_then_else(ge(_if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, ones_diff_cols, zeros_diff_cols)), _if_then_else(ge(ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, 3), _if_then_else(False, zeros_diff_rows, 3)), _if_then_else(and_(False, True), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, zeros_diff_cols)))))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(3, _if_then_else(True, 4, _if_then_else(True, ones_diff_rows, 0)))
or_(and_(True, True), or_(True, False))
ge(_if_then_else(ge(4, ones_diff_cols), ones_diff_rows, 1), _if_then_else(True, 1, 1))
or_(and_(and_(le(_if_then_else(False, 3, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, max_col_clue)), ge(_if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(False, 4, zeros_diff_rows))), or_(and_(and_(True, False), ge(4, 62)), ge(_if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 12, 27)))), le(_if_then_else(or_(or_(False, False), and_(False, True)), _if_then_else(or_(False, True), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 0, 3)), _if_then_else(ge(compare_blocks_rows, 3), _if_then_else(True, 2, ones_diff_cols), _if_then_else(ge(_if_then_else(True, ones_diff_cols, ones_diff_cols), _if_then_else(False, 12, 27)), compare_blocks_rows, 1))), _if_then_else(and_(le(max_row_clue, max_col_clue), le(-84, 0)), _if_then_else(True, _if_then_else(False, max_col_clue, _if_then_else(or_(False, False), 0, _if_then_else(or_(and_(ge(compare_blocks_rows, compare_blocks_rows), and_(False, False)), or_(and_(False, False), and_(True, True))), _if_then_else(and_(le(ones_diff_cols, max_col_clue), or_(False, True)), _if_then_else(or_(True, True), _if_then_else(True, 4, 8), _if_then_else(False, ones_diff_cols, zeros_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, 0))), _if_then_else(and_(and_(False, True), le(ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(True, 4, 2)), _if_then_else(or_(True, True), _if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, compare_blocks_cols, 0)))))), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), _if_then_else(ge(ones_diff_cols, 1), _if_then_else(True, 4, 0), _if_then_else(False, 1, 2)))))
ge(_if_then_else(True, ones_diff_cols, max_row_clue), -10)
VAL TREES:
add(mul(5, zeros_diff_cols), add(ones_diff_cols, zeros_diff_cols))
mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, add(zeros_diff_rows, zeros_diff_cols)))
mul(mul(mul(add(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), add(add(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), mul(add(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), mul(add(-65, 87), add(compare_blocks_rows, 47))))
add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, 65))
mul(mul(zeros_diff_rows, add(compare_blocks_cols, mul(ones_diff_cols, zeros_diff_rows))), mul(-18, compare_blocks_cols))
add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols))
COND TREES:
ge(_if_then_else(True, 2, zeros_diff_rows), _if_then_else(True, ones_diff_rows, -18))
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(and_(False, True), zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 1))), _if_then_else(and_(and_(True, True), or_(False, False)), _if_then_else(or_(True, True), _if_then_else(True, 4, 51), _if_then_else(True, 0, -78)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(True, max_col_clue, max_col_clue)), or_(or_(False, True), and_(False, True)))))
and_(ge(_if_then_else(False, compare_blocks_cols, 0), compare_blocks_cols), False)
or_(False, False)
and_(or_(False, False), le(zeros_diff_cols, max_row_clue))
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
le(_if_then_else(ge(_if_then_else(False, 2, zeros_diff_rows), max_col_clue), ones_diff_rows, ones_diff_cols), _if_then_else(True, 4, 2))
or_(or_(False, and_(ge(ones_diff_cols, ones_diff_rows), le(_if_then_else(and_(or_(False, True), False), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(True, ones_diff_cols, ones_diff_cols)), _if_then_else(or_(False, False), zeros_diff_cols, _if_then_else(True, compare_blocks_cols, 1))))), and_(False, True))
le(_if_then_else(False, -82, ones_diff_rows), _if_then_else(ge(4, ones_diff_cols), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 3, 2)))
or_(ge(3, max_col_clue), le(_if_then_else(or_(False, False), 0, _if_then_else(False, _if_then_else(False, zeros_diff_cols, compare_blocks_rows), _if_then_else(True, ones_diff_cols, 2))), _if_then_else(True, zeros_diff_cols, compare_blocks_cols)))
le(1, _if_then_else(False, _if_then_else(False, 2, compare_blocks_cols), 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
le(_if_then_else(ge(_if_then_else(or_(True, False), _if_then_else(False, 2, 4), _if_then_else(True, compare_blocks_rows, 4)), _if_then_else(and_(False, True), _if_then_else(True, 3, 0), _if_then_else(False, ones_diff_rows, zeros_diff_cols))), _if_then_else(or_(le(max_col_clue, ones_diff_rows), and_(False, False)), _if_then_else(le(1, 2), _if_then_else(True, 1, compare_blocks_rows), _if_then_else(True, 0, 1)), _if_then_else(and_(False, True), _if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, 2, 2))), _if_then_else(le(_if_then_else(True, compare_blocks_cols, 2), _if_then_else(True, ones_diff_cols, 2)), _if_then_else(le(ones_diff_cols, 0), _if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, max_col_clue, max_row_clue)), _if_then_else(ge(51, ones_diff_cols), _if_then_else(False, compare_blocks_cols, max_col_clue), _if_then_else(True, ones_diff_rows, compare_blocks_cols)))), 0)
ge(_if_then_else(ge(compare_blocks_cols, zeros_diff_cols), 1, _if_then_else(and_(True, True), _if_then_else(le(1, compare_blocks_rows), 3, 23), _if_then_else(and_(True, False), compare_blocks_rows, compare_blocks_cols))), _if_then_else(ge(compare_blocks_cols, zeros_diff_cols), _if_then_else(True, 1, 0), _if_then_else(False, max_row_clue, 4)))
le(_if_then_else(True, _if_then_else(True, 3, ones_diff_rows), 4), _if_then_else(False, _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, _if_then_else(False, ones_diff_cols, 3)), _if_then_else(False, 4, max_col_clue))))
and_(True, le(compare_blocks_rows, _if_then_else(False, max_col_clue, 3)))
or_(ge(_if_then_else(True, 4, _if_then_else(False, _if_then_else(le(_if_then_else(False, 1, compare_blocks_rows), max_row_clue), _if_then_else(True, 2, ones_diff_rows), _if_then_else(True, _if_then_else(True, ones_diff_rows, zeros_diff_cols), max_row_clue)), zeros_diff_cols)), _if_then_else(False, 2, _if_then_else(False, ones_diff_rows, max_col_clue))), and_(or_(False, False), or_(False, False)))
VAL TREES:
add(mul(ones_diff_rows, ones_diff_rows), add(mul(zeros_diff_rows, ones_diff_cols), ones_diff_cols))
add(add(ones_diff_cols, zeros_diff_cols), add(mul(zeros_diff_rows, -70), mul(zeros_diff_rows, mul(compare_blocks_rows, zeros_diff_cols))))
add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, mul(zeros_diff_cols, -23)))
mul(mul(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_cols, -50))
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(add(compare_blocks_cols, zeros_diff_rows), mul(mul(mul(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), zeros_diff_rows), add(ones_diff_cols, ones_diff_cols))))
add(add(mul(add(ones_diff_rows, ones_diff_rows), mul(-70, add(mul(add(mul(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_rows, zeros_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_rows), mul(ones_diff_cols, 71))), add(mul(mul(-71, ones_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_cols)))))), mul(add(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_cols, 4))), add(add(add(compare_blocks_rows, ones_diff_rows), add(-86, compare_blocks_rows)), mul(mul(-86, compare_blocks_cols), add(ones_diff_cols, zeros_diff_cols))))
COND TREES:
or_(or_(and_(True, True), or_(and_(True, or_(False, False)), False)), True)
and_(or_(False, or_(or_(or_(True, True), or_(True, True)), and_(or_(True, False), ge(4, 12)))), le(ones_diff_rows, max_col_clue))
or_(and_(True, False), True)
or_(or_(le(_if_then_else(ge(_if_then_else(and_(False, False), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, ones_diff_rows)), _if_then_else(ge(compare_blocks_rows, zeros_diff_rows), _if_then_else(True, max_row_clue, ones_diff_rows), _if_then_else(False, 1, max_row_clue))), _if_then_else(le(_if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(True, 0, 1)), _if_then_else(or_(True, True), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(True, max_row_clue, zeros_diff_rows)), _if_then_else(ge(-70, 2), _if_then_else(True, 96, ones_diff_cols), _if_then_else(False, -9, compare_blocks_rows))), _if_then_else(and_(ge(max_col_clue, compare_blocks_cols), ge(max_col_clue, 2)), _if_then_else(ge(-60, 0), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, max_row_clue, -74)), _if_then_else(ge(0, 90), _if_then_else(False, ones_diff_rows, max_col_clue), _if_then_else(False, compare_blocks_cols, max_col_clue)))), _if_then_else(le(_if_then_else(and_(False, True), _if_then_else(False, 2, ones_diff_rows), _if_then_else(False, 4, 4)), _if_then_else(ge(4, 0), _if_then_else(True, ones_diff_cols, 52), _if_then_else(True, 2, ones_diff_cols))), _if_then_else(and_(and_(True, False), or_(False, True)), _if_then_else(or_(False, False), 1, _if_then_else(False, zeros_diff_cols, -6)), _if_then_else(and_(True, True), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(False, 76, 34))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, 0), _if_then_else(True, 1, ones_diff_cols)), _if_then_else(le(max_col_clue, 0), _if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, compare_blocks_cols, zeros_diff_rows)), _if_then_else(le(ones_diff_rows, ones_diff_cols), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(False, ones_diff_cols, 1))))), ge(ones_diff_cols, 0)), and_(or_(True, ge(compare_blocks_rows, ones_diff_cols)), True))
or_(le(ones_diff_rows, 3), False)
VAL TREES:
add(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, -27))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(93, add(compare_blocks_cols, compare_blocks_rows)))
mul(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(compare_blocks_cols, compare_blocks_cols), mul(86, 20))
add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, -88))
add(add(ones_diff_cols, compare_blocks_cols), add(-26, compare_blocks_cols))
COND TREES:
ge(2, _if_then_else(True, 1, _if_then_else(False, 4, zeros_diff_rows)))
or_(ge(_if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(True, 1, 2)), compare_blocks_cols), or_(False, and_(False, True)))
le(_if_then_else(True, -82, ones_diff_rows), _if_then_else(False, -69, compare_blocks_cols))
ge(_if_then_else(True, zeros_diff_rows, 0), _if_then_else(True, _if_then_else(True, 0, max_row_clue), _if_then_else(False, 1, ones_diff_rows)))
le(1, _if_then_else(True, 2, 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(2, _if_then_else(False, 1, _if_then_else(ge(ones_diff_rows, max_col_clue), 4, zeros_diff_rows)))
or_(and_(False, True), False)
le(_if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(True, -69, compare_blocks_cols))
ge(_if_then_else(False, zeros_diff_rows, 0), _if_then_else(True, 2, zeros_diff_rows))
le(1, _if_then_else(False, 2, 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
add(add(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)), add(mul(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows)))
mul(mul(mul(zeros_diff_cols, mul(94, compare_blocks_rows)), mul(ones_diff_rows, zeros_diff_cols)), add(zeros_diff_rows, ones_diff_cols))
mul(add(mul(add(compare_blocks_cols, ones_diff_cols), add(38, ones_diff_rows)), compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
or_(ge(2, max_col_clue), or_(le(0, compare_blocks_rows), or_(False, True)))
and_(True, ge(_if_then_else(True, max_row_clue, _if_then_else(False, zeros_diff_rows, ones_diff_cols)), _if_then_else(True, 1, zeros_diff_cols)))
or_(or_(and_(False, False), ge(_if_then_else(False, compare_blocks_rows, 0), _if_then_else(le(_if_then_else(False, compare_blocks_rows, 4), _if_then_else(True, _if_then_else(False, 1, max_row_clue), max_row_clue)), max_col_clue, 4))), True)
or_(or_(and_(False, False), ge(3, 0)), and_(True, ge(1, 0)))
le(_if_then_else(and_(ge(_if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(or_(and_(False, True), or_(True, True)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 0, ones_diff_cols), _if_then_else(False, 2, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(True, ones_diff_rows, ones_diff_rows)))), or_(or_(True, False), le(zeros_diff_rows, ones_diff_cols))), _if_then_else(le(_if_then_else(True, ones_diff_cols, 1), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 4, 4)), _if_then_else(and_(False, True), _if_then_else(False, 2, 0), _if_then_else(True, compare_blocks_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(False, 0, zeros_diff_cols), _if_then_else(False, 1, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, 1), _if_then_else(False, 3, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, compare_blocks_cols), _if_then_else(False, max_row_clue, ones_diff_rows)))), _if_then_else(or_(or_(and_(True, False), le(zeros_diff_cols, 0)), le(3, _if_then_else(True, 0, 3))), _if_then_else(le(_if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(and_(True, False), _if_then_else(True, 4, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(or_(or_(False, False), ge(4, zeros_diff_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 12), _if_then_else(False, 0, _if_then_else(or_(False, True), 2, 4))), _if_then_else(le(3, zeros_diff_cols), _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, max_row_clue)))))
VAL TREES:
add(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, -27))
add(mul(ones_diff_rows, ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols))
mul(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), add(mul(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, add(mul(ones_diff_rows, add(ones_diff_cols, compare_blocks_rows)), zeros_diff_rows)))))
add(mul(mul(compare_blocks_rows, ones_diff_cols), 48), add(41, compare_blocks_cols))
add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, -88))
add(add(ones_diff_cols, compare_blocks_cols), mul(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)))
COND TREES:
ge(2, _if_then_else(ge(_if_then_else(or_(ge(max_row_clue, compare_blocks_rows), True), _if_then_else(or_(True, True), _if_then_else(True, 0, zeros_diff_rows), _if_then_else(True, ones_diff_rows, zeros_diff_rows)), _if_then_else(or_(True, ge(_if_then_else(False, 0, ones_diff_rows), _if_then_else(True, compare_blocks_rows, _if_then_else(True, 2, zeros_diff_cols)))), _if_then_else(False, max_row_clue, compare_blocks_rows), _if_then_else(False, -42, 4))), _if_then_else(or_(le(compare_blocks_rows, 4), le(compare_blocks_cols, max_col_clue)), _if_then_else(ge(2, compare_blocks_cols), _if_then_else(False, 2, max_col_clue), _if_then_else(True, zeros_diff_rows, 0)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 4, ones_diff_rows)))), 1, _if_then_else(False, 4, zeros_diff_rows)))
or_(ge(_if_then_else(or_(ge(zeros_diff_cols, ones_diff_rows), le(4, 2)), _if_then_else(or_(False, False), _if_then_else(True, max_col_clue, 4), _if_then_else(True, max_row_clue, zeros_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(True, 0, max_row_clue))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, 49, 3), _if_then_else(True, zeros_diff_cols, compare_blocks_cols)), _if_then_else(le(max_col_clue, 3), _if_then_else(False, 2, zeros_diff_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_cols)))), or_(and_(or_(or_(False, True), ge(2, 1)), and_(le(ones_diff_rows, 0), ge(0, 2))), and_(le(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, 1, 1)), or_(True, or_(False, False)))))
le(_if_then_else(False, -82, ones_diff_rows), _if_then_else(True, _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, zeros_diff_cols, ones_diff_cols)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(True, 1, 4)), _if_then_else(ge(ones_diff_rows, 3), _if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(True, 2, zeros_diff_cols))), compare_blocks_cols))
ge(_if_then_else(or_(True, True), zeros_diff_rows, 0), _if_then_else(True, _if_then_else(False, 0, max_row_clue), zeros_diff_rows))
le(1, _if_then_else(True, zeros_diff_rows, _if_then_else(and_(and_(True, True), or_(True, False)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(True, max_col_clue, 0)), _if_then_else(or_(False, True), _if_then_else(False, max_row_clue, max_row_clue), _if_then_else(False, ones_diff_cols, 1)))))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(_if_then_else(ge(ones_diff_rows, max_row_clue), compare_blocks_rows, max_row_clue), _if_then_else(True, ones_diff_rows, 0))
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, compare_blocks_cols, 1))), _if_then_else(and_(False, or_(False, False)), _if_then_else(or_(True, True), _if_then_else(True, 4, 51), _if_then_else(True, 0, -78)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(True, max_col_clue, max_col_clue)), or_(or_(False, True), True))))
and_(ge(_if_then_else(or_(and_(True, False), False), 4, zeros_diff_cols), compare_blocks_cols), and_(True, True))
or_(or_(False, True), or_(True, False))
and_(or_(True, False), False)
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
ge(1, _if_then_else(True, ones_diff_rows, -18))
and_(ge(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 1))), _if_then_else(and_(and_(True, True), or_(False, False)), _if_then_else(or_(True, True), _if_then_else(True, 4, 51), _if_then_else(True, 0, -78)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), True))
and_(ge(compare_blocks_cols, compare_blocks_cols), and_(and_(ge(zeros_diff_rows, ones_diff_rows), and_(False, False)), False))
or_(or_(False, True), or_(True, False))
and_(or_(ge(zeros_diff_cols, max_col_clue), False), le(2, max_row_clue))
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
or_(le(max_row_clue, max_col_clue), and_(and_(or_(le(2, 4), False), le(1, zeros_diff_cols)), and_(True, ge(max_col_clue, _if_then_else(or_(True, True), compare_blocks_rows, _if_then_else(False, zeros_diff_rows, zeros_diff_rows))))))
and_(le(_if_then_else(or_(True, True), ones_diff_rows, zeros_diff_cols), _if_then_else(ge(max_row_clue, 0), _if_then_else(True, compare_blocks_cols, _if_then_else(or_(True, False), _if_then_else(False, _if_then_else(True, compare_blocks_cols, max_row_clue), 1), _if_then_else(False, 4, compare_blocks_cols))), _if_then_else(ge(ones_diff_cols, ones_diff_rows), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_rows, 2), _if_then_else(False, zeros_diff_cols, 3)), zeros_diff_cols))), or_(True, False))
and_(or_(False, True), or_(or_(ge(max_row_clue, 3), ge(_if_then_else(True, max_col_clue, -75), ones_diff_rows)), False))
le(_if_then_else(ge(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(True, 4, 4), _if_then_else(False, 3, compare_blocks_rows)), _if_then_else(le(ones_diff_rows, max_col_clue), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, 4, ones_diff_cols))), _if_then_else(le(_if_then_else(False, ones_diff_cols, 3), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(3, 0), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 4, 4)), _if_then_else(ge(3, zeros_diff_rows), _if_then_else(True, 4, ones_diff_cols), _if_then_else(True, zeros_diff_cols, zeros_diff_rows))), _if_then_else(or_(and_(True, False), and_(False, False)), _if_then_else(and_(True, False), _if_then_else(False, 1, 0), _if_then_else(False, ones_diff_rows, 25)), _if_then_else(False, _if_then_else(True, max_col_clue, max_row_clue), _if_then_else(False, max_col_clue, 4)))), _if_then_else(or_(ge(_if_then_else(False, ones_diff_cols, max_col_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), and_(ge(compare_blocks_cols, 50), and_(True, False))), _if_then_else(and_(ge(max_row_clue, zeros_diff_rows), and_(False, True)), _if_then_else(le(ones_diff_rows, ones_diff_cols), _if_then_else(False, 3, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), _if_then_else(ge(3, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, max_col_clue), _if_then_else(True, zeros_diff_cols, 1))), _if_then_else(ge(_if_then_else(False, 0, _if_then_else(or_(False, False), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(True, ones_diff_rows, 2))), zeros_diff_rows), _if_then_else(and_(False, True), _if_then_else(and_(le(4, ones_diff_cols), le(-65, ones_diff_cols)), -48, max_col_clue), _if_then_else(False, 3, 3)), _if_then_else(and_(True, True), _if_then_else(True, 4, 2), _if_then_else(True, 59, max_row_clue)))))
and_(le(2, compare_blocks_rows), or_(False, True))
VAL TREES:
mul(mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), mul(add(ones_diff_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(compare_blocks_rows, zeros_diff_cols), mul(-22, zeros_diff_cols))
add(mul(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)), mul(mul(ones_diff_rows, -97), add(zeros_diff_rows, ones_diff_rows)))
add(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_rows))
mul(mul(add(ones_diff_rows, ones_diff_cols), 66), mul(zeros_diff_rows, -5))
mul(add(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)))
COND TREES:
or_(le(max_row_clue, max_col_clue), and_(True, ge(ones_diff_rows, _if_then_else(and_(le(_if_then_else(and_(True, False), _if_then_else(False, ones_diff_rows, max_col_clue), _if_then_else(False, 0, 4)), _if_then_else(and_(False, True), _if_then_else(True, ones_diff_rows, 2), _if_then_else(True, ones_diff_rows, 2))), or_(and_(le(ones_diff_cols, 1), or_(False, False)), and_(le(max_col_clue, max_row_clue), le(2, 4)))), _if_then_else(and_(or_(ge(compare_blocks_cols, ones_diff_cols), ge(zeros_diff_rows, 4)), and_(ge(ones_diff_cols, -26), le(3, 4))), _if_then_else(ge(_if_then_else(False, 0, ones_diff_rows), _if_then_else(False, ones_diff_rows, 2)), _if_then_else(ge(max_row_clue, 0), _if_then_else(False, compare_blocks_cols, 3), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(True, ones_diff_rows, max_row_clue))), _if_then_else(and_(ge(zeros_diff_cols, 4), ge(1, 0)), _if_then_else(and_(False, False), _if_then_else(True, ones_diff_cols, ones_diff_rows), _if_then_else(True, -89, ones_diff_rows)), _if_then_else(ge(max_row_clue, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(False, ones_diff_rows, zeros_diff_rows)))), _if_then_else(ge(_if_then_else(and_(False, False), _if_then_else(False, ones_diff_cols, 4), _if_then_else(True, ones_diff_rows, 0)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, -19), _if_then_else(True, ones_diff_cols, compare_blocks_cols))), _if_then_else(and_(le(-42, 4), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(False, 2, 4), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(or_(False, True), _if_then_else(True, 1, max_row_clue), _if_then_else(True, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, 3, 1), _if_then_else(False, -95, max_row_clue)), _if_then_else(and_(False, True), _if_then_else(True, max_row_clue, ones_diff_rows), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(max_row_clue, max_col_clue), _if_then_else(True, 3, 3), _if_then_else(True, compare_blocks_rows, 4))))))))
and_(le(_if_then_else(ge(ones_diff_rows, _if_then_else(False, compare_blocks_cols, max_col_clue)), ones_diff_rows, zeros_diff_cols), _if_then_else(ge(_if_then_else(le(37, 1), _if_then_else(le(max_row_clue, _if_then_else(False, 2, _if_then_else(True, compare_blocks_rows, compare_blocks_cols))), _if_then_else(True, _if_then_else(True, 1, zeros_diff_rows), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, max_row_clue), ones_diff_cols)), _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), _if_then_else(le(max_col_clue, ones_diff_rows), zeros_diff_cols, zeros_diff_rows)), 0), 55, _if_then_else(ge(ones_diff_cols, ones_diff_rows), compare_blocks_rows, zeros_diff_cols))), or_(True, False))
and_(ge(-17, 4), and_(ge(zeros_diff_rows, compare_blocks_rows), ge(3, zeros_diff_cols)))
le(_if_then_else(ge(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(True, 4, 4), _if_then_else(False, 3, compare_blocks_rows)), _if_then_else(le(ones_diff_rows, max_col_clue), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, 4, ones_diff_cols))), _if_then_else(le(_if_then_else(False, ones_diff_cols, 3), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(3, 0), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 4, 4)), _if_then_else(ge(3, zeros_diff_rows), _if_then_else(True, 4, ones_diff_cols), _if_then_else(True, zeros_diff_cols, zeros_diff_rows))), _if_then_else(or_(and_(True, False), and_(False, False)), _if_then_else(and_(True, False), _if_then_else(False, 1, 0), _if_then_else(False, ones_diff_rows, 25)), _if_then_else(le(3, 0), _if_then_else(False, ones_diff_rows, 2), _if_then_else(False, max_col_clue, 2)))), _if_then_else(or_(ge(_if_then_else(False, ones_diff_cols, max_col_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), and_(ge(compare_blocks_cols, 50), and_(True, False))), _if_then_else(and_(ge(max_row_clue, zeros_diff_rows), and_(False, True)), _if_then_else(le(ones_diff_rows, ones_diff_cols), _if_then_else(False, 3, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), _if_then_else(ge(3, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, max_col_clue), _if_then_else(True, zeros_diff_cols, 1))), _if_then_else(ge(_if_then_else(False, 0, compare_blocks_rows), _if_then_else(False, 1, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, -48, max_col_clue), _if_then_else(False, 3, 3)), _if_then_else(and_(True, True), _if_then_else(True, 4, 2), _if_then_else(True, 59, max_row_clue)))))
and_(le(2, compare_blocks_rows), False)
VAL TREES:
mul(mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), mul(add(ones_diff_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(compare_blocks_rows, zeros_diff_cols), mul(-22, zeros_diff_cols))
add(mul(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)), mul(mul(ones_diff_rows, -97), add(zeros_diff_rows, ones_diff_rows)))
add(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_rows))
mul(mul(add(ones_diff_rows, ones_diff_cols), 66), mul(zeros_diff_rows, -5))
mul(add(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)))
COND TREES:
ge(_if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, _if_then_else(False, 2, compare_blocks_cols))), 3, 3), _if_then_else(False, 4, _if_then_else(True, ones_diff_rows, 0)))
or_(and_(True, True), True)
ge(_if_then_else(False, -82, 1), _if_then_else(and_(True, False), 1, compare_blocks_rows))
or_(and_(and_(le(_if_then_else(True, 3, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, max_col_clue)), ge(_if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(False, 4, zeros_diff_rows))), or_(and_(and_(True, False), ge(4, 62)), ge(_if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 12, 27)))), le(_if_then_else(or_(or_(False, False), and_(False, True)), _if_then_else(or_(False, True), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 0, 3)), _if_then_else(ge(compare_blocks_rows, 1), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, compare_blocks_rows, 1))), _if_then_else(and_(le(max_row_clue, max_col_clue), le(-84, 0)), _if_then_else(True, _if_then_else(False, max_col_clue, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), _if_then_else(ge(ones_diff_cols, 1), _if_then_else(True, 4, 0), _if_then_else(False, 1, 2)))))
ge(2, -10)
VAL TREES:
add(mul(5, zeros_diff_cols), add(ones_diff_cols, mul(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows))))
mul(add(compare_blocks_cols, ones_diff_rows), mul(mul(mul(-52, add(-32, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols))), add(zeros_diff_rows, zeros_diff_cols)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(zeros_diff_cols, -62), add(4, -27))), mul(add(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), mul(add(-65, 87), add(compare_blocks_rows, 47))))
add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, add(add(add(mul(compare_blocks_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_rows)), mul(add(56, zeros_diff_cols), add(93, 43))), add(mul(add(compare_blocks_cols, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows))))))
mul(mul(zeros_diff_rows, mul(mul(add(add(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, 25), add(-93, ones_diff_rows))), add(mul(mul(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows)), add(mul(-45, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols))))), mul(-18, compare_blocks_cols))
add(mul(ones_diff_rows, mul(add(add(add(add(16, 6), add(compare_blocks_cols, ones_diff_cols)), add(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows))), add(add(mul(ones_diff_cols, 28), mul(compare_blocks_rows, compare_blocks_cols)), mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_cols)))), add(mul(add(mul(ones_diff_cols, ones_diff_rows), add(compare_blocks_rows, -48)), add(mul(zeros_diff_rows, -21), mul(zeros_diff_cols, zeros_diff_cols))), add(add(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, zeros_diff_rows)), mul(add(8, ones_diff_cols), add(ones_diff_rows, compare_blocks_cols)))))), add(compare_blocks_cols, zeros_diff_cols))
COND TREES:
ge(2, _if_then_else(ge(_if_then_else(True, ones_diff_rows, ones_diff_cols), max_col_clue), 1, _if_then_else(False, 4, zeros_diff_rows)))
or_(or_(True, True), True)
le(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(True, _if_then_else(True, 1, 0), compare_blocks_cols))
ge(_if_then_else(False, 0, ones_diff_cols), compare_blocks_cols)
le(1, _if_then_else(or_(False, True), _if_then_else(False, _if_then_else(and_(False, True), zeros_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_cols, 0)), 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(zeros_diff_rows, _if_then_else(or_(ge(max_row_clue, compare_blocks_rows), or_(True, False)), zeros_diff_rows, _if_then_else(or_(True, False), _if_then_else(False, max_row_clue, compare_blocks_rows), _if_then_else(False, -42, 4))))
and_(ge(_if_then_else(and_(ge(compare_blocks_cols, compare_blocks_rows), True), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(and_(False, True), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, compare_blocks_cols, 1))), _if_then_else(and_(False, or_(False, False)), ones_diff_rows, _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), max_col_clue))), or_(and_(or_(le(zeros_diff_rows, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(True, max_col_clue, max_col_clue)), or_(or_(False, True), and_(False, True)))))
and_(ge(3, _if_then_else(True, 4, _if_then_else(True, 1, _if_then_else(False, 0, compare_blocks_cols)))), True)
or_(or_(True, le(ones_diff_cols, zeros_diff_rows)), or_(True, False))
and_(or_(True, True), True)
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
or_(True, ge(_if_then_else(or_(ge(max_row_clue, compare_blocks_rows), True), _if_then_else(or_(True, True), _if_then_else(True, 0, _if_then_else(or_(True, True), _if_then_else(True, 0, 0), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), _if_then_else(True, ones_diff_rows, zeros_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, max_row_clue, compare_blocks_rows), _if_then_else(False, -42, 4))), _if_then_else(or_(True, le(compare_blocks_cols, max_col_clue)), _if_then_else(ge(2, compare_blocks_cols), _if_then_else(False, 2, max_col_clue), _if_then_else(True, zeros_diff_rows, 0)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 4, ones_diff_rows)))))
or_(and_(True, and_(ge(1, ones_diff_cols), ge(ones_diff_rows, _if_then_else(False, compare_blocks_cols, _if_then_else(False, zeros_diff_cols, compare_blocks_rows))))), or_(True, True))
ge(_if_then_else(True, 4, zeros_diff_cols), compare_blocks_cols)
ge(_if_then_else(le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(ge(3, zeros_diff_rows), 1, zeros_diff_cols)), _if_then_else(ge(compare_blocks_rows, 0), _if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(False, max_col_clue, max_col_clue)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, max_row_clue, 0))), _if_then_else(and_(ge(1, 0), or_(True, True)), _if_then_else(ge(0, max_col_clue), _if_then_else(True, ones_diff_cols, 0), _if_then_else(True, 1, ones_diff_cols)), _if_then_else(le(ones_diff_cols, -1), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(False, compare_blocks_rows, zeros_diff_cols))))
ge(_if_then_else(le(_if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(False, 0, 3)), 2, ones_diff_rows), _if_then_else(False, max_row_clue, 3))
VAL TREES:
mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_rows))
mul(add(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols))
mul(mul(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, 8)), add(mul(zeros_diff_rows, zeros_diff_cols), add(51, ones_diff_rows)))
add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, -46)), mul(mul(ones_diff_cols, 48), add(compare_blocks_rows, zeros_diff_rows)))
add(add(add(mul(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_cols))), mul(mul(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows)), mul(mul(83, -28), mul(-88, zeros_diff_cols)))), add(mul(mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, -3)), mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, ones_diff_rows))), add(add(mul(ones_diff_cols, ones_diff_rows), mul(-67, ones_diff_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_cols)))))
mul(mul(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, ones_diff_rows))
COND TREES:
le(-18, 1)
ge(_if_then_else(ge(compare_blocks_cols, zeros_diff_cols), 1, -11), _if_then_else(ge(compare_blocks_cols, zeros_diff_cols), _if_then_else(True, 1, 0), _if_then_else(and_(False, True), max_row_clue, 4)))
le(_if_then_else(True, _if_then_else(True, 3, ones_diff_rows), -82), _if_then_else(False, _if_then_else(False, compare_blocks_cols, zeros_diff_rows), 4))
and_(True, ge(4, 62))
or_(ge(_if_then_else(True, 4, _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(False, 1, _if_then_else(False, ones_diff_rows, max_col_clue))), and_(or_(False, False), or_(False, False)))
VAL TREES:
add(mul(ones_diff_rows, ones_diff_rows), add(mul(zeros_diff_rows, ones_diff_cols), ones_diff_cols))
add(add(ones_diff_cols, zeros_diff_cols), add(mul(zeros_diff_rows, -70), mul(zeros_diff_rows, mul(compare_blocks_rows, zeros_diff_cols))))
add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, mul(zeros_diff_cols, -23)))
mul(mul(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_cols, -50))
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(add(compare_blocks_cols, zeros_diff_rows), mul(mul(mul(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), zeros_diff_rows), add(ones_diff_cols, ones_diff_cols))))
add(add(mul(add(ones_diff_rows, ones_diff_rows), mul(-70, add(mul(add(mul(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_rows, zeros_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_rows), mul(ones_diff_cols, 71))), add(mul(mul(-71, ones_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_cols)))))), mul(add(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_cols, 4))), add(add(add(compare_blocks_rows, ones_diff_rows), add(-86, compare_blocks_rows)), mul(mul(-86, compare_blocks_cols), add(ones_diff_cols, zeros_diff_cols))))
COND TREES:
ge(2, _if_then_else(ge(_if_then_else(True, max_col_clue, _if_then_else(False, 2, compare_blocks_cols)), max_col_clue), 0, _if_then_else(False, 4, zeros_diff_rows)))
or_(True, False)
le(_if_then_else(False, 4, ones_diff_rows), _if_then_else(True, _if_then_else(True, 1, 0), compare_blocks_cols))
ge(_if_then_else(le(compare_blocks_rows, 1), zeros_diff_rows, 0), compare_blocks_cols)
le(3, _if_then_else(or_(False, True), _if_then_else(False, 2, 2), 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(2, _if_then_else(True, 1, _if_then_else(False, 4, _if_then_else(False, compare_blocks_rows, max_row_clue))))
or_(ge(zeros_diff_cols, compare_blocks_cols), and_(False, or_(True, or_(ge(_if_then_else(and_(ge(compare_blocks_cols, -66), ge(max_col_clue, ones_diff_rows)), 2, zeros_diff_rows), _if_then_else(False, 3, 4)), and_(False, True)))))
or_(ge(_if_then_else(and_(le(4, compare_blocks_rows), or_(False, True)), _if_then_else(and_(True, False), _if_then_else(True, 4, max_col_clue), _if_then_else(False, 3, ones_diff_rows)), _if_then_else(le(zeros_diff_cols, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, -98))), _if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, max_row_clue, 4)), _if_then_else(or_(False, True), _if_then_else(False, max_row_clue, 1), _if_then_else(False, ones_diff_cols, compare_blocks_rows)))), and_(and_(le(_if_then_else(False, 29, 0), _if_then_else(True, ones_diff_rows, zeros_diff_rows)), le(_if_then_else(True, 4, ones_diff_rows), _if_then_else(False, 2, 84))), ge(_if_then_else(and_(True, False), _if_then_else(False, zeros_diff_cols, 0), _if_then_else(False, compare_blocks_rows, compare_blocks_rows)), _if_then_else(ge(ones_diff_rows, 2), _if_then_else(False, max_row_clue, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, max_row_clue)))))
ge(_if_then_else(False, zeros_diff_rows, 0), _if_then_else(False, _if_then_else(True, _if_then_else(or_(or_(and_(or_(False, True), le(zeros_diff_cols, compare_blocks_cols)), or_(le(2, compare_blocks_rows), or_(True, True))), ge(_if_then_else(or_(False, True), _if_then_else(False, ones_diff_rows, 1), _if_then_else(True, 2, 2)), _if_then_else(le(10, compare_blocks_rows), _if_then_else(False, 3, ones_diff_rows), _if_then_else(True, zeros_diff_rows, zeros_diff_cols)))), _if_then_else(le(_if_then_else(and_(False, False), _if_then_else(False, max_row_clue, 1), _if_then_else(False, 17, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(False, 1, zeros_diff_rows))), _if_then_else(and_(ge(3, 2), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(False, 1, 4), _if_then_else(True, 2, ones_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, zeros_diff_rows, zeros_diff_cols), _if_then_else(True, 4, compare_blocks_rows))), _if_then_else(or_(le(1, 6), le(ones_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(True, 3, 0), _if_then_else(False, max_row_clue, 49)), _if_then_else(or_(False, False), _if_then_else(True, 0, 3), _if_then_else(False, ones_diff_cols, ones_diff_cols)))), _if_then_else(and_(and_(and_(True, False), and_(False, False)), and_(le(ones_diff_cols, 3), or_(True, False))), _if_then_else(ge(_if_then_else(False, 4, 0), _if_then_else(False, max_row_clue, max_row_clue)), _if_then_else(le(compare_blocks_cols, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, 82), _if_then_else(False, 0, -27)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, 2, 4))), _if_then_else(ge(_if_then_else(True, 3, compare_blocks_rows), _if_then_else(False, max_row_clue, 1)), _if_then_else(le(max_col_clue, 0), _if_then_else(False, 4, 0), _if_then_else(False, zeros_diff_cols, max_row_clue)), _if_then_else(and_(False, True), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, 2))))), max_row_clue), zeros_diff_rows))
le(max_row_clue, _if_then_else(and_(ge(_if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, -100)), le(_if_then_else(True, zeros_diff_rows, -72), _if_then_else(False, compare_blocks_rows, compare_blocks_cols))), _if_then_else(ge(_if_then_else(False, 99, -66), _if_then_else(True, max_row_clue, max_row_clue)), _if_then_else(ge(zeros_diff_rows, 4), _if_then_else(True, 91, 2), _if_then_else(True, ones_diff_cols, 3)), _if_then_else(and_(False, True), _if_then_else(False, zeros_diff_rows, compare_blocks_cols), _if_then_else(False, -26, max_col_clue))), _if_then_else(and_(le(1, max_col_clue), le(52, compare_blocks_cols)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(False, 1, 23), _if_then_else(False, compare_blocks_rows, 1)), _if_then_else(or_(True, False), _if_then_else(False, ones_diff_rows, 3), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)))))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(2, _if_then_else(False, 1, _if_then_else(False, 4, zeros_diff_rows)))
or_(True, and_(True, True))
le(_if_then_else(ge(3, ones_diff_rows), -82, ones_diff_rows), _if_then_else(True, _if_then_else(True, 1, 0), _if_then_else(True, -69, compare_blocks_cols)))
ge(_if_then_else(True, zeros_diff_rows, 0), compare_blocks_cols)
le(1, _if_then_else(or_(False, False), _if_then_else(False, 3, 2), 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows)), add(mul(compare_blocks_cols, 5), add(compare_blocks_cols, zeros_diff_cols))), add(mul(mul(zeros_diff_rows, zeros_diff_rows), mul(13, compare_blocks_cols)), add(add(ones_diff_rows, -68), add(zeros_diff_cols, compare_blocks_rows)))), -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(add(mul(mul(mul(zeros_diff_cols, zeros_diff_rows), mul(-63, -63)), add(add(compare_blocks_rows, -31), add(ones_diff_cols, compare_blocks_rows))), add(mul(add(ones_diff_rows, 86), add(-84, ones_diff_rows)), add(add(compare_blocks_cols, ones_diff_cols), mul(-27, -94)))), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, add(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols))), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, mul(add(compare_blocks_cols, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(_if_then_else(True, ones_diff_rows, zeros_diff_rows), _if_then_else(True, ones_diff_rows, -18))
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(and_(False, True), zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 1))), _if_then_else(and_(and_(True, True), or_(False, False)), _if_then_else(or_(True, True), _if_then_else(True, 4, 51), _if_then_else(True, 0, -78)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(True, max_col_clue, max_col_clue)), or_(or_(False, True), and_(False, True)))))
and_(ge(3, compare_blocks_cols), False)
or_(True, False)
and_(or_(False, False), le(zeros_diff_cols, max_row_clue))
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
ge(_if_then_else(True, ones_diff_rows, zeros_diff_rows), _if_then_else(True, ones_diff_rows, -18))
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(and_(False, True), zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 1))), _if_then_else(and_(and_(True, True), or_(False, False)), _if_then_else(or_(True, True), _if_then_else(True, 4, 51), _if_then_else(True, 0, -78)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(True, max_col_clue, max_col_clue)), or_(or_(False, True), and_(False, True)))))
and_(ge(3, compare_blocks_cols), False)
or_(True, False)
and_(or_(False, False), le(zeros_diff_cols, max_row_clue))
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(add(mul(zeros_diff_cols, zeros_diff_cols), add(-11, compare_blocks_cols)), zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(add(mul(mul(add(zeros_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, -99)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_rows))), add(add(mul(ones_diff_rows, ones_diff_cols), add(50, compare_blocks_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, -28)))), mul(mul(add(add(zeros_diff_cols, -6), mul(92, zeros_diff_cols)), add(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, -37))), add(mul(add(ones_diff_rows, -24), mul(ones_diff_rows, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_cols))))), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
ge(2, _if_then_else(True, 1, _if_then_else(True, 4, zeros_diff_rows)))
or_(ge(_if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(True, 1, 2)), compare_blocks_cols), and_(False, True))
le(_if_then_else(or_(ge(_if_then_else(True, compare_blocks_rows, zeros_diff_rows), -14), True), -82, ones_diff_rows), _if_then_else(True, -69, compare_blocks_cols))
ge(_if_then_else(True, zeros_diff_rows, 0), _if_then_else(True, _if_then_else(True, 0, max_row_clue), zeros_diff_rows))
le(1, _if_then_else(or_(True, True), 2, 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(_if_then_else(True, 3, 3), _if_then_else(ge(_if_then_else(True, _if_then_else(le(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, _if_then_else(False, compare_blocks_rows, 2), _if_then_else(False, max_col_clue, 3))), _if_then_else(True, _if_then_else(True, 2, 4), ones_diff_cols), _if_then_else(True, _if_then_else(and_(False, False), -67, 4), max_col_clue)), _if_then_else(ge(_if_then_else(True, 0, _if_then_else(False, ones_diff_rows, zeros_diff_rows)), max_row_clue), _if_then_else(False, 4, _if_then_else(ge(2, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), compare_blocks_rows)), _if_then_else(False, 34, 1))), max_col_clue), 1, -18))
or_(or_(ge(zeros_diff_cols, max_col_clue), and_(False, True)), False)
ge(_if_then_else(and_(True, or_(ge(_if_then_else(ge(compare_blocks_rows, 2), _if_then_else(False, ones_diff_cols, 2), _if_then_else(True, max_col_clue, -22)), _if_then_else(and_(False, False), _if_then_else(True, max_row_clue, 1), _if_then_else(True, 1, max_col_clue))), or_(False, True))), ones_diff_rows, 1), _if_then_else(False, 1, compare_blocks_rows))
or_(and_(and_(le(_if_then_else(True, 3, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, max_col_clue)), ge(_if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(False, 4, zeros_diff_rows))), or_(and_(and_(True, False), ge(4, 62)), ge(_if_then_else(True, ones_diff_cols, ones_diff_cols), _if_then_else(False, 12, 27)))), le(_if_then_else(or_(or_(False, False), and_(False, True)), _if_then_else(or_(False, True), _if_then_else(False, 2, _if_then_else(le(ones_diff_rows, compare_blocks_cols), _if_then_else(ge(4, 62), 4, 3), _if_then_else(ge(93, max_row_clue), 0, compare_blocks_rows))), _if_then_else(True, 0, 3)), _if_then_else(ge(compare_blocks_rows, 1), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, compare_blocks_rows, 1))), _if_then_else(and_(le(_if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), max_col_clue), le(-84, 0)), _if_then_else(True, _if_then_else(False, max_col_clue, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), _if_then_else(ge(ones_diff_cols, 1), _if_then_else(True, 4, 0), _if_then_else(False, 1, 2)))))
ge(_if_then_else(ge(ones_diff_cols, max_row_clue), _if_then_else(True, 2, zeros_diff_rows), _if_then_else(False, _if_then_else(ge(_if_then_else(le(_if_then_else(False, ones_diff_cols, max_col_clue), _if_then_else(False, zeros_diff_rows, compare_blocks_cols)), _if_then_else(le(0, 4), _if_then_else(False, 3, 76), _if_then_else(True, 4, zeros_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, max_row_clue, max_row_clue))), _if_then_else(le(_if_then_else(True, 2, zeros_diff_cols), _if_then_else(True, 1, 3)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_rows, zeros_diff_cols), _if_then_else(True, 3, 3)), _if_then_else(and_(ge(_if_then_else(True, -87, compare_blocks_rows), _if_then_else(False, 1, ones_diff_cols)), and_(or_(True, False), and_(True, True))), _if_then_else(False, 2, 0), _if_then_else(True, 4, ones_diff_cols)))), _if_then_else(and_(le(_if_then_else(True, 96, max_row_clue), _if_then_else(True, 2, 2)), or_(le(34, ones_diff_rows), and_(True, True))), _if_then_else(or_(ge(ones_diff_cols, zeros_diff_rows), ge(3, ones_diff_cols)), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, ones_diff_rows, 4)), _if_then_else(and_(True, False), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(False, 2, 3))), _if_then_else(or_(and_(False, False), le(compare_blocks_rows, 0)), _if_then_else(ge(2, 0), _if_then_else(True, ones_diff_cols, 0), _if_then_else(True, ones_diff_cols, ones_diff_rows)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 4, ones_diff_rows), _if_then_else(False, max_col_clue, max_col_clue)))), _if_then_else(le(_if_then_else(le(80, 1), _if_then_else(True, max_row_clue, max_col_clue), _if_then_else(True, max_row_clue, max_row_clue)), _if_then_else(ge(ones_diff_cols, 21), _if_then_else(False, compare_blocks_rows, 1), _if_then_else(False, zeros_diff_rows, 0))), _if_then_else(le(_if_then_else(True, 1, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, 3)), _if_then_else(le(ones_diff_rows, compare_blocks_rows), _if_then_else(True, 1, 3), _if_then_else(True, 3, 2)), _if_then_else(and_(False, False), _if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(True, 2, 83))), _if_then_else(ge(_if_then_else(True, 2, ones_diff_cols), _if_then_else(True, 0, ones_diff_cols)), _if_then_else(le(max_col_clue, 4), _if_then_else(False, -22, 4), _if_then_else(True, max_col_clue, zeros_diff_cols)), _if_then_else(ge(zeros_diff_cols, ones_diff_rows), _if_then_else(True, 0, 2), _if_then_else(False, zeros_diff_rows, compare_blocks_cols))))), 4)), -10)
VAL TREES:
add(mul(5, zeros_diff_cols), add(ones_diff_cols, zeros_diff_cols))
mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, add(zeros_diff_rows, zeros_diff_cols)))
mul(mul(mul(add(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), add(add(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), mul(add(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), mul(add(-65, 87), add(compare_blocks_rows, 47))))
add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, 65))
mul(mul(zeros_diff_rows, add(compare_blocks_cols, mul(ones_diff_cols, zeros_diff_rows))), mul(-18, compare_blocks_cols))
add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols))
COND TREES:
ge(zeros_diff_rows, _if_then_else(False, 4, _if_then_else(True, compare_blocks_rows, max_row_clue)))
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(and_(False, True), _if_then_else(False, 1, ones_diff_cols), max_row_clue)), _if_then_else(and_(False, or_(False, False)), ones_diff_rows, _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(zeros_diff_rows, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(True, max_col_clue, max_col_clue)), or_(or_(False, True), and_(False, True)))))
and_(False, False)
or_(or_(True, False), or_(True, and_(True, True)))
and_(or_(True, False), le(2, max_row_clue))
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(mul(mul(zeros_diff_rows, add(add(-32, compare_blocks_rows), ones_diff_cols)), mul(mul(ones_diff_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols))), zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), add(add(add(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_cols)), mul(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_rows)), add(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_rows, ones_diff_cols))))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(add(add(-29, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
ge(zeros_diff_rows, _if_then_else(or_(le(0, compare_blocks_rows), or_(False, True)), ones_diff_rows, ones_diff_cols))
and_(True, or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(False, or_(or_(False, True), and_(False, True)))))
and_(and_(ge(_if_then_else(False, ones_diff_rows, 4), _if_then_else(False, 1, 1)), or_(le(compare_blocks_rows, ones_diff_rows), and_(True, False))), and_(ge(-17, 4), True))
or_(or_(False, False), or_(and_(False, False), le(_if_then_else(True, zeros_diff_cols, _if_then_else(True, _if_then_else(False, 0, zeros_diff_cols), -36)), _if_then_else(False, 3, _if_then_else(False, _if_then_else(False, zeros_diff_rows, 4), compare_blocks_rows)))))
and_(or_(and_(True, or_(False, False)), or_(le(2, compare_blocks_rows), False)), le(ones_diff_rows, 3))
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
ge(_if_then_else(or_(or_(and_(False, True), and_(False, True)), le(_if_then_else(False, max_col_clue, 1), _if_then_else(False, 0, max_col_clue))), _if_then_else(or_(le(compare_blocks_cols, compare_blocks_rows), or_(False, True)), _if_then_else(ge(ones_diff_rows, max_col_clue), _if_then_else(False, 95, compare_blocks_cols), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, 0, zeros_diff_cols))), _if_then_else(or_(or_(True, False), ge(zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(True, 1, 2), _if_then_else(True, zeros_diff_rows, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 0), _if_then_else(True, 1, 2)), le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, 2, 19))), _if_then_else(or_(le(ones_diff_rows, zeros_diff_cols), and_(True, True)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, 0, 1)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, 4, max_row_clue))), _if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), 0, _if_then_else(True, _if_then_else(False, compare_blocks_cols, 1), _if_then_else(True, 1, compare_blocks_rows)))))
le(_if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(True, ones_diff_rows, zeros_diff_cols))
or_(and_(True, False), or_(True, True))
and_(ge(_if_then_else(or_(and_(True, False), ge(compare_blocks_cols, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 2, 2), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), _if_then_else(or_(or_(True, False), and_(True, True)), _if_then_else(and_(le(0, 4), False), _if_then_else(False, max_row_clue, 1), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(max_col_clue, 4), _if_then_else(True, ones_diff_cols, 0), _if_then_else(False, 95, ones_diff_rows)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, 3), _if_then_else(and_(le(max_row_clue, 0), True), -99, 3)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(-96, 3), _if_then_else(True, 2, ones_diff_cols), _if_then_else(False, 0, -87))), _if_then_else(ge(_if_then_else(False, -1, 3), max_row_clue), _if_then_else(ge(compare_blocks_rows, max_row_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, max_col_clue, 99)))))
or_(True, ge(max_col_clue, 2))
VAL TREES:
add(mul(ones_diff_rows, ones_diff_cols), add(mul(add(mul(zeros_diff_cols, -1), zeros_diff_cols), compare_blocks_rows), mul(add(zeros_diff_rows, ones_diff_cols), zeros_diff_cols)))
mul(mul(zeros_diff_cols, compare_blocks_cols), add(add(add(mul(compare_blocks_rows, ones_diff_cols), zeros_diff_rows), add(compare_blocks_rows, mul(compare_blocks_cols, zeros_diff_cols))), compare_blocks_rows))
add(add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(mul(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, compare_blocks_rows))), add(mul(-82, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))))
mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_cols, add(add(add(mul(-55, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, ones_diff_rows), add(compare_blocks_rows, compare_blocks_rows))), mul(mul(add(ones_diff_rows, 75), mul(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))))))
add(add(mul(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols)), mul(ones_diff_cols, -22))
add(add(compare_blocks_rows, ones_diff_cols), add(mul(add(-78, mul(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows))), zeros_diff_cols), mul(ones_diff_rows, compare_blocks_cols)))
COND TREES:
ge(_if_then_else(or_(or_(and_(False, True), and_(False, True)), le(_if_then_else(False, max_col_clue, 1), compare_blocks_rows)), _if_then_else(or_(le(0, compare_blocks_rows), or_(False, True)), _if_then_else(ge(ones_diff_rows, max_col_clue), _if_then_else(False, 95, compare_blocks_cols), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, 0, zeros_diff_cols))), _if_then_else(or_(or_(True, False), ge(zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, _if_then_else(True, _if_then_else(False, 3, 3), _if_then_else(True, 1, compare_blocks_cols)))), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(True, 1, 2), _if_then_else(True, _if_then_else(False, 4, zeros_diff_rows), ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 1), _if_then_else(True, 1, 2)), le(_if_then_else(False, zeros_diff_rows, _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), _if_then_else(False, zeros_diff_rows, 19))), _if_then_else(or_(le(ones_diff_rows, zeros_diff_cols), and_(True, True)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 0, 1)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, 4, max_row_clue))), _if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(1, 3), _if_then_else(False, 3, 3), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(ge(zeros_diff_cols, 2), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(True, 1, compare_blocks_rows)))))
le(_if_then_else(and_(ge(_if_then_else(ge(_if_then_else(False, ones_diff_cols, 4), _if_then_else(False, compare_blocks_cols, 21)), _if_then_else(and_(True, False), _if_then_else(True, 74, 0), _if_then_else(True, ones_diff_rows, 3)), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, -45), _if_then_else(False, compare_blocks_rows, max_col_clue))), _if_then_else(ge(_if_then_else(False, 3, 1), _if_then_else(False, 2, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(True, 3, 0), _if_then_else(True, 3, 2)), _if_then_else(ge(compare_blocks_rows, 3), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, compare_blocks_rows)))), ge(_if_then_else(le(_if_then_else(True, ones_diff_rows, zeros_diff_rows), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(True, zeros_diff_rows, max_col_clue)), _if_then_else(and_(True, True), _if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(True, 4, -65))), _if_then_else(le(_if_then_else(False, 1, 0), _if_then_else(False, zeros_diff_cols, max_row_clue)), _if_then_else(ge(3, max_row_clue), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, True), _if_then_else(True, 3, 3), _if_then_else(False, compare_blocks_cols, -78))))), zeros_diff_cols, -78), _if_then_else(ge(ones_diff_rows, _if_then_else(False, compare_blocks_cols, max_col_clue)), ones_diff_rows, zeros_diff_cols))
or_(and_(ge(4, 4), False), ge(compare_blocks_rows, _if_then_else(False, 0, compare_blocks_rows)))
and_(ge(_if_then_else(or_(and_(True, False), ge(compare_blocks_cols, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 2, 2), _if_then_else(or_(True, False), ones_diff_rows, zeros_diff_rows))), _if_then_else(or_(or_(True, False), and_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, max_row_clue, 1), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(max_col_clue, 4), _if_then_else(True, ones_diff_cols, 0), _if_then_else(False, 95, ones_diff_rows)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, 3), _if_then_else(ge(compare_blocks_rows, 0), _if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(False, max_col_clue, max_col_clue))), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(-96, 3), _if_then_else(True, 2, ones_diff_cols), _if_then_else(False, 2, -87))), _if_then_else(ge(_if_then_else(False, -1, 3), _if_then_else(or_(True, True), 1, max_row_clue)), _if_then_else(ge(compare_blocks_rows, max_row_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, max_col_clue, 99)))))
or_(False, False)
VAL TREES:
add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows))
add(add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(-82, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))))
mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_cols, ones_diff_rows))
add(add(ones_diff_rows, 58), mul(ones_diff_cols, -22))
add(add(compare_blocks_rows, ones_diff_cols), add(add(compare_blocks_rows, compare_blocks_rows), mul(19, compare_blocks_cols)))
COND TREES:
ge(_if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), 3, 3), 1)
or_(False, or_(True, True))
ge(_if_then_else(False, ones_diff_rows, 1), _if_then_else(and_(True, False), 1, compare_blocks_rows))
or_(and_(and_(le(_if_then_else(True, 3, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, max_col_clue)), ge(_if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(False, 4, zeros_diff_rows))), or_(and_(and_(True, False), ge(4, 62)), ge(_if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 12, 27)))), le(_if_then_else(or_(or_(False, False), and_(False, True)), _if_then_else(or_(False, True), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 0, 3)), _if_then_else(True, _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, compare_blocks_rows, 1))), _if_then_else(and_(le(max_row_clue, max_col_clue), le(-84, 0)), _if_then_else(True, _if_then_else(False, max_col_clue, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), _if_then_else(ge(ones_diff_cols, 1), _if_then_else(True, 4, 0), _if_then_else(False, 1, 2)))))
ge(max_col_clue, -10)
VAL TREES:
add(mul(5, zeros_diff_cols), add(ones_diff_cols, mul(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows))))
mul(add(compare_blocks_cols, ones_diff_rows), mul(mul(mul(-52, add(-32, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols))), add(zeros_diff_rows, zeros_diff_cols)))
mul(mul(mul(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), mul(mul(zeros_diff_cols, -62), add(4, -27))), mul(add(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), mul(add(-65, 87), add(compare_blocks_rows, 47))))
add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, add(add(add(mul(compare_blocks_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_rows)), mul(add(56, zeros_diff_cols), add(93, 43))), add(mul(add(compare_blocks_cols, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows))))))
mul(mul(zeros_diff_rows, mul(mul(add(add(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, 25), add(-93, ones_diff_rows))), add(mul(mul(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows)), add(mul(-45, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols))))), mul(-18, compare_blocks_cols))
add(mul(ones_diff_rows, mul(add(add(add(add(16, 6), add(compare_blocks_cols, ones_diff_cols)), add(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows))), add(add(mul(ones_diff_cols, 28), mul(compare_blocks_rows, compare_blocks_cols)), mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_cols)))), add(mul(add(mul(ones_diff_cols, ones_diff_rows), add(compare_blocks_rows, -48)), add(mul(zeros_diff_rows, -21), mul(zeros_diff_cols, zeros_diff_cols))), add(add(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, zeros_diff_rows)), mul(add(8, ones_diff_cols), add(ones_diff_rows, compare_blocks_cols)))))), add(compare_blocks_cols, zeros_diff_cols))
COND TREES:
le(_if_then_else(le(max_row_clue, 4), _if_then_else(False, 4, _if_then_else(True, ones_diff_rows, 0)), 3), 0)
ge(_if_then_else(ge(compare_blocks_cols, zeros_diff_cols), 1, -11), _if_then_else(ge(compare_blocks_cols, zeros_diff_cols), _if_then_else(True, 1, 1), _if_then_else(and_(True, True), max_row_clue, 4)))
le(_if_then_else(True, _if_then_else(True, 4, ones_diff_rows), 4), _if_then_else(False, _if_then_else(False, compare_blocks_cols, zeros_diff_rows), 4))
and_(ge(compare_blocks_rows, 1), True)
or_(ge(_if_then_else(True, 4, _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(False, 3, _if_then_else(False, ones_diff_rows, _if_then_else(and_(False, True), zeros_diff_cols, max_row_clue)))), and_(and_(True, True), or_(False, False)))
VAL TREES:
mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), mul(compare_blocks_cols, ones_diff_rows)), ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols))
add(add(ones_diff_cols, add(mul(10, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows))), add(91, zeros_diff_rows))
add(add(compare_blocks_cols, compare_blocks_cols), mul(mul(mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(-100, zeros_diff_cols)), add(add(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows))), add(add(mul(zeros_diff_rows, 26), add(compare_blocks_rows, zeros_diff_rows)), add(mul(zeros_diff_cols, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_rows)))), mul(zeros_diff_cols, -23)))
mul(add(zeros_diff_cols, zeros_diff_rows), add(add(add(add(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_rows))), mul(mul(add(ones_diff_cols, ones_diff_rows), add(40, compare_blocks_rows)), mul(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, compare_blocks_rows)))))
add(mul(add(mul(zeros_diff_cols, add(zeros_diff_rows, 30)), add(compare_blocks_rows, compare_blocks_rows)), add(zeros_diff_rows, compare_blocks_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(38, ones_diff_rows)))
add(add(mul(add(ones_diff_rows, ones_diff_rows), mul(-70, ones_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_cols, 4))), add(add(add(compare_blocks_rows, ones_diff_rows), add(add(mul(compare_blocks_rows, compare_blocks_rows), add(73, add(ones_diff_cols, ones_diff_cols))), compare_blocks_rows)), mul(mul(-86, compare_blocks_cols), add(ones_diff_cols, zeros_diff_cols))))
COND TREES:
ge(_if_then_else(or_(or_(and_(False, True), and_(False, True)), le(_if_then_else(False, max_col_clue, 1), _if_then_else(False, 0, _if_then_else(False, zeros_diff_rows, 19)))), _if_then_else(or_(le(0, compare_blocks_rows), or_(False, True)), _if_then_else(ge(ones_diff_rows, max_col_clue), _if_then_else(False, 95, compare_blocks_cols), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(ge(zeros_diff_cols, compare_blocks_cols), _if_then_else(False, 0, max_col_clue), _if_then_else(False, 4, zeros_diff_rows)))), _if_then_else(or_(or_(True, False), ge(zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(True, 1, 2), _if_then_else(True, zeros_diff_rows, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 0), _if_then_else(True, 1, 2)), le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 19))), _if_then_else(or_(le(ones_diff_rows, zeros_diff_cols), and_(True, True)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 0, 1)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, 2, _if_then_else(False, 4, zeros_diff_rows)))), _if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(True, _if_then_else(False, 3, 3), _if_then_else(True, 1, max_col_clue)), _if_then_else(ge(zeros_diff_cols, 2), 1, _if_then_else(True, 1, compare_blocks_rows)))))
le(_if_then_else(False, zeros_diff_cols, 4), _if_then_else(and_(or_(False, and_(False, True)), and_(False, True)), ones_diff_rows, 4))
or_(False, ge(ones_diff_rows, zeros_diff_cols))
and_(ge(_if_then_else(or_(and_(True, False), ge(compare_blocks_cols, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(False, _if_then_else(True, 5, zeros_diff_rows), ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 2, 2), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), _if_then_else(False, _if_then_else(and_(False, True), _if_then_else(ge(ones_diff_rows, max_row_clue), max_row_clue, 1), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(max_col_clue, 4), _if_then_else(True, ones_diff_cols, 0), _if_then_else(False, 95, ones_diff_rows)))), ge(_if_then_else(ge(4, _if_then_else(True, -99, 3)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, _if_then_else(False, zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(-96, 3), _if_then_else(True, 2, ones_diff_cols), _if_then_else(False, 0, -87))), 4))
or_(and_(False, le(3, 91)), True)
VAL TREES:
add(add(add(ones_diff_rows, mul(zeros_diff_cols, ones_diff_rows)), mul(zeros_diff_cols, zeros_diff_cols)), add(ones_diff_cols, ones_diff_cols))
mul(mul(mul(add(mul(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_cols, ones_diff_cols)), add(add(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows))
add(add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(-82, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))))
mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_cols, ones_diff_rows))
add(add(ones_diff_rows, 58), mul(ones_diff_cols, add(mul(ones_diff_rows, -49), add(ones_diff_rows, compare_blocks_rows))))
add(add(compare_blocks_rows, ones_diff_cols), add(add(compare_blocks_rows, compare_blocks_rows), mul(19, compare_blocks_cols)))
COND TREES:
ge(_if_then_else(or_(or_(and_(False, True), and_(False, True)), le(_if_then_else(False, max_col_clue, 1), _if_then_else(False, 0, max_col_clue))), _if_then_else(or_(le(0, compare_blocks_rows), or_(False, True)), _if_then_else(ge(ones_diff_rows, max_col_clue), _if_then_else(False, 95, compare_blocks_cols), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, 0, zeros_diff_cols))), _if_then_else(or_(or_(True, False), ge(zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(True, 1, 2), _if_then_else(True, zeros_diff_rows, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 0), _if_then_else(True, 1, zeros_diff_rows)), le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), max_col_clue)), _if_then_else(or_(le(ones_diff_rows, zeros_diff_cols), and_(False, True)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 0, 1)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_rows, 1), _if_then_else(False, 4, max_row_clue))), _if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(True, _if_then_else(False, 3, 3), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(ge(zeros_diff_cols, 2), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(True, 1, compare_blocks_rows)))))
le(1, _if_then_else(True, ones_diff_rows, zeros_diff_cols))
or_(True, le(zeros_diff_rows, 4))
and_(ge(_if_then_else(True, _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 2, 2), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), _if_then_else(or_(or_(True, False), and_(True, True)), _if_then_else(and_(le(0, 4), True), _if_then_else(False, max_row_clue, 1), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(max_col_clue, 4), _if_then_else(True, ones_diff_cols, 0), _if_then_else(False, 95, ones_diff_rows)))), ge(_if_then_else(ge(_if_then_else(False, zeros_diff_cols, 3), _if_then_else(True, -99, 3)), _if_then_else(False, _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(True, 2, ones_diff_cols), _if_then_else(False, 0, -87))), _if_then_else(ge(_if_then_else(False, -1, 3), _if_then_else(True, 1, max_row_clue)), _if_then_else(ge(compare_blocks_rows, max_row_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, max_col_clue, 99)))))
or_(True, True)
VAL TREES:
add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows))
add(add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(-82, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))))
mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_cols, ones_diff_rows))
add(add(ones_diff_rows, 58), mul(ones_diff_cols, -22))
add(add(compare_blocks_rows, ones_diff_cols), add(add(compare_blocks_rows, compare_blocks_rows), mul(19, compare_blocks_cols)))
COND TREES:
ge(_if_then_else(True, ones_diff_rows, zeros_diff_rows), _if_then_else(True, ones_diff_rows, -18))
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(and_(False, True), zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 1))), _if_then_else(and_(and_(True, True), or_(False, False)), _if_then_else(or_(True, True), _if_then_else(True, 4, 51), _if_then_else(True, 0, -78)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(True, max_col_clue, max_col_clue)), or_(or_(False, True), and_(False, True)))))
and_(ge(3, compare_blocks_cols), False)
or_(True, False)
and_(or_(False, False), le(zeros_diff_cols, max_row_clue))
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
or_(True, ge(4, _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 0, 1))))
and_(or_(False, True), le(_if_then_else(False, compare_blocks_rows, zeros_diff_rows), 4))
or_(or_(and_(False, False), ge(_if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, compare_blocks_cols, 4))), True)
or_(or_(ge(compare_blocks_cols, compare_blocks_rows), ge(ones_diff_cols, 0)), and_(or_(True, True), ge(1, 0)))
le(_if_then_else(and_(ge(_if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 32, max_row_clue)), or_(or_(False, False), le(zeros_diff_rows, ones_diff_cols))), _if_then_else(le(_if_then_else(True, ones_diff_cols, 1), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 4, 4)), _if_then_else(and_(False, True), _if_then_else(False, 2, 0), _if_then_else(True, compare_blocks_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(False, 0, zeros_diff_cols), _if_then_else(False, 1, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, 1), _if_then_else(False, 3, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, compare_blocks_cols), _if_then_else(False, max_row_clue, ones_diff_rows)))), _if_then_else(or_(or_(and_(True, False), le(zeros_diff_cols, 0)), le(3, _if_then_else(True, 0, 3))), _if_then_else(le(_if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(and_(True, False), _if_then_else(True, 4, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(or_(or_(False, False), ge(4, zeros_diff_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 12), _if_then_else(False, 0, _if_then_else(True, 2, 4))), _if_then_else(le(3, zeros_diff_cols), _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, max_row_clue)))))
VAL TREES:
add(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, -27))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(93, add(compare_blocks_cols, compare_blocks_rows)))
mul(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(compare_blocks_cols, compare_blocks_cols), mul(86, 20))
add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, -88))
add(add(ones_diff_cols, compare_blocks_cols), add(-26, compare_blocks_cols))
COND TREES:
ge(2, _if_then_else(False, zeros_diff_cols, compare_blocks_cols))
or_(ge(zeros_diff_cols, compare_blocks_cols), and_(False, or_(True, or_(ge(_if_then_else(le(compare_blocks_rows, ones_diff_rows), 2, zeros_diff_rows), _if_then_else(False, 3, 4)), False))))
le(_if_then_else(True, -82, ones_diff_rows), _if_then_else(True, -69, compare_blocks_cols))
ge(0, _if_then_else(False, _if_then_else(True, 0, max_row_clue), zeros_diff_rows))
le(max_row_clue, _if_then_else(True, max_col_clue, compare_blocks_cols))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(mul(mul(add(ones_diff_rows, ones_diff_cols), mul(compare_blocks_rows, compare_blocks_cols)), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_rows, ones_diff_cols))), zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
add(add(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_cols, zeros_diff_rows))
mul(mul(mul(add(-40, ones_diff_rows), add(compare_blocks_rows, ones_diff_rows)), -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(zeros_diff_rows, mul(mul(compare_blocks_cols, zeros_diff_cols), zeros_diff_cols)), add(zeros_diff_rows, compare_blocks_cols))
COND TREES:
or_(True, ge(4, _if_then_else(and_(False, False), _if_then_else(True, 1, _if_then_else(False, 4, _if_then_else(False, compare_blocks_rows, max_row_clue))), _if_then_else(True, 0, 1))))
and_(or_(False, True), le(_if_then_else(and_(False, True), compare_blocks_rows, zeros_diff_rows), 4))
or_(or_(and_(False, False), ge(_if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, compare_blocks_cols, 4))), True)
or_(or_(ge(compare_blocks_cols, compare_blocks_rows), ge(ones_diff_cols, _if_then_else(False, zeros_diff_rows, 0))), and_(or_(True, True), ge(1, 0)))
le(_if_then_else(and_(ge(_if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 32, max_row_clue)), or_(or_(False, False), le(zeros_diff_rows, ones_diff_cols))), _if_then_else(le(_if_then_else(True, ones_diff_cols, 1), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 4, 4)), _if_then_else(and_(False, True), _if_then_else(False, 2, 0), _if_then_else(True, compare_blocks_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(False, 0, zeros_diff_cols), _if_then_else(False, 1, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, 1), _if_then_else(False, 3, ones_diff_rows)), _if_then_else(and_(False, True), 3, _if_then_else(False, max_row_clue, ones_diff_rows)))), _if_then_else(or_(or_(and_(True, False), le(zeros_diff_cols, 0)), le(3, _if_then_else(True, 0, 3))), _if_then_else(le(_if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(and_(True, False), _if_then_else(True, 4, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(or_(or_(False, False), ge(4, zeros_diff_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 12), _if_then_else(False, 0, _if_then_else(True, 2, 4))), _if_then_else(le(3, zeros_diff_cols), _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, max_row_clue)))))
VAL TREES:
add(add(zeros_diff_cols, ones_diff_cols), mul(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_rows)))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(93, add(compare_blocks_cols, compare_blocks_rows)))
mul(add(add(add(89, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(add(ones_diff_rows, add(compare_blocks_cols, zeros_diff_rows)), compare_blocks_cols), add(zeros_diff_cols, compare_blocks_cols))
mul(add(add(zeros_diff_cols, zeros_diff_cols), compare_blocks_rows), add(ones_diff_cols, ones_diff_cols))
mul(mul(add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, compare_blocks_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), mul(add(add(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_rows)), add(add(ones_diff_rows, -61), mul(compare_blocks_cols, compare_blocks_rows))))
COND TREES:
ge(2, _if_then_else(True, 3, _if_then_else(False, 4, zeros_diff_rows)))
or_(ge(max_col_clue, compare_blocks_cols), and_(False, True))
le(_if_then_else(True, -82, ones_diff_rows), _if_then_else(False, -69, compare_blocks_cols))
ge(_if_then_else(True, zeros_diff_rows, 0), _if_then_else(True, _if_then_else(le(max_col_clue, -53), _if_then_else(True, 0, 0), _if_then_else(False, ones_diff_cols, ones_diff_cols)), zeros_diff_rows))
le(_if_then_else(and_(False, True), _if_then_else(True, 2, 1), _if_then_else(True, 49, 2)), _if_then_else(True, 2, 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(_if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, 64, ones_diff_cols)), 1, 3), _if_then_else(False, 4, _if_then_else(True, ones_diff_rows, 0)))
or_(and_(True, True), or_(False, True))
ge(_if_then_else(True, ones_diff_rows, 1), _if_then_else(True, 1, compare_blocks_rows))
or_(and_(and_(le(_if_then_else(True, 3, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, max_col_clue)), ge(_if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(False, 4, zeros_diff_rows))), or_(and_(and_(True, False), ge(4, 62)), ge(_if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 12, 27)))), le(_if_then_else(or_(or_(False, False), and_(False, True)), _if_then_else(or_(False, True), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 0, 3)), _if_then_else(ge(compare_blocks_rows, 1), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, compare_blocks_rows, 1))), _if_then_else(and_(le(max_row_clue, max_col_clue), le(-84, 0)), _if_then_else(True, _if_then_else(False, max_col_clue, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), _if_then_else(ge(ones_diff_cols, 1), _if_then_else(True, 4, 0), _if_then_else(False, 1, 2)))))
ge(_if_then_else(and_(True, False), zeros_diff_cols, max_row_clue), -10)
VAL TREES:
add(mul(5, zeros_diff_cols), add(ones_diff_cols, zeros_diff_cols))
mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, add(zeros_diff_rows, zeros_diff_cols)))
mul(mul(mul(add(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), add(add(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), mul(add(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), mul(add(-65, 87), add(compare_blocks_rows, 47))))
add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, 65))
mul(mul(zeros_diff_rows, add(compare_blocks_cols, mul(ones_diff_cols, zeros_diff_rows))), mul(-18, compare_blocks_cols))
add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols))
COND TREES:
ge(_if_then_else(or_(or_(and_(False, True), and_(False, True)), le(_if_then_else(False, max_col_clue, 1), _if_then_else(False, 0, max_col_clue))), _if_then_else(or_(le(0, compare_blocks_rows), or_(False, True)), _if_then_else(ge(ones_diff_rows, max_col_clue), _if_then_else(ge(_if_then_else(True, ones_diff_rows, _if_then_else(False, 2, compare_blocks_cols)), max_col_clue), 95, compare_blocks_cols), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, 0, zeros_diff_cols))), _if_then_else(or_(or_(True, False), ge(zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(True, 1, 2), _if_then_else(True, zeros_diff_rows, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 0), _if_then_else(True, 1, 2)), le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, 2, 19))), 2, _if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(True, _if_then_else(False, 3, 3), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(ge(zeros_diff_cols, 2), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(True, 1, compare_blocks_rows)))))
le(_if_then_else(False, zeros_diff_cols, 4), _if_then_else(False, ones_diff_rows, zeros_diff_cols))
or_(and_(or_(False, False), False), True)
and_(ge(_if_then_else(or_(and_(True, False), ge(compare_blocks_cols, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols)), _if_then_else(True, _if_then_else(True, 2, 2), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), _if_then_else(or_(or_(True, False), and_(True, True)), _if_then_else(and_(le(0, 4), True), _if_then_else(True, max_row_clue, 1), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(max_col_clue, 4), _if_then_else(True, ones_diff_cols, 0), _if_then_else(False, 95, ones_diff_rows)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, -99, 3)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(-96, 3), _if_then_else(True, 2, ones_diff_cols), _if_then_else(False, 0, -87))), _if_then_else(ge(_if_then_else(False, -1, 3), max_row_clue), _if_then_else(ge(compare_blocks_rows, max_row_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, max_col_clue, 99)))))
or_(or_(False, True), True)
VAL TREES:
add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows))
add(add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(-82, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))))
mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_cols, ones_diff_rows))
add(add(ones_diff_rows, 58), mul(ones_diff_cols, -22))
add(add(compare_blocks_rows, ones_diff_cols), add(add(compare_blocks_rows, compare_blocks_rows), mul(19, compare_blocks_cols)))
COND TREES:
ge(2, _if_then_else(False, 1, _if_then_else(False, 4, zeros_diff_rows)))
or_(True, True)
le(_if_then_else(False, -82, ones_diff_rows), _if_then_else(ge(compare_blocks_rows, _if_then_else(le(3, compare_blocks_cols), compare_blocks_rows, ones_diff_rows)), _if_then_else(True, 1, 0), compare_blocks_cols))
ge(_if_then_else(False, 0, ones_diff_cols), compare_blocks_cols)
le(1, _if_then_else(or_(False, False), _if_then_else(False, 2, _if_then_else(False, compare_blocks_cols, 0)), 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(_if_then_else(or_(or_(and_(False, True), and_(False, True)), le(_if_then_else(False, max_col_clue, 1), _if_then_else(False, 0, max_col_clue))), _if_then_else(or_(le(0, compare_blocks_rows), or_(False, True)), _if_then_else(ge(ones_diff_rows, max_col_clue), _if_then_else(False, 95, compare_blocks_cols), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(ge(zeros_diff_cols, compare_blocks_cols), _if_then_else(False, 0, max_col_clue), _if_then_else(False, 4, zeros_diff_rows)))), _if_then_else(or_(or_(True, False), ge(zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(True, 1, 2), _if_then_else(True, zeros_diff_rows, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 0), _if_then_else(True, 1, 2)), le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 19))), _if_then_else(or_(le(ones_diff_rows, zeros_diff_cols), and_(True, True)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 0, 1)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, 4, max_row_clue))), _if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(True, _if_then_else(False, 3, 3), _if_then_else(True, 1, max_col_clue)), _if_then_else(ge(zeros_diff_cols, 2), 1, _if_then_else(True, 1, compare_blocks_rows)))))
le(_if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(and_(or_(False, and_(False, True)), True), ones_diff_rows, 4))
or_(and_(True, and_(True, and_(False, True))), ge(ones_diff_rows, zeros_diff_cols))
and_(ge(_if_then_else(or_(and_(True, False), ge(compare_blocks_cols, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(False, _if_then_else(True, 5, zeros_diff_rows), ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 2, 2), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), _if_then_else(False, _if_then_else(and_(False, True), _if_then_else(ge(_if_then_else(False, -1, 3), _if_then_else(True, 1, max_row_clue)), max_row_clue, 1), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(max_col_clue, 4), _if_then_else(True, ones_diff_cols, 0), _if_then_else(False, 95, ones_diff_rows)))), ge(_if_then_else(ge(4, _if_then_else(True, -99, 3)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, _if_then_else(False, zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(-96, 3), _if_then_else(True, 2, ones_diff_cols), _if_then_else(False, 0, -87))), _if_then_else(ge(_if_then_else(False, -1, 3), _if_then_else(True, 1, max_row_clue)), _if_then_else(True, _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(False, 3, _if_then_else(False, _if_then_else(and_(True, True), zeros_diff_rows, 4), compare_blocks_rows)))))
or_(and_(False, True), and_(le(compare_blocks_cols, 0), False))
VAL TREES:
add(add(add(ones_diff_rows, mul(zeros_diff_cols, ones_diff_rows)), mul(zeros_diff_cols, zeros_diff_cols)), add(ones_diff_cols, ones_diff_cols))
mul(mul(mul(add(mul(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_cols, ones_diff_cols)), add(add(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows))
add(add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(-82, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))))
mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_cols, ones_diff_rows))
add(add(ones_diff_rows, 58), mul(ones_diff_cols, add(mul(ones_diff_rows, -49), add(ones_diff_rows, compare_blocks_rows))))
add(add(compare_blocks_rows, ones_diff_cols), add(add(compare_blocks_rows, compare_blocks_rows), mul(19, compare_blocks_cols)))
COND TREES:
ge(_if_then_else(or_(False, le(_if_then_else(False, max_col_clue, 1), _if_then_else(False, 0, max_col_clue))), _if_then_else(or_(le(0, compare_blocks_rows), or_(False, True)), _if_then_else(ge(ones_diff_rows, max_col_clue), _if_then_else(False, 95, compare_blocks_cols), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, 0, zeros_diff_cols))), _if_then_else(or_(False, ge(zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(True, 1, 2), _if_then_else(True, zeros_diff_rows, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 0), _if_then_else(True, 1, 2)), le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 19))), _if_then_else(or_(le(ones_diff_rows, zeros_diff_cols), and_(True, True)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 0, 1)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, 4, max_row_clue))), _if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(1, 3), _if_then_else(False, 3, 3), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(ge(zeros_diff_cols, 2), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(True, 1, compare_blocks_rows)))))
le(_if_then_else(and_(False, True), zeros_diff_cols, 4), _if_then_else(ge(ones_diff_rows, _if_then_else(and_(True, True), compare_blocks_cols, max_col_clue)), ones_diff_rows, zeros_diff_cols))
or_(False, False)
and_(ge(_if_then_else(or_(and_(and_(ge(zeros_diff_cols, 23), and_(False, True)), False), ge(compare_blocks_cols, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 2, 2), _if_then_else(ge(4, 62), ones_diff_rows, zeros_diff_rows))), _if_then_else(or_(or_(True, False), and_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, max_row_clue, 1), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(max_col_clue, 4), _if_then_else(True, ones_diff_cols, 0), _if_then_else(False, 95, ones_diff_rows)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, -99, 3)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(-96, 3), _if_then_else(True, 2, ones_diff_cols), _if_then_else(False, 0, -87))), _if_then_else(False, _if_then_else(ge(compare_blocks_rows, max_row_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, max_col_clue, 99)))))
or_(and_(False, True), ge(1, -10))
VAL TREES:
add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows))
add(add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(-82, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))))
mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_cols, ones_diff_rows))
add(add(ones_diff_rows, 58), mul(ones_diff_cols, -22))
add(add(compare_blocks_rows, ones_diff_cols), add(add(compare_blocks_rows, compare_blocks_rows), mul(19, compare_blocks_cols)))
COND TREES:
le(_if_then_else(ge(_if_then_else(True, 2, zeros_diff_rows), max_col_clue), 2, ones_diff_cols), _if_then_else(False, 4, 2))
or_(or_(False, and_(ge(ones_diff_cols, ones_diff_rows), le(_if_then_else(and_(or_(False, True), False), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(True, ones_diff_cols, ones_diff_cols)), _if_then_else(or_(False, False), zeros_diff_cols, _if_then_else(True, ones_diff_cols, 1))))), and_(False, and_(False, True)))
le(_if_then_else(and_(True, True), -82, ones_diff_rows), _if_then_else(ge(4, ones_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 0), 2)))
or_(ge(3, max_col_clue), True)
le(1, _if_then_else(False, _if_then_else(or_(False, False), 2, compare_blocks_cols), 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(_if_then_else(False, ones_diff_rows, compare_blocks_cols), _if_then_else(True, ones_diff_rows, 2))
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), zeros_diff_cols, _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 1))), _if_then_else(and_(and_(True, True), or_(False, False)), _if_then_else(or_(True, True), _if_then_else(True, 4, 51), _if_then_else(True, 0, -78)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(True, max_col_clue, max_col_clue)), or_(or_(False, True), True))))
and_(ge(3, _if_then_else(True, compare_blocks_cols, 0)), True)
or_(or_(and_(le(_if_then_else(or_(False, False), 0, _if_then_else(True, _if_then_else(False, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, ones_diff_cols, 2))), _if_then_else(True, zeros_diff_cols, compare_blocks_cols)), False), ge(zeros_diff_cols, compare_blocks_rows)), False)
and_(False, le(max_col_clue, 95))
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
or_(False, True)
and_(ge(max_col_clue, compare_blocks_cols), le(_if_then_else(ge(ones_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(False, _if_then_else(False, 1, ones_diff_cols), 1)), 4))
or_(or_(True, ge(_if_then_else(and_(True, False), 4, 0), _if_then_else(True, max_col_clue, 4))), True)
or_(or_(and_(True, False), ge(ones_diff_cols, ones_diff_cols)), and_(or_(True, False), True))
le(_if_then_else(and_(ge(_if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 32, max_row_clue)), or_(or_(False, False), le(zeros_diff_rows, ones_diff_cols))), _if_then_else(le(_if_then_else(True, ones_diff_cols, 1), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 4, 4)), _if_then_else(and_(False, True), _if_then_else(False, 2, 0), _if_then_else(True, compare_blocks_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(False, 0, zeros_diff_cols), _if_then_else(False, 1, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, 1), _if_then_else(False, 3, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, compare_blocks_cols), _if_then_else(False, max_row_clue, ones_diff_rows)))), _if_then_else(or_(or_(and_(True, False), le(zeros_diff_cols, 0)), le(_if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(True, 0, 3))), _if_then_else(le(_if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(and_(True, False), _if_then_else(True, 4, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(or_(or_(False, False), ge(4, zeros_diff_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 12), _if_then_else(False, 0, 2)), _if_then_else(le(3, zeros_diff_cols), _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, max_row_clue)))))
VAL TREES:
add(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, -27))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(93, add(compare_blocks_cols, compare_blocks_rows)))
mul(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(compare_blocks_cols, compare_blocks_cols), mul(86, 20))
add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, -88))
add(add(ones_diff_cols, compare_blocks_cols), add(-26, compare_blocks_cols))
COND TREES:
ge(_if_then_else(or_(or_(and_(False, True), and_(False, True)), le(_if_then_else(False, max_col_clue, 1), _if_then_else(False, 0, max_col_clue))), _if_then_else(or_(le(0, compare_blocks_rows), or_(False, True)), _if_then_else(ge(ones_diff_rows, max_col_clue), _if_then_else(False, 95, compare_blocks_cols), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, 0, zeros_diff_cols))), _if_then_else(or_(or_(True, False), ge(zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(True, 1, 2), _if_then_else(True, zeros_diff_rows, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 0), _if_then_else(True, 1, 2)), le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 19))), _if_then_else(or_(le(ones_diff_rows, zeros_diff_cols), and_(False, True)), _if_then_else(and_(ge(2, max_col_clue), False), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 0, 1)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_rows, 1), _if_then_else(False, 4, max_row_clue))), _if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(True, _if_then_else(False, 3, 3), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(ge(zeros_diff_cols, 2), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(True, 1, compare_blocks_rows)))))
le(1, _if_then_else(False, ones_diff_rows, zeros_diff_cols))
or_(True, True)
and_(ge(_if_then_else(True, _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, 0, compare_blocks_cols)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 2, 2), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), _if_then_else(or_(or_(True, False), and_(True, True)), _if_then_else(and_(le(0, 4), True), _if_then_else(False, max_row_clue, 1), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(max_col_clue, 4), _if_then_else(True, ones_diff_cols, 0), _if_then_else(False, 95, ones_diff_rows)))), ge(_if_then_else(ge(_if_then_else(False, zeros_diff_cols, 3), _if_then_else(True, -99, 3)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(True, 2, ones_diff_cols), _if_then_else(False, 0, -87))), _if_then_else(ge(_if_then_else(False, -1, 3), _if_then_else(True, 1, max_row_clue)), _if_then_else(ge(compare_blocks_rows, max_row_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, max_col_clue, 99)))))
or_(le(4, 91), True)
VAL TREES:
add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows))
add(add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(-82, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))))
mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_cols, ones_diff_rows))
add(add(ones_diff_rows, 58), mul(ones_diff_cols, -22))
add(add(compare_blocks_rows, ones_diff_cols), add(add(compare_blocks_rows, compare_blocks_rows), mul(19, compare_blocks_cols)))
COND TREES:
or_(le(max_row_clue, max_col_clue), and_(True, and_(True, ge(ones_diff_rows, max_col_clue))))
and_(le(_if_then_else(ge(ones_diff_rows, _if_then_else(False, compare_blocks_cols, max_col_clue)), ones_diff_rows, zeros_diff_cols), _if_then_else(ge(max_row_clue, 0), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(ge(ones_diff_cols, ones_diff_rows), compare_blocks_rows, zeros_diff_cols))), or_(True, False))
and_(ge(-17, 4), False)
le(_if_then_else(ge(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(True, 4, 4), _if_then_else(False, 3, compare_blocks_rows)), _if_then_else(le(ones_diff_rows, max_col_clue), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, 4, ones_diff_cols))), _if_then_else(le(_if_then_else(False, ones_diff_cols, 3), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(3, 0), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 4, 4)), _if_then_else(ge(3, zeros_diff_rows), _if_then_else(True, 4, ones_diff_cols), _if_then_else(True, zeros_diff_cols, zeros_diff_rows))), _if_then_else(or_(and_(True, False), and_(False, False)), _if_then_else(and_(True, False), _if_then_else(False, 1, 0), _if_then_else(False, ones_diff_rows, 25)), _if_then_else(False, _if_then_else(True, max_col_clue, max_row_clue), _if_then_else(False, max_col_clue, 4)))), _if_then_else(or_(ge(_if_then_else(False, ones_diff_cols, max_col_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), and_(ge(compare_blocks_cols, 50), and_(True, False))), _if_then_else(and_(ge(max_row_clue, zeros_diff_rows), and_(False, True)), _if_then_else(le(ones_diff_rows, ones_diff_cols), _if_then_else(False, 3, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), _if_then_else(ge(3, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, max_col_clue), _if_then_else(True, zeros_diff_cols, 1))), _if_then_else(ge(_if_then_else(False, 0, compare_blocks_rows), _if_then_else(False, 1, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, -48, max_col_clue), _if_then_else(False, 3, 3)), _if_then_else(and_(True, True), _if_then_else(True, 4, 2), _if_then_else(True, 59, max_row_clue)))))
and_(le(3, compare_blocks_rows), False)
VAL TREES:
mul(mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), mul(add(ones_diff_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(compare_blocks_rows, zeros_diff_cols), mul(-22, zeros_diff_cols))
add(mul(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)), mul(mul(ones_diff_rows, -97), add(zeros_diff_rows, ones_diff_rows)))
add(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_rows))
mul(mul(add(ones_diff_rows, ones_diff_cols), 66), mul(zeros_diff_rows, -5))
mul(add(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)))
COND TREES:
ge(2, _if_then_else(True, 1, _if_then_else(False, 4, _if_then_else(ge(ones_diff_rows, max_col_clue), compare_blocks_rows, max_row_clue))))
or_(ge(zeros_diff_cols, compare_blocks_cols), and_(False, True))
le(_if_then_else(ge(-17, 4), -82, ones_diff_rows), _if_then_else(True, -69, compare_blocks_cols))
ge(_if_then_else(False, zeros_diff_rows, 0), _if_then_else(True, _if_then_else(True, 0, max_row_clue), zeros_diff_rows))
le(1, 2)
VAL TREES:
add(add(mul(add(add(add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, -21), add(zeros_diff_cols, zeros_diff_cols))), add(mul(add(45, -84), add(zeros_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_cols, ones_diff_cols), mul(ones_diff_cols, ones_diff_rows)))), mul(mul(add(mul(-31, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(compare_blocks_rows, compare_blocks_cols), mul(ones_diff_rows, -53))), mul(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols)), add(add(compare_blocks_cols, compare_blocks_cols), add(zeros_diff_cols, -45))))), zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(mul(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_rows)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(59, ones_diff_rows))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
or_(True, ge(4, _if_then_else(le(_if_then_else(True, max_col_clue, max_row_clue), _if_then_else(True, zeros_diff_rows, max_row_clue)), _if_then_else(ge(zeros_diff_cols, 3), _if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 3)), _if_then_else(and_(True, False), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, 0)))))
and_(or_(False, True), ge(_if_then_else(le(_if_then_else(False, 1, ones_diff_cols), 0), ones_diff_cols, _if_then_else(False, _if_then_else(False, zeros_diff_cols, 1), 0)), _if_then_else(True, 4, compare_blocks_rows)))
or_(or_(and_(False, False), ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, 0, 4))), and_(ge(3, _if_then_else(True, compare_blocks_cols, 0)), False))
or_(or_(and_(False, False), ge(ones_diff_cols, 3)), or_(le(_if_then_else(False, 0, 1), max_col_clue), or_(False, False)))
le(_if_then_else(and_(ge(_if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 32, max_row_clue)), or_(or_(False, False), le(zeros_diff_rows, ones_diff_cols))), _if_then_else(le(_if_then_else(True, ones_diff_cols, 1), _if_then_else(True, _if_then_else(False, 0, ones_diff_cols), zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(or_(False, False), 4, 4)), _if_then_else(and_(False, True), _if_then_else(False, 2, 0), _if_then_else(True, compare_blocks_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(ge(_if_then_else(False, ones_diff_cols, max_col_clue), _if_then_else(True, compare_blocks_cols, 3)), 0, zeros_diff_cols), _if_then_else(False, 1, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, 1), _if_then_else(False, 3, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, compare_blocks_cols), _if_then_else(False, max_row_clue, ones_diff_rows)))), _if_then_else(or_(or_(and_(True, False), le(zeros_diff_cols, 0)), le(_if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(True, 0, 3))), _if_then_else(le(_if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(and_(True, False), _if_then_else(True, 4, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(or_(or_(False, False), ge(4, zeros_diff_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 12), _if_then_else(False, 0, 2)), _if_then_else(le(3, zeros_diff_cols), _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, max_row_clue)))))
VAL TREES:
add(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, -27))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(93, add(compare_blocks_cols, compare_blocks_rows)))
mul(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(compare_blocks_cols, compare_blocks_cols), mul(86, 20))
add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, -88))
add(add(ones_diff_cols, compare_blocks_cols), add(-26, compare_blocks_cols))
COND TREES:
ge(_if_then_else(True, ones_diff_rows, compare_blocks_cols), _if_then_else(True, ones_diff_rows, 2))
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), zeros_diff_cols, _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 1))), _if_then_else(and_(and_(True, True), or_(False, False)), _if_then_else(or_(True, True), _if_then_else(True, 4, 51), _if_then_else(True, 0, -78)), _if_then_else(and_(True, False), _if_then_else(and_(ge(3, ones_diff_rows), False), zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(True, max_col_clue, max_col_clue)), or_(or_(False, True), and_(False, True)))))
and_(True, False)
or_(or_(and_(True, False), ge(0, compare_blocks_rows)), False)
and_(or_(False, False), le(max_col_clue, 95))
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), mul(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_cols)))
add(mul(ones_diff_rows, ones_diff_cols), add(12, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, mul(mul(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, -12)))))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(add(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_cols), add(-29, compare_blocks_cols)))))))
mul(add(ones_diff_rows, -1), add(zeros_diff_rows, zeros_diff_cols))
COND TREES:
ge(1, _if_then_else(le(max_row_clue, _if_then_else(and_(ge(_if_then_else(le(4, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 0), _if_then_else(True, max_col_clue, max_row_clue)), _if_then_else(and_(True, False), _if_then_else(False, max_col_clue, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, ones_diff_rows))), ge(_if_then_else(and_(False, True), _if_then_else(True, 4, 3), _if_then_else(False, max_row_clue, 2)), _if_then_else(and_(True, True), _if_then_else(True, compare_blocks_rows, 0), _if_then_else(False, 2, zeros_diff_rows)))), _if_then_else(le(_if_then_else(or_(False, False), _if_then_else(True, -18, zeros_diff_rows), _if_then_else(True, 4, 1)), _if_then_else(ge(compare_blocks_cols, 4), _if_then_else(True, zeros_diff_rows, 48), _if_then_else(False, 54, max_row_clue))), _if_then_else(and_(ge(4, zeros_diff_cols), or_(False, True)), _if_then_else(le(ones_diff_rows, 68), _if_then_else(False, 4, max_row_clue), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(le(4, max_col_clue), _if_then_else(True, ones_diff_rows, 3), _if_then_else(True, 4, compare_blocks_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_cols, 3), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), _if_then_else(ge(1, max_col_clue), _if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, max_col_clue, 3)), _if_then_else(or_(False, False), _if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(True, 2, ones_diff_rows)))), _if_then_else(le(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, zeros_diff_cols), _if_then_else(True, ones_diff_cols, zeros_diff_cols)), _if_then_else(or_(True, True), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(True, max_row_clue, 3))), _if_then_else(ge(_if_then_else(False, 15, 2), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(1, max_row_clue), _if_then_else(True, ones_diff_rows, 3), _if_then_else(False, max_row_clue, 51)), _if_then_else(ge(zeros_diff_rows, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, 2), _if_then_else(True, 2, compare_blocks_rows))), _if_then_else(ge(_if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, 2, 3)), _if_then_else(or_(True, True), _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 1)))))), ones_diff_rows, -18))
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 1))), _if_then_else(and_(and_(True, True), or_(ge(_if_then_else(ge(_if_then_else(False, zeros_diff_cols, ones_diff_rows), _if_then_else(True, max_row_clue, 1)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(True, 1, 2)), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, 0), _if_then_else(False, ones_diff_cols, compare_blocks_rows))), _if_then_else(or_(and_(True, True), or_(True, True)), _if_then_else(le(max_col_clue, zeros_diff_cols), _if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(False, 1, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(False, zeros_diff_rows, ones_diff_cols)))), False)), _if_then_else(or_(le(_if_then_else(and_(False, True), ones_diff_rows, zeros_diff_cols), _if_then_else(ge(max_row_clue, 0), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, ones_diff_rows, zeros_diff_cols))), True), _if_then_else(True, 4, 51), _if_then_else(True, 0, -78)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(_if_then_else(False, -23, _if_then_else(ge(max_row_clue, 0), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_cols))), _if_then_else(and_(False, False), max_col_clue, max_col_clue)), or_(or_(False, True), and_(False, True)))))
and_(ge(-69, compare_blocks_cols), or_(False, True))
or_(or_(True, True), or_(True, and_(True, False)))
and_(or_(False, False), le(1, max_row_clue))
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
ge(2, _if_then_else(ge(_if_then_else(False, max_col_clue, _if_then_else(False, _if_then_else(or_(False, True), _if_then_else(False, 2, compare_blocks_rows), _if_then_else(False, 2, ones_diff_cols)), compare_blocks_cols)), max_col_clue), 1, _if_then_else(False, 4, zeros_diff_rows)))
or_(False, and_(le(_if_then_else(le(1, max_row_clue), _if_then_else(False, 2, 3), _if_then_else(False, 0, ones_diff_rows)), _if_then_else(ge(2, -94), _if_then_else(False, 4, 4), _if_then_else(True, zeros_diff_cols, max_col_clue))), and_(le(_if_then_else(False, -89, 0), _if_then_else(False, 0, compare_blocks_cols)), and_(le(ones_diff_cols, zeros_diff_cols), or_(True, False)))))
or_(and_(False, True), le(_if_then_else(True, zeros_diff_cols, ones_diff_rows), zeros_diff_cols))
ge(_if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, _if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(True, max_row_clue, 1), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(le(3, 4), _if_then_else(True, max_row_clue, 1), _if_then_else(True, compare_blocks_rows, max_row_clue))), _if_then_else(and_(and_(False, True), or_(True, False)), _if_then_else(or_(False, True), _if_then_else(True, 2, 3), _if_then_else(True, compare_blocks_cols, compare_blocks_rows)), _if_then_else(ge(3, ones_diff_rows), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 4, 1))), _if_then_else(or_(or_(False, True), ge(ones_diff_cols, 1)), _if_then_else(and_(True, True), _if_then_else(True, 4, 2), _if_then_else(False, compare_blocks_cols, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_rows, 0), _if_then_else(False, ones_diff_cols, 1)))), zeros_diff_rows))
le(ones_diff_rows, 2)
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
or_(ge(zeros_diff_rows, 0), le(2, 64))
or_(ge(_if_then_else(or_(False, True), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(True, max_col_clue, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, 3, _if_then_else(False, max_row_clue, 0)))), and_(True, True))
le(_if_then_else(False, -82, ones_diff_rows), _if_then_else(True, -69, compare_blocks_cols))
ge(ones_diff_cols, _if_then_else(or_(True, False), 2, 3))
le(_if_then_else(and_(False, False), _if_then_else(True, max_row_clue, -3), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(False, 2, 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_rows))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(add(mul(mul(mul(-100, -81), add(-70, compare_blocks_rows)), mul(add(97, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_rows))), mul(mul(add(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, -49)))), zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), mul(mul(add(add(ones_diff_cols, compare_blocks_rows), zeros_diff_cols), 66), add(mul(-11, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_cols))))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
le(_if_then_else(True, 3, 3), _if_then_else(or_(or_(True, False), le(max_row_clue, 4)), 4, 1))
ge(_if_then_else(le(2, 97), 1, -11), _if_then_else(ge(compare_blocks_cols, zeros_diff_cols), _if_then_else(True, _if_then_else(ge(_if_then_else(or_(or_(True, True), and_(True, True)), _if_then_else(le(ones_diff_rows, max_row_clue), _if_then_else(True, 0, zeros_diff_cols), _if_then_else(False, 0, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(False, 3, 1), _if_then_else(False, 2, ones_diff_rows))), _if_then_else(ge(_if_then_else(True, 3, max_col_clue), _if_then_else(False, 1, 2)), _if_then_else(and_(False, True), _if_then_else(False, 2, 4), _if_then_else(False, zeros_diff_cols, 2)), _if_then_else(le(compare_blocks_rows, zeros_diff_cols), _if_then_else(False, max_row_clue, max_row_clue), _if_then_else(False, max_row_clue, max_row_clue)))), _if_then_else(and_(ge(_if_then_else(False, 46, 0), _if_then_else(True, 0, 3)), ge(_if_then_else(True, 4, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(le(_if_then_else(True, max_row_clue, ones_diff_cols), _if_then_else(False, ones_diff_rows, max_row_clue)), _if_then_else(ge(compare_blocks_cols, zeros_diff_rows), _if_then_else(True, ones_diff_rows, 2), _if_then_else(True, 4, 2)), _if_then_else(ge(zeros_diff_cols, 4), _if_then_else(False, max_row_clue, 2), _if_then_else(True, max_col_clue, ones_diff_cols))), _if_then_else(and_(le(zeros_diff_cols, 4), ge(compare_blocks_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, 3, 1), _if_then_else(False, max_row_clue, 3)), _if_then_else(and_(False, True), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(True, 1, 1)))), _if_then_else(ge(_if_then_else(or_(False, False), _if_then_else(True, 0, max_row_clue), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(ones_diff_cols, 2), _if_then_else(True, 0, ones_diff_cols), _if_then_else(True, max_row_clue, 1))), _if_then_else(or_(ge(3, zeros_diff_rows), and_(True, True)), _if_then_else(le(compare_blocks_rows, max_row_clue), _if_then_else(False, max_col_clue, 0), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(le(1, 70), _if_then_else(False, 3, -75), _if_then_else(True, 3, 73))), _if_then_else(or_(and_(True, True), le(ones_diff_cols, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(False, 3, max_row_clue), _if_then_else(True, 0, 3)), _if_then_else(ge(ones_diff_rows, -62), _if_then_else(True, 0, 0), _if_then_else(False, ones_diff_cols, compare_blocks_rows))))), ones_diff_cols), _if_then_else(False, max_row_clue, 4)))
le(_if_then_else(True, _if_then_else(True, 4, _if_then_else(le(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(False, 3, 83)), _if_then_else(and_(False, True), _if_then_else(True, 2, ones_diff_cols), _if_then_else(False, 3, -45))), _if_then_else(and_(or_(False, False), ge(2, ones_diff_rows)), _if_then_else(and_(True, False), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, 4, 4)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, ones_diff_rows, 1))), _if_then_else(le(_if_then_else(True, 3, 3), _if_then_else(True, 0, 0)), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(True, 99, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(False, 1, 99))))), 4), _if_then_else(False, _if_then_else(False, compare_blocks_rows, zeros_diff_rows), 4))
and_(True, and_(le(zeros_diff_rows, max_row_clue), or_(True, False)))
or_(ge(_if_then_else(True, 4, _if_then_else(False, max_col_clue, 83)), _if_then_else(False, 3, _if_then_else(False, 0, max_col_clue))), and_(and_(True, True), or_(False, False)))
VAL TREES:
mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols))
add(add(ones_diff_cols, zeros_diff_cols), add(91, zeros_diff_rows))
add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, mul(zeros_diff_cols, -23)))
mul(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, -72))
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(38, ones_diff_rows)))
add(add(mul(add(ones_diff_rows, ones_diff_rows), mul(-70, ones_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_cols, 4))), add(add(add(compare_blocks_rows, ones_diff_rows), add(-86, compare_blocks_rows)), mul(mul(-86, compare_blocks_cols), add(ones_diff_cols, zeros_diff_cols))))
COND TREES:
or_(le(ones_diff_rows, zeros_diff_rows), or_(True, False))
le(zeros_diff_cols, _if_then_else(True, ones_diff_cols, _if_then_else(False, max_row_clue, zeros_diff_cols)))
or_(False, and_(False, False))
le(_if_then_else(or_(True, True), _if_then_else(False, _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_cols, zeros_diff_rows)), _if_then_else(or_(True, False), max_col_clue, 3)), _if_then_else(and_(False, False), _if_then_else(True, 3, 0), _if_then_else(False, 1, max_row_clue)))
ge(_if_then_else(le(max_col_clue, ones_diff_rows), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(le(0, 2), 2, ones_diff_cols))
VAL TREES:
add(add(66, add(zeros_diff_cols, ones_diff_cols)), add(zeros_diff_rows, -93))
mul(add(mul(add(add(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, 14), mul(compare_blocks_cols, zeros_diff_cols))), mul(add(mul(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), mul(mul(compare_blocks_rows, ones_diff_rows), add(-81, zeros_diff_cols)))), add(add(add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), mul(mul(compare_blocks_rows, 63), add(ones_diff_cols, compare_blocks_cols))), add(mul(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(compare_blocks_cols, 49)))))
add(add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(add(mul(add(zeros_diff_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), zeros_diff_rows), zeros_diff_cols))
mul(add(compare_blocks_rows, compare_blocks_rows), mul(91, compare_blocks_rows))
add(mul(mul(add(compare_blocks_rows, -93), add(compare_blocks_rows, zeros_diff_rows)), add(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols))), mul(mul(add(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(mul(ones_diff_cols, ones_diff_cols), mul(add(add(compare_blocks_cols, mul(ones_diff_rows, zeros_diff_cols)), add(ones_diff_rows, zeros_diff_cols)), ones_diff_cols))
COND TREES:
ge(_if_then_else(or_(False, le(_if_then_else(False, max_col_clue, 1), _if_then_else(False, 0, max_col_clue))), _if_then_else(or_(le(0, compare_blocks_rows), or_(False, True)), _if_then_else(ge(ones_diff_rows, max_col_clue), _if_then_else(False, 95, compare_blocks_cols), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, 0, zeros_diff_cols))), _if_then_else(or_(False, ge(zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(True, 1, 2), _if_then_else(True, zeros_diff_rows, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(and_(and_(ge(-71, 1), le(2, 1)), and_(and_(False, False), ge(compare_blocks_rows, 4))), 3, 0), _if_then_else(True, 1, 2)), le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 19))), _if_then_else(or_(le(ones_diff_rows, zeros_diff_cols), and_(True, True)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 0, 1)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, 4, max_row_clue))), _if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(1, 3), _if_then_else(False, 3, 3), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(ge(zeros_diff_cols, 2), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(True, 1, compare_blocks_rows)))))
le(_if_then_else(and_(False, True), zeros_diff_cols, 4), _if_then_else(ge(ones_diff_rows, _if_then_else(and_(True, True), compare_blocks_cols, max_col_clue)), ones_diff_rows, _if_then_else(and_(le(2, zeros_diff_cols), False), 1, 3)))
or_(and_(le(4, compare_blocks_cols), True), or_(or_(or_(or_(True, False), or_(True, False)), and_(or_(False, True), or_(False, False))), and_(le(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_cols, -43)), le(_if_then_else(False, ones_diff_rows, 0), _if_then_else(True, max_col_clue, zeros_diff_cols)))))
and_(ge(_if_then_else(or_(and_(and_(ge(zeros_diff_cols, 23), and_(False, True)), False), ge(compare_blocks_cols, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 2, 2), _if_then_else(ge(4, 62), ones_diff_rows, zeros_diff_rows))), _if_then_else(or_(or_(True, False), and_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, max_row_clue, 1), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(max_col_clue, 4), _if_then_else(True, ones_diff_cols, 0), _if_then_else(False, 95, ones_diff_rows)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, -99, 3)), _if_then_else(ge(ones_diff_rows, max_row_clue), compare_blocks_rows, _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(-96, 3), _if_then_else(True, 2, ones_diff_cols), _if_then_else(False, 0, -87))), _if_then_else(ge(_if_then_else(False, -1, 3), _if_then_else(True, 1, max_row_clue)), _if_then_else(ge(compare_blocks_rows, max_row_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, max_col_clue, 99)))))
or_(and_(le(compare_blocks_cols, ones_diff_rows), True), ge(1, -10))
VAL TREES:
add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows))
add(add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(-82, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))))
mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_cols, ones_diff_rows))
add(add(ones_diff_rows, 58), mul(ones_diff_cols, -22))
add(add(compare_blocks_rows, ones_diff_cols), add(add(compare_blocks_rows, compare_blocks_rows), mul(19, compare_blocks_cols)))
COND TREES:
or_(ge(max_col_clue, max_col_clue), ge(4, 4))
and_(or_(False, True), le(_if_then_else(ge(ones_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(False, max_row_clue, 1)), 4))
or_(True, True)
or_(or_(and_(False, False), ge(ones_diff_cols, 0)), ge(3, max_row_clue))
le(_if_then_else(and_(ge(_if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 32, max_row_clue)), or_(or_(False, False), le(zeros_diff_rows, ones_diff_cols))), _if_then_else(le(_if_then_else(True, ones_diff_cols, 1), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 4, 4)), _if_then_else(and_(False, True), _if_then_else(False, 2, 0), _if_then_else(True, compare_blocks_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(False, 0, zeros_diff_cols), _if_then_else(False, 1, max_col_clue)), _if_then_else(or_(and_(le(max_row_clue, ones_diff_cols), and_(False, True)), False), _if_then_else(True, max_row_clue, 1), _if_then_else(False, 3, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, compare_blocks_cols), _if_then_else(False, max_row_clue, ones_diff_rows)))), _if_then_else(or_(or_(and_(True, False), le(zeros_diff_cols, 0)), le(4, _if_then_else(True, 0, 3))), _if_then_else(le(_if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(and_(True, False), _if_then_else(True, 4, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(or_(or_(False, False), ge(4, zeros_diff_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 12), _if_then_else(False, 0, 2)), _if_then_else(le(3, zeros_diff_cols), _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, max_row_clue)))))
VAL TREES:
add(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, -27))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(93, add(compare_blocks_cols, compare_blocks_rows)))
mul(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(compare_blocks_cols, compare_blocks_cols), mul(86, 20))
add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, -88))
add(add(ones_diff_cols, compare_blocks_cols), add(-26, compare_blocks_cols))
COND TREES:
or_(True, and_(True, ge(ones_diff_rows, _if_then_else(and_(and_(True, or_(False, le(_if_then_else(False, ones_diff_rows, 1), _if_then_else(False, 0, max_col_clue)))), and_(True, False)), _if_then_else(le(4, max_row_clue), _if_then_else(True, max_row_clue, 40), _if_then_else(True, ones_diff_rows, zeros_diff_rows)), _if_then_else(and_(False, True), _if_then_else(False, 4, ones_diff_cols), _if_then_else(False, 4, 31))))))
and_(le(_if_then_else(ge(ones_diff_rows, _if_then_else(True, compare_blocks_cols, ones_diff_rows)), ones_diff_rows, zeros_diff_cols), ones_diff_cols), and_(and_(and_(False, True), and_(True, False)), ge(ones_diff_rows, _if_then_else(False, compare_blocks_cols, max_col_clue))))
and_(True, True)
le(_if_then_else(ge(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(True, 4, 4), _if_then_else(False, 3, compare_blocks_rows)), _if_then_else(le(ones_diff_rows, max_col_clue), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, 4, ones_diff_cols))), _if_then_else(le(_if_then_else(False, ones_diff_cols, 3), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(3, 0), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 4, 4)), _if_then_else(ge(3, zeros_diff_rows), _if_then_else(True, 4, ones_diff_cols), _if_then_else(True, zeros_diff_cols, zeros_diff_rows))), _if_then_else(or_(and_(True, False), True), _if_then_else(and_(True, False), _if_then_else(False, 1, 0), _if_then_else(False, ones_diff_rows, 25)), _if_then_else(False, _if_then_else(True, max_col_clue, max_row_clue), _if_then_else(False, max_col_clue, 4)))), _if_then_else(False, _if_then_else(and_(ge(max_col_clue, zeros_diff_rows), and_(False, True)), _if_then_else(le(ones_diff_rows, ones_diff_cols), _if_then_else(False, 3, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(and_(False, True), or_(False, False)), _if_then_else(False, compare_blocks_rows, max_col_clue), _if_then_else(True, zeros_diff_cols, 1))), _if_then_else(ge(_if_then_else(False, 0, compare_blocks_rows), _if_then_else(False, 1, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, -48, max_col_clue), _if_then_else(False, 3, 3)), _if_then_else(and_(True, True), _if_then_else(True, 4, 2), _if_then_else(True, 59, max_row_clue)))))
and_(le(_if_then_else(False, _if_then_else(le(ones_diff_cols, 4), _if_then_else(True, 4, 0), _if_then_else(False, zeros_diff_cols, max_row_clue)), _if_then_else(le(0, 1), _if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_cols))), compare_blocks_rows), True)
VAL TREES:
mul(mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), mul(add(ones_diff_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(compare_blocks_rows, zeros_diff_cols), mul(-22, zeros_diff_cols))
add(mul(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)), mul(mul(ones_diff_rows, -97), add(zeros_diff_rows, ones_diff_rows)))
add(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_rows))
mul(mul(add(ones_diff_rows, ones_diff_cols), 66), mul(zeros_diff_rows, -5))
mul(add(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)))
COND TREES:
le(_if_then_else(ge(_if_then_else(le(0, compare_blocks_rows), max_row_clue, ones_diff_rows), ones_diff_rows), 1, _if_then_else(True, 1, compare_blocks_cols)), 0)
ge(_if_then_else(ge(compare_blocks_cols, zeros_diff_cols), 1, -11), _if_then_else(True, max_row_clue, _if_then_else(True, zeros_diff_rows, ones_diff_cols)))
le(_if_then_else(False, _if_then_else(True, _if_then_else(or_(False, False), _if_then_else(True, 3, compare_blocks_rows), _if_then_else(le(2, compare_blocks_cols), 1, 1)), ones_diff_rows), 4), _if_then_else(False, _if_then_else(False, compare_blocks_cols, zeros_diff_rows), 4))
and_(and_(le(_if_then_else(ge(zeros_diff_cols, 1), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(False, 3, 2))), or_(True, True)), True)
or_(ge(_if_then_else(False, 4, _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(False, 3, _if_then_else(False, ones_diff_rows, _if_then_else(False, 4, 0)))), and_(and_(True, True), or_(True, False)))
VAL TREES:
mul(add(mul(mul(mul(-35, 14), mul(zeros_diff_rows, -38)), add(add(ones_diff_rows, ones_diff_cols), mul(78, zeros_diff_rows))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), add(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_cols)))), mul(ones_diff_cols, compare_blocks_cols))
add(mul(mul(43, zeros_diff_rows), compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))
add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, mul(zeros_diff_cols, -23)))
mul(add(zeros_diff_cols, zeros_diff_rows), mul(mul(mul(ones_diff_rows, compare_blocks_cols), add(0, -99)), -72))
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(38, ones_diff_rows)))
add(add(mul(add(ones_diff_rows, ones_diff_rows), mul(-70, ones_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_cols, 4))), add(add(add(compare_blocks_rows, ones_diff_rows), add(-86, compare_blocks_rows)), mul(mul(add(mul(zeros_diff_rows, mul(-21, ones_diff_rows)), add(compare_blocks_rows, ones_diff_rows)), compare_blocks_cols), add(ones_diff_cols, zeros_diff_cols))))
COND TREES:
or_(ge(2, max_col_clue), or_(True, or_(False, True)))
and_(True, ge(_if_then_else(ge(compare_blocks_cols, _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_rows, compare_blocks_cols), _if_then_else(False, _if_then_else(False, max_col_clue, ones_diff_cols), compare_blocks_cols))), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, max_row_clue, 4)), _if_then_else(True, 1, zeros_diff_cols)))
or_(or_(and_(False, False), ge(_if_then_else(False, compare_blocks_rows, 0), _if_then_else(le(_if_then_else(False, compare_blocks_rows, 4), _if_then_else(True, _if_then_else(False, 1, max_row_clue), max_row_clue)), max_col_clue, 4))), True)
or_(or_(and_(False, False), ge(3, 0)), and_(ge(_if_then_else(le(zeros_diff_rows, 1), _if_then_else(True, 3, ones_diff_rows), _if_then_else(True, ones_diff_rows, max_row_clue)), _if_then_else(ge(max_row_clue, zeros_diff_rows), _if_then_else(False, 1, 0), _if_then_else(True, zeros_diff_cols, 1))), ge(1, 0)))
le(_if_then_else(and_(ge(_if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(or_(and_(False, True), or_(True, True)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 0, ones_diff_cols), _if_then_else(False, 2, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(True, ones_diff_rows, ones_diff_rows)))), or_(or_(True, False), le(zeros_diff_rows, ones_diff_cols))), _if_then_else(le(_if_then_else(True, ones_diff_cols, 1), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 4, 4)), _if_then_else(and_(False, True), _if_then_else(False, 2, 0), _if_then_else(True, compare_blocks_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(False, 0, zeros_diff_cols), _if_then_else(False, 1, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, 1), _if_then_else(False, 3, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, compare_blocks_cols), _if_then_else(False, max_row_clue, ones_diff_rows)))), _if_then_else(or_(or_(and_(True, False), le(zeros_diff_cols, 0)), le(3, _if_then_else(True, 0, 3))), _if_then_else(le(_if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(and_(True, False), _if_then_else(True, 4, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(or_(or_(False, False), ge(4, zeros_diff_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 12), _if_then_else(False, 0, _if_then_else(or_(False, True), 2, 4))), _if_then_else(le(3, zeros_diff_cols), _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, max_row_clue)))))
VAL TREES:
add(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, -27))
add(mul(ones_diff_rows, ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols))
mul(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), add(mul(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, add(mul(ones_diff_rows, add(ones_diff_cols, compare_blocks_rows)), zeros_diff_rows)))))
add(mul(mul(compare_blocks_rows, ones_diff_cols), 48), add(41, compare_blocks_cols))
add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, -88))
add(add(ones_diff_cols, compare_blocks_cols), mul(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)))
COND TREES:
ge(_if_then_else(or_(False, le(_if_then_else(False, max_col_clue, 1), _if_then_else(False, 0, max_col_clue))), _if_then_else(or_(le(0, compare_blocks_rows), or_(False, True)), _if_then_else(ge(ones_diff_rows, max_col_clue), _if_then_else(False, 95, compare_blocks_cols), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, 0, zeros_diff_cols))), _if_then_else(or_(False, ge(zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(True, 1, 2), _if_then_else(True, zeros_diff_rows, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 0), _if_then_else(True, 1, 2)), le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 19))), _if_then_else(or_(le(ones_diff_rows, zeros_diff_cols), and_(True, True)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 0, 1)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, 4, max_row_clue))), _if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(1, 3), _if_then_else(False, 3, 3), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(ge(zeros_diff_cols, 2), ones_diff_rows, _if_then_else(True, 1, compare_blocks_rows)))))
le(_if_then_else(and_(False, True), zeros_diff_cols, 4), _if_then_else(ge(ones_diff_rows, _if_then_else(and_(True, True), compare_blocks_cols, max_col_clue)), ones_diff_rows, zeros_diff_cols))
or_(and_(False, True), False)
and_(ge(_if_then_else(or_(and_(and_(ge(zeros_diff_cols, 23), and_(False, True)), False), ge(compare_blocks_cols, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 2, 2), _if_then_else(ge(4, 62), ones_diff_rows, zeros_diff_rows))), _if_then_else(or_(ge(_if_then_else(False, -1, 3), _if_then_else(True, 1, max_row_clue)), and_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, max_row_clue, 1), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(max_col_clue, 4), _if_then_else(True, ones_diff_cols, 0), _if_then_else(False, 95, ones_diff_rows)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, -99, 3)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(-96, 3), _if_then_else(True, 2, ones_diff_cols), _if_then_else(False, 0, -87))), _if_then_else(ge(_if_then_else(False, -1, 3), _if_then_else(True, 1, max_row_clue)), _if_then_else(ge(compare_blocks_rows, max_row_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, max_col_clue, 99)))))
or_(True, ge(1, -10))
VAL TREES:
add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows))
add(add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(-82, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))))
mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_cols, ones_diff_rows))
add(add(ones_diff_rows, 58), mul(ones_diff_cols, -22))
add(add(compare_blocks_rows, ones_diff_cols), add(add(compare_blocks_rows, compare_blocks_rows), mul(19, compare_blocks_cols)))
COND TREES:
or_(le(max_row_clue, max_col_clue), and_(True, ge(ones_diff_rows, max_col_clue)))
and_(le(_if_then_else(ge(ones_diff_rows, _if_then_else(False, compare_blocks_cols, max_col_clue)), ones_diff_rows, zeros_diff_cols), _if_then_else(ge(max_row_clue, 0), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(ge(_if_then_else(or_(or_(or_(False, True), or_(False, True)), le(_if_then_else(False, max_row_clue, 74), _if_then_else(True, compare_blocks_rows, max_col_clue))), _if_then_else(le(_if_then_else(True, 0, 4), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, 10, ones_diff_rows), _if_then_else(False, ones_diff_rows, 2)), _if_then_else(ge(zeros_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, max_row_clue, compare_blocks_cols))), _if_then_else(ge(_if_then_else(True, 4, ones_diff_rows), _if_then_else(True, -88, 2)), _if_then_else(ge(3, 1), _if_then_else(False, max_col_clue, max_row_clue), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), _if_then_else(ge(3, ones_diff_cols), _if_then_else(True, max_row_clue, 1), _if_then_else(True, 4, compare_blocks_cols)))), ones_diff_rows), compare_blocks_rows, zeros_diff_cols))), or_(True, False))
and_(ge(-17, 4), False)
le(_if_then_else(ge(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(True, 4, 4), _if_then_else(False, 3, compare_blocks_rows)), _if_then_else(le(ones_diff_rows, max_col_clue), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, 4, ones_diff_cols))), _if_then_else(le(_if_then_else(False, ones_diff_cols, 3), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(3, 0), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 4, 4)), _if_then_else(ge(3, zeros_diff_rows), _if_then_else(True, 4, ones_diff_cols), _if_then_else(True, zeros_diff_cols, zeros_diff_rows))), _if_then_else(or_(and_(True, False), and_(False, False)), _if_then_else(and_(True, False), _if_then_else(False, 1, 0), _if_then_else(False, ones_diff_rows, 25)), _if_then_else(False, _if_then_else(True, max_col_clue, max_row_clue), _if_then_else(False, max_col_clue, 4)))), _if_then_else(or_(ge(_if_then_else(False, ones_diff_cols, max_col_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), and_(ge(compare_blocks_cols, 50), and_(True, False))), _if_then_else(and_(ge(max_row_clue, zeros_diff_rows), and_(False, True)), _if_then_else(le(ones_diff_rows, ones_diff_cols), _if_then_else(False, 3, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), _if_then_else(ge(3, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, max_col_clue), _if_then_else(True, zeros_diff_cols, 1))), _if_then_else(ge(_if_then_else(False, 0, compare_blocks_rows), _if_then_else(False, 1, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, -48, max_col_clue), _if_then_else(False, 3, 3)), _if_then_else(and_(True, True), _if_then_else(True, 4, 2), _if_then_else(True, 59, max_row_clue)))))
and_(le(_if_then_else(and_(True, True), _if_then_else(True, zeros_diff_rows, 0), _if_then_else(False, compare_blocks_rows, max_col_clue)), compare_blocks_rows), False)
VAL TREES:
mul(mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), mul(add(ones_diff_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(compare_blocks_rows, zeros_diff_cols), mul(-22, zeros_diff_cols))
add(mul(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)), mul(mul(ones_diff_rows, -97), add(zeros_diff_rows, ones_diff_rows)))
add(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_rows))
mul(mul(add(ones_diff_rows, ones_diff_cols), 66), mul(zeros_diff_rows, -5))
mul(add(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)))
COND TREES:
ge(2, _if_then_else(True, 1, _if_then_else(False, 4, _if_then_else(False, compare_blocks_rows, max_row_clue))))
or_(ge(zeros_diff_cols, compare_blocks_cols), and_(False, or_(True, or_(ge(_if_then_else(le(compare_blocks_rows, ones_diff_rows), 2, zeros_diff_rows), _if_then_else(False, 3, 4)), and_(False, True)))))
le(_if_then_else(True, -82, ones_diff_rows), _if_then_else(True, -69, compare_blocks_cols))
ge(_if_then_else(False, zeros_diff_rows, 0), _if_then_else(False, _if_then_else(True, 0, max_row_clue), zeros_diff_rows))
le(max_row_clue, 3)
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(_if_then_else(or_(or_(and_(False, True), and_(False, True)), le(_if_then_else(False, max_col_clue, 1), _if_then_else(False, 0, max_col_clue))), _if_then_else(or_(le(0, compare_blocks_rows), or_(False, True)), _if_then_else(ge(ones_diff_rows, max_col_clue), _if_then_else(False, 95, compare_blocks_cols), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(ge(zeros_diff_cols, compare_blocks_cols), _if_then_else(False, 0, max_col_clue), _if_then_else(False, 4, zeros_diff_rows)))), _if_then_else(or_(or_(True, False), ge(zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(True, 1, 2), _if_then_else(True, zeros_diff_rows, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 0), _if_then_else(True, 1, 2)), le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 19))), _if_then_else(or_(le(ones_diff_rows, zeros_diff_cols), and_(True, True)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 0, 1)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, 4, max_row_clue))), _if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(True, _if_then_else(False, 3, 3), _if_then_else(True, 1, max_col_clue)), _if_then_else(ge(zeros_diff_cols, 2), 1, _if_then_else(True, 1, compare_blocks_rows)))))
le(_if_then_else(True, zeros_diff_cols, 4), _if_then_else(and_(or_(False, and_(False, True)), True), ones_diff_rows, 4))
or_(and_(True, False), ge(ones_diff_rows, zeros_diff_cols))
and_(ge(_if_then_else(or_(and_(True, False), ge(compare_blocks_cols, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(False, _if_then_else(True, 5, zeros_diff_rows), ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 2, 2), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), _if_then_else(False, _if_then_else(and_(False, True), _if_then_else(False, max_row_clue, 1), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(max_col_clue, 4), _if_then_else(True, ones_diff_cols, 0), _if_then_else(False, 95, ones_diff_rows)))), ge(_if_then_else(ge(4, _if_then_else(True, -99, 3)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, _if_then_else(False, zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(-96, 3), _if_then_else(True, 2, ones_diff_cols), _if_then_else(False, 0, -87))), _if_then_else(ge(_if_then_else(False, -1, 3), _if_then_else(True, 1, max_row_clue)), _if_then_else(True, _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, max_col_clue, 99)))))
or_(and_(False, True), and_(False, False))
VAL TREES:
add(add(add(ones_diff_rows, mul(zeros_diff_cols, ones_diff_rows)), mul(zeros_diff_cols, zeros_diff_cols)), add(ones_diff_cols, ones_diff_cols))
mul(mul(mul(add(mul(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_cols, ones_diff_cols)), add(add(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows))
add(add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(-82, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))))
mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_cols, ones_diff_rows))
add(add(ones_diff_rows, 58), mul(ones_diff_cols, add(mul(ones_diff_rows, -49), add(ones_diff_rows, compare_blocks_rows))))
add(add(compare_blocks_rows, ones_diff_cols), add(add(compare_blocks_rows, compare_blocks_rows), mul(19, compare_blocks_cols)))
COND TREES:
and_(or_(True, False), le(ones_diff_cols, 3))
le(1, _if_then_else(False, 0, zeros_diff_cols))
or_(and_(True, False), or_(or_(le(_if_then_else(and_(True, False), _if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, zeros_diff_rows, ones_diff_cols)), _if_then_else(or_(True, False), _if_then_else(True, max_col_clue, compare_blocks_cols), _if_then_else(True, 3, 0))), ge(_if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, 64, 10), _if_then_else(False, -24, max_col_clue)), _if_then_else(and_(False, True), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, max_col_clue, compare_blocks_rows)))), or_(or_(or_(or_(False, False), ge(1, compare_blocks_cols)), ge(_if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(False, ones_diff_cols, -73))), and_(and_(and_(True, True), or_(False, False)), ge(_if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, 3, 1))))))
and_(ge(_if_then_else(True, _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 2, 2), max_col_clue)), _if_then_else(or_(or_(True, False), and_(True, True)), _if_then_else(and_(le(0, 4), True), _if_then_else(False, max_row_clue, 1), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(_if_then_else(True, compare_blocks_cols, compare_blocks_cols), compare_blocks_cols), _if_then_else(True, 0, zeros_diff_rows), _if_then_else(le(-17, max_col_clue), compare_blocks_rows, 2)))), ge(_if_then_else(ge(_if_then_else(False, zeros_diff_cols, 3), _if_then_else(True, -99, 3)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(True, 2, ones_diff_cols), _if_then_else(False, 0, -87))), _if_then_else(ge(_if_then_else(False, -1, 3), _if_then_else(True, 1, max_row_clue)), _if_then_else(ge(compare_blocks_rows, max_row_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, max_col_clue, 99)))))
or_(le(3, 91), True)
VAL TREES:
add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows))
add(add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(-82, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))))
mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_cols, ones_diff_rows))
add(add(ones_diff_rows, 58), mul(ones_diff_cols, -22))
add(add(compare_blocks_rows, ones_diff_cols), add(add(compare_blocks_rows, compare_blocks_rows), mul(19, compare_blocks_cols)))
COND TREES:
ge(zeros_diff_rows, zeros_diff_rows)
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, ones_diff_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(and_(False, True), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, compare_blocks_cols, 1))), -23), or_(and_(or_(le(zeros_diff_rows, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(True, max_col_clue, max_col_clue)), or_(or_(False, True), and_(False, True)))))
and_(and_(ge(ones_diff_cols, _if_then_else(True, _if_then_else(False, -25, 47), compare_blocks_rows)), and_(False, True)), True)
or_(or_(True, or_(or_(le(_if_then_else(False, compare_blocks_cols, 1), _if_then_else(True, 1, 45)), and_(and_(False, True), ge(1, 27))), le(_if_then_else(or_(True, True), _if_then_else(or_(True, False), 2, 61), _if_then_else(True, 4, _if_then_else(True, ones_diff_rows, zeros_diff_rows))), _if_then_else(or_(True, True), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(True, 3, compare_blocks_rows))))), or_(True, False))
and_(or_(or_(True, False), False), True)
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, mul(add(mul(mul(zeros_diff_rows, ones_diff_rows), mul(13, compare_blocks_rows)), add(mul(compare_blocks_cols, 92), mul(ones_diff_rows, 5))), add(mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, compare_blocks_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows))))), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
or_(False, ge(_if_then_else(or_(ge(max_row_clue, compare_blocks_rows), or_(True, False)), _if_then_else(False, _if_then_else(True, 0, 0), _if_then_else(True, ones_diff_rows, zeros_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, max_row_clue, compare_blocks_rows), ones_diff_rows)), _if_then_else(or_(le(compare_blocks_rows, 4), le(compare_blocks_cols, max_col_clue)), _if_then_else(ge(2, compare_blocks_cols), _if_then_else(False, 2, max_col_clue), _if_then_else(True, _if_then_else(or_(True, True), _if_then_else(True, 53, 2), _if_then_else(True, 3, 4)), 0)), _if_then_else(False, _if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 4, ones_diff_rows)))))
or_(and_(True, and_(ge(_if_then_else(ge(ones_diff_cols, 4), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(False, max_row_clue, 1)), ones_diff_cols), True)), or_(True, True))
ge(_if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(or_(False, True), 1, _if_then_else(and_(and_(ge(compare_blocks_cols, zeros_diff_rows), True), False), 0, 0)))
ge(_if_then_else(le(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, 1, zeros_diff_cols)), _if_then_else(ge(compare_blocks_rows, _if_then_else(ge(_if_then_else(and_(True, False), 0, _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(ge(zeros_diff_cols, max_col_clue), _if_then_else(False, 2, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(False, 0, 4), _if_then_else(False, ones_diff_rows, 3)), _if_then_else(ge(1, ones_diff_cols), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(True, max_col_clue, 1)), _if_then_else(ge(2, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, 4), _if_then_else(False, 4, ones_diff_cols))), _if_then_else(or_(ge(4, compare_blocks_cols), or_(True, False)), _if_then_else(le(zeros_diff_cols, ones_diff_rows), _if_then_else(False, max_row_clue, 4), _if_then_else(False, 1, max_row_clue)), _if_then_else(le(ones_diff_cols, compare_blocks_rows), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(True, -61, 2))))), _if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(False, max_col_clue, max_col_clue)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, max_col_clue, 3), _if_then_else(False, max_row_clue, 0))), _if_then_else(and_(ge(1, 0), or_(False, True)), _if_then_else(ge(0, max_col_clue), _if_then_else(True, 0, 0), _if_then_else(True, 1, ones_diff_cols)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(False, compare_blocks_rows, zeros_diff_cols))))
ge(-47, _if_then_else(False, max_row_clue, _if_then_else(ge(_if_then_else(ge(zeros_diff_cols, 4), _if_then_else(False, ones_diff_cols, 3), _if_then_else(True, 4, compare_blocks_cols)), _if_then_else(le(zeros_diff_rows, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 3, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_col_clue), _if_then_else(True, 4, max_col_clue)), _if_then_else(le(2, max_row_clue), _if_then_else(False, zeros_diff_cols, 1), _if_then_else(True, zeros_diff_rows, 3)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols))), _if_then_else(or_(or_(False, False), True), _if_then_else(or_(False, False), _if_then_else(False, max_row_clue, 3), _if_then_else(True, 69, max_row_clue)), _if_then_else(and_(True, False), _if_then_else(False, 4, 41), _if_then_else(True, zeros_diff_rows, 2))))))
VAL TREES:
mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_rows))
mul(add(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols))
mul(mul(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, 8)), add(mul(zeros_diff_rows, zeros_diff_cols), add(51, ones_diff_rows)))
add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, -46)), mul(mul(ones_diff_cols, 48), add(compare_blocks_rows, zeros_diff_rows)))
add(add(add(mul(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_cols))), mul(mul(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows)), mul(mul(83, -28), mul(-88, zeros_diff_cols)))), add(mul(mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, -3)), mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, ones_diff_rows))), add(add(mul(ones_diff_cols, ones_diff_rows), mul(-67, ones_diff_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_cols)))))
mul(mul(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, ones_diff_rows))
COND TREES:
or_(ge(_if_then_else(False, -42, 4), 3), False)
and_(or_(False, True), le(max_row_clue, 4))
or_(or_(ge(compare_blocks_rows, _if_then_else(le(zeros_diff_rows, _if_then_else(True, -69, compare_blocks_cols)), compare_blocks_rows, ones_diff_rows)), ge(_if_then_else(False, 4, 0), _if_then_else(le(_if_then_else(False, compare_blocks_cols, 1), _if_then_else(False, 3, max_col_clue)), max_col_clue, 4))), True)
or_(or_(and_(False, False), ge(_if_then_else(True, ones_diff_cols, 0), 0)), and_(or_(True, False), le(_if_then_else(False, 1, ones_diff_cols), compare_blocks_cols)))
le(_if_then_else(and_(ge(_if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 32, max_row_clue)), or_(or_(False, False), le(zeros_diff_rows, ones_diff_cols))), _if_then_else(le(_if_then_else(True, ones_diff_cols, 1), _if_then_else(True, compare_blocks_rows, 4)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 4, 4)), _if_then_else(and_(False, True), _if_then_else(False, 2, 0), _if_then_else(True, compare_blocks_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(False, 0, zeros_diff_cols), _if_then_else(False, 1, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, 1), _if_then_else(False, 3, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, compare_blocks_cols), _if_then_else(False, max_row_clue, ones_diff_rows)))), _if_then_else(or_(or_(and_(True, False), le(zeros_diff_cols, 0)), le(_if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(True, 0, 3))), _if_then_else(le(_if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(and_(True, False), _if_then_else(True, 4, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(or_(True, ge(4, zeros_diff_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 12), _if_then_else(False, 0, 2)), _if_then_else(le(3, zeros_diff_cols), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, max_row_clue)))))
VAL TREES:
add(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, -27))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(93, add(compare_blocks_cols, compare_blocks_rows)))
mul(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(compare_blocks_cols, compare_blocks_cols), mul(86, 20))
add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, -88))
add(add(ones_diff_cols, compare_blocks_cols), add(-26, compare_blocks_cols))
COND TREES:
or_(ge(ones_diff_rows, max_col_clue), ge(4, 4))
and_(or_(False, True), le(_if_then_else(ge(ones_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(False, max_row_clue, 1)), 4))
or_(True, True)
or_(or_(and_(False, False), ge(ones_diff_cols, 0)), ge(3, max_col_clue))
le(_if_then_else(and_(ge(_if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 32, max_row_clue)), or_(or_(False, False), le(zeros_diff_rows, ones_diff_cols))), _if_then_else(le(_if_then_else(True, ones_diff_cols, 1), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 4, 4)), _if_then_else(and_(False, True), _if_then_else(False, 2, 0), _if_then_else(True, compare_blocks_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(False, 0, zeros_diff_cols), _if_then_else(False, 1, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, 1), _if_then_else(False, 3, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, compare_blocks_cols), _if_then_else(False, max_row_clue, ones_diff_rows)))), _if_then_else(or_(or_(and_(True, False), le(zeros_diff_cols, 0)), le(4, _if_then_else(True, 0, 3))), _if_then_else(le(_if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(and_(True, False), _if_then_else(True, 4, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(or_(or_(False, False), ge(4, zeros_diff_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 12), _if_then_else(False, 0, 2)), _if_then_else(le(3, zeros_diff_cols), _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, max_row_clue)))))
VAL TREES:
add(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, -27))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(93, add(compare_blocks_cols, compare_blocks_rows)))
mul(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(compare_blocks_cols, compare_blocks_cols), mul(86, 20))
add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, -88))
add(add(ones_diff_cols, compare_blocks_cols), add(-26, compare_blocks_cols))
COND TREES:
ge(4, _if_then_else(True, ones_diff_rows, -18))
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(False, _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 1))), _if_then_else(and_(and_(True, True), or_(False, False)), _if_then_else(or_(True, True), _if_then_else(True, 4, 51), _if_then_else(True, 0, -78)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(True, max_col_clue, max_col_clue)), or_(or_(False, True), and_(False, True)))))
and_(ge(3, 3), and_(False, False))
or_(or_(True, False), True)
and_(or_(False, False), le(ones_diff_rows, 2))
VAL TREES:
mul(mul(add(add(ones_diff_rows, ones_diff_rows), mul(ones_diff_cols, zeros_diff_rows)), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, mul(mul(ones_diff_cols, -69), mul(mul(mul(ones_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), add(mul(ones_diff_cols, ones_diff_cols), ones_diff_rows)))), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, mul(mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, compare_blocks_cols)), add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_rows, compare_blocks_cols))), add(mul(add(64, zeros_diff_rows), add(-68, compare_blocks_cols)), mul(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_cols))))), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
ge(_if_then_else(or_(or_(and_(False, True), and_(False, True)), le(_if_then_else(False, max_col_clue, 1), _if_then_else(False, 0, max_col_clue))), _if_then_else(or_(le(0, compare_blocks_rows), or_(True, True)), _if_then_else(ge(ones_diff_rows, max_col_clue), _if_then_else(False, 95, compare_blocks_cols), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, 0, zeros_diff_cols))), _if_then_else(or_(or_(True, False), ge(zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(True, 1, 2), _if_then_else(True, zeros_diff_rows, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 1), _if_then_else(True, 1, _if_then_else(True, 3, 3))), le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 19))), _if_then_else(False, _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 0, 1)), _if_then_else(or_(True, True), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, 4, max_row_clue))), _if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(1, 3), _if_then_else(False, 3, 3), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(ge(zeros_diff_cols, 2), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(True, 1, compare_blocks_rows)))))
le(_if_then_else(False, 1, -78), _if_then_else(ge(ones_diff_rows, _if_then_else(False, compare_blocks_cols, max_col_clue)), ones_diff_rows, zeros_diff_cols))
or_(and_(False, False), ge(compare_blocks_rows, _if_then_else(False, _if_then_else(False, compare_blocks_rows, zeros_diff_rows), 0)))
and_(ge(_if_then_else(or_(and_(True, False), ge(compare_blocks_cols, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 2, 2), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), _if_then_else(or_(or_(True, False), and_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, max_row_clue, 1), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(max_col_clue, 4), _if_then_else(True, ones_diff_cols, 0), _if_then_else(False, 95, ones_diff_rows)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, 3), _if_then_else(ge(compare_blocks_rows, 0), _if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(False, max_col_clue, max_col_clue))), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(-96, 3), _if_then_else(True, 2, ones_diff_cols), _if_then_else(False, 0, -87))), _if_then_else(ge(_if_then_else(False, -1, 3), _if_then_else(or_(True, True), 1, max_row_clue)), _if_then_else(False, _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, max_col_clue, 99)))))
or_(False, False)
VAL TREES:
add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows))
add(add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(-82, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))))
mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_cols, ones_diff_rows))
add(add(ones_diff_rows, 58), mul(ones_diff_cols, -22))
add(add(compare_blocks_rows, ones_diff_cols), add(add(compare_blocks_rows, compare_blocks_rows), mul(19, compare_blocks_cols)))
COND TREES:
or_(le(2, zeros_diff_rows), ge(_if_then_else(False, max_col_clue, _if_then_else(False, 2, compare_blocks_cols)), max_col_clue))
le(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(True, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 1))), _if_then_else(True, 4, _if_then_else(False, max_row_clue, zeros_diff_cols)))
ge(_if_then_else(ge(-17, 4), _if_then_else(True, max_col_clue, ones_diff_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(False, ge(3, compare_blocks_cols)), _if_then_else(True, compare_blocks_cols, 4), _if_then_else(False, 2, 4)))
le(_if_then_else(or_(False, True), _if_then_else(False, _if_then_else(True, max_row_clue, zeros_diff_cols), compare_blocks_rows), _if_then_else(False, max_col_clue, 3)), _if_then_else(and_(False, False), _if_then_else(or_(True, True), zeros_diff_rows, 0), _if_then_else(False, 1, max_row_clue)))
ge(_if_then_else(False, zeros_diff_rows, 2), _if_then_else(False, 2, 95))
VAL TREES:
add(add(66, add(zeros_diff_cols, ones_diff_cols)), add(zeros_diff_rows, -93))
mul(add(mul(add(add(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, 14), mul(compare_blocks_cols, zeros_diff_cols))), mul(add(mul(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), mul(mul(compare_blocks_rows, ones_diff_rows), add(-81, zeros_diff_cols)))), add(add(add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), mul(mul(compare_blocks_rows, 63), add(ones_diff_cols, compare_blocks_cols))), add(mul(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(compare_blocks_cols, 49)))))
add(add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(add(-40, zeros_diff_rows), zeros_diff_cols))
mul(add(compare_blocks_rows, compare_blocks_rows), mul(91, compare_blocks_rows))
add(mul(mul(add(compare_blocks_rows, -93), add(compare_blocks_rows, zeros_diff_rows)), add(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols))), mul(mul(add(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(mul(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
ge(_if_then_else(or_(False, le(_if_then_else(False, max_col_clue, 1), _if_then_else(False, 0, max_col_clue))), _if_then_else(or_(le(0, compare_blocks_rows), or_(False, True)), _if_then_else(ge(ones_diff_rows, max_col_clue), _if_then_else(False, 95, compare_blocks_cols), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, 0, zeros_diff_cols))), _if_then_else(or_(False, ge(zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(True, 1, 2), _if_then_else(True, zeros_diff_rows, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 0), _if_then_else(True, 1, 2)), le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 19))), _if_then_else(or_(le(ones_diff_rows, zeros_diff_cols), and_(True, True)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 0, 1)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, 4, max_row_clue))), _if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(1, 3), _if_then_else(False, 3, 3), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(ge(zeros_diff_cols, 2), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(True, 1, compare_blocks_rows)))))
le(_if_then_else(and_(False, True), zeros_diff_cols, 4), _if_then_else(ge(ones_diff_rows, _if_then_else(and_(True, True), compare_blocks_cols, max_col_clue)), ones_diff_rows, zeros_diff_cols))
or_(and_(False, True), False)
and_(ge(_if_then_else(or_(and_(and_(ge(zeros_diff_cols, 23), and_(False, True)), False), ge(compare_blocks_cols, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 2, 2), _if_then_else(ge(4, 62), ones_diff_rows, zeros_diff_rows))), _if_then_else(or_(or_(True, False), and_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, max_row_clue, 1), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(max_col_clue, 4), _if_then_else(True, ones_diff_cols, 0), _if_then_else(False, 95, ones_diff_rows)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, -99, 3)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(-96, 3), _if_then_else(True, 2, ones_diff_cols), _if_then_else(False, 0, -87))), _if_then_else(ge(_if_then_else(False, -1, 3), _if_then_else(True, 1, max_row_clue)), _if_then_else(ge(compare_blocks_rows, max_row_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, max_col_clue, 99)))))
or_(and_(le(compare_blocks_cols, 0), True), ge(1, -10))
VAL TREES:
add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows))
add(add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(-82, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))))
mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_cols, ones_diff_rows))
add(add(ones_diff_rows, 58), mul(ones_diff_cols, -22))
add(add(compare_blocks_rows, ones_diff_cols), add(add(compare_blocks_rows, compare_blocks_rows), mul(19, compare_blocks_cols)))
COND TREES:
ge(2, _if_then_else(ge(_if_then_else(True, max_col_clue, _if_then_else(False, 2, compare_blocks_cols)), max_col_clue), 1, _if_then_else(False, 4, zeros_diff_rows)))
or_(True, and_(False, True))
le(_if_then_else(False, -82, ones_diff_rows), _if_then_else(True, _if_then_else(True, 1, 0), compare_blocks_cols))
ge(_if_then_else(ge(4, 62), zeros_diff_rows, 0), compare_blocks_cols)
le(1, _if_then_else(or_(False, True), _if_then_else(False, 2, 2), 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(mul(add(24, ones_diff_rows), add(ones_diff_rows, compare_blocks_rows)), ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), add(mul(5, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_rows)))))
mul(add(compare_blocks_rows, mul(add(60, compare_blocks_rows), mul(zeros_diff_cols, zeros_diff_rows))), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(add(mul(30, compare_blocks_rows), mul(66, compare_blocks_cols)), -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(mul(add(add(mul(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), add(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_rows))), mul(mul(add(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, 34)), mul(add(-77, compare_blocks_rows), mul(-80, ones_diff_cols)))), mul(add(add(add(33, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows)), mul(add(50, compare_blocks_rows), mul(ones_diff_cols, 68))), mul(add(mul(68, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(compare_blocks_rows, ones_diff_cols), add(ones_diff_rows, zeros_diff_rows))))), add(66, ones_diff_rows))
COND TREES:
ge(_if_then_else(le(_if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(False, ones_diff_cols, 1)), 3, 3), _if_then_else(False, 4, _if_then_else(False, ones_diff_rows, 0)))
or_(and_(le(_if_then_else(True, _if_then_else(or_(le(_if_then_else(False, ones_diff_cols, max_col_clue), _if_then_else(True, 2, 3)), ge(_if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, 3, max_row_clue))), _if_then_else(or_(and_(False, False), ge(zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, max_col_clue, ones_diff_rows), _if_then_else(False, compare_blocks_cols, 0)), _if_then_else(ge(zeros_diff_rows, max_col_clue), _if_then_else(False, ones_diff_cols, 0), _if_then_else(True, 2, compare_blocks_cols))), _if_then_else(le(_if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 4, compare_blocks_rows)), _if_then_else(ge(compare_blocks_cols, 1), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 2, ones_diff_cols)), _if_then_else(le(compare_blocks_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, compare_blocks_rows), _if_then_else(True, 0, 2)))), compare_blocks_rows), _if_then_else(True, max_row_clue, zeros_diff_rows)), True), or_(True, True))
ge(_if_then_else(False, ones_diff_rows, 1), _if_then_else(and_(True, False), -69, compare_blocks_rows))
or_(and_(and_(le(_if_then_else(True, 3, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, max_col_clue)), ge(_if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(False, 4, zeros_diff_rows))), or_(and_(and_(True, False), ge(4, 62)), ge(_if_then_else(True, ones_diff_cols, _if_then_else(or_(le(_if_then_else(ge(compare_blocks_cols, zeros_diff_rows), _if_then_else(False, 2, 3), _if_then_else(True, max_row_clue, 0)), _if_then_else(or_(False, False), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(False, 0, max_col_clue))), and_(le(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(False, 3, zeros_diff_rows)), and_(and_(False, False), and_(False, False)))), _if_then_else(or_(le(_if_then_else(True, zeros_diff_cols, 3), _if_then_else(True, ones_diff_rows, ones_diff_cols)), ge(_if_then_else(True, max_row_clue, 4), _if_then_else(False, 0, zeros_diff_rows))), _if_then_else(le(_if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, 4)), _if_then_else(or_(False, False), _if_then_else(False, 4, max_col_clue), _if_then_else(False, 4, compare_blocks_cols)), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(True, zeros_diff_cols, -1))), _if_then_else(or_(or_(False, False), and_(False, True)), _if_then_else(ge(15, zeros_diff_cols), _if_then_else(True, 3, zeros_diff_cols), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(ones_diff_cols, 3), _if_then_else(True, max_col_clue, max_row_clue), _if_then_else(False, 0, zeros_diff_cols)))), _if_then_else(and_(ge(_if_then_else(False, compare_blocks_cols, 1), _if_then_else(False, compare_blocks_rows, -79)), ge(_if_then_else(True, 3, 0), _if_then_else(False, -47, 0))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_rows, max_col_clue), _if_then_else(True, zeros_diff_cols, 1), _if_then_else(True, 0, compare_blocks_rows)), _if_then_else(ge(21, max_col_clue), _if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, 3, 36))), _if_then_else(le(_if_then_else(False, max_row_clue, 1), _if_then_else(False, compare_blocks_rows, 2)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, zeros_diff_rows), _if_then_else(True, 1, zeros_diff_rows)), _if_then_else(and_(True, False), _if_then_else(False, max_col_clue, 59), _if_then_else(False, max_row_clue, ones_diff_cols)))))), _if_then_else(False, 12, 27)))), le(_if_then_else(or_(or_(False, False), and_(False, True)), _if_then_else(or_(False, True), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 0, 3)), _if_then_else(ge(compare_blocks_rows, 1), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 1))), _if_then_else(and_(le(max_row_clue, max_col_clue), le(-84, 0)), _if_then_else(ge(4, ones_diff_rows), _if_then_else(False, 22, 2), _if_then_else(True, compare_blocks_cols, 4)), _if_then_else(ge(ones_diff_cols, 1), _if_then_else(True, 4, 0), _if_then_else(False, 1, 2)))))
ge(_if_then_else(le(zeros_diff_cols, _if_then_else(le(_if_then_else(le(_if_then_else(True, 1, 1), _if_then_else(False, compare_blocks_cols, compare_blocks_rows)), _if_then_else(ge(4, -18), _if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(False, 2, -29)), _if_then_else(and_(True, False), _if_then_else(False, -39, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, 0))), _if_then_else(le(_if_then_else(True, 0, 3), _if_then_else(False, 1, 2)), _if_then_else(and_(False, False), _if_then_else(True, max_row_clue, 1), _if_then_else(False, ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_cols, 4), _if_then_else(False, zeros_diff_cols, 0)))), _if_then_else(ge(_if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, 2), _if_then_else(True, max_col_clue, 26)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, max_col_clue), _if_then_else(True, zeros_diff_cols, compare_blocks_cols))), _if_then_else(or_(le(compare_blocks_cols, -94), ge(max_col_clue, 2)), _if_then_else(or_(True, False), _if_then_else(True, max_row_clue, zeros_diff_rows), _if_then_else(False, max_col_clue, ones_diff_cols)), _if_then_else(and_(False, False), _if_then_else(True, 1, 4), _if_then_else(False, ones_diff_rows, 1))), _if_then_else(or_(le(4, 4), and_(False, False)), _if_then_else(and_(False, True), _if_then_else(True, 2, max_col_clue), _if_then_else(True, zeros_diff_cols, 3)), _if_then_else(ge(zeros_diff_rows, 4), _if_then_else(False, max_row_clue, compare_blocks_cols), _if_then_else(False, 2, 2)))), _if_then_else(and_(ge(_if_then_else(True, -49, -38), _if_then_else(False, ones_diff_cols, 4)), or_(ge(compare_blocks_rows, zeros_diff_cols), or_(True, True))), _if_then_else(or_(and_(False, True), ge(2, zeros_diff_cols)), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(ge(compare_blocks_cols, ones_diff_cols), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(False, 4, max_col_clue))), _if_then_else(or_(or_(True, False), and_(False, False)), _if_then_else(le(2, 4), _if_then_else(True, 2, -11), _if_then_else(True, max_col_clue, 26)), _if_then_else(ge(0, 0), _if_then_else(False, 0, 4), _if_then_else(False, 1, zeros_diff_rows)))))), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, 3)), 2)
VAL TREES:
add(mul(5, zeros_diff_cols), add(ones_diff_cols, zeros_diff_cols))
mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, add(zeros_diff_rows, zeros_diff_cols)))
mul(mul(mul(add(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), add(add(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), mul(add(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), mul(add(-65, 87), add(compare_blocks_rows, 47))))
add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, 65))
mul(mul(zeros_diff_rows, add(compare_blocks_cols, mul(ones_diff_cols, zeros_diff_rows))), mul(-18, compare_blocks_cols))
add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols))
COND TREES:
ge(2, _if_then_else(ge(_if_then_else(le(_if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, -61), _if_then_else(True, 4, max_col_clue)), _if_then_else(le(zeros_diff_cols, compare_blocks_cols), _if_then_else(True, ones_diff_rows, zeros_diff_rows), _if_then_else(False, max_col_clue, ones_diff_rows))), max_col_clue, _if_then_else(True, 2, compare_blocks_cols)), max_col_clue), 1, _if_then_else(False, 4, zeros_diff_rows)))
and_(and_(True, False), and_(False, True))
le(compare_blocks_cols, _if_then_else(ge(2, 4), _if_then_else(True, -85, max_row_clue), _if_then_else(True, 1, 1)))
ge(_if_then_else(True, compare_blocks_rows, _if_then_else(or_(and_(False, True), ge(max_col_clue, 1)), _if_then_else(ge(compare_blocks_cols, ones_diff_cols), _if_then_else(False, zeros_diff_cols, 2), _if_then_else(False, 1, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, ones_diff_rows, 4), _if_then_else(True, 3, max_col_clue)))), _if_then_else(True, _if_then_else(True, 0, 0), zeros_diff_rows))
le(1, _if_then_else(or_(False, False), _if_then_else(False, max_col_clue, 3), _if_then_else(True, 0, ones_diff_cols)))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(_if_then_else(ge(ones_diff_rows, max_row_clue), compare_blocks_rows, max_row_clue), _if_then_else(False, ones_diff_rows, 0))
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, compare_blocks_cols, 1))), _if_then_else(and_(False, or_(False, False)), _if_then_else(or_(True, True), _if_then_else(True, 4, 51), _if_then_else(True, 0, -78)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(True, max_col_clue, max_col_clue)), or_(or_(False, True), True))))
and_(ge(_if_then_else(True, 4, zeros_diff_cols), compare_blocks_cols), and_(True, True))
or_(or_(False, and_(le(max_row_clue, 0), True)), or_(True, False))
and_(or_(False, False), False)
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
ge(zeros_diff_rows, _if_then_else(or_(ge(max_row_clue, ones_diff_rows), or_(True, False)), _if_then_else(or_(True, True), _if_then_else(True, 0, 0), _if_then_else(True, ones_diff_rows, zeros_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, max_row_clue, compare_blocks_rows), _if_then_else(False, -42, 4))))
and_(ge(_if_then_else(and_(ge(compare_blocks_cols, compare_blocks_rows), True), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(and_(False, True), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, compare_blocks_cols, 1))), _if_then_else(and_(False, or_(False, False)), ones_diff_rows, _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(zeros_diff_rows, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(True, max_col_clue, max_col_clue)), or_(or_(False, True), and_(and_(True, True), True)))))
and_(ge(3, _if_then_else(True, _if_then_else(True, 4, zeros_diff_cols), compare_blocks_cols)), True)
or_(or_(True, le(ones_diff_cols, zeros_diff_rows)), or_(True, False))
and_(False, True)
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
or_(le(2, zeros_diff_rows), ge(_if_then_else(True, zeros_diff_rows, _if_then_else(False, 2, compare_blocks_cols)), max_col_clue))
le(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 1))), _if_then_else(True, 4, compare_blocks_cols))
ge(_if_then_else(True, 4, compare_blocks_cols), _if_then_else(and_(False, ge(3, compare_blocks_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, 2, 4)))
le(_if_then_else(or_(False, True), _if_then_else(False, _if_then_else(True, max_row_clue, zeros_diff_cols), compare_blocks_rows), _if_then_else(False, max_col_clue, 3)), _if_then_else(or_(True, False), _if_then_else(or_(True, True), zeros_diff_rows, 0), _if_then_else(False, 1, max_row_clue)))
ge(_if_then_else(True, zeros_diff_rows, 2), _if_then_else(False, 2, 95))
VAL TREES:
add(add(66, add(zeros_diff_cols, ones_diff_cols)), add(zeros_diff_rows, -93))
mul(add(mul(add(add(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, 14), mul(compare_blocks_cols, zeros_diff_cols))), mul(add(mul(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), mul(mul(compare_blocks_rows, ones_diff_rows), add(-81, zeros_diff_cols)))), add(add(add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), mul(mul(compare_blocks_rows, 63), add(ones_diff_cols, compare_blocks_cols))), add(mul(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(compare_blocks_cols, 49)))))
add(add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(add(-40, zeros_diff_rows), zeros_diff_cols))
mul(add(compare_blocks_rows, compare_blocks_rows), mul(91, compare_blocks_rows))
add(mul(mul(add(compare_blocks_rows, -93), add(compare_blocks_rows, zeros_diff_rows)), add(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols))), mul(mul(add(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(mul(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
ge(zeros_diff_rows, max_col_clue)
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, _if_then_else(False, max_row_clue, zeros_diff_cols), zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(and_(False, True), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, compare_blocks_cols, 1))), _if_then_else(and_(False, or_(False, False)), ones_diff_rows, _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(zeros_diff_rows, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(True, max_col_clue, max_col_clue)), or_(or_(False, True), and_(False, True)))))
and_(ge(2, _if_then_else(ge(-17, 4), _if_then_else(True, max_col_clue, ones_diff_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), True)
or_(and_(False, False), or_(True, False))
and_(or_(True, False), False)
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
ge(2, _if_then_else(ge(_if_then_else(True, max_col_clue, _if_then_else(and_(ge(_if_then_else(ge(compare_blocks_rows, ones_diff_rows), _if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, ones_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(True, 0, max_row_clue), _if_then_else(False, compare_blocks_cols, 0))), and_(le(_if_then_else(True, ones_diff_cols, 4), _if_then_else(False, max_col_clue, 4)), or_(and_(False, True), or_(True, False)))), _if_then_else(le(_if_then_else(ge(zeros_diff_cols, 0), _if_then_else(False, 1, 1), _if_then_else(False, max_col_clue, 3)), _if_then_else(le(3, 67), _if_then_else(False, 4, ones_diff_rows), _if_then_else(False, compare_blocks_cols, ones_diff_cols))), _if_then_else(le(_if_then_else(False, 2, 0), _if_then_else(False, 4, ones_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, 1), _if_then_else(True, 1, max_col_clue)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(False, max_col_clue, zeros_diff_cols))), _if_then_else(and_(ge(4, 2), le(max_row_clue, ones_diff_rows)), _if_then_else(le(0, 0), _if_then_else(False, max_row_clue, zeros_diff_rows), _if_then_else(True, ones_diff_cols, zeros_diff_cols)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(True, 0, 1)))), _if_then_else(ge(_if_then_else(and_(False, False), _if_then_else(False, ones_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, ones_diff_rows)), _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, zeros_diff_rows), _if_then_else(False, 3, 3))), _if_then_else(le(_if_then_else(True, 2, 4), _if_then_else(True, 0, max_row_clue)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(False, compare_blocks_rows, 13)), _if_then_else(and_(True, False), _if_then_else(True, 3, ones_diff_cols), _if_then_else(True, zeros_diff_rows, max_col_clue))), _if_then_else(ge(_if_then_else(True, max_row_clue, max_col_clue), _if_then_else(False, compare_blocks_rows, max_col_clue)), _if_then_else(le(compare_blocks_cols, 1), _if_then_else(False, max_row_clue, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(False, max_col_clue, 3), _if_then_else(True, 74, compare_blocks_cols)))))), max_col_clue), 1, _if_then_else(False, 4, zeros_diff_rows)))
or_(True, and_(False, True))
le(_if_then_else(False, -82, ones_diff_rows), _if_then_else(False, _if_then_else(True, 1, 0), compare_blocks_cols))
ge(_if_then_else(ge(4, _if_then_else(ge(zeros_diff_cols, 1), _if_then_else(False, 2, -6), _if_then_else(ge(compare_blocks_cols, zeros_diff_rows), _if_then_else(True, _if_then_else(False, 3, compare_blocks_rows), compare_blocks_rows), -12))), zeros_diff_rows, 0), 2)
le(1, _if_then_else(or_(False, True), _if_then_else(and_(or_(True, False), le(compare_blocks_cols, ones_diff_cols)), _if_then_else(True, _if_then_else(or_(False, True), 4, 2), 3), _if_then_else(le(_if_then_else(False, ones_diff_cols, 4), ones_diff_cols), 2, ones_diff_cols)), 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(_if_then_else(True, ones_diff_rows, _if_then_else(and_(le(zeros_diff_rows, max_col_clue), True), _if_then_else(False, compare_blocks_rows, _if_then_else(le(ones_diff_cols, ones_diff_rows), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(True, zeros_diff_cols, 4))), _if_then_else(True, ones_diff_cols, _if_then_else(or_(False, False), _if_then_else(True, 0, max_row_clue), ones_diff_rows)))), _if_then_else(True, ones_diff_rows, -18))
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 1))), _if_then_else(and_(and_(True, True), or_(False, False)), _if_then_else(or_(True, True), _if_then_else(True, 4, 51), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(True, max_col_clue, max_col_clue)), or_(or_(False, True), and_(False, True)))))
and_(le(_if_then_else(False, _if_then_else(False, max_col_clue, 2), 3), _if_then_else(False, 3, 64)), True)
or_(or_(or_(ge(compare_blocks_cols, 0), or_(False, True)), ge(compare_blocks_cols, compare_blocks_rows)), False)
and_(or_(False, False), le(max_row_clue, _if_then_else(False, 2, 2)))
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
or_(True, ge(_if_then_else(or_(ge(max_row_clue, compare_blocks_rows), or_(True, False)), _if_then_else(or_(False, True), _if_then_else(True, 0, 0), _if_then_else(and_(and_(le(compare_blocks_cols, compare_blocks_rows), or_(False, False)), or_(or_(True, True), or_(False, True))), ones_diff_rows, zeros_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, max_row_clue, compare_blocks_rows), _if_then_else(False, -42, 4))), _if_then_else(or_(le(compare_blocks_rows, 4), le(compare_blocks_cols, max_col_clue)), _if_then_else(ge(2, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, max_col_clue), _if_then_else(True, _if_then_else(or_(le(0, compare_blocks_rows), or_(False, True)), ones_diff_rows, ones_diff_cols), 0)), _if_then_else(or_(True, le(1, ones_diff_rows)), _if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 4, ones_diff_rows)))))
or_(and_(le(_if_then_else(False, 4, zeros_diff_rows), _if_then_else(and_(True, True), compare_blocks_rows, zeros_diff_cols)), and_(ge(_if_then_else(True, max_row_clue, max_col_clue), -33), True)), False)
ge(0, _if_then_else(or_(le(_if_then_else(and_(True, or_(True, False)), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, 2, _if_then_else(False, ones_diff_cols, compare_blocks_rows))), ones_diff_rows), and_(True, False)), max_row_clue, _if_then_else(False, 0, max_row_clue)))
ge(_if_then_else(le(_if_then_else(or_(and_(ge(_if_then_else(or_(and_(True, True), or_(True, True)), _if_then_else(or_(True, True), _if_then_else(True, 3, max_col_clue), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(or_(False, True), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 0, 2))), _if_then_else(or_(and_(False, False), and_(True, True)), _if_then_else(and_(True, False), _if_then_else(True, 3, zeros_diff_rows), _if_then_else(False, 63, compare_blocks_cols)), _if_then_else(ge(1, compare_blocks_rows), _if_then_else(False, 0, 2), _if_then_else(True, zeros_diff_rows, compare_blocks_rows)))), and_(le(_if_then_else(le(4, zeros_diff_cols), _if_then_else(True, 3, compare_blocks_cols), _if_then_else(False, 8, 3)), _if_then_else(or_(True, False), _if_then_else(True, 36, max_row_clue), _if_then_else(ge(1, 0), _if_then_else(False, 3, _if_then_else(False, _if_then_else(and_(True, True), zeros_diff_rows, 4), compare_blocks_rows)), 0))), ge(_if_then_else(le(_if_then_else(and_(False, and_(False, False)), _if_then_else(le(compare_blocks_cols, 2), 4, _if_then_else(False, 2, 1)), _if_then_else(False, _if_then_else(False, 1, zeros_diff_cols), 0)), ones_diff_rows), _if_then_else(False, 3, 1), _if_then_else(False, zeros_diff_rows, 2)), _if_then_else(le(ones_diff_cols, max_col_clue), _if_then_else(True, zeros_diff_cols, 2), _if_then_else(True, 40, 0))))), False), zeros_diff_rows, ones_diff_rows), _if_then_else(False, 1, zeros_diff_cols)), _if_then_else(ge(1, 0), _if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(False, max_col_clue, max_col_clue)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, max_row_clue, 0))), _if_then_else(and_(ge(1, 0), or_(True, True)), _if_then_else(ge(0, 1), _if_then_else(True, 0, 0), _if_then_else(True, 1, ones_diff_cols)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(False, compare_blocks_rows, zeros_diff_cols))))
ge(_if_then_else(and_(False, False), 3, ones_diff_rows), _if_then_else(ge(_if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(True, 2, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(False, 3, -90), _if_then_else(False, zeros_diff_cols, 55))), _if_then_else(le(_if_then_else(False, 2, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, 3)), _if_then_else(and_(True, True), _if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows)), _if_then_else(or_(False, True), _if_then_else(True, 0, 1), _if_then_else(True, 0, 18))), _if_then_else(or_(or_(False, False), ge(max_row_clue, 31)), _if_then_else(le(zeros_diff_cols, ones_diff_rows), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, -44, max_row_clue)), _if_then_else(ge(ones_diff_cols, 4), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, compare_blocks_cols, max_row_clue)))))
VAL TREES:
mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_rows))
mul(add(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, mul(add(mul(-62, ones_diff_rows), ones_diff_cols), mul(add(compare_blocks_cols, -98), ones_diff_cols))))
mul(mul(mul(add(ones_diff_cols, -19), mul(zeros_diff_cols, zeros_diff_rows)), add(ones_diff_cols, 8)), add(mul(zeros_diff_rows, zeros_diff_cols), add(51, ones_diff_rows)))
add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, -46)), mul(add(mul(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), add(compare_blocks_rows, zeros_diff_rows)))
add(add(add(mul(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_cols))), mul(mul(add(add(mul(20, compare_blocks_cols), mul(ones_diff_rows, ones_diff_rows)), mul(add(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, zeros_diff_cols))), add(zeros_diff_rows, zeros_diff_rows)), mul(mul(83, -28), mul(-88, zeros_diff_cols)))), add(mul(mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, -3)), mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, ones_diff_rows))), add(add(mul(ones_diff_cols, ones_diff_rows), mul(-67, ones_diff_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_cols)))))
mul(add(add(zeros_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)), mul(ones_diff_rows, ones_diff_rows))
COND TREES:
ge(_if_then_else(True, compare_blocks_rows, max_row_clue), zeros_diff_rows)
and_(True, or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(False, or_(or_(False, True), and_(False, True)))))
and_(and_(ge(_if_then_else(False, ones_diff_rows, 4), _if_then_else(False, 1, 1)), or_(False, True)), and_(ge(-17, 4), False))
or_(or_(False, False), or_(and_(False, False), le(_if_then_else(True, zeros_diff_cols, _if_then_else(True, _if_then_else(False, 0, zeros_diff_cols), -36)), compare_blocks_rows)))
and_(or_(and_(True, or_(False, False)), or_(le(2, compare_blocks_rows), False)), le(ones_diff_rows, 2))
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
ge(2, _if_then_else(True, 1, _if_then_else(False, 4, compare_blocks_cols)))
or_(or_(False, and_(False, True)), False)
le(_if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(True, 4, compare_blocks_cols))
ge(_if_then_else(True, 4, 0), _if_then_else(or_(and_(True, False), ge(compare_blocks_cols, compare_blocks_rows)), 2, zeros_diff_rows))
le(1, _if_then_else(ge(_if_then_else(True, 4, _if_then_else(False, max_col_clue, max_col_clue)), _if_then_else(False, 3, _if_then_else(False, ones_diff_rows, max_col_clue))), 2, 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
add(add(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)), add(mul(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows)))
mul(mul(mul(zeros_diff_cols, mul(94, compare_blocks_rows)), mul(ones_diff_rows, zeros_diff_cols)), add(zeros_diff_rows, ones_diff_cols))
mul(add(mul(add(compare_blocks_cols, ones_diff_cols), add(38, ones_diff_rows)), compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
or_(ge(ones_diff_rows, max_col_clue), ge(4, 4))
and_(or_(False, True), le(_if_then_else(ge(ones_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(False, max_row_clue, 1)), 4))
or_(True, True)
or_(or_(and_(False, False), ge(ones_diff_cols, 0)), ge(3, max_col_clue))
le(_if_then_else(and_(ge(_if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 32, max_row_clue)), or_(or_(False, False), le(zeros_diff_rows, ones_diff_cols))), _if_then_else(le(_if_then_else(True, ones_diff_cols, 1), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 4, 4)), _if_then_else(and_(False, True), _if_then_else(False, 2, 0), _if_then_else(True, compare_blocks_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(False, 0, zeros_diff_cols), _if_then_else(False, 1, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, 1), _if_then_else(False, 3, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, compare_blocks_cols), _if_then_else(False, max_row_clue, ones_diff_rows)))), _if_then_else(or_(or_(and_(True, False), le(zeros_diff_cols, 0)), le(4, _if_then_else(True, 0, 3))), _if_then_else(le(_if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(and_(True, False), _if_then_else(True, 4, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(or_(or_(False, False), ge(4, zeros_diff_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 12), _if_then_else(False, 0, 2)), _if_then_else(le(3, zeros_diff_cols), _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, max_row_clue)))))
VAL TREES:
add(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, -27))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(93, add(compare_blocks_cols, compare_blocks_rows)))
mul(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(compare_blocks_cols, compare_blocks_cols), mul(86, 20))
add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, -88))
add(add(ones_diff_cols, compare_blocks_cols), add(-26, compare_blocks_cols))
COND TREES:
ge(ones_diff_rows, _if_then_else(False, 1, _if_then_else(ge(ones_diff_rows, max_col_clue), 4, zeros_diff_rows)))
or_(or_(False, and_(False, True)), False)
le(_if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(True, -69, compare_blocks_cols))
ge(_if_then_else(False, zeros_diff_rows, 0), _if_then_else(True, 2, zeros_diff_rows))
le(1, _if_then_else(True, 2, 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
add(add(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)), add(mul(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows)))
mul(mul(mul(zeros_diff_cols, mul(94, compare_blocks_rows)), mul(ones_diff_rows, zeros_diff_cols)), add(zeros_diff_rows, ones_diff_cols))
mul(add(mul(add(compare_blocks_cols, ones_diff_cols), add(38, ones_diff_rows)), compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(_if_then_else(ge(ones_diff_rows, max_row_clue), compare_blocks_rows, max_row_clue), _if_then_else(False, _if_then_else(ge(_if_then_else(and_(and_(True, True), le(1, 4)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_rows, 9), _if_then_else(False, 3, 2)), _if_then_else(le(zeros_diff_cols, 3), _if_then_else(True, 3, 3), _if_then_else(False, compare_blocks_cols, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, max_col_clue, 4), _if_then_else(True, 0, ones_diff_cols)), _if_then_else(ge(4, 4), _if_then_else(False, 1, 3), _if_then_else(False, ones_diff_rows, 0)), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, 0, 0)))), _if_then_else(or_(ge(_if_then_else(False, 4, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 2)), and_(le(4, 1), le(ones_diff_rows, 4))), _if_then_else(le(_if_then_else(True, zeros_diff_cols, 3), _if_then_else(True, max_col_clue, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(False, 2, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 1)), _if_then_else(le(ones_diff_rows, zeros_diff_cols), _if_then_else(False, 2, 1), _if_then_else(False, 1, max_col_clue))), _if_then_else(or_(and_(True, True), and_(False, False)), _if_then_else(le(0, max_col_clue), _if_then_else(True, 0, 3), _if_then_else(True, -80, 3)), _if_then_else(and_(True, False), _if_then_else(False, -80, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, 2)))), _if_then_else(and_(and_(ge(max_col_clue, 0), le(max_col_clue, 3)), and_(ge(max_col_clue, 1), le(compare_blocks_rows, 3))), _if_then_else(or_(ge(max_row_clue, 1), or_(True, False)), _if_then_else(ge(max_col_clue, 1), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, 4, 2)), _if_then_else(and_(False, False), _if_then_else(False, 0, max_col_clue), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(le(_if_then_else(False, ones_diff_rows, 2), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_cols, max_col_clue), _if_then_else(True, 0, 2)), _if_then_else(or_(True, True), _if_then_else(False, 4, 4), _if_then_else(False, max_col_clue, ones_diff_rows))))), 0))
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(False, _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, compare_blocks_cols, 1))), _if_then_else(and_(False, or_(False, False)), _if_then_else(or_(True, True), _if_then_else(True, 4, 51), _if_then_else(True, 0, -78)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(True, max_col_clue, max_col_clue)), or_(or_(False, True), True))))
and_(ge(4, compare_blocks_cols), and_(or_(or_(True, True), le(4, max_row_clue)), True))
or_(or_(False, and_(le(max_row_clue, 0), True)), or_(True, False))
and_(or_(False, False), or_(True, False))
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
or_(le(_if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(True, 1, 2), _if_then_else(True, zeros_diff_rows, ones_diff_rows)), zeros_diff_rows), ge(_if_then_else(False, max_col_clue, _if_then_else(False, 2, compare_blocks_cols)), ones_diff_rows))
le(_if_then_else(and_(ge(ones_diff_cols, ones_diff_rows), True), 1, 3), 1)
ge(_if_then_else(ge(-17, 4), _if_then_else(True, max_col_clue, 4), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, 2, 4)))
le(_if_then_else(or_(False, True), _if_then_else(False, _if_then_else(True, max_row_clue, zeros_diff_cols), compare_blocks_rows), _if_then_else(False, max_col_clue, 3)), _if_then_else(and_(True, False), _if_then_else(True, zeros_diff_rows, 0), _if_then_else(False, 1, max_row_clue)))
ge(_if_then_else(False, zeros_diff_rows, max_row_clue), _if_then_else(and_(True, True), 2, 95))
VAL TREES:
add(add(66, add(zeros_diff_cols, ones_diff_cols)), add(zeros_diff_rows, -93))
mul(add(mul(add(add(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, 14), mul(compare_blocks_cols, zeros_diff_cols))), mul(add(mul(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), mul(mul(compare_blocks_rows, ones_diff_rows), add(-81, zeros_diff_cols)))), add(add(add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), mul(mul(compare_blocks_rows, 63), add(ones_diff_cols, compare_blocks_cols))), add(mul(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(compare_blocks_cols, 49)))))
add(add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(add(-40, zeros_diff_rows), zeros_diff_cols))
mul(add(compare_blocks_rows, compare_blocks_rows), mul(91, compare_blocks_rows))
add(mul(mul(add(compare_blocks_rows, -93), add(compare_blocks_rows, zeros_diff_rows)), add(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols))), mul(mul(add(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(mul(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
ge(_if_then_else(or_(or_(and_(False, True), and_(False, True)), le(_if_then_else(False, max_col_clue, 1), _if_then_else(False, 0, max_col_clue))), _if_then_else(or_(le(0, compare_blocks_rows), or_(False, True)), _if_then_else(ge(ones_diff_rows, max_col_clue), _if_then_else(False, 95, compare_blocks_cols), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, 0, zeros_diff_cols))), _if_then_else(or_(or_(True, False), ge(zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 0)), 2)), _if_then_else(and_(le(_if_then_else(True, 3, 0), _if_then_else(True, 1, 2)), le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, 2, 19))), _if_then_else(or_(le(ones_diff_rows, zeros_diff_cols), and_(True, True)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 0, 1)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, 4, max_row_clue))), _if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(True, _if_then_else(False, 3, 3), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(ge(zeros_diff_cols, 2), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(True, 1, compare_blocks_rows)))))
le(_if_then_else(and_(True, False), _if_then_else(le(2, 97), 1, -11), 4), _if_then_else(False, ones_diff_rows, zeros_diff_cols))
or_(and_(or_(False, False), False), ge(compare_blocks_rows, _if_then_else(le(zeros_diff_rows, compare_blocks_cols), compare_blocks_rows, _if_then_else(True, -69, ones_diff_rows))))
and_(ge(_if_then_else(or_(and_(True, False), ge(compare_blocks_cols, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 2, 2), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), _if_then_else(or_(or_(True, False), and_(True, True)), _if_then_else(and_(le(0, 4), True), _if_then_else(False, max_row_clue, 1), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(max_col_clue, 4), _if_then_else(True, ones_diff_cols, 0), _if_then_else(False, 95, ones_diff_rows)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, -99, 3)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(-96, 3), _if_then_else(True, 2, ones_diff_cols), _if_then_else(False, 0, -87))), _if_then_else(ge(_if_then_else(False, -1, 3), max_row_clue), _if_then_else(ge(compare_blocks_rows, max_row_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, max_col_clue, 99)))))
or_(and_(False, or_(False, False)), True)
VAL TREES:
add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_cols), add(mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(-69, compare_blocks_cols)), mul(mul(zeros_diff_rows, compare_blocks_cols), mul(zeros_diff_cols, compare_blocks_cols))), compare_blocks_rows))
add(add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(-82, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))))
mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_cols, ones_diff_rows))
add(add(add(mul(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)), 58), mul(ones_diff_cols, -22))
add(add(compare_blocks_rows, ones_diff_cols), add(add(mul(mul(mul(mul(compare_blocks_cols, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_cols)), mul(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows))), mul(mul(add(ones_diff_cols, 76), mul(ones_diff_cols, zeros_diff_cols)), add(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, compare_blocks_cols)))), mul(add(add(add(compare_blocks_cols, ones_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols))), add(add(add(14, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows)), add(mul(97, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_cols))))), mul(19, compare_blocks_cols)))
COND TREES:
ge(zeros_diff_rows, _if_then_else(False, 4, _if_then_else(False, compare_blocks_rows, max_row_clue)))
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(and_(False, True), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, compare_blocks_cols, 1))), _if_then_else(and_(False, or_(False, False)), ones_diff_rows, _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(zeros_diff_rows, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(True, max_col_clue, max_col_clue)), or_(or_(False, True), and_(False, True)))))
and_(ge(2, _if_then_else(True, 4, compare_blocks_cols)), True)
or_(or_(True, False), or_(True, False))
and_(or_(or_(True, False), False), True)
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
ge(max_row_clue, zeros_diff_rows)
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), compare_blocks_rows), _if_then_else(and_(False, True), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, compare_blocks_cols, 1))), _if_then_else(and_(False, or_(False, False)), ones_diff_rows, _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(zeros_diff_rows, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(True, compare_blocks_cols, max_col_clue)), or_(or_(False, True), and_(False, False)))))
and_(ge(2, _if_then_else(True, -69, compare_blocks_cols)), True)
or_(or_(True, False), False)
and_(True, True)
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
ge(_if_then_else(or_(False, le(_if_then_else(False, max_col_clue, 1), _if_then_else(False, 0, max_col_clue))), _if_then_else(or_(le(0, compare_blocks_rows), or_(False, True)), _if_then_else(ge(ones_diff_rows, max_col_clue), _if_then_else(False, 95, compare_blocks_cols), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, 0, zeros_diff_cols))), _if_then_else(or_(and_(False, True), ge(zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(True, 1, 2), _if_then_else(True, zeros_diff_rows, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 0), _if_then_else(True, 1, 2)), le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(True, zeros_diff_rows, 19))), _if_then_else(or_(le(ones_diff_rows, zeros_diff_cols), and_(True, True)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 0, 1)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, 4, max_row_clue))), _if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(1, 3), _if_then_else(False, 3, 3), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(ge(zeros_diff_cols, 2), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(True, 1, compare_blocks_rows)))))
le(_if_then_else(True, zeros_diff_cols, -36), _if_then_else(ge(ones_diff_rows, 4), ones_diff_rows, zeros_diff_cols))
or_(and_(and_(True, False), False), False)
and_(ge(_if_then_else(or_(and_(True, False), ge(compare_blocks_cols, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 2, 2), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), _if_then_else(or_(or_(True, False), and_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, max_row_clue, 1), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(max_col_clue, 4), _if_then_else(True, ones_diff_cols, 0), _if_then_else(False, 95, ones_diff_rows)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, -99, 3)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(-96, 3), _if_then_else(True, 2, ones_diff_cols), _if_then_else(False, 0, -87))), _if_then_else(ge(_if_then_else(False, -1, 3), _if_then_else(True, 1, max_row_clue)), _if_then_else(ge(compare_blocks_rows, max_row_clue), compare_blocks_cols, _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, max_col_clue, 99)))))
or_(True, and_(False, True))
VAL TREES:
add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows))
add(add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(-82, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))))
mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_cols, ones_diff_rows))
add(add(ones_diff_rows, 58), mul(ones_diff_cols, -22))
add(add(compare_blocks_rows, ones_diff_cols), add(add(compare_blocks_rows, compare_blocks_rows), mul(19, compare_blocks_cols)))
COND TREES:
ge(2, _if_then_else(ge(_if_then_else(and_(False, True), 4, 3), _if_then_else(True, ones_diff_cols, zeros_diff_rows)), 1, _if_then_else(False, 4, zeros_diff_rows)))
or_(or_(False, and_(and_(ge(2, 1), and_(True, False)), True)), and_(False, and_(le(_if_then_else(False, -30, zeros_diff_rows), _if_then_else(False, max_row_clue, 10)), or_(or_(True, False), ge(1, 4)))))
le(_if_then_else(False, _if_then_else(le(_if_then_else(and_(False, False), _if_then_else(False, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 2, compare_blocks_cols)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(and_(ge(_if_then_else(le(_if_then_else(True, max_row_clue, max_row_clue), _if_then_else(True, zeros_diff_rows, 4)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(False, ones_diff_cols, 1)), _if_then_else(and_(False, True), _if_then_else(False, max_col_clue, max_col_clue), _if_then_else(False, 0, ones_diff_rows))), _if_then_else(or_(or_(True, False), or_(True, False)), _if_then_else(or_(False, False), _if_then_else(True, 1, 41), _if_then_else(True, 4, max_row_clue)), _if_then_else(ge(83, max_row_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, max_col_clue, zeros_diff_cols)))), or_(ge(_if_then_else(ge(1, ones_diff_rows), _if_then_else(False, 3, 1), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_rows))), le(_if_then_else(ge(3, zeros_diff_rows), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(False, compare_blocks_cols, -68)), _if_then_else(or_(True, True), _if_then_else(False, 1, compare_blocks_cols), _if_then_else(False, max_row_clue, ones_diff_cols))))), max_row_clue, max_col_clue))), _if_then_else(le(_if_then_else(False, compare_blocks_rows, 64), _if_then_else(False, 4, 0)), _if_then_else(or_(True, True), _if_then_else(True, 2, ones_diff_rows), _if_then_else(True, zeros_diff_rows, max_row_clue)), _if_then_else(and_(True, False), _if_then_else(True, 1, 1), _if_then_else(False, ones_diff_rows, ones_diff_rows))), _if_then_else(and_(le(zeros_diff_rows, ones_diff_cols), le(zeros_diff_cols, max_col_clue)), _if_then_else(or_(True, True), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(False, ones_diff_rows, zeros_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, ones_diff_cols, 3)))), ones_diff_rows), _if_then_else(True, -69, compare_blocks_cols))
ge(_if_then_else(True, _if_then_else(False, _if_then_else(True, max_row_clue, zeros_diff_cols), compare_blocks_rows), 0), _if_then_else(le(3, 4), _if_then_else(False, _if_then_else(or_(False, False), _if_then_else(True, 3, max_row_clue), _if_then_else(True, max_col_clue, _if_then_else(False, max_col_clue, max_row_clue))), 4), _if_then_else(False, 4, compare_blocks_rows)))
le(_if_then_else(le(_if_then_else(le(2, 1), _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(False, 3, 2)), _if_then_else(ge(4, zeros_diff_cols), _if_then_else(False, ones_diff_rows, max_col_clue), _if_then_else(False, 0, max_col_clue))), _if_then_else(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, ones_diff_cols, 38)), _if_then_else(le(ones_diff_cols, 3), _if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, compare_blocks_cols, 3)), _if_then_else(ge(max_row_clue, 3), _if_then_else(True, compare_blocks_rows, 1), _if_then_else(True, 0, zeros_diff_rows))), _if_then_else(ge(_if_then_else(False, 2, ones_diff_cols), _if_then_else(True, 98, 2)), _if_then_else(ge(1, ones_diff_cols), _if_then_else(True, max_col_clue, compare_blocks_cols), _if_then_else(True, compare_blocks_cols, 2)), _if_then_else(le(max_row_clue, 4), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(True, max_row_clue, -71)))), _if_then_else(False, 2, 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
add(add(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)), add(mul(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows)))
mul(mul(mul(zeros_diff_cols, mul(94, compare_blocks_rows)), mul(ones_diff_rows, zeros_diff_cols)), add(zeros_diff_rows, ones_diff_cols))
mul(add(mul(add(compare_blocks_cols, ones_diff_cols), add(38, ones_diff_rows)), compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
le(_if_then_else(True, 2, 3), _if_then_else(or_(or_(True, False), le(max_row_clue, 4)), 4, 1))
ge(_if_then_else(le(2, 97), _if_then_else(False, 2, ones_diff_rows), -11), _if_then_else(ge(compare_blocks_cols, zeros_diff_cols), _if_then_else(or_(True, True), 1, ones_diff_cols), _if_then_else(True, max_row_clue, 4)))
le(_if_then_else(True, _if_then_else(True, ones_diff_rows, ones_diff_rows), 4), _if_then_else(False, _if_then_else(False, compare_blocks_rows, zeros_diff_rows), 4))
and_(ge(_if_then_else(le(_if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(True, -53, 2)), _if_then_else(or_(True, False), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(True, zeros_diff_cols, zeros_diff_rows)), _if_then_else(ge(3, compare_blocks_cols), _if_then_else(False, 3, max_col_clue), _if_then_else(True, 1, 3))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, zeros_diff_rows, -12)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(True, 3, _if_then_else(False, -1, 3))), _if_then_else(or_(True, True), _if_then_else(False, -66, 2), _if_then_else(True, 0, max_col_clue)))), True)
or_(ge(3, _if_then_else(False, 3, _if_then_else(False, 0, max_col_clue))), and_(and_(le(_if_then_else(True, 0, ones_diff_cols), _if_then_else(True, 1, _if_then_else(and_(and_(True, True), or_(False, False)), _if_then_else(False, max_row_clue, max_row_clue), compare_blocks_rows))), True), or_(and_(False, False), False)))
VAL TREES:
mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols))
add(add(ones_diff_cols, zeros_diff_cols), add(91, zeros_diff_rows))
add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, mul(zeros_diff_cols, -23)))
mul(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, -72))
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(38, ones_diff_rows)))
add(add(mul(add(ones_diff_rows, ones_diff_rows), mul(-70, ones_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_cols, 4))), add(add(add(compare_blocks_rows, ones_diff_rows), add(-86, compare_blocks_rows)), mul(mul(-86, compare_blocks_cols), add(ones_diff_cols, zeros_diff_cols))))
COND TREES:
le(_if_then_else(True, 3, 3), _if_then_else(or_(and_(ge(compare_blocks_cols, 1), ge(3, zeros_diff_cols)), le(max_row_clue, 4)), 4, 1))
ge(_if_then_else(le(2, 97), 1, -11), _if_then_else(ge(compare_blocks_cols, zeros_diff_cols), _if_then_else(True, _if_then_else(ge(_if_then_else(or_(or_(True, True), and_(True, True)), _if_then_else(le(ones_diff_rows, max_row_clue), _if_then_else(True, 0, zeros_diff_cols), _if_then_else(False, 0, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(False, 3, 1), 1)), _if_then_else(ge(_if_then_else(True, 3, max_col_clue), _if_then_else(False, 1, 2)), _if_then_else(and_(False, True), _if_then_else(False, 2, 4), _if_then_else(False, zeros_diff_cols, 2)), _if_then_else(le(compare_blocks_rows, zeros_diff_cols), _if_then_else(False, max_row_clue, max_row_clue), _if_then_else(False, max_row_clue, max_row_clue)))), _if_then_else(and_(ge(_if_then_else(False, 46, 0), _if_then_else(True, 0, 3)), ge(_if_then_else(True, 4, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(le(_if_then_else(True, max_row_clue, ones_diff_cols), _if_then_else(False, ones_diff_rows, max_row_clue)), _if_then_else(ge(compare_blocks_cols, zeros_diff_rows), _if_then_else(True, ones_diff_rows, 2), _if_then_else(True, 4, 2)), _if_then_else(ge(zeros_diff_cols, 4), _if_then_else(False, max_row_clue, 2), _if_then_else(True, max_col_clue, ones_diff_cols))), _if_then_else(and_(le(zeros_diff_cols, 4), ge(compare_blocks_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, 3, 1), _if_then_else(False, max_row_clue, 3)), _if_then_else(and_(False, True), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(True, 1, 1)))), _if_then_else(ge(_if_then_else(or_(False, False), _if_then_else(True, 0, max_row_clue), _if_then_else(True, zeros_diff_rows, 1)), _if_then_else(le(ones_diff_cols, 2), _if_then_else(True, 0, ones_diff_cols), _if_then_else(True, max_row_clue, 1))), _if_then_else(or_(ge(3, zeros_diff_rows), and_(True, True)), _if_then_else(le(compare_blocks_rows, max_row_clue), _if_then_else(False, max_col_clue, 0), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(le(1, 70), _if_then_else(False, 3, -75), _if_then_else(True, 3, 73))), _if_then_else(or_(and_(True, True), le(ones_diff_cols, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(False, 3, max_row_clue), _if_then_else(True, 0, 3)), _if_then_else(ge(ones_diff_rows, -62), zeros_diff_cols, _if_then_else(False, ones_diff_cols, compare_blocks_rows))))), ones_diff_cols), _if_then_else(False, max_row_clue, 4)))
le(_if_then_else(True, _if_then_else(True, 4, _if_then_else(le(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(False, 3, 83)), _if_then_else(and_(False, True), _if_then_else(True, 2, ones_diff_cols), _if_then_else(False, 3, -45))), _if_then_else(and_(or_(False, False), ge(2, ones_diff_rows)), _if_then_else(and_(True, False), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, 4, 4)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, ones_diff_rows, 1))), _if_then_else(le(_if_then_else(True, 3, 3), _if_then_else(True, 0, 0)), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(True, 99, 4)), _if_then_else(and_(False, True), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(False, 1, 99))))), 4), _if_then_else(False, _if_then_else(False, compare_blocks_rows, zeros_diff_rows), 4))
and_(True, and_(le(zeros_diff_cols, max_row_clue), or_(True, False)))
or_(ge(_if_then_else(True, 4, _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(False, 3, _if_then_else(False, 0, max_col_clue))), True)
VAL TREES:
mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols))
add(add(ones_diff_cols, zeros_diff_cols), add(91, zeros_diff_rows))
add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, mul(zeros_diff_cols, -23)))
mul(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, -72))
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(38, ones_diff_rows)))
add(add(mul(add(ones_diff_rows, ones_diff_rows), mul(-70, ones_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_cols, 4))), add(add(add(compare_blocks_rows, ones_diff_rows), add(-86, compare_blocks_rows)), mul(mul(-86, compare_blocks_cols), add(ones_diff_cols, zeros_diff_cols))))
COND TREES:
ge(2, _if_then_else(True, _if_then_else(False, 2, zeros_diff_rows), _if_then_else(False, 4, zeros_diff_rows)))
or_(False, and_(False, True))
le(_if_then_else(False, -82, ones_diff_rows), ones_diff_cols)
ge(_if_then_else(True, zeros_diff_rows, 0), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, max_row_clue), zeros_diff_rows))
le(1, _if_then_else(False, 2, 4))
VAL TREES:
add(add(zeros_diff_rows, add(mul(mul(zeros_diff_rows, 13), add(-100, 14)), add(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, zeros_diff_cols)))), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(add(add(mul(zeros_diff_cols, -9), zeros_diff_rows), add(add(-28, compare_blocks_rows), zeros_diff_rows)), zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(mul(add(-41, ones_diff_cols), mul(ones_diff_rows, -35)), -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(mul(add(mul(mul(zeros_diff_rows, ones_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(-52, ones_diff_cols), mul(zeros_diff_rows, -30))), mul(add(add(ones_diff_cols, compare_blocks_rows), add(zeros_diff_rows, -83)), add(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(add(mul(add(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(add(ones_diff_cols, compare_blocks_cols), mul(-54, zeros_diff_rows))), add(mul(mul(5, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_cols)), mul(mul(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols))))), add(66, ones_diff_rows))
COND TREES:
or_(le(2, zeros_diff_rows), ge(_if_then_else(True, max_col_clue, _if_then_else(False, 2, compare_blocks_cols)), max_col_clue))
le(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 1))), _if_then_else(True, 4, _if_then_else(False, max_row_clue, zeros_diff_cols)))
ge(_if_then_else(ge(-17, 4), _if_then_else(True, max_col_clue, ones_diff_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(False, ge(3, compare_blocks_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(True, 2, 4)))
le(_if_then_else(True, _if_then_else(False, _if_then_else(True, max_row_clue, zeros_diff_cols), compare_blocks_rows), _if_then_else(False, max_col_clue, 3)), _if_then_else(and_(False, False), _if_then_else(or_(True, True), zeros_diff_rows, 0), _if_then_else(False, 1, max_row_clue)))
ge(_if_then_else(False, zeros_diff_rows, 2), _if_then_else(False, 2, 95))
VAL TREES:
add(add(66, add(zeros_diff_cols, ones_diff_cols)), add(zeros_diff_rows, -93))
mul(add(mul(add(add(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, 14), mul(compare_blocks_cols, zeros_diff_cols))), mul(add(mul(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), mul(mul(compare_blocks_rows, ones_diff_rows), add(-81, zeros_diff_cols)))), add(add(add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), mul(mul(compare_blocks_rows, 63), add(ones_diff_cols, compare_blocks_cols))), add(mul(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(compare_blocks_cols, 49)))))
add(add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(add(-40, zeros_diff_rows), zeros_diff_cols))
mul(add(compare_blocks_rows, compare_blocks_rows), mul(91, compare_blocks_rows))
add(mul(mul(add(compare_blocks_rows, -93), add(compare_blocks_rows, zeros_diff_rows)), add(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols))), mul(mul(add(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(mul(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
ge(_if_then_else(or_(or_(and_(False, True), and_(False, True)), le(_if_then_else(False, max_col_clue, 1), _if_then_else(False, 0, max_col_clue))), _if_then_else(or_(le(0, compare_blocks_rows), or_(True, True)), _if_then_else(ge(ones_diff_rows, max_col_clue), _if_then_else(False, 95, compare_blocks_cols), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, 0, zeros_diff_cols))), _if_then_else(or_(or_(True, False), ge(zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(True, 1, 2), _if_then_else(True, zeros_diff_rows, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 1), _if_then_else(or_(or_(or_(and_(True, False), ge(zeros_diff_cols, 81)), ge(_if_then_else(False, max_row_clue, 2), _if_then_else(True, -36, ones_diff_cols))), or_(or_(or_(True, False), and_(False, False)), le(_if_then_else(False, zeros_diff_rows, ones_diff_cols), _if_then_else(True, zeros_diff_rows, ones_diff_cols)))), 1, 2)), le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 19))), _if_then_else(False, _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 0, 1)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, 4, max_row_clue))), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(1, 3), _if_then_else(False, 3, 3), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(ge(zeros_diff_cols, 2), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(True, 1, compare_blocks_rows)))))
ge(_if_then_else(ge(_if_then_else(le(compare_blocks_cols, 3), _if_then_else(False, 94, 3), _if_then_else(True, compare_blocks_rows, 23)), _if_then_else(or_(True, False), _if_then_else(False, -61, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, zeros_diff_cols))), _if_then_else(or_(or_(False, False), le(zeros_diff_cols, 0)), _if_then_else(ge(41, ones_diff_cols), _if_then_else(False, max_col_clue, 1), _if_then_else(True, compare_blocks_cols, 1)), _if_then_else(or_(False, False), _if_then_else(False, 3, 2), _if_then_else(False, max_row_clue, compare_blocks_rows))), _if_then_else(and_(and_(False, True), and_(True, False)), _if_then_else(and_(False, False), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(False, zeros_diff_rows, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(False, max_row_clue, compare_blocks_cols), _if_then_else(False, 2, max_col_clue)))), _if_then_else(or_(ge(_if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(True, ones_diff_cols, compare_blocks_cols)), le(_if_then_else(True, ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, 0))), _if_then_else(and_(ge(max_col_clue, 1), or_(True, False)), _if_then_else(ge(1, ones_diff_cols), _if_then_else(True, ones_diff_cols, ones_diff_rows), _if_then_else(True, -69, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, max_col_clue, 2), _if_then_else(False, 3, ones_diff_rows))), _if_then_else(or_(ge(compare_blocks_cols, 4), ge(compare_blocks_rows, 0)), _if_then_else(or_(True, True), _if_then_else(True, max_col_clue, max_row_clue), _if_then_else(True, 4, 1)), _if_then_else(or_(True, False), _if_then_else(False, max_row_clue, 2), _if_then_else(True, 2, 0)))))
or_(and_(ge(_if_then_else(and_(ge(_if_then_else(True, 2, 1), _if_then_else(False, 4, max_col_clue)), ge(_if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), _if_then_else(or_(or_(False, False), and_(True, True)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_rows, 88), _if_then_else(False, 1, 3)), _if_then_else(ge(max_col_clue, 42), _if_then_else(True, compare_blocks_rows, 4), _if_then_else(True, 0, 0))), _if_then_else(or_(and_(False, False), and_(True, False)), _if_then_else(ge(compare_blocks_rows, 2), _if_then_else(False, 4, 3), _if_then_else(False, 2, 1)), _if_then_else(ge(ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, ones_diff_cols), _if_then_else(False, ones_diff_cols, 0)))), _if_then_else(le(_if_then_else(ge(4, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_cols), _if_then_else(False, max_row_clue, 3)), _if_then_else(or_(False, False), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(True, ones_diff_rows, compare_blocks_cols))), _if_then_else(or_(and_(False, True), or_(False, True)), _if_then_else(or_(False, False), _if_then_else(False, max_row_clue, compare_blocks_cols), _if_then_else(False, 4, 2)), _if_then_else(and_(True, True), _if_then_else(True, 0, zeros_diff_rows), _if_then_else(False, 4, max_col_clue))), _if_then_else(or_(ge(zeros_diff_rows, max_row_clue), ge(3, max_row_clue)), _if_then_else(ge(4, 4), _if_then_else(False, 0, ones_diff_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, ones_diff_rows, 3))))), False), ge(compare_blocks_rows, 3))
and_(ge(_if_then_else(or_(and_(True, False), ge(compare_blocks_cols, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 2, 2), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), _if_then_else(or_(or_(True, False), and_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, max_row_clue, 1), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(max_col_clue, 4), _if_then_else(True, ones_diff_cols, 0), _if_then_else(False, 95, ones_diff_rows)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, 3), _if_then_else(ge(compare_blocks_rows, 0), _if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(False, max_col_clue, max_col_clue))), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(-96, 3), _if_then_else(True, _if_then_else(le(-25, zeros_diff_rows), _if_then_else(True, _if_then_else(True, _if_then_else(False, 4, 0), 4), 95), _if_then_else(False, _if_then_else(False, 1, ones_diff_rows), compare_blocks_rows)), ones_diff_cols), _if_then_else(False, 0, -87))), _if_then_else(ge(_if_then_else(False, -1, 3), _if_then_else(or_(True, True), 1, max_row_clue)), _if_then_else(False, _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, max_col_clue, 99)))))
or_(True, False)
VAL TREES:
add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows))
add(add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(-82, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))))
mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_cols, ones_diff_rows))
add(add(ones_diff_rows, 58), mul(ones_diff_cols, -22))
add(add(compare_blocks_rows, ones_diff_cols), add(add(compare_blocks_rows, compare_blocks_rows), mul(19, compare_blocks_cols)))
COND TREES:
ge(2, _if_then_else(ge(max_col_clue, max_col_clue), 1, _if_then_else(ge(-18, 4), 4, zeros_diff_rows)))
or_(True, and_(True, le(compare_blocks_cols, _if_then_else(False, zeros_diff_cols, _if_then_else(False, compare_blocks_cols, max_col_clue)))))
le(_if_then_else(False, -82, 3), _if_then_else(True, _if_then_else(False, 1, 0), compare_blocks_cols))
ge(_if_then_else(and_(True, False), ones_diff_cols, 0), compare_blocks_cols)
le(1, _if_then_else(or_(True, True), _if_then_else(False, 2, 2), 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(4, _if_then_else(True, ones_diff_rows, -18))
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(True, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 1))), _if_then_else(and_(and_(True, True), or_(False, False)), _if_then_else(or_(True, True), _if_then_else(True, 4, 51), _if_then_else(True, 0, -78)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(True, max_col_clue, max_col_clue)), or_(or_(False, True), and_(False, True)))))
and_(ge(3, 3), and_(True, False))
or_(or_(True, False), True)
and_(or_(False, False), le(ones_diff_rows, 2))
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
ge(4, _if_then_else(True, ones_diff_rows, -18))
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(False, _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 1))), _if_then_else(and_(and_(True, True), or_(False, False)), _if_then_else(or_(True, True), _if_then_else(True, 4, 51), _if_then_else(True, 0, -78)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(True, max_col_clue, max_col_clue)), or_(or_(False, True), and_(False, False)))))
and_(ge(3, 3), and_(False, False))
or_(or_(True, True), True)
and_(or_(False, False), le(ones_diff_rows, 2))
VAL TREES:
mul(mul(add(add(ones_diff_rows, ones_diff_rows), mul(ones_diff_cols, zeros_diff_rows)), zeros_diff_rows), add(add(mul(zeros_diff_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(ones_diff_cols, zeros_diff_cols)))
add(mul(add(mul(mul(compare_blocks_cols, -63), add(compare_blocks_rows, compare_blocks_rows)), add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_rows))), mul(add(mul(ones_diff_rows, compare_blocks_rows), mul(-12, zeros_diff_cols)), mul(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)))), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(ones_diff_cols, 67), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_cols, 40), add(zeros_diff_rows, ones_diff_cols)))))
add(add(add(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, compare_blocks_cols)), zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, mul(mul(ones_diff_cols, -69), mul(mul(mul(ones_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), add(mul(ones_diff_cols, ones_diff_cols), ones_diff_rows)))), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(mul(add(mul(add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_cols), add(-53, zeros_diff_cols))), add(add(add(zeros_diff_cols, 46), add(95, compare_blocks_rows)), add(mul(zeros_diff_cols, zeros_diff_rows), mul(compare_blocks_cols, 39)))), add(mul(mul(mul(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(zeros_diff_cols, ones_diff_rows))), add(add(mul(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), mul(mul(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_cols, zeros_diff_rows))))), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(add(add(ones_diff_cols, 49), add(compare_blocks_cols, -77)), mul(82, compare_blocks_cols))
COND TREES:
ge(_if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, ones_diff_rows, zeros_diff_rows))
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), 4), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(3, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, compare_blocks_cols, 1))), _if_then_else(and_(False, or_(False, False)), _if_then_else(or_(True, True), _if_then_else(True, 4, 51), _if_then_else(True, 0, -78)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(False, compare_blocks_cols, max_col_clue)), or_(or_(False, True), True))))
and_(ge(2, 2), True)
or_(or_(False, and_(le(_if_then_else(ge(3, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, max_col_clue), _if_then_else(False, zeros_diff_cols, 1)), max_col_clue), True)), or_(False, False))
and_(True, le(2, compare_blocks_rows))
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(add(mul(mul(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, 24), mul(compare_blocks_rows, ones_diff_cols))), zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, add(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows))))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(add(mul(mul(ones_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols)), add(mul(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), ones_diff_rows))
COND TREES:
ge(_if_then_else(or_(False, le(_if_then_else(False, max_col_clue, 1), _if_then_else(False, 0, max_col_clue))), _if_then_else(or_(le(0, compare_blocks_rows), or_(False, True)), _if_then_else(ge(ones_diff_rows, max_col_clue), _if_then_else(False, 95, compare_blocks_cols), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, 0, zeros_diff_cols))), _if_then_else(or_(and_(False, True), ge(zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(True, 1, 2), _if_then_else(True, zeros_diff_rows, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 0), _if_then_else(True, 1, 2)), le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(True, zeros_diff_rows, 19))), _if_then_else(or_(le(ones_diff_rows, zeros_diff_cols), and_(True, True)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 0, 1)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, 4, max_row_clue))), _if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(1, 3), _if_then_else(False, 3, 3), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(ge(zeros_diff_cols, 2), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(True, 1, compare_blocks_rows)))))
le(_if_then_else(True, zeros_diff_cols, -36), _if_then_else(ge(ones_diff_rows, 4), ones_diff_rows, zeros_diff_cols))
or_(and_(and_(True, False), False), False)
and_(ge(_if_then_else(or_(and_(True, False), ge(compare_blocks_cols, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 2, 2), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), _if_then_else(or_(or_(True, False), and_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, max_row_clue, 1), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(max_col_clue, 4), _if_then_else(True, ones_diff_cols, 0), _if_then_else(False, 95, ones_diff_rows)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, -99, 3)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(-96, 3), _if_then_else(True, 2, ones_diff_cols), _if_then_else(False, 0, -87))), _if_then_else(ge(_if_then_else(False, -1, 3), _if_then_else(True, 1, max_row_clue)), _if_then_else(ge(compare_blocks_rows, max_row_clue), compare_blocks_cols, _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, max_col_clue, 99)))))
or_(True, and_(False, True))
VAL TREES:
add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols))
add(mul(-45, zeros_diff_cols), add(compare_blocks_cols, 22))
add(add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(-82, compare_blocks_cols), mul(compare_blocks_rows, add(add(mul(ones_diff_cols, zeros_diff_rows), compare_blocks_rows), mul(zeros_diff_cols, mul(-46, mul(compare_blocks_rows, compare_blocks_cols))))))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))))
mul(mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_cols, -94)), add(zeros_diff_cols, ones_diff_rows))
add(add(add(mul(mul(ones_diff_rows, -94), zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), 58), mul(ones_diff_cols, -22))
mul(add(compare_blocks_rows, 85), mul(ones_diff_cols, zeros_diff_rows))
COND TREES:
or_(le(max_row_clue, max_col_clue), and_(True, ge(ones_diff_rows, compare_blocks_rows)))
and_(le(_if_then_else(ge(ones_diff_rows, _if_then_else(False, compare_blocks_cols, max_col_clue)), ones_diff_rows, zeros_diff_cols), _if_then_else(False, ones_diff_rows, zeros_diff_cols)), or_(True, False))
and_(ge(-17, 4), True)
le(_if_then_else(ge(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(True, 4, 4), _if_then_else(False, 3, compare_blocks_rows)), _if_then_else(le(ones_diff_rows, max_col_clue), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, 4, ones_diff_cols))), _if_then_else(le(_if_then_else(False, ones_diff_cols, 3), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(3, 0), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 4, 4)), _if_then_else(ge(3, zeros_diff_rows), _if_then_else(True, 4, ones_diff_cols), _if_then_else(True, zeros_diff_cols, zeros_diff_rows))), _if_then_else(or_(and_(True, False), and_(False, False)), _if_then_else(and_(True, False), _if_then_else(False, 1, 0), _if_then_else(False, ones_diff_rows, 25)), _if_then_else(False, _if_then_else(True, max_col_clue, max_row_clue), _if_then_else(False, max_col_clue, 4)))), _if_then_else(or_(ge(_if_then_else(False, ones_diff_cols, max_col_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), and_(True, and_(True, False))), _if_then_else(and_(ge(max_row_clue, zeros_diff_rows), and_(False, True)), _if_then_else(le(ones_diff_rows, ones_diff_cols), _if_then_else(False, 3, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), _if_then_else(ge(3, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, max_col_clue), _if_then_else(True, zeros_diff_cols, 1))), _if_then_else(ge(_if_then_else(False, 0, compare_blocks_rows), _if_then_else(False, 1, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, -48, max_col_clue), _if_then_else(False, 3, 3)), _if_then_else(and_(True, True), _if_then_else(True, 4, 2), _if_then_else(True, 59, max_row_clue)))))
and_(le(2, compare_blocks_rows), le(3, 91))
VAL TREES:
mul(mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), mul(add(ones_diff_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(compare_blocks_rows, zeros_diff_cols), mul(-22, zeros_diff_cols))
add(mul(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)), mul(mul(ones_diff_rows, -97), add(zeros_diff_rows, ones_diff_rows)))
add(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_rows))
mul(mul(add(ones_diff_rows, ones_diff_cols), 66), mul(zeros_diff_rows, -5))
mul(add(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)))
COND TREES:
ge(_if_then_else(or_(or_(and_(False, True), and_(False, True)), le(_if_then_else(False, max_col_clue, 1), _if_then_else(False, 0, max_col_clue))), _if_then_else(or_(le(0, max_col_clue), or_(False, True)), _if_then_else(ge(ones_diff_rows, max_col_clue), _if_then_else(False, 95, compare_blocks_cols), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, 0, zeros_diff_cols))), _if_then_else(or_(or_(True, False), ge(zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(True, 1, 2), _if_then_else(True, zeros_diff_rows, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 0), _if_then_else(True, 1, zeros_diff_rows)), le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 19))), _if_then_else(or_(le(ones_diff_rows, zeros_diff_cols), and_(False, True)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 0, 1)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_rows, 1), _if_then_else(False, 4, max_row_clue))), _if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(True, _if_then_else(False, 3, 3), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(ge(zeros_diff_cols, 2), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(True, 1, compare_blocks_rows)))))
le(1, _if_then_else(ge(max_row_clue, 0), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(ge(ones_diff_cols, ones_diff_rows), compare_blocks_rows, zeros_diff_cols)))
or_(False, le(zeros_diff_rows, 4))
and_(ge(_if_then_else(True, _if_then_else(and_(ge(compare_blocks_cols, 50), True), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 2, 2), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), _if_then_else(or_(or_(True, False), and_(True, True)), _if_then_else(and_(le(0, 4), True), _if_then_else(False, max_row_clue, 1), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(max_col_clue, 4), _if_then_else(True, ones_diff_cols, 0), _if_then_else(False, 95, ones_diff_rows)))), ge(_if_then_else(ge(_if_then_else(False, zeros_diff_cols, 3), _if_then_else(True, -99, 3)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(True, 2, ones_diff_cols), _if_then_else(False, 0, -87))), _if_then_else(ge(_if_then_else(False, -1, 3), _if_then_else(True, 1, max_row_clue)), _if_then_else(ge(compare_blocks_rows, max_row_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, max_col_clue, 99)))))
or_(False, True)
VAL TREES:
add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows))
add(add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(-82, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))))
mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_cols, ones_diff_rows))
add(add(ones_diff_rows, 58), mul(ones_diff_cols, -22))
add(add(compare_blocks_rows, ones_diff_cols), add(add(compare_blocks_rows, compare_blocks_rows), mul(19, compare_blocks_cols)))
COND TREES:
or_(True, True)
le(_if_then_else(le(2, max_row_clue), compare_blocks_rows, max_row_clue), _if_then_else(False, _if_then_else(False, compare_blocks_cols, zeros_diff_rows), 2))
le(_if_then_else(True, ones_diff_cols, 2), _if_then_else(True, ones_diff_cols, max_col_clue))
ge(_if_then_else(le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(ge(3, zeros_diff_rows), 1, zeros_diff_cols)), _if_then_else(ge(compare_blocks_rows, max_col_clue), _if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(le(-84, 0), max_col_clue, max_col_clue)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(True, _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(True, 4, zeros_diff_rows)), ones_diff_rows), _if_then_else(False, max_row_clue, 0))), _if_then_else(and_(ge(1, 0), or_(True, True)), _if_then_else(ge(0, max_col_clue), _if_then_else(True, ones_diff_cols, 0), _if_then_else(True, 1, ones_diff_cols)), _if_then_else(le(ones_diff_cols, -1), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(False, compare_blocks_rows, zeros_diff_cols))))
ge(_if_then_else(or_(True, False), 2, ones_diff_rows), _if_then_else(le(ones_diff_rows, 4), max_row_clue, 3))
VAL TREES:
mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_rows))
mul(add(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols))
mul(mul(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, 8)), add(mul(zeros_diff_rows, zeros_diff_cols), add(51, ones_diff_rows)))
add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, -46)), mul(mul(ones_diff_cols, 48), add(compare_blocks_rows, zeros_diff_rows)))
add(add(add(mul(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_cols))), mul(mul(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows)), mul(mul(83, -28), mul(-88, zeros_diff_cols)))), add(mul(mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, -3)), mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, ones_diff_rows))), add(add(mul(ones_diff_cols, ones_diff_rows), mul(-67, ones_diff_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_cols)))))
mul(mul(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, ones_diff_rows))
COND TREES:
ge(zeros_diff_rows, zeros_diff_rows)
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), compare_blocks_rows), _if_then_else(and_(False, True), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, compare_blocks_cols, 1))), _if_then_else(and_(False, or_(False, False)), ones_diff_rows, _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(zeros_diff_rows, zeros_diff_rows), and_(True, False)), True), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(True, compare_blocks_cols, max_col_clue)), or_(or_(False, True), and_(False, True)))))
and_(ge(2, _if_then_else(True, -69, compare_blocks_cols)), False)
or_(or_(False, False), False)
and_(le(_if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(True, 0, 3)), True)
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
or_(ge(max_row_clue, 0), le(zeros_diff_rows, 64))
or_(ge(_if_then_else(or_(False, True), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(and_(True, False), max_col_clue, max_row_clue)), _if_then_else(False, max_row_clue, 0)), and_(True, True))
le(_if_then_else(False, -82, ones_diff_rows), _if_then_else(True, -69, 4))
ge(ones_diff_cols, _if_then_else(False, 2, zeros_diff_rows))
le(_if_then_else(True, _if_then_else(True, max_row_clue, -3), _if_then_else(True, 0, 83)), _if_then_else(False, 2, 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(_if_then_else(ge(ones_diff_rows, max_row_clue), compare_blocks_rows, max_row_clue), _if_then_else(True, ones_diff_rows, 0))
and_(ge(_if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, 3, 2)), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, compare_blocks_cols, 1))), _if_then_else(and_(False, or_(False, False)), _if_then_else(or_(True, True), _if_then_else(True, 4, 51), _if_then_else(True, 0, -78)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(True, max_col_clue, max_col_clue)), or_(or_(False, True), True))))
and_(ge(_if_then_else(or_(and_(True, False), False), 4, zeros_diff_cols), compare_blocks_cols), and_(True, True))
or_(or_(False, True), or_(True, False))
and_(or_(True, False), False)
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
ge(_if_then_else(or_(False, le(_if_then_else(False, max_col_clue, 1), _if_then_else(False, 0, max_col_clue))), _if_then_else(or_(le(0, compare_blocks_rows), or_(False, True)), _if_then_else(ge(ones_diff_rows, max_col_clue), _if_then_else(False, 95, compare_blocks_cols), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(True, _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, 0, zeros_diff_cols))), _if_then_else(or_(or_(True, False), False), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(True, 1, 2), _if_then_else(True, zeros_diff_rows, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 0), _if_then_else(True, 1, 2)), le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 19))), _if_then_else(or_(le(ones_diff_rows, zeros_diff_cols), and_(True, True)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 0, 1)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, 4, max_row_clue))), _if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, zeros_diff_rows)), _if_then_else(le(1, 3), _if_then_else(False, 3, 3), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(ge(zeros_diff_cols, 2), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(True, 1, compare_blocks_rows)))))
le(_if_then_else(or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), True), zeros_diff_cols, 4), compare_blocks_rows)
or_(ge(1, 0), or_(True, True))
and_(ge(_if_then_else(or_(and_(True, False), ge(compare_blocks_cols, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 2, 2), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), _if_then_else(or_(or_(True, False), and_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, max_row_clue, 1), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(max_col_clue, 4), _if_then_else(True, ones_diff_cols, 4), _if_then_else(False, 95, ones_diff_rows)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, -99, 3)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(-96, 3), _if_then_else(True, 2, ones_diff_cols), _if_then_else(False, 0, -87))), _if_then_else(ge(_if_then_else(False, -1, 3), _if_then_else(True, 1, max_row_clue)), _if_then_else(ge(compare_blocks_rows, max_row_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, max_col_clue, 99)))))
or_(or_(le(_if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), or_(ge(2, 1), le(4, compare_blocks_rows))), ge(max_row_clue, 2))
VAL TREES:
add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows))
add(add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(mul(mul(add(add(mul(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)), add(mul(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_cols))), mul(add(mul(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)), add(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))), add(add(add(mul(ones_diff_cols, compare_blocks_rows), mul(compare_blocks_cols, -59)), add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_cols, compare_blocks_rows))), mul(mul(add(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows))))), compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))))
mul(mul(ones_diff_cols, zeros_diff_cols), add(add(-19, mul(mul(-48, ones_diff_cols), compare_blocks_cols)), add(add(compare_blocks_cols, zeros_diff_rows), zeros_diff_cols)))
add(add(ones_diff_rows, 58), mul(ones_diff_cols, -22))
add(add(mul(ones_diff_rows, mul(compare_blocks_cols, zeros_diff_cols)), add(-40, zeros_diff_rows)), add(add(compare_blocks_rows, compare_blocks_rows), mul(19, compare_blocks_cols)))
COND TREES:
ge(2, _if_then_else(True, 1, _if_then_else(True, 4, zeros_diff_rows)))
or_(True, and_(False, False))
le(compare_blocks_cols, _if_then_else(True, -69, compare_blocks_cols))
ge(_if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, _if_then_else(or_(True, and_(False, False)), 0, max_row_clue), zeros_diff_rows))
le(1, 4)
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(2, _if_then_else(False, 1, _if_then_else(False, 4, zeros_diff_rows)))
or_(or_(False, and_(False, ge(ones_diff_rows, _if_then_else(False, compare_blocks_cols, max_col_clue)))), False)
le(_if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(True, -69, compare_blocks_rows))
ge(_if_then_else(and_(False, False), zeros_diff_rows, 0), _if_then_else(True, 2, zeros_diff_rows))
le(1, _if_then_else(False, 2, 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
add(add(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)), add(mul(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows)))
mul(mul(mul(zeros_diff_cols, mul(94, compare_blocks_rows)), mul(ones_diff_rows, zeros_diff_cols)), add(zeros_diff_rows, ones_diff_cols))
mul(add(mul(add(compare_blocks_cols, ones_diff_cols), add(38, ones_diff_rows)), compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(_if_then_else(or_(or_(and_(False, True), and_(False, True)), le(_if_then_else(False, max_col_clue, 1), _if_then_else(False, 0, max_col_clue))), _if_then_else(or_(le(0, compare_blocks_rows), or_(True, True)), _if_then_else(ge(ones_diff_rows, max_col_clue), _if_then_else(False, 95, compare_blocks_cols), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(or_(ge(ones_diff_rows, max_col_clue), False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, 0, zeros_diff_cols))), _if_then_else(or_(or_(True, False), ge(zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(True, 1, 2), _if_then_else(True, zeros_diff_rows, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 1), _if_then_else(True, 1, _if_then_else(True, 3, 3))), le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 19))), _if_then_else(False, _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 0, 1)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, 4, max_row_clue))), _if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(1, 3), _if_then_else(False, 3, 3), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(ge(zeros_diff_cols, 2), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(True, 1, compare_blocks_rows)))))
le(_if_then_else(True, 1, -78), _if_then_else(True, ones_diff_rows, zeros_diff_cols))
or_(and_(False, False), ge(compare_blocks_cols, _if_then_else(False, _if_then_else(False, compare_blocks_rows, zeros_diff_rows), 4)))
and_(ge(_if_then_else(or_(and_(True, False), ge(compare_blocks_cols, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 2, 2), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), _if_then_else(or_(or_(True, False), and_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, max_row_clue, 1), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(max_col_clue, 4), _if_then_else(True, ones_diff_cols, 0), _if_then_else(False, 95, ones_diff_rows)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, 3), _if_then_else(ge(compare_blocks_rows, 0), _if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(False, max_col_clue, max_col_clue))), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(-96, 3), _if_then_else(True, 2, ones_diff_cols), _if_then_else(False, 0, -87))), _if_then_else(ge(_if_then_else(False, -1, 3), _if_then_else(or_(True, True), 1, max_row_clue)), _if_then_else(False, _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(False, _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, max_col_clue, 99)))))
or_(True, False)
VAL TREES:
add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows))
add(add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(-82, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))))
mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_cols, ones_diff_rows))
add(add(ones_diff_rows, 58), mul(ones_diff_cols, -22))
add(add(compare_blocks_rows, ones_diff_cols), add(add(compare_blocks_rows, compare_blocks_rows), mul(19, compare_blocks_cols)))
COND TREES:
or_(le(max_row_clue, max_col_clue), and_(True, ge(ones_diff_rows, max_col_clue)))
and_(le(_if_then_else(ge(ones_diff_rows, _if_then_else(False, compare_blocks_cols, max_col_clue)), ones_diff_rows, zeros_diff_cols), _if_then_else(False, _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(ge(ones_diff_cols, ones_diff_rows), compare_blocks_rows, zeros_diff_cols))), or_(True, False))
and_(True, False)
le(_if_then_else(ge(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(True, 4, 4), _if_then_else(False, 3, compare_blocks_rows)), _if_then_else(le(ones_diff_rows, max_col_clue), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, 4, ones_diff_cols))), _if_then_else(le(_if_then_else(False, ones_diff_cols, 3), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(3, 0), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 4, 4)), _if_then_else(ge(3, zeros_diff_rows), _if_then_else(True, 4, ones_diff_cols), _if_then_else(True, zeros_diff_cols, -79))), _if_then_else(or_(and_(True, False), and_(False, False)), _if_then_else(and_(True, False), _if_then_else(False, 1, 0), _if_then_else(False, ones_diff_rows, 25)), _if_then_else(False, _if_then_else(True, max_col_clue, max_row_clue), _if_then_else(False, max_col_clue, 4)))), _if_then_else(or_(ge(_if_then_else(False, ones_diff_cols, max_col_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), and_(ge(compare_blocks_cols, 50), and_(True, False))), _if_then_else(and_(ge(max_row_clue, zeros_diff_rows), and_(False, True)), _if_then_else(le(ones_diff_rows, ones_diff_cols), _if_then_else(False, 3, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), _if_then_else(ge(3, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, max_col_clue), _if_then_else(True, zeros_diff_cols, 1))), _if_then_else(ge(_if_then_else(False, 0, compare_blocks_rows), _if_then_else(False, 1, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, -48, max_col_clue), _if_then_else(False, 3, 3)), _if_then_else(and_(True, True), _if_then_else(True, 4, 2), _if_then_else(True, 59, max_row_clue)))))
and_(le(2, zeros_diff_cols), False)
VAL TREES:
mul(mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), mul(add(ones_diff_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(compare_blocks_rows, zeros_diff_cols), mul(-22, zeros_diff_cols))
add(mul(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)), mul(mul(ones_diff_rows, -97), add(zeros_diff_rows, ones_diff_rows)))
add(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_rows))
mul(mul(add(ones_diff_rows, ones_diff_cols), 66), mul(zeros_diff_rows, -5))
mul(add(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)))
COND TREES:
ge(_if_then_else(le(_if_then_else(and_(and_(True, and_(and_(or_(False, False), le(max_col_clue, compare_blocks_rows)), and_(and_(True, False), ge(4, 3)))), True), _if_then_else(True, _if_then_else(True, 0, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, max_col_clue)), _if_then_else(le(_if_then_else(False, max_col_clue, ones_diff_rows), max_col_clue), ones_diff_rows, compare_blocks_rows)), zeros_diff_rows), max_col_clue, _if_then_else(False, 2, compare_blocks_cols)), _if_then_else(True, ones_diff_rows, -18))
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(or_(ge(zeros_diff_cols, 1), le(zeros_diff_rows, compare_blocks_rows)), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_row_clue)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(ge(max_row_clue, 0), 1, ones_diff_cols), _if_then_else(True, _if_then_else(False, _if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, max_row_clue, zeros_diff_cols)), 1))), _if_then_else(and_(and_(True, True), or_(False, False)), _if_then_else(or_(True, True), _if_then_else(True, 4, 51), _if_then_else(True, 0, -78)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, _if_then_else(ge(_if_then_else(ge(compare_blocks_rows, max_col_clue), _if_then_else(False, max_col_clue, max_row_clue), _if_then_else(True, 2, 2)), _if_then_else(ge(2, 1), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(le(_if_then_else(False, 4, 4), _if_then_else(True, 2, 4)), _if_then_else(le(4, max_row_clue), _if_then_else(False, ones_diff_rows, max_row_clue), _if_then_else(False, 4, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_rows, 3), _if_then_else(True, compare_blocks_rows, 2))), _if_then_else(le(_if_then_else(False, ones_diff_rows, max_row_clue), _if_then_else(True, 0, max_col_clue)), _if_then_else(le(1, 1), _if_then_else(False, ones_diff_rows, 49), _if_then_else(False, max_col_clue, 3)), _if_then_else(ge(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, max_col_clue), _if_then_else(False, 4, 0)))))))), or_(and_(or_(le(1, zeros_diff_rows), and_(or_(and_(False, False), ge(-27, max_col_clue)), False)), or_(and_(False, False), or_(True, False))), True))
and_(ge(_if_then_else(and_(or_(or_(or_(and_(False, False), ge(max_col_clue, 1)), and_(ge(99, compare_blocks_rows), le(max_col_clue, zeros_diff_cols))), le(_if_then_else(le(max_row_clue, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 75), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(2, 0), _if_then_else(False, 3, 63), _if_then_else(True, 0, 2)))), le(_if_then_else(or_(or_(False, False), le(max_row_clue, 39)), _if_then_else(ge(ones_diff_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, 4), _if_then_else(False, 4, compare_blocks_cols)), _if_then_else(le(1, 3), _if_then_else(True, max_col_clue, ones_diff_cols), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(or_(ge(compare_blocks_rows, zeros_diff_rows), or_(False, False)), _if_then_else(and_(False, True), _if_then_else(False, 3, compare_blocks_cols), _if_then_else(False, 2, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_rows, zeros_diff_cols), _if_then_else(False, max_row_clue, compare_blocks_cols))))), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, _if_then_else(ge(_if_then_else(ge(-17, 4), ones_diff_rows, 4), max_col_clue), _if_then_else(False, zeros_diff_cols, _if_then_else(True, 3, compare_blocks_cols)), compare_blocks_rows), 4)), compare_blocks_cols), and_(True, False))
or_(or_(False, True), and_(le(zeros_diff_rows, _if_then_else(and_(or_(ge(1, zeros_diff_rows), ge(3, 0)), ge(_if_then_else(True, 4, 0), _if_then_else(True, 4, 4))), _if_then_else(ge(_if_then_else(False, 1, 2), _if_then_else(False, 87, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(False, max_row_clue, max_row_clue), _if_then_else(True, ones_diff_rows, ones_diff_cols)), _if_then_else(ge(0, 1), _if_then_else(False, 3, ones_diff_cols), _if_then_else(True, 0, max_row_clue))), _if_then_else(and_(and_(True, False), ge(3, max_col_clue)), _if_then_else(ge(80, ones_diff_rows), _if_then_else(True, ones_diff_cols, 94), _if_then_else(False, ones_diff_rows, 2)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, zeros_diff_rows, compare_blocks_rows))))), ge(ones_diff_cols, _if_then_else(le(4, ones_diff_cols), 4, max_col_clue))))
and_(or_(False, False), le(2, _if_then_else(False, 2, _if_then_else(True, _if_then_else(and_(True, True), 4, _if_then_else(False, max_col_clue, compare_blocks_rows)), 95))))
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
ge(2, _if_then_else(ge(_if_then_else(and_(False, True), 4, 3), _if_then_else(True, ones_diff_cols, zeros_diff_rows)), 1, _if_then_else(False, 4, zeros_diff_rows)))
or_(or_(False, and_(and_(ge(2, 1), and_(True, False)), True)), and_(False, True))
le(_if_then_else(False, _if_then_else(le(_if_then_else(and_(False, False), _if_then_else(False, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 2, compare_blocks_cols)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, max_row_clue, max_col_clue))), _if_then_else(le(_if_then_else(False, compare_blocks_rows, 64), _if_then_else(False, 4, 0)), _if_then_else(or_(True, True), _if_then_else(True, 2, ones_diff_rows), _if_then_else(True, zeros_diff_rows, max_row_clue)), _if_then_else(and_(True, False), _if_then_else(True, 1, 1), _if_then_else(False, ones_diff_rows, ones_diff_rows))), _if_then_else(and_(le(zeros_diff_rows, ones_diff_cols), le(zeros_diff_cols, max_col_clue)), _if_then_else(or_(True, True), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(False, ones_diff_rows, zeros_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, ones_diff_cols, 3)))), ones_diff_rows), _if_then_else(True, -69, compare_blocks_cols))
ge(_if_then_else(True, _if_then_else(False, _if_then_else(True, max_row_clue, zeros_diff_cols), compare_blocks_rows), 0), _if_then_else(le(3, 4), _if_then_else(False, ones_diff_rows, 4), _if_then_else(False, 4, compare_blocks_rows)))
le(_if_then_else(le(_if_then_else(le(2, 1), _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(False, 3, 2)), _if_then_else(ge(4, zeros_diff_cols), _if_then_else(False, ones_diff_rows, max_col_clue), _if_then_else(False, 0, max_col_clue))), _if_then_else(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, ones_diff_cols, 38)), _if_then_else(le(ones_diff_cols, 3), _if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, compare_blocks_cols, 3)), _if_then_else(ge(max_row_clue, 3), _if_then_else(True, compare_blocks_rows, 1), _if_then_else(True, 0, zeros_diff_rows))), _if_then_else(ge(_if_then_else(False, 2, ones_diff_cols), _if_then_else(True, 98, 2)), _if_then_else(ge(1, ones_diff_cols), _if_then_else(True, max_col_clue, compare_blocks_cols), _if_then_else(True, compare_blocks_cols, 2)), _if_then_else(le(max_row_clue, 4), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(True, max_row_clue, -71)))), _if_then_else(False, 2, 4))
VAL TREES:
mul(mul(zeros_diff_rows, -67), mul(-27, add(zeros_diff_rows, ones_diff_cols)))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(add(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
add(add(mul(compare_blocks_cols, compare_blocks_cols), add(mul(mul(72, -47), compare_blocks_rows), mul(mul(zeros_diff_rows, add(compare_blocks_cols, zeros_diff_rows)), add(zeros_diff_cols, compare_blocks_rows)))), add(mul(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows)))
mul(mul(mul(zeros_diff_cols, mul(94, compare_blocks_rows)), mul(ones_diff_rows, zeros_diff_cols)), add(zeros_diff_rows, ones_diff_cols))
mul(add(mul(add(mul(add(compare_blocks_cols, ones_diff_rows), mul(97, compare_blocks_cols)), ones_diff_cols), add(38, ones_diff_rows)), compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(2, _if_then_else(ge(_if_then_else(True, max_col_clue, _if_then_else(False, 2, compare_blocks_cols)), max_col_clue), 1, _if_then_else(False, 4, zeros_diff_rows)))
or_(True, and_(False, True))
le(_if_then_else(False, -82, ones_diff_rows), _if_then_else(True, _if_then_else(True, 1, 0), compare_blocks_cols))
ge(_if_then_else(ge(4, 62), zeros_diff_rows, 0), compare_blocks_cols)
le(1, _if_then_else(or_(False, True), _if_then_else(False, 2, 2), 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(_if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), 3, 3), _if_then_else(le(max_row_clue, 4), 4, _if_then_else(True, ones_diff_rows, 0)))
or_(and_(True, True), or_(False, True))
ge(_if_then_else(False, ones_diff_rows, 1), _if_then_else(and_(True, False), 1, 4))
or_(and_(and_(le(_if_then_else(True, 3, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, max_col_clue)), ge(_if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(False, 4, zeros_diff_rows))), or_(and_(and_(True, False), ge(4, 62)), ge(_if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 12, 27)))), le(_if_then_else(or_(or_(False, False), and_(False, True)), _if_then_else(or_(False, True), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 0, 3)), _if_then_else(ge(compare_blocks_rows, 1), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, compare_blocks_rows, 1))), _if_then_else(and_(le(max_row_clue, max_col_clue), True), _if_then_else(True, _if_then_else(False, max_col_clue, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), _if_then_else(ge(ones_diff_cols, 1), _if_then_else(True, 4, 0), _if_then_else(False, 1, 2)))))
ge(_if_then_else(and_(False, True), zeros_diff_cols, max_row_clue), ones_diff_rows)
VAL TREES:
add(mul(5, zeros_diff_cols), add(ones_diff_cols, zeros_diff_cols))
mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, add(zeros_diff_rows, zeros_diff_cols)))
mul(mul(mul(add(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), add(add(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), mul(add(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), mul(add(-65, 87), add(compare_blocks_rows, 47))))
add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, 65))
mul(mul(zeros_diff_rows, add(compare_blocks_cols, mul(ones_diff_cols, zeros_diff_rows))), mul(-18, compare_blocks_cols))
add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols))
COND TREES:
le(_if_then_else(False, 1, 3), 0)
ge(_if_then_else(ge(compare_blocks_cols, zeros_diff_cols), 1, -11), _if_then_else(ge(compare_blocks_cols, zeros_diff_cols), _if_then_else(True, 1, 1), _if_then_else(True, max_row_clue, 4)))
le(_if_then_else(True, _if_then_else(True, 4, ones_diff_rows), compare_blocks_rows), _if_then_else(False, _if_then_else(False, compare_blocks_cols, zeros_diff_rows), 4))
and_(True, le(-84, 0))
or_(ge(_if_then_else(True, 4, _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(False, 3, _if_then_else(False, -10, max_col_clue))), and_(and_(True, True), or_(False, False)))
VAL TREES:
mul(mul(mul(add(ones_diff_rows, zeros_diff_rows), mul(-40, 22)), ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols))
add(add(ones_diff_cols, zeros_diff_cols), add(91, zeros_diff_rows))
add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, mul(zeros_diff_cols, mul(add(mul(compare_blocks_cols, mul(zeros_diff_cols, compare_blocks_cols)), add(ones_diff_cols, -77)), add(zeros_diff_rows, zeros_diff_rows)))))
mul(add(zeros_diff_cols, add(add(mul(-61, compare_blocks_rows), zeros_diff_rows), mul(add(zeros_diff_cols, 41), ones_diff_cols))), mul(zeros_diff_cols, -72))
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(mul(53, ones_diff_cols), mul(compare_blocks_cols, add(ones_diff_rows, ones_diff_rows)))))
add(add(mul(add(add(mul(mul(mul(add(ones_diff_rows, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_cols)), add(add(66, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), mul(mul(add(-88, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)))), mul(add(mul(mul(compare_blocks_cols, -3), mul(zeros_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, -48), mul(compare_blocks_cols, 14))), mul(add(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, ones_diff_cols)), add(mul(zeros_diff_cols, zeros_diff_rows), mul(21, compare_blocks_cols))))), ones_diff_rows), mul(-70, ones_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_cols, 4))), add(add(add(compare_blocks_rows, ones_diff_rows), add(-86, compare_blocks_rows)), mul(mul(-86, compare_blocks_cols), add(ones_diff_cols, zeros_diff_cols))))
COND TREES:
ge(_if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(or_(True, False), ones_diff_rows, zeros_diff_rows))
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), 4), zeros_diff_rows, _if_then_else(le(3, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, compare_blocks_cols, 1))), _if_then_else(and_(False, or_(False, False)), _if_then_else(or_(True, True), _if_then_else(True, 4, 51), _if_then_else(True, 0, -78)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(False, compare_blocks_cols, max_col_clue)), or_(or_(False, True), True))))
and_(ge(2, _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(True, 1, 4))), True)
or_(or_(False, and_(le(_if_then_else(ge(3, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, max_col_clue), _if_then_else(False, zeros_diff_cols, 1)), max_col_clue), True)), or_(False, False))
and_(True, True)
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(add(mul(mul(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, 24), mul(compare_blocks_rows, ones_diff_cols))), zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, add(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows))))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(add(mul(mul(ones_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols)), add(mul(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), ones_diff_rows))
COND TREES:
ge(2, _if_then_else(ge(_if_then_else(or_(ge(max_row_clue, compare_blocks_rows), True), _if_then_else(or_(True, True), _if_then_else(True, 0, zeros_diff_rows), _if_then_else(True, ones_diff_rows, zeros_diff_rows)), _if_then_else(or_(True, ge(_if_then_else(False, 0, ones_diff_rows), _if_then_else(True, compare_blocks_rows, _if_then_else(True, 2, zeros_diff_cols)))), _if_then_else(False, max_row_clue, compare_blocks_rows), _if_then_else(False, -42, 4))), _if_then_else(or_(le(compare_blocks_rows, 4), le(compare_blocks_cols, max_col_clue)), _if_then_else(ge(2, compare_blocks_cols), _if_then_else(False, 2, max_col_clue), _if_then_else(True, zeros_diff_rows, 0)), _if_then_else(False, _if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 4, ones_diff_rows)))), 1, _if_then_else(False, 4, zeros_diff_rows)))
or_(ge(_if_then_else(or_(ge(zeros_diff_cols, ones_diff_rows), le(4, 2)), _if_then_else(or_(False, False), _if_then_else(True, max_col_clue, 4), _if_then_else(True, max_row_clue, zeros_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(True, 0, max_row_clue))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_rows, _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)))), _if_then_else(or_(True, True), _if_then_else(False, 49, 3), _if_then_else(True, zeros_diff_cols, compare_blocks_cols)), _if_then_else(le(max_col_clue, 3), _if_then_else(False, 2, zeros_diff_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_cols)))), or_(and_(or_(or_(False, False), ge(2, 1)), and_(le(ones_diff_rows, 0), ge(0, 2))), and_(le(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, 1, 1)), or_(True, or_(False, False)))))
le(_if_then_else(False, -82, ones_diff_rows), _if_then_else(True, _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, zeros_diff_cols, ones_diff_cols)), 2, _if_then_else(ge(ones_diff_rows, 3), _if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(True, 2, zeros_diff_cols))), compare_blocks_cols))
ge(_if_then_else(True, zeros_diff_rows, 0), _if_then_else(True, _if_then_else(False, 0, max_row_clue), zeros_diff_rows))
le(1, _if_then_else(le(2, compare_blocks_rows), zeros_diff_rows, _if_then_else(and_(and_(True, True), or_(True, False)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(True, max_col_clue, 0)), _if_then_else(or_(False, True), _if_then_else(False, max_row_clue, max_row_clue), _if_then_else(False, ones_diff_cols, 1)))))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
or_(True, ge(zeros_diff_rows, _if_then_else(or_(le(compare_blocks_rows, 4), ge(_if_then_else(True, max_row_clue, _if_then_else(False, zeros_diff_cols, 3)), _if_then_else(True, 4, compare_blocks_rows))), _if_then_else(ge(2, -18), _if_then_else(False, 2, max_col_clue), _if_then_else(True, zeros_diff_rows, 0)), _if_then_else(or_(True, True), _if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 4, ones_diff_rows)))))
or_(and_(True, ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, _if_then_else(and_(le(compare_blocks_rows, max_row_clue), False), _if_then_else(and_(True, False), ones_diff_rows, _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 0, max_col_clue), _if_then_else(False, 1, compare_blocks_cols))), _if_then_else(True, _if_then_else(and_(False, True), 3, ones_diff_rows), zeros_diff_cols))))), or_(True, True))
ge(_if_then_else(False, _if_then_else(False, ones_diff_rows, 1), zeros_diff_cols), _if_then_else(False, 1, _if_then_else(or_(ge(_if_then_else(ge(max_col_clue, compare_blocks_cols), _if_then_else(False, 86, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 2)), _if_then_else(le(0, zeros_diff_rows), _if_then_else(True, 29, ones_diff_rows), _if_then_else(True, 2, ones_diff_cols))), ge(_if_then_else(and_(False, True), _if_then_else(True, max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, max_col_clue)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(True, zeros_diff_cols, 2)))), 2, 4)))
ge(_if_then_else(le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, 1, zeros_diff_cols)), _if_then_else(ge(compare_blocks_rows, 0), _if_then_else(ge(compare_blocks_rows, 0), ones_diff_rows, max_row_clue), _if_then_else(False, max_col_clue, max_col_clue)), _if_then_else(le(1, zeros_diff_cols), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, max_row_clue, 0))), _if_then_else(and_(ge(1, 0), or_(True, True)), _if_then_else(ge(0, max_col_clue), _if_then_else(True, 0, 0), _if_then_else(True, 1, ones_diff_cols)), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 2), _if_then_else(False, compare_blocks_rows, zeros_diff_cols))))
ge(_if_then_else(False, 2, ones_diff_rows), _if_then_else(ge(0, 1), _if_then_else(False, _if_then_else(True, _if_then_else(False, ones_diff_cols, ones_diff_cols), ones_diff_rows), 1), _if_then_else(True, 2, max_row_clue)))
VAL TREES:
mul(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_rows))
mul(add(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols))
mul(mul(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_rows)))), add(mul(zeros_diff_rows, zeros_diff_cols), add(51, ones_diff_rows)))
add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, -46)), mul(mul(ones_diff_cols, 48), add(mul(add(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, 34)), add(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_cols))), add(mul(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_rows)), mul(add(ones_diff_rows, ones_diff_cols), add(-55, ones_diff_cols))))))
add(add(add(mul(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_cols, add(mul(mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, compare_blocks_rows)), mul(mul(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, 15))), add(mul(mul(ones_diff_cols, zeros_diff_cols), mul(ones_diff_cols, 2)), add(mul(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, 83)))))), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_cols))), mul(mul(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows)), mul(mul(83, -28), mul(-88, zeros_diff_cols)))), add(mul(mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, -3)), mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, ones_diff_rows))), add(add(mul(ones_diff_cols, ones_diff_rows), mul(-67, ones_diff_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_cols)))))
mul(mul(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, ones_diff_rows))
COND TREES:
ge(3, _if_then_else(le(1, _if_then_else(True, 0, zeros_diff_rows)), 4, _if_then_else(True, ones_diff_rows, 0)))
or_(and_(True, True), or_(True, False))
ge(compare_blocks_cols, _if_then_else(True, 1, 1))
or_(and_(and_(le(_if_then_else(False, 3, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, max_col_clue)), ge(_if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(False, 4, zeros_diff_rows))), or_(and_(and_(True, False), ge(4, 62)), ge(_if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 12, 27)))), le(_if_then_else(or_(or_(False, False), and_(False, True)), _if_then_else(or_(False, True), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 0, 3)), _if_then_else(ge(compare_blocks_rows, 3), _if_then_else(True, 2, ones_diff_cols), _if_then_else(ge(_if_then_else(True, ones_diff_cols, ones_diff_cols), _if_then_else(False, 12, 27)), compare_blocks_rows, 1))), _if_then_else(and_(le(max_row_clue, max_col_clue), le(-84, 0)), _if_then_else(True, _if_then_else(False, max_col_clue, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), _if_then_else(ge(ones_diff_cols, 1), _if_then_else(True, 4, 0), _if_then_else(False, 1, 2)))))
ge(_if_then_else(True, -10, max_row_clue), -10)
VAL TREES:
add(mul(5, add(mul(zeros_diff_cols, ones_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(ones_diff_cols, zeros_diff_cols))
mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, add(zeros_diff_rows, add(add(mul(add(mul(compare_blocks_cols, 7), add(ones_diff_cols, ones_diff_cols)), mul(mul(ones_diff_cols, -96), add(zeros_diff_cols, compare_blocks_rows))), mul(mul(add(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), add(mul(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, zeros_diff_cols)))), mul(mul(mul(add(ones_diff_rows, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_cols)), add(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, 17))), mul(mul(mul(-32, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols))))))))
mul(mul(mul(add(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), add(add(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), mul(add(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), mul(add(-65, 87), add(compare_blocks_rows, add(mul(add(mul(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_rows)), add(mul(zeros_diff_cols, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows))), add(mul(add(44, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), add(add(73, zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_rows)))), add(mul(add(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_cols, zeros_diff_rows)), mul(mul(ones_diff_rows, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_cols))), mul(add(mul(ones_diff_rows, zeros_diff_cols), mul(-2, compare_blocks_cols)), mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)))))))))
add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, add(add(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))))
mul(mul(zeros_diff_rows, mul(mul(zeros_diff_rows, mul(ones_diff_rows, -11)), mul(mul(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_rows, ones_diff_rows)))), mul(-18, compare_blocks_cols))
mul(add(add(add(ones_diff_rows, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_cols)), add(mul(-22, compare_blocks_rows), mul(ones_diff_rows, ones_diff_rows))), mul(add(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, 65)), add(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols))))
COND TREES:
ge(2, _if_then_else(True, 1, _if_then_else(False, 4, zeros_diff_rows)))
or_(or_(True, False), and_(False, True))
le(_if_then_else(True, -82, ones_diff_rows), _if_then_else(False, -69, compare_blocks_cols))
ge(_if_then_else(True, zeros_diff_rows, 0), _if_then_else(True, _if_then_else(False, 1, ones_diff_rows), zeros_diff_rows))
le(_if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(le(3, compare_blocks_rows), 2, 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), mul(mul(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_rows, zeros_diff_cols)), add(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_rows, ones_diff_cols), mul(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_cols)))))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(mul(mul(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, mul(ones_diff_rows, ones_diff_cols))), zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_cols)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
add(mul(add(zeros_diff_rows, compare_blocks_cols), mul(zeros_diff_cols, ones_diff_rows)), add(mul(ones_diff_cols, ones_diff_rows), add(-83, 42)))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(2, _if_then_else(ge(_if_then_else(True, max_col_clue, _if_then_else(False, 2, compare_blocks_cols)), max_col_clue), 1, _if_then_else(False, 4, zeros_diff_rows)))
or_(True, and_(False, True))
le(_if_then_else(False, -82, ones_diff_rows), _if_then_else(True, _if_then_else(True, 1, 0), compare_blocks_cols))
ge(_if_then_else(ge(4, 62), zeros_diff_rows, 0), compare_blocks_cols)
le(1, _if_then_else(or_(False, True), _if_then_else(False, 2, 2), 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(_if_then_else(True, _if_then_else(and_(True, False), _if_then_else(True, 2, _if_then_else(True, zeros_diff_rows, 4)), _if_then_else(True, zeros_diff_cols, _if_then_else(True, 0, zeros_diff_rows))), compare_blocks_cols), _if_then_else(True, ones_diff_rows, -18))
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 1))), _if_then_else(and_(and_(True, True), or_(False, False)), _if_then_else(or_(True, True), _if_then_else(True, 4, 51), _if_then_else(True, 0, -78)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(True, max_col_clue, max_col_clue)), or_(or_(False, True), and_(False, True)))))
and_(ge(3, compare_blocks_cols), False)
or_(or_(and_(True, False), and_(le(max_row_clue, 59), le(ones_diff_rows, ones_diff_cols))), False)
and_(or_(and_(and_(True, False), and_(False, False)), False), le(max_col_clue, max_row_clue))
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
ge(2, _if_then_else(True, _if_then_else(ge(_if_then_else(True, max_row_clue, zeros_diff_cols), 0), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(and_(True, True), 1, 2)), zeros_diff_rows))
or_(ge(zeros_diff_cols, compare_blocks_cols), or_(and_(or_(True, True), or_(True, False)), le(_if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, ones_diff_rows, 3))))
le(_if_then_else(True, -82, ones_diff_rows), _if_then_else(True, -69, compare_blocks_cols))
ge(_if_then_else(False, zeros_diff_rows, 0), _if_then_else(True, _if_then_else(True, 0, max_row_clue), zeros_diff_rows))
le(1, 3)
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
or_(ge(ones_diff_rows, max_col_clue), ge(4, 4))
and_(or_(False, True), le(_if_then_else(ge(ones_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(False, max_row_clue, 1)), 4))
or_(True, True)
or_(or_(and_(False, False), ge(ones_diff_cols, 0)), ge(3, max_col_clue))
le(_if_then_else(and_(ge(_if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 32, max_row_clue)), or_(or_(False, False), le(zeros_diff_rows, ones_diff_cols))), _if_then_else(le(_if_then_else(True, ones_diff_cols, 1), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 4, 4)), _if_then_else(and_(False, True), _if_then_else(False, 2, 0), _if_then_else(True, compare_blocks_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(False, 0, zeros_diff_cols), _if_then_else(False, 1, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, 1), _if_then_else(False, 3, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, compare_blocks_cols), _if_then_else(False, max_row_clue, ones_diff_rows)))), _if_then_else(or_(or_(and_(True, False), le(zeros_diff_cols, 0)), le(4, _if_then_else(True, 0, 3))), _if_then_else(le(_if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(and_(True, False), _if_then_else(True, 4, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(or_(or_(False, False), ge(4, zeros_diff_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 12), _if_then_else(False, 0, 2)), _if_then_else(le(3, zeros_diff_cols), _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, max_row_clue)))))
VAL TREES:
add(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, -27))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(93, add(compare_blocks_cols, compare_blocks_rows)))
mul(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(compare_blocks_cols, compare_blocks_cols), mul(86, 20))
add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, -88))
add(add(ones_diff_cols, compare_blocks_cols), add(-26, compare_blocks_cols))
COND TREES:
ge(_if_then_else(or_(or_(and_(False, True), and_(False, True)), le(_if_then_else(False, max_col_clue, 1), _if_then_else(False, 0, max_col_clue))), _if_then_else(or_(le(0, compare_blocks_rows), or_(False, True)), _if_then_else(ge(ones_diff_rows, max_col_clue), _if_then_else(False, 95, compare_blocks_cols), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, 0, zeros_diff_cols))), _if_then_else(or_(or_(True, False), ge(zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(True, 1, 2), _if_then_else(True, zeros_diff_rows, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 0), _if_then_else(True, 1, 2)), le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, 2, 19))), _if_then_else(or_(le(ones_diff_rows, zeros_diff_cols), and_(True, True)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, 0, 1)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, 4, max_row_clue))), _if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(True, _if_then_else(False, 3, 3), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(ge(zeros_diff_cols, 2), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(True, 1, compare_blocks_rows)))))
le(_if_then_else(True, zeros_diff_cols, 4), _if_then_else(False, ones_diff_rows, zeros_diff_cols))
or_(and_(or_(False, False), False), ge(compare_blocks_rows, _if_then_else(le(3, compare_blocks_cols), compare_blocks_rows, ones_diff_rows)))
and_(ge(_if_then_else(or_(and_(True, False), ge(compare_blocks_cols, compare_blocks_rows)), _if_then_else(and_(ge(_if_then_else(ge(_if_then_else(and_(False, False), _if_then_else(True, 0, -99), _if_then_else(True, 36, max_row_clue)), _if_then_else(le(zeros_diff_cols, 4), _if_then_else(True, ones_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, compare_blocks_rows))), _if_then_else(le(_if_then_else(True, 0, compare_blocks_rows), _if_then_else(False, 3, zeros_diff_rows)), _if_then_else(le(ones_diff_rows, max_col_clue), _if_then_else(False, 3, 2), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, 4, zeros_diff_rows))), _if_then_else(ge(_if_then_else(False, max_row_clue, 63), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(compare_blocks_cols, compare_blocks_cols), _if_then_else(False, 2, compare_blocks_rows), _if_then_else(True, ones_diff_rows, 4)), _if_then_else(le(max_row_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, 0)))), _if_then_else(or_(le(_if_then_else(False, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, 2, max_row_clue)), or_(and_(True, True), le(2, compare_blocks_cols))), _if_then_else(or_(and_(True, True), ge(ones_diff_rows, max_row_clue)), _if_then_else(ge(0, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(True, ones_diff_rows, max_row_clue)), _if_then_else(le(max_row_clue, compare_blocks_cols), _if_then_else(True, max_col_clue, 0), _if_then_else(False, zeros_diff_cols, 0))), _if_then_else(or_(and_(True, True), or_(True, True)), _if_then_else(ge(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, ones_diff_rows), _if_then_else(True, 82, 4)), _if_then_else(le(ones_diff_rows, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, max_row_clue))))), True), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 2, 2), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), _if_then_else(or_(or_(True, False), and_(True, True)), _if_then_else(and_(le(0, 4), True), _if_then_else(True, max_row_clue, 1), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(max_col_clue, 4), _if_then_else(True, ones_diff_cols, 0), _if_then_else(False, 95, ones_diff_rows)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, -99, 3)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(-96, 3), _if_then_else(True, 2, ones_diff_cols), _if_then_else(False, 0, -87))), _if_then_else(ge(_if_then_else(False, -1, 3), max_row_clue), _if_then_else(ge(compare_blocks_rows, max_row_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, max_col_clue, 99)))))
or_(or_(or_(and_(False, True), or_(False, True)), False), True)
VAL TREES:
add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows))
add(add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(-82, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))))
mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_cols, ones_diff_rows))
add(add(ones_diff_rows, 58), mul(ones_diff_cols, -22))
add(add(compare_blocks_rows, ones_diff_cols), add(add(compare_blocks_rows, compare_blocks_rows), mul(19, compare_blocks_cols)))
COND TREES:
ge(_if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), 3, 3), _if_then_else(True, 4, _if_then_else(True, ones_diff_rows, 0)))
or_(and_(le(_if_then_else(True, 2, compare_blocks_rows), _if_then_else(True, max_row_clue, zeros_diff_rows)), True), or_(True, True))
ge(_if_then_else(False, ones_diff_rows, 1), _if_then_else(and_(True, False), 1, compare_blocks_rows))
or_(and_(and_(le(_if_then_else(True, 3, zeros_diff_rows), _if_then_else(True, ones_diff_cols, max_col_clue)), ge(_if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(False, 4, zeros_diff_rows))), or_(and_(and_(True, False), ge(4, 62)), ge(_if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 12, 27)))), le(_if_then_else(or_(or_(False, False), and_(False, True)), _if_then_else(or_(False, True), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 0, 3)), _if_then_else(ge(compare_blocks_rows, 1), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, compare_blocks_rows, 1))), _if_then_else(and_(le(max_row_clue, max_col_clue), le(-84, 0)), _if_then_else(ge(4, ones_diff_rows), _if_then_else(False, 22, 2), _if_then_else(True, compare_blocks_cols, 4)), _if_then_else(ge(ones_diff_cols, 1), _if_then_else(True, 4, 0), _if_then_else(False, 1, 2)))))
ge(_if_then_else(le(zeros_diff_cols, max_col_clue), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, 3)), _if_then_else(or_(False, False), _if_then_else(False, max_col_clue, 3), _if_then_else(True, 0, ones_diff_cols)))
VAL TREES:
add(mul(5, zeros_diff_cols), add(ones_diff_cols, zeros_diff_cols))
mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, add(zeros_diff_rows, zeros_diff_cols)))
mul(mul(mul(add(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), add(add(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), mul(add(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), mul(add(-65, 87), add(compare_blocks_rows, 47))))
add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, 65))
mul(mul(zeros_diff_rows, add(compare_blocks_cols, mul(ones_diff_cols, zeros_diff_rows))), mul(-18, compare_blocks_cols))
add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols))
COND TREES:
ge(_if_then_else(or_(or_(and_(False, False), and_(False, True)), le(_if_then_else(False, max_col_clue, 1), compare_blocks_rows)), _if_then_else(or_(le(0, compare_blocks_rows), or_(False, True)), _if_then_else(ge(ones_diff_rows, max_col_clue), _if_then_else(False, 95, compare_blocks_cols), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(False, _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, 0, zeros_diff_cols))), _if_then_else(or_(or_(True, False), ge(zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(True, 1, 2), _if_then_else(True, zeros_diff_rows, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 1), _if_then_else(True, 1, 2)), le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 19))), _if_then_else(True, _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 0, 1)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, 4, max_row_clue))), _if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(1, 3), _if_then_else(False, 3, 3), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(ge(zeros_diff_cols, 2), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(True, 1, compare_blocks_rows)))))
le(_if_then_else(and_(ge(_if_then_else(ge(_if_then_else(False, ones_diff_cols, 4), _if_then_else(False, compare_blocks_cols, 21)), _if_then_else(and_(True, False), _if_then_else(True, 74, 0), _if_then_else(True, ones_diff_rows, 3)), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, -45), _if_then_else(False, compare_blocks_rows, max_col_clue))), _if_then_else(ge(_if_then_else(False, 3, 1), _if_then_else(False, 2, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(True, 3, 0), _if_then_else(True, 3, 2)), _if_then_else(ge(compare_blocks_rows, 3), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, compare_blocks_rows)))), ge(_if_then_else(le(_if_then_else(True, ones_diff_rows, zeros_diff_rows), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(True, zeros_diff_rows, max_col_clue)), _if_then_else(and_(True, True), _if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(ge(ones_diff_cols, ones_diff_rows), 4, -65))), _if_then_else(le(_if_then_else(False, 1, 0), _if_then_else(False, zeros_diff_cols, max_row_clue)), _if_then_else(ge(3, max_row_clue), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, True), _if_then_else(True, 3, 3), _if_then_else(False, compare_blocks_cols, -78))))), zeros_diff_cols, -78), _if_then_else(ge(ones_diff_rows, _if_then_else(False, compare_blocks_cols, max_col_clue)), ones_diff_rows, zeros_diff_cols))
or_(and_(or_(False, False), False), ge(compare_blocks_rows, _if_then_else(False, 0, -17)))
and_(ge(_if_then_else(or_(False, ge(compare_blocks_cols, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 2, 2), _if_then_else(or_(True, False), ones_diff_rows, zeros_diff_rows))), _if_then_else(or_(or_(True, False), and_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, max_row_clue, 1), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(max_col_clue, 4), _if_then_else(True, ones_diff_cols, 0), _if_then_else(False, 95, ones_diff_rows)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, 3), _if_then_else(ge(compare_blocks_rows, 0), _if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(False, max_col_clue, max_col_clue))), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(-96, 3), _if_then_else(True, 2, zeros_diff_cols), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, -1, 3), _if_then_else(or_(True, True), 1, max_row_clue)), _if_then_else(ge(compare_blocks_rows, max_row_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, max_col_clue, 99)))))
or_(False, ge(_if_then_else(False, max_col_clue, 0), 2))
VAL TREES:
add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, add(add(mul(mul(add(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_cols))), mul(add(mul(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_rows, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)))), mul(mul(add(mul(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_rows)), add(mul(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_cols, zeros_diff_cols))), mul(mul(mul(compare_blocks_rows, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_rows)))))))
add(add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(add(compare_blocks_cols, zeros_diff_cols), add(-41, 37))), add(mul(-82, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))))
mul(mul(add(add(mul(mul(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, compare_blocks_cols), add(6, ones_diff_rows))), mul(mul(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, -26), mul(ones_diff_rows, compare_blocks_rows)))), mul(add(mul(add(compare_blocks_rows, -8), add(zeros_diff_rows, compare_blocks_cols)), mul(add(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows))), mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), add(add(compare_blocks_cols, zeros_diff_rows), add(82, zeros_diff_rows))))), zeros_diff_cols), add(zeros_diff_cols, ones_diff_rows))
add(add(ones_diff_rows, 58), mul(ones_diff_cols, -22))
add(add(compare_blocks_rows, ones_diff_cols), mul(mul(add(compare_blocks_rows, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(add(zeros_diff_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols))))
COND TREES:
or_(ge(ones_diff_rows, max_col_clue), ge(4, 4))
and_(or_(False, True), le(_if_then_else(ge(ones_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(False, max_row_clue, 1)), 4))
or_(True, True)
or_(or_(and_(False, and_(and_(True, False), ge(4, 62))), ge(ones_diff_cols, 0)), ge(3, max_col_clue))
le(_if_then_else(and_(ge(_if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 32, max_row_clue)), or_(or_(False, False), le(zeros_diff_rows, ones_diff_cols))), _if_then_else(le(_if_then_else(True, ones_diff_cols, 1), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 4, 4)), _if_then_else(and_(False, True), _if_then_else(False, 2, 0), _if_then_else(True, compare_blocks_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(False, 0, zeros_diff_cols), _if_then_else(False, 1, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, 1), _if_then_else(False, 3, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(le(ones_diff_rows, 3), max_col_clue, compare_blocks_cols), _if_then_else(False, max_row_clue, ones_diff_rows)))), _if_then_else(or_(or_(and_(True, False), le(zeros_diff_cols, 0)), le(4, _if_then_else(True, 0, 3))), _if_then_else(le(_if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(and_(True, False), _if_then_else(True, 4, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(or_(or_(False, False), ge(4, zeros_diff_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 12), _if_then_else(False, 0, 2)), _if_then_else(le(3, zeros_diff_cols), _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, max_row_clue)))))
VAL TREES:
add(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, -27))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(93, add(compare_blocks_cols, compare_blocks_rows)))
mul(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(compare_blocks_cols, compare_blocks_cols), mul(86, 20))
add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, -88))
add(add(ones_diff_cols, compare_blocks_cols), add(-26, compare_blocks_cols))
COND TREES:
ge(_if_then_else(False, compare_blocks_rows, 3), _if_then_else(False, 4, _if_then_else(False, ones_diff_rows, 0)))
or_(and_(True, False), or_(True, ge(ones_diff_rows, _if_then_else(False, compare_blocks_cols, max_col_clue))))
ge(_if_then_else(False, ones_diff_rows, 1), _if_then_else(ge(2, compare_blocks_cols), 1, compare_blocks_rows))
or_(and_(and_(le(_if_then_else(False, 3, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, max_col_clue)), ge(_if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(False, 4, zeros_diff_rows))), or_(False, ge(_if_then_else(False, ones_diff_cols, 2), _if_then_else(False, 12, 27)))), le(_if_then_else(or_(or_(False, False), and_(False, True)), _if_then_else(or_(False, True), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 0, 3)), _if_then_else(ge(compare_blocks_rows, 1), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, compare_blocks_rows, 1))), _if_then_else(and_(le(max_row_clue, max_col_clue), le(-84, 0)), _if_then_else(True, _if_then_else(False, max_col_clue, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), _if_then_else(ge(ones_diff_cols, 1), _if_then_else(True, 4, 0), _if_then_else(False, 1, 2)))))
ge(_if_then_else(True, zeros_diff_cols, max_row_clue), -10)
VAL TREES:
add(mul(5, zeros_diff_cols), add(ones_diff_cols, zeros_diff_cols))
mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, add(zeros_diff_rows, zeros_diff_cols)))
mul(mul(mul(add(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), add(add(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), mul(add(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), mul(add(-65, 87), add(compare_blocks_rows, 47))))
add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, 65))
mul(mul(zeros_diff_rows, add(compare_blocks_cols, mul(ones_diff_cols, zeros_diff_rows))), mul(-18, compare_blocks_cols))
add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols))
COND TREES:
or_(ge(2, max_col_clue), or_(le(0, compare_blocks_rows), or_(False, True)))
and_(True, ge(_if_then_else(True, max_row_clue, _if_then_else(and_(True, True), zeros_diff_rows, ones_diff_cols)), _if_then_else(True, 1, zeros_diff_cols)))
or_(or_(and_(False, False), ge(_if_then_else(False, compare_blocks_rows, 0), 1)), True)
or_(or_(and_(False, False), ge(3, 0)), and_(or_(True, True), ge(1, 0)))
le(_if_then_else(and_(ge(_if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(or_(and_(False, True), or_(True, True)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(False, 0, ones_diff_cols), _if_then_else(False, 2, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(True, ones_diff_rows, ones_diff_rows)))), or_(or_(True, False), le(zeros_diff_rows, ones_diff_cols))), _if_then_else(le(_if_then_else(True, ones_diff_cols, 1), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 4, 4)), _if_then_else(and_(False, True), _if_then_else(False, 2, 0), _if_then_else(True, compare_blocks_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(False, 0, zeros_diff_cols), _if_then_else(False, 1, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, 1), _if_then_else(False, 3, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, compare_blocks_cols), _if_then_else(False, max_row_clue, ones_diff_rows)))), _if_then_else(or_(or_(and_(True, False), le(zeros_diff_cols, 0)), le(3, _if_then_else(True, 0, 3))), _if_then_else(le(_if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(and_(True, False), _if_then_else(True, 4, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), -10))
VAL TREES:
add(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, -27))
add(mul(ones_diff_rows, ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols))
mul(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), add(mul(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, add(mul(ones_diff_rows, add(ones_diff_cols, compare_blocks_rows)), zeros_diff_rows)))))
add(mul(mul(compare_blocks_rows, ones_diff_cols), 48), add(41, compare_blocks_cols))
add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, -88))
add(add(ones_diff_cols, compare_blocks_cols), mul(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)))
COND TREES:
ge(3, _if_then_else(le(1, _if_then_else(True, 0, zeros_diff_rows)), 4, _if_then_else(True, ones_diff_rows, 0)))
or_(True, or_(True, False))
ge(_if_then_else(False, ones_diff_rows, 1), _if_then_else(True, 1, _if_then_else(le(_if_then_else(False, compare_blocks_rows, 4), _if_then_else(True, _if_then_else(False, 1, max_row_clue), max_row_clue)), max_col_clue, 4)))
or_(and_(and_(le(_if_then_else(False, 3, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, max_col_clue)), ge(_if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(False, 4, zeros_diff_rows))), or_(and_(and_(True, False), ge(4, 62)), ge(_if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 12, 27)))), le(_if_then_else(or_(or_(False, False), and_(False, True)), _if_then_else(or_(False, True), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 0, 3)), _if_then_else(ge(compare_blocks_rows, 3), _if_then_else(True, 2, ones_diff_cols), _if_then_else(ge(_if_then_else(True, ones_diff_cols, ones_diff_cols), _if_then_else(False, 12, 27)), compare_blocks_rows, 1))), _if_then_else(and_(le(max_row_clue, max_col_clue), le(-84, 0)), _if_then_else(True, _if_then_else(False, max_col_clue, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), _if_then_else(ge(ones_diff_cols, 1), _if_then_else(True, 4, 0), _if_then_else(False, 1, 2)))))
ge(_if_then_else(True, -10, max_row_clue), _if_then_else(or_(or_(False, False), ge(4, zeros_diff_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 12), _if_then_else(False, 0, _if_then_else(or_(False, True), 2, 4))), _if_then_else(le(3, zeros_diff_cols), _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, max_row_clue))))
VAL TREES:
add(mul(5, zeros_diff_cols), add(ones_diff_cols, zeros_diff_cols))
mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, add(zeros_diff_rows, zeros_diff_cols)))
mul(mul(mul(add(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), add(add(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), mul(add(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), mul(add(-65, 87), add(compare_blocks_rows, 47))))
add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, 65))
mul(mul(zeros_diff_rows, add(compare_blocks_cols, mul(ones_diff_cols, zeros_diff_rows))), mul(-18, compare_blocks_cols))
add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols))
COND TREES:
ge(2, _if_then_else(True, 2, _if_then_else(False, 4, zeros_diff_rows)))
or_(ge(max_col_clue, compare_blocks_cols), and_(False, True))
le(_if_then_else(True, -82, ones_diff_rows), _if_then_else(True, -69, compare_blocks_cols))
ge(_if_then_else(True, zeros_diff_rows, 0), _if_then_else(True, _if_then_else(le(max_col_clue, -53), _if_then_else(True, max_row_clue, 0), _if_then_else(False, ones_diff_cols, ones_diff_cols)), zeros_diff_rows))
le(_if_then_else(and_(True, True), _if_then_else(True, 2, 1), _if_then_else(True, 49, 2)), _if_then_else(True, 2, 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
or_(le(1, zeros_diff_rows), ge(_if_then_else(True, max_col_clue, _if_then_else(False, 2, compare_blocks_cols)), max_col_clue))
le(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 1))), _if_then_else(True, 4, _if_then_else(False, max_row_clue, zeros_diff_cols)))
ge(_if_then_else(ge(-17, 4), _if_then_else(True, max_col_clue, ones_diff_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(False, ge(3, compare_blocks_cols)), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, 2, 4)))
le(_if_then_else(or_(False, True), _if_then_else(False, _if_then_else(True, max_row_clue, zeros_diff_cols), compare_blocks_rows), _if_then_else(False, max_col_clue, 3)), _if_then_else(and_(False, False), _if_then_else(or_(True, True), zeros_diff_rows, 0), _if_then_else(False, 1, 0)))
ge(_if_then_else(False, zeros_diff_rows, 2), _if_then_else(False, 2, 95))
VAL TREES:
add(add(66, add(zeros_diff_cols, ones_diff_cols)), add(zeros_diff_rows, -93))
mul(add(mul(add(add(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, 14), mul(compare_blocks_cols, zeros_diff_cols))), mul(add(mul(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), mul(mul(compare_blocks_rows, ones_diff_rows), add(-81, zeros_diff_cols)))), add(add(add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), mul(mul(compare_blocks_rows, 63), add(ones_diff_cols, compare_blocks_cols))), add(mul(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(compare_blocks_cols, 49)))))
add(add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(add(-40, zeros_diff_rows), zeros_diff_cols))
mul(add(compare_blocks_rows, compare_blocks_rows), mul(91, compare_blocks_rows))
add(mul(mul(add(compare_blocks_rows, -93), add(compare_blocks_rows, zeros_diff_rows)), add(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols))), mul(mul(add(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(mul(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
ge(1, _if_then_else(True, ones_diff_rows, -18))
and_(ge(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 1))), _if_then_else(and_(and_(True, True), or_(False, False)), _if_then_else(or_(True, True), _if_then_else(True, 4, 51), _if_then_else(True, 0, -78)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), True))
and_(ge(3, compare_blocks_cols), and_(and_(ge(zeros_diff_rows, ones_diff_rows), and_(False, False)), False))
or_(or_(False, True), or_(True, False))
and_(or_(ge(zeros_diff_cols, 3), False), le(2, max_row_clue))
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
ge(1, _if_then_else(True, ones_diff_rows, -18))
and_(ge(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 1))), _if_then_else(and_(and_(True, True), or_(False, False)), _if_then_else(or_(True, True), _if_then_else(True, 4, 51), _if_then_else(True, 0, -78)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), True))
and_(ge(compare_blocks_cols, compare_blocks_cols), and_(and_(ge(zeros_diff_rows, ones_diff_rows), and_(False, False)), False))
or_(or_(False, True), or_(True, False))
and_(or_(ge(zeros_diff_cols, max_col_clue), False), le(2, max_row_clue))
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
ge(_if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), 3, 3), _if_then_else(False, 4, _if_then_else(True, ones_diff_rows, 0)))
or_(and_(le(_if_then_else(True, 2, compare_blocks_rows), _if_then_else(True, max_row_clue, zeros_diff_rows)), True), or_(False, True))
ge(_if_then_else(False, ones_diff_rows, 1), -69)
or_(and_(and_(le(_if_then_else(True, 3, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, max_col_clue)), ge(_if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(False, 4, zeros_diff_rows))), or_(and_(and_(True, False), ge(4, 62)), ge(_if_then_else(True, ones_diff_cols, 2), 0))), le(_if_then_else(or_(or_(False, False), and_(False, True)), _if_then_else(or_(False, True), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 0, 3)), _if_then_else(ge(compare_blocks_rows, 1), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, compare_blocks_rows, 1))), _if_then_else(and_(le(max_row_clue, max_col_clue), le(-84, 0)), _if_then_else(ge(4, ones_diff_rows), _if_then_else(False, 22, 2), _if_then_else(True, compare_blocks_cols, 4)), _if_then_else(ge(ones_diff_cols, 1), _if_then_else(True, 4, 0), _if_then_else(False, 1, 2)))))
ge(_if_then_else(le(zeros_diff_cols, max_col_clue), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, 3)), _if_then_else(or_(False, False), _if_then_else(False, max_col_clue, 2), _if_then_else(True, 0, ones_diff_cols)))
VAL TREES:
add(mul(5, zeros_diff_cols), add(ones_diff_cols, zeros_diff_cols))
mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, add(zeros_diff_rows, zeros_diff_cols)))
mul(mul(mul(add(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), add(add(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), mul(add(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), mul(add(-65, 87), add(compare_blocks_rows, 47))))
add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, 65))
mul(mul(zeros_diff_rows, add(compare_blocks_cols, mul(ones_diff_cols, zeros_diff_rows))), mul(-18, compare_blocks_cols))
add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols))
COND TREES:
ge(2, _if_then_else(ge(_if_then_else(False, max_col_clue, _if_then_else(False, 2, compare_blocks_cols)), max_col_clue), 1, _if_then_else(False, 4, zeros_diff_rows)))
or_(False, and_(False, True))
le(compare_blocks_cols, _if_then_else(and_(True, False), 1, compare_blocks_rows))
ge(_if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, _if_then_else(True, 0, _if_then_else(False, 12, 27)), zeros_diff_rows))
le(1, 3)
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
le(_if_then_else(True, 1, 3), 0)
ge(_if_then_else(ge(compare_blocks_cols, zeros_diff_cols), 1, -11), _if_then_else(ge(compare_blocks_cols, zeros_diff_cols), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, max_row_clue, 4)))
le(_if_then_else(True, _if_then_else(True, 4, ones_diff_rows), 4), _if_then_else(False, _if_then_else(False, compare_blocks_cols, zeros_diff_rows), 4))
and_(True, le(0, 1))
or_(ge(_if_then_else(True, 4, _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(False, 3, _if_then_else(False, ones_diff_rows, max_col_clue))), and_(and_(True, True), or_(False, False)))
VAL TREES:
mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols))
add(add(ones_diff_cols, zeros_diff_cols), add(91, zeros_diff_rows))
add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, mul(zeros_diff_cols, -23)))
mul(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, -72))
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(38, ones_diff_rows)))
add(add(mul(add(ones_diff_rows, ones_diff_rows), mul(-70, ones_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_cols, 4))), add(add(add(compare_blocks_rows, ones_diff_rows), add(-86, compare_blocks_rows)), mul(mul(-86, compare_blocks_cols), add(ones_diff_cols, zeros_diff_cols))))
COND TREES:
ge(2, _if_then_else(ge(_if_then_else(True, max_col_clue, _if_then_else(False, 2, compare_blocks_cols)), max_col_clue), 1, _if_then_else(False, 4, zeros_diff_rows)))
or_(True, and_(False, True))
le(_if_then_else(False, -82, ones_diff_rows), _if_then_else(True, _if_then_else(True, 1, 0), compare_blocks_cols))
ge(_if_then_else(ge(4, 62), zeros_diff_rows, 0), compare_blocks_cols)
le(1, _if_then_else(or_(False, True), _if_then_else(False, 2, 2), 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(1, _if_then_else(le(max_row_clue, _if_then_else(and_(ge(_if_then_else(le(4, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 0), _if_then_else(True, max_col_clue, max_row_clue)), _if_then_else(and_(True, False), _if_then_else(False, max_col_clue, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, ones_diff_rows))), ge(_if_then_else(and_(False, True), _if_then_else(True, 4, 3), _if_then_else(False, max_row_clue, 2)), _if_then_else(and_(True, True), _if_then_else(True, compare_blocks_rows, 0), _if_then_else(False, 2, zeros_diff_rows)))), _if_then_else(le(_if_then_else(or_(False, False), _if_then_else(True, -18, zeros_diff_rows), _if_then_else(True, 4, 1)), _if_then_else(ge(compare_blocks_cols, 4), _if_then_else(True, zeros_diff_rows, 48), _if_then_else(False, 54, max_row_clue))), _if_then_else(and_(ge(4, zeros_diff_cols), or_(False, True)), _if_then_else(le(ones_diff_rows, 68), _if_then_else(False, 4, max_row_clue), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(le(4, max_col_clue), _if_then_else(True, ones_diff_rows, 3), _if_then_else(True, 4, compare_blocks_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_cols, 3), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), _if_then_else(ge(1, max_col_clue), _if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, max_col_clue, 3)), _if_then_else(or_(False, False), _if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(True, 2, ones_diff_rows)))), _if_then_else(le(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, zeros_diff_cols), _if_then_else(True, ones_diff_cols, zeros_diff_cols)), _if_then_else(or_(True, True), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(True, max_row_clue, 3))), _if_then_else(ge(_if_then_else(False, 15, 2), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(1, max_row_clue), _if_then_else(True, ones_diff_rows, 3), _if_then_else(False, max_row_clue, 51)), _if_then_else(ge(zeros_diff_rows, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, 2), _if_then_else(True, 2, compare_blocks_rows))), _if_then_else(ge(_if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, 2, 3)), _if_then_else(or_(True, True), _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 1)))))), ones_diff_rows, -18))
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 1))), _if_then_else(and_(and_(True, True), or_(ge(_if_then_else(ge(_if_then_else(False, zeros_diff_cols, ones_diff_rows), _if_then_else(True, max_row_clue, 1)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(True, 1, 2)), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, 0), _if_then_else(False, ones_diff_cols, compare_blocks_rows))), _if_then_else(or_(and_(True, True), or_(True, True)), _if_then_else(le(max_col_clue, zeros_diff_cols), _if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(False, 1, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(False, zeros_diff_rows, ones_diff_cols)))), False)), _if_then_else(or_(le(_if_then_else(and_(False, True), ones_diff_rows, zeros_diff_cols), _if_then_else(ge(max_row_clue, 0), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, ones_diff_rows, zeros_diff_cols))), True), _if_then_else(True, 4, 51), _if_then_else(True, 0, -78)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(_if_then_else(False, -23, _if_then_else(ge(max_row_clue, 0), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, zeros_diff_cols))), _if_then_else(True, max_col_clue, max_col_clue)), or_(or_(False, True), and_(False, True)))))
and_(ge(3, compare_blocks_cols), or_(False, True))
or_(or_(True, True), or_(True, and_(True, False)))
and_(or_(False, False), le(ones_diff_rows, max_row_clue))
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
ge(2, _if_then_else(ge(_if_then_else(False, max_col_clue, _if_then_else(False, 2, compare_blocks_cols)), max_col_clue), 1, _if_then_else(False, 4, zeros_diff_rows)))
or_(False, and_(False, False))
le(compare_blocks_cols, -69)
ge(_if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, _if_then_else(True, 0, 0), zeros_diff_rows))
le(1, 2)
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(1, _if_then_else(or_(False, False), ones_diff_rows, zeros_diff_rows))
and_(ge(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 1))), _if_then_else(and_(and_(True, True), or_(False, False)), _if_then_else(or_(le(1, zeros_diff_rows), and_(True, False)), _if_then_else(True, 4, 51), _if_then_else(True, 0, -78)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, _if_then_else(True, compare_blocks_cols, 1), compare_blocks_rows)))), or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), True))
and_(ge(3, compare_blocks_cols), and_(and_(True, le(3, 3)), ge(2, _if_then_else(True, 4, compare_blocks_cols))))
or_(or_(True, False), ge(compare_blocks_cols, compare_blocks_rows))
and_(False, True)
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
ge(_if_then_else(or_(False, le(_if_then_else(False, max_col_clue, 1), _if_then_else(False, 0, max_col_clue))), _if_then_else(or_(le(0, compare_blocks_rows), or_(False, True)), _if_then_else(ge(ones_diff_rows, max_col_clue), _if_then_else(False, 95, compare_blocks_cols), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(False, _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, 0, zeros_diff_cols))), _if_then_else(or_(and_(False, True), ge(zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(True, 1, 2), _if_then_else(True, zeros_diff_rows, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 0), _if_then_else(True, 1, 2)), le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(True, zeros_diff_rows, 19))), _if_then_else(or_(le(ones_diff_rows, zeros_diff_cols), and_(True, True)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 0, 1)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, 4, max_row_clue))), _if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(1, 3), _if_then_else(False, 3, 3), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(ge(zeros_diff_cols, 2), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(True, 1, compare_blocks_rows)))))
le(_if_then_else(False, zeros_diff_cols, -36), _if_then_else(ge(ones_diff_rows, 4), ones_diff_rows, zeros_diff_cols))
or_(and_(and_(ge(zeros_diff_rows, 0), False), False), False)
and_(ge(_if_then_else(or_(and_(True, False), or_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 2, 2), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), _if_then_else(or_(or_(True, False), and_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, max_row_clue, 1), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(max_col_clue, 4), _if_then_else(True, ones_diff_cols, 0), _if_then_else(False, 95, ones_diff_rows)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, -99, 3)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(-96, 3), _if_then_else(True, 2, ones_diff_cols), _if_then_else(False, 0, -87))), _if_then_else(ge(_if_then_else(False, -1, 3), _if_then_else(True, 1, max_row_clue)), _if_then_else(ge(compare_blocks_rows, max_row_clue), compare_blocks_cols, _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, max_col_clue, 99)))))
or_(True, and_(or_(False, False), True))
VAL TREES:
add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows))
add(add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(-82, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))))
mul(mul(zeros_diff_rows, 65), mul(ones_diff_rows, zeros_diff_rows))
add(add(add(mul(zeros_diff_cols, zeros_diff_rows), mul(mul(compare_blocks_cols, zeros_diff_cols), -98)), 58), mul(ones_diff_cols, -22))
add(add(compare_blocks_rows, ones_diff_cols), add(add(compare_blocks_rows, compare_blocks_rows), add(add(add(mul(add(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), mul(mul(zeros_diff_cols, 82), add(zeros_diff_rows, ones_diff_rows))), mul(mul(add(50, zeros_diff_cols), mul(compare_blocks_cols, zeros_diff_cols)), add(add(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_cols)))), mul(mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows)), mul(add(ones_diff_rows, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols))), add(add(mul(compare_blocks_cols, compare_blocks_cols), mul(19, 78)), mul(add(ones_diff_rows, compare_blocks_rows), add(zeros_diff_cols, zeros_diff_cols)))))))
COND TREES:
or_(le(2, zeros_diff_rows), ge(_if_then_else(False, max_col_clue, _if_then_else(False, 2, compare_blocks_cols)), zeros_diff_rows))
le(_if_then_else(and_(False, and_(True, False)), 1, 3), 1)
ge(_if_then_else(ge(-17, 4), _if_then_else(True, max_col_clue, 4), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, 2, 4)))
le(_if_then_else(or_(False, True), _if_then_else(False, _if_then_else(True, max_row_clue, zeros_diff_cols), compare_blocks_rows), _if_then_else(False, _if_then_else(True, compare_blocks_rows, max_row_clue), 3)), _if_then_else(and_(True, False), _if_then_else(True, zeros_diff_rows, 0), _if_then_else(False, 1, max_row_clue)))
ge(_if_then_else(False, zeros_diff_rows, max_row_clue), 2)
VAL TREES:
add(add(66, add(zeros_diff_cols, ones_diff_cols)), add(zeros_diff_rows, -93))
mul(add(mul(add(add(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, 14), mul(compare_blocks_cols, zeros_diff_cols))), mul(add(mul(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), mul(mul(compare_blocks_rows, ones_diff_rows), add(-81, zeros_diff_cols)))), add(add(add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), mul(mul(compare_blocks_rows, 63), add(ones_diff_cols, compare_blocks_cols))), add(mul(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(compare_blocks_cols, 49)))))
add(add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(add(-40, zeros_diff_rows), zeros_diff_cols))
mul(add(compare_blocks_rows, compare_blocks_rows), mul(91, compare_blocks_rows))
add(mul(mul(add(compare_blocks_rows, -93), add(compare_blocks_rows, zeros_diff_rows)), add(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols))), mul(mul(add(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(mul(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
ge(2, _if_then_else(True, _if_then_else(False, 2, ones_diff_rows), _if_then_else(False, 4, zeros_diff_rows)))
or_(True, and_(ge(ones_diff_cols, ones_diff_rows), True))
le(_if_then_else(False, -82, ones_diff_rows), ones_diff_cols)
ge(_if_then_else(True, zeros_diff_rows, 0), _if_then_else(True, max_col_clue, zeros_diff_rows))
le(1, _if_then_else(False, _if_then_else(False, 2, 95), 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(_if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), 3, 3), _if_then_else(False, 4, _if_then_else(True, ones_diff_rows, zeros_diff_rows)))
or_(and_(True, True), False)
ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(and_(True, False), 1, compare_blocks_rows))
or_(and_(and_(le(_if_then_else(True, 3, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, max_col_clue)), ge(_if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(False, 4, zeros_diff_rows))), or_(and_(and_(True, False), ge(4, 62)), ge(_if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 12, 27)))), le(_if_then_else(or_(or_(False, False), and_(False, True)), _if_then_else(or_(False, True), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 0, 3)), _if_then_else(ge(compare_blocks_rows, 1), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, compare_blocks_rows, 1))), _if_then_else(and_(le(max_row_clue, max_col_clue), le(-84, 0)), _if_then_else(True, _if_then_else(False, max_col_clue, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), _if_then_else(ge(ones_diff_cols, 1), _if_then_else(True, 4, 0), _if_then_else(False, 1, 2)))))
ge(_if_then_else(and_(False, True), zeros_diff_cols, max_row_clue), -10)
VAL TREES:
add(mul(5, zeros_diff_cols), add(ones_diff_cols, zeros_diff_cols))
mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, add(zeros_diff_rows, zeros_diff_cols)))
mul(mul(mul(add(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), add(add(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), mul(add(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), mul(add(-65, 87), add(compare_blocks_rows, 47))))
add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, 65))
mul(mul(zeros_diff_rows, add(compare_blocks_cols, mul(ones_diff_cols, zeros_diff_rows))), mul(-18, compare_blocks_cols))
add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols))
COND TREES:
ge(0, zeros_diff_rows)
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, or_(True, True)), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(and_(False, True), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, compare_blocks_cols, 1))), _if_then_else(and_(False, or_(False, False)), ones_diff_rows, _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, max_col_clue)))), or_(and_(or_(le(zeros_diff_rows, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(True, max_col_clue, max_col_clue)), or_(or_(False, True), and_(False, True)))))
le(_if_then_else(False, 1, 2), _if_then_else(False, 0, 2))
or_(False, True)
and_(or_(True, or_(le(_if_then_else(True, compare_blocks_rows, 4), _if_then_else(False, 0, ones_diff_cols)), False)), True)
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
ge(_if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, 64, ones_diff_cols)), 3, 3), _if_then_else(False, 4, _if_then_else(True, ones_diff_rows, 0)))
or_(and_(ge(ones_diff_rows, _if_then_else(False, _if_then_else(ge(ones_diff_cols, ones_diff_rows), compare_blocks_rows, zeros_diff_cols), max_col_clue)), True), or_(False, True))
ge(_if_then_else(False, ones_diff_rows, -17), _if_then_else(True, 1, compare_blocks_rows))
or_(and_(and_(le(_if_then_else(and_(True, True), 3, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, max_col_clue)), ge(_if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(False, 4, zeros_diff_rows))), or_(and_(and_(True, False), ge(4, 62)), ge(_if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 12, 27)))), le(_if_then_else(or_(or_(False, False), and_(False, True)), _if_then_else(or_(False, True), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 0, 3)), _if_then_else(ge(compare_blocks_rows, 1), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, compare_blocks_rows, 1))), _if_then_else(and_(le(max_row_clue, max_col_clue), le(-84, 0)), _if_then_else(True, _if_then_else(False, max_col_clue, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), _if_then_else(ge(ones_diff_cols, 1), _if_then_else(True, 4, 0), _if_then_else(False, 1, 2)))))
ge(2, -10)
VAL TREES:
add(mul(5, zeros_diff_cols), add(ones_diff_cols, zeros_diff_cols))
mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, add(zeros_diff_rows, zeros_diff_cols)))
mul(mul(mul(add(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), add(add(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), mul(add(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), mul(add(-65, 87), add(compare_blocks_rows, 47))))
add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, 65))
mul(mul(zeros_diff_rows, add(compare_blocks_cols, mul(ones_diff_cols, zeros_diff_rows))), mul(-18, compare_blocks_cols))
add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols))
COND TREES:
ge(_if_then_else(or_(or_(and_(False, True), and_(False, True)), le(_if_then_else(False, max_col_clue, 1), _if_then_else(False, 0, max_col_clue))), _if_then_else(or_(le(0, compare_blocks_rows), or_(False, True)), _if_then_else(ge(ones_diff_rows, max_col_clue), _if_then_else(False, 95, compare_blocks_cols), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, 0, zeros_diff_cols))), _if_then_else(or_(or_(True, False), ge(zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(True, 1, 2), _if_then_else(True, zeros_diff_rows, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 1), _if_then_else(True, 1, 2)), le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, max_row_clue))), _if_then_else(or_(le(ones_diff_rows, zeros_diff_cols), and_(True, True)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 0, 1)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, 4, max_row_clue))), _if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(1, 3), _if_then_else(False, 3, 3), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(ge(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(True, 1, compare_blocks_rows)))))
le(_if_then_else(True, zeros_diff_cols, -78), _if_then_else(True, ones_diff_rows, zeros_diff_cols))
or_(and_(True, ge(1, 4)), ge(compare_blocks_rows, 3))
and_(ge(_if_then_else(or_(and_(True, False), ge(compare_blocks_cols, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 2, 2), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), _if_then_else(or_(or_(True, False), True), _if_then_else(and_(True, True), _if_then_else(False, max_row_clue, 1), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(max_col_clue, 4), _if_then_else(True, ones_diff_cols, 0), _if_then_else(False, 95, ones_diff_rows)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, 3), _if_then_else(ge(compare_blocks_rows, 0), _if_then_else(True, ones_diff_rows, _if_then_else(True, 1, max_row_clue)), _if_then_else(False, max_col_clue, max_col_clue))), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(-96, 3), _if_then_else(True, 2, ones_diff_cols), _if_then_else(False, 0, -87))), _if_then_else(ge(_if_then_else(False, -1, 3), _if_then_else(or_(True, True), 1, max_row_clue)), _if_then_else(ge(compare_blocks_rows, max_row_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, max_col_clue, 99)))))
or_(False, and_(le(_if_then_else(and_(False, False), zeros_diff_cols, max_row_clue), compare_blocks_rows), True))
VAL TREES:
add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows))
add(add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(-82, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))))
mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_cols, ones_diff_rows))
add(add(ones_diff_rows, 58), mul(ones_diff_cols, -22))
add(add(compare_blocks_rows, ones_diff_cols), add(add(compare_blocks_rows, compare_blocks_rows), mul(19, compare_blocks_cols)))
COND TREES:
ge(1, _if_then_else(True, ones_diff_rows, ones_diff_rows))
and_(ge(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 1))), _if_then_else(and_(and_(True, True), or_(False, False)), _if_then_else(or_(True, True), _if_then_else(True, 4, 51), _if_then_else(True, 0, -78)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), ge(compare_blocks_cols, zeros_diff_cols))), True))
and_(ge(3, compare_blocks_cols), and_(and_(ge(zeros_diff_rows, ones_diff_rows), and_(False, False)), False))
or_(or_(False, True), or_(True, False))
and_(or_(ge(zeros_diff_cols, 3), False), le(_if_then_else(False, 3, _if_then_else(False, ones_diff_rows, _if_then_else(False, 4, 0))), max_row_clue))
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
le(_if_then_else(ge(_if_then_else(True, max_row_clue, -18), ones_diff_rows), 1, _if_then_else(True, 1, compare_blocks_cols)), 0)
ge(_if_then_else(or_(True, False), 1, -11), _if_then_else(ge(compare_blocks_cols, _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_rows, compare_blocks_cols), _if_then_else(False, _if_then_else(False, max_col_clue, ones_diff_cols), compare_blocks_cols))), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, max_row_clue, 4)))
le(_if_then_else(False, _if_then_else(True, _if_then_else(or_(False, False), _if_then_else(True, 3, compare_blocks_rows), _if_then_else(le(2, compare_blocks_cols), 1, 1)), ones_diff_rows), 4), _if_then_else(False, _if_then_else(False, compare_blocks_cols, zeros_diff_rows), 4))
and_(and_(le(_if_then_else(ge(zeros_diff_cols, 1), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(False, 3, 2))), ge(_if_then_else(le(zeros_diff_rows, 1), _if_then_else(True, 3, ones_diff_rows), _if_then_else(True, ones_diff_rows, max_row_clue)), _if_then_else(ge(max_row_clue, zeros_diff_rows), _if_then_else(False, 1, 0), _if_then_else(True, zeros_diff_cols, 1)))), True)
or_(ge(_if_then_else(True, 4, _if_then_else(False, max_col_clue, zeros_diff_cols)), 2), and_(and_(True, True), or_(True, False)))
VAL TREES:
mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols))
add(add(ones_diff_cols, zeros_diff_cols), add(91, zeros_diff_rows))
add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, mul(zeros_diff_cols, -23)))
mul(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, -72))
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(38, ones_diff_rows)))
add(add(mul(add(ones_diff_rows, ones_diff_rows), mul(-70, ones_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_cols, 4))), add(add(add(compare_blocks_rows, ones_diff_rows), add(-86, compare_blocks_rows)), mul(mul(-86, compare_blocks_cols), add(ones_diff_cols, zeros_diff_cols))))
COND TREES:
ge(_if_then_else(False, compare_blocks_rows, _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, zeros_diff_cols), _if_then_else(False, ones_diff_cols, compare_blocks_cols))), _if_then_else(le(2, zeros_diff_rows), 4, _if_then_else(le(compare_blocks_cols, 1), ones_diff_rows, ones_diff_rows)))
or_(and_(False, False), or_(True, True))
ge(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(ge(2, compare_blocks_cols), _if_then_else(or_(True, False), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, _if_then_else(True, 3, max_row_clue), 3)), compare_blocks_rows))
or_(and_(and_(le(_if_then_else(False, 3, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, max_col_clue)), ge(_if_then_else(False, _if_then_else(True, max_row_clue, zeros_diff_cols), zeros_diff_cols), _if_then_else(False, 4, zeros_diff_rows))), or_(False, True)), le(_if_then_else(or_(or_(False, False), and_(False, True)), _if_then_else(or_(False, True), _if_then_else(False, 2, _if_then_else(or_(True, False), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, 3))), _if_then_else(True, 0, 3)), _if_then_else(ge(compare_blocks_rows, 1), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, compare_blocks_rows, 1))), _if_then_else(and_(le(max_row_clue, max_col_clue), le(-84, 0)), _if_then_else(True, _if_then_else(False, max_col_clue, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), _if_then_else(ge(ones_diff_cols, 1), _if_then_else(True, 4, 0), _if_then_else(False, 1, 1)))))
ge(_if_then_else(le(_if_then_else(and_(True, False), _if_then_else(True, max_col_clue, 2), _if_then_else(or_(True, True), max_col_clue, 2)), 3), zeros_diff_cols, _if_then_else(False, 2, 95)), -10)
VAL TREES:
add(mul(5, zeros_diff_cols), add(ones_diff_cols, zeros_diff_cols))
mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, add(zeros_diff_rows, zeros_diff_cols)))
mul(mul(mul(add(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), add(add(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), mul(add(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), mul(add(-65, 87), add(compare_blocks_rows, 47))))
add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, 65))
mul(mul(zeros_diff_rows, add(compare_blocks_cols, mul(ones_diff_cols, zeros_diff_rows))), mul(-18, compare_blocks_cols))
add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols))
COND TREES:
or_(le(2, zeros_diff_rows), ge(_if_then_else(False, max_col_clue, _if_then_else(False, 2, compare_blocks_cols)), 0))
le(_if_then_else(and_(ge(ones_diff_cols, ones_diff_rows), and_(True, True)), 1, 3), 1)
ge(_if_then_else(ge(-17, 4), _if_then_else(True, max_col_clue, 4), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(False, False), _if_then_else(and_(False, ge(3, compare_blocks_cols)), ones_diff_rows, 1), _if_then_else(False, 2, 4)))
le(_if_then_else(or_(False, True), _if_then_else(False, max_row_clue, compare_blocks_rows), _if_then_else(False, max_col_clue, 3)), _if_then_else(and_(True, False), _if_then_else(True, zeros_diff_rows, 0), _if_then_else(False, 1, max_row_clue)))
ge(_if_then_else(False, zeros_diff_rows, max_row_clue), 4)
VAL TREES:
add(add(66, add(zeros_diff_cols, ones_diff_cols)), add(zeros_diff_rows, -93))
mul(add(mul(add(add(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, 14), mul(compare_blocks_cols, zeros_diff_cols))), mul(add(mul(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), mul(mul(compare_blocks_rows, ones_diff_rows), add(-81, zeros_diff_cols)))), add(add(add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), mul(mul(compare_blocks_rows, 63), add(ones_diff_cols, compare_blocks_cols))), add(mul(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_cols, ones_diff_cols), add(compare_blocks_cols, 49)))))
add(add(mul(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(add(-40, zeros_diff_rows), zeros_diff_cols))
mul(add(compare_blocks_rows, compare_blocks_rows), mul(91, compare_blocks_rows))
add(mul(mul(add(compare_blocks_rows, -93), add(compare_blocks_rows, zeros_diff_rows)), add(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols))), mul(mul(add(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(mul(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_cols))
COND TREES:
ge(_if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, ones_diff_rows, ones_diff_cols))
and_(ge(_if_then_else(ge(_if_then_else(False, 51, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(ge(ones_diff_cols, ones_diff_rows), False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, compare_blocks_cols, 1))), _if_then_else(and_(or_(and_(or_(False, le(ones_diff_rows, _if_then_else(False, -89, 0))), False), le(zeros_diff_cols, _if_then_else(and_(ge(zeros_diff_rows, 4), or_(False, False)), ones_diff_rows, _if_then_else(False, _if_then_else(True, -7, -57), 4)))), or_(False, False)), _if_then_else(or_(True, True), _if_then_else(True, 4, 51), _if_then_else(True, 0, -78)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, max_row_clue)))), or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(False, or_(or_(False, True), and_(False, True)))))
and_(and_(ge(_if_then_else(False, ones_diff_rows, 4), _if_then_else(False, 1, 1)), or_(le(compare_blocks_rows, ones_diff_rows), and_(True, and_(True, True)))), and_(ge(-17, 4), False))
or_(or_(False, False), or_(False, le(_if_then_else(True, zeros_diff_cols, _if_then_else(True, _if_then_else(False, 0, zeros_diff_cols), -36)), _if_then_else(False, 3, _if_then_else(False, _if_then_else(and_(True, True), zeros_diff_rows, 4), compare_blocks_rows)))))
and_(or_(and_(ge(0, 0), or_(False, False)), or_(le(2, compare_blocks_rows), False)), le(ones_diff_rows, 3))
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
or_(True, ge(4, _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 0, 1))))
and_(or_(False, True), le(_if_then_else(False, compare_blocks_rows, zeros_diff_rows), 4))
or_(or_(and_(False, False), ge(_if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, compare_blocks_cols, 4))), True)
or_(or_(ge(compare_blocks_cols, compare_blocks_rows), ge(ones_diff_cols, 0)), and_(or_(True, True), ge(1, 0)))
le(_if_then_else(and_(ge(_if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 32, max_row_clue)), or_(or_(False, False), le(zeros_diff_rows, ones_diff_cols))), _if_then_else(le(_if_then_else(True, ones_diff_cols, 1), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 4, 4)), _if_then_else(and_(False, True), _if_then_else(False, 2, 0), _if_then_else(True, compare_blocks_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(False, 0, zeros_diff_cols), _if_then_else(False, 1, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, 1), _if_then_else(False, 3, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, compare_blocks_cols), _if_then_else(False, max_row_clue, ones_diff_rows)))), _if_then_else(or_(or_(and_(True, False), le(zeros_diff_cols, 0)), le(3, _if_then_else(True, 0, 3))), _if_then_else(le(_if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(and_(True, False), _if_then_else(True, 4, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(or_(or_(False, False), ge(4, zeros_diff_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 12), _if_then_else(False, 0, _if_then_else(True, 2, 4))), _if_then_else(le(3, zeros_diff_cols), _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, max_row_clue)))))
VAL TREES:
add(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, -27))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(93, add(compare_blocks_cols, compare_blocks_rows)))
mul(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(compare_blocks_cols, compare_blocks_cols), mul(86, 20))
add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, -88))
add(add(ones_diff_cols, compare_blocks_cols), add(-26, compare_blocks_cols))
COND TREES:
ge(_if_then_else(or_(or_(and_(False, True), and_(False, True)), le(_if_then_else(False, max_col_clue, 1), _if_then_else(False, 0, max_col_clue))), _if_then_else(or_(le(0, compare_blocks_rows), or_(False, True)), _if_then_else(ge(ones_diff_rows, max_col_clue), _if_then_else(False, 95, compare_blocks_cols), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(ge(zeros_diff_cols, compare_blocks_cols), _if_then_else(False, 0, max_col_clue), _if_then_else(False, 4, zeros_diff_rows)))), _if_then_else(or_(or_(True, False), ge(zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(True, 1, 2), _if_then_else(True, zeros_diff_rows, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 0), _if_then_else(True, 1, 2)), le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 19))), _if_then_else(or_(le(ones_diff_rows, zeros_diff_cols), and_(True, True)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, 0, 1)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, 4, max_row_clue))), _if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(True, _if_then_else(False, 3, 3), _if_then_else(True, 1, max_col_clue)), _if_then_else(ge(zeros_diff_cols, 2), 1, _if_then_else(True, 1, compare_blocks_rows)))))
le(_if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(and_(or_(False, and_(False, True)), True), ones_diff_rows, 4))
or_(and_(True, and_(or_(False, True), False)), ge(ones_diff_rows, zeros_diff_cols))
and_(ge(_if_then_else(or_(and_(True, False), ge(compare_blocks_cols, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(False, _if_then_else(True, 5, zeros_diff_rows), ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 2, 2), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), _if_then_else(False, _if_then_else(and_(False, True), _if_then_else(False, max_row_clue, 1), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(max_col_clue, 4), _if_then_else(True, ones_diff_cols, 0), _if_then_else(False, 95, ones_diff_rows)))), ge(_if_then_else(ge(4, _if_then_else(True, -99, 3)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, _if_then_else(False, zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(-96, 3), _if_then_else(True, 2, ones_diff_cols), _if_then_else(False, 0, -87))), _if_then_else(ge(_if_then_else(False, -1, 3), _if_then_else(True, 1, max_row_clue)), _if_then_else(True, _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(False, 3, _if_then_else(False, _if_then_else(and_(True, True), zeros_diff_rows, 4), compare_blocks_rows)))))
or_(and_(False, True), and_(False, False))
VAL TREES:
add(add(add(ones_diff_rows, mul(zeros_diff_cols, ones_diff_rows)), mul(add(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_rows, ones_diff_rows))), add(ones_diff_cols, ones_diff_cols))
mul(mul(mul(add(mul(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_cols, ones_diff_cols)), add(add(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows))
add(add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(-82, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))))
mul(mul(add(13, zeros_diff_cols), mul(add(ones_diff_cols, add(ones_diff_rows, ones_diff_cols)), zeros_diff_rows)), add(zeros_diff_cols, ones_diff_rows))
add(add(ones_diff_rows, 58), mul(ones_diff_cols, add(mul(ones_diff_rows, -49), add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, compare_blocks_cols)))))
add(add(compare_blocks_rows, mul(add(mul(ones_diff_rows, 82), compare_blocks_rows), add(93, compare_blocks_rows))), add(add(compare_blocks_rows, compare_blocks_rows), mul(19, compare_blocks_cols)))
COND TREES:
ge(_if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, ones_diff_rows, -18))
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, compare_blocks_cols, 1))), _if_then_else(and_(False, or_(False, False)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_cols, 51), _if_then_else(True, 0, compare_blocks_cols)), _if_then_else(and_(True, or_(True, False)), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), True))
and_(ge(2, compare_blocks_cols), True)
or_(or_(True, True), True)
and_(or_(False, False), le(3, compare_blocks_rows))
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), add(mul(add(zeros_diff_cols, mul(-28, -81)), ones_diff_rows), mul(-48, zeros_diff_rows))), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(add(mul(zeros_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_cols)), zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(compare_blocks_cols, ones_diff_cols), add(zeros_diff_rows, -19))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(add(mul(add(mul(ones_diff_rows, 19), mul(zeros_diff_rows, compare_blocks_cols)), mul(add(zeros_diff_cols, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows))), add(compare_blocks_rows, ones_diff_rows)), mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(mul(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_cols)), compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, mul(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_rows, zeros_diff_rows))), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), add(mul(zeros_diff_cols, zeros_diff_rows), add(mul(compare_blocks_cols, zeros_diff_rows), compare_blocks_rows)))
COND TREES:
ge(zeros_diff_rows, ones_diff_rows)
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(and_(False, True), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, compare_blocks_cols, 1))), _if_then_else(and_(False, or_(False, False)), ones_diff_rows, _if_then_else(le(_if_then_else(and_(False, True), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, 0, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(True, 2, max_col_clue), _if_then_else(False, ones_diff_cols, max_row_clue))), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(zeros_diff_rows, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(True, max_col_clue, max_col_clue)), or_(or_(False, True), and_(False, True)))))
and_(ge(2, _if_then_else(True, 4, compare_blocks_cols)), ge(zeros_diff_cols, compare_blocks_cols))
or_(or_(True, False), False)
and_(False, True)
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
ge(_if_then_else(or_(or_(and_(False, True), and_(False, True)), le(_if_then_else(False, max_col_clue, 1), _if_then_else(False, 0, max_col_clue))), _if_then_else(or_(le(0, compare_blocks_rows), or_(True, True)), _if_then_else(ge(ones_diff_rows, max_col_clue), _if_then_else(False, 95, compare_blocks_cols), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, 0, zeros_diff_cols))), _if_then_else(or_(or_(True, False), ge(zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(True, 1, 2), _if_then_else(True, zeros_diff_rows, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 1), _if_then_else(True, 1, 2)), le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 19))), _if_then_else(False, _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 0, 1)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, 4, max_row_clue))), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(1, 3), _if_then_else(False, 3, 3), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(ge(zeros_diff_cols, 2), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(True, 1, compare_blocks_rows)))))
le(_if_then_else(True, zeros_diff_cols, -78), _if_then_else(ge(ones_diff_rows, _if_then_else(False, compare_blocks_cols, max_col_clue)), ones_diff_rows, zeros_diff_cols))
or_(and_(False, False), ge(compare_blocks_rows, 3))
and_(ge(_if_then_else(or_(and_(True, False), ge(compare_blocks_cols, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 2, 2), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), _if_then_else(or_(or_(True, False), and_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, max_row_clue, 1), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(max_col_clue, 4), _if_then_else(True, ones_diff_cols, 0), _if_then_else(False, 95, ones_diff_rows)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, 3), _if_then_else(ge(compare_blocks_rows, 0), _if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(False, max_col_clue, max_col_clue))), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(-96, 3), _if_then_else(True, 2, ones_diff_cols), _if_then_else(False, 0, -87))), _if_then_else(ge(_if_then_else(False, -1, 3), _if_then_else(or_(True, True), 1, max_row_clue)), _if_then_else(False, _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, max_col_clue, 99)))))
or_(True, True)
VAL TREES:
add(add(mul(add(add(mul(ones_diff_cols, -57), mul(-64, 82)), mul(add(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols))), mul(mul(add(zeros_diff_cols, 61), add(-26, ones_diff_rows)), add(mul(zeros_diff_cols, 49), add(ones_diff_cols, zeros_diff_cols)))), mul(add(mul(mul(ones_diff_cols, -77), add(zeros_diff_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols))), mul(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_rows)), add(add(compare_blocks_cols, 39), mul(zeros_diff_cols, compare_blocks_rows))))), add(ones_diff_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows))
add(add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(-82, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(mul(mul(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, 44)), ones_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))))
mul(add(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_rows, compare_blocks_rows)), add(zeros_diff_cols, ones_diff_rows))
add(add(ones_diff_rows, 58), mul(ones_diff_cols, -22))
add(add(compare_blocks_rows, ones_diff_cols), add(add(compare_blocks_rows, compare_blocks_rows), mul(19, compare_blocks_cols)))
COND TREES:
ge(_if_then_else(le(2, 64), 3, 3), _if_then_else(False, 4, _if_then_else(True, ones_diff_rows, 0)))
or_(True, or_(True, True))
ge(-82, _if_then_else(and_(True, False), 1, compare_blocks_rows))
or_(and_(and_(le(_if_then_else(True, 3, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, max_col_clue)), ge(_if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(False, 4, zeros_diff_rows))), or_(and_(and_(True, False), ge(4, 62)), ge(_if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 12, 27)))), le(_if_then_else(or_(or_(False, False), and_(False, True)), _if_then_else(or_(False, True), _if_then_else(False, 2, max_row_clue), _if_then_else(True, 0, 3)), _if_then_else(ge(compare_blocks_rows, 1), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, compare_blocks_rows, 1))), _if_then_else(and_(le(max_row_clue, max_col_clue), le(-84, 0)), _if_then_else(True, _if_then_else(False, max_col_clue, 3), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), _if_then_else(ge(ones_diff_cols, 1), _if_then_else(True, 4, 0), _if_then_else(False, 1, 2)))))
ge(83, -10)
VAL TREES:
add(mul(5, zeros_diff_cols), add(ones_diff_cols, zeros_diff_cols))
mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, add(zeros_diff_rows, zeros_diff_cols)))
mul(mul(mul(add(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), add(add(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), mul(add(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), mul(add(-65, 87), add(compare_blocks_rows, 47))))
add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, 65))
mul(mul(zeros_diff_rows, add(compare_blocks_cols, mul(ones_diff_cols, zeros_diff_rows))), mul(-18, compare_blocks_cols))
add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols))
COND TREES:
or_(ge(zeros_diff_rows, 0), ge(_if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)))
or_(ge(_if_then_else(or_(False, True), _if_then_else(and_(True, True), 4, compare_blocks_rows), _if_then_else(True, max_col_clue, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, 3, _if_then_else(False, max_row_clue, 0)))), and_(True, True))
le(_if_then_else(False, _if_then_else(False, ones_diff_rows, 1), ones_diff_rows), _if_then_else(True, -69, compare_blocks_cols))
ge(ones_diff_cols, _if_then_else(or_(False, False), 2, zeros_diff_rows))
le(_if_then_else(and_(False, False), _if_then_else(True, max_row_clue, -3), _if_then_else(False, 0, _if_then_else(and_(False, True), zeros_diff_cols, max_row_clue))), _if_then_else(False, 2, 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(_if_then_else(ge(ones_diff_rows, max_row_clue), compare_blocks_rows, max_row_clue), _if_then_else(False, ones_diff_rows, 0))
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, compare_blocks_cols, 1))), _if_then_else(and_(False, or_(False, False)), _if_then_else(or_(True, True), _if_then_else(True, 4, 51), _if_then_else(True, 0, -78)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(True, max_col_clue, max_col_clue)), or_(or_(False, True), True))))
and_(ge(_if_then_else(True, 4, zeros_diff_cols), compare_blocks_cols), and_(True, True))
or_(False, or_(True, False))
and_(False, False)
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
ge(1, _if_then_else(or_(or_(and_(False, True), and_(False, True)), le(_if_then_else(False, max_col_clue, 1), _if_then_else(True, compare_blocks_cols, compare_blocks_cols))), ones_diff_rows, -18))
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 1))), _if_then_else(and_(and_(True, True), or_(False, False)), _if_then_else(or_(True, True), _if_then_else(True, 4, max_row_clue), _if_then_else(True, 0, -78)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, 1)))), or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(True, max_col_clue, max_col_clue)), or_(or_(False, True), and_(False, True)))))
and_(ge(3, 4), False)
or_(or_(True, True), or_(or_(False, and_(le(max_row_clue, 0), True)), True))
and_(or_(False, False), or_(False, False))
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(add(ones_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
add(mul(mul(add(add(compare_blocks_rows, ones_diff_cols), add(7, compare_blocks_rows)), mul(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_rows, compare_blocks_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(add(add(add(mul(compare_blocks_rows, 66), add(ones_diff_cols, ones_diff_rows)), mul(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_cols))), add(add(add(ones_diff_cols, -41), mul(ones_diff_cols, compare_blocks_cols)), add(add(46, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_cols)))), ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
and_(le(3, compare_blocks_rows), le(max_row_clue, max_row_clue))
or_(and_(True, and_(ge(max_col_clue, ones_diff_cols), True)), or_(and_(le(_if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(False, ones_diff_rows, 3)), or_(or_(True, True), and_(True, False))), True))
ge(_if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(ge(compare_blocks_rows, _if_then_else(False, _if_then_else(False, compare_blocks_rows, zeros_diff_rows), 4)), 1, _if_then_else(False, _if_then_else(False, compare_blocks_cols, zeros_diff_rows), 4)))
ge(_if_then_else(le(4, _if_then_else(and_(or_(True, True), and_(False, False)), _if_then_else(True, 4, max_col_clue), max_row_clue)), _if_then_else(ge(compare_blocks_rows, 0), _if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(False, max_col_clue, max_col_clue)), _if_then_else(True, _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, max_row_clue, 0))), max_row_clue)
ge(ones_diff_rows, _if_then_else(or_(ge(1, _if_then_else(False, compare_blocks_cols, 3)), or_(True, ge(0, max_col_clue))), _if_then_else(le(0, -63), zeros_diff_rows, 64), _if_then_else(False, ones_diff_cols, 0)))
VAL TREES:
mul(mul(ones_diff_rows, mul(mul(add(-89, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), mul(mul(78, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_cols)))), mul(ones_diff_rows, zeros_diff_rows))
mul(add(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols))
mul(mul(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, 8)), add(mul(mul(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, compare_blocks_cols)), add(51, ones_diff_rows)))
add(mul(add(add(mul(ones_diff_cols, zeros_diff_rows), 2), add(add(ones_diff_rows, zeros_diff_cols), -64)), mul(zeros_diff_rows, -46)), mul(mul(ones_diff_cols, 48), add(compare_blocks_rows, zeros_diff_rows)))
add(add(add(mul(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_cols))), mul(mul(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows)), mul(mul(83, -28), mul(-88, zeros_diff_cols)))), add(mul(mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, -3)), mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, ones_diff_rows))), add(add(mul(ones_diff_cols, ones_diff_rows), mul(-67, ones_diff_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_cols)))))
mul(add(add(compare_blocks_cols, compare_blocks_rows), add(add(ones_diff_cols, compare_blocks_cols), zeros_diff_rows)), mul(ones_diff_rows, ones_diff_rows))
COND TREES:
ge(_if_then_else(or_(or_(and_(False, True), and_(False, True)), le(_if_then_else(False, max_col_clue, 1), _if_then_else(False, 0, max_col_clue))), _if_then_else(or_(le(0, compare_blocks_rows), or_(True, True)), _if_then_else(ge(ones_diff_rows, max_col_clue), _if_then_else(False, 95, compare_blocks_cols), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, 0, zeros_diff_cols))), _if_then_else(or_(or_(True, False), ge(zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(True, 1, 2), _if_then_else(True, zeros_diff_rows, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 1), _if_then_else(True, 1, _if_then_else(True, 3, 3))), le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 19))), _if_then_else(False, _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 0, 1)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, 4, max_row_clue))), _if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(_if_then_else(ge(_if_then_else(False, _if_then_else(False, compare_blocks_rows, 0), 1), 1), _if_then_else(True, _if_then_else(True, max_row_clue, 1), zeros_diff_rows), _if_then_else(False, -24, zeros_diff_cols)), 3), _if_then_else(False, 3, 3), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(ge(zeros_diff_cols, 2), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(True, 1, compare_blocks_rows)))))
le(_if_then_else(True, 1, -78), _if_then_else(ge(_if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, ones_diff_rows, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), _if_then_else(False, compare_blocks_cols, max_col_clue)), ones_diff_rows, 0))
or_(and_(or_(or_(True, True), or_(True, True)), False), or_(False, False))
and_(ge(_if_then_else(or_(and_(True, False), ge(compare_blocks_cols, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(False, _if_then_else(le(_if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, -9)), _if_then_else(ge(4, 90), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols))), _if_then_else(and_(ge(93, -38), and_(False, False)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(True, 2, zeros_diff_cols)), _if_then_else(ge(ones_diff_rows, zeros_diff_cols), _if_then_else(True, 2, 0), _if_then_else(False, 2, 4))), _if_then_else(le(_if_then_else(False, ones_diff_rows, 3), _if_then_else(True, zeros_diff_rows, 1)), _if_then_else(or_(True, True), _if_then_else(True, 3, 2), _if_then_else(False, ones_diff_cols, max_col_clue)), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_rows, max_col_clue), _if_then_else(False, 3, max_col_clue)))), ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 2, 2), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), _if_then_else(or_(or_(True, False), and_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, max_row_clue, 1), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(max_col_clue, 4), _if_then_else(True, ones_diff_cols, 0), _if_then_else(False, 95, ones_diff_rows)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, 3), _if_then_else(ge(compare_blocks_rows, 0), _if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(False, max_col_clue, max_col_clue))), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(-96, 3), _if_then_else(True, 2, ones_diff_cols), _if_then_else(False, 0, -87))), _if_then_else(ge(_if_then_else(False, -1, 3), _if_then_else(or_(True, True), 1, _if_then_else(and_(ge(1, 0), or_(True, True)), _if_then_else(ge(0, max_col_clue), _if_then_else(True, 0, 0), _if_then_else(True, 1, ones_diff_cols)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(False, compare_blocks_rows, zeros_diff_cols))))), _if_then_else(False, _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, max_col_clue, 99)))))
or_(le(_if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(True, ones_diff_cols, ones_diff_rows)), False)
VAL TREES:
add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows))
add(add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(-82, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))))
mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_cols, ones_diff_rows))
add(add(ones_diff_rows, 58), mul(ones_diff_cols, -22))
add(add(compare_blocks_rows, ones_diff_cols), add(add(compare_blocks_rows, compare_blocks_rows), mul(19, compare_blocks_cols)))
COND TREES:
ge(4, _if_then_else(False, ones_diff_rows, 0))
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(and_(False, True), _if_then_else(False, _if_then_else(le(_if_then_else(and_(False, False), compare_blocks_rows, ones_diff_cols), _if_then_else(False, 0, 0)), 1, _if_then_else(or_(True, False), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows))), ones_diff_cols), zeros_diff_cols)), _if_then_else(and_(False, and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False)))), ones_diff_rows, _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(zeros_diff_rows, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(True, max_col_clue, max_col_clue)), or_(or_(False, True), and_(False, True)))))
and_(False, True)
or_(or_(False, and_(le(max_row_clue, 0), True)), or_(True, False))
and_(or_(True, False), or_(False, False))
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
le(_if_then_else(True, _if_then_else(le(compare_blocks_rows, 4), _if_then_else(True, 1, _if_then_else(True, compare_blocks_cols, 4)), _if_then_else(True, ones_diff_rows, zeros_diff_rows)), 3), _if_then_else(or_(True, le(_if_then_else(ge(2, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, max_col_clue), 4), compare_blocks_rows)), 4, 1))
ge(1, _if_then_else(ge(compare_blocks_cols, zeros_diff_cols), _if_then_else(True, 1, ones_diff_cols), _if_then_else(True, max_row_clue, 4)))
le(_if_then_else(True, _if_then_else(True, zeros_diff_rows, ones_diff_rows), 4), _if_then_else(False, _if_then_else(ge(2, -69), compare_blocks_rows, zeros_diff_rows), _if_then_else(and_(True, False), _if_then_else(or_(True, True), _if_then_else(False, compare_blocks_cols, 1), zeros_diff_rows), _if_then_else(True, max_row_clue, 0))))
and_(False, le(1, ones_diff_cols))
or_(ge(_if_then_else(True, 4, _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(False, _if_then_else(False, 3, _if_then_else(False, 0, max_col_clue)), _if_then_else(False, 0, 0))), and_(and_(True, True), or_(False, False)))
VAL TREES:
mul(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols))
add(add(ones_diff_cols, zeros_diff_cols), add(91, zeros_diff_rows))
add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, mul(zeros_diff_cols, -23)))
mul(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, -72))
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(38, ones_diff_rows)))
add(add(mul(add(ones_diff_rows, ones_diff_rows), mul(-70, ones_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_cols, 4))), add(add(add(compare_blocks_rows, ones_diff_rows), add(-86, compare_blocks_rows)), mul(mul(-86, compare_blocks_cols), add(ones_diff_cols, zeros_diff_cols))))
COND TREES:
ge(2, _if_then_else(True, 1, _if_then_else(ge(_if_then_else(True, 4, max_col_clue), _if_then_else(True, compare_blocks_rows, _if_then_else(False, zeros_diff_rows, zeros_diff_rows))), 4, zeros_diff_rows)))
or_(ge(max_col_clue, ones_diff_cols), and_(False, True))
le(_if_then_else(or_(False, True), -82, ones_diff_rows), _if_then_else(True, -69, compare_blocks_cols))
ge(_if_then_else(True, zeros_diff_rows, 0), _if_then_else(False, _if_then_else(True, 0, max_row_clue), 1))
le(1, _if_then_else(True, 2, 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(1, _if_then_else(or_(or_(and_(False, False), and_(False, True)), le(_if_then_else(False, max_col_clue, 1), _if_then_else(True, compare_blocks_cols, compare_blocks_cols))), ones_diff_rows, -18))
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 1))), _if_then_else(and_(and_(True, True), or_(False, False)), _if_then_else(or_(True, True), _if_then_else(True, 4, max_row_clue), _if_then_else(True, 0, -78)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, 1)))), or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(True, max_col_clue, max_col_clue)), or_(or_(False, True), and_(False, True)))))
and_(ge(3, 4), False)
or_(or_(True, True), or_(True, True))
and_(or_(False, False), False)
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(add(ones_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
add(mul(mul(add(add(compare_blocks_rows, ones_diff_cols), add(7, compare_blocks_rows)), mul(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_rows, compare_blocks_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(add(add(add(mul(compare_blocks_rows, 66), add(ones_diff_cols, ones_diff_rows)), mul(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_cols))), add(add(add(ones_diff_cols, -41), mul(ones_diff_cols, compare_blocks_cols)), add(add(46, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_cols)))), ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
ge(_if_then_else(or_(or_(and_(False, True), and_(False, True)), le(_if_then_else(False, max_col_clue, 1), _if_then_else(False, 0, max_col_clue))), _if_then_else(or_(le(0, compare_blocks_rows), or_(False, True)), _if_then_else(ge(ones_diff_rows, max_col_clue), _if_then_else(False, 95, compare_blocks_cols), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(ge(zeros_diff_cols, compare_blocks_cols), _if_then_else(False, 0, max_col_clue), _if_then_else(False, 4, zeros_diff_rows)))), _if_then_else(or_(or_(True, False), ge(zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(True, 1, 2), _if_then_else(True, zeros_diff_rows, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 0), _if_then_else(True, 1, 2)), le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 19))), _if_then_else(or_(le(ones_diff_rows, zeros_diff_cols), False), _if_then_else(False, _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 0, 1)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, 4, max_row_clue))), _if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(ge(_if_then_else(and_(and_(True, False), and_(False, True)), _if_then_else(ge(3, 2), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(False, 0, 2)), _if_then_else(le(3, 0), _if_then_else(True, max_col_clue, 3), _if_then_else(True, 3, compare_blocks_cols))), _if_then_else(le(_if_then_else(False, max_col_clue, max_row_clue), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(max_col_clue, ones_diff_rows), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(ge(0, 1), _if_then_else(False, 0, 4), _if_then_else(False, 0, zeros_diff_rows)))), _if_then_else(ge(4, _if_then_else(ge(-76, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_rows), _if_then_else(False, max_col_clue, ones_diff_cols))), _if_then_else(or_(le(1, 3), ge(3, _if_then_else(ge(ones_diff_rows, 2), _if_then_else(True, _if_then_else(True, zeros_diff_cols, 0), _if_then_else(True, max_col_clue, zeros_diff_cols)), _if_then_else(False, 4, max_col_clue)))), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(False, 4, max_row_clue), _if_then_else(True, compare_blocks_rows, 47)), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_rows, -2), _if_then_else(False, max_col_clue, -31))), _if_then_else(ge(_if_then_else(True, -26, compare_blocks_cols), _if_then_else(False, 0, 4)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_cols, 44), _if_then_else(True, ones_diff_rows, 4)), _if_then_else(le(3, 2), _if_then_else(True, -14, ones_diff_cols), _if_then_else(True, 1, 4)))), _if_then_else(and_(ge(_if_then_else(True, 1, 3), _if_then_else(True, compare_blocks_cols, 2)), and_(and_(True, False), ge(1, 4))), _if_then_else(and_(le(compare_blocks_cols, compare_blocks_rows), le(compare_blocks_rows, 0)), _if_then_else(le(0, compare_blocks_cols), _if_then_else(True, ones_diff_cols, 1), _if_then_else(False, 0, ones_diff_cols)), _if_then_else(le(0, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 3, max_row_clue))), _if_then_else(ge(_if_then_else(False, max_col_clue, ones_diff_rows), _if_then_else(False, 1, ones_diff_rows)), _if_then_else(le(compare_blocks_rows, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, 1), _if_then_else(False, 1, zeros_diff_rows)), _if_then_else(or_(True, False), _if_then_else(True, max_col_clue, 0), _if_then_else(True, zeros_diff_rows, max_col_clue)))))), _if_then_else(le(ones_diff_rows, 3), _if_then_else(False, 3, 3), _if_then_else(True, 1, _if_then_else(and_(True, True), _if_then_else(True, 0, -65), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)))), _if_then_else(ge(zeros_diff_cols, 2), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(True, 1, compare_blocks_rows)))))
le(_if_then_else(False, _if_then_else(and_(and_(True, True), or_(and_(False, True), False)), _if_then_else(or_(True, True), _if_then_else(True, 4, 51), _if_then_else(True, 0, -78)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows))), _if_then_else(or_(and_(True, True), True), _if_then_else(and_(True, False), _if_then_else(or_(True, True), 0, max_col_clue), _if_then_else(and_(True, False), 0, compare_blocks_cols)), _if_then_else(True, _if_then_else(False, max_col_clue, compare_blocks_rows), zeros_diff_cols))), _if_then_else(ge(_if_then_else(False, 4, 4), _if_then_else(True, max_col_clue, -23)), ones_diff_rows, 4))
or_(and_(True, ge(_if_then_else(le(_if_then_else(False, 1, max_col_clue), _if_then_else(False, 4, compare_blocks_rows)), _if_then_else(and_(True, and_(True, False)), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(False, _if_then_else(True, compare_blocks_cols, -8), _if_then_else(True, 1, _if_then_else(and_(and_(and_(and_(False, True), and_(True, True)), and_(ge(0, zeros_diff_cols), ge(compare_blocks_rows, ones_diff_rows))), and_(and_(and_(True, False), or_(False, False)), or_(ge(1, ones_diff_cols), ge(compare_blocks_rows, compare_blocks_rows)))), _if_then_else(le(_if_then_else(or_(False, True), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(True, ones_diff_cols, max_row_clue)), _if_then_else(and_(False, True), _if_then_else(False, -74, ones_diff_cols), _if_then_else(False, zeros_diff_cols, compare_blocks_cols))), _if_then_else(le(_if_then_else(True, 3, 1), _if_then_else(True, compare_blocks_rows, zeros_diff_rows)), _if_then_else(le(compare_blocks_cols, 3), _if_then_else(False, max_row_clue, zeros_diff_rows), _if_then_else(False, _if_then_else(and_(False, False), _if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, -28, ones_diff_cols)), zeros_diff_cols)), _if_then_else(and_(False, False), _if_then_else(False, 2, 0), _if_then_else(True, max_col_clue, 72))), _if_then_else(le(_if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, 0)), _if_then_else(le(compare_blocks_cols, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, 3)), _if_then_else(le(4, 6), _if_then_else(False, zeros_diff_rows, max_row_clue), _if_then_else(False, zeros_diff_cols, 0)))), _if_then_else(ge(_if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 0), _if_then_else(True, ones_diff_rows, max_col_clue)), _if_then_else(le(compare_blocks_rows, max_col_clue), _if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(False, max_col_clue, ones_diff_cols))), _if_then_else(le(_if_then_else(False, zeros_diff_cols, 2), _if_then_else(False, compare_blocks_cols, max_row_clue)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(True, zeros_diff_rows, ones_diff_rows)), _if_then_else(ge(compare_blocks_rows, max_col_clue), _if_then_else(False, max_row_clue, 1), _if_then_else(False, 3, zeros_diff_rows))), _if_then_else(ge(_if_then_else(True, -25, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(True, 3, 4)), _if_then_else(le(compare_blocks_rows, max_col_clue), _if_then_else(False, max_row_clue, 0), _if_then_else(True, 4, max_col_clue)))))))), 0)), ge(compare_blocks_rows, compare_blocks_cols))
and_(ge(_if_then_else(or_(and_(True, False), ge(compare_blocks_cols, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, _if_then_else(ge(compare_blocks_rows, ones_diff_rows), _if_then_else(False, 3, ones_diff_rows), _if_then_else(True, compare_blocks_rows, ones_diff_cols))), _if_then_else(or_(True, True), _if_then_else(le(2, 1), _if_then_else(True, max_col_clue, compare_blocks_cols), _if_then_else(or_(False, False), compare_blocks_cols, _if_then_else(False, 0, 60))), _if_then_else(True, max_row_clue, zeros_diff_cols))), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 2, 2), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), _if_then_else(False, _if_then_else(and_(True, True), 0, _if_then_else(False, 3, ones_diff_cols)), _if_then_else(True, _if_then_else(True, ones_diff_cols, 0), _if_then_else(False, 95, ones_diff_rows)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, -99, 3)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(-96, 3), _if_then_else(True, 2, ones_diff_cols), _if_then_else(False, 0, -87))), _if_then_else(ge(_if_then_else(False, -1, 3), _if_then_else(True, 0, max_row_clue)), _if_then_else(ge(compare_blocks_rows, max_row_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, max_col_clue, 99)))))
or_(False, ge(zeros_diff_rows, _if_then_else(or_(ge(_if_then_else(False, -10, -45), _if_then_else(False, compare_blocks_cols, 3)), True), _if_then_else(ge(_if_then_else(False, ones_diff_rows, 1), _if_then_else(True, ones_diff_rows, 4)), _if_then_else(or_(False, True), _if_then_else(or_(False, False), max_col_clue, ones_diff_cols), _if_then_else(True, 4, 2)), _if_then_else(ge(3, 0), _if_then_else(True, max_row_clue, max_col_clue), _if_then_else(False, 3, 3))), _if_then_else(ge(_if_then_else(True, 0, ones_diff_cols), _if_then_else(True, 0, zeros_diff_rows)), _if_then_else(True, _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(False, ones_diff_cols, zeros_diff_rows)), _if_then_else(and_(False, False), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, 3, -93))))))
VAL TREES:
add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows))
add(add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(-82, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))))
mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_cols, ones_diff_rows))
add(add(ones_diff_rows, 58), mul(ones_diff_cols, -22))
add(add(compare_blocks_rows, ones_diff_cols), add(add(compare_blocks_rows, compare_blocks_rows), mul(19, compare_blocks_cols)))
COND TREES:
or_(True, ge(4, _if_then_else(and_(and_(True, True), False), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 0, 1))))
and_(or_(False, True), le(_if_then_else(False, compare_blocks_rows, zeros_diff_rows), 4))
or_(or_(and_(False, False), ge(_if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, compare_blocks_cols, 4))), True)
or_(or_(ge(compare_blocks_cols, compare_blocks_rows), ge(ones_diff_cols, 1)), and_(or_(True, True), ge(1, 0)))
le(_if_then_else(and_(ge(_if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 32, max_row_clue)), or_(or_(False, False), le(zeros_diff_rows, ones_diff_cols))), _if_then_else(le(_if_then_else(True, ones_diff_cols, 1), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 4, 4)), _if_then_else(and_(False, True), _if_then_else(False, 2, 0), _if_then_else(True, compare_blocks_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(False, 0, zeros_diff_cols), _if_then_else(False, 1, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, 1), _if_then_else(False, 3, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, compare_blocks_cols), _if_then_else(False, max_row_clue, ones_diff_rows)))), _if_then_else(or_(or_(and_(True, False), le(zeros_diff_cols, 0)), le(3, _if_then_else(True, 0, 3))), _if_then_else(le(_if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(and_(True, False), _if_then_else(True, 4, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(or_(or_(False, False), ge(4, zeros_diff_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 12), _if_then_else(False, 0, _if_then_else(True, 2, 4))), _if_then_else(le(3, zeros_diff_cols), _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, max_row_clue)))))
VAL TREES:
add(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, -27))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(93, add(compare_blocks_cols, compare_blocks_rows)))
mul(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(compare_blocks_cols, compare_blocks_cols), mul(86, 20))
add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, -88))
add(add(ones_diff_cols, compare_blocks_cols), add(-26, compare_blocks_cols))
COND TREES:
le(-18, 0)
ge(_if_then_else(ge(compare_blocks_cols, zeros_diff_cols), 1, -11), _if_then_else(ge(_if_then_else(and_(or_(False, True), ge(max_col_clue, zeros_diff_rows)), _if_then_else(le(-55, 3), _if_then_else(True, 0, max_row_clue), _if_then_else(True, zeros_diff_rows, 1)), _if_then_else(le(zeros_diff_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, -12, -3))), zeros_diff_cols), _if_then_else(True, 1, 0), _if_then_else(False, max_row_clue, 4)))
le(_if_then_else(True, _if_then_else(ge(_if_then_else(and_(or_(False, True), le(34, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(False, max_col_clue, -76), _if_then_else(True, max_col_clue, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, zeros_diff_cols, 1), _if_then_else(True, compare_blocks_rows, -20))), _if_then_else(ge(_if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, 18)), _if_then_else(le(max_col_clue, 1), _if_then_else(False, 92, 4), _if_then_else(False, zeros_diff_cols, 3)), _if_then_else(ge(zeros_diff_rows, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(False, 2, 2)))), 3, ones_diff_rows), 4), _if_then_else(False, _if_then_else(False, compare_blocks_cols, zeros_diff_rows), 4))
and_(True, or_(le(max_row_clue, _if_then_else(False, 3, zeros_diff_cols)), or_(le(3, ones_diff_rows), and_(False, False))))
or_(ge(_if_then_else(True, 4, _if_then_else(and_(and_(le(1, compare_blocks_rows), ge(3, 3)), ge(_if_then_else(True, 4, 4), _if_then_else(True, 84, 4))), max_col_clue, zeros_diff_cols)), _if_then_else(False, 3, _if_then_else(False, ones_diff_rows, max_col_clue))), and_(or_(False, False), or_(False, False)))
VAL TREES:
add(mul(ones_diff_rows, ones_diff_rows), add(mul(zeros_diff_rows, ones_diff_cols), ones_diff_cols))
add(add(ones_diff_cols, zeros_diff_cols), add(mul(zeros_diff_rows, -70), mul(zeros_diff_rows, mul(compare_blocks_rows, zeros_diff_cols))))
add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, mul(zeros_diff_cols, -23)))
mul(mul(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_cols, -50))
add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(add(compare_blocks_cols, zeros_diff_rows), mul(mul(mul(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), zeros_diff_rows), add(ones_diff_cols, ones_diff_cols))))
add(add(mul(add(ones_diff_rows, ones_diff_rows), mul(-70, add(mul(add(mul(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_rows, zeros_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_rows), mul(ones_diff_cols, 71))), add(mul(mul(-71, ones_diff_rows), add(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_cols)))))), mul(add(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_cols, 4))), add(add(add(compare_blocks_rows, ones_diff_rows), add(-86, compare_blocks_rows)), mul(mul(-86, compare_blocks_cols), add(ones_diff_cols, zeros_diff_cols))))
COND TREES:
ge(_if_then_else(or_(False, le(_if_then_else(False, max_col_clue, 1), _if_then_else(False, 0, max_col_clue))), max_col_clue, _if_then_else(or_(or_(True, False), ge(zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(True, 1, 2), _if_then_else(True, zeros_diff_rows, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 0), _if_then_else(True, 1, 2)), le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 19))), _if_then_else(or_(le(ones_diff_rows, zeros_diff_cols), and_(True, True)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 0, 1)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, 4, max_row_clue))), _if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(1, 3), _if_then_else(False, 3, 3), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(ge(zeros_diff_cols, 2), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(True, 1, compare_blocks_rows)))))
le(_if_then_else(False, zeros_diff_cols, 4), _if_then_else(ge(ones_diff_rows, _if_then_else(and_(True, True), compare_blocks_cols, max_col_clue)), ones_diff_rows, zeros_diff_cols))
le(_if_then_else(True, ones_diff_cols, ones_diff_cols), _if_then_else(and_(True, True), _if_then_else(True, _if_then_else(False, 3, max_col_clue), compare_blocks_rows), zeros_diff_cols))
and_(ge(_if_then_else(or_(and_(True, False), ge(compare_blocks_cols, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 2, 2), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), _if_then_else(or_(or_(True, False), and_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, max_row_clue, 1), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(max_col_clue, 4), _if_then_else(True, ones_diff_cols, 0), _if_then_else(False, 95, ones_diff_rows)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, -99, 3)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(-96, 3), _if_then_else(True, 2, ones_diff_cols), _if_then_else(False, _if_then_else(and_(False, True), _if_then_else(False, 3, ones_diff_cols), _if_then_else(False, ones_diff_cols, max_col_clue)), -87))), _if_then_else(ge(_if_then_else(False, -1, 3), _if_then_else(True, 1, max_row_clue)), _if_then_else(ge(compare_blocks_rows, max_row_clue), zeros_diff_rows, _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, max_col_clue, 99)))))
or_(True, ge(0, -10))
VAL TREES:
add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows))
add(add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(-82, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))))
mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_cols, ones_diff_rows))
add(add(ones_diff_rows, 58), mul(ones_diff_cols, -22))
add(add(compare_blocks_rows, ones_diff_cols), add(add(compare_blocks_rows, compare_blocks_rows), mul(19, compare_blocks_cols)))
COND TREES:
or_(or_(and_(True, True), or_(and_(True, or_(False, False)), False)), True)
and_(or_(False, or_(or_(or_(True, True), or_(True, True)), and_(True, ge(4, 12)))), le(ones_diff_rows, max_col_clue))
or_(False, True)
or_(or_(le(_if_then_else(ge(_if_then_else(and_(False, False), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, ones_diff_rows)), _if_then_else(ge(compare_blocks_rows, zeros_diff_rows), _if_then_else(True, max_row_clue, ones_diff_rows), _if_then_else(False, 1, max_row_clue))), _if_then_else(le(_if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(True, 0, 1)), _if_then_else(or_(True, True), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(True, max_row_clue, zeros_diff_rows)), _if_then_else(ge(-70, 2), _if_then_else(True, 96, ones_diff_cols), _if_then_else(False, -9, compare_blocks_rows))), _if_then_else(and_(ge(max_col_clue, compare_blocks_cols), ge(max_col_clue, 2)), _if_then_else(ge(-60, 0), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, max_row_clue, -74)), _if_then_else(ge(0, 90), _if_then_else(False, ones_diff_rows, max_col_clue), _if_then_else(False, compare_blocks_cols, max_col_clue)))), _if_then_else(le(_if_then_else(False, _if_then_else(False, 2, ones_diff_rows), _if_then_else(False, 4, 4)), _if_then_else(ge(4, 0), _if_then_else(True, ones_diff_cols, 52), _if_then_else(True, 2, ones_diff_cols))), _if_then_else(and_(and_(True, False), or_(False, True)), _if_then_else(or_(False, False), _if_then_else(False, max_col_clue, 3), _if_then_else(False, zeros_diff_cols, -6)), _if_then_else(and_(True, True), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(False, 76, 34))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, 0), _if_then_else(True, 1, ones_diff_cols)), _if_then_else(le(max_col_clue, 0), _if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, compare_blocks_cols, zeros_diff_rows)), _if_then_else(le(ones_diff_rows, ones_diff_cols), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(False, ones_diff_cols, 1))))), ge(ones_diff_cols, 0)), and_(or_(True, ge(compare_blocks_rows, ones_diff_cols)), True))
or_(False, False)
VAL TREES:
add(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, -27))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(93, add(compare_blocks_cols, compare_blocks_rows)))
mul(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(compare_blocks_cols, compare_blocks_cols), mul(86, 20))
add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, -88))
add(add(ones_diff_cols, compare_blocks_cols), add(-26, compare_blocks_cols))
COND TREES:
ge(_if_then_else(True, ones_diff_rows, zeros_diff_rows), _if_then_else(True, ones_diff_rows, -18))
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(and_(False, True), zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 1))), _if_then_else(and_(and_(True, True), or_(False, False)), _if_then_else(or_(True, True), _if_then_else(True, 4, 51), _if_then_else(True, 0, -78)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(or_(True, False), False))), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(True, max_col_clue, max_col_clue)), or_(or_(False, True), and_(False, True)))))
and_(ge(3, compare_blocks_cols), and_(True, False))
or_(True, and_(False, True))
and_(or_(False, le(ones_diff_rows, 2)), le(zeros_diff_cols, max_row_clue))
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
ge(2, _if_then_else(True, _if_then_else(False, 2, zeros_diff_rows), _if_then_else(False, 4, zeros_diff_rows)))
or_(ge(_if_then_else(ge(_if_then_else(False, _if_then_else(ge(_if_then_else(or_(and_(True, False), or_(False, False)), _if_then_else(le(zeros_diff_cols, ones_diff_rows), _if_then_else(False, zeros_diff_cols, 1), _if_then_else(False, compare_blocks_cols, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_rows, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, max_row_clue, compare_blocks_cols), _if_then_else(True, 2, zeros_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(True, ones_diff_cols, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, 2, 0), _if_then_else(False, zeros_diff_rows, 0)))), _if_then_else(and_(and_(ge(compare_blocks_rows, ones_diff_cols), and_(False, False)), le(_if_then_else(False, 0, 0), _if_then_else(True, 4, ones_diff_cols))), _if_then_else(and_(or_(True, True), or_(False, False)), _if_then_else(or_(True, True), _if_then_else(False, 3, 4), _if_then_else(True, -2, 1)), _if_then_else(and_(False, False), _if_then_else(True, 28, 3), _if_then_else(False, 1, zeros_diff_rows))), _if_then_else(ge(_if_then_else(False, compare_blocks_cols, 1), _if_then_else(True, zeros_diff_rows, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_cols, 9), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, max_col_clue, 4), _if_then_else(False, zeros_diff_rows, 0)))), _if_then_else(or_(le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, 3, ones_diff_rows)), le(_if_then_else(True, 53, max_col_clue), _if_then_else(False, 4, zeros_diff_rows))), _if_then_else(or_(and_(True, False), and_(False, False)), _if_then_else(le(0, 3), _if_then_else(False, 0, compare_blocks_cols), _if_then_else(False, 1, max_row_clue)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, 4, compare_blocks_cols), _if_then_else(False, 0, -81))), _if_then_else(or_(ge(0, ones_diff_cols), ge(1, 3)), _if_then_else(le(0, max_row_clue), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(True, ones_diff_rows, 51)), _if_then_else(or_(True, True), _if_then_else(True, ones_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4))))), 4), _if_then_else(False, compare_blocks_cols, 21)), _if_then_else(and_(True, False), _if_then_else(True, 74, 0), _if_then_else(True, ones_diff_rows, 3)), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, -45), _if_then_else(False, compare_blocks_rows, max_col_clue))), _if_then_else(ge(_if_then_else(False, 3, 1), _if_then_else(False, 2, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(True, 3, 0), _if_then_else(True, 3, 2)), _if_then_else(ge(compare_blocks_rows, 3), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, compare_blocks_rows)))), and_(False, True))
le(_if_then_else(False, -82, ones_diff_rows), _if_then_else(and_(ge(_if_then_else(False, compare_blocks_cols, max_col_clue), _if_then_else(True, 3, max_row_clue)), and_(ge(0, max_row_clue), le(3, zeros_diff_cols))), _if_then_else(and_(and_(True, False), ge(4, compare_blocks_rows)), _if_then_else(ge(0, ones_diff_rows), _if_then_else(False, 3, 2), _if_then_else(True, compare_blocks_rows, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, ones_diff_rows))), _if_then_else(or_(ge(zeros_diff_rows, 1), and_(True, True)), _if_then_else(or_(True, True), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(True, zeros_diff_rows, max_row_clue)), _if_then_else(or_(True, False), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, 0, 4)))))
ge(_if_then_else(False, zeros_diff_rows, 0), _if_then_else(True, _if_then_else(True, compare_blocks_rows, _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(False, _if_then_else(False, max_col_clue, max_row_clue), compare_blocks_rows), _if_then_else(ge(max_col_clue, compare_blocks_rows), 3, _if_then_else(True, compare_blocks_rows, max_col_clue)))), zeros_diff_rows))
le(1, _if_then_else(le(zeros_diff_cols, max_col_clue), _if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(False, 4, 24)))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(_if_then_else(or_(or_(and_(False, True), and_(False, True)), le(_if_then_else(False, max_col_clue, 1), compare_blocks_rows)), _if_then_else(or_(le(0, compare_blocks_rows), or_(False, True)), _if_then_else(ge(ones_diff_rows, max_col_clue), _if_then_else(False, 95, compare_blocks_cols), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(False, _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, 0, zeros_diff_cols))), _if_then_else(or_(or_(True, False), ge(zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(True, 1, 2), _if_then_else(True, zeros_diff_rows, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 1), _if_then_else(True, 1, 2)), le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 19))), _if_then_else(True, _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 0, 1)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, 4, max_row_clue))), _if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(1, 3), _if_then_else(False, 3, 3), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(ge(zeros_diff_cols, 2), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(True, 1, compare_blocks_rows)))))
le(_if_then_else(and_(True, ge(_if_then_else(le(_if_then_else(True, ones_diff_rows, zeros_diff_rows), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(True, zeros_diff_rows, max_col_clue)), _if_then_else(and_(True, True), _if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(ge(ones_diff_cols, ones_diff_rows), 4, -65))), _if_then_else(le(_if_then_else(False, 1, 0), _if_then_else(False, zeros_diff_cols, max_row_clue)), _if_then_else(ge(3, max_row_clue), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, True), _if_then_else(True, 3, 3), _if_then_else(False, compare_blocks_cols, -78))))), zeros_diff_cols, -78), _if_then_else(ge(ones_diff_rows, _if_then_else(False, compare_blocks_cols, max_col_clue)), ones_diff_rows, zeros_diff_cols))
or_(and_(or_(False, False), False), ge(compare_blocks_rows, _if_then_else(True, 0, -17)))
and_(ge(_if_then_else(or_(False, ge(compare_blocks_cols, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 2, 2), _if_then_else(or_(True, True), ones_diff_rows, zeros_diff_rows))), _if_then_else(or_(or_(True, False), and_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, max_row_clue, 1), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(max_col_clue, 4), _if_then_else(True, ones_diff_cols, 0), _if_then_else(False, 95, ones_diff_rows)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, 3), _if_then_else(ge(compare_blocks_rows, 0), _if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(False, max_col_clue, max_col_clue))), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(-96, 3), _if_then_else(True, 2, ones_diff_cols), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, -1, 3), _if_then_else(or_(True, True), 1, max_row_clue)), _if_then_else(ge(compare_blocks_rows, max_row_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, max_col_clue, 99)))))
or_(False, ge(_if_then_else(False, max_col_clue, 0), 2))
VAL TREES:
add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, add(add(mul(mul(add(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_cols))), mul(add(mul(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_rows, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)))), mul(mul(add(mul(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_rows)), add(mul(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_cols, zeros_diff_cols))), mul(mul(mul(compare_blocks_rows, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_rows)))))))
add(add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(add(compare_blocks_cols, zeros_diff_cols), add(-41, 37))), add(mul(-82, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))))
mul(mul(add(add(mul(mul(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, compare_blocks_cols), add(6, ones_diff_rows))), mul(mul(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, -26), mul(ones_diff_rows, compare_blocks_rows)))), mul(add(mul(add(compare_blocks_rows, -8), add(zeros_diff_rows, compare_blocks_cols)), mul(add(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows))), mul(add(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), add(add(compare_blocks_cols, zeros_diff_rows), add(82, zeros_diff_rows))))), zeros_diff_cols), add(zeros_diff_cols, ones_diff_rows))
add(add(ones_diff_rows, 58), mul(ones_diff_cols, -22))
add(add(compare_blocks_rows, ones_diff_cols), mul(mul(add(compare_blocks_rows, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(add(zeros_diff_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols))))
COND TREES:
ge(_if_then_else(True, ones_diff_rows, compare_blocks_cols), _if_then_else(True, ones_diff_rows, 4))
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), zeros_diff_cols, _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 1))), _if_then_else(and_(and_(True, True), or_(False, False)), _if_then_else(or_(True, True), _if_then_else(True, 4, 51), _if_then_else(True, 0, -78)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(True, max_col_clue, max_col_clue)), or_(or_(False, True), and_(False, and_(False, True))))))
and_(ge(-69, _if_then_else(True, compare_blocks_cols, 0)), False)
or_(or_(and_(True, False), True), False)
and_(or_(False, False), le(max_col_clue, 2))
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
ge(2, _if_then_else(True, 1, _if_then_else(ge(_if_then_else(False, 4, max_col_clue), _if_then_else(True, compare_blocks_rows, _if_then_else(False, zeros_diff_rows, zeros_diff_rows))), 2, zeros_diff_rows)))
or_(ge(max_col_clue, ones_diff_cols), True)
le(_if_then_else(or_(False, True), -82, ones_diff_rows), _if_then_else(True, 3, compare_blocks_cols))
ge(_if_then_else(True, zeros_diff_rows, 0), _if_then_else(True, _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), 0, max_row_clue), 1))
le(1, _if_then_else(True, 95, 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(2, _if_then_else(True, 1, _if_then_else(False, 4, compare_blocks_cols)))
or_(or_(False, and_(False, True)), False)
le(_if_then_else(False, ones_diff_cols, _if_then_else(or_(False, True), -82, ones_diff_rows)), _if_then_else(True, 4, compare_blocks_cols))
ge(_if_then_else(True, 4, 0), _if_then_else(or_(and_(True, False), ge(compare_blocks_cols, compare_blocks_rows)), 2, zeros_diff_rows))
le(1, _if_then_else(ge(_if_then_else(True, 4, _if_then_else(False, max_col_clue, max_col_clue)), _if_then_else(False, 3, 2)), 2, 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
add(add(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)), add(mul(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows)))
mul(mul(mul(zeros_diff_cols, mul(94, compare_blocks_rows)), mul(ones_diff_rows, zeros_diff_cols)), add(zeros_diff_rows, ones_diff_cols))
mul(add(mul(add(compare_blocks_cols, ones_diff_cols), add(38, ones_diff_rows)), compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(2, _if_then_else(True, 1, _if_then_else(ge(_if_then_else(False, 4, max_col_clue), _if_then_else(True, compare_blocks_rows, _if_then_else(False, zeros_diff_rows, zeros_diff_rows))), 4, zeros_diff_rows)))
or_(ge(max_col_clue, ones_diff_cols), and_(False, True))
le(ones_diff_rows, _if_then_else(True, -69, compare_blocks_cols))
ge(_if_then_else(True, zeros_diff_rows, 0), _if_then_else(True, _if_then_else(True, 0, max_row_clue), 1))
le(1, _if_then_else(True, _if_then_else(False, ones_diff_rows, max_col_clue), 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(zeros_diff_rows, zeros_diff_rows)
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), compare_blocks_rows), _if_then_else(and_(False, True), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, compare_blocks_cols, 1))), _if_then_else(and_(False, or_(False, False)), ones_diff_rows, _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(zeros_diff_rows, zeros_diff_rows), and_(True, False)), True), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(True, compare_blocks_cols, max_col_clue)), or_(or_(False, True), and_(False, True)))))
and_(ge(2, _if_then_else(True, -69, compare_blocks_cols)), True)
or_(or_(le(-84, 0), False), False)
and_(or_(True, False), True)
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
ge(_if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, ones_diff_rows, zeros_diff_rows))
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), 4), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(3, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, compare_blocks_cols, 1))), _if_then_else(and_(False, or_(False, False)), _if_then_else(or_(True, True), _if_then_else(True, 4, 51), _if_then_else(True, 0, -78)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(False, compare_blocks_cols, max_col_clue)), or_(or_(False, True), True))))
and_(ge(2, 2), True)
or_(or_(False, and_(le(_if_then_else(ge(3, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, max_col_clue), _if_then_else(False, zeros_diff_cols, 1)), max_col_clue), True)), or_(False, False))
and_(True, le(2, compare_blocks_rows))
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(add(mul(mul(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, 24), mul(compare_blocks_rows, ones_diff_cols))), zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, add(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows))))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(add(mul(mul(ones_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols)), add(mul(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), ones_diff_rows))
COND TREES:
ge(2, _if_then_else(True, _if_then_else(False, 2, zeros_diff_rows), _if_then_else(ge(ones_diff_rows, max_col_clue), 4, zeros_diff_rows)))
or_(True, and_(True, True))
le(_if_then_else(True, -82, ones_diff_rows), ones_diff_cols)
ge(_if_then_else(True, zeros_diff_rows, 0), _if_then_else(True, _if_then_else(False, compare_blocks_rows, zeros_diff_cols), zeros_diff_rows))
le(1, 2)
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
or_(le(max_row_clue, max_col_clue), and_(True, False))
and_(le(_if_then_else(ge(ones_diff_rows, _if_then_else(False, compare_blocks_cols, max_col_clue)), ones_diff_rows, zeros_diff_cols), _if_then_else(ge(max_row_clue, 0), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(ge(ones_diff_cols, ones_diff_rows), compare_blocks_rows, zeros_diff_cols))), or_(False, False))
and_(ge(-17, 4), False)
le(_if_then_else(ge(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(True, 4, 4), _if_then_else(False, 3, compare_blocks_rows)), _if_then_else(le(ones_diff_rows, max_col_clue), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(True, 4, ones_diff_cols))), _if_then_else(le(_if_then_else(False, ones_diff_cols, 3), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(3, 0), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 4, 4)), _if_then_else(ge(3, zeros_diff_rows), _if_then_else(True, 4, ones_diff_cols), _if_then_else(True, zeros_diff_cols, zeros_diff_rows))), _if_then_else(or_(and_(True, False), and_(False, False)), _if_then_else(and_(True, False), _if_then_else(False, 1, 0), _if_then_else(False, ones_diff_rows, 25)), _if_then_else(False, _if_then_else(True, max_col_clue, max_row_clue), _if_then_else(False, max_col_clue, 4)))), _if_then_else(or_(ge(_if_then_else(False, ones_diff_cols, max_col_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), and_(ge(compare_blocks_cols, 50), and_(True, False))), _if_then_else(and_(ge(max_row_clue, zeros_diff_rows), and_(False, True)), _if_then_else(le(ones_diff_rows, ones_diff_cols), _if_then_else(False, 3, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(ge(3, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, max_col_clue), _if_then_else(True, zeros_diff_cols, 1))), _if_then_else(ge(_if_then_else(False, 0, compare_blocks_rows), _if_then_else(False, 1, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, -48, max_col_clue), _if_then_else(False, 3, 3)), _if_then_else(and_(True, True), _if_then_else(True, 4, 2), _if_then_else(True, 59, max_row_clue)))))
and_(le(_if_then_else(False, 2, 4), compare_blocks_rows), False)
VAL TREES:
mul(mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), mul(add(ones_diff_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(add(compare_blocks_rows, zeros_diff_cols), mul(-22, zeros_diff_cols))
add(mul(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)), mul(mul(ones_diff_rows, -97), add(zeros_diff_rows, ones_diff_rows)))
add(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_rows))
mul(mul(add(ones_diff_rows, ones_diff_cols), 66), mul(zeros_diff_rows, -5))
mul(add(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)))
COND TREES:
ge(_if_then_else(or_(False, le(_if_then_else(False, max_col_clue, 1), _if_then_else(False, 0, max_col_clue))), _if_then_else(or_(le(0, compare_blocks_rows), or_(False, True)), _if_then_else(ge(ones_diff_rows, max_col_clue), _if_then_else(False, 95, compare_blocks_cols), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, 0, zeros_diff_cols))), _if_then_else(or_(False, ge(zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(ge(4, 4), zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(True, 1, 2), _if_then_else(True, zeros_diff_rows, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 0), _if_then_else(True, 1, 2)), le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 19))), _if_then_else(or_(le(ones_diff_rows, zeros_diff_cols), and_(True, True)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 0, 1)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, 4, max_row_clue))), _if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(1, 3), _if_then_else(False, 3, 3), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(ge(zeros_diff_cols, 2), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(True, 1, compare_blocks_rows)))))
le(_if_then_else(and_(False, True), zeros_diff_cols, 4), _if_then_else(ge(ones_diff_rows, zeros_diff_rows), ones_diff_rows, zeros_diff_cols))
or_(True, False)
and_(ge(_if_then_else(or_(and_(and_(ge(zeros_diff_cols, 23), and_(False, True)), False), ge(compare_blocks_cols, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 2, 2), _if_then_else(ge(4, 62), ones_diff_rows, zeros_diff_rows))), _if_then_else(or_(or_(True, False), and_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, max_row_clue, 1), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(max_col_clue, 4), _if_then_else(True, ones_diff_cols, 0), _if_then_else(False, 95, ones_diff_rows)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, -99, 3)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(-96, 3), _if_then_else(True, 2, ones_diff_cols), _if_then_else(False, 0, -87))), _if_then_else(ge(_if_then_else(False, -1, 3), _if_then_else(True, 1, max_row_clue)), _if_then_else(ge(compare_blocks_rows, max_row_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, max_col_clue, 99)))))
or_(and_(le(compare_blocks_cols, 0), True), ge(1, -10))
VAL TREES:
add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows))
add(add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(-82, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))))
mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_cols, ones_diff_rows))
add(add(ones_diff_rows, 58), mul(ones_diff_cols, -22))
add(add(compare_blocks_rows, ones_diff_cols), add(add(compare_blocks_rows, compare_blocks_rows), mul(19, compare_blocks_cols)))
COND TREES:
or_(ge(ones_diff_rows, max_col_clue), False)
and_(or_(False, True), le(_if_then_else(ge(ones_diff_cols, _if_then_else(and_(True, True), compare_blocks_cols, max_col_clue)), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(False, max_row_clue, 1)), 4))
or_(True, and_(False, True))
or_(or_(and_(False, False), ge(ones_diff_cols, 0)), ge(3, max_col_clue))
le(_if_then_else(and_(ge(_if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, 32, max_row_clue)), or_(or_(False, False), le(zeros_diff_rows, ones_diff_cols))), _if_then_else(le(_if_then_else(True, ones_diff_cols, 1), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 4, 4)), _if_then_else(and_(False, True), _if_then_else(False, 2, 0), _if_then_else(True, compare_blocks_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(False, 0, zeros_diff_cols), _if_then_else(False, 1, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, 1), _if_then_else(False, 3, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, compare_blocks_cols), _if_then_else(False, max_row_clue, ones_diff_rows)))), _if_then_else(or_(or_(and_(True, False), le(zeros_diff_cols, 0)), le(4, _if_then_else(True, 0, 3))), _if_then_else(le(_if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(and_(True, False), _if_then_else(True, 4, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(or_(or_(False, False), ge(4, zeros_diff_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 12), _if_then_else(False, 0, 2)), _if_then_else(le(3, zeros_diff_cols), _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, max_row_clue)))))
VAL TREES:
add(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, -27))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(93, add(compare_blocks_cols, compare_blocks_rows)))
mul(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(compare_blocks_cols, compare_blocks_cols), mul(86, 20))
add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, -88))
add(add(ones_diff_cols, compare_blocks_cols), add(-26, compare_blocks_cols))
COND TREES:
ge(_if_then_else(ge(ones_diff_rows, max_row_clue), compare_blocks_rows, max_row_clue), _if_then_else(False, ones_diff_rows, 0))
and_(ge(_if_then_else(ge(_if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, compare_blocks_cols, 1))), _if_then_else(and_(False, or_(False, False)), _if_then_else(or_(True, True), _if_then_else(True, 4, 51), _if_then_else(True, 0, -78)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)))), or_(and_(or_(le(1, zeros_diff_rows), and_(True, False)), or_(and_(False, False), or_(True, False))), and_(ge(_if_then_else(False, -23, ones_diff_cols), _if_then_else(True, max_col_clue, max_col_clue)), or_(or_(False, True), True))))
and_(ge(_if_then_else(True, 4, zeros_diff_cols), compare_blocks_cols), and_(True, True))
or_(or_(False, and_(le(max_row_clue, 0), True)), or_(True, False))
and_(or_(False, False), False)
VAL TREES:
mul(mul(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_cols)))
add(mul(compare_blocks_cols, zeros_diff_rows), add(-76, ones_diff_rows))
add(mul(add(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, -25)))), add(add(add(mul(compare_blocks_rows, -19), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))))
add(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, mul(compare_blocks_cols, -100)))
mul(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, 82))), mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))))
mul(mul(compare_blocks_cols, 64), mul(zeros_diff_rows, ones_diff_rows))
COND TREES:
or_(ge(max_row_clue, 0), le(zeros_diff_rows, 64))
or_(ge(_if_then_else(or_(False, True), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(and_(True, False), max_col_clue, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, 3, 2))), and_(True, True))
le(_if_then_else(False, -82, ones_diff_rows), _if_then_else(True, -69, 4))
ge(ones_diff_cols, _if_then_else(False, 2, zeros_diff_rows))
le(_if_then_else(True, _if_then_else(True, max_row_clue, -3), _if_then_else(True, 0, 83)), _if_then_else(False, 2, 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(_if_then_else(or_(False, le(_if_then_else(False, max_col_clue, 1), _if_then_else(False, 0, max_col_clue))), _if_then_else(or_(le(0, compare_blocks_rows), or_(False, True)), _if_then_else(ge(ones_diff_rows, max_col_clue), _if_then_else(False, 95, compare_blocks_cols), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, 0, zeros_diff_cols))), _if_then_else(or_(False, ge(zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 0, 0)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(True, 1, 2), _if_then_else(True, zeros_diff_rows, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 0), _if_then_else(True, 1, 2)), le(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 19))), _if_then_else(or_(le(ones_diff_rows, zeros_diff_cols), and_(True, True)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 0, 1)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, 4, max_row_clue))), _if_then_else(ge(_if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(1, 3), _if_then_else(False, 3, 3), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(ge(_if_then_else(False, 2, compare_blocks_cols), 2), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(True, 1, compare_blocks_rows)))))
le(_if_then_else(and_(False, True), zeros_diff_cols, 4), _if_then_else(ge(ones_diff_rows, _if_then_else(and_(True, True), compare_blocks_cols, max_col_clue)), ones_diff_rows, zeros_diff_cols))
or_(and_(False, True), True)
and_(ge(_if_then_else(or_(and_(and_(ge(zeros_diff_cols, 23), and_(False, True)), False), ge(compare_blocks_cols, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(and_(False, le(4, compare_blocks_cols)), 2, 2), _if_then_else(ge(4, 62), ones_diff_rows, zeros_diff_rows))), _if_then_else(or_(or_(True, False), and_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, max_row_clue, 1), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(max_col_clue, 4), _if_then_else(True, ones_diff_cols, 0), _if_then_else(False, 95, ones_diff_rows)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, -99, 3)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(-96, 3), _if_then_else(True, 2, ones_diff_cols), _if_then_else(False, 0, -87))), _if_then_else(ge(_if_then_else(False, -1, 3), _if_then_else(True, 1, max_row_clue)), _if_then_else(ge(compare_blocks_rows, max_row_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, max_col_clue, 99)))))
or_(and_(le(compare_blocks_cols, 0), True), False)
VAL TREES:
add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols))
mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows))
add(add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(-82, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))))
mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_cols, ones_diff_rows))
add(add(ones_diff_rows, 58), mul(ones_diff_cols, -22))
add(add(compare_blocks_rows, ones_diff_cols), add(add(compare_blocks_rows, compare_blocks_rows), mul(19, compare_blocks_cols)))
COND TREES:
or_(le(_if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, compare_blocks_rows)), _if_then_else(ge(max_row_clue, zeros_diff_cols), _if_then_else(True, 2, 4), _if_then_else(True, zeros_diff_cols, 4))), ge(_if_then_else(True, max_col_clue, zeros_diff_cols), 4))
and_(or_(or_(and_(and_(False, False), False), le(_if_then_else(False, max_col_clue, _if_then_else(False, max_row_clue, max_row_clue)), 25)), True), le(compare_blocks_cols, _if_then_else(False, zeros_diff_cols, 3)))
or_(False, ge(_if_then_else(le(2, zeros_diff_cols), _if_then_else(True, 1, ones_diff_rows), _if_then_else(False, zeros_diff_rows, ones_diff_rows)), _if_then_else(le(zeros_diff_cols, 1), _if_then_else(False, ones_diff_rows, 40), _if_then_else(True, compare_blocks_rows, 2))))
or_(or_(and_(False, False), ge(ones_diff_cols, 0)), or_(ge(_if_then_else(and_(True, True), ones_diff_rows, 3), 0), and_(True, False)))
or_(False, ge(_if_then_else(ge(8, 1), _if_then_else(True, ones_diff_cols, 4), _if_then_else(True, ones_diff_cols, max_row_clue)), -10))
VAL TREES:
add(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, -27))
mul(mul(zeros_diff_cols, compare_blocks_rows), mul(93, add(compare_blocks_cols, compare_blocks_rows)))
mul(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(compare_blocks_cols, compare_blocks_cols), mul(86, 20))
add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, -88))
add(add(ones_diff_cols, compare_blocks_cols), add(-26, compare_blocks_cols))
COND TREES:
ge(2, _if_then_else(ge(_if_then_else(or_(ge(max_row_clue, compare_blocks_rows), True), _if_then_else(or_(True, True), _if_then_else(True, 0, zeros_diff_rows), _if_then_else(True, ones_diff_rows, zeros_diff_rows)), _if_then_else(or_(True, ge(_if_then_else(False, 0, ones_diff_rows), _if_then_else(True, compare_blocks_rows, _if_then_else(True, 2, zeros_diff_cols)))), _if_then_else(False, max_row_clue, compare_blocks_rows), _if_then_else(False, -42, 4))), _if_then_else(or_(le(compare_blocks_rows, 4), le(compare_blocks_cols, max_col_clue)), _if_then_else(ge(2, compare_blocks_cols), _if_then_else(False, 2, max_col_clue), _if_then_else(True, zeros_diff_rows, 0)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 4, ones_diff_rows)))), 1, _if_then_else(False, 4, zeros_diff_rows)))
or_(ge(_if_then_else(or_(ge(zeros_diff_cols, ones_diff_rows), le(4, 2)), _if_then_else(or_(False, False), _if_then_else(True, max_col_clue, 4), _if_then_else(True, max_row_clue, zeros_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(True, 0, max_row_clue))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, 49, 3), _if_then_else(True, zeros_diff_cols, compare_blocks_cols)), _if_then_else(le(max_col_clue, 3), _if_then_else(False, 2, zeros_diff_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_cols)))), or_(and_(or_(or_(False, False), ge(2, 1)), and_(le(ones_diff_rows, 0), ge(0, 2))), and_(le(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, 1, 1)), or_(True, or_(False, False)))))
le(_if_then_else(False, -82, ones_diff_rows), _if_then_else(True, _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, zeros_diff_cols, ones_diff_cols)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(True, 1, 4)), _if_then_else(ge(ones_diff_rows, 3), _if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(True, 2, zeros_diff_cols))), compare_blocks_cols))
ge(_if_then_else(True, zeros_diff_rows, 0), _if_then_else(True, _if_then_else(False, 0, max_row_clue), zeros_diff_rows))
le(1, _if_then_else(True, zeros_diff_rows, _if_then_else(and_(and_(True, True), or_(True, False)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(True, max_col_clue, 0)), _if_then_else(or_(False, True), _if_then_else(False, max_row_clue, max_row_clue), _if_then_else(False, ones_diff_cols, 1)))))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))
COND TREES:
ge(2, _if_then_else(ge(_if_then_else(True, ones_diff_rows, _if_then_else(False, 2, compare_blocks_cols)), max_col_clue), 1, _if_then_else(False, 4, zeros_diff_rows)))
or_(True, True)
le(_if_then_else(False, -82, ones_diff_rows), _if_then_else(True, _if_then_else(True, 1, 0), compare_blocks_cols))
ge(_if_then_else(False, 0, ones_diff_cols), compare_blocks_cols)
le(1, _if_then_else(or_(False, True), _if_then_else(False, 2, _if_then_else(False, compare_blocks_cols, 0)), 4))
VAL TREES:
add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows))
mul(add(mul(mul(zeros_diff_rows, -59), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), add(add(add(-49, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, 93), mul(zeros_diff_cols, 18))))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), add(mul(3, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(add(compare_blocks_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols))
mul(mul(ones_diff_cols, -38), add(zeros_diff_rows, ones_diff_cols))
mul(add(-82, compare_blocks_rows), add(66, ones_diff_rows))


INFO:root:hof: COND TREES:
le(_if_then_else(True, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, _if_then_else(True, max_row_clue, 3), max_col_clue))
or_(ge(_if_then_else(True, max_col_clue, 2), _if_then_else(False, compare_blocks_rows, 2)), and_(ge(zeros_diff_cols, zeros_diff_rows), ge(1, 1)))
or_(le(0, ones_diff_rows), or_(False, False))
and_(ge(_if_then_else(False, 3, 2), _if_then_else(False, ones_diff_cols, max_row_clue)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, max_col_clue, max_row_clue)))
and_(le(4, 3), or_(False, True))
VAL TREES:
mul(add(mul(add(-96, ones_diff_rows), ones_diff_cols), add(mul(ones_diff_cols, zeros_diff_rows), zeros_diff_rows)), mul(compare_blocks_rows, compare_blocks_cols))
mul(mul(mul(mul(mul(49, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_rows)), add(add(zeros_diff_rows, ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols))), add(mul(add(ones_diff_cols, -28), mul(-85, zeros_diff_rows)), mul(mul(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_rows)))), mul(add(add(mul(ones_diff_rows, compare_blocks_cols), mul(-15, ones_diff_rows)), add(mul(zeros_diff_rows, -11), mul(compare_blocks_cols, ones_diff_cols))), add(add(add(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_rows, zeros_diff_cols)))))
mul(mul(mul(add(mul(zeros_diff_rows, ones_diff_rows), mul(zeros_diff_rows, 71)), mul(mul(ones_diff_cols, -74), mul(-94, compare_blocks_cols))), mul(add(add(66, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), mul(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_rows)))), mul(mul(mul(add(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_rows, -65)), add(mul(99, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_rows))), mul(mul(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_rows), mul(71, compare_blocks_rows)))))
add(add(ones_diff_cols, -11), add(compare_blocks_cols, zeros_diff_cols))
mul(mul(-6, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols))
mul(add(mul(mul(compare_blocks_cols, ones_diff_rows), add(zeros_diff_cols, compare_blocks_rows)), mul(add(ones_diff_cols, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols))), mul(mul(mul(ones_diff_rows, compare_blocks_cols), add(zeros_diff_rows, ones_diff_cols)), add(mul(ones_diff_cols, 61), mul(ones_diff_rows, -98))))


INFO:root:stats: {'fitness': <deap.tools.support.Statistics object at 0x000001F8D22467F0>, 'size': <deap.tools.support.Statistics object at 0x000001F8D2246828>}

