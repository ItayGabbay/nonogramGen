INFO:root:

*******STARTING!!!******


INFO:root:

*******Configuration******


INFO:root:# NUM_ROWS = 20


INFO:root:NUM_ROWS = 5


INFO:root:# NUM_COLS = 20


INFO:root:NUM_COLS = 5


INFO:root:empty_in_split = '\xa0'


INFO:root:convert_to_sat = True


INFO:root:pickle_unsolved_file_path = 'data/%dx%d_nonograms.pkl' % (NUM_ROWS, NUM_COLS)


INFO:root:pickle_solved_file_path = 'data/%dx%d_nonograms_solved.pkl' % (NUM_ROWS, NUM_COLS)


INFO:root:pickle_row_options_path = 'data/%dx%d_row_options.pkl' % (NUM_ROWS, NUM_ROWS)


INFO:root:should_run_in_parallel = False


INFO:root:print_individual_fitness = False


INFO:root:


INFO:root:NUM_COND_TREES = 5


INFO:root:NUM_VAL_TREES = NUM_COND_TREES + 1


INFO:root:prob_crossover_global = 0.7  # global probability for cx


INFO:root:prob_crossover_individual_cond = 0.8  # probability to cx a specific cond tree in an individual


INFO:root:prob_crossover_individual_val = 0.8  # probability to cx a specific cond tree in an individual


INFO:root:prob_mutate_global = 0.3


INFO:root:prob_mutate_individual_cond = 0.7


INFO:root:prob_mutate_individual_val = 0.7


INFO:root:


INFO:root:points_correct_box = 5


INFO:root:points_incorrect_box = 0


INFO:root:# points_incorrect_box = -2


INFO:root:pop_size = 1


INFO:root:hof_size = 1


INFO:root:# num_gen = 40


INFO:root:num_gen = 10


INFO:root:train_size = 1


INFO:root:

*******DONE!!!******


INFO:root:run time: 0 sec

INFO:root:max possible fitness for the nonograms ran: %d

INFO:root:log:    	      	              fitness              	                size               
   	      	-----------------------------------	-----------------------------------
gen	nevals	avg  	max  	min  	size	std	avg	max	min	size	std
0  	1     	0.656	0.656	0.656	1   	0  	5  	5  	5  	1   	0  
1  	0     	0.656	0.656	0.656	1   	0  	5  	5  	5  	1   	0  
2  	0     	0.656	0.656	0.656	1   	0  	5  	5  	5  	1   	0  
3  	1     	0.656	0.656	0.656	1   	0  	5  	5  	5  	1   	0  
4  	0     	0.656	0.656	0.656	1   	0  	5  	5  	5  	1   	0  
5  	0     	0.656	0.656	0.656	1   	0  	5  	5  	5  	1   	0  
6  	0     	0.656	0.656	0.656	1   	0  	5  	5  	5  	1   	0  
7  	0     	0.656	0.656	0.656	1   	0  	5  	5  	5  	1   	0  
8  	0     	0.656	0.656	0.656	1   	0  	5  	5  	5  	1   	0  
9  	1     	0.656	0.656	0.656	1   	0  	6  	6  	6  	1   	0  
10 	0     	0.656	0.656	0.656	1   	0  	6  	6  	6  	1   	0  

INFO:root:pop: COND TREES:
or_(False, False)
and_(or_(or_(le(compare_blocks_cols, ones_diff_cols), ge(0, zeros_diff_rows)), or_(ge(zeros_diff_rows, 1), and_(False, True))), and_(ge(_if_then_else(False, max_col_clue, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 2)), and_(le(4, compare_blocks_rows), and_(False, False))))
or_(False, False)
le(_if_then_else(ge(_if_then_else(and_(and_(ge(ones_diff_rows, max_row_clue), le(ones_diff_rows, max_col_clue)), or_(le(ones_diff_rows, zeros_diff_rows), and_(True, True))), _if_then_else(or_(ge(max_col_clue, compare_blocks_cols), and_(False, False)), _if_then_else(and_(False, False), _if_then_else(False, 4, 1), _if_then_else(True, compare_blocks_cols, zeros_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, -62, compare_blocks_cols), _if_then_else(False, 3, 2))), _if_then_else(ge(_if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(False, 1, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(True, ones_diff_cols, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, 0)), _if_then_else(le(-57, ones_diff_rows), _if_then_else(True, compare_blocks_rows, 4), _if_then_else(False, 4, 4)))), _if_then_else(and_(ge(_if_then_else(True, 4, 1), _if_then_else(True, 1, ones_diff_rows)), le(_if_then_else(True, 3, 3), _if_then_else(False, -12, max_col_clue))), _if_then_else(le(_if_then_else(False, ones_diff_rows, 1), _if_then_else(False, -9, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 1), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, max_row_clue, 4)), _if_then_else(or_(True, True), _if_then_else(True, 3, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), _if_then_else(or_(le(2, max_col_clue), and_(True, True)), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, ones_diff_rows, 3)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, 3), _if_then_else(False, max_col_clue, max_row_clue))))), _if_then_else(le(_if_then_else(or_(or_(False, True), and_(False, False)), _if_then_else(ge(compare_blocks_rows, 2), _if_then_else(True, 0, ones_diff_cols), _if_then_else(False, 1, max_row_clue)), _if_then_else(le(max_col_clue, compare_blocks_rows), _if_then_else(True, ones_diff_cols, 3), _if_then_else(True, 0, zeros_diff_cols))), _if_then_else(and_(and_(True, True), and_(False, False)), _if_then_else(and_(False, False), _if_then_else(False, 4, 4), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), _if_then_else(False, max_col_clue, 76), _if_then_else(False, 1, zeros_diff_cols)))), _if_then_else(le(_if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(False, max_row_clue, 1), _if_then_else(True, ones_diff_rows, max_col_clue)), _if_then_else(or_(True, False), _if_then_else(True, 2, zeros_diff_cols), _if_then_else(True, 3, ones_diff_rows))), _if_then_else(le(_if_then_else(True, 4, max_row_clue), _if_then_else(True, 1, zeros_diff_cols)), _if_then_else(ge(1, 4), _if_then_else(False, 1, -74), _if_then_else(True, ones_diff_rows, max_row_clue)), _if_then_else(ge(max_col_clue, ones_diff_rows), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 0, 32))), _if_then_else(ge(_if_then_else(True, 2, compare_blocks_cols), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(le(zeros_diff_cols, 2), _if_then_else(True, -73, 3), _if_then_else(True, 4, compare_blocks_cols)), _if_then_else(le(compare_blocks_rows, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols), _if_then_else(False, 2, 0)))), _if_then_else(ge(_if_then_else(or_(False, False), _if_then_else(False, 4, 4), _if_then_else(False, 10, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, -61))), _if_then_else(le(_if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(ge(max_row_clue, 1), _if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, 2)), _if_then_else(ge(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, max_row_clue, -91), _if_then_else(False, ones_diff_rows, max_row_clue))), _if_then_else(le(_if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(True, ones_diff_cols, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(False, 3, ones_diff_rows), _if_then_else(True, 0, compare_blocks_rows)), _if_then_else(le(3, zeros_diff_cols), _if_then_else(False, 1, 43), _if_then_else(False, 1, ones_diff_rows))))), _if_then_else(or_(and_(or_(and_(False, False), ge(ones_diff_cols, 0)), or_(le(max_row_clue, ones_diff_cols), le(zeros_diff_cols, compare_blocks_rows))), ge(_if_then_else(and_(True, False), _if_then_else(False, 59, -22), _if_then_else(True, 4, ones_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, compare_blocks_rows, 0), _if_then_else(True, zeros_diff_cols, ones_diff_rows)))), _if_then_else(or_(or_(or_(True, True), le(4, 2)), and_(or_(False, False), or_(False, False))), _if_then_else(or_(or_(False, False), ge(3, 4)), _if_then_else(and_(True, False), _if_then_else(False, 3, 0), _if_then_else(True, 1, 0)), _if_then_else(or_(True, False), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(False, 0, 4))), _if_then_else(ge(_if_then_else(True, 2, max_row_clue), _if_then_else(True, compare_blocks_cols, max_col_clue)), _if_then_else(ge(zeros_diff_rows, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, 64, 4)), _if_then_else(ge(max_col_clue, 3), _if_then_else(False, 4, max_row_clue), _if_then_else(False, 35, max_col_clue)))), _if_then_else(or_(le(_if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_cols, 2)), ge(_if_then_else(False, 0, ones_diff_rows), _if_then_else(True, zeros_diff_rows, compare_blocks_rows))), _if_then_else(and_(ge(3, zeros_diff_rows), and_(False, False)), _if_then_else(le(zeros_diff_rows, max_row_clue), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, 3)), _if_then_else(ge(4, ones_diff_rows), _if_then_else(True, compare_blocks_cols, -7), _if_then_else(False, 2, zeros_diff_rows))), _if_then_else(and_(ge(compare_blocks_rows, 0), ge(0, max_col_clue)), _if_then_else(or_(False, True), _if_then_else(False, 59, 0), _if_then_else(True, max_row_clue, 4)), _if_then_else(ge(ones_diff_cols, 4), _if_then_else(True, 3, 2), _if_then_else(True, 3, 1)))))), _if_then_else(ge(_if_then_else(ge(_if_then_else(or_(False, True), _if_then_else(False, 3, compare_blocks_cols), _if_then_else(True, compare_blocks_cols, zeros_diff_cols)), _if_then_else(ge(3, max_col_clue), _if_then_else(False, ones_diff_cols, compare_blocks_cols), _if_then_else(False, ones_diff_rows, ones_diff_rows))), _if_then_else(and_(and_(False, False), and_(False, True)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, 0, zeros_diff_cols)), _if_then_else(le(zeros_diff_rows, 0), _if_then_else(True, 1, ones_diff_rows), _if_then_else(False, 0, max_col_clue))), _if_then_else(and_(and_(False, False), ge(max_col_clue, -98)), _if_then_else(le(1, max_col_clue), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, 2)), _if_then_else(le(ones_diff_rows, ones_diff_cols), _if_then_else(True, 1, compare_blocks_rows), _if_then_else(False, 3, max_row_clue)))), _if_then_else(or_(and_(le(2, zeros_diff_rows), and_(False, True)), le(_if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, ones_diff_rows, max_row_clue))), _if_then_else(or_(le(2, zeros_diff_cols), ge(zeros_diff_rows, 2)), _if_then_else(ge(zeros_diff_cols, 0), _if_then_else(False, compare_blocks_cols, 30), _if_then_else(True, ones_diff_cols, zeros_diff_rows)), _if_then_else(le(81, zeros_diff_cols), _if_then_else(True, -6, zeros_diff_cols), _if_then_else(False, max_row_clue, ones_diff_cols))), _if_then_else(and_(le(compare_blocks_cols, 2), or_(True, False)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(True, compare_blocks_rows, 2)), _if_then_else(ge(zeros_diff_rows, compare_blocks_cols), _if_then_else(True, ones_diff_rows, ones_diff_rows), _if_then_else(False, 3, 2))))), _if_then_else(le(_if_then_else(or_(or_(True, False), ge(compare_blocks_rows, max_row_clue)), _if_then_else(ge(zeros_diff_rows, 0), _if_then_else(True, compare_blocks_rows, 0), _if_then_else(True, 3, compare_blocks_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(False, max_col_clue, ones_diff_cols))), _if_then_else(and_(or_(False, True), ge(compare_blocks_cols, zeros_diff_cols)), _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, max_col_clue, -1), _if_then_else(True, zeros_diff_cols, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, compare_blocks_cols, max_col_clue)))), _if_then_else(or_(le(_if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(False, max_row_clue, zeros_diff_rows)), ge(_if_then_else(True, 60, ones_diff_rows), _if_then_else(False, 53, ones_diff_cols))), _if_then_else(and_(and_(True, False), or_(False, False)), _if_then_else(or_(False, False), _if_then_else(True, -67, ones_diff_cols), _if_then_else(False, zeros_diff_rows, ones_diff_cols)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(False, 3, compare_blocks_cols), _if_then_else(True, max_col_clue, compare_blocks_cols))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, 2), _if_then_else(False, zeros_diff_cols, 4)), _if_then_else(or_(False, False), _if_then_else(True, compare_blocks_rows, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, max_row_clue, -55), _if_then_else(True, max_col_clue, 4)))), _if_then_else(and_(or_(and_(False, True), and_(True, False)), or_(or_(True, False), and_(True, True))), _if_then_else(ge(_if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(False, ones_diff_cols, 3)), _if_then_else(or_(True, False), _if_then_else(True, max_row_clue, 4), _if_then_else(True, -78, compare_blocks_rows)), _if_then_else(le(2, 42), _if_then_else(True, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 1))), _if_then_else(le(_if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, ones_diff_cols, zeros_diff_cols)), _if_then_else(le(max_col_clue, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, 1), _if_then_else(True, 53, zeros_diff_cols)), _if_then_else(ge(zeros_diff_cols, 2), _if_then_else(False, 1, 4), _if_then_else(True, 0, 4))))), _if_then_else(ge(_if_then_else(or_(or_(True, False), le(zeros_diff_rows, ones_diff_cols)), _if_then_else(le(3, -43), _if_then_else(False, compare_blocks_rows, -30), _if_then_else(True, zeros_diff_cols, 1)), _if_then_else(le(4, 1), _if_then_else(False, max_row_clue, 87), _if_then_else(True, zeros_diff_rows, compare_blocks_rows))), _if_then_else(and_(le(0, max_row_clue), ge(ones_diff_cols, max_col_clue)), _if_then_else(and_(True, True), _if_then_else(False, 3, compare_blocks_cols), _if_then_else(True, max_row_clue, 0)), _if_then_else(ge(1, compare_blocks_cols), _if_then_else(True, 2, 4), _if_then_else(True, ones_diff_rows, zeros_diff_rows)))), _if_then_else(le(_if_then_else(or_(True, True), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(False, 4, 4)), _if_then_else(le(3, 4), _if_then_else(False, max_row_clue, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, 3))), _if_then_else(ge(_if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(True, ones_diff_rows, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(True, max_col_clue, 3), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(or_(and_(False, True), ge(4, 1)), _if_then_else(and_(True, False), _if_then_else(False, 4, 3), _if_then_else(False, zeros_diff_rows, 0)), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(True, -83, 0)))), _if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(True, zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, 3), _if_then_else(False, ones_diff_rows, compare_blocks_cols))), _if_then_else(le(_if_then_else(False, ones_diff_cols, max_row_clue), _if_then_else(False, zeros_diff_rows, ones_diff_cols)), _if_then_else(le(zeros_diff_rows, compare_blocks_cols), _if_then_else(True, compare_blocks_cols, 2), _if_then_else(False, compare_blocks_rows, 4)), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(False, 0, 3))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, max_col_clue), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(le(zeros_diff_cols, 3), _if_then_else(True, 4, compare_blocks_cols), _if_then_else(False, 1, 0)), _if_then_else(ge(zeros_diff_cols, max_col_clue), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, 4, 1)))))))
or_(False, True)
VAL TREES:
mul(compare_blocks_cols, add(30, mul(ones_diff_cols, compare_blocks_rows)))
add(mul(zeros_diff_rows, mul(zeros_diff_rows, add(ones_diff_rows, ones_diff_rows))), compare_blocks_rows)
mul(ones_diff_rows, zeros_diff_rows)
mul(add(mul(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)), add(add(ones_diff_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_cols))), add(add(mul(zeros_diff_cols, 82), mul(mul(add(add(97, ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(add(zeros_diff_rows, ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols))), mul(mul(add(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, -48)), mul(add(-29, ones_diff_cols), add(compare_blocks_cols, compare_blocks_cols))))), add(add(-47, 38), mul(zeros_diff_cols, compare_blocks_cols))))
mul(add(add(mul(mul(2, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), add(mul(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), mul(mul(ones_diff_cols, ones_diff_cols), add(zeros_diff_rows, ones_diff_cols))), add(add(add(mul(add(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)), mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(ones_diff_rows, zeros_diff_cols), add(47, ones_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows)))), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows))))
add(mul(-70, ones_diff_cols), zeros_diff_cols)


INFO:root:hof: COND TREES:
or_(False, False)
and_(or_(or_(le(compare_blocks_cols, ones_diff_cols), ge(0, zeros_diff_rows)), or_(ge(zeros_diff_rows, 1), and_(False, True))), and_(ge(_if_then_else(False, max_col_clue, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 2)), and_(le(4, compare_blocks_rows), and_(False, False))))
or_(False, False)
le(_if_then_else(ge(_if_then_else(and_(and_(ge(ones_diff_rows, max_row_clue), le(ones_diff_rows, max_col_clue)), or_(le(ones_diff_rows, zeros_diff_rows), and_(True, True))), _if_then_else(or_(ge(max_col_clue, compare_blocks_cols), and_(False, False)), _if_then_else(and_(False, False), _if_then_else(False, 4, 1), _if_then_else(True, compare_blocks_cols, zeros_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, -62, compare_blocks_cols), _if_then_else(False, 3, 2))), _if_then_else(ge(_if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(False, 1, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(True, ones_diff_cols, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, 0)), _if_then_else(le(-57, ones_diff_rows), _if_then_else(True, compare_blocks_rows, 4), _if_then_else(False, 4, 4)))), _if_then_else(and_(ge(_if_then_else(True, 4, 1), _if_then_else(True, 1, ones_diff_rows)), le(_if_then_else(True, 3, 3), _if_then_else(False, -12, max_col_clue))), _if_then_else(le(_if_then_else(False, ones_diff_rows, 1), _if_then_else(False, -9, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 1), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, max_row_clue, 4)), _if_then_else(or_(True, True), _if_then_else(True, 3, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), _if_then_else(or_(le(2, max_col_clue), and_(True, True)), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, ones_diff_rows, 3)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, 3), _if_then_else(False, max_col_clue, max_row_clue))))), _if_then_else(le(_if_then_else(or_(or_(False, True), and_(False, False)), _if_then_else(ge(compare_blocks_rows, 2), _if_then_else(True, 0, ones_diff_cols), _if_then_else(False, 1, max_row_clue)), _if_then_else(le(max_col_clue, compare_blocks_rows), _if_then_else(True, ones_diff_cols, 3), _if_then_else(True, 0, zeros_diff_cols))), _if_then_else(and_(and_(True, True), and_(False, False)), _if_then_else(and_(False, False), _if_then_else(False, 4, 4), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), _if_then_else(False, max_col_clue, 76), _if_then_else(False, 1, zeros_diff_cols)))), _if_then_else(le(_if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(False, max_row_clue, 1), _if_then_else(True, ones_diff_rows, max_col_clue)), _if_then_else(or_(True, False), _if_then_else(True, 2, zeros_diff_cols), _if_then_else(True, 3, ones_diff_rows))), _if_then_else(le(_if_then_else(True, 4, max_row_clue), _if_then_else(True, 1, zeros_diff_cols)), _if_then_else(ge(1, 4), _if_then_else(False, 1, -74), _if_then_else(True, ones_diff_rows, max_row_clue)), _if_then_else(ge(max_col_clue, ones_diff_rows), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, 0, 32))), _if_then_else(ge(_if_then_else(True, 2, compare_blocks_cols), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(le(zeros_diff_cols, 2), _if_then_else(True, -73, 3), _if_then_else(True, 4, compare_blocks_cols)), _if_then_else(le(compare_blocks_rows, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols), _if_then_else(False, 2, 0)))), _if_then_else(ge(_if_then_else(or_(False, False), _if_then_else(False, 4, 4), _if_then_else(False, 10, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, -61))), _if_then_else(le(_if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(ge(max_row_clue, 1), _if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, 2)), _if_then_else(ge(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, max_row_clue, -91), _if_then_else(False, ones_diff_rows, max_row_clue))), _if_then_else(le(_if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(True, ones_diff_cols, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(False, 3, ones_diff_rows), _if_then_else(True, 0, compare_blocks_rows)), _if_then_else(le(3, zeros_diff_cols), _if_then_else(False, 1, 43), _if_then_else(False, 1, ones_diff_rows))))), _if_then_else(or_(and_(or_(and_(False, False), ge(ones_diff_cols, 0)), or_(le(max_row_clue, ones_diff_cols), le(zeros_diff_cols, compare_blocks_rows))), ge(_if_then_else(and_(True, False), _if_then_else(False, 59, -22), _if_then_else(True, 4, ones_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, compare_blocks_rows, 0), _if_then_else(True, zeros_diff_cols, ones_diff_rows)))), _if_then_else(or_(or_(or_(True, True), le(4, 2)), and_(or_(False, False), or_(False, False))), _if_then_else(or_(or_(False, False), ge(3, 4)), _if_then_else(and_(True, False), _if_then_else(False, 3, 0), _if_then_else(True, 1, 0)), _if_then_else(or_(True, False), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(False, 0, 4))), _if_then_else(ge(_if_then_else(True, 2, max_row_clue), _if_then_else(True, compare_blocks_cols, max_col_clue)), _if_then_else(ge(zeros_diff_rows, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, 64, 4)), _if_then_else(ge(max_col_clue, 3), _if_then_else(False, 4, max_row_clue), _if_then_else(False, 35, max_col_clue)))), _if_then_else(or_(le(_if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_cols, 2)), ge(_if_then_else(False, 0, ones_diff_rows), _if_then_else(True, zeros_diff_rows, compare_blocks_rows))), _if_then_else(and_(ge(3, zeros_diff_rows), and_(False, False)), _if_then_else(le(zeros_diff_rows, max_row_clue), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, 3)), _if_then_else(ge(4, ones_diff_rows), _if_then_else(True, compare_blocks_cols, -7), _if_then_else(False, 2, zeros_diff_rows))), _if_then_else(and_(ge(compare_blocks_rows, 0), ge(0, max_col_clue)), _if_then_else(or_(False, True), _if_then_else(False, 59, 0), _if_then_else(True, max_row_clue, 4)), _if_then_else(ge(ones_diff_cols, 4), _if_then_else(True, 3, 2), _if_then_else(True, 3, 1)))))), _if_then_else(ge(_if_then_else(ge(_if_then_else(or_(False, True), _if_then_else(False, 3, compare_blocks_cols), _if_then_else(True, compare_blocks_cols, zeros_diff_cols)), _if_then_else(ge(3, max_col_clue), _if_then_else(False, ones_diff_cols, compare_blocks_cols), _if_then_else(False, ones_diff_rows, ones_diff_rows))), _if_then_else(and_(and_(False, False), and_(False, True)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, 0, zeros_diff_cols)), _if_then_else(le(zeros_diff_rows, 0), _if_then_else(True, 1, ones_diff_rows), _if_then_else(False, 0, max_col_clue))), _if_then_else(and_(and_(False, False), ge(max_col_clue, -98)), _if_then_else(le(1, max_col_clue), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, 2)), _if_then_else(le(ones_diff_rows, ones_diff_cols), _if_then_else(True, 1, compare_blocks_rows), _if_then_else(False, 3, max_row_clue)))), _if_then_else(or_(and_(le(2, zeros_diff_rows), and_(False, True)), le(_if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, ones_diff_rows, max_row_clue))), _if_then_else(or_(le(2, zeros_diff_cols), ge(zeros_diff_rows, 2)), _if_then_else(ge(zeros_diff_cols, 0), _if_then_else(False, compare_blocks_cols, 30), _if_then_else(True, ones_diff_cols, zeros_diff_rows)), _if_then_else(le(81, zeros_diff_cols), _if_then_else(True, -6, zeros_diff_cols), _if_then_else(False, max_row_clue, ones_diff_cols))), _if_then_else(and_(le(compare_blocks_cols, 2), or_(True, False)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(True, compare_blocks_rows, 2)), _if_then_else(ge(zeros_diff_rows, compare_blocks_cols), _if_then_else(True, ones_diff_rows, ones_diff_rows), _if_then_else(False, 3, 2))))), _if_then_else(le(_if_then_else(or_(or_(True, False), ge(compare_blocks_rows, max_row_clue)), _if_then_else(ge(zeros_diff_rows, 0), _if_then_else(True, compare_blocks_rows, 0), _if_then_else(True, 3, compare_blocks_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(False, max_col_clue, ones_diff_cols))), _if_then_else(and_(or_(False, True), ge(compare_blocks_cols, zeros_diff_cols)), _if_then_else(ge(compare_blocks_cols, ones_diff_rows), _if_then_else(True, max_col_clue, -1), _if_then_else(True, zeros_diff_cols, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, compare_blocks_cols, max_col_clue)))), _if_then_else(or_(le(_if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(False, max_row_clue, zeros_diff_rows)), ge(_if_then_else(True, 60, ones_diff_rows), _if_then_else(False, 53, ones_diff_cols))), _if_then_else(and_(and_(True, False), or_(False, False)), _if_then_else(or_(False, False), _if_then_else(True, -67, ones_diff_cols), _if_then_else(False, zeros_diff_rows, ones_diff_cols)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(False, 3, compare_blocks_cols), _if_then_else(True, max_col_clue, compare_blocks_cols))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, 2), _if_then_else(False, zeros_diff_cols, 4)), _if_then_else(or_(False, False), _if_then_else(True, compare_blocks_rows, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, max_row_clue, -55), _if_then_else(True, max_col_clue, 4)))), _if_then_else(and_(or_(and_(False, True), and_(True, False)), or_(or_(True, False), and_(True, True))), _if_then_else(ge(_if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(False, ones_diff_cols, 3)), _if_then_else(or_(True, False), _if_then_else(True, max_row_clue, 4), _if_then_else(True, -78, compare_blocks_rows)), _if_then_else(le(2, 42), _if_then_else(True, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 1))), _if_then_else(le(_if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, ones_diff_cols, zeros_diff_cols)), _if_then_else(le(max_col_clue, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, 1), _if_then_else(True, 53, zeros_diff_cols)), _if_then_else(ge(zeros_diff_cols, 2), _if_then_else(False, 1, 4), _if_then_else(True, 0, 4))))), _if_then_else(ge(_if_then_else(or_(or_(True, False), le(zeros_diff_rows, ones_diff_cols)), _if_then_else(le(3, -43), _if_then_else(False, compare_blocks_rows, -30), _if_then_else(True, zeros_diff_cols, 1)), _if_then_else(le(4, 1), _if_then_else(False, max_row_clue, 87), _if_then_else(True, zeros_diff_rows, compare_blocks_rows))), _if_then_else(and_(le(0, max_row_clue), ge(ones_diff_cols, max_col_clue)), _if_then_else(and_(True, True), _if_then_else(False, 3, compare_blocks_cols), _if_then_else(True, max_row_clue, 0)), _if_then_else(ge(1, compare_blocks_cols), _if_then_else(True, 2, 4), _if_then_else(True, ones_diff_rows, zeros_diff_rows)))), _if_then_else(le(_if_then_else(or_(True, True), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(False, 4, 4)), _if_then_else(le(3, 4), _if_then_else(False, max_row_clue, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, 3))), _if_then_else(ge(_if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(True, ones_diff_rows, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(True, max_col_clue, 3), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(or_(and_(False, True), ge(4, 1)), _if_then_else(and_(True, False), _if_then_else(False, 4, 3), _if_then_else(False, zeros_diff_rows, 0)), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(True, -83, 0)))), _if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(True, zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, 3), _if_then_else(False, ones_diff_rows, compare_blocks_cols))), _if_then_else(le(_if_then_else(False, ones_diff_cols, max_row_clue), _if_then_else(False, zeros_diff_rows, ones_diff_cols)), _if_then_else(le(zeros_diff_rows, compare_blocks_cols), _if_then_else(True, compare_blocks_cols, 2), _if_then_else(False, compare_blocks_rows, 4)), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(False, 0, 3))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, max_col_clue), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(le(zeros_diff_cols, 3), _if_then_else(True, 4, compare_blocks_cols), _if_then_else(False, 1, 0)), _if_then_else(ge(zeros_diff_cols, max_col_clue), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, 4, 1)))))))
or_(False, True)
VAL TREES:
mul(compare_blocks_cols, zeros_diff_rows)
add(zeros_diff_rows, compare_blocks_rows)
add(add(add(ones_diff_rows, -75), mul(ones_diff_cols, 40)), mul(mul(ones_diff_rows, compare_blocks_cols), add(ones_diff_cols, compare_blocks_cols)))
mul(add(mul(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)), add(add(ones_diff_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_cols))), add(add(mul(zeros_diff_cols, 82), add(ones_diff_cols, zeros_diff_rows)), add(add(-47, 38), mul(zeros_diff_cols, compare_blocks_cols))))
mul(add(mul(add(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(mul(ones_diff_cols, ones_diff_cols), add(zeros_diff_rows, ones_diff_cols))), add(add(add(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows))))
add(ones_diff_rows, zeros_diff_rows)


INFO:root:stats: {'fitness': <deap.tools.support.Statistics object at 0x00000269F7EF8F98>, 'size': <deap.tools.support.Statistics object at 0x00000269F7F06E10>}

