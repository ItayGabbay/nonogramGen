INFO:root:

*******STARTING!!!******


INFO:root:

*******Configuration******


INFO:root:# NUM_ROWS = 20


INFO:root:NUM_ROWS = 5


INFO:root:# NUM_COLS = 20


INFO:root:NUM_COLS = 5


INFO:root:empty_in_split = '\xa0'


INFO:root:


INFO:root:pickle_unsolved_file_path = 'data/%dx%d_nonograms.pkl' % (NUM_ROWS, NUM_COLS)


INFO:root:pickle_solved_file_path = 'data/%dx%d_nonograms_solved.pkl' % (NUM_ROWS, NUM_COLS)


INFO:root:should_run_in_parallel = True


INFO:root:


INFO:root:NUM_COND_TREES = 8


INFO:root:NUM_VAL_TREES = NUM_COND_TREES + 1


INFO:root:prob_crossover_global = 0.7  # global probability for cx


INFO:root:prob_crossover_individual_cond = 0.8  # probability to cx a specific cond tree in an individual


INFO:root:prob_crossover_individual_val = 0.8  # probability to cx a specific cond tree in an individual


INFO:root:prob_mutate_global = 0.4


INFO:root:prob_mutate_individual_cond = 0.5


INFO:root:prob_mutate_individual_val = 0.5


INFO:root:


INFO:root:points_correct_box = 5


INFO:root:points_incorrect_box = 0


INFO:root:# points_incorrect_box = -2


INFO:root:pop_size = 50


INFO:root:hof_size = 1


INFO:root:# num_gen = 40


INFO:root:num_gen = 10


INFO:root:train_size = 3


INFO:root:

*******DONE!!!******


INFO:root:run time: 41 sec

INFO:root:max possible fitness for the nonograms ran: 70

INFO:root:log:    	      	              fitness              	              size             
   	      	-----------------------------------	-------------------------------
gen	nevals	avg    	max    	min    	std        	avg 	max	min	std    
0  	50    	43.3333	43.3333	43.3333	7.10543e-15	7.4 	8  	6  	0.52915
1  	45    	39.4667	55     	28.3333	9.00888    	8.22	10 	7  	1.02548
2  	44    	39.4   	55     	21.6667	8.76077    	8.54	11 	7  	1.04326
3  	41    	41.3667	55     	26.6667	10.0592    	9.02	12 	7  	1.31894
4  	39    	44.3   	55     	28.3333	10.5414    	9.06	12 	7  	1.08462
5  	46    	42.5667	55     	28.3333	11.1465    	9.34	12 	8  	1.21012
6  	36    	45.2333	55     	28.3333	10.451     	9.36	13 	8  	1.19599
7  	41    	45.5667	55     	28.3333	10.4648    	9.44	14 	8  	1.26744
8  	38    	46.0667	55     	28.3333	10.3803    	9.66	13 	8  	1.21012
9  	36    	47.6333	55     	28.3333	10.2312    	9.62	12 	8  	1.09343
10 	43    	46.5667	55     	28.3333	9.5243     	9.9 	13 	8  	1.22066

INFO:root:pop: COND TREES:
ge(_if_then_else(le(max_col_clue, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, _if_then_else(True, _if_then_else(False, 4, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 3)), zeros_diff_cols)), _if_then_else(and_(le(compare_blocks_rows, 2), or_(or_(le(zeros_diff_rows, max_col_clue), ge(zeros_diff_cols, zeros_diff_rows)), and_(ge(4, ones_diff_cols), ge(1, max_row_clue)))), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, _if_then_else(False, ones_diff_rows, max_row_clue)), _if_then_else(ge(1, max_row_clue), _if_then_else(False, max_row_clue, 3), _if_then_else(False, ones_diff_cols, max_col_clue))), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), compare_blocks_cols, 4)))
le(_if_then_else(le(_if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(True, ones_diff_cols, 3), _if_then_else(False, 0, 4))), _if_then_else(or_(True, le(zeros_diff_rows, 3)), _if_then_else(or_(False, False), _if_then_else(True, 4, 0), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(or_(False, True), _if_then_else(True, 1, 1), _if_then_else(True, compare_blocks_cols, 0))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, max_row_clue, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(2, ones_diff_rows), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 4)))), max_row_clue), _if_then_else(True, 1, max_col_clue), _if_then_else(or_(True, True), 2, max_row_clue)), _if_then_else(ge(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(False, _if_then_else(False, ones_diff_cols, ones_diff_cols), 4)), _if_then_else(ge(3, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(or_(ge(ones_diff_cols, zeros_diff_rows), True), ones_diff_cols, 1)), _if_then_else(and_(True, False), _if_then_else(False, 2, max_row_clue), _if_then_else(True, compare_blocks_cols, 3))), compare_blocks_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, 4, ones_diff_rows)))
ge(_if_then_else(True, _if_then_else(ge(4, 4), ones_diff_cols, zeros_diff_cols), max_col_clue), _if_then_else(and_(le(ones_diff_rows, ones_diff_cols), and_(ge(zeros_diff_rows, compare_blocks_rows), ge(0, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 3), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(2, 2), _if_then_else(True, 1, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(False, 2, 2)), _if_then_else(and_(False, True), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(le(ones_diff_cols, 4), _if_then_else(False, max_row_clue, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)))))
le(_if_then_else(or_(True, False), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, max_row_clue, 0)), compare_blocks_rows)
ge(_if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 0, ones_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, max_col_clue, 0), _if_then_else(False, zeros_diff_rows, 1)))
or_(ge(_if_then_else(le(0, zeros_diff_rows), 3, 4), _if_then_else(False, 4, 4)), and_(or_(False, False), or_(or_(and_(False, or_(or_(ge(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(True, 4, 3)), and_(le(ones_diff_rows, 1), and_(False, True))), le(_if_then_else(or_(False, False), _if_then_else(True, compare_blocks_cols, 2), _if_then_else(True, 1, zeros_diff_rows)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_cols, 0), _if_then_else(True, max_row_clue, max_row_clue))))), ge(max_col_clue, max_col_clue)), ge(_if_then_else(and_(True, False), ones_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, 4)))))
ge(_if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, _if_then_else(True, _if_then_else(or_(and_(True, True), and_(False, False)), _if_then_else(and_(False, True), _if_then_else(False, 4, _if_then_else(False, ones_diff_rows, max_col_clue)), _if_then_else(True, ones_diff_rows, 2)), _if_then_else(ge(ones_diff_rows, 1), _if_then_else(False, 0, 4), _if_then_else(False, compare_blocks_cols, zeros_diff_rows))), ones_diff_rows)), _if_then_else(le(max_col_clue, 4), compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(False, max_row_clue, _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(True, compare_blocks_cols, max_col_clue)))
or_(or_(and_(or_(False, False), False), le(2, 2)), or_(or_(False, True), le(_if_then_else(and_(False, True), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_row_clue, 1)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, ones_diff_cols))), compare_blocks_rows)))
VAL TREES:
mul(mul(mul(ones_diff_cols, ones_diff_rows), add(mul(ones_diff_cols, ones_diff_cols), ones_diff_rows)), mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)))
add(add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)))
add(add(mul(add(mul(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols))), add(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_rows)))), add(add(add(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), mul(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols)))
add(add(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)))
mul(mul(add(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols)))
mul(mul(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)))
add(mul(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, ones_diff_cols))))
mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_rows)))
COND TREES:
or_(ge(_if_then_else(and_(and_(False, True), or_(False, True)), zeros_diff_rows, _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(True, compare_blocks_cols, max_row_clue))), _if_then_else(le(_if_then_else(False, 3, max_col_clue), max_col_clue), _if_then_else(ge(compare_blocks_rows, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, 4), _if_then_else(False, 1, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, 2, ones_diff_cols), _if_then_else(False, 1, max_col_clue)))), and_(ge(_if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, 1), _if_then_else(True, compare_blocks_cols, 0)), _if_then_else(and_(False, True), _if_then_else(True, 0, max_col_clue), _if_then_else(True, 1, compare_blocks_cols))), False))
or_(le(_if_then_else(and_(ge(0, ones_diff_cols), and_(False, True)), 3, _if_then_else(True, 0, _if_then_else(True, max_row_clue, 1))), _if_then_else(False, max_col_clue, _if_then_else(True, zeros_diff_cols, 0))), le(_if_then_else(or_(False, False), _if_then_else(and_(True, True), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(True, 4, _if_then_else(or_(le(_if_then_else(False, max_col_clue, 1), _if_then_else(True, 0, max_row_clue)), and_(le(zeros_diff_cols, 2), or_(False, True))), _if_then_else(or_(le(compare_blocks_cols, ones_diff_rows), and_(False, False)), _if_then_else(le(zeros_diff_cols, 2), _if_then_else(False, 4, 1), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, compare_blocks_rows), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, 3, 3))), _if_then_else(or_(and_(True, True), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_rows, 0), _if_then_else(False, 2, 3)), _if_then_else(le(4, max_col_clue), _if_then_else(True, zeros_diff_cols, 1), _if_then_else(False, max_row_clue, compare_blocks_cols)))))), _if_then_else(True, zeros_diff_rows, _if_then_else(False, 2, zeros_diff_cols))), _if_then_else(True, 4, _if_then_else(and_(True, True), 0, zeros_diff_rows))))
ge(_if_then_else(ge(1, _if_then_else(and_(False, True), compare_blocks_rows, max_col_clue)), _if_then_else(and_(False, False), ones_diff_cols, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, _if_then_else(False, 1, ones_diff_cols))), _if_then_else(and_(le(ones_diff_cols, 3), and_(True, or_(False, le(ones_diff_cols, compare_blocks_rows)))), _if_then_else(True, _if_then_else(ge(4, _if_then_else(True, compare_blocks_cols, compare_blocks_cols)), ones_diff_cols, zeros_diff_cols), max_col_clue), _if_then_else(and_(False, True), compare_blocks_rows, max_col_clue)))
and_(le(_if_then_else(le(ones_diff_cols, max_col_clue), 4, 3), _if_then_else(False, 2, _if_then_else(ge(3, 0), _if_then_else(False, 0, zeros_diff_cols), _if_then_else(True, 4, _if_then_else(and_(or_(False, False), ge(ones_diff_rows, 0)), _if_then_else(or_(ge(ones_diff_rows, ones_diff_cols), False), _if_then_else(True, _if_then_else(True, compare_blocks_rows, _if_then_else(False, 0, compare_blocks_rows)), 3), _if_then_else(False, max_row_clue, compare_blocks_rows)), _if_then_else(ge(zeros_diff_rows, _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(False, zeros_diff_rows, 0), _if_then_else(True, 0, 2))))))), False)
le(_if_then_else(and_(le(compare_blocks_rows, 0), or_(False, False)), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(True, 4, ones_diff_rows)), _if_then_else(le(0, compare_blocks_rows), _if_then_else(False, max_col_clue, max_row_clue), _if_then_else(True, ones_diff_rows, 2))), _if_then_else(ge(_if_then_else(False, 4, max_col_clue), zeros_diff_rows), _if_then_else(and_(False, True), _if_then_else(False, 3, ones_diff_cols), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(or_(False, True), _if_then_else(True, max_col_clue, 0), _if_then_else(False, zeros_diff_rows, 1))))
and_(le(_if_then_else(True, max_col_clue, max_col_clue), _if_then_else(or_(False, True), _if_then_else(False, 0, max_row_clue), _if_then_else(True, ones_diff_cols, ones_diff_cols))), le(_if_then_else(or_(True, True), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(and_(True, or_(le(zeros_diff_cols, 4), and_(False, ge(max_row_clue, 2)))), ones_diff_cols, 1)), _if_then_else(le(zeros_diff_cols, zeros_diff_rows), _if_then_else(True, 3, 0), _if_then_else(and_(le(max_col_clue, 0), ge(2, 2)), _if_then_else(ge(4, max_row_clue), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, ones_diff_rows, zeros_diff_rows)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_rows, max_row_clue), _if_then_else(False, 4, 1))))))
le(_if_then_else(or_(le(1, 3), or_(True, False)), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(False, 1, zeros_diff_rows)), _if_then_else(or_(True, True), compare_blocks_cols, _if_then_else(le(max_col_clue, 4), 3, _if_then_else(True, 2, 2))))
and_(or_(False, False), and_(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(True, max_row_clue, ones_diff_rows)), and_(le(max_col_clue, max_row_clue), ge(ones_diff_cols, _if_then_else(False, max_col_clue, 0)))), le(2, max_row_clue)))
VAL TREES:
add(add(add(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, add(zeros_diff_cols, compare_blocks_rows))), add(add(ones_diff_rows, ones_diff_rows), mul(ones_diff_cols, zeros_diff_cols)))
mul(add(mul(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)), add(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_rows)))
add(mul(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_rows)), mul(mul(ones_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_cols, compare_blocks_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols)))
add(mul(mul(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, ones_diff_rows), add(ones_diff_rows, zeros_diff_cols)))
add(mul(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_rows)), add(mul(add(add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, ones_diff_cols)), mul(add(ones_diff_cols, compare_blocks_rows), mul(compare_blocks_cols, compare_blocks_cols)))), ones_diff_rows), add(compare_blocks_rows, zeros_diff_cols)))
add(mul(mul(mul(zeros_diff_rows, ones_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), add(mul(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols))), mul(mul(add(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, ones_diff_rows)), add(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_rows))))
add(mul(add(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), add(add(ones_diff_rows, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols))), mul(mul(mul(ones_diff_cols, zeros_diff_rows), add(ones_diff_rows, zeros_diff_rows)), add(mul(compare_blocks_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_rows))))
add(add(mul(add(add(mul(add(ones_diff_cols, mul(compare_blocks_cols, compare_blocks_cols)), zeros_diff_rows), add(compare_blocks_cols, mul(zeros_diff_cols, mul(zeros_diff_cols, compare_blocks_rows)))), mul(add(ones_diff_cols, ones_diff_cols), add(ones_diff_rows, mul(zeros_diff_cols, ones_diff_rows)))), ones_diff_cols), mul(ones_diff_rows, compare_blocks_cols)), mul(add(add(ones_diff_cols, zeros_diff_cols), ones_diff_cols), add(compare_blocks_cols, add(compare_blocks_cols, zeros_diff_cols))))
COND TREES:
le(_if_then_else(ge(1, max_row_clue), _if_then_else(False, max_row_clue, 3), _if_then_else(False, ones_diff_cols, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(False, 2, 2), _if_then_else(True, max_col_clue, max_col_clue)))
ge(_if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, 4), _if_then_else(False, max_row_clue, zeros_diff_rows)), _if_then_else(True, _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, 3, compare_blocks_cols)))
and_(or_(le(zeros_diff_cols, compare_blocks_cols), le(2, 1)), and_(ge(_if_then_else(or_(False, True), _if_then_else(True, 4, 0), _if_then_else(True, zeros_diff_rows, 3)), _if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, compare_blocks_rows, 1))), le(ones_diff_rows, ones_diff_cols)))
or_(le(_if_then_else(and_(le(compare_blocks_cols, zeros_diff_cols), and_(False, True)), _if_then_else(and_(True, True), _if_then_else(True, 4, 1), _if_then_else(False, compare_blocks_rows, max_row_clue)), _if_then_else(ge(max_col_clue, 3), _if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(max_row_clue, 4), le(zeros_diff_rows, 4)), max_col_clue, _if_then_else(and_(True, True), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(True, max_col_clue, max_row_clue)))), or_(ge(_if_then_else(and_(True, False), _if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, ones_diff_cols, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(True, max_row_clue, 3), _if_then_else(False, 2, zeros_diff_cols))), or_(or_(False, le(2, max_row_clue)), and_(le(0, zeros_diff_cols), and_(True, True)))))
and_(True, ge(_if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(True, max_col_clue, zeros_diff_rows)))
and_(or_(le(zeros_diff_cols, 4), and_(False, ge(max_row_clue, 2))), le(_if_then_else(True, _if_then_else(True, ones_diff_rows, 0), max_col_clue), _if_then_else(True, max_col_clue, max_row_clue)))
or_(or_(and_(or_(ge(4, compare_blocks_rows), le(zeros_diff_cols, max_row_clue)), and_(le(compare_blocks_cols, 2), le(max_col_clue, zeros_diff_rows))), or_(le(_if_then_else(True, 2, 4), _if_then_else(False, compare_blocks_rows, 3)), or_(le(1, 3), or_(True, False)))), or_(le(_if_then_else(or_(False, True), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, 2)), _if_then_else(ge(max_col_clue, zeros_diff_rows), _if_then_else(True, 2, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, 3))), or_(le(_if_then_else(False, compare_blocks_rows, _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 1, zeros_diff_rows))), _if_then_else(True, 3, 0)), ge(_if_then_else(False, zeros_diff_cols, ones_diff_rows), _if_then_else(False, 3, ones_diff_rows)))))
le(_if_then_else(le(2, 2), _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, max_col_clue, 0)), _if_then_else(and_(True, or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), compare_blocks_rows), and_(le(max_col_clue, max_row_clue), ge(ones_diff_cols, max_row_clue)))), _if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, 4)))
VAL TREES:
mul(mul(mul(ones_diff_cols, add(zeros_diff_rows, ones_diff_rows)), mul(zeros_diff_cols, ones_diff_cols)), add(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_cols, mul(zeros_diff_rows, compare_blocks_rows))))
add(add(mul(compare_blocks_cols, ones_diff_rows), mul(add(ones_diff_cols, zeros_diff_cols), zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), mul(mul(ones_diff_rows, add(zeros_diff_cols, compare_blocks_cols)), zeros_diff_cols)))
add(add(add(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_rows)))
add(add(mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_rows, zeros_diff_cols)), add(mul(zeros_diff_rows, compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows))), add(add(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows)), mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, zeros_diff_rows))))
add(mul(mul(ones_diff_cols, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), add(mul(ones_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)))
mul(add(add(add(add(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))), mul(add(mul(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_rows)), add(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, compare_blocks_cols)))), mul(add(add(add(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_cols))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, ones_diff_rows)), add(mul(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, zeros_diff_rows)))))
mul(add(add(mul(add(compare_blocks_cols, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_rows)), add(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), add(mul(mul(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols)))), add(mul(mul(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols))), add(add(add(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)))))
add(mul(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_rows, ones_diff_cols)), add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)))
add(mul(add(compare_blocks_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), add(mul(ones_diff_cols, add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_cols, ones_diff_cols))), add(compare_blocks_cols, add(zeros_diff_rows, ones_diff_rows))))
COND TREES:
ge(_if_then_else(le(max_col_clue, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, _if_then_else(True, _if_then_else(False, 4, zeros_diff_cols), _if_then_else(ge(1, max_row_clue), compare_blocks_rows, 3)), zeros_diff_cols)), _if_then_else(and_(le(compare_blocks_rows, 2), False), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, _if_then_else(False, ones_diff_rows, max_row_clue)), ones_diff_rows), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), compare_blocks_cols, 4)))
le(_if_then_else(le(_if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(True, ones_diff_cols, 3), _if_then_else(False, 0, 4))), _if_then_else(or_(and_(False, False), le(zeros_diff_rows, 3)), _if_then_else(or_(False, False), _if_then_else(True, 4, 0), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(or_(False, True), _if_then_else(True, 1, 1), _if_then_else(True, compare_blocks_cols, 0))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, max_row_clue, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(2, ones_diff_rows), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 4)))), max_row_clue), _if_then_else(True, 1, max_col_clue), _if_then_else(or_(True, True), 2, max_row_clue)), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, _if_then_else(ge(_if_then_else(and_(True, False), _if_then_else(False, ones_diff_rows, 2), _if_then_else(False, max_col_clue, 0)), _if_then_else(or_(False, False), _if_then_else(True, max_col_clue, 2), _if_then_else(True, max_col_clue, 3))), _if_then_else(or_(or_(True, True), le(ones_diff_rows, 0)), _if_then_else(or_(True, True), _if_then_else(True, 4, max_row_clue), _if_then_else(False, max_col_clue, 0)), _if_then_else(and_(True, False), _if_then_else(False, max_col_clue, max_row_clue), _if_then_else(False, 0, 3))), _if_then_else(False, _if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, 4), _if_then_else(True, compare_blocks_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_rows, 2), _if_then_else(False, zeros_diff_rows, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, 1))))), _if_then_else(True, 4, ones_diff_rows)))
ge(_if_then_else(le(_if_then_else(ge(ones_diff_cols, zeros_diff_rows), _if_then_else(True, max_col_clue, 4), _if_then_else(True, max_col_clue, compare_blocks_cols)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, _if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, compare_blocks_rows, 1))), _if_then_else(False, max_col_clue, 3))), _if_then_else(or_(le(max_col_clue, compare_blocks_rows), or_(True, False)), _if_then_else(or_(False, True), _if_then_else(True, 1, 3), _if_then_else(False, 3, 4)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, 0, max_col_clue), _if_then_else(True, 3, compare_blocks_cols))), _if_then_else(ge(_if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 3, 3)), _if_then_else(True, _if_then_else(False, ones_diff_cols, 4), _if_then_else(True, ones_diff_cols, ones_diff_cols)), _if_then_else(ge(compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_cols, 3), _if_then_else(le(_if_then_else(False, 4, 1), _if_then_else(True, compare_blocks_rows, _if_then_else(False, 0, 3))), _if_then_else(ge(max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 0, _if_then_else(False, 1, 4))), _if_then_else(and_(ge(2, 2), True), _if_then_else(True, _if_then_else(False, 4, max_row_clue), 3), _if_then_else(False, 3, 4)))))), _if_then_else(and_(and_(ge(ones_diff_cols, 3), True), and_(ge(zeros_diff_rows, compare_blocks_rows), ge(0, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 3), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(2, 2), _if_then_else(True, _if_then_else(and_(or_(True, le(zeros_diff_cols, ones_diff_rows)), or_(and_(True, True), le(1, 3))), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, 1, zeros_diff_cols)), _if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(ge(2, max_col_clue), zeros_diff_rows, ones_diff_cols), _if_then_else(ge(zeros_diff_cols, max_col_clue), ones_diff_cols, _if_then_else(False, zeros_diff_rows, 4)))), 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(False, 2, 2)), _if_then_else(and_(False, True), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(le(ones_diff_cols, 4), _if_then_else(False, max_row_clue, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)))))
le(_if_then_else(or_(True, False), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, max_row_clue, 0)), _if_then_else(ge(max_col_clue, 3), _if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, max_col_clue, max_row_clue)))
ge(_if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 0, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, max_col_clue, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))
or_(ge(_if_then_else(le(0, 4), 3, 4), ones_diff_rows), and_(or_(False, False), and_(le(_if_then_else(le(1, max_row_clue), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, 0)), _if_then_else(or_(False, False), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(False, compare_blocks_rows, compare_blocks_cols))), or_(or_(or_(False, True), le(0, 3)), le(_if_then_else(and_(True, True), 2, ones_diff_rows), _if_then_else(False, 1, ones_diff_cols))))))
ge(_if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, _if_then_else(False, max_col_clue, ones_diff_rows)), _if_then_else(False, _if_then_else(or_(le(ones_diff_cols, 0), le(compare_blocks_cols, max_col_clue)), _if_then_else(le(compare_blocks_cols, ones_diff_rows), _if_then_else(True, max_row_clue, max_col_clue), _if_then_else(False, ones_diff_rows, 2)), _if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(or_(le(_if_then_else(True, 2, 4), _if_then_else(False, compare_blocks_rows, 3)), or_(le(1, 3), or_(True, False))), 1, _if_then_else(True, 2, 2)), _if_then_else(True, 4, zeros_diff_rows))), compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(False, max_row_clue, _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(True, compare_blocks_cols, max_col_clue)))
or_(or_(and_(or_(False, False), ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), compare_blocks_rows)), le(2, 2)), or_(or_(False, True), le(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_row_clue, _if_then_else(False, zeros_diff_rows, zeros_diff_cols))), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_cols, ones_diff_cols))), compare_blocks_rows)))
VAL TREES:
mul(mul(mul(ones_diff_cols, ones_diff_rows), add(mul(ones_diff_cols, ones_diff_cols), ones_diff_rows)), mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)))
add(add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)))
add(add(mul(add(mul(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols))), add(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_rows)))), add(add(add(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), mul(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(mul(compare_blocks_cols, compare_blocks_rows), add(mul(add(mul(zeros_diff_rows, ones_diff_cols), mul(compare_blocks_rows, compare_blocks_rows)), add(add(ones_diff_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows))), ones_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols)))
add(add(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)))
mul(mul(add(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, mul(mul(mul(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_rows), add(zeros_diff_cols, zeros_diff_rows))))))
mul(mul(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)))
add(mul(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, add(add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols))), mul(add(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_cols, compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows)))))), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, ones_diff_cols))))
mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_rows)))
COND TREES:
ge(_if_then_else(le(max_col_clue, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, _if_then_else(True, _if_then_else(False, 4, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 3)), zeros_diff_cols)), _if_then_else(and_(le(compare_blocks_rows, 2), False), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, _if_then_else(True, ones_diff_rows, max_row_clue)), ones_diff_rows), _if_then_else(ge(zeros_diff_cols, zeros_diff_rows), compare_blocks_cols, 4)))
le(_if_then_else(le(_if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(True, ones_diff_cols, 3), _if_then_else(False, 0, 4))), _if_then_else(or_(True, le(zeros_diff_rows, 3)), _if_then_else(or_(False, False), _if_then_else(True, 4, 0), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(or_(False, True), _if_then_else(True, 1, 1), _if_then_else(True, compare_blocks_cols, 0))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, max_row_clue, compare_blocks_cols)), zeros_diff_rows, _if_then_else(le(2, ones_diff_rows), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 4)))), max_row_clue), _if_then_else(True, 1, max_col_clue), _if_then_else(or_(True, True), 2, max_row_clue)), _if_then_else(ge(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(False, _if_then_else(False, ones_diff_cols, ones_diff_cols), 4)), _if_then_else(ge(3, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(or_(ge(ones_diff_cols, zeros_diff_rows), True), ones_diff_cols, 1)), _if_then_else(and_(True, False), _if_then_else(False, 2, max_row_clue), _if_then_else(True, compare_blocks_cols, 3))), compare_blocks_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, 4, ones_diff_rows)))
ge(_if_then_else(True, _if_then_else(ge(4, 4), ones_diff_cols, zeros_diff_cols), max_col_clue), _if_then_else(and_(and_(ge(ones_diff_cols, 3), True), and_(ge(zeros_diff_rows, compare_blocks_rows), ge(0, 2))), _if_then_else(ge(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 3), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(2, 2), _if_then_else(True, 1, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(False, 2, 2)), _if_then_else(and_(False, True), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(le(ones_diff_cols, 4), _if_then_else(False, max_row_clue, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)))))
le(_if_then_else(or_(True, False), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, max_row_clue, 0)), compare_blocks_cols)
ge(_if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 0, _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 0, ones_diff_cols)))), _if_then_else(or_(False, True), _if_then_else(False, _if_then_else(ge(_if_then_else(True, 1, ones_diff_rows), _if_then_else(False, 4, _if_then_else(False, 4, ones_diff_rows))), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(or_(True, False), zeros_diff_rows, zeros_diff_cols), _if_then_else(ge(3, _if_then_else(False, max_col_clue, max_col_clue)), max_row_clue, 4)), _if_then_else(or_(False, True), _if_then_else(and_(True, or_(True, False)), _if_then_else(ge(compare_blocks_cols, ones_diff_cols), _if_then_else(False, compare_blocks_rows, 4), _if_then_else(False, compare_blocks_rows, 0)), 4), _if_then_else(True, max_col_clue, _if_then_else(False, ones_diff_rows, 2)))), 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))
or_(ge(_if_then_else(le(0, zeros_diff_rows), 3, 4), _if_then_else(False, 4, 2)), and_(or_(False, False), or_(or_(and_(False, False), ge(max_col_clue, max_col_clue)), ge(_if_then_else(and_(True, False), ones_diff_cols, compare_blocks_rows), _if_then_else(and_(True, True), 2, ones_diff_rows)))))
ge(_if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, _if_then_else(True, max_col_clue, _if_then_else(or_(False, True), _if_then_else(False, max_row_clue, _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(True, compare_blocks_cols, max_col_clue)))), _if_then_else(le(max_col_clue, 4), compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(le(compare_blocks_cols, max_col_clue), True), _if_then_else(False, max_row_clue, _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(True, compare_blocks_cols, max_col_clue)))
or_(or_(and_(or_(False, False), False), le(2, 2)), or_(or_(ge(_if_then_else(ge(_if_then_else(ge(4, zeros_diff_rows), _if_then_else(False, 0, ones_diff_rows), _if_then_else(True, zeros_diff_cols, max_row_clue)), _if_then_else(le(ones_diff_cols, 1), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, compare_blocks_cols, ones_diff_rows))), _if_then_else(or_(or_(True, False), and_(True, True)), _if_then_else(or_(False, True), _if_then_else(False, 0, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, ones_diff_cols)), _if_then_else(ge(1, max_row_clue), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(True, compare_blocks_rows, max_row_clue))), _if_then_else(ge(_if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, 2)), _if_then_else(le(4, zeros_diff_rows), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, ones_diff_rows)), _if_then_else(le(3, ones_diff_rows), _if_then_else(False, zeros_diff_rows, ones_diff_cols), _if_then_else(False, ones_diff_cols, zeros_diff_cols)))), _if_then_else(or_(le(_if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, ones_diff_rows, 0)), and_(ge(2, 0), and_(False, True))), _if_then_else(or_(le(compare_blocks_rows, 3), ge(ones_diff_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, max_col_clue, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(False, 2, zeros_diff_cols))), _if_then_else(le(_if_then_else(True, compare_blocks_rows, 4), _if_then_else(False, ones_diff_rows, 2)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_rows, 0), _if_then_else(True, zeros_diff_rows, 2)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, 2), _if_then_else(True, zeros_diff_rows, 3))))), True), le(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(True, max_row_clue, 1)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, ones_diff_cols))), compare_blocks_rows)))
VAL TREES:
mul(mul(mul(ones_diff_cols, ones_diff_rows), add(mul(ones_diff_cols, ones_diff_cols), ones_diff_rows)), mul(add(ones_diff_cols, compare_blocks_rows), add(add(mul(mul(mul(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows))), mul(add(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows)), add(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_rows)))), mul(add(add(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(mul(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_rows))), mul(mul(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols))))), compare_blocks_cols)))
add(add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)))
add(add(mul(add(mul(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols))), add(add(mul(ones_diff_rows, compare_blocks_cols), mul(mul(add(add(add(zeros_diff_cols, mul(compare_blocks_rows, zeros_diff_rows)), compare_blocks_cols), mul(add(compare_blocks_cols, ones_diff_cols), ones_diff_rows)), add(mul(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, add(compare_blocks_rows, ones_diff_cols)))), zeros_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_rows)))), add(add(add(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), mul(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(mul(compare_blocks_cols, compare_blocks_rows), add(mul(mul(add(ones_diff_rows, mul(compare_blocks_rows, add(ones_diff_cols, ones_diff_cols))), mul(zeros_diff_cols, zeros_diff_cols)), mul(add(add(compare_blocks_rows, ones_diff_cols), ones_diff_rows), add(ones_diff_cols, add(add(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols))))), ones_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols)))
add(add(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols)), add(mul(mul(mul(add(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_cols))), add(add(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_rows)))), ones_diff_cols), add(ones_diff_cols, ones_diff_cols)))
mul(mul(add(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols)))
mul(mul(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_cols, ones_diff_cols), add(add(add(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, mul(ones_diff_rows, ones_diff_rows))), mul(add(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_cols)))))
add(mul(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, ones_diff_cols))))
mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_rows)))
COND TREES:
ge(_if_then_else(le(max_col_clue, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, _if_then_else(True, _if_then_else(False, 4, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 3)), zeros_diff_cols)), _if_then_else(and_(le(compare_blocks_rows, 2), or_(or_(le(zeros_diff_rows, max_col_clue), ge(ones_diff_cols, compare_blocks_cols)), and_(ge(4, ones_diff_cols), ge(1, max_row_clue)))), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, _if_then_else(False, ones_diff_rows, max_row_clue)), _if_then_else(ge(1, max_row_clue), _if_then_else(False, max_row_clue, 3), _if_then_else(False, ones_diff_cols, max_col_clue))), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), compare_blocks_cols, 4)))
le(_if_then_else(le(_if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(True, ones_diff_cols, 3), _if_then_else(False, 0, 4))), _if_then_else(or_(True, le(zeros_diff_rows, 3)), _if_then_else(or_(False, False), _if_then_else(True, 4, 0), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(or_(False, True), _if_then_else(True, 1, 1), _if_then_else(True, compare_blocks_cols, 0))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, max_row_clue, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(2, ones_diff_rows), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 4)))), max_row_clue), _if_then_else(True, 1, max_col_clue), _if_then_else(or_(True, True), 2, max_row_clue)), _if_then_else(ge(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(False, _if_then_else(False, ones_diff_cols, ones_diff_cols), 4)), _if_then_else(ge(3, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(or_(ge(ones_diff_cols, zeros_diff_rows), True), ones_diff_cols, 1)), _if_then_else(and_(True, False), _if_then_else(False, 2, max_row_clue), _if_then_else(True, compare_blocks_cols, 3))), compare_blocks_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, 4, ones_diff_rows)))
ge(_if_then_else(True, _if_then_else(ge(4, 4), ones_diff_cols, zeros_diff_cols), max_col_clue), _if_then_else(and_(le(ones_diff_rows, ones_diff_cols), and_(ge(zeros_diff_rows, compare_blocks_rows), ge(0, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 3), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, ones_diff_cols, zeros_diff_rows)), _if_then_else(ge(2, 2), _if_then_else(True, 1, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(False, 2, 2)), _if_then_else(and_(False, True), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(le(ones_diff_cols, 4), _if_then_else(False, max_row_clue, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)))))
le(_if_then_else(or_(True, False), _if_then_else(False, 2, _if_then_else(ge(compare_blocks_cols, 4), _if_then_else(le(ones_diff_cols, max_col_clue), _if_then_else(False, zeros_diff_rows, _if_then_else(le(ones_diff_cols, max_col_clue), 2, ones_diff_cols)), 3), _if_then_else(True, _if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, _if_then_else(True, compare_blocks_rows, 3), compare_blocks_cols)))), _if_then_else(False, max_row_clue, 0)), compare_blocks_rows)
ge(_if_then_else(True, _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 0, ones_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, max_col_clue, 0), _if_then_else(False, zeros_diff_rows, 1)))
or_(ge(_if_then_else(le(0, zeros_diff_rows), 3, 4), _if_then_else(False, 4, 4)), and_(or_(False, False), or_(or_(and_(False, False), ge(max_col_clue, max_col_clue)), ge(_if_then_else(and_(True, False), ones_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, 4)))))
ge(_if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, _if_then_else(True, max_col_clue, ones_diff_rows)), _if_then_else(le(max_col_clue, 4), compare_blocks_rows, compare_blocks_cols)), ones_diff_rows)
or_(or_(and_(or_(False, False), False), le(2, 2)), or_(or_(False, True), le(_if_then_else(and_(False, True), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_row_clue, 1)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, ones_diff_cols))), compare_blocks_rows)))
VAL TREES:
mul(mul(mul(ones_diff_cols, ones_diff_rows), add(mul(ones_diff_cols, ones_diff_cols), ones_diff_rows)), mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)))
add(add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)))
add(add(mul(add(mul(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols))), add(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_rows)))), add(add(add(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), mul(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols)))
add(add(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)))
mul(mul(add(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols)))
mul(mul(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)))
add(mul(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, ones_diff_cols))))
mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_rows)))
COND TREES:
ge(_if_then_else(le(max_col_clue, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, _if_then_else(or_(and_(and_(le(4, _if_then_else(True, 0, ones_diff_cols)), ge(compare_blocks_cols, 1)), ge(_if_then_else(or_(True, True), 1, ones_diff_cols), 1)), le(_if_then_else(ge(compare_blocks_cols, _if_then_else(True, 3, 1)), 4, 1), _if_then_else(True, 1, max_col_clue))), _if_then_else(False, 4, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 3)), zeros_diff_cols)), _if_then_else(and_(le(compare_blocks_rows, 2), or_(or_(le(zeros_diff_rows, max_col_clue), ge(zeros_diff_cols, zeros_diff_rows)), and_(ge(4, ones_diff_cols), ge(1, max_row_clue)))), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_rows, _if_then_else(False, ones_diff_rows, max_row_clue)), _if_then_else(ge(1, max_row_clue), _if_then_else(False, max_row_clue, 3), _if_then_else(False, ones_diff_cols, max_col_clue))), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), compare_blocks_cols, 4)))
le(_if_then_else(le(_if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(True, ones_diff_cols, 3), _if_then_else(False, 0, 4))), _if_then_else(or_(True, le(zeros_diff_rows, 3)), _if_then_else(or_(False, False), _if_then_else(True, 4, 0), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(or_(False, True), _if_then_else(True, 1, 1), _if_then_else(True, compare_blocks_cols, 0))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, max_row_clue, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(2, ones_diff_rows), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 4)))), max_row_clue), _if_then_else(True, 1, max_col_clue), _if_then_else(or_(True, True), 2, max_row_clue)), _if_then_else(ge(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(True, ones_diff_cols, 3), _if_then_else(False, 0, 4))), _if_then_else(or_(True, le(zeros_diff_rows, 3)), _if_then_else(or_(False, False), _if_then_else(True, 4, 0), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(or_(False, True), _if_then_else(True, 1, 1), _if_then_else(True, compare_blocks_cols, 0))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, max_row_clue, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(2, ones_diff_rows), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 4))))), _if_then_else(ge(3, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(or_(ge(ones_diff_cols, zeros_diff_rows), True), ones_diff_cols, 1)), _if_then_else(and_(True, False), _if_then_else(False, 2, max_row_clue), _if_then_else(True, compare_blocks_cols, 3))), compare_blocks_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, 4, ones_diff_rows)))
ge(_if_then_else(True, _if_then_else(ge(4, 4), ones_diff_cols, zeros_diff_cols), max_col_clue), _if_then_else(and_(le(ones_diff_rows, ones_diff_cols), and_(ge(zeros_diff_rows, compare_blocks_rows), ge(0, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 3), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(2, 2), _if_then_else(True, 1, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(False, 2, 2)), _if_then_else(and_(False, True), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(le(ones_diff_cols, 4), _if_then_else(False, max_row_clue, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)))))
le(_if_then_else(or_(True, False), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, max_row_clue, 0)), compare_blocks_rows)
ge(_if_then_else(or_(True, False), _if_then_else(or_(ge(_if_then_else(or_(True, True), _if_then_else(True, max_row_clue, zeros_diff_rows), _if_then_else(False, 3, 2)), _if_then_else(and_(True, True), _if_then_else(False, 3, 3), _if_then_else(False, ones_diff_cols, compare_blocks_rows))), or_(or_(le(ones_diff_rows, 2), le(max_row_clue, compare_blocks_rows)), and_(and_(False, True), le(compare_blocks_rows, 2)))), zeros_diff_rows, 1), _if_then_else(True, 0, ones_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, max_col_clue, 0), _if_then_else(False, zeros_diff_rows, 1)))
ge(_if_then_else(and_(True, or_(False, True)), _if_then_else(False, max_col_clue, 2), _if_then_else(False, compare_blocks_cols, _if_then_else(True, ones_diff_cols, compare_blocks_rows))), _if_then_else(and_(True, False), _if_then_else(ge(_if_then_else(False, 4, max_col_clue), compare_blocks_cols), zeros_diff_rows, _if_then_else(or_(True, True), _if_then_else(False, ones_diff_cols, 3), ones_diff_rows)), _if_then_else(True, ones_diff_rows, ones_diff_cols)))
ge(_if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, _if_then_else(True, max_col_clue, ones_diff_rows)), _if_then_else(le(max_col_clue, 4), compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(True, max_row_clue, _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(True, compare_blocks_cols, max_col_clue)))
or_(or_(and_(or_(False, False), False), le(2, 2)), or_(False, le(_if_then_else(and_(False, le(_if_then_else(and_(and_(False, True), le(ones_diff_cols, 0)), _if_then_else(ge(compare_blocks_cols, 4), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(False, ones_diff_cols, 0), _if_then_else(False, max_row_clue, ones_diff_rows))), _if_then_else(and_(and_(False, False), or_(True, False)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_rows, max_col_clue), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(False, ones_diff_cols, 2))))), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_row_clue, 1)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, ones_diff_cols))), compare_blocks_rows)))
VAL TREES:
mul(mul(mul(ones_diff_cols, ones_diff_rows), add(mul(ones_diff_cols, ones_diff_cols), ones_diff_rows)), mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)))
add(add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)))
add(add(mul(add(mul(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols))), add(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_rows)))), add(add(add(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), mul(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols)))
add(add(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)))
mul(mul(add(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols)))
mul(mul(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)))
add(mul(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, ones_diff_cols))))
mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_rows)))
COND TREES:
ge(_if_then_else(le(max_col_clue, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, _if_then_else(True, _if_then_else(False, 4, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, _if_then_else(ge(ones_diff_cols, compare_blocks_cols), compare_blocks_cols, 4))), zeros_diff_cols)), _if_then_else(and_(le(compare_blocks_rows, 2), False), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_rows, _if_then_else(False, ones_diff_rows, max_row_clue)), ones_diff_rows), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), compare_blocks_cols, 4)))
le(_if_then_else(le(_if_then_else(False, _if_then_else(False, ones_diff_cols, ones_diff_cols), 4), max_row_clue), _if_then_else(True, 1, max_col_clue), _if_then_else(or_(True, True), 2, max_row_clue)), _if_then_else(ge(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(False, _if_then_else(False, ones_diff_cols, ones_diff_cols), 4)), 4, _if_then_else(and_(True, False), _if_then_else(False, 2, max_row_clue), _if_then_else(True, compare_blocks_cols, 3))), compare_blocks_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, 4, ones_diff_rows)))
ge(_if_then_else(True, _if_then_else(ge(4, 4), ones_diff_cols, zeros_diff_cols), max_col_clue), _if_then_else(and_(and_(ge(ones_diff_cols, 3), True), and_(ge(zeros_diff_rows, compare_blocks_rows), ge(0, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 3), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(2, 2), _if_then_else(True, 1, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(False, 2, 2)), _if_then_else(and_(False, True), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(le(ones_diff_cols, 4), _if_then_else(False, max_row_clue, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)))))
le(_if_then_else(or_(True, False), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, max_row_clue, 0)), _if_then_else(ge(compare_blocks_cols, 4), _if_then_else(le(ones_diff_cols, max_col_clue), _if_then_else(False, zeros_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), 2, ones_diff_cols)), 3), _if_then_else(True, zeros_diff_cols, _if_then_else(False, _if_then_else(True, compare_blocks_rows, 3), compare_blocks_cols))))
ge(_if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 0, ones_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, 0, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))
or_(ge(_if_then_else(le(0, zeros_diff_rows), 3, 4), _if_then_else(False, 4, 2)), and_(and_(or_(False, False), or_(or_(and_(False, False), ge(max_col_clue, max_col_clue)), ge(_if_then_else(and_(True, False), ones_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, 4)))), or_(or_(and_(False, False), ge(max_col_clue, max_col_clue)), ge(_if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, 4)))))
ge(_if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, _if_then_else(False, max_col_clue, ones_diff_rows)), _if_then_else(le(max_col_clue, 4), compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(False, max_row_clue, _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(True, compare_blocks_cols, max_col_clue)))
or_(or_(and_(or_(False, False), False), le(2, 2)), or_(or_(False, True), le(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_row_clue, 1)), _if_then_else(or_(True, or_(False, True)), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, ones_diff_cols))), compare_blocks_rows)))
VAL TREES:
mul(mul(mul(ones_diff_cols, ones_diff_rows), add(mul(ones_diff_cols, ones_diff_cols), ones_diff_rows)), mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)))
add(add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)))
add(add(mul(add(mul(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols))), add(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_rows)))), add(add(add(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), mul(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols)))
add(add(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)))
mul(mul(add(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols)))
mul(mul(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)))
add(mul(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, ones_diff_cols))))
mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_rows)))
COND TREES:
ge(_if_then_else(le(_if_then_else(False, 4, zeros_diff_cols), zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, _if_then_else(True, _if_then_else(le(compare_blocks_rows, 2), 4, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 3)), zeros_diff_cols)), _if_then_else(and_(le(compare_blocks_rows, 2), True), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_rows, 3), ones_diff_rows), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), compare_blocks_cols, 4)))
le(_if_then_else(le(_if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(True, ones_diff_cols, 3), _if_then_else(False, 0, 4))), _if_then_else(or_(and_(False, False), le(zeros_diff_rows, 3)), _if_then_else(or_(False, False), _if_then_else(True, 4, 0), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(or_(False, True), _if_then_else(True, 1, 1), _if_then_else(True, compare_blocks_cols, 0))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, max_col_clue), 3), _if_then_else(or_(True, True), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(2, ones_diff_rows), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 4)))), max_row_clue), _if_then_else(True, 1, max_col_clue), _if_then_else(le(_if_then_else(False, _if_then_else(True, compare_blocks_cols, zeros_diff_rows), 0), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(or_(False, True), 2, _if_then_else(True, 1, 1)), _if_then_else(True, _if_then_else(or_(True, True), zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, max_col_clue))), _if_then_else(ge(compare_blocks_cols, _if_then_else(True, 0, 0)), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, _if_then_else(True, 2, 0), _if_then_else(False, 4, 4))))), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, 4, ones_diff_rows)))
ge(_if_then_else(le(_if_then_else(ge(ones_diff_cols, zeros_diff_rows), _if_then_else(True, max_col_clue, 4), _if_then_else(True, max_col_clue, compare_blocks_cols)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, max_col_clue, _if_then_else(True, compare_blocks_cols, compare_blocks_cols)))), _if_then_else(or_(le(max_col_clue, compare_blocks_rows), or_(True, False)), _if_then_else(or_(False, True), _if_then_else(ge(_if_then_else(and_(le(2, max_row_clue), True), _if_then_else(False, _if_then_else(False, ones_diff_rows, 4), _if_then_else(True, 4, max_col_clue)), _if_then_else(False, max_col_clue, 3)), _if_then_else(and_(False, and_(False, True)), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 0, zeros_diff_rows))), 1, 3), _if_then_else(False, 3, 4)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, 0, max_col_clue), _if_then_else(True, 3, compare_blocks_cols))), _if_then_else(ge(_if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 3, ones_diff_cols)), _if_then_else(True, _if_then_else(False, ones_diff_cols, 4), _if_then_else(True, ones_diff_cols, ones_diff_cols)), _if_then_else(ge(compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_cols, 3), _if_then_else(le(_if_then_else(False, 4, 1), _if_then_else(True, compare_blocks_rows, _if_then_else(False, 0, 3))), _if_then_else(ge(max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 0, _if_then_else(False, 1, 4))), _if_then_else(le(max_col_clue, compare_blocks_rows), _if_then_else(True, _if_then_else(False, 4, max_row_clue), 3), _if_then_else(False, 3, 4)))))), _if_then_else(and_(and_(ge(ones_diff_cols, 3), True), and_(ge(zeros_diff_rows, compare_blocks_rows), ge(0, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 3), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(2, 2), _if_then_else(True, 1, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, 2, 2)), _if_then_else(and_(False, True), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(le(ones_diff_cols, 4), _if_then_else(False, max_row_clue, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)))))
le(_if_then_else(or_(True, False), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, max_row_clue, 0)), _if_then_else(ge(compare_blocks_cols, 4), _if_then_else(False, _if_then_else(le(zeros_diff_rows, _if_then_else(le(ones_diff_cols, max_col_clue), 2, max_row_clue)), zeros_diff_rows, compare_blocks_cols), 3), _if_then_else(True, zeros_diff_cols, _if_then_else(False, _if_then_else(True, compare_blocks_rows, 3), compare_blocks_cols))))
ge(_if_then_else(or_(True, False), _if_then_else(False, _if_then_else(or_(False, True), _if_then_else(True, max_col_clue, 0), _if_then_else(False, zeros_diff_rows, 1)), 1), _if_then_else(True, 0, ones_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, max_col_clue, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))
or_(ge(_if_then_else(le(0, 4), 3, 4), _if_then_else(False, 4, 2)), and_(or_(False, False), or_(le(_if_then_else(or_(True, True), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 1)), _if_then_else(le(zeros_diff_cols, zeros_diff_rows), _if_then_else(True, 3, 0), _if_then_else(True, 0, zeros_diff_cols))), True)))
ge(_if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, _if_then_else(False, max_col_clue, ones_diff_rows)), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, max_row_clue, _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(True, 2, max_col_clue)))
or_(or_(and_(or_(False, False), False), le(2, 2)), or_(or_(False, True), le(_if_then_else(True, _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(and_(or_(and_(and_(and_(False, False), le(ones_diff_rows, ones_diff_rows)), le(_if_then_else(True, max_col_clue, 2), _if_then_else(True, max_col_clue, 4))), True), or_(and_(le(_if_then_else(False, 2, 0), _if_then_else(True, ones_diff_rows, ones_diff_cols)), and_(and_(False, False), or_(False, True))), or_(or_(or_(False, False), and_(True, False)), ge(_if_then_else(True, ones_diff_rows, 1), _if_then_else(False, 1, zeros_diff_cols))))), 4, ones_diff_rows), _if_then_else(True, max_row_clue, 1)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), 4)), compare_blocks_rows)))
VAL TREES:
mul(mul(mul(ones_diff_cols, ones_diff_rows), add(mul(ones_diff_cols, ones_diff_cols), ones_diff_rows)), mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)))
add(add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)))
add(add(mul(add(mul(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols))), add(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_rows)))), add(add(add(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), mul(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols)))
add(add(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)))
mul(mul(add(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols)))
mul(mul(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)))
add(mul(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, ones_diff_cols))))
mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_rows)))
COND TREES:
ge(_if_then_else(le(max_col_clue, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, _if_then_else(True, _if_then_else(False, 4, zeros_diff_cols), _if_then_else(True, zeros_diff_rows, _if_then_else(False, ones_diff_rows, max_row_clue))), zeros_diff_cols)), _if_then_else(and_(le(compare_blocks_rows, 2), False), _if_then_else(and_(False, True), _if_then_else(and_(le(compare_blocks_rows, 2), False), zeros_diff_rows, _if_then_else(False, ones_diff_rows, max_row_clue)), _if_then_else(ge(1, max_row_clue), _if_then_else(False, max_row_clue, 3), _if_then_else(False, ones_diff_cols, max_col_clue))), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), compare_blocks_cols, 4)))
le(_if_then_else(le(_if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(True, ones_diff_cols, 3), _if_then_else(False, 0, 4))), _if_then_else(or_(True, le(zeros_diff_rows, 3)), _if_then_else(or_(False, False), _if_then_else(True, 4, 0), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(or_(False, True), _if_then_else(True, 1, 1), _if_then_else(True, compare_blocks_cols, 0))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, max_row_clue, compare_blocks_cols)), _if_then_else(or_(True, True), max_col_clue, _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(2, ones_diff_rows), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 4)))), max_row_clue), _if_then_else(True, 1, max_col_clue), _if_then_else(or_(True, True), 2, max_row_clue)), _if_then_else(ge(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(False, _if_then_else(False, ones_diff_cols, ones_diff_cols), 4)), _if_then_else(ge(3, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(or_(ge(ones_diff_cols, zeros_diff_rows), True), ones_diff_cols, 1)), _if_then_else(and_(True, False), _if_then_else(False, 2, max_row_clue), _if_then_else(True, compare_blocks_cols, 3))), compare_blocks_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, 4, ones_diff_rows)))
ge(_if_then_else(True, _if_then_else(ge(4, 4), ones_diff_cols, zeros_diff_cols), max_col_clue), _if_then_else(and_(le(ones_diff_rows, ones_diff_cols), and_(ge(zeros_diff_rows, compare_blocks_rows), ge(0, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 3), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(2, 2), _if_then_else(True, 1, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(False, 2, 2)), _if_then_else(and_(False, True), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(le(ones_diff_cols, 4), _if_then_else(True, max_row_clue, 0), 3))))
le(_if_then_else(or_(True, False), _if_then_else(False, 3, compare_blocks_cols), _if_then_else(False, ones_diff_cols, 0)), compare_blocks_rows)
ge(_if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 0, ones_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, 0, 1), _if_then_else(False, 0, 1)))
or_(ge(_if_then_else(le(0, zeros_diff_rows), 3, 4), _if_then_else(False, 4, 4)), and_(or_(False, ge(_if_then_else(le(0, zeros_diff_rows), 3, 4), _if_then_else(False, 4, 2))), or_(or_(and_(False, False), ge(max_col_clue, max_col_clue)), ge(_if_then_else(and_(True, False), ones_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, 4)))))
ge(_if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, _if_then_else(True, max_col_clue, ones_diff_rows)), _if_then_else(le(max_col_clue, 4), compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(False, max_row_clue, _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(True, compare_blocks_cols, max_col_clue)))
or_(or_(and_(or_(False, False), False), le(2, 2)), or_(or_(False, True), le(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(False, 4, ones_diff_rows), _if_then_else(or_(le(_if_then_else(False, 0, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), False), max_row_clue, 1)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, ones_diff_cols))), compare_blocks_rows)))
VAL TREES:
mul(mul(mul(ones_diff_cols, ones_diff_rows), add(mul(ones_diff_cols, ones_diff_cols), ones_diff_rows)), mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)))
add(add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)))
add(add(mul(add(mul(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols))), add(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_rows)))), add(add(add(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), mul(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols)))
add(add(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)))
mul(mul(add(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols)))
mul(mul(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)))
add(mul(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, ones_diff_cols))))
mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_rows)))
COND TREES:
ge(_if_then_else(le(max_col_clue, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, _if_then_else(True, _if_then_else(le(compare_blocks_rows, 2), 4, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 3)), zeros_diff_cols)), _if_then_else(and_(le(compare_blocks_rows, 2), False), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, _if_then_else(False, ones_diff_rows, max_row_clue)), ones_diff_rows), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), compare_blocks_cols, 4)))
le(_if_then_else(le(_if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(True, ones_diff_cols, 3), _if_then_else(False, 0, 4))), _if_then_else(or_(and_(False, False), le(zeros_diff_rows, 3)), _if_then_else(or_(False, False), _if_then_else(True, 4, 0), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(or_(False, True), _if_then_else(True, 1, 1), _if_then_else(True, compare_blocks_cols, 0))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, max_row_clue, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(2, ones_diff_rows), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 4)))), max_row_clue), _if_then_else(True, 1, max_col_clue), _if_then_else(le(_if_then_else(False, _if_then_else(True, compare_blocks_cols, zeros_diff_rows), 0), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(or_(False, True), 2, 0), _if_then_else(True, _if_then_else(or_(True, True), zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, max_col_clue))), _if_then_else(ge(compare_blocks_cols, _if_then_else(True, 0, 0)), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, _if_then_else(True, 2, 0), _if_then_else(False, 4, 4))))), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, 4, ones_diff_rows)))
ge(_if_then_else(le(_if_then_else(ge(ones_diff_cols, zeros_diff_rows), _if_then_else(True, max_col_clue, 4), _if_then_else(True, max_col_clue, compare_blocks_cols)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, max_col_clue, 3))), _if_then_else(or_(le(max_col_clue, compare_blocks_rows), or_(True, False)), _if_then_else(or_(False, True), _if_then_else(ge(_if_then_else(and_(le(2, max_row_clue), True), _if_then_else(False, _if_then_else(False, ones_diff_rows, 4), _if_then_else(True, 4, max_col_clue)), _if_then_else(False, max_col_clue, 3)), _if_then_else(and_(False, and_(False, True)), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 0, zeros_diff_rows))), 1, 3), _if_then_else(False, 3, 4)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, 0, max_col_clue), _if_then_else(True, 3, compare_blocks_cols))), _if_then_else(ge(_if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 3, 3)), _if_then_else(True, _if_then_else(False, ones_diff_cols, 4), _if_then_else(True, ones_diff_cols, ones_diff_cols)), _if_then_else(ge(compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_cols, 3), _if_then_else(le(_if_then_else(False, 4, 1), _if_then_else(True, compare_blocks_rows, _if_then_else(False, 0, 3))), _if_then_else(ge(max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 0, _if_then_else(False, 1, 4))), _if_then_else(le(max_col_clue, compare_blocks_rows), _if_then_else(True, _if_then_else(False, 4, max_row_clue), 3), _if_then_else(False, 3, 4)))))), _if_then_else(and_(and_(ge(ones_diff_cols, 3), True), and_(ge(zeros_diff_rows, compare_blocks_rows), ge(0, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 3), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(2, 2), _if_then_else(True, 1, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(False, 2, 2)), _if_then_else(and_(False, True), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(le(ones_diff_cols, 4), _if_then_else(False, max_row_clue, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)))))
le(_if_then_else(or_(True, False), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, max_row_clue, 0)), _if_then_else(ge(compare_blocks_cols, 4), _if_then_else(False, _if_then_else(False, zeros_diff_rows, compare_blocks_cols), 3), _if_then_else(True, zeros_diff_cols, _if_then_else(False, _if_then_else(True, compare_blocks_rows, 3), compare_blocks_cols))))
ge(_if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 0, ones_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, max_col_clue, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))
or_(ge(_if_then_else(le(0, 4), 3, 4), _if_then_else(False, 4, 2)), and_(or_(False, False), or_(True, True)))
ge(_if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, _if_then_else(False, max_col_clue, ones_diff_rows)), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(False, max_row_clue, _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(True, compare_blocks_cols, max_col_clue)))
or_(or_(and_(or_(False, False), False), le(2, 2)), or_(or_(False, True), le(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(and_(or_(and_(and_(and_(False, False), le(ones_diff_rows, ones_diff_rows)), le(_if_then_else(True, max_col_clue, 2), _if_then_else(True, max_col_clue, 4))), or_(or_(or_(False, False), le(1, max_row_clue)), ge(_if_then_else(False, 0, compare_blocks_rows), _if_then_else(False, 4, zeros_diff_rows)))), or_(and_(le(_if_then_else(False, 2, 0), _if_then_else(True, ones_diff_rows, ones_diff_cols)), and_(and_(False, False), or_(False, True))), or_(or_(or_(False, False), and_(True, False)), ge(_if_then_else(True, ones_diff_rows, 1), _if_then_else(False, 1, zeros_diff_cols))))), 4, ones_diff_rows), _if_then_else(True, max_row_clue, 1)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), 4)), compare_blocks_rows)))
VAL TREES:
mul(mul(mul(ones_diff_cols, ones_diff_rows), add(mul(ones_diff_cols, ones_diff_cols), ones_diff_rows)), mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)))
add(add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)))
add(add(mul(add(mul(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols))), add(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_rows)))), add(add(add(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), mul(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols)))
add(add(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)))
mul(mul(add(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols)))
mul(mul(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)))
add(mul(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, ones_diff_cols))))
mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_rows)))
COND TREES:
ge(_if_then_else(le(max_col_clue, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, _if_then_else(True, _if_then_else(False, 4, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 3)), zeros_diff_cols)), _if_then_else(and_(le(compare_blocks_rows, 2), False), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, _if_then_else(True, ones_diff_rows, max_row_clue)), ones_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue)))
le(_if_then_else(le(0, max_row_clue), _if_then_else(True, 1, max_col_clue), _if_then_else(or_(True, True), 2, max_row_clue)), _if_then_else(ge(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(False, _if_then_else(False, ones_diff_cols, ones_diff_cols), 4)), _if_then_else(ge(3, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(or_(ge(ones_diff_cols, zeros_diff_rows), True), ones_diff_cols, 1)), _if_then_else(and_(True, False), _if_then_else(False, 2, max_row_clue), _if_then_else(True, compare_blocks_cols, 3))), compare_blocks_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, 4, ones_diff_rows)))
ge(_if_then_else(True, _if_then_else(ge(4, 4), ones_diff_cols, zeros_diff_cols), max_col_clue), _if_then_else(and_(and_(ge(ones_diff_cols, 3), True), and_(ge(zeros_diff_rows, compare_blocks_rows), ge(0, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 3), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(2, 2), _if_then_else(True, 1, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(False, 2, 2)), _if_then_else(and_(False, False), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(le(ones_diff_cols, 4), _if_then_else(False, max_row_clue, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)))))
le(_if_then_else(or_(True, False), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(False, max_row_clue, 0)), _if_then_else(ge(compare_blocks_cols, 4), _if_then_else(le(ones_diff_cols, max_col_clue), _if_then_else(False, zeros_diff_rows, _if_then_else(le(ones_diff_cols, max_col_clue), 2, ones_diff_cols)), 3), _if_then_else(True, _if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, _if_then_else(True, compare_blocks_rows, 3), compare_blocks_cols))))
ge(_if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 0, _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 0, ones_diff_cols)))), _if_then_else(or_(False, True), _if_then_else(False, _if_then_else(ge(_if_then_else(True, 1, ones_diff_rows), _if_then_else(False, 4, _if_then_else(False, 4, ones_diff_rows))), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(True, zeros_diff_rows, zeros_diff_cols), _if_then_else(ge(3, _if_then_else(False, max_col_clue, max_col_clue)), max_row_clue, 4)), _if_then_else(or_(False, True), _if_then_else(and_(True, or_(True, False)), _if_then_else(ge(compare_blocks_cols, ones_diff_cols), _if_then_else(False, compare_blocks_rows, 4), _if_then_else(False, compare_blocks_rows, 0)), 4), _if_then_else(True, max_col_clue, _if_then_else(False, ones_diff_rows, 2)))), zeros_diff_rows), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))
or_(ge(_if_then_else(le(0, zeros_diff_rows), 3, 4), _if_then_else(False, 4, 2)), and_(or_(False, False), or_(or_(and_(False, False), ge(max_col_clue, max_col_clue)), ge(_if_then_else(and_(True, False), ones_diff_cols, compare_blocks_rows), _if_then_else(and_(True, True), 2, ones_diff_rows)))))
ge(_if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, _if_then_else(True, max_col_clue, ones_diff_rows)), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(le(compare_blocks_cols, max_col_clue), True), _if_then_else(False, max_row_clue, _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(True, compare_blocks_cols, max_col_clue)))
or_(or_(and_(or_(False, False), False), le(2, 2)), or_(or_(ge(_if_then_else(ge(_if_then_else(ge(4, zeros_diff_rows), _if_then_else(False, 0, ones_diff_rows), _if_then_else(True, zeros_diff_cols, max_row_clue)), _if_then_else(le(ones_diff_cols, 1), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, compare_blocks_cols, ones_diff_rows))), _if_then_else(or_(or_(True, False), and_(True, True)), _if_then_else(or_(False, True), _if_then_else(False, 0, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, ones_diff_cols)), _if_then_else(ge(1, max_row_clue), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(True, compare_blocks_rows, max_row_clue))), _if_then_else(ge(_if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, 2)), _if_then_else(le(4, zeros_diff_rows), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, ones_diff_rows)), _if_then_else(le(3, ones_diff_rows), _if_then_else(False, zeros_diff_rows, ones_diff_cols), _if_then_else(False, ones_diff_cols, zeros_diff_cols)))), _if_then_else(or_(le(_if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, ones_diff_rows, 0)), and_(ge(2, 0), and_(False, True))), _if_then_else(or_(le(compare_blocks_rows, 3), ge(ones_diff_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, max_col_clue, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(False, 2, zeros_diff_cols))), _if_then_else(le(_if_then_else(True, compare_blocks_rows, 4), _if_then_else(False, ones_diff_rows, 2)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_rows, 0), _if_then_else(True, zeros_diff_rows, 2)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, 2), _if_then_else(True, zeros_diff_rows, 3))))), True), le(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(True, max_row_clue, 1)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, ones_diff_cols))), compare_blocks_rows)))
VAL TREES:
mul(mul(mul(ones_diff_cols, ones_diff_rows), add(mul(ones_diff_cols, ones_diff_cols), ones_diff_rows)), mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)))
add(add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)))
add(add(mul(add(mul(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols))), add(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_rows)))), add(add(add(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), mul(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols)))
add(add(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)))
mul(mul(add(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols)))
mul(mul(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)))
add(mul(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, ones_diff_cols))))
mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_rows)))
COND TREES:
le(_if_then_else(or_(and_(or_(or_(True, True), or_(True, True)), le(_if_then_else(True, ones_diff_cols, ones_diff_cols), _if_then_else(True, max_col_clue, 4))), le(_if_then_else(ge(compare_blocks_rows, 0), _if_then_else(False, max_col_clue, max_row_clue), _if_then_else(False, max_row_clue, 0)), _if_then_else(ge(3, max_col_clue), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(True, max_row_clue, 4)))), _if_then_else(le(_if_then_else(le(zeros_diff_rows, 4), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, ones_diff_rows, 2)), _if_then_else(le(compare_blocks_rows, max_col_clue), _if_then_else(True, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, 0))), _if_then_else(or_(ge(ones_diff_rows, ones_diff_cols), le(zeros_diff_rows, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(False, 0, compare_blocks_rows), _if_then_else(True, ones_diff_rows, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, 0, ones_diff_rows), _if_then_else(True, 3, max_row_clue))), _if_then_else(or_(or_(False, True), ge(4, compare_blocks_rows)), _if_then_else(le(zeros_diff_rows, 1), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(True, 4, 3)), _if_then_else(ge(0, 3), _if_then_else(False, 3, max_col_clue), _if_then_else(False, 0, max_col_clue)))), _if_then_else(ge(_if_then_else(ge(2, 2), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, 2, compare_blocks_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(True, 0, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, 3, zeros_diff_rows), _if_then_else(True, max_col_clue, max_row_clue)), _if_then_else(ge(2, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, 4), _if_then_else(True, 1, max_row_clue)), _if_then_else(le(max_col_clue, 2), _if_then_else(True, 3, max_row_clue), _if_then_else(True, 3, 0))), _if_then_else(or_(or_(True, True), le(compare_blocks_cols, 4)), _if_then_else(le(zeros_diff_rows, 3), _if_then_else(True, 0, max_row_clue), _if_then_else(False, 0, 1)), _if_then_else(ge(1, zeros_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(False, compare_blocks_cols, ones_diff_rows))))), _if_then_else(or_(False, False), _if_then_else(False, 2, 2), _if_then_else(True, zeros_diff_rows, max_col_clue)))
ge(_if_then_else(and_(True, False), 1, _if_then_else(False, max_row_clue, zeros_diff_rows)), _if_then_else(True, _if_then_else(True, 2, ones_diff_cols), _if_then_else(and_(True, False), 3, compare_blocks_cols)))
and_(or_(le(zeros_diff_cols, _if_then_else(ge(4, 4), ones_diff_cols, zeros_diff_cols)), le(2, _if_then_else(ge(_if_then_else(and_(ge(3, 3), le(4, ones_diff_rows)), _if_then_else(le(compare_blocks_rows, zeros_diff_cols), _if_then_else(True, max_col_clue, 3), _if_then_else(True, compare_blocks_rows, 2)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(True, 0, 3))), _if_then_else(ge(_if_then_else(False, 2, 2), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(True, 2, 0), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(or_(False, False), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(True, max_row_clue, zeros_diff_rows)))), _if_then_else(ge(_if_then_else(ge(0, 4), _if_then_else(True, ones_diff_cols, compare_blocks_cols), _if_then_else(True, 3, 2)), _if_then_else(le(4, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, 0, max_col_clue))), _if_then_else(le(_if_then_else(True, max_row_clue, 0), _if_then_else(False, 2, 1)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(False, max_row_clue, 4)), _if_then_else(or_(True, False), _if_then_else(False, max_col_clue, max_col_clue), _if_then_else(False, 3, max_col_clue))), _if_then_else(and_(ge(zeros_diff_rows, zeros_diff_cols), ge(compare_blocks_rows, zeros_diff_cols)), _if_then_else(le(1, 1), _if_then_else(True, 0, ones_diff_cols), _if_then_else(True, 4, zeros_diff_rows)), _if_then_else(ge(3, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)))), _if_then_else(ge(_if_then_else(le(ones_diff_cols, zeros_diff_cols), _if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, max_row_clue)), _if_then_else(le(1, 4), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, 4, compare_blocks_cols))), _if_then_else(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(True, max_col_clue, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(True, max_row_clue, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, 2)), _if_then_else(or_(True, True), _if_then_else(True, 0, 4), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(le(_if_then_else(False, 1, 0), _if_then_else(False, max_col_clue, compare_blocks_cols)), _if_then_else(ge(ones_diff_cols, zeros_diff_cols), _if_then_else(False, ones_diff_cols, max_col_clue), _if_then_else(True, compare_blocks_cols, 4)), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, 4), _if_then_else(True, max_row_clue, 4))))))), and_(ge(_if_then_else(or_(False, True), _if_then_else(True, 4, 0), _if_then_else(True, zeros_diff_rows, 3)), _if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(le(ones_diff_cols, compare_blocks_rows), compare_blocks_rows, max_row_clue), _if_then_else(False, compare_blocks_rows, 1))), le(ones_diff_rows, ones_diff_cols)))
or_(le(_if_then_else(and_(le(compare_blocks_cols, zeros_diff_cols), and_(False, True)), _if_then_else(and_(True, True), _if_then_else(True, 4, 1), _if_then_else(False, compare_blocks_rows, max_row_clue)), _if_then_else(ge(max_col_clue, 3), _if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(max_row_clue, 4), le(zeros_diff_rows, 4)), max_col_clue, _if_then_else(and_(True, True), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(True, max_col_clue, max_row_clue)))), or_(ge(_if_then_else(and_(True, le(zeros_diff_rows, _if_then_else(le(ones_diff_cols, max_col_clue), 2, ones_diff_cols))), _if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, ones_diff_cols, compare_blocks_rows)), _if_then_else(le(_if_then_else(False, 3, zeros_diff_rows), _if_then_else(True, 3, 1)), _if_then_else(or_(True, True), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(True, 3, 1)), _if_then_else(or_(False, False), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 0)))), or_(or_(False, False), and_(le(0, zeros_diff_cols), and_(True, True)))))
and_(False, True)
and_(and_(True, True), le(_if_then_else(True, _if_then_else(True, zeros_diff_cols, 0), max_col_clue), _if_then_else(True, max_col_clue, max_row_clue)))
or_(or_(and_(or_(ge(4, compare_blocks_rows), le(zeros_diff_cols, max_row_clue)), and_(le(compare_blocks_cols, 2), le(max_col_clue, zeros_diff_rows))), or_(le(_if_then_else(True, 2, 4), _if_then_else(False, compare_blocks_rows, 3)), or_(le(1, 3), or_(True, False)))), or_(le(_if_then_else(or_(False, True), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, 2)), _if_then_else(ge(max_col_clue, zeros_diff_rows), _if_then_else(True, _if_then_else(le(_if_then_else(True, compare_blocks_cols, compare_blocks_cols), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, 1, ones_diff_rows), _if_then_else(True, max_row_clue, 4))), zeros_diff_rows), _if_then_else(or_(True, or_(True, True)), compare_blocks_cols, 3))), or_(le(_if_then_else(False, compare_blocks_rows, _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 1, zeros_diff_rows))), _if_then_else(True, 3, _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, _if_then_else(True, max_col_clue, ones_diff_rows)), _if_then_else(le(max_col_clue, 4), compare_blocks_rows, compare_blocks_cols)))), ge(_if_then_else(False, zeros_diff_cols, ones_diff_rows), _if_then_else(False, 3, ones_diff_rows)))))
le(_if_then_else(le(2, 2), _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, max_col_clue, 0)), _if_then_else(and_(True, or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), compare_blocks_rows), and_(le(max_col_clue, max_row_clue), True))), _if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, 4)))
VAL TREES:
mul(mul(mul(ones_diff_cols, add(zeros_diff_rows, ones_diff_rows)), mul(zeros_diff_cols, ones_diff_cols)), add(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_cols, mul(zeros_diff_rows, compare_blocks_rows))))
add(add(mul(compare_blocks_cols, ones_diff_rows), mul(add(ones_diff_cols, zeros_diff_cols), zeros_diff_cols)), add(mul(add(add(mul(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, add(mul(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))), mul(add(compare_blocks_rows, add(compare_blocks_rows, ones_diff_rows)), add(compare_blocks_rows, compare_blocks_cols))), ones_diff_rows), mul(mul(ones_diff_rows, add(zeros_diff_cols, compare_blocks_cols)), zeros_diff_cols)))
add(add(add(compare_blocks_rows, zeros_diff_cols), add(add(mul(add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows)), add(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_rows)))), ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_rows)))
add(add(mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_rows, zeros_diff_cols)), add(mul(zeros_diff_rows, compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows))), add(add(add(compare_blocks_rows, add(mul(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)))), add(zeros_diff_rows, zeros_diff_rows)), mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, zeros_diff_rows))))
add(mul(mul(ones_diff_cols, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(add(mul(mul(zeros_diff_cols, zeros_diff_rows), add(ones_diff_cols, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_cols), add(ones_diff_cols, compare_blocks_cols))), mul(add(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)))))
mul(add(add(add(add(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, add(add(mul(add(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))), add(add(add(compare_blocks_rows, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)))), add(add(add(mul(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, zeros_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(compare_blocks_rows, zeros_diff_rows))))))), add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))), mul(add(mul(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_rows)), add(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, compare_blocks_cols)))), mul(add(add(add(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_cols))), add(mul(add(add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, add(compare_blocks_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_rows, ones_diff_cols), ones_diff_rows), add(compare_blocks_rows, ones_diff_cols))), add(zeros_diff_cols, ones_diff_rows)), add(mul(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, zeros_diff_rows)))))
mul(add(add(mul(add(compare_blocks_cols, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_rows)), add(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), add(mul(mul(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols)))), add(mul(mul(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols))), add(add(add(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), add(add(add(ones_diff_cols, zeros_diff_cols), add(add(ones_diff_rows, ones_diff_cols), compare_blocks_cols)), add(mul(ones_diff_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols)))), mul(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, ones_diff_rows)))
add(mul(add(compare_blocks_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), add(mul(ones_diff_cols, add(mul(zeros_diff_cols, zeros_diff_rows), add(mul(add(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), add(add(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols))), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows)), add(mul(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_cols)))), add(add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_rows)), add(mul(compare_blocks_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_cols))), add(add(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols))))), ones_diff_cols))), add(compare_blocks_cols, add(zeros_diff_rows, ones_diff_rows))))
COND TREES:
ge(_if_then_else(le(max_col_clue, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, _if_then_else(True, _if_then_else(False, 4, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 3)), zeros_diff_cols)), _if_then_else(and_(le(compare_blocks_rows, 2), False), _if_then_else(and_(False, True), _if_then_else(True, 3, _if_then_else(True, ones_diff_rows, max_row_clue)), ones_diff_rows), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), compare_blocks_cols, 4)))
le(_if_then_else(le(_if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(True, ones_diff_cols, 3), _if_then_else(False, 0, 4))), _if_then_else(or_(True, le(zeros_diff_rows, 3)), _if_then_else(or_(False, False), _if_then_else(True, 4, 0), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(or_(False, True), _if_then_else(True, 1, 1), _if_then_else(True, compare_blocks_cols, 0))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, max_row_clue, compare_blocks_cols)), zeros_diff_rows, _if_then_else(le(2, ones_diff_rows), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 4)))), max_row_clue), _if_then_else(True, 1, max_col_clue), _if_then_else(or_(True, True), 2, max_row_clue)), _if_then_else(ge(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(False, _if_then_else(False, ones_diff_cols, ones_diff_cols), 4)), _if_then_else(ge(3, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(or_(ge(ones_diff_cols, zeros_diff_rows), True), ones_diff_cols, 1)), _if_then_else(and_(True, False), _if_then_else(False, 2, max_row_clue), _if_then_else(True, compare_blocks_cols, 3))), compare_blocks_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, 4, ones_diff_rows)))
ge(_if_then_else(True, _if_then_else(ge(4, 4), ones_diff_cols, zeros_diff_cols), max_col_clue), _if_then_else(and_(and_(ge(ones_diff_cols, 3), True), and_(ge(zeros_diff_rows, compare_blocks_rows), ge(0, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 3), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(2, 2), _if_then_else(True, 1, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(False, 2, 2)), _if_then_else(and_(False, True), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(le(ones_diff_cols, 4), _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)))))
le(_if_then_else(or_(True, False), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, max_row_clue, 0)), _if_then_else(ge(compare_blocks_cols, 4), _if_then_else(le(ones_diff_cols, max_col_clue), _if_then_else(False, zeros_diff_rows, _if_then_else(le(ones_diff_cols, max_col_clue), 2, ones_diff_cols)), 3), _if_then_else(True, _if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, _if_then_else(True, compare_blocks_rows, 3), compare_blocks_cols))))
ge(_if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 0, _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 0, ones_diff_cols)))), _if_then_else(or_(False, True), _if_then_else(False, _if_then_else(ge(_if_then_else(True, 1, ones_diff_rows), _if_then_else(False, 4, _if_then_else(False, 4, ones_diff_rows))), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(True, zeros_diff_rows, zeros_diff_cols), _if_then_else(ge(3, _if_then_else(False, max_col_clue, max_col_clue)), max_row_clue, 4)), _if_then_else(or_(False, True), _if_then_else(and_(True, or_(True, False)), _if_then_else(ge(compare_blocks_cols, ones_diff_cols), _if_then_else(False, compare_blocks_rows, 4), _if_then_else(False, compare_blocks_rows, 0)), 4), _if_then_else(True, max_col_clue, _if_then_else(False, ones_diff_rows, 2)))), 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))
or_(ge(_if_then_else(le(0, zeros_diff_rows), 3, 4), _if_then_else(False, 4, 2)), and_(or_(False, False), or_(or_(and_(False, False), ge(max_col_clue, max_col_clue)), ge(_if_then_else(and_(True, False), ones_diff_cols, compare_blocks_rows), _if_then_else(or_(le(zeros_diff_cols, zeros_diff_cols), and_(False, ge(max_row_clue, 2))), 2, ones_diff_rows)))))
ge(0, _if_then_else(or_(le(compare_blocks_cols, max_col_clue), True), _if_then_else(False, max_row_clue, _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(True, compare_blocks_cols, max_col_clue)))
or_(or_(and_(or_(False, False), False), le(2, 2)), or_(or_(ge(_if_then_else(ge(_if_then_else(ge(4, zeros_diff_rows), _if_then_else(False, 0, ones_diff_rows), _if_then_else(True, zeros_diff_cols, max_row_clue)), _if_then_else(le(ones_diff_cols, 1), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, compare_blocks_cols, ones_diff_rows))), _if_then_else(or_(or_(True, False), and_(True, True)), _if_then_else(or_(False, True), _if_then_else(False, 0, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, ones_diff_cols)), _if_then_else(ge(1, max_row_clue), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(True, compare_blocks_rows, max_row_clue))), _if_then_else(ge(_if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, 2)), _if_then_else(le(4, zeros_diff_rows), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, ones_diff_rows)), _if_then_else(le(3, ones_diff_rows), _if_then_else(False, zeros_diff_rows, ones_diff_cols), _if_then_else(False, ones_diff_cols, zeros_diff_cols)))), _if_then_else(or_(le(_if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, ones_diff_rows, 0)), and_(ge(2, 0), and_(False, True))), _if_then_else(or_(le(compare_blocks_rows, 3), ge(ones_diff_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, max_col_clue, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(False, 2, zeros_diff_cols))), _if_then_else(le(_if_then_else(True, compare_blocks_rows, 4), _if_then_else(False, ones_diff_rows, 2)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_rows, 0), _if_then_else(True, zeros_diff_rows, 2)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, 2), _if_then_else(True, zeros_diff_rows, 3))))), True), le(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(True, max_row_clue, 1)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, ones_diff_cols))), compare_blocks_rows)))
VAL TREES:
mul(mul(mul(ones_diff_cols, ones_diff_rows), add(mul(ones_diff_cols, ones_diff_cols), ones_diff_rows)), mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)))
add(add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)))
add(add(mul(add(mul(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols))), add(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_rows)))), add(add(add(add(ones_diff_cols, add(mul(add(mul(compare_blocks_cols, zeros_diff_rows), compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)), add(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows)))), mul(zeros_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), mul(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(mul(compare_blocks_cols, mul(mul(add(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_rows)))), add(ones_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols)))
add(add(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)))
mul(mul(add(ones_diff_rows, compare_blocks_rows), add(add(add(add(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(zeros_diff_rows, ones_diff_cols))), zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols)))
mul(mul(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(mul(mul(compare_blocks_cols, mul(ones_diff_cols, zeros_diff_rows)), add(add(compare_blocks_cols, ones_diff_cols), zeros_diff_cols)), mul(mul(add(zeros_diff_cols, zeros_diff_cols), compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows))))
add(mul(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, ones_diff_cols))))
mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_rows)))
COND TREES:
ge(_if_then_else(le(max_col_clue, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, _if_then_else(True, _if_then_else(False, 4, zeros_diff_cols), _if_then_else(ge(1, max_row_clue), compare_blocks_rows, 3)), zeros_diff_cols)), _if_then_else(and_(le(compare_blocks_rows, 2), False), _if_then_else(False, _if_then_else(True, zeros_diff_rows, _if_then_else(False, ones_diff_rows, max_row_clue)), ones_diff_rows), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), compare_blocks_cols, 4)))
le(_if_then_else(le(_if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(True, ones_diff_cols, 3), _if_then_else(False, 0, 4))), _if_then_else(or_(and_(False, False), le(zeros_diff_rows, 3)), _if_then_else(or_(False, False), _if_then_else(True, 4, 0), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(or_(False, True), _if_then_else(True, 1, 1), _if_then_else(True, compare_blocks_cols, 0))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, max_row_clue, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(2, ones_diff_rows), _if_then_else(True, 4, _if_then_else(or_(True, True), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows))), _if_then_else(False, zeros_diff_rows, 4)))), max_row_clue), _if_then_else(True, 1, max_col_clue), _if_then_else(or_(True, True), 2, max_row_clue)), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, _if_then_else(ge(_if_then_else(and_(True, False), _if_then_else(False, ones_diff_rows, 2), _if_then_else(False, max_col_clue, 0)), _if_then_else(or_(False, False), _if_then_else(True, max_col_clue, 2), _if_then_else(True, max_col_clue, 3))), _if_then_else(or_(or_(True, True), le(ones_diff_rows, 0)), _if_then_else(or_(True, True), _if_then_else(True, 4, max_row_clue), _if_then_else(False, max_col_clue, 0)), _if_then_else(and_(True, False), _if_then_else(False, max_col_clue, max_row_clue), _if_then_else(False, 0, 3))), _if_then_else(False, _if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, 4), _if_then_else(True, compare_blocks_rows, zeros_diff_rows)), _if_then_else(le(2, 1), _if_then_else(False, zeros_diff_rows, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, 1))))), _if_then_else(True, 4, ones_diff_rows)))
ge(_if_then_else(le(_if_then_else(ge(ones_diff_cols, zeros_diff_rows), _if_then_else(True, max_col_clue, 4), _if_then_else(True, max_col_clue, compare_blocks_cols)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, _if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, compare_blocks_rows, 1))), _if_then_else(False, max_col_clue, 3))), _if_then_else(or_(le(max_col_clue, compare_blocks_rows), or_(True, False)), _if_then_else(or_(False, True), _if_then_else(True, 1, 3), _if_then_else(False, 3, 4)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, 0, max_col_clue), _if_then_else(True, 3, compare_blocks_cols))), _if_then_else(ge(_if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 3, 3)), _if_then_else(True, _if_then_else(True, 4, 0), _if_then_else(True, ones_diff_cols, ones_diff_cols)), _if_then_else(ge(compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_cols, 3), _if_then_else(le(_if_then_else(False, 4, 1), _if_then_else(True, compare_blocks_rows, _if_then_else(False, 0, 3))), _if_then_else(ge(max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 0, _if_then_else(False, 1, 4))), _if_then_else(and_(ge(2, 2), True), _if_then_else(True, _if_then_else(False, 4, max_row_clue), 3), _if_then_else(False, 3, 4)))))), _if_then_else(and_(and_(ge(ones_diff_cols, 3), True), and_(ge(zeros_diff_rows, compare_blocks_rows), ge(0, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 3), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(2, 2), _if_then_else(True, _if_then_else(and_(or_(True, le(zeros_diff_cols, ones_diff_rows)), or_(and_(True, True), le(1, 3))), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, 1, zeros_diff_cols)), _if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(ge(2, max_col_clue), zeros_diff_rows, ones_diff_cols), _if_then_else(ge(zeros_diff_cols, max_col_clue), ones_diff_cols, _if_then_else(False, zeros_diff_rows, 4)))), 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(False, 2, 2)), _if_then_else(and_(False, True), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(le(ones_diff_cols, 4), _if_then_else(False, max_row_clue, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)))))
le(_if_then_else(or_(True, False), zeros_diff_cols, _if_then_else(False, max_row_clue, 0)), _if_then_else(and_(True, False), _if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, ones_diff_cols, compare_blocks_rows)))
ge(ones_diff_cols, _if_then_else(or_(True, True), _if_then_else(False, max_col_clue, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))
or_(ge(_if_then_else(le(0, 4), 3, 4), ones_diff_rows), and_(or_(False, False), and_(le(_if_then_else(le(1, max_row_clue), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, 0)), _if_then_else(or_(False, False), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(False, compare_blocks_rows, compare_blocks_cols))), or_(or_(or_(False, True), le(0, 3)), le(_if_then_else(True, zeros_diff_rows, 4), _if_then_else(or_(False, True), 1, ones_diff_cols))))))
ge(_if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, _if_then_else(False, max_col_clue, ones_diff_rows)), _if_then_else(False, _if_then_else(or_(le(ones_diff_cols, 0), False), _if_then_else(le(compare_blocks_cols, ones_diff_rows), _if_then_else(True, max_row_clue, max_col_clue), _if_then_else(False, compare_blocks_cols, 2)), _if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(or_(le(_if_then_else(True, 2, 4), _if_then_else(False, compare_blocks_rows, 3)), or_(le(1, 3), or_(True, False))), 1, _if_then_else(True, 2, 2)), _if_then_else(True, 4, zeros_diff_rows))), compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(False, max_row_clue, _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(True, compare_blocks_cols, max_col_clue)))
or_(or_(and_(or_(False, False), ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), compare_blocks_rows)), le(2, 2)), or_(or_(False, True), le(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_row_clue, _if_then_else(False, zeros_diff_rows, zeros_diff_cols))), _if_then_else(or_(True, False), _if_then_else(True, 4, ones_diff_rows), _if_then_else(True, compare_blocks_cols, _if_then_else(False, compare_blocks_rows, 4)))), compare_blocks_rows)))
VAL TREES:
mul(mul(mul(ones_diff_cols, ones_diff_rows), add(mul(ones_diff_cols, ones_diff_cols), ones_diff_rows)), mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)))
add(add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)))
add(add(mul(add(mul(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols))), add(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_rows)))), add(add(add(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), mul(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols)))
add(add(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)))
mul(mul(add(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols)))
mul(mul(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)))
add(mul(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, ones_diff_cols))))
mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_rows)))
COND TREES:
le(_if_then_else(ge(1, max_row_clue), _if_then_else(False, max_row_clue, 3), _if_then_else(False, ones_diff_cols, max_col_clue)), _if_then_else(or_(False, and_(le(_if_then_else(le(compare_blocks_rows, _if_then_else(False, 4, zeros_diff_rows)), _if_then_else(True, zeros_diff_rows, zeros_diff_cols), _if_then_else(False, _if_then_else(True, ones_diff_rows, 3), ones_diff_cols)), _if_then_else(or_(and_(True, True), True), _if_then_else(False, ones_diff_cols, max_row_clue), _if_then_else(True, 0, ones_diff_rows))), False)), _if_then_else(False, 2, 2), _if_then_else(True, max_col_clue, max_col_clue)))
ge(_if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, 4), _if_then_else(le(_if_then_else(ge(_if_then_else(or_(True, False), 2, zeros_diff_cols), _if_then_else(True, 4, 1)), _if_then_else(False, ones_diff_cols, 2), _if_then_else(False, compare_blocks_cols, _if_then_else(le(2, max_col_clue), _if_then_else(False, zeros_diff_rows, ones_diff_rows), max_col_clue))), _if_then_else(and_(False, or_(False, le(3, max_row_clue))), _if_then_else(True, 3, max_col_clue), _if_then_else(True, compare_blocks_cols, ones_diff_rows))), max_row_clue, zeros_diff_rows)), _if_then_else(True, _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, 3, _if_then_else(and_(ge(zeros_diff_rows, 2), le(3, ones_diff_rows)), _if_then_else(ge(max_col_clue, zeros_diff_cols), _if_then_else(True, 4, ones_diff_rows), _if_then_else(True, max_row_clue, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, 0, 0), _if_then_else(True, 2, 0))))))
and_(or_(le(zeros_diff_cols, compare_blocks_cols), le(2, 1)), and_(ge(_if_then_else(or_(False, True), _if_then_else(False, ones_diff_cols, 4), _if_then_else(True, zeros_diff_rows, 3)), _if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, compare_blocks_rows, 1))), le(ones_diff_rows, _if_then_else(le(_if_then_else(and_(and_(True, False), and_(True, True)), _if_then_else(le(compare_blocks_cols, 2), _if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(True, max_row_clue, 4)), _if_then_else(ge(compare_blocks_cols, ones_diff_cols), _if_then_else(True, 4, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 2))), _if_then_else(and_(or_(False, True), le(zeros_diff_cols, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, 1, max_row_clue)), _if_then_else(or_(True, False), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(True, 0, compare_blocks_rows)))), _if_then_else(ge(_if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, 2, 0)), _if_then_else(or_(True, False), _if_then_else(True, 4, 4), _if_then_else(False, ones_diff_rows, compare_blocks_cols))), _if_then_else(ge(_if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, ones_diff_cols, 1)), _if_then_else(and_(False, True), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(True, 3, 4)), _if_then_else(le(1, 2), _if_then_else(False, 3, 2), _if_then_else(True, zeros_diff_cols, zeros_diff_cols))), _if_then_else(le(_if_then_else(False, 1, zeros_diff_cols), _if_then_else(False, 1, 0)), _if_then_else(or_(False, True), _if_then_else(False, 3, compare_blocks_rows), _if_then_else(True, 2, ones_diff_cols)), _if_then_else(ge(4, ones_diff_cols), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, max_row_clue, max_row_clue)))), _if_then_else(or_(ge(_if_then_else(True, ones_diff_rows, 4), _if_then_else(False, 4, 0)), and_(and_(False, True), or_(True, True))), _if_then_else(ge(_if_then_else(True, max_col_clue, max_col_clue), _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(True, 1, 4), _if_then_else(True, compare_blocks_cols, 3)), _if_then_else(and_(True, True), _if_then_else(True, 3, max_col_clue), _if_then_else(False, compare_blocks_rows, 1))), _if_then_else(or_(ge(4, zeros_diff_rows), le(compare_blocks_cols, 4)), _if_then_else(and_(True, True), _if_then_else(False, 3, compare_blocks_rows), _if_then_else(False, max_col_clue, ones_diff_cols)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_rows, zeros_diff_rows), _if_then_else(True, 4, compare_blocks_cols))))))))
or_(le(_if_then_else(and_(le(compare_blocks_cols, zeros_diff_cols), and_(False, True)), _if_then_else(and_(True, True), _if_then_else(True, 4, 1), _if_then_else(False, compare_blocks_rows, max_row_clue)), _if_then_else(ge(max_col_clue, 3), _if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(max_row_clue, 4), le(zeros_diff_rows, 4)), max_col_clue, _if_then_else(and_(True, True), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(True, max_col_clue, max_row_clue)))), or_(ge(_if_then_else(ge(max_col_clue, 3), _if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, max_col_clue, max_row_clue)), _if_then_else(or_(True, False), _if_then_else(True, max_row_clue, 3), _if_then_else(False, 2, zeros_diff_cols))), or_(or_(False, le(2, max_row_clue)), and_(le(0, zeros_diff_cols), and_(True, True)))))
and_(True, ge(_if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(True, max_col_clue, zeros_diff_rows)))
and_(or_(le(zeros_diff_cols, 4), and_(False, ge(max_row_clue, 2))), le(_if_then_else(True, _if_then_else(True, ones_diff_rows, 0), max_col_clue), _if_then_else(or_(and_(False, ge(compare_blocks_rows, max_row_clue)), or_(False, False)), _if_then_else(ge(zeros_diff_rows, zeros_diff_cols), _if_then_else(or_(False, True), compare_blocks_cols, _if_then_else(False, zeros_diff_rows, max_row_clue)), _if_then_else(le(ones_diff_cols, 4), _if_then_else(False, max_row_clue, 0), max_col_clue)), _if_then_else(le(ones_diff_cols, _if_then_else(True, 4, compare_blocks_rows)), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, 0, 4)))))
or_(or_(and_(or_(ge(4, compare_blocks_rows), le(zeros_diff_cols, max_row_clue)), and_(le(compare_blocks_cols, 2), le(max_col_clue, zeros_diff_rows))), or_(le(_if_then_else(True, 2, 4), _if_then_else(False, compare_blocks_rows, 3)), or_(le(1, 3), or_(True, False)))), or_(le(_if_then_else(or_(False, True), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, 2)), _if_then_else(ge(max_col_clue, zeros_diff_rows), _if_then_else(True, 2, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, 3))), or_(le(_if_then_else(False, compare_blocks_rows, _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, ones_diff_rows), _if_then_else(False, 1, zeros_diff_rows))), _if_then_else(True, 3, 0)), ge(_if_then_else(False, zeros_diff_cols, ones_diff_rows), _if_then_else(False, 3, ones_diff_rows)))))
le(_if_then_else(le(2, 2), _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, max_col_clue, 0)), _if_then_else(or_(and_(le(max_row_clue, compare_blocks_cols), le(_if_then_else(False, max_col_clue, 1), max_row_clue)), ge(_if_then_else(False, _if_then_else(True, max_row_clue, zeros_diff_cols), compare_blocks_rows), _if_then_else(ge(compare_blocks_cols, 4), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(True, max_row_clue, 0)))), _if_then_else(True, compare_blocks_rows, compare_blocks_cols), ones_diff_cols))
VAL TREES:
mul(mul(mul(ones_diff_cols, add(zeros_diff_rows, ones_diff_rows)), mul(zeros_diff_cols, ones_diff_cols)), add(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_cols, mul(zeros_diff_rows, compare_blocks_rows))))
add(add(mul(compare_blocks_cols, ones_diff_rows), mul(add(ones_diff_cols, zeros_diff_cols), zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), mul(mul(ones_diff_rows, add(zeros_diff_cols, compare_blocks_cols)), zeros_diff_cols)))
add(add(add(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_rows)))
add(add(mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_rows, zeros_diff_cols)), add(mul(zeros_diff_rows, compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows))), add(add(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows)), mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, zeros_diff_rows))))
add(mul(mul(ones_diff_cols, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), add(mul(ones_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)))
mul(add(add(add(add(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))), mul(add(mul(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_rows)), add(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, compare_blocks_cols)))), mul(add(add(add(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_cols))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, ones_diff_rows)), add(mul(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, zeros_diff_rows)))))
mul(add(add(mul(add(compare_blocks_cols, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_rows)), add(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), add(mul(mul(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols)))), add(mul(mul(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols))), add(add(add(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)))))
add(mul(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_rows, ones_diff_cols)), add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)))
add(mul(add(compare_blocks_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), add(mul(ones_diff_cols, add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_cols, ones_diff_cols))), add(compare_blocks_cols, add(zeros_diff_rows, ones_diff_rows))))
COND TREES:
le(_if_then_else(or_(and_(or_(or_(True, True), or_(True, True)), le(_if_then_else(True, ones_diff_cols, ones_diff_cols), _if_then_else(True, max_col_clue, 4))), le(_if_then_else(ge(compare_blocks_rows, 0), _if_then_else(False, max_col_clue, max_row_clue), _if_then_else(False, max_row_clue, 0)), _if_then_else(ge(3, max_col_clue), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(True, max_row_clue, 4)))), _if_then_else(le(_if_then_else(le(zeros_diff_rows, 4), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 2)), _if_then_else(le(compare_blocks_rows, max_col_clue), _if_then_else(True, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, 0))), _if_then_else(or_(ge(ones_diff_rows, ones_diff_cols), le(3, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(False, 0, compare_blocks_rows), _if_then_else(True, ones_diff_rows, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, 0, ones_diff_rows), _if_then_else(True, 3, max_row_clue))), _if_then_else(or_(or_(False, True), ge(4, compare_blocks_rows)), _if_then_else(le(zeros_diff_rows, 1), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(True, 4, 3)), _if_then_else(ge(0, 3), _if_then_else(False, 3, max_col_clue), _if_then_else(False, 0, max_col_clue)))), _if_then_else(ge(_if_then_else(ge(2, 2), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, 2, compare_blocks_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(True, 0, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, 3, zeros_diff_rows), _if_then_else(True, max_col_clue, max_row_clue)), _if_then_else(ge(2, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, 4), _if_then_else(True, 1, max_row_clue)), _if_then_else(le(max_col_clue, 2), _if_then_else(True, 3, max_row_clue), _if_then_else(True, 3, 0))), _if_then_else(or_(or_(True, True), le(compare_blocks_cols, 4)), _if_then_else(le(zeros_diff_rows, 3), _if_then_else(True, 0, max_row_clue), _if_then_else(False, 0, 1)), _if_then_else(ge(1, zeros_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(False, compare_blocks_cols, ones_diff_rows))))), _if_then_else(or_(False, False), _if_then_else(False, 2, 2), _if_then_else(True, zeros_diff_rows, max_col_clue)))
ge(_if_then_else(and_(True, False), 1, _if_then_else(False, max_row_clue, zeros_diff_rows)), _if_then_else(True, _if_then_else(True, 2, ones_diff_cols), _if_then_else(and_(True, False), 3, compare_blocks_cols)))
and_(or_(le(zeros_diff_cols, _if_then_else(ge(4, 4), ones_diff_cols, zeros_diff_cols)), le(2, _if_then_else(ge(_if_then_else(and_(ge(3, 3), le(4, ones_diff_rows)), _if_then_else(le(compare_blocks_rows, zeros_diff_cols), _if_then_else(True, max_col_clue, 3), _if_then_else(True, compare_blocks_rows, 2)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(True, 0, 3))), _if_then_else(ge(_if_then_else(False, 2, 2), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(True, 2, 0), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(or_(False, False), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(True, max_row_clue, zeros_diff_rows)))), _if_then_else(ge(_if_then_else(ge(0, 4), _if_then_else(True, ones_diff_cols, compare_blocks_cols), _if_then_else(True, 3, 2)), _if_then_else(le(4, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, 0, max_col_clue))), _if_then_else(le(_if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(False, 2, 1)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(False, max_row_clue, 4)), _if_then_else(or_(True, False), _if_then_else(False, max_col_clue, max_col_clue), _if_then_else(False, 3, max_col_clue))), _if_then_else(and_(ge(zeros_diff_rows, _if_then_else(le(ones_diff_cols, 4), zeros_diff_rows, 1)), ge(compare_blocks_rows, zeros_diff_cols)), _if_then_else(le(1, 1), _if_then_else(True, 0, ones_diff_cols), _if_then_else(True, 4, zeros_diff_rows)), _if_then_else(ge(3, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)))), _if_then_else(ge(_if_then_else(le(ones_diff_cols, zeros_diff_cols), _if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, max_row_clue)), _if_then_else(le(1, 4), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, 4, compare_blocks_cols))), _if_then_else(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(True, max_col_clue, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(True, max_row_clue, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, 2)), _if_then_else(or_(True, True), _if_then_else(True, 0, 4), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(le(_if_then_else(False, 1, 0), _if_then_else(False, max_col_clue, compare_blocks_cols)), _if_then_else(ge(ones_diff_cols, zeros_diff_cols), _if_then_else(False, ones_diff_cols, max_col_clue), _if_then_else(True, compare_blocks_cols, 4)), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, 4), _if_then_else(True, max_row_clue, 4))))))), and_(ge(_if_then_else(or_(False, True), _if_then_else(True, 4, 0), _if_then_else(True, zeros_diff_rows, 3)), _if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(le(ones_diff_cols, compare_blocks_rows), compare_blocks_rows, max_row_clue), _if_then_else(False, compare_blocks_rows, 1))), le(ones_diff_rows, ones_diff_cols)))
or_(le(_if_then_else(and_(le(compare_blocks_cols, zeros_diff_cols), and_(False, True)), _if_then_else(and_(True, True), _if_then_else(True, 4, 1), _if_then_else(False, compare_blocks_rows, max_row_clue)), _if_then_else(ge(max_col_clue, 3), _if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(max_row_clue, 4), le(zeros_diff_rows, 4)), max_col_clue, _if_then_else(and_(True, True), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(True, max_col_clue, max_row_clue)))), or_(ge(_if_then_else(and_(True, le(zeros_diff_rows, _if_then_else(le(ones_diff_cols, max_col_clue), 2, ones_diff_cols))), _if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, ones_diff_cols, compare_blocks_rows)), _if_then_else(le(_if_then_else(False, 3, zeros_diff_rows), _if_then_else(True, 3, 1)), _if_then_else(or_(True, True), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, _if_then_else(False, _if_then_else(True, compare_blocks_rows, 3), zeros_diff_cols))), _if_then_else(or_(False, False), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 0)))), or_(or_(False, False), and_(le(0, zeros_diff_cols), and_(True, True)))))
and_(False, True)
and_(or_(le(zeros_diff_cols, 4), and_(False, ge(max_row_clue, 2))), le(_if_then_else(True, _if_then_else(True, zeros_diff_cols, 0), max_col_clue), _if_then_else(True, max_col_clue, max_row_clue)))
or_(or_(and_(or_(ge(4, compare_blocks_rows), le(zeros_diff_cols, max_row_clue)), and_(le(compare_blocks_cols, 2), le(max_col_clue, zeros_diff_rows))), or_(le(_if_then_else(True, 2, 4), _if_then_else(False, compare_blocks_rows, 3)), or_(le(1, 3), or_(True, False)))), or_(le(_if_then_else(or_(False, True), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, 2)), _if_then_else(ge(max_col_clue, zeros_diff_rows), _if_then_else(True, _if_then_else(le(_if_then_else(True, compare_blocks_cols, compare_blocks_cols), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, 1, ones_diff_rows), _if_then_else(True, max_row_clue, 4))), zeros_diff_rows), _if_then_else(or_(True, or_(True, True)), compare_blocks_cols, 3))), or_(le(_if_then_else(False, compare_blocks_rows, _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 1, zeros_diff_rows))), _if_then_else(True, 3, 0)), ge(_if_then_else(False, zeros_diff_cols, ones_diff_rows), _if_then_else(False, 3, ones_diff_rows)))))
le(_if_then_else(le(4, 2), _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, max_col_clue, 0)), _if_then_else(and_(True, or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), compare_blocks_rows), and_(le(max_col_clue, max_row_clue), True))), _if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, 4)))
VAL TREES:
mul(mul(mul(ones_diff_cols, add(zeros_diff_rows, ones_diff_rows)), mul(zeros_diff_cols, ones_diff_cols)), add(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_cols, mul(zeros_diff_rows, compare_blocks_rows))))
add(add(mul(compare_blocks_cols, ones_diff_rows), mul(add(ones_diff_cols, zeros_diff_cols), zeros_diff_cols)), add(mul(add(add(mul(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, add(mul(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))), mul(add(compare_blocks_rows, add(compare_blocks_rows, ones_diff_rows)), add(compare_blocks_rows, compare_blocks_cols))), ones_diff_rows), mul(mul(ones_diff_rows, add(zeros_diff_cols, compare_blocks_cols)), zeros_diff_cols)))
add(add(add(compare_blocks_rows, zeros_diff_cols), add(add(mul(add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows)), add(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_rows)))), ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_rows)))
add(add(mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_rows, zeros_diff_cols)), add(mul(zeros_diff_rows, compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows))), add(add(add(compare_blocks_rows, add(mul(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)))), add(zeros_diff_rows, zeros_diff_rows)), mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, zeros_diff_rows))))
add(mul(mul(ones_diff_cols, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(add(mul(mul(zeros_diff_cols, zeros_diff_rows), add(ones_diff_cols, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_cols), add(ones_diff_cols, compare_blocks_cols))), mul(add(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)))))
mul(add(add(add(add(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, add(add(mul(add(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))), add(add(add(compare_blocks_rows, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)))), add(add(add(mul(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, zeros_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(compare_blocks_rows, zeros_diff_rows))))))), add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))), mul(add(mul(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_rows)), add(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, compare_blocks_cols)))), mul(add(add(add(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_cols))), add(mul(add(add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, add(compare_blocks_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_rows, ones_diff_cols), ones_diff_rows), add(compare_blocks_rows, ones_diff_cols))), add(zeros_diff_cols, ones_diff_rows)), add(mul(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, zeros_diff_rows)))))
mul(add(add(mul(add(compare_blocks_cols, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_rows)), add(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), add(mul(mul(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols)))), add(mul(mul(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols))), add(add(add(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), add(add(add(ones_diff_cols, zeros_diff_cols), add(add(ones_diff_rows, ones_diff_cols), compare_blocks_cols)), add(mul(ones_diff_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols)))), mul(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, ones_diff_rows)))
add(mul(add(compare_blocks_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), add(mul(ones_diff_cols, add(mul(zeros_diff_cols, zeros_diff_rows), add(mul(add(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), add(add(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols))), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows)), add(mul(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_cols)))), add(add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_rows)), add(mul(compare_blocks_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_cols))), add(add(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols))))), ones_diff_cols))), add(compare_blocks_cols, add(zeros_diff_rows, ones_diff_rows))))
COND TREES:
ge(_if_then_else(le(max_col_clue, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, _if_then_else(True, _if_then_else(False, 4, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 3)), zeros_diff_cols)), _if_then_else(and_(le(2, 2), False), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, _if_then_else(ge(4, ones_diff_cols), ones_diff_rows, max_row_clue)), ones_diff_rows), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), ones_diff_rows, 4)))
le(_if_then_else(le(_if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(True, ones_diff_cols, 3), _if_then_else(False, 0, 4))), _if_then_else(or_(True, le(zeros_diff_rows, 3)), _if_then_else(or_(False, False), _if_then_else(True, 4, 0), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(or_(False, True), _if_then_else(True, 1, 1), _if_then_else(True, compare_blocks_cols, 0))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, max_row_clue, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(2, ones_diff_rows), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, max_row_clue)))), max_row_clue), _if_then_else(True, 1, max_col_clue), _if_then_else(or_(True, True), 2, max_row_clue)), _if_then_else(ge(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(False, _if_then_else(False, ones_diff_cols, ones_diff_cols), 4)), _if_then_else(ge(3, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(or_(ge(ones_diff_cols, zeros_diff_rows), True), ones_diff_cols, 1)), _if_then_else(and_(True, False), _if_then_else(False, 2, max_row_clue), _if_then_else(True, compare_blocks_cols, 3))), compare_blocks_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, 4, ones_diff_rows)))
ge(_if_then_else(True, _if_then_else(ge(4, 4), ones_diff_cols, zeros_diff_cols), max_col_clue), _if_then_else(and_(and_(ge(ones_diff_cols, 3), True), and_(ge(zeros_diff_rows, compare_blocks_rows), ge(0, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 3), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(2, 2), _if_then_else(True, 1, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(False, 2, 2)), _if_then_else(and_(False, True), _if_then_else(True, 1, ones_diff_cols), zeros_diff_cols), _if_then_else(le(ones_diff_cols, 4), _if_then_else(False, max_row_clue, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)))))
le(_if_then_else(or_(True, False), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, max_row_clue, 0)), _if_then_else(ge(compare_blocks_cols, 4), _if_then_else(le(ones_diff_cols, max_col_clue), _if_then_else(False, zeros_diff_rows, compare_blocks_cols), 3), _if_then_else(True, 3, 1)))
ge(_if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 0, ones_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 0), 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))
or_(ge(_if_then_else(le(0, zeros_diff_rows), 3, zeros_diff_cols), _if_then_else(True, 4, 2)), and_(or_(and_(and_(ge(_if_then_else(True, 2, zeros_diff_cols), _if_then_else(False, ones_diff_rows, 4)), ge(_if_then_else(False, 1, ones_diff_rows), _if_then_else(True, max_row_clue, 0))), and_(or_(ge(zeros_diff_rows, compare_blocks_rows), ge(max_col_clue, compare_blocks_cols)), ge(_if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, max_row_clue)))), False), or_(or_(and_(False, False), ge(max_col_clue, max_col_clue)), ge(_if_then_else(and_(True, False), ones_diff_cols, compare_blocks_rows), _if_then_else(and_(False, False), zeros_diff_rows, 4)))))
ge(max_col_clue, _if_then_else(or_(False, True), _if_then_else(le(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, 4, compare_blocks_rows)), _if_then_else(ge(max_row_clue, zeros_diff_rows), _if_then_else(True, 3, max_row_clue), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(le(max_col_clue, 1), _if_then_else(False, ones_diff_rows, max_col_clue), _if_then_else(True, zeros_diff_cols, 3))), _if_then_else(True, compare_blocks_cols, max_col_clue)))
or_(or_(and_(or_(False, False), False), le(2, 2)), or_(or_(False, True), le(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), _if_then_else(False, _if_then_else(False, 2, ones_diff_rows), _if_then_else(True, max_row_clue, 1)), _if_then_else(or_(True, False), zeros_diff_rows, _if_then_else(True, compare_blocks_cols, ones_diff_cols))), compare_blocks_rows)))
VAL TREES:
mul(mul(mul(ones_diff_cols, ones_diff_rows), add(mul(ones_diff_cols, ones_diff_cols), ones_diff_rows)), mul(mul(add(add(ones_diff_cols, zeros_diff_rows), mul(compare_blocks_rows, ones_diff_rows)), mul(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows))), add(ones_diff_rows, compare_blocks_cols)))
add(add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), add(add(mul(add(mul(zeros_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_cols)), mul(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_rows, ones_diff_cols))), compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)))
add(add(mul(add(mul(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols))), add(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_rows)))), add(add(add(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), mul(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(mul(mul(add(mul(add(add(ones_diff_cols, ones_diff_rows), zeros_diff_rows), mul(ones_diff_cols, mul(compare_blocks_cols, compare_blocks_rows))), add(compare_blocks_cols, ones_diff_rows)), mul(add(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_rows, add(compare_blocks_rows, ones_diff_cols)), compare_blocks_cols))), zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, mul(add(mul(zeros_diff_cols, ones_diff_cols), add(compare_blocks_cols, compare_blocks_cols)), mul(add(mul(add(mul(add(compare_blocks_cols, compare_blocks_rows), zeros_diff_rows), add(add(add(ones_diff_rows, compare_blocks_rows), ones_diff_rows), add(zeros_diff_rows, ones_diff_cols))), mul(mul(mul(ones_diff_cols, mul(zeros_diff_rows, ones_diff_cols)), compare_blocks_rows), mul(compare_blocks_rows, mul(add(compare_blocks_rows, zeros_diff_cols), compare_blocks_cols)))), ones_diff_rows), add(compare_blocks_cols, zeros_diff_rows))))), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols)))
add(add(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)))
mul(mul(add(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(mul(mul(mul(add(mul(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_rows, compare_blocks_rows))), add(add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_rows)))), add(mul(add(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, compare_blocks_cols))), mul(mul(mul(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows))))), compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols)))
mul(mul(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_cols, add(mul(add(add(mul(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_rows)), mul(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_rows)))), mul(mul(mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, zeros_diff_cols)), add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_rows, ones_diff_rows))), mul(add(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_cols, zeros_diff_cols)), mul(mul(compare_blocks_rows, compare_blocks_cols), add(zeros_diff_cols, ones_diff_cols)))))), add(zeros_diff_cols, compare_blocks_rows)))
add(mul(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, ones_diff_cols))))
mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_rows)))
COND TREES:
le(_if_then_else(or_(and_(or_(or_(True, True), or_(True, True)), le(_if_then_else(True, ones_diff_cols, ones_diff_cols), _if_then_else(True, max_col_clue, 4))), le(_if_then_else(ge(compare_blocks_rows, 0), _if_then_else(False, max_col_clue, max_row_clue), _if_then_else(False, max_row_clue, 0)), _if_then_else(ge(3, max_col_clue), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(True, max_row_clue, 4)))), _if_then_else(le(_if_then_else(le(zeros_diff_rows, 4), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, ones_diff_rows, 2)), _if_then_else(le(compare_blocks_rows, max_col_clue), _if_then_else(True, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, 0))), _if_then_else(or_(ge(ones_diff_rows, ones_diff_cols), le(3, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(False, 0, compare_blocks_rows), _if_then_else(True, ones_diff_rows, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, 0, ones_diff_rows), _if_then_else(True, 3, max_row_clue))), _if_then_else(or_(or_(False, True), ge(4, compare_blocks_rows)), _if_then_else(le(zeros_diff_rows, 1), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(True, 4, 3)), _if_then_else(ge(0, 3), _if_then_else(False, 3, max_col_clue), _if_then_else(False, 0, max_col_clue)))), _if_then_else(ge(_if_then_else(ge(2, 2), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, 2, compare_blocks_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(True, 0, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, 3, zeros_diff_rows), _if_then_else(True, max_col_clue, max_row_clue)), _if_then_else(ge(2, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, 4), _if_then_else(True, 1, max_row_clue)), _if_then_else(le(max_col_clue, 2), _if_then_else(True, 3, max_row_clue), _if_then_else(True, 3, 0))), _if_then_else(or_(or_(True, True), le(compare_blocks_cols, 4)), _if_then_else(le(zeros_diff_rows, 3), _if_then_else(True, 0, max_row_clue), _if_then_else(False, 0, 1)), _if_then_else(ge(1, zeros_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(False, compare_blocks_cols, ones_diff_rows))))), _if_then_else(or_(False, False), _if_then_else(False, 2, 2), _if_then_else(True, zeros_diff_rows, max_col_clue)))
ge(_if_then_else(and_(True, False), 1, _if_then_else(False, max_row_clue, zeros_diff_rows)), _if_then_else(True, _if_then_else(True, 2, ones_diff_cols), _if_then_else(and_(True, False), 3, compare_blocks_cols)))
and_(or_(le(zeros_diff_cols, _if_then_else(ge(4, 4), ones_diff_cols, zeros_diff_cols)), le(2, _if_then_else(ge(_if_then_else(and_(ge(3, 3), le(4, ones_diff_rows)), _if_then_else(le(compare_blocks_rows, zeros_diff_cols), _if_then_else(True, max_col_clue, 3), _if_then_else(True, compare_blocks_rows, 2)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, 3), _if_then_else(True, 0, 3))), _if_then_else(ge(_if_then_else(False, 2, 2), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(True, 2, 0), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(or_(False, False), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(True, max_row_clue, zeros_diff_rows)))), _if_then_else(ge(_if_then_else(ge(0, 4), _if_then_else(True, ones_diff_cols, compare_blocks_cols), _if_then_else(True, 3, 2)), _if_then_else(le(4, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, 0, max_col_clue))), _if_then_else(le(_if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(False, 2, 1)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(False, max_row_clue, 4)), _if_then_else(or_(True, False), _if_then_else(False, max_col_clue, max_col_clue), _if_then_else(False, 3, max_col_clue))), _if_then_else(and_(ge(zeros_diff_rows, zeros_diff_cols), ge(compare_blocks_rows, zeros_diff_cols)), _if_then_else(le(1, 1), _if_then_else(True, 0, ones_diff_cols), _if_then_else(True, 4, zeros_diff_rows)), _if_then_else(ge(3, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(True, compare_blocks_rows, ones_diff_cols)))), _if_then_else(ge(_if_then_else(le(ones_diff_cols, zeros_diff_cols), _if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, max_row_clue)), _if_then_else(le(1, 4), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, 4, compare_blocks_cols))), _if_then_else(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(True, max_col_clue, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(True, max_row_clue, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, 2)), _if_then_else(or_(True, True), _if_then_else(True, 0, 4), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(le(_if_then_else(False, 1, 0), _if_then_else(False, max_col_clue, compare_blocks_cols)), _if_then_else(ge(ones_diff_cols, zeros_diff_cols), _if_then_else(False, ones_diff_cols, max_col_clue), _if_then_else(True, compare_blocks_cols, 4)), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, 4), _if_then_else(True, max_row_clue, 4))))))), and_(ge(_if_then_else(or_(False, True), _if_then_else(True, 4, 0), _if_then_else(True, zeros_diff_rows, 3)), _if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(le(ones_diff_cols, compare_blocks_rows), compare_blocks_rows, max_row_clue), _if_then_else(False, compare_blocks_rows, 1))), le(ones_diff_rows, ones_diff_cols)))
or_(le(_if_then_else(and_(le(compare_blocks_cols, zeros_diff_cols), and_(False, True)), _if_then_else(and_(True, True), _if_then_else(True, 4, 1), _if_then_else(False, compare_blocks_rows, max_row_clue)), _if_then_else(ge(max_col_clue, 3), _if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(max_row_clue, 4), le(zeros_diff_rows, 4)), max_col_clue, _if_then_else(and_(True, True), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(True, max_col_clue, max_row_clue)))), or_(ge(_if_then_else(and_(True, le(zeros_diff_rows, _if_then_else(le(ones_diff_cols, max_col_clue), 2, ones_diff_cols))), _if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, ones_diff_cols, compare_blocks_rows)), _if_then_else(le(_if_then_else(False, 3, zeros_diff_rows), _if_then_else(True, 3, 1)), _if_then_else(or_(True, True), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(True, 3, 1)), _if_then_else(or_(False, False), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 0)))), or_(or_(False, False), and_(le(0, zeros_diff_cols), and_(True, True)))))
and_(False, True)
and_(or_(le(zeros_diff_cols, zeros_diff_cols), and_(False, ge(max_row_clue, 2))), le(_if_then_else(True, _if_then_else(True, zeros_diff_cols, 0), max_col_clue), _if_then_else(True, max_col_clue, max_row_clue)))
or_(or_(and_(or_(ge(4, compare_blocks_rows), le(zeros_diff_cols, max_row_clue)), and_(le(compare_blocks_cols, 2), le(max_col_clue, zeros_diff_rows))), or_(le(_if_then_else(True, 2, 4), _if_then_else(False, compare_blocks_rows, 3)), or_(le(1, 3), or_(True, False)))), or_(le(_if_then_else(or_(False, True), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, 2)), _if_then_else(ge(max_col_clue, zeros_diff_rows), _if_then_else(True, _if_then_else(le(_if_then_else(True, compare_blocks_cols, compare_blocks_cols), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, 1, ones_diff_rows), _if_then_else(True, max_row_clue, 4))), zeros_diff_rows), _if_then_else(or_(True, or_(True, True)), compare_blocks_cols, 3))), or_(le(_if_then_else(False, compare_blocks_rows, _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 1, zeros_diff_rows))), _if_then_else(True, 3, 0)), ge(_if_then_else(False, zeros_diff_cols, ones_diff_rows), _if_then_else(False, 3, ones_diff_rows)))))
le(_if_then_else(le(2, 2), _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, max_col_clue, 0)), _if_then_else(and_(True, or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), compare_blocks_rows), and_(le(max_col_clue, max_row_clue), True))), _if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, 4)))
VAL TREES:
mul(mul(mul(ones_diff_cols, add(zeros_diff_rows, ones_diff_rows)), mul(zeros_diff_cols, ones_diff_cols)), add(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_cols, mul(zeros_diff_rows, compare_blocks_rows))))
add(add(mul(compare_blocks_cols, ones_diff_rows), mul(add(ones_diff_cols, zeros_diff_cols), zeros_diff_cols)), add(mul(add(add(mul(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, add(mul(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))), mul(add(compare_blocks_rows, add(compare_blocks_rows, ones_diff_rows)), add(compare_blocks_rows, compare_blocks_cols))), ones_diff_rows), mul(mul(ones_diff_rows, add(zeros_diff_cols, compare_blocks_cols)), zeros_diff_cols)))
add(add(add(compare_blocks_rows, zeros_diff_cols), add(add(mul(add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows)), add(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_rows)))), ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_rows)))
add(add(mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_rows, zeros_diff_cols)), add(mul(zeros_diff_rows, compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows))), add(add(add(compare_blocks_rows, add(mul(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)))), add(zeros_diff_rows, zeros_diff_rows)), mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, zeros_diff_rows))))
add(mul(mul(ones_diff_cols, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(add(mul(mul(zeros_diff_cols, zeros_diff_rows), add(ones_diff_cols, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_cols), add(ones_diff_cols, compare_blocks_cols))), mul(add(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)))))
mul(add(add(add(add(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, add(add(mul(add(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))), add(add(add(compare_blocks_rows, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)))), add(add(add(mul(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, zeros_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)), add(mul(zeros_diff_rows, ones_diff_rows), add(compare_blocks_rows, zeros_diff_rows))))))), add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))), mul(add(mul(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_rows)), add(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, compare_blocks_cols)))), mul(add(add(add(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_cols))), add(mul(add(add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, add(compare_blocks_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_rows, ones_diff_cols), ones_diff_rows), add(compare_blocks_rows, ones_diff_cols))), add(zeros_diff_cols, ones_diff_rows)), add(mul(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, zeros_diff_rows)))))
mul(add(add(mul(add(compare_blocks_cols, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_rows)), add(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), add(mul(mul(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols)))), add(mul(mul(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols))), add(add(add(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)))))
mul(add(mul(ones_diff_cols, compare_blocks_cols), add(add(add(ones_diff_cols, zeros_diff_cols), add(add(ones_diff_rows, ones_diff_cols), compare_blocks_cols)), add(mul(ones_diff_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols)))), mul(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, ones_diff_rows)))
add(mul(add(compare_blocks_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), add(mul(ones_diff_cols, add(mul(zeros_diff_cols, zeros_diff_rows), add(mul(add(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), add(add(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols))), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows)), add(mul(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_cols)))), add(add(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_rows)), add(mul(compare_blocks_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_cols))), add(add(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols))))), ones_diff_cols))), add(compare_blocks_cols, add(zeros_diff_rows, ones_diff_rows))))
COND TREES:
ge(_if_then_else(le(max_col_clue, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, _if_then_else(True, _if_then_else(False, 4, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 3)), zeros_diff_cols)), _if_then_else(and_(le(compare_blocks_rows, 2), False), _if_then_else(and_(False, True), _if_then_else(and_(le(compare_blocks_rows, 2), False), zeros_diff_rows, _if_then_else(False, ones_diff_rows, max_row_clue)), _if_then_else(ge(1, max_row_clue), _if_then_else(False, max_row_clue, 3), _if_then_else(False, ones_diff_cols, max_col_clue))), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), compare_blocks_cols, 4)))
le(_if_then_else(le(_if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(True, ones_diff_cols, 3), _if_then_else(False, 0, 4))), _if_then_else(or_(True, le(zeros_diff_rows, 3)), _if_then_else(or_(False, False), _if_then_else(True, 4, 0), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(or_(False, True), _if_then_else(True, 1, 1), _if_then_else(True, compare_blocks_cols, 0))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, max_row_clue, compare_blocks_cols)), _if_then_else(or_(True, True), max_col_clue, _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(2, ones_diff_rows), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 4)))), max_row_clue), _if_then_else(True, 1, max_col_clue), _if_then_else(or_(True, True), 2, max_row_clue)), _if_then_else(ge(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(False, _if_then_else(False, ones_diff_cols, ones_diff_cols), 4)), _if_then_else(ge(3, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(or_(ge(ones_diff_cols, zeros_diff_rows), True), ones_diff_cols, 1)), _if_then_else(and_(True, False), _if_then_else(False, 2, max_row_clue), _if_then_else(True, compare_blocks_cols, 3))), compare_blocks_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, 4, ones_diff_rows)))
ge(_if_then_else(True, _if_then_else(ge(4, 4), ones_diff_cols, zeros_diff_cols), max_col_clue), _if_then_else(and_(le(ones_diff_rows, ones_diff_cols), and_(ge(zeros_diff_rows, compare_blocks_rows), ge(0, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 3), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(2, 2), _if_then_else(True, 1, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(False, 2, 2)), _if_then_else(and_(False, True), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(le(ones_diff_cols, 4), _if_then_else(True, max_row_clue, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)))))
le(_if_then_else(or_(True, False), _if_then_else(False, 3, compare_blocks_cols), _if_then_else(False, max_row_clue, 0)), compare_blocks_rows)
ge(_if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 0, ones_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, 0, 1), _if_then_else(False, 0, 1)))
or_(ge(_if_then_else(le(0, zeros_diff_rows), 3, 4), _if_then_else(False, 4, 4)), and_(or_(False, ge(_if_then_else(le(0, zeros_diff_rows), 3, 4), _if_then_else(False, 4, 2))), or_(or_(and_(False, False), ge(max_col_clue, max_col_clue)), ge(_if_then_else(and_(True, False), ones_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, 4)))))
ge(_if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, _if_then_else(True, max_col_clue, ones_diff_rows)), _if_then_else(le(max_col_clue, 4), compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(False, max_row_clue, _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(True, compare_blocks_cols, max_col_clue)))
or_(or_(and_(or_(False, False), False), le(2, 2)), or_(or_(False, True), le(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(False, 4, ones_diff_rows), _if_then_else(or_(True, False), max_row_clue, 1)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, ones_diff_cols))), compare_blocks_rows)))
VAL TREES:
mul(mul(mul(ones_diff_cols, ones_diff_rows), add(mul(ones_diff_cols, ones_diff_cols), ones_diff_rows)), mul(add(ones_diff_cols, compare_blocks_rows), mul(mul(mul(compare_blocks_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)), mul(mul(ones_diff_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)))))
add(add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)))
add(add(mul(add(mul(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols))), add(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_rows)))), add(add(add(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), mul(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(mul(compare_blocks_cols, compare_blocks_rows), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), add(add(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows)))), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols)))
add(add(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, ones_diff_cols), add(add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_rows)))))
mul(mul(add(ones_diff_rows, compare_blocks_rows), add(add(add(add(add(add(compare_blocks_rows, compare_blocks_cols), ones_diff_rows), ones_diff_cols), add(compare_blocks_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_rows, mul(zeros_diff_cols, mul(ones_diff_rows, compare_blocks_rows))))), zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols)))
mul(mul(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)))
add(mul(add(add(ones_diff_rows, compare_blocks_rows), mul(mul(add(add(mul(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, compare_blocks_rows)), add(mul(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_cols))), mul(add(add(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_rows)))), add(mul(add(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_rows))), mul(add(mul(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))))), zeros_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, ones_diff_cols))))
add(add(mul(ones_diff_cols, ones_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), add(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
COND TREES:
or_(False, and_(ge(_if_then_else(True, max_col_clue, max_col_clue), _if_then_else(and_(False, True), _if_then_else(True, 0, max_col_clue), _if_then_else(True, 1, compare_blocks_cols))), or_(or_(le(zeros_diff_rows, max_col_clue), ge(zeros_diff_cols, max_row_clue)), and_(and_(False, True), ge(1, max_row_clue)))))
or_(le(_if_then_else(and_(ge(0, ones_diff_cols), and_(False, True)), 3, _if_then_else(and_(True, False), 0, _if_then_else(True, max_row_clue, 4))), _if_then_else(False, max_col_clue, _if_then_else(True, _if_then_else(True, 4, zeros_diff_rows), 0))), le(_if_then_else(or_(False, False), _if_then_else(and_(True, True), _if_then_else(True, 4, 1), ones_diff_cols), _if_then_else(True, zeros_diff_rows, _if_then_else(False, 2, zeros_diff_cols))), _if_then_else(True, 4, _if_then_else(and_(True, le(_if_then_else(or_(False, False), _if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(True, compare_blocks_rows, 0)), _if_then_else(and_(True, True), _if_then_else(False, ones_diff_cols, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)))), 0, zeros_diff_rows))))
ge(_if_then_else(ge(1, zeros_diff_rows), _if_then_else(and_(False, True), ones_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, _if_then_else(True, 1, ones_diff_cols))), _if_then_else(and_(le(ones_diff_cols, 3), and_(True, or_(False, le(ones_diff_cols, compare_blocks_rows)))), _if_then_else(True, _if_then_else(le(zeros_diff_cols, max_row_clue), ones_diff_cols, zeros_diff_cols), max_col_clue), _if_then_else(le(ones_diff_cols, zeros_diff_rows), compare_blocks_rows, max_col_clue)))
and_(le(zeros_diff_rows, _if_then_else(le(ones_diff_cols, _if_then_else(ge(_if_then_else(True, ones_diff_rows, 3), _if_then_else(and_(False, True), 1, max_row_clue)), _if_then_else(le(3, compare_blocks_rows), _if_then_else(False, _if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(True, 1, zeros_diff_cols)), _if_then_else(True, 4, _if_then_else(False, compare_blocks_cols, ones_diff_rows))), _if_then_else(ge(4, _if_then_else(False, ones_diff_rows, max_col_clue)), _if_then_else(True, 0, _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(False, max_col_clue, 2)))), 2, ones_diff_cols)), and_(True, True))
le(ones_diff_cols, _if_then_else(ge(_if_then_else(False, 4, _if_then_else(True, zeros_diff_rows, compare_blocks_cols)), _if_then_else(True, zeros_diff_rows, compare_blocks_rows)), _if_then_else(or_(False, True), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(True, _if_then_else(True, max_col_clue, 0), _if_then_else(ge(_if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(or_(False, True), 0, _if_then_else(False, zeros_diff_rows, 1))), zeros_diff_rows, 1))))
and_(le(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(or_(False, True), _if_then_else(False, 0, max_row_clue), _if_then_else(ge(_if_then_else(le(_if_then_else(False, max_col_clue, compare_blocks_cols), 3), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), ones_diff_rows), _if_then_else(True, _if_then_else(False, ones_diff_cols, 1), ones_diff_rows)), ones_diff_cols, ones_diff_cols))), le(_if_then_else(True, ones_diff_rows, 0), _if_then_else(le(zeros_diff_cols, zeros_diff_rows), _if_then_else(True, 3, 0), _if_then_else(True, 0, zeros_diff_cols))))
le(_if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, _if_then_else(and_(le(zeros_diff_cols, 3), and_(False, True)), _if_then_else(ge(4, max_row_clue), _if_then_else(True, _if_then_else(False, 2, max_row_clue), _if_then_else(False, 2, 1)), _if_then_else(False, _if_then_else(True, ones_diff_rows, 3), ones_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, _if_then_else(True, max_col_clue, ones_diff_rows)), _if_then_else(le(max_col_clue, 4), compare_blocks_rows, compare_blocks_cols)))), 0), _if_then_else(or_(True, True), _if_then_else(False, 3, ones_diff_rows), _if_then_else(False, 3, _if_then_else(True, 2, 2))))
and_(and_(and_(True, le(zeros_diff_rows, zeros_diff_cols)), and_(False, True)), and_(and_(True, False), ge(_if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(True, max_row_clue, ones_diff_rows)), and_(le(max_col_clue, max_row_clue), ge(ones_diff_cols, max_row_clue))), _if_then_else(True, ones_diff_rows, 1), _if_then_else(and_(ge(_if_then_else(False, 2, compare_blocks_rows), _if_then_else(True, 4, 3)), ge(_if_then_else(True, max_col_clue, 2), _if_then_else(True, max_row_clue, compare_blocks_rows))), _if_then_else(or_(ge(max_col_clue, ones_diff_cols), or_(True, True)), _if_then_else(le(3, 4), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, max_row_clue, zeros_diff_rows)), _if_then_else(or_(False, True), _if_then_else(True, zeros_diff_rows, 0), _if_then_else(True, max_row_clue, 4))), _if_then_else(and_(and_(True, False), le(ones_diff_rows, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, 2, 2))))))))
VAL TREES:
add(add(add(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, add(zeros_diff_cols, compare_blocks_rows))), add(add(add(mul(add(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_cols, zeros_diff_rows))), add(mul(mul(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(zeros_diff_cols, ones_diff_rows)))), ones_diff_rows), mul(ones_diff_cols, zeros_diff_cols)))
mul(add(mul(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)), add(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_rows)))
add(mul(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_rows)), mul(mul(mul(add(mul(add(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_cols)), mul(mul(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_rows))), mul(add(mul(ones_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), add(add(ones_diff_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_cols)))), compare_blocks_rows), add(add(mul(add(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols)), mul(add(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_cols))), ones_diff_rows)))
add(add(mul(compare_blocks_cols, compare_blocks_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols)))
add(mul(mul(zeros_diff_cols, ones_diff_rows), add(mul(mul(add(add(zeros_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, compare_blocks_cols))), mul(add(add(ones_diff_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_cols)), mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(add(add(mul(zeros_diff_cols, zeros_diff_rows), add(zeros_diff_cols, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_cols, zeros_diff_rows))), add(add(add(compare_blocks_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)), mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, compare_blocks_rows)))))), mul(add(ones_diff_rows, ones_diff_rows), add(ones_diff_rows, zeros_diff_cols)))
add(mul(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_rows)), add(mul(compare_blocks_cols, add(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(add(mul(ones_diff_rows, zeros_diff_cols), ones_diff_cols), zeros_diff_cols)), add(mul(zeros_diff_cols, zeros_diff_rows), add(add(zeros_diff_rows, zeros_diff_rows), mul(add(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_cols, zeros_diff_cols)))))), add(compare_blocks_rows, zeros_diff_cols)))
add(mul(mul(mul(zeros_diff_rows, ones_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), add(mul(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols))), mul(mul(add(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, ones_diff_rows)), add(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_rows))))
add(mul(add(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), add(add(ones_diff_rows, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols))), mul(mul(mul(mul(mul(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(mul(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_rows))), mul(mul(mul(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_rows)))), add(add(mul(mul(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)), add(add(zeros_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(mul(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, ones_diff_rows)), add(mul(compare_blocks_cols, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols))))), add(mul(compare_blocks_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_rows))))
add(add(mul(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_cols)), mul(add(add(ones_diff_cols, zeros_diff_cols), ones_diff_cols), add(compare_blocks_cols, add(compare_blocks_cols, zeros_diff_cols))))
COND TREES:
ge(_if_then_else(le(max_col_clue, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, _if_then_else(True, _if_then_else(False, 4, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, _if_then_else(ge(ones_diff_cols, compare_blocks_cols), compare_blocks_cols, 4))), zeros_diff_cols)), _if_then_else(and_(le(compare_blocks_rows, 2), False), _if_then_else(False, _if_then_else(True, zeros_diff_rows, _if_then_else(False, ones_diff_rows, max_row_clue)), ones_diff_rows), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), compare_blocks_cols, 4)))
le(_if_then_else(le(_if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(True, ones_diff_cols, 3), _if_then_else(False, 0, 4))), _if_then_else(or_(True, le(zeros_diff_rows, 3)), _if_then_else(or_(False, False), _if_then_else(True, 4, 0), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(or_(False, True), _if_then_else(True, 1, 1), _if_then_else(True, compare_blocks_cols, 0))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, max_row_clue, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(2, ones_diff_rows), zeros_diff_cols, _if_then_else(False, zeros_diff_rows, 4)))), max_row_clue), _if_then_else(True, 1, max_col_clue), _if_then_else(or_(True, True), 2, max_row_clue)), _if_then_else(ge(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(False, _if_then_else(False, ones_diff_cols, ones_diff_cols), 4)), 4, _if_then_else(and_(True, False), _if_then_else(False, 2, max_row_clue), _if_then_else(True, compare_blocks_cols, 3))), compare_blocks_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, 4, ones_diff_rows)))
ge(_if_then_else(True, _if_then_else(ge(4, 4), ones_diff_cols, zeros_diff_cols), max_col_clue), _if_then_else(and_(and_(ge(ones_diff_cols, 3), True), and_(ge(zeros_diff_rows, compare_blocks_rows), ge(0, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 3), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(2, 2), _if_then_else(True, 1, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(False, 2, 2)), _if_then_else(and_(False, True), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(le(ones_diff_cols, 4), _if_then_else(False, max_row_clue, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)))))
le(_if_then_else(or_(True, False), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, max_row_clue, 0)), _if_then_else(ge(compare_blocks_cols, 4), _if_then_else(le(ones_diff_cols, max_col_clue), _if_then_else(False, zeros_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), 2, ones_diff_cols)), 3), _if_then_else(True, zeros_diff_cols, _if_then_else(False, _if_then_else(True, compare_blocks_rows, 3), compare_blocks_cols))))
ge(_if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 0, ones_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, 0, 1), max_col_clue))
or_(ge(_if_then_else(le(0, zeros_diff_rows), 3, 4), _if_then_else(False, 4, 2)), and_(or_(False, False), or_(or_(and_(False, False), ge(max_col_clue, max_col_clue)), ge(_if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, 4)))))
ge(_if_then_else(and_(True, True), _if_then_else(False, _if_then_else(False, _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(False, 3, 1)), ones_diff_cols), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(False, max_row_clue, _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(True, compare_blocks_cols, max_col_clue)))
or_(or_(and_(or_(False, False), False), le(2, 2)), or_(or_(False, True), le(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_row_clue, 1)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, ones_diff_cols))), compare_blocks_rows)))
VAL TREES:
mul(mul(mul(ones_diff_cols, ones_diff_rows), add(mul(ones_diff_cols, ones_diff_cols), ones_diff_rows)), mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)))
add(add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)))
add(add(mul(add(mul(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols))), add(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_rows)))), add(add(add(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), mul(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols)))
add(add(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)))
mul(mul(add(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols)))
mul(mul(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)))
add(mul(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, ones_diff_cols))))
mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_rows)))
COND TREES:
ge(_if_then_else(le(max_col_clue, zeros_diff_cols), _if_then_else(False, ones_diff_cols, max_col_clue), _if_then_else(True, _if_then_else(True, _if_then_else(le(compare_blocks_rows, 2), 4, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 3)), zeros_diff_cols)), _if_then_else(and_(le(2, 2), False), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, _if_then_else(False, ones_diff_rows, max_row_clue)), ones_diff_rows), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), compare_blocks_cols, 4)))
le(_if_then_else(le(_if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(True, ones_diff_cols, 3), _if_then_else(False, 0, 4))), _if_then_else(or_(and_(False, False), le(zeros_diff_rows, 3)), _if_then_else(or_(False, False), _if_then_else(True, 4, 0), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(or_(False, True), _if_then_else(True, 1, 1), _if_then_else(True, compare_blocks_cols, 0))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, max_row_clue, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(2, ones_diff_rows), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, 4)))), max_row_clue), _if_then_else(True, 1, max_col_clue), _if_then_else(le(_if_then_else(False, _if_then_else(True, compare_blocks_cols, zeros_diff_rows), 0), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(or_(False, True), 2, 0), _if_then_else(True, _if_then_else(or_(True, True), zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, max_col_clue))), _if_then_else(ge(compare_blocks_cols, _if_then_else(True, 0, 0)), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, _if_then_else(True, 2, 0), _if_then_else(False, 4, 4))))), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, 4, ones_diff_rows)))
ge(_if_then_else(le(_if_then_else(ge(ones_diff_cols, zeros_diff_rows), _if_then_else(True, max_col_clue, 4), _if_then_else(True, max_col_clue, compare_blocks_cols)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, max_col_clue, 3))), _if_then_else(or_(le(max_col_clue, compare_blocks_rows), or_(True, False)), _if_then_else(or_(False, True), _if_then_else(ge(_if_then_else(and_(le(2, max_row_clue), True), _if_then_else(False, _if_then_else(False, ones_diff_rows, 4), _if_then_else(True, 4, max_col_clue)), _if_then_else(False, max_col_clue, 3)), _if_then_else(and_(False, and_(False, True)), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 0, zeros_diff_rows))), 1, 3), _if_then_else(False, 3, 4)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, 0, max_col_clue), _if_then_else(True, 3, compare_blocks_cols))), _if_then_else(ge(_if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 3, 3)), _if_then_else(True, _if_then_else(False, ones_diff_cols, 4), _if_then_else(True, ones_diff_cols, ones_diff_cols)), _if_then_else(ge(compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_cols, 3), _if_then_else(le(_if_then_else(False, 4, 1), _if_then_else(True, compare_blocks_rows, _if_then_else(False, 0, 3))), _if_then_else(ge(max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 0, 2)), _if_then_else(le(max_col_clue, compare_blocks_rows), _if_then_else(True, _if_then_else(False, 4, max_row_clue), 3), _if_then_else(False, 3, 4)))))), _if_then_else(and_(and_(ge(ones_diff_cols, 3), True), and_(ge(zeros_diff_rows, compare_blocks_rows), ge(0, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 3), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(2, 2), _if_then_else(True, 1, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(False, 2, 2)), _if_then_else(and_(False, True), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(le(ones_diff_cols, 4), _if_then_else(False, max_row_clue, 0), _if_then_else(and_(True, or_(False, le(ones_diff_cols, compare_blocks_rows))), compare_blocks_cols, compare_blocks_cols)))))
le(_if_then_else(or_(True, False), _if_then_else(False, 2, 3), _if_then_else(False, max_row_clue, 0)), _if_then_else(ge(compare_blocks_cols, 4), _if_then_else(False, _if_then_else(False, zeros_diff_rows, compare_blocks_cols), 3), _if_then_else(True, zeros_diff_cols, _if_then_else(False, _if_then_else(False, compare_blocks_rows, 3), compare_blocks_cols))))
ge(_if_then_else(or_(True, and_(le(compare_blocks_rows, 0), or_(False, False))), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 0, ones_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, max_col_clue, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))
or_(ge(_if_then_else(le(0, 4), 3, 4), _if_then_else(False, 4, 2)), and_(ge(_if_then_else(and_(True, False), ones_diff_cols, compare_blocks_rows), _if_then_else(and_(True, True), 2, ones_diff_rows)), or_(True, True)))
ge(_if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, _if_then_else(False, max_col_clue, ones_diff_rows)), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(True, max_row_clue, _if_then_else(True, _if_then_else(True, 2, 2), compare_blocks_cols)), _if_then_else(True, compare_blocks_cols, max_col_clue)))
or_(or_(and_(or_(False, False), False), le(2, 2)), or_(or_(False, True), le(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(and_(or_(and_(and_(and_(False, False), le(ones_diff_rows, ones_diff_rows)), le(_if_then_else(True, max_col_clue, 2), _if_then_else(True, max_col_clue, 4))), or_(or_(or_(False, False), le(1, max_row_clue)), ge(_if_then_else(False, 0, compare_blocks_rows), _if_then_else(False, 4, zeros_diff_rows)))), or_(and_(le(_if_then_else(False, _if_then_else(ge(_if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, 2)), _if_then_else(le(4, zeros_diff_rows), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, ones_diff_rows)), _if_then_else(le(3, ones_diff_rows), _if_then_else(False, zeros_diff_rows, ones_diff_cols), _if_then_else(False, ones_diff_cols, zeros_diff_cols))), 0), _if_then_else(True, ones_diff_rows, ones_diff_cols)), and_(and_(False, False), or_(False, True))), or_(or_(or_(False, False), and_(True, False)), ge(_if_then_else(True, ones_diff_rows, max_col_clue), _if_then_else(False, 1, zeros_diff_cols))))), 4, ones_diff_rows), _if_then_else(True, max_row_clue, 1)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), 4)), compare_blocks_rows)))
VAL TREES:
mul(mul(mul(ones_diff_cols, ones_diff_rows), add(mul(ones_diff_cols, ones_diff_cols), ones_diff_rows)), mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)))
add(add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)))
add(add(mul(add(mul(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols))), add(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_rows)))), add(add(add(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), mul(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols)))
add(add(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)))
mul(mul(add(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols)))
mul(mul(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)))
add(mul(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, ones_diff_cols))))
mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_rows)))
COND TREES:
ge(_if_then_else(le(max_col_clue, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, _if_then_else(True, _if_then_else(False, 4, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 3)), zeros_diff_cols)), _if_then_else(and_(le(compare_blocks_rows, compare_blocks_rows), False), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, _if_then_else(True, ones_diff_rows, max_row_clue)), ones_diff_rows), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), compare_blocks_cols, 4)))
le(_if_then_else(le(_if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(True, ones_diff_cols, 3), _if_then_else(False, 0, 4))), _if_then_else(or_(True, le(zeros_diff_rows, 3)), _if_then_else(or_(False, False), _if_then_else(True, 4, 0), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(or_(False, True), _if_then_else(True, 1, 1), _if_then_else(True, compare_blocks_cols, 0))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, max_row_clue, compare_blocks_cols)), zeros_diff_rows, _if_then_else(le(2, ones_diff_rows), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 4)))), max_row_clue), _if_then_else(True, 1, max_col_clue), _if_then_else(or_(False, True), 2, max_row_clue)), _if_then_else(ge(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(False, _if_then_else(False, ones_diff_cols, ones_diff_cols), 4)), _if_then_else(ge(3, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(or_(ge(ones_diff_cols, zeros_diff_rows), True), ones_diff_cols, 1)), _if_then_else(and_(True, False), _if_then_else(False, 2, max_row_clue), _if_then_else(True, compare_blocks_cols, 3))), compare_blocks_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, 4, ones_diff_rows)))
ge(_if_then_else(True, _if_then_else(ge(4, 4), ones_diff_cols, zeros_diff_cols), max_col_clue), _if_then_else(and_(and_(ge(ones_diff_cols, 3), True), and_(ge(zeros_diff_rows, compare_blocks_rows), ge(0, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 3), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, _if_then_else(False, 1, 4), zeros_diff_rows)), _if_then_else(ge(2, 2), _if_then_else(True, 1, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(False, 2, 2)), _if_then_else(and_(False, True), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(le(ones_diff_cols, 4), _if_then_else(False, max_row_clue, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)))))
le(_if_then_else(or_(True, False), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(True, max_row_clue, 0)), _if_then_else(ge(compare_blocks_cols, 4), _if_then_else(le(ones_diff_cols, max_col_clue), _if_then_else(False, zeros_diff_rows, _if_then_else(le(ones_diff_cols, max_col_clue), 2, ones_diff_cols)), 3), _if_then_else(True, _if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, _if_then_else(True, compare_blocks_rows, 3), compare_blocks_cols))))
ge(_if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 0, _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 0, ones_diff_cols)))), _if_then_else(or_(False, True), _if_then_else(False, _if_then_else(ge(_if_then_else(True, 1, ones_diff_rows), _if_then_else(False, 4, _if_then_else(False, 4, ones_diff_rows))), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(True, zeros_diff_rows, zeros_diff_cols), _if_then_else(ge(3, _if_then_else(False, max_col_clue, max_col_clue)), max_row_clue, 4)), _if_then_else(or_(False, True), _if_then_else(and_(True, or_(True, False)), _if_then_else(ge(compare_blocks_cols, ones_diff_cols), _if_then_else(False, compare_blocks_rows, 4), _if_then_else(False, compare_blocks_rows, 0)), 4), _if_then_else(True, max_col_clue, _if_then_else(False, ones_diff_rows, 2)))), 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))
or_(ge(_if_then_else(le(0, zeros_diff_rows), 3, 4), _if_then_else(False, 4, 2)), and_(or_(False, False), or_(or_(and_(False, False), ge(max_col_clue, max_col_clue)), or_(False, False))))
ge(_if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, _if_then_else(True, max_col_clue, ones_diff_rows)), _if_then_else(le(max_col_clue, 4), compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(le(compare_blocks_cols, max_col_clue), False), _if_then_else(False, max_row_clue, _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(True, compare_blocks_cols, max_col_clue)))
or_(or_(and_(or_(False, False), False), le(2, 2)), or_(or_(ge(_if_then_else(ge(_if_then_else(ge(4, zeros_diff_rows), _if_then_else(False, 0, ones_diff_rows), _if_then_else(True, zeros_diff_cols, max_row_clue)), _if_then_else(le(ones_diff_cols, 1), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, compare_blocks_cols, ones_diff_rows))), _if_then_else(or_(or_(True, False), and_(True, True)), _if_then_else(or_(False, True), _if_then_else(False, 0, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, ones_diff_cols)), _if_then_else(ge(1, max_row_clue), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(True, compare_blocks_rows, max_row_clue))), 2), _if_then_else(or_(le(_if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, ones_diff_rows, 0)), and_(ge(2, 0), and_(False, True))), _if_then_else(or_(le(compare_blocks_rows, 3), ge(ones_diff_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, max_col_clue, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(False, 2, zeros_diff_cols))), _if_then_else(le(_if_then_else(True, compare_blocks_rows, 4), _if_then_else(False, ones_diff_rows, 2)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_rows, 0), _if_then_else(True, zeros_diff_rows, 2)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, 2), _if_then_else(True, zeros_diff_rows, 3))))), True), le(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(True, max_row_clue, 1)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, ones_diff_cols))), compare_blocks_rows)))
VAL TREES:
mul(mul(mul(ones_diff_cols, ones_diff_rows), add(mul(ones_diff_cols, ones_diff_cols), ones_diff_rows)), mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)))
add(add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)))
add(add(mul(add(mul(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols))), add(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_rows)))), add(add(add(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), mul(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols)))
add(add(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)))
mul(mul(add(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols)))
mul(mul(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)))
add(mul(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, ones_diff_cols))))
mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_rows)))
COND TREES:
ge(_if_then_else(le(max_col_clue, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, max_col_clue, zeros_diff_cols)), _if_then_else(and_(le(compare_blocks_rows, 2), False), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, _if_then_else(False, ones_diff_rows, max_row_clue)), ones_diff_rows), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), compare_blocks_cols, 4)))
le(_if_then_else(le(_if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(True, ones_diff_cols, 3), _if_then_else(False, 0, 4))), _if_then_else(or_(and_(False, False), le(zeros_diff_rows, 3)), _if_then_else(or_(False, False), _if_then_else(True, 4, 0), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(or_(False, True), _if_then_else(True, 1, 1), _if_then_else(True, compare_blocks_cols, 0))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, max_row_clue, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(2, ones_diff_rows), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 4)))), max_row_clue), _if_then_else(True, 1, max_col_clue), _if_then_else(le(_if_then_else(False, _if_then_else(True, compare_blocks_cols, zeros_diff_rows), 0), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), _if_then_else(False, max_row_clue, zeros_diff_rows), _if_then_else(ge(compare_blocks_cols, _if_then_else(True, 0, 0)), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, _if_then_else(True, 2, 0), _if_then_else(False, 4, 4))))), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, 4, ones_diff_rows)))
ge(_if_then_else(le(_if_then_else(ge(ones_diff_cols, zeros_diff_rows), _if_then_else(True, max_col_clue, 4), _if_then_else(True, max_col_clue, compare_blocks_cols)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, max_col_clue, 3))), _if_then_else(or_(le(max_col_clue, compare_blocks_rows), or_(True, False)), _if_then_else(or_(False, True), _if_then_else(ge(_if_then_else(and_(le(2, max_row_clue), True), _if_then_else(False, _if_then_else(False, ones_diff_rows, 4), _if_then_else(True, 4, max_col_clue)), _if_then_else(False, max_col_clue, 3)), _if_then_else(and_(False, and_(False, True)), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 0, zeros_diff_rows))), 1, 3), _if_then_else(False, 3, 4)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, 0, max_col_clue), _if_then_else(True, 3, compare_blocks_cols))), _if_then_else(ge(_if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 3, 3)), _if_then_else(True, _if_then_else(False, ones_diff_cols, 4), _if_then_else(True, ones_diff_cols, ones_diff_cols)), _if_then_else(ge(compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_cols, 3), _if_then_else(le(_if_then_else(False, 4, 1), _if_then_else(True, compare_blocks_rows, _if_then_else(False, 0, 3))), _if_then_else(ge(max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 0, _if_then_else(False, 1, 4))), _if_then_else(le(max_col_clue, compare_blocks_rows), _if_then_else(True, _if_then_else(False, 4, max_row_clue), 3), _if_then_else(False, 3, 4)))))), _if_then_else(and_(and_(ge(ones_diff_cols, 3), True), and_(ge(zeros_diff_rows, compare_blocks_rows), ge(0, ones_diff_cols))), _if_then_else(le(zeros_diff_cols, compare_blocks_cols), _if_then_else(le(zeros_diff_cols, 3), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(2, 2), _if_then_else(True, 1, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(False, 2, 2)), _if_then_else(and_(False, True), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(le(ones_diff_cols, 4), _if_then_else(False, max_row_clue, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)))))
le(_if_then_else(or_(True, False), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, max_row_clue, 0)), _if_then_else(ge(compare_blocks_cols, 4), _if_then_else(False, _if_then_else(False, zeros_diff_rows, compare_blocks_cols), 3), _if_then_else(True, zeros_diff_cols, _if_then_else(False, _if_then_else(True, compare_blocks_rows, 3), compare_blocks_cols))))
ge(_if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 0, ones_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, max_col_clue, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))
or_(ge(_if_then_else(le(0, 4), 3, 4), _if_then_else(False, 4, 2)), or_(le(zeros_diff_cols, 4), and_(False, ge(max_row_clue, 2))))
ge(_if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, _if_then_else(False, _if_then_else(False, 3, ones_diff_rows), ones_diff_rows)), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(False, max_row_clue, _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(True, compare_blocks_cols, max_col_clue)))
or_(or_(and_(or_(False, False), False), le(2, 2)), or_(or_(False, True), le(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(and_(or_(and_(and_(and_(False, False), le(ones_diff_rows, ones_diff_rows)), le(_if_then_else(True, max_col_clue, 2), _if_then_else(True, max_col_clue, 4))), or_(or_(or_(False, False), le(1, max_row_clue)), ge(_if_then_else(False, 0, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_rows)))), or_(and_(le(_if_then_else(False, 2, 0), _if_then_else(True, ones_diff_rows, ones_diff_cols)), and_(and_(False, False), or_(False, True))), or_(or_(or_(False, False), and_(True, False)), ge(_if_then_else(True, ones_diff_rows, 1), _if_then_else(False, 1, zeros_diff_cols))))), 4, ones_diff_rows), _if_then_else(True, max_row_clue, 1)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), 4)), compare_blocks_rows)))
VAL TREES:
mul(mul(mul(ones_diff_cols, ones_diff_rows), add(mul(ones_diff_cols, ones_diff_cols), ones_diff_rows)), mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)))
add(add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)))
add(add(mul(add(mul(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols))), add(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_rows)))), add(add(add(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), mul(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols)))
add(add(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)))
mul(mul(add(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols)))
mul(mul(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)))
add(mul(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, ones_diff_cols))))
mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_rows)))
COND TREES:
le(_if_then_else(ge(1, max_row_clue), _if_then_else(False, max_row_clue, 3), _if_then_else(False, ones_diff_cols, _if_then_else(True, _if_then_else(le(compare_blocks_rows, 2), 4, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 3)))), _if_then_else(or_(False, False), _if_then_else(False, 2, 2), _if_then_else(True, max_col_clue, max_col_clue)))
ge(_if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, 4), _if_then_else(and_(False, True), _if_then_else(or_(False, True), 2, 0), _if_then_else(True, _if_then_else(or_(True, True), zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, max_col_clue)))), _if_then_else(True, _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, 3, compare_blocks_cols)))
and_(or_(ge(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, 1, compare_blocks_cols)), le(2, 1)), and_(ge(_if_then_else(or_(False, True), _if_then_else(True, 4, 0), _if_then_else(True, zeros_diff_rows, 3)), _if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, compare_blocks_rows, 1))), le(ones_diff_rows, ones_diff_cols)))
or_(le(_if_then_else(and_(le(compare_blocks_cols, zeros_diff_cols), and_(False, True)), _if_then_else(and_(True, True), _if_then_else(True, 4, 1), _if_then_else(False, compare_blocks_rows, max_row_clue)), _if_then_else(ge(max_col_clue, 3), _if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(max_row_clue, 4), le(zeros_diff_rows, 4)), max_col_clue, _if_then_else(and_(True, True), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(True, max_col_clue, max_row_clue)))), or_(ge(_if_then_else(and_(True, False), _if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, ones_diff_cols, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(True, max_row_clue, 3), _if_then_else(False, 2, zeros_diff_cols))), or_(or_(False, le(2, max_row_clue)), and_(le(0, zeros_diff_cols), and_(True, True)))))
and_(True, ge(_if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(True, max_col_clue, zeros_diff_rows)))
and_(and_(or_(False, False), or_(True, True)), le(_if_then_else(True, _if_then_else(True, ones_diff_rows, 0), max_col_clue), _if_then_else(True, max_col_clue, max_row_clue)))
or_(or_(and_(or_(ge(4, compare_blocks_rows), le(zeros_diff_cols, max_row_clue)), and_(le(compare_blocks_cols, 2), le(max_col_clue, zeros_diff_rows))), or_(le(_if_then_else(True, 2, 4), _if_then_else(False, compare_blocks_rows, 3)), or_(le(1, 3), or_(True, False)))), or_(le(_if_then_else(or_(False, True), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, 2)), _if_then_else(ge(max_col_clue, zeros_diff_rows), _if_then_else(True, 2, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, 3))), or_(le(_if_then_else(False, compare_blocks_rows, _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 1, zeros_diff_rows))), _if_then_else(True, 3, 0)), ge(_if_then_else(False, zeros_diff_cols, ones_diff_rows), max_col_clue))))
le(_if_then_else(le(4, 2), _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, max_col_clue, 0)), _if_then_else(and_(True, or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), compare_blocks_rows), and_(le(max_col_clue, max_row_clue), ge(ones_diff_cols, max_row_clue)))), _if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, 4)))
VAL TREES:
mul(mul(mul(ones_diff_cols, add(zeros_diff_rows, ones_diff_rows)), mul(mul(mul(mul(mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols)), add(mul(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows))), add(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), add(add(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))), add(mul(add(add(zeros_diff_cols, ones_diff_rows), add(compare_blocks_cols, ones_diff_cols)), add(mul(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols))), add(mul(add(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols))))), ones_diff_cols)), add(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_cols, mul(zeros_diff_rows, compare_blocks_rows))))
add(add(mul(compare_blocks_cols, ones_diff_rows), mul(add(ones_diff_cols, zeros_diff_cols), zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), mul(mul(ones_diff_rows, add(zeros_diff_cols, compare_blocks_cols)), zeros_diff_cols)))
add(add(add(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_rows)))
add(add(mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_rows, zeros_diff_cols)), add(mul(zeros_diff_rows, compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows))), add(add(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows)), mul(add(add(ones_diff_cols, ones_diff_cols), add(ones_diff_rows, zeros_diff_rows)), add(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows)))))
add(mul(mul(ones_diff_cols, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), add(mul(ones_diff_cols, zeros_diff_cols), mul(mul(add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), add(add(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_rows))), compare_blocks_cols)))
mul(add(add(add(add(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))), mul(add(mul(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_rows)), add(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, compare_blocks_cols)))), mul(add(add(add(add(mul(add(add(mul(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_cols, compare_blocks_rows)), add(mul(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))), add(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(mul(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows)))), add(mul(mul(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, compare_blocks_cols)), mul(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_cols, zeros_diff_rows))), mul(mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_rows)), add(add(zeros_diff_rows, ones_diff_rows), add(compare_blocks_cols, ones_diff_cols))))), compare_blocks_rows), mul(ones_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_cols))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, ones_diff_rows)), add(mul(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, zeros_diff_rows)))))
mul(add(add(mul(add(compare_blocks_cols, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_rows)), add(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), add(mul(mul(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols)))), add(mul(mul(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols))), add(add(add(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)))))
add(mul(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_rows, ones_diff_cols)), add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)))
add(mul(add(compare_blocks_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), add(mul(ones_diff_cols, add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_cols, ones_diff_cols))), add(compare_blocks_cols, add(zeros_diff_rows, ones_diff_rows))))
COND TREES:
or_(False, and_(ge(_if_then_else(True, max_col_clue, max_col_clue), _if_then_else(and_(False, True), _if_then_else(True, 0, max_col_clue), _if_then_else(True, 1, compare_blocks_cols))), or_(or_(le(zeros_diff_rows, max_col_clue), ge(zeros_diff_cols, max_row_clue)), and_(True, ge(1, max_row_clue)))))
or_(le(_if_then_else(and_(ge(0, ones_diff_cols), and_(False, True)), 3, _if_then_else(and_(True, False), 0, _if_then_else(True, max_row_clue, 4))), _if_then_else(False, max_col_clue, _if_then_else(True, zeros_diff_cols, ones_diff_rows))), le(_if_then_else(or_(False, False), _if_then_else(and_(True, True), _if_then_else(True, 4, 1), ones_diff_cols), _if_then_else(True, zeros_diff_rows, _if_then_else(False, 2, zeros_diff_cols))), _if_then_else(True, 4, _if_then_else(and_(True, le(_if_then_else(or_(False, False), _if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(True, compare_blocks_rows, 0)), _if_then_else(and_(True, True), _if_then_else(False, ones_diff_cols, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)))), 0, zeros_diff_rows))))
ge(_if_then_else(ge(1, zeros_diff_rows), _if_then_else(and_(False, True), ones_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, _if_then_else(False, 1, ones_diff_cols))), _if_then_else(and_(le(ones_diff_cols, 3), and_(True, or_(False, le(ones_diff_cols, compare_blocks_rows)))), _if_then_else(True, _if_then_else(le(zeros_diff_cols, max_row_clue), ones_diff_cols, zeros_diff_cols), max_col_clue), _if_then_else(le(ones_diff_cols, zeros_diff_rows), compare_blocks_rows, max_col_clue)))
and_(le(zeros_diff_rows, _if_then_else(le(ones_diff_cols, _if_then_else(ge(_if_then_else(True, ones_diff_rows, 3), _if_then_else(and_(False, True), 1, max_row_clue)), _if_then_else(le(3, compare_blocks_rows), _if_then_else(or_(True, False), _if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(True, 1, zeros_diff_cols)), _if_then_else(True, 4, _if_then_else(False, compare_blocks_cols, ones_diff_rows))), _if_then_else(ge(4, _if_then_else(False, ones_diff_rows, max_col_clue)), _if_then_else(True, 0, _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(False, max_col_clue, 2)))), 2, ones_diff_cols)), and_(True, True))
le(ones_diff_cols, _if_then_else(ge(_if_then_else(False, 4, max_col_clue), _if_then_else(True, zeros_diff_rows, compare_blocks_rows)), _if_then_else(or_(False, True), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(True, _if_then_else(True, max_col_clue, 0), _if_then_else(ge(_if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(or_(False, True), 0, _if_then_else(True, zeros_diff_rows, compare_blocks_cols))), zeros_diff_rows, 1))))
and_(le(_if_then_else(True, max_col_clue, max_col_clue), _if_then_else(or_(False, True), _if_then_else(False, 0, max_row_clue), _if_then_else(ge(_if_then_else(le(_if_then_else(False, max_col_clue, compare_blocks_cols), 3), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), ones_diff_rows), _if_then_else(True, _if_then_else(False, ones_diff_cols, 1), ones_diff_rows)), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), ones_diff_cols))), le(_if_then_else(True, ones_diff_rows, 0), _if_then_else(le(zeros_diff_cols, zeros_diff_rows), _if_then_else(True, 3, 0), _if_then_else(True, 0, zeros_diff_cols))))
le(_if_then_else(or_(le(ones_diff_cols, 0), False), _if_then_else(True, compare_blocks_rows, _if_then_else(and_(le(zeros_diff_cols, 3), and_(False, True)), _if_then_else(ge(4, max_row_clue), _if_then_else(True, _if_then_else(False, 2, max_row_clue), _if_then_else(False, 2, 1)), _if_then_else(False, _if_then_else(True, ones_diff_rows, 3), ones_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, _if_then_else(False, _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(False, 3, 1)), ones_diff_cols), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))), 0), _if_then_else(or_(True, True), _if_then_else(False, 3, ones_diff_rows), _if_then_else(False, 3, _if_then_else(True, 2, 2))))
and_(and_(and_(True, le(zeros_diff_rows, zeros_diff_cols)), and_(False, True)), and_(True, ge(_if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(True, max_row_clue, ones_diff_rows)), and_(le(max_col_clue, max_row_clue), ge(ones_diff_cols, max_row_clue))), _if_then_else(True, ones_diff_rows, 1), _if_then_else(and_(ge(_if_then_else(False, 2, compare_blocks_rows), _if_then_else(True, 4, 3)), ge(_if_then_else(True, max_col_clue, 2), _if_then_else(True, max_row_clue, compare_blocks_rows))), _if_then_else(or_(ge(max_col_clue, ones_diff_cols), or_(True, True)), _if_then_else(le(3, 4), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, max_row_clue, zeros_diff_rows)), _if_then_else(or_(False, True), _if_then_else(True, zeros_diff_rows, 0), _if_then_else(True, max_row_clue, 4))), _if_then_else(and_(and_(True, False), le(ones_diff_rows, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, 2, 2))))))))
VAL TREES:
add(add(add(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, add(zeros_diff_cols, compare_blocks_rows))), add(add(ones_diff_rows, ones_diff_rows), mul(ones_diff_cols, zeros_diff_cols)))
mul(add(mul(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)), add(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_rows)))
add(mul(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_rows)), mul(mul(mul(add(mul(add(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_cols)), mul(mul(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_rows))), mul(add(mul(ones_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), add(add(ones_diff_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_cols)))), compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_cols, compare_blocks_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols)))
add(mul(mul(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, ones_diff_rows), add(ones_diff_rows, zeros_diff_cols)))
add(mul(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_rows)), add(mul(compare_blocks_cols, add(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(add(mul(ones_diff_rows, zeros_diff_cols), ones_diff_cols), zeros_diff_cols)), add(mul(zeros_diff_cols, zeros_diff_rows), add(add(zeros_diff_rows, zeros_diff_rows), mul(add(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_cols, zeros_diff_cols)))))), add(compare_blocks_rows, zeros_diff_cols)))
add(mul(mul(mul(zeros_diff_rows, ones_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), add(mul(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols))), mul(mul(add(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, ones_diff_rows)), add(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_rows))))
add(mul(add(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), add(add(ones_diff_rows, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols))), mul(mul(mul(ones_diff_cols, zeros_diff_rows), add(ones_diff_rows, zeros_diff_rows)), add(mul(compare_blocks_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_rows))))
add(add(mul(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_cols)), mul(add(add(ones_diff_cols, zeros_diff_cols), ones_diff_cols), add(compare_blocks_cols, add(compare_blocks_cols, zeros_diff_cols))))
COND TREES:
ge(_if_then_else(le(max_col_clue, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, _if_then_else(True, _if_then_else(False, 4, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 3)), 3)), _if_then_else(and_(le(compare_blocks_rows, 2), False), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, _if_then_else(False, ones_diff_rows, max_row_clue)), ones_diff_rows), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), compare_blocks_cols, 4)))
le(_if_then_else(le(_if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(True, ones_diff_cols, 3), _if_then_else(False, 0, 4))), _if_then_else(or_(True, le(zeros_diff_rows, 3)), _if_then_else(or_(False, False), _if_then_else(True, 4, 0), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(or_(False, True), _if_then_else(True, 1, 1), _if_then_else(True, compare_blocks_cols, 0))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, max_col_clue), 4), _if_then_else(or_(True, True), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(2, ones_diff_rows), _if_then_else(and_(ge(4, compare_blocks_cols), ge(ones_diff_cols, 4)), _if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 0), _if_then_else(False, max_row_clue, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, 4), _if_then_else(True, 3, compare_blocks_cols))), _if_then_else(False, zeros_diff_rows, 4)))), max_row_clue), _if_then_else(True, 1, max_col_clue), _if_then_else(or_(True, True), 2, max_row_clue)), _if_then_else(ge(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(False, _if_then_else(False, ones_diff_cols, ones_diff_cols), 4)), _if_then_else(ge(3, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(or_(ge(ones_diff_cols, zeros_diff_rows), True), ones_diff_cols, 1)), _if_then_else(and_(True, False), _if_then_else(False, 2, max_row_clue), _if_then_else(True, compare_blocks_cols, 3))), compare_blocks_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, 4, ones_diff_rows)))
ge(_if_then_else(True, _if_then_else(ge(4, 4), ones_diff_cols, zeros_diff_cols), max_col_clue), _if_then_else(and_(and_(ge(ones_diff_cols, 3), True), and_(ge(zeros_diff_rows, compare_blocks_rows), ge(0, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 3), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(2, 2), _if_then_else(True, 1, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(False, _if_then_else(True, _if_then_else(ge(4, 4), ones_diff_cols, zeros_diff_cols), max_col_clue), 2)), _if_then_else(and_(False, True), _if_then_else(True, 1, ones_diff_cols), _if_then_else(ge(2, 2), zeros_diff_rows, 1)), _if_then_else(le(ones_diff_cols, 4), _if_then_else(False, max_row_clue, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)))))
le(_if_then_else(or_(True, False), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(or_(True, False), max_row_clue, 0)), _if_then_else(ge(compare_blocks_cols, 4), _if_then_else(le(ones_diff_cols, max_col_clue), _if_then_else(False, zeros_diff_rows, _if_then_else(ge(_if_then_else(and_(True, False), _if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(1, 4), _if_then_else(False, 0, 3), _if_then_else(True, 0, 1))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, max_col_clue), _if_then_else(False, 2, 4)), _if_then_else(or_(False, True), _if_then_else(True, 1, 4), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(and_(False, True), _if_then_else(False, max_col_clue, 2), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 0, zeros_diff_cols)), _if_then_else(ge(max_col_clue, 3), _if_then_else(False, max_col_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, 4))))), 3), _if_then_else(True, zeros_diff_cols, _if_then_else(False, _if_then_else(True, compare_blocks_rows, 3), compare_blocks_cols))))
ge(_if_then_else(ge(_if_then_else(or_(False, False), _if_then_else(True, zeros_diff_cols, max_col_clue), _if_then_else(False, max_col_clue, 4)), _if_then_else(ge(4, ones_diff_cols), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, max_col_clue, ones_diff_rows))), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 0, ones_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, 0, 1), _if_then_else(True, _if_then_else(True, 0, ones_diff_cols), compare_blocks_cols)))
or_(ge(_if_then_else(le(0, zeros_diff_rows), 3, 4), _if_then_else(False, compare_blocks_rows, 2)), and_(or_(False, False), or_(or_(and_(False, False), ge(max_col_clue, _if_then_else(le(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, max_row_clue, 4)), _if_then_else(ge(zeros_diff_cols, compare_blocks_cols), _if_then_else(False, 3, 0), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(ge(max_col_clue, compare_blocks_rows), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(True, max_row_clue, 4))))), ge(_if_then_else(and_(True, False), ones_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, 4)))))
ge(_if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, _if_then_else(True, max_col_clue, ones_diff_rows)), _if_then_else(le(max_col_clue, 4), compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(False, _if_then_else(le(max_col_clue, 4), compare_blocks_rows, compare_blocks_cols), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(True, compare_blocks_cols, max_col_clue)))
or_(or_(and_(or_(False, False), False), le(2, 2)), or_(or_(False, False), le(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, ones_diff_rows), _if_then_else(True, max_row_clue, 1)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, ones_diff_cols))), compare_blocks_rows)))
VAL TREES:
mul(mul(mul(ones_diff_cols, ones_diff_rows), add(mul(ones_diff_cols, ones_diff_cols), ones_diff_rows)), mul(add(add(add(add(mul(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)), add(mul(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_cols, compare_blocks_cols))), mul(add(mul(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols)), mul(mul(ones_diff_cols, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)))), mul(add(add(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols))), mul(add(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, compare_blocks_rows)), add(add(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_cols))))), compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)))
add(add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)))
add(add(mul(add(mul(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols))), add(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_rows)))), add(add(add(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), mul(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols)))
add(add(mul(compare_blocks_rows, ones_diff_rows), mul(add(mul(mul(zeros_diff_cols, ones_diff_rows), add(compare_blocks_cols, zeros_diff_cols)), mul(mul(mul(compare_blocks_rows, ones_diff_rows), compare_blocks_rows), mul(mul(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_rows)))), compare_blocks_cols)), add(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)))
mul(mul(add(ones_diff_rows, mul(mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), add(mul(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols)))), add(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols)))
mul(mul(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)))
add(mul(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, ones_diff_cols))))
mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_rows), add(add(add(mul(add(zeros_diff_cols, compare_blocks_cols), ones_diff_rows), add(zeros_diff_rows, ones_diff_cols)), add(mul(ones_diff_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows))), compare_blocks_rows)))
COND TREES:
ge(_if_then_else(le(max_col_clue, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, _if_then_else(True, _if_then_else(False, 4, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 3)), zeros_diff_cols)), _if_then_else(and_(le(ones_diff_rows, 2), False), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, _if_then_else(True, ones_diff_rows, max_row_clue)), ones_diff_rows), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), compare_blocks_cols, 4)))
le(_if_then_else(le(_if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(True, ones_diff_cols, 3), _if_then_else(False, 0, 4))), _if_then_else(or_(True, le(zeros_diff_rows, 3)), _if_then_else(or_(False, False), _if_then_else(True, 4, 0), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(or_(False, True), _if_then_else(True, 1, 1), _if_then_else(True, compare_blocks_cols, 0))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, max_row_clue, compare_blocks_cols)), zeros_diff_rows, _if_then_else(le(2, ones_diff_rows), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 4)))), max_row_clue), _if_then_else(True, 1, max_col_clue), _if_then_else(or_(True, True), 2, max_row_clue)), _if_then_else(ge(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(False, _if_then_else(False, ones_diff_cols, ones_diff_cols), 4)), _if_then_else(ge(3, zeros_diff_rows), _if_then_else(True, 4, max_col_clue), _if_then_else(or_(ge(ones_diff_cols, zeros_diff_rows), True), ones_diff_cols, 1)), _if_then_else(and_(True, False), _if_then_else(False, 2, max_row_clue), _if_then_else(True, compare_blocks_cols, 3))), compare_blocks_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, 4, ones_diff_rows)))
ge(_if_then_else(True, _if_then_else(ge(4, 4), ones_diff_cols, zeros_diff_cols), max_col_clue), _if_then_else(ge(zeros_diff_cols, max_col_clue), _if_then_else(ge(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 3), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(2, 2), _if_then_else(True, 1, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(False, 2, 2)), _if_then_else(and_(False, True), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(le(ones_diff_cols, 4), _if_then_else(False, max_row_clue, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)))))
le(_if_then_else(or_(True, False), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, max_row_clue, 0)), _if_then_else(ge(compare_blocks_cols, 4), _if_then_else(le(ones_diff_cols, max_col_clue), _if_then_else(False, zeros_diff_rows, _if_then_else(le(ones_diff_cols, max_col_clue), 2, ones_diff_cols)), 3), _if_then_else(True, _if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, _if_then_else(True, compare_blocks_rows, 3), compare_blocks_cols))))
ge(_if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 0, _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 0, ones_diff_cols)))), _if_then_else(or_(False, True), _if_then_else(False, _if_then_else(ge(_if_then_else(True, 1, ones_diff_rows), _if_then_else(False, 4, _if_then_else(False, 4, ones_diff_rows))), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(True, zeros_diff_rows, zeros_diff_cols), _if_then_else(ge(3, _if_then_else(False, max_col_clue, max_col_clue)), max_row_clue, 4)), _if_then_else(or_(False, True), _if_then_else(and_(True, or_(True, False)), _if_then_else(ge(compare_blocks_cols, ones_diff_cols), _if_then_else(False, compare_blocks_rows, 4), _if_then_else(False, compare_blocks_rows, 0)), 4), _if_then_else(True, max_col_clue, _if_then_else(False, ones_diff_rows, 2)))), 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))
or_(ge(_if_then_else(le(0, zeros_diff_rows), 3, 4), _if_then_else(False, 4, 2)), and_(or_(False, False), or_(or_(and_(False, False), ge(max_col_clue, max_col_clue)), ge(_if_then_else(and_(True, False), ones_diff_cols, compare_blocks_rows), _if_then_else(and_(True, True), 2, ones_diff_rows)))))
ge(_if_then_else(le(compare_blocks_cols, ones_diff_rows), _if_then_else(True, zeros_diff_rows, _if_then_else(True, max_col_clue, ones_diff_rows)), _if_then_else(le(max_col_clue, 4), compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(le(compare_blocks_cols, max_col_clue), True), _if_then_else(False, max_row_clue, _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(True, compare_blocks_cols, max_col_clue)))
or_(or_(and_(or_(False, False), False), le(2, 2)), or_(or_(ge(_if_then_else(ge(_if_then_else(ge(4, zeros_diff_rows), _if_then_else(False, 0, ones_diff_rows), _if_then_else(True, zeros_diff_cols, max_row_clue)), _if_then_else(le(ones_diff_cols, 1), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, compare_blocks_cols, ones_diff_rows))), _if_then_else(or_(or_(True, False), and_(True, True)), _if_then_else(or_(False, True), _if_then_else(False, 0, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, ones_diff_cols)), _if_then_else(ge(1, max_row_clue), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(True, compare_blocks_rows, max_row_clue))), _if_then_else(ge(_if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, 2)), _if_then_else(le(4, zeros_diff_rows), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, ones_diff_rows)), _if_then_else(le(3, ones_diff_rows), _if_then_else(False, zeros_diff_rows, ones_diff_cols), _if_then_else(False, ones_diff_cols, zeros_diff_cols)))), _if_then_else(or_(le(_if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, ones_diff_rows, 0)), and_(ge(2, 0), and_(False, True))), _if_then_else(or_(le(compare_blocks_rows, 3), ge(ones_diff_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, max_col_clue, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(False, 2, zeros_diff_cols))), _if_then_else(le(_if_then_else(True, compare_blocks_rows, 4), _if_then_else(False, ones_diff_rows, 2)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_rows, 0), _if_then_else(True, zeros_diff_rows, 2)), _if_then_else(and_(or_(False, False), False), _if_then_else(False, zeros_diff_cols, 2), _if_then_else(True, zeros_diff_rows, 3))))), True), le(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(True, max_row_clue, 1)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, ones_diff_cols))), compare_blocks_rows)))
VAL TREES:
mul(mul(mul(ones_diff_cols, ones_diff_rows), add(mul(ones_diff_cols, ones_diff_cols), ones_diff_rows)), mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)))
add(add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)))
add(add(mul(add(mul(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols))), add(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_rows)))), add(add(add(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), mul(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols)))
add(add(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)))
mul(mul(add(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols)))
mul(mul(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)))
add(mul(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, ones_diff_cols))))
mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_rows)))
COND TREES:
ge(_if_then_else(le(max_col_clue, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, _if_then_else(True, _if_then_else(False, 4, zeros_diff_cols), _if_then_else(ge(1, max_row_clue), compare_blocks_rows, 3)), zeros_diff_cols)), _if_then_else(and_(le(compare_blocks_rows, 2), False), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, _if_then_else(False, ones_diff_rows, max_row_clue)), compare_blocks_rows), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), compare_blocks_cols, 4)))
le(_if_then_else(le(_if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(True, ones_diff_cols, 3), _if_then_else(False, 0, 4))), _if_then_else(or_(and_(False, False), le(zeros_diff_rows, 3)), _if_then_else(or_(False, False), _if_then_else(True, 4, 0), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(or_(False, True), _if_then_else(True, 1, 1), _if_then_else(True, compare_blocks_cols, 0))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, max_row_clue, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(2, ones_diff_rows), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 4)))), max_row_clue), _if_then_else(True, 1, max_col_clue), _if_then_else(or_(True, True), 2, max_row_clue)), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, _if_then_else(ge(_if_then_else(and_(True, False), _if_then_else(False, ones_diff_rows, 2), _if_then_else(False, max_col_clue, 0)), _if_then_else(or_(False, False), _if_then_else(True, max_col_clue, 2), _if_then_else(True, max_col_clue, 3))), _if_then_else(or_(or_(True, True), le(ones_diff_rows, 0)), _if_then_else(or_(True, True), _if_then_else(True, 4, max_row_clue), _if_then_else(False, max_col_clue, 0)), _if_then_else(and_(True, False), _if_then_else(False, max_col_clue, max_row_clue), _if_then_else(False, 0, 3))), _if_then_else(False, _if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, 4), _if_then_else(True, compare_blocks_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_rows, 2), _if_then_else(False, zeros_diff_rows, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, 1))))), _if_then_else(True, compare_blocks_cols, ones_diff_rows)))
ge(_if_then_else(le(_if_then_else(ge(ones_diff_cols, zeros_diff_rows), _if_then_else(True, max_col_clue, 4), _if_then_else(True, max_col_clue, compare_blocks_cols)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, _if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, compare_blocks_rows, 1))), _if_then_else(False, max_col_clue, 3))), _if_then_else(or_(le(max_col_clue, compare_blocks_rows), or_(True, False)), _if_then_else(or_(False, True), _if_then_else(True, 1, 3), _if_then_else(False, 3, 4)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, 0, max_col_clue), _if_then_else(True, 3, compare_blocks_cols))), _if_then_else(ge(_if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 3, 3)), _if_then_else(True, _if_then_else(False, ones_diff_cols, 4), _if_then_else(True, ones_diff_cols, ones_diff_cols)), _if_then_else(ge(compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_cols, 3), _if_then_else(le(_if_then_else(False, 4, 1), _if_then_else(True, compare_blocks_rows, _if_then_else(False, 0, 3))), _if_then_else(ge(max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 0, _if_then_else(False, 1, 4))), _if_then_else(and_(ge(2, 2), True), _if_then_else(True, _if_then_else(False, 4, max_row_clue), 3), _if_then_else(False, 3, 4)))))), _if_then_else(and_(and_(ge(ones_diff_cols, 3), True), and_(ge(zeros_diff_rows, compare_blocks_rows), ge(0, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 3), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(2, 2), _if_then_else(True, _if_then_else(and_(or_(True, le(zeros_diff_cols, ones_diff_rows)), or_(and_(True, True), le(1, 3))), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, 1, zeros_diff_cols)), _if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(ge(2, max_col_clue), zeros_diff_rows, ones_diff_cols), _if_then_else(and_(and_(ge(ones_diff_cols, 3), True), and_(ge(zeros_diff_rows, compare_blocks_rows), ge(0, ones_diff_cols))), ones_diff_cols, _if_then_else(False, zeros_diff_rows, 4)))), 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(False, 2, 2)), _if_then_else(and_(False, True), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(le(ones_diff_cols, 4), _if_then_else(False, max_row_clue, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)))))
le(_if_then_else(or_(True, False), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, max_row_clue, 0)), _if_then_else(ge(max_col_clue, 3), _if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, max_col_clue, max_row_clue)))
ge(_if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 0, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, max_col_clue, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))
or_(ge(_if_then_else(le(0, 4), 3, 4), ones_diff_rows), and_(or_(False, False), and_(le(_if_then_else(le(1, max_row_clue), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, 0)), _if_then_else(or_(False, False), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(False, compare_blocks_rows, compare_blocks_cols))), or_(or_(or_(False, True), le(0, 3)), le(_if_then_else(and_(True, True), 2, ones_diff_rows), _if_then_else(False, 1, ones_diff_cols))))))
ge(_if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, _if_then_else(False, max_col_clue, ones_diff_rows)), _if_then_else(False, _if_then_else(or_(le(ones_diff_cols, 0), le(compare_blocks_cols, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, max_col_clue), _if_then_else(False, ones_diff_rows, 2)), _if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(or_(le(_if_then_else(True, 2, 4), _if_then_else(False, compare_blocks_rows, 3)), or_(le(1, 3), or_(True, False))), 1, _if_then_else(True, 2, 2)), _if_then_else(True, 4, zeros_diff_rows))), compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(False, max_row_clue, _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(True, compare_blocks_cols, max_col_clue)))
or_(or_(and_(False, ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), compare_blocks_rows)), le(2, 2)), or_(or_(False, True), le(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_row_clue, _if_then_else(False, zeros_diff_rows, zeros_diff_cols))), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_cols, ones_diff_cols))), compare_blocks_rows)))
VAL TREES:
mul(mul(mul(ones_diff_cols, ones_diff_rows), add(mul(ones_diff_cols, ones_diff_cols), ones_diff_rows)), mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)))
add(add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)))
add(add(mul(add(mul(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols))), add(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_rows)))), add(add(add(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), mul(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols)))
add(add(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)))
mul(mul(add(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols)))
mul(mul(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)))
add(mul(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, ones_diff_cols))))
mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_rows)))
COND TREES:
ge(_if_then_else(le(max_col_clue, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, _if_then_else(True, compare_blocks_rows, _if_then_else(False, compare_blocks_rows, _if_then_else(False, max_row_clue, 3))), zeros_diff_cols)), _if_then_else(and_(le(compare_blocks_rows, 2), False), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, _if_then_else(le(max_col_clue, zeros_diff_cols), ones_diff_rows, max_row_clue)), ones_diff_rows), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), compare_blocks_cols, 4)))
le(_if_then_else(le(_if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(True, ones_diff_cols, 3), _if_then_else(False, 0, 4))), _if_then_else(or_(True, le(zeros_diff_rows, 3)), _if_then_else(or_(False, False), _if_then_else(True, 4, 0), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(or_(False, True), _if_then_else(True, 1, 1), _if_then_else(True, compare_blocks_cols, 0))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, max_row_clue, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(2, ones_diff_rows), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 4)))), max_row_clue), _if_then_else(True, 1, max_col_clue), _if_then_else(or_(True, True), 2, max_row_clue)), _if_then_else(ge(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(False, _if_then_else(False, ones_diff_cols, ones_diff_cols), 4)), _if_then_else(ge(3, zeros_diff_rows), _if_then_else(True, _if_then_else(True, _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(True, compare_blocks_rows, 0)), ones_diff_cols), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(or_(ge(ones_diff_cols, zeros_diff_rows), True), ones_diff_cols, 1)), _if_then_else(and_(True, False), _if_then_else(False, 2, max_row_clue), _if_then_else(True, _if_then_else(False, _if_then_else(True, 2, 0), _if_then_else(False, 4, 4)), 3))), compare_blocks_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, 4, ones_diff_rows)))
ge(_if_then_else(True, _if_then_else(ge(4, 4), ones_diff_cols, zeros_diff_cols), max_col_clue), _if_then_else(and_(and_(ge(ones_diff_cols, 3), True), False), _if_then_else(ge(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 3), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(2, 2), _if_then_else(True, 1, 0), 4)), _if_then_else(ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(and_(False, True), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(le(ones_diff_cols, 4), _if_then_else(False, max_row_clue, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)))))
le(_if_then_else(or_(True, False), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, max_row_clue, 0)), _if_then_else(ge(compare_blocks_cols, 4), _if_then_else(le(ones_diff_cols, max_col_clue), _if_then_else(False, zeros_diff_rows, _if_then_else(le(ones_diff_cols, max_col_clue), 2, ones_diff_cols)), 3), _if_then_else(True, zeros_diff_cols, _if_then_else(False, _if_then_else(True, compare_blocks_rows, 3), compare_blocks_cols))))
ge(_if_then_else(or_(or_(True, False), False), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 0, ones_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, 0, _if_then_else(True, max_col_clue, zeros_diff_rows)), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))
or_(ge(_if_then_else(le(0, zeros_diff_rows), 3, zeros_diff_cols), _if_then_else(or_(False, and_(False, ge(max_row_clue, 2))), 4, 2)), and_(or_(False, False), or_(or_(and_(False, ge(_if_then_else(le(0, 4), 3, 4), _if_then_else(False, 4, 2))), ge(max_col_clue, max_col_clue)), ge(_if_then_else(and_(True, False), ones_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, 4)))))
ge(_if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, _if_then_else(True, max_col_clue, _if_then_else(or_(False, True), _if_then_else(False, max_row_clue, _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(True, compare_blocks_cols, max_col_clue)))), _if_then_else(le(max_col_clue, 4), compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(False, max_row_clue, _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(True, 2, max_col_clue)))
or_(or_(and_(or_(False, False), False), le(2, 2)), or_(or_(False, True), le(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(False, 4, ones_diff_rows), _if_then_else(False, max_row_clue, 1)), _if_then_else(or_(True, False), _if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, compare_blocks_cols, ones_diff_cols))), compare_blocks_rows)))
VAL TREES:
mul(mul(mul(ones_diff_cols, ones_diff_rows), add(mul(ones_diff_cols, ones_diff_cols), ones_diff_rows)), mul(mul(mul(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_rows, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_rows))))
add(mul(mul(ones_diff_rows, mul(compare_blocks_cols, compare_blocks_cols)), mul(ones_diff_rows, mul(compare_blocks_rows, compare_blocks_cols))), add(mul(zeros_diff_cols, mul(ones_diff_rows, compare_blocks_rows)), add(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows)))
add(add(mul(add(mul(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols))), add(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_rows)))), add(add(add(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(mul(add(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, zeros_diff_cols)), add(mul(zeros_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows))), mul(mul(mul(zeros_diff_cols, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)), add(mul(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_cols)))), add(add(add(mul(zeros_diff_cols, ones_diff_cols), add(ones_diff_rows, zeros_diff_rows)), mul(mul(zeros_diff_cols, zeros_diff_rows), add(ones_diff_cols, compare_blocks_rows))), mul(add(add(ones_diff_cols, zeros_diff_rows), add(zeros_diff_rows, zeros_diff_rows)), mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_rows))))), compare_blocks_cols))), mul(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols)))
add(add(mul(compare_blocks_rows, mul(add(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), add(mul(ones_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols)))), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)))
mul(mul(add(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(mul(mul(ones_diff_rows, mul(ones_diff_rows, ones_diff_rows)), mul(zeros_diff_cols, mul(zeros_diff_cols, ones_diff_rows))), add(mul(mul(mul(add(compare_blocks_rows, mul(ones_diff_rows, compare_blocks_rows)), mul(zeros_diff_cols, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_cols))), ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols))))
mul(mul(add(add(add(compare_blocks_rows, ones_diff_cols), mul(add(zeros_diff_rows, compare_blocks_rows), ones_diff_cols)), add(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, add(zeros_diff_rows, ones_diff_rows)))), add(ones_diff_cols, zeros_diff_cols)), mul(add(add(mul(add(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, ones_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols))), ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)))
add(mul(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), mul(add(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_rows)), add(add(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_rows, ones_diff_cols))))), mul(mul(add(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, mul(add(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_rows)), add(add(zeros_diff_rows, ones_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)))))))
mul(mul(mul(add(mul(mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, mul(mul(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols))))), mul(mul(zeros_diff_cols, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows))), add(add(add(ones_diff_cols, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_cols)))), add(mul(add(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), mul(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_cols, compare_blocks_cols))), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_cols, compare_blocks_cols)), mul(add(add(mul(add(mul(add(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows))), add(add(mul(compare_blocks_rows, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)), add(mul(ones_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_cols)))), add(add(add(mul(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_cols))), add(add(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows))))), zeros_diff_rows), add(ones_diff_rows, zeros_diff_cols))))), mul(ones_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_rows)))
COND TREES:
ge(_if_then_else(le(max_col_clue, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, _if_then_else(True, _if_then_else(False, 4, zeros_diff_cols), _if_then_else(ge(1, max_row_clue), _if_then_else(ge(1, max_row_clue), 4, zeros_diff_cols), 3)), zeros_diff_cols)), _if_then_else(and_(le(compare_blocks_rows, 2), False), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, _if_then_else(False, ones_diff_rows, max_row_clue)), ones_diff_rows), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), compare_blocks_cols, 4)))
le(_if_then_else(le(_if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(True, ones_diff_cols, 3), _if_then_else(False, 0, 4))), _if_then_else(or_(and_(False, False), le(zeros_diff_rows, 3)), _if_then_else(or_(False, False), _if_then_else(True, 4, 0), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(or_(False, True), _if_then_else(True, 1, 1), _if_then_else(True, compare_blocks_cols, 0))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, max_row_clue, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(2, ones_diff_rows), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 4)))), max_row_clue), _if_then_else(True, 1, max_col_clue), _if_then_else(or_(True, True), 2, max_row_clue)), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, _if_then_else(ge(_if_then_else(and_(True, False), _if_then_else(False, ones_diff_rows, 2), _if_then_else(False, max_col_clue, 0)), _if_then_else(or_(False, False), _if_then_else(True, max_col_clue, 2), _if_then_else(True, max_col_clue, 3))), _if_then_else(or_(or_(and_(ge(_if_then_else(or_(False, False), _if_then_else(True, 4, 1), _if_then_else(False, ones_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_rows, ones_diff_cols), _if_then_else(False, 1, 1), _if_then_else(False, ones_diff_rows, 3))), or_(and_(le(compare_blocks_cols, 3), ge(ones_diff_cols, ones_diff_rows)), and_(and_(True, False), and_(False, False)))), True), le(ones_diff_rows, 0)), _if_then_else(or_(True, True), _if_then_else(True, 4, max_row_clue), _if_then_else(False, max_col_clue, 0)), _if_then_else(and_(True, False), _if_then_else(False, max_col_clue, max_row_clue), _if_then_else(False, 0, 3))), _if_then_else(False, _if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, 4), _if_then_else(True, compare_blocks_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_rows, 2), _if_then_else(False, zeros_diff_rows, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, 1))))), _if_then_else(True, 4, ones_diff_rows)))
ge(_if_then_else(le(_if_then_else(ge(ones_diff_cols, zeros_diff_rows), _if_then_else(True, max_col_clue, 4), _if_then_else(True, max_col_clue, compare_blocks_cols)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, _if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, compare_blocks_rows, 1))), _if_then_else(False, max_col_clue, 3))), _if_then_else(or_(le(max_col_clue, compare_blocks_rows), or_(True, False)), _if_then_else(or_(False, True), _if_then_else(True, 1, 3), _if_then_else(False, 3, 4)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, 0, max_col_clue), _if_then_else(True, 3, compare_blocks_cols))), _if_then_else(ge(_if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 3, 3)), _if_then_else(True, _if_then_else(False, ones_diff_cols, _if_then_else(True, zeros_diff_rows, ones_diff_cols)), _if_then_else(True, ones_diff_cols, ones_diff_cols)), _if_then_else(ge(compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_cols, 3), _if_then_else(le(_if_then_else(False, 4, 1), _if_then_else(True, compare_blocks_rows, _if_then_else(False, 0, 3))), _if_then_else(ge(max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 0, _if_then_else(False, 1, 4))), _if_then_else(and_(ge(2, 2), True), _if_then_else(True, _if_then_else(False, 4, max_row_clue), 3), _if_then_else(False, 3, 4)))))), _if_then_else(and_(and_(ge(ones_diff_cols, 3), True), and_(ge(zeros_diff_rows, compare_blocks_rows), ge(0, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 3), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(2, 2), _if_then_else(True, _if_then_else(and_(or_(True, le(zeros_diff_cols, ones_diff_rows)), or_(and_(True, True), le(1, 3))), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, 1, zeros_diff_cols)), _if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(ge(2, max_col_clue), zeros_diff_rows, ones_diff_cols), _if_then_else(ge(zeros_diff_cols, max_col_clue), ones_diff_cols, _if_then_else(False, zeros_diff_rows, 4)))), 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(False, 2, 2)), _if_then_else(and_(False, True), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(le(ones_diff_cols, 4), _if_then_else(False, max_row_clue, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)))))
le(_if_then_else(or_(True, False), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, max_row_clue, 0)), _if_then_else(ge(max_col_clue, 3), _if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, max_col_clue, max_row_clue)))
ge(_if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 0, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, max_col_clue, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))
or_(ge(_if_then_else(le(0, 4), 3, 4), ones_diff_rows), and_(or_(False, False), and_(le(_if_then_else(le(1, max_row_clue), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, 0)), _if_then_else(or_(False, False), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(False, compare_blocks_rows, compare_blocks_cols))), or_(or_(or_(False, True), le(0, 3)), le(_if_then_else(and_(True, True), 2, ones_diff_rows), _if_then_else(False, 1, ones_diff_cols))))))
ge(_if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, _if_then_else(False, max_col_clue, ones_diff_rows)), _if_then_else(False, _if_then_else(or_(le(ones_diff_cols, 0), le(compare_blocks_cols, max_col_clue)), _if_then_else(le(compare_blocks_cols, ones_diff_rows), _if_then_else(True, max_row_clue, max_col_clue), _if_then_else(False, ones_diff_rows, 2)), _if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(or_(le(_if_then_else(True, 2, 4), _if_then_else(False, compare_blocks_rows, 3)), or_(le(1, 3), or_(True, False))), 1, _if_then_else(True, 2, 2)), _if_then_else(True, 4, zeros_diff_rows))), compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(False, max_row_clue, _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(True, compare_blocks_cols, max_col_clue)))
or_(or_(and_(or_(False, False), ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), compare_blocks_rows)), le(2, 2)), or_(or_(or_(le(_if_then_else(False, zeros_diff_rows, max_row_clue), _if_then_else(True, ones_diff_cols, 3)), le(_if_then_else(False, 2, max_row_clue), _if_then_else(True, ones_diff_rows, 4))), True), le(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_row_clue, _if_then_else(False, zeros_diff_rows, zeros_diff_cols))), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_cols, ones_diff_cols))), compare_blocks_rows)))
VAL TREES:
mul(mul(mul(ones_diff_cols, ones_diff_rows), add(mul(ones_diff_cols, ones_diff_cols), ones_diff_rows)), mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)))
add(add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)))
add(add(mul(add(mul(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols))), add(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_rows)))), add(add(add(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), mul(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols)))
add(add(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)))
mul(mul(add(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols)))
mul(mul(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)))
add(mul(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, ones_diff_cols))))
mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_rows)))
COND TREES:
ge(_if_then_else(le(max_col_clue, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, _if_then_else(True, _if_then_else(False, 4, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 3)), zeros_diff_cols)), _if_then_else(and_(le(compare_blocks_rows, 2), False), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, _if_then_else(True, ones_diff_rows, max_row_clue)), ones_diff_rows), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), compare_blocks_cols, 4)))
le(_if_then_else(le(_if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(True, ones_diff_cols, 3), _if_then_else(False, 0, 4))), _if_then_else(or_(True, le(zeros_diff_rows, 3)), _if_then_else(or_(False, False), _if_then_else(True, 4, 0), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(or_(False, True), _if_then_else(True, 1, 1), _if_then_else(True, compare_blocks_cols, 0))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, max_row_clue, compare_blocks_cols)), zeros_diff_rows, _if_then_else(le(2, ones_diff_rows), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 4)))), max_row_clue), _if_then_else(True, 1, max_col_clue), _if_then_else(or_(True, True), 2, max_row_clue)), _if_then_else(ge(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(False, _if_then_else(False, ones_diff_cols, ones_diff_cols), 4)), _if_then_else(ge(3, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(or_(ge(ones_diff_cols, zeros_diff_rows), True), ones_diff_cols, 1)), _if_then_else(and_(True, False), _if_then_else(False, 2, max_row_clue), _if_then_else(True, compare_blocks_cols, 3))), compare_blocks_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, 4, ones_diff_rows)))
ge(_if_then_else(True, _if_then_else(ge(4, 4), ones_diff_cols, zeros_diff_cols), max_col_clue), _if_then_else(and_(and_(ge(ones_diff_cols, 3), True), and_(ge(zeros_diff_rows, compare_blocks_rows), ge(0, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 3), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(2, 2), _if_then_else(True, 1, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(False, 2, 2)), _if_then_else(and_(False, True), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(le(ones_diff_cols, 4), _if_then_else(False, max_row_clue, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)))))
le(_if_then_else(or_(True, False), zeros_diff_cols, _if_then_else(False, max_row_clue, 0)), _if_then_else(ge(compare_blocks_cols, 4), _if_then_else(le(ones_diff_cols, max_col_clue), _if_then_else(False, zeros_diff_rows, _if_then_else(le(ones_diff_cols, max_col_clue), 2, ones_diff_cols)), 3), _if_then_else(True, _if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, _if_then_else(True, compare_blocks_rows, 3), compare_blocks_cols))))
ge(_if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 0, _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 0, ones_diff_cols)))), _if_then_else(or_(False, True), _if_then_else(False, _if_then_else(ge(_if_then_else(True, 1, ones_diff_rows), _if_then_else(False, 4, _if_then_else(False, 4, ones_diff_rows))), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(True, zeros_diff_rows, zeros_diff_cols), _if_then_else(ge(3, _if_then_else(False, max_col_clue, max_col_clue)), max_row_clue, 4)), _if_then_else(or_(False, ge(_if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(True, max_col_clue, zeros_diff_rows))), _if_then_else(and_(True, or_(True, False)), _if_then_else(ge(compare_blocks_cols, ones_diff_cols), _if_then_else(False, compare_blocks_rows, 4), _if_then_else(False, compare_blocks_rows, 0)), 4), _if_then_else(True, max_col_clue, _if_then_else(False, ones_diff_rows, 2)))), 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))
or_(ge(_if_then_else(le(0, zeros_diff_rows), 3, 4), _if_then_else(False, 4, 2)), and_(or_(False, False), or_(or_(and_(False, False), ge(max_col_clue, max_col_clue)), ge(_if_then_else(and_(True, False), ones_diff_cols, compare_blocks_rows), _if_then_else(and_(True, True), 2, ones_diff_rows)))))
ge(_if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, _if_then_else(True, max_col_clue, ones_diff_rows)), _if_then_else(le(max_col_clue, 4), compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(le(compare_blocks_cols, max_col_clue), True), _if_then_else(False, max_row_clue, _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(True, compare_blocks_cols, max_col_clue)))
or_(or_(and_(or_(False, False), False), le(2, 2)), or_(or_(ge(_if_then_else(True, _if_then_else(or_(or_(True, False), and_(True, True)), _if_then_else(or_(False, True), _if_then_else(False, 0, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, ones_diff_cols)), _if_then_else(ge(1, max_row_clue), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(True, compare_blocks_rows, max_row_clue))), _if_then_else(ge(_if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, 2)), _if_then_else(le(4, zeros_diff_rows), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, ones_diff_rows)), _if_then_else(le(3, ones_diff_rows), _if_then_else(False, zeros_diff_rows, ones_diff_cols), _if_then_else(False, ones_diff_cols, zeros_diff_cols)))), _if_then_else(or_(le(_if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, ones_diff_rows, 0)), and_(ge(2, 0), and_(False, True))), _if_then_else(or_(le(compare_blocks_rows, 3), ge(ones_diff_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, max_col_clue, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(False, 2, zeros_diff_cols))), _if_then_else(le(_if_then_else(True, compare_blocks_rows, 4), _if_then_else(False, ones_diff_rows, 2)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_rows, 0), _if_then_else(True, zeros_diff_rows, 2)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, 2), _if_then_else(True, zeros_diff_rows, 3))))), True), le(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(True, max_row_clue, 1)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, ones_diff_cols))), compare_blocks_rows)))
VAL TREES:
mul(mul(mul(ones_diff_cols, ones_diff_rows), add(mul(ones_diff_cols, ones_diff_cols), ones_diff_rows)), mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)))
add(add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)))
add(add(mul(add(mul(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols))), add(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_rows)))), add(add(add(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), mul(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols)))
add(add(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)))
mul(mul(add(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols)))
mul(mul(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)))
add(mul(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, ones_diff_cols))))
mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_rows)))
COND TREES:
le(_if_then_else(ge(1, max_row_clue), _if_then_else(False, max_row_clue, 3), _if_then_else(False, ones_diff_cols, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(False, 2, 2), _if_then_else(True, max_col_clue, max_col_clue)))
ge(_if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, 4), _if_then_else(False, max_row_clue, zeros_diff_rows)), _if_then_else(True, _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, 3, compare_blocks_cols)))
and_(or_(le(zeros_diff_cols, compare_blocks_cols), le(2, 1)), and_(ge(_if_then_else(or_(False, True), _if_then_else(True, 4, 0), _if_then_else(True, zeros_diff_rows, 3)), _if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, compare_blocks_rows, 1))), le(ones_diff_rows, ones_diff_cols)))
or_(le(_if_then_else(and_(le(compare_blocks_cols, _if_then_else(False, 2, compare_blocks_cols)), and_(False, True)), _if_then_else(and_(True, True), _if_then_else(True, 4, 1), _if_then_else(False, compare_blocks_rows, max_row_clue)), _if_then_else(ge(max_col_clue, 3), _if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, max_col_clue, max_row_clue))), _if_then_else(and_(le(max_row_clue, 4), le(zeros_diff_rows, 4)), max_col_clue, _if_then_else(and_(True, True), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(True, max_col_clue, max_row_clue)))), or_(ge(_if_then_else(and_(True, False), _if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, ones_diff_cols, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(True, max_row_clue, 3), _if_then_else(False, 2, zeros_diff_cols))), or_(or_(False, le(2, max_row_clue)), and_(le(0, zeros_diff_cols), and_(True, True)))))
and_(True, True)
and_(or_(le(zeros_diff_cols, 4), and_(False, ge(max_row_clue, 2))), le(_if_then_else(True, _if_then_else(True, ones_diff_rows, 0), max_col_clue), _if_then_else(True, max_col_clue, max_row_clue)))
or_(or_(and_(or_(ge(4, compare_blocks_rows), le(zeros_diff_cols, max_row_clue)), and_(le(compare_blocks_cols, 2), le(max_col_clue, zeros_diff_rows))), or_(le(_if_then_else(True, 2, 4), _if_then_else(False, compare_blocks_rows, 3)), or_(le(1, 3), or_(True, False)))), or_(le(_if_then_else(or_(False, True), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, 2)), _if_then_else(ge(max_col_clue, zeros_diff_rows), _if_then_else(True, 2, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, 3))), or_(le(_if_then_else(False, compare_blocks_rows, _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 1, zeros_diff_rows))), _if_then_else(True, 3, 0)), ge(_if_then_else(False, zeros_diff_cols, ones_diff_rows), _if_then_else(False, 3, ones_diff_rows)))))
le(_if_then_else(le(2, 2), _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, max_col_clue, 0)), _if_then_else(and_(True, or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), compare_blocks_rows), and_(le(max_col_clue, max_row_clue), ge(ones_diff_cols, max_row_clue)))), _if_then_else(ge(_if_then_else(ge(4, zeros_diff_rows), _if_then_else(False, 0, ones_diff_rows), _if_then_else(True, zeros_diff_cols, max_row_clue)), _if_then_else(le(ones_diff_cols, 1), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, compare_blocks_cols, ones_diff_rows))), compare_blocks_rows, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, 4)))
VAL TREES:
mul(mul(mul(ones_diff_cols, add(zeros_diff_rows, ones_diff_rows)), mul(zeros_diff_cols, ones_diff_cols)), add(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_cols, mul(zeros_diff_rows, compare_blocks_rows))))
add(add(mul(compare_blocks_cols, ones_diff_rows), mul(add(ones_diff_cols, zeros_diff_cols), zeros_diff_cols)), add(mul(zeros_diff_rows, ones_diff_rows), mul(mul(ones_diff_rows, add(zeros_diff_cols, compare_blocks_cols)), zeros_diff_cols)))
add(add(add(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_rows)))
add(add(mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_rows, zeros_diff_cols)), add(mul(zeros_diff_rows, compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows))), add(add(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows)), mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, zeros_diff_rows))))
add(mul(mul(ones_diff_cols, ones_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), add(mul(ones_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)))
mul(add(add(add(add(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))), mul(add(mul(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_rows)), add(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, compare_blocks_cols)))), mul(add(add(add(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_rows, ones_diff_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_cols))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, ones_diff_rows)), add(mul(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, zeros_diff_rows)))))
mul(add(add(mul(add(compare_blocks_cols, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_rows)), add(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), add(mul(mul(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols)))), add(mul(mul(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols))), add(add(add(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)))))
add(mul(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_rows, ones_diff_cols)), add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)))
add(mul(add(compare_blocks_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), add(mul(ones_diff_cols, add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_cols, ones_diff_cols))), add(compare_blocks_cols, add(zeros_diff_rows, ones_diff_rows))))
COND TREES:
ge(_if_then_else(le(max_col_clue, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, _if_then_else(True, _if_then_else(False, 4, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 3)), zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(and_(False, True), _if_then_else(and_(le(compare_blocks_rows, 2), False), zeros_diff_rows, _if_then_else(False, ones_diff_rows, max_row_clue)), _if_then_else(ge(1, max_row_clue), _if_then_else(False, max_row_clue, 3), _if_then_else(False, ones_diff_cols, max_col_clue))), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), compare_blocks_cols, 4)))
le(_if_then_else(le(_if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(True, ones_diff_cols, 3), _if_then_else(False, 0, 4))), _if_then_else(or_(True, le(_if_then_else(ge(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(False, _if_then_else(False, ones_diff_cols, ones_diff_cols), 4)), _if_then_else(ge(3, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(or_(ge(ones_diff_cols, zeros_diff_rows), True), ones_diff_cols, 1)), _if_then_else(and_(True, False), _if_then_else(False, 2, max_row_clue), _if_then_else(True, compare_blocks_cols, 3))), compare_blocks_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, 4, ones_diff_rows)), 3)), _if_then_else(or_(False, False), _if_then_else(True, 4, 0), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(or_(False, True), _if_then_else(True, 1, 1), _if_then_else(True, compare_blocks_cols, 0))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, max_row_clue, compare_blocks_cols)), _if_then_else(or_(True, True), max_col_clue, _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(2, ones_diff_rows), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 4)))), max_row_clue), _if_then_else(True, 1, max_col_clue), _if_then_else(or_(True, True), 2, max_row_clue)), _if_then_else(ge(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(False, _if_then_else(False, ones_diff_cols, ones_diff_cols), 4)), _if_then_else(ge(3, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(or_(ge(ones_diff_cols, zeros_diff_rows), True), ones_diff_cols, 1)), _if_then_else(and_(True, False), _if_then_else(False, 2, max_row_clue), _if_then_else(True, compare_blocks_cols, 3))), compare_blocks_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, 4, ones_diff_rows)))
ge(_if_then_else(True, _if_then_else(ge(4, 4), ones_diff_cols, zeros_diff_cols), max_col_clue), _if_then_else(and_(le(ones_diff_rows, ones_diff_cols), and_(ge(zeros_diff_rows, compare_blocks_rows), False)), _if_then_else(ge(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 3), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(2, 2), _if_then_else(True, 1, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(False, 2, 2)), _if_then_else(and_(False, True), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(le(ones_diff_cols, 4), _if_then_else(True, max_row_clue, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)))))
le(_if_then_else(or_(True, False), _if_then_else(False, 3, compare_blocks_cols), _if_then_else(False, max_row_clue, 0)), compare_blocks_rows)
ge(_if_then_else(or_(True, False), _if_then_else(False, _if_then_else(True, zeros_diff_rows, zeros_diff_cols), 1), _if_then_else(True, 0, ones_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, 0, 1), _if_then_else(False, 0, 1)))
or_(ge(_if_then_else(le(0, zeros_diff_rows), 3, 4), _if_then_else(False, 4, 4)), and_(or_(False, ge(_if_then_else(le(0, zeros_diff_rows), 3, 4), _if_then_else(False, 4, 2))), or_(or_(and_(False, False), ge(max_col_clue, max_col_clue)), ge(_if_then_else(and_(True, False), ones_diff_cols, compare_blocks_rows), ones_diff_rows))))
ge(_if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, _if_then_else(True, max_col_clue, ones_diff_rows)), _if_then_else(le(max_col_clue, 4), compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(False, max_row_clue, _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(True, compare_blocks_cols, max_col_clue)))
or_(or_(and_(or_(False, False), False), le(2, 2)), or_(or_(False, True), le(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(False, 4, ones_diff_rows), _if_then_else(le(_if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, ones_diff_rows, 0)), max_row_clue, 1)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, ones_diff_cols))), compare_blocks_rows)))
VAL TREES:
mul(mul(mul(ones_diff_cols, ones_diff_rows), add(mul(ones_diff_cols, ones_diff_cols), ones_diff_rows)), mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)))
add(add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)))
add(add(mul(add(mul(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols))), add(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_rows)))), add(add(add(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), mul(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols)))
add(add(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)))
mul(mul(add(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols)))
mul(mul(mul(ones_diff_cols, ones_diff_cols), add(add(mul(zeros_diff_rows, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), mul(add(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)))), mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)))
add(mul(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, add(add(mul(mul(compare_blocks_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols))), mul(add(add(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_rows)), mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)))))), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, ones_diff_cols))))
mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_rows)))
COND TREES:
ge(_if_then_else(le(max_col_clue, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, _if_then_else(True, _if_then_else(False, 4, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 3)), zeros_diff_cols)), _if_then_else(and_(le(compare_blocks_rows, 2), False), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, _if_then_else(le(compare_blocks_rows, 2), ones_diff_rows, max_row_clue)), ones_diff_rows), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), compare_blocks_cols, 4)))
le(_if_then_else(le(_if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(True, ones_diff_cols, 3), _if_then_else(False, 0, 4))), _if_then_else(or_(True, le(zeros_diff_rows, 3)), _if_then_else(or_(False, False), _if_then_else(True, 4, 0), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(or_(False, True), _if_then_else(True, 1, 1), _if_then_else(True, compare_blocks_cols, 0))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, max_row_clue, compare_blocks_cols)), zeros_diff_rows, _if_then_else(le(2, ones_diff_rows), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 4)))), max_row_clue), _if_then_else(True, 1, max_col_clue), _if_then_else(or_(True, True), 2, max_row_clue)), zeros_diff_rows)
ge(_if_then_else(True, _if_then_else(ge(4, 4), ones_diff_cols, zeros_diff_cols), max_col_clue), _if_then_else(and_(and_(ge(ones_diff_cols, 3), True), and_(ge(zeros_diff_rows, compare_blocks_rows), ge(0, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 3), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(2, 2), _if_then_else(True, 1, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(ge(0, ones_diff_cols), 2, 2)), _if_then_else(and_(False, True), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(le(ones_diff_cols, 4), _if_then_else(False, max_row_clue, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)))))
le(_if_then_else(or_(True, False), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, max_row_clue, 0)), _if_then_else(ge(compare_blocks_cols, 4), _if_then_else(le(ones_diff_cols, max_col_clue), _if_then_else(False, zeros_diff_rows, _if_then_else(le(ones_diff_cols, max_col_clue), 2, ones_diff_cols)), 3), _if_then_else(True, _if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, _if_then_else(True, compare_blocks_rows, 3), compare_blocks_cols))))
ge(_if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 0, _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 0, ones_diff_cols)))), _if_then_else(or_(False, True), _if_then_else(False, _if_then_else(ge(_if_then_else(True, 1, ones_diff_rows), _if_then_else(False, 4, _if_then_else(False, 4, ones_diff_rows))), _if_then_else(le(ones_diff_cols, max_row_clue), zeros_diff_rows, _if_then_else(ge(3, _if_then_else(False, max_col_clue, max_col_clue)), max_row_clue, 4)), _if_then_else(or_(False, True), _if_then_else(and_(True, or_(True, False)), _if_then_else(ge(compare_blocks_cols, ones_diff_cols), _if_then_else(False, compare_blocks_rows, 4), _if_then_else(False, compare_blocks_rows, 0)), 4), _if_then_else(True, max_col_clue, _if_then_else(False, ones_diff_rows, 2)))), 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))
or_(ge(_if_then_else(le(0, zeros_diff_rows), 3, 4), _if_then_else(False, 4, 2)), and_(or_(False, False), or_(or_(and_(False, False), ge(max_col_clue, max_col_clue)), ge(_if_then_else(and_(True, False), ones_diff_cols, compare_blocks_rows), _if_then_else(and_(True, True), 2, _if_then_else(True, zeros_diff_rows, 4))))))
ge(_if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, _if_then_else(True, max_col_clue, ones_diff_rows)), _if_then_else(le(max_col_clue, 4), compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(le(compare_blocks_cols, max_col_clue), True), _if_then_else(False, max_row_clue, _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(True, compare_blocks_cols, max_col_clue)))
or_(or_(and_(or_(False, False), False), le(2, 2)), or_(or_(ge(_if_then_else(ge(_if_then_else(ge(4, zeros_diff_rows), _if_then_else(False, 0, ones_diff_rows), _if_then_else(True, zeros_diff_cols, max_row_clue)), _if_then_else(le(ones_diff_cols, 1), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, compare_blocks_cols, ones_diff_rows))), _if_then_else(or_(or_(True, False), and_(True, True)), _if_then_else(or_(False, True), _if_then_else(False, 0, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, ones_diff_cols)), _if_then_else(ge(1, max_row_clue), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(True, compare_blocks_rows, max_row_clue))), _if_then_else(ge(_if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, 2)), _if_then_else(le(4, zeros_diff_rows), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_col_clue, ones_diff_rows)), _if_then_else(le(3, ones_diff_rows), _if_then_else(False, zeros_diff_rows, ones_diff_cols), _if_then_else(False, ones_diff_cols, zeros_diff_cols)))), _if_then_else(or_(or_(True, False), and_(ge(2, 0), and_(False, True))), _if_then_else(or_(le(compare_blocks_rows, 3), ge(ones_diff_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, max_col_clue, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(False, 2, zeros_diff_cols))), _if_then_else(le(_if_then_else(True, compare_blocks_rows, 4), _if_then_else(False, ones_diff_rows, 2)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_rows, 0), _if_then_else(True, zeros_diff_rows, 2)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, 2), _if_then_else(True, zeros_diff_rows, 3))))), True), le(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(True, max_row_clue, 1)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, ones_diff_cols))), compare_blocks_rows)))
VAL TREES:
mul(mul(mul(ones_diff_cols, ones_diff_rows), add(mul(ones_diff_cols, ones_diff_cols), ones_diff_rows)), mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)))
add(add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)))
add(add(mul(add(mul(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols))), add(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_rows)))), add(add(add(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), mul(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols)))
add(add(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)))
mul(mul(add(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols)))
mul(mul(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)))
add(mul(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, ones_diff_cols))))
mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_rows)))
COND TREES:
ge(_if_then_else(le(_if_then_else(False, 4, zeros_diff_cols), zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, _if_then_else(True, _if_then_else(le(compare_blocks_rows, 2), 4, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 3)), zeros_diff_cols)), _if_then_else(and_(le(compare_blocks_rows, 2), True), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, _if_then_else(False, ones_diff_rows, max_row_clue)), ones_diff_rows), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), compare_blocks_cols, 4)))
le(_if_then_else(le(_if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(True, ones_diff_cols, 3), _if_then_else(False, 0, 4))), _if_then_else(or_(and_(False, False), le(zeros_diff_rows, 3)), _if_then_else(or_(False, False), _if_then_else(True, 4, 0), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(or_(False, True), _if_then_else(True, 1, 1), _if_then_else(True, compare_blocks_cols, 0))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, max_col_clue), 3), _if_then_else(or_(True, True), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(2, ones_diff_rows), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 4)))), max_row_clue), _if_then_else(True, 1, max_col_clue), _if_then_else(le(_if_then_else(False, _if_then_else(True, compare_blocks_cols, zeros_diff_rows), 0), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(or_(False, True), 2, _if_then_else(True, 1, 1)), _if_then_else(True, _if_then_else(or_(True, True), zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, max_col_clue))), _if_then_else(ge(compare_blocks_cols, _if_then_else(True, 0, 0)), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(True, _if_then_else(True, 2, 0), _if_then_else(False, 4, 4))))), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, 4, ones_diff_rows)))
ge(_if_then_else(le(_if_then_else(ge(ones_diff_cols, zeros_diff_rows), _if_then_else(True, max_col_clue, 4), _if_then_else(True, max_col_clue, compare_blocks_cols)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, max_col_clue, 3))), _if_then_else(or_(le(max_col_clue, compare_blocks_rows), or_(True, False)), _if_then_else(or_(False, True), _if_then_else(ge(_if_then_else(and_(le(2, max_row_clue), True), _if_then_else(False, _if_then_else(False, ones_diff_rows, 4), _if_then_else(True, 4, max_col_clue)), _if_then_else(False, max_col_clue, 3)), _if_then_else(and_(False, and_(False, True)), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 0, zeros_diff_rows))), 1, 3), _if_then_else(False, 3, 4)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, 0, max_col_clue), _if_then_else(True, 3, compare_blocks_cols))), _if_then_else(ge(_if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 3, ones_diff_cols)), _if_then_else(True, _if_then_else(False, ones_diff_cols, 4), _if_then_else(True, ones_diff_cols, ones_diff_cols)), _if_then_else(ge(compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_cols, 3), _if_then_else(le(_if_then_else(False, 4, 1), _if_then_else(True, compare_blocks_rows, _if_then_else(False, 0, 3))), _if_then_else(ge(max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 0, _if_then_else(False, 1, _if_then_else(ge(compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_cols, 3), _if_then_else(le(_if_then_else(False, 4, 1), _if_then_else(True, compare_blocks_rows, _if_then_else(False, 0, 3))), _if_then_else(ge(max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 0, _if_then_else(False, 1, 4))), _if_then_else(le(max_col_clue, compare_blocks_rows), _if_then_else(True, _if_then_else(False, 4, max_row_clue), 3), _if_then_else(False, 3, 4))))))), _if_then_else(le(max_col_clue, compare_blocks_rows), _if_then_else(True, _if_then_else(False, 4, max_row_clue), 3), _if_then_else(False, 3, 4)))))), _if_then_else(and_(and_(ge(ones_diff_cols, 3), True), and_(ge(zeros_diff_rows, compare_blocks_rows), ge(0, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 3), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(2, 2), _if_then_else(True, 1, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, 2, 2)), _if_then_else(and_(False, True), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(le(ones_diff_cols, 4), _if_then_else(False, max_row_clue, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)))))
le(_if_then_else(or_(True, False), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, max_row_clue, 0)), _if_then_else(ge(compare_blocks_cols, 4), _if_then_else(False, _if_then_else(le(zeros_diff_rows, _if_then_else(le(ones_diff_cols, max_col_clue), 2, ones_diff_cols)), zeros_diff_rows, compare_blocks_cols), 3), _if_then_else(True, zeros_diff_cols, _if_then_else(False, _if_then_else(True, compare_blocks_rows, 3), compare_blocks_cols))))
ge(_if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, 0, ones_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, max_col_clue, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))
or_(ge(_if_then_else(le(0, 4), 3, 4), _if_then_else(False, 4, 2)), and_(or_(False, False), or_(le(_if_then_else(or_(True, True), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 1)), _if_then_else(le(zeros_diff_cols, zeros_diff_rows), _if_then_else(True, 3, 0), _if_then_else(True, 0, zeros_diff_cols))), True)))
ge(_if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, _if_then_else(False, max_col_clue, ones_diff_rows)), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, max_row_clue, _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(True, 2, max_col_clue)))
or_(or_(and_(or_(False, False), False), le(2, 2)), or_(or_(False, True), le(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(and_(or_(and_(and_(and_(False, False), le(ones_diff_rows, ones_diff_rows)), le(_if_then_else(True, max_col_clue, 2), _if_then_else(True, max_col_clue, 4))), True), or_(and_(le(_if_then_else(False, 2, 0), _if_then_else(True, ones_diff_rows, ones_diff_cols)), and_(and_(False, False), False)), or_(or_(or_(False, False), and_(True, False)), ge(_if_then_else(True, ones_diff_rows, 1), _if_then_else(False, 1, zeros_diff_cols))))), 4, ones_diff_rows), _if_then_else(True, max_row_clue, 1)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), 4)), compare_blocks_rows)))
VAL TREES:
mul(mul(mul(ones_diff_cols, ones_diff_rows), add(mul(ones_diff_cols, ones_diff_cols), ones_diff_rows)), mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)))
add(add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)))
add(add(mul(add(mul(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols))), add(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_rows)))), add(add(add(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), mul(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols)))
add(add(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)))
mul(mul(add(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols)))
mul(mul(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)))
add(mul(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, ones_diff_cols))))
mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_rows)))
COND TREES:
ge(_if_then_else(le(max_col_clue, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, _if_then_else(True, _if_then_else(le(compare_blocks_rows, 2), 4, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 3)), zeros_diff_cols)), _if_then_else(and_(le(compare_blocks_rows, 2), False), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, _if_then_else(False, ones_diff_rows, max_row_clue)), ones_diff_rows), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), compare_blocks_cols, 4)))
le(_if_then_else(le(_if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(True, ones_diff_cols, 3), _if_then_else(False, 0, 4))), _if_then_else(or_(and_(False, False), le(zeros_diff_rows, 3)), _if_then_else(or_(False, False), _if_then_else(True, 4, 0), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(or_(False, True), _if_then_else(True, 1, 1), _if_then_else(True, compare_blocks_cols, 0))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, max_row_clue, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(2, ones_diff_rows), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 4)))), max_row_clue), _if_then_else(True, 1, max_col_clue), _if_then_else(le(_if_then_else(False, _if_then_else(True, compare_blocks_cols, zeros_diff_rows), 0), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(or_(False, True), 2, 0), _if_then_else(True, _if_then_else(or_(True, True), zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, max_col_clue))), _if_then_else(ge(compare_blocks_cols, _if_then_else(False, 0, 0)), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, _if_then_else(True, 2, 0), _if_then_else(False, 4, 4))))), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, 4, ones_diff_rows)))
ge(_if_then_else(le(_if_then_else(ge(ones_diff_cols, zeros_diff_rows), _if_then_else(True, max_col_clue, 4), _if_then_else(True, max_col_clue, compare_blocks_cols)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, max_col_clue, 3))), _if_then_else(or_(le(max_col_clue, compare_blocks_rows), or_(True, False)), _if_then_else(or_(False, True), _if_then_else(ge(_if_then_else(and_(le(2, max_row_clue), True), _if_then_else(False, _if_then_else(False, ones_diff_rows, 4), _if_then_else(True, 4, max_col_clue)), _if_then_else(False, max_col_clue, 3)), _if_then_else(and_(False, and_(False, True)), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 0, zeros_diff_rows))), 1, 3), _if_then_else(False, 3, 4)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, 0, max_col_clue), _if_then_else(True, 3, compare_blocks_cols))), _if_then_else(ge(_if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 3, 3)), _if_then_else(True, _if_then_else(False, ones_diff_cols, 4), _if_then_else(True, ones_diff_cols, ones_diff_cols)), 4)), _if_then_else(and_(and_(ge(ones_diff_cols, 3), True), and_(ge(zeros_diff_rows, compare_blocks_rows), ge(0, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 3), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(2, 2), _if_then_else(True, 1, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(False, 2, 2)), _if_then_else(and_(False, True), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(le(ones_diff_cols, 4), _if_then_else(False, max_row_clue, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)))))
le(_if_then_else(or_(True, False), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, max_row_clue, 0)), _if_then_else(ge(compare_blocks_cols, 4), _if_then_else(False, _if_then_else(False, zeros_diff_rows, compare_blocks_cols), 3), _if_then_else(True, zeros_diff_cols, _if_then_else(False, _if_then_else(True, compare_blocks_rows, 3), compare_blocks_cols))))
ge(_if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 0, ones_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, max_col_clue, 1), _if_then_else(False, _if_then_else(or_(False, True), _if_then_else(True, max_col_clue, 0), _if_then_else(False, zeros_diff_rows, 1)), 1)))
or_(ge(_if_then_else(le(0, 4), 3, 4), _if_then_else(False, 4, 2)), and_(or_(False, False), or_(True, True)))
ge(_if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, _if_then_else(False, max_col_clue, ones_diff_rows)), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(False, max_row_clue, _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(True, compare_blocks_cols, max_col_clue)))
or_(or_(and_(or_(False, False), False), le(2, 2)), or_(or_(or_(False, True), True), le(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(and_(or_(and_(and_(and_(False, False), le(ones_diff_rows, ones_diff_rows)), le(_if_then_else(True, max_col_clue, 2), _if_then_else(True, max_col_clue, 4))), or_(or_(or_(False, False), le(1, max_row_clue)), ge(_if_then_else(False, 0, compare_blocks_rows), _if_then_else(False, 4, zeros_diff_rows)))), or_(and_(le(_if_then_else(False, 2, 0), _if_then_else(True, ones_diff_rows, ones_diff_cols)), and_(and_(False, False), or_(False, True))), or_(or_(or_(False, False), and_(True, False)), ge(_if_then_else(True, ones_diff_rows, 1), _if_then_else(False, 1, zeros_diff_cols))))), 4, ones_diff_rows), _if_then_else(True, max_row_clue, 1)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), 4)), compare_blocks_rows)))
VAL TREES:
mul(mul(mul(ones_diff_cols, ones_diff_rows), add(mul(ones_diff_cols, ones_diff_cols), ones_diff_rows)), mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)))
add(add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)))
add(add(mul(add(mul(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols))), add(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_rows)))), add(add(add(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), mul(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols)))
add(add(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)))
mul(mul(add(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols)))
mul(mul(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)))
add(mul(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, ones_diff_cols))))
mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_rows)))
COND TREES:
ge(_if_then_else(le(max_col_clue, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, _if_then_else(True, _if_then_else(False, 4, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, _if_then_else(ge(ones_diff_cols, compare_blocks_cols), compare_blocks_cols, 4))), zeros_diff_cols)), _if_then_else(and_(le(compare_blocks_rows, 2), False), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, _if_then_else(False, ones_diff_rows, max_row_clue)), ones_diff_rows), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), compare_blocks_cols, 4)))
le(_if_then_else(le(_if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(True, ones_diff_cols, 3), _if_then_else(False, 0, 4))), _if_then_else(or_(True, le(zeros_diff_rows, 3)), _if_then_else(or_(False, or_(True, True)), _if_then_else(True, 4, 0), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(or_(False, True), _if_then_else(True, 1, 1), _if_then_else(True, compare_blocks_cols, 0))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, max_row_clue, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(2, ones_diff_rows), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 4)))), max_row_clue), _if_then_else(True, 1, max_col_clue), _if_then_else(or_(True, True), 2, max_row_clue)), _if_then_else(ge(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(False, _if_then_else(False, ones_diff_cols, ones_diff_cols), 4)), 4, _if_then_else(and_(True, False), _if_then_else(False, 2, max_row_clue), _if_then_else(True, compare_blocks_cols, 3))), compare_blocks_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, 4, ones_diff_rows)))
ge(_if_then_else(True, _if_then_else(ge(4, 4), ones_diff_cols, zeros_diff_cols), max_col_clue), _if_then_else(and_(and_(ge(ones_diff_cols, 3), True), and_(ge(zeros_diff_rows, compare_blocks_rows), ge(0, ones_diff_cols))), ones_diff_rows, _if_then_else(ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(False, 2, 2)), _if_then_else(and_(False, True), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(le(ones_diff_cols, 4), _if_then_else(False, max_row_clue, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)))))
le(_if_then_else(or_(True, False), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(True, max_row_clue, 0)), _if_then_else(ge(compare_blocks_cols, 4), _if_then_else(le(ones_diff_cols, max_col_clue), _if_then_else(False, zeros_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), 2, ones_diff_cols)), 3), _if_then_else(True, zeros_diff_cols, _if_then_else(False, _if_then_else(True, compare_blocks_rows, 3), compare_blocks_cols))))
ge(_if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 0, ones_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, 0, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))
or_(ge(_if_then_else(le(0, zeros_diff_rows), 3, 4), _if_then_else(False, 4, 2)), and_(or_(False, False), or_(or_(and_(False, False), ge(max_col_clue, max_col_clue)), ge(_if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, 4)))))
ge(_if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, _if_then_else(True, max_col_clue, ones_diff_rows)), _if_then_else(le(1, 3), compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(False, max_row_clue, _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(True, compare_blocks_cols, max_col_clue)))
or_(or_(and_(or_(False, False), False), le(2, 2)), or_(or_(False, True), le(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(False, _if_then_else(False, 4, ones_diff_rows), ones_diff_rows), _if_then_else(True, max_row_clue, 1)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, ones_diff_cols))), compare_blocks_rows)))
VAL TREES:
mul(mul(mul(ones_diff_cols, ones_diff_rows), add(mul(ones_diff_cols, ones_diff_cols), ones_diff_rows)), mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)))
mul(mul(add(compare_blocks_rows, zeros_diff_cols), add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_rows))), mul(mul(ones_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))
add(add(mul(add(mul(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols))), add(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_rows)))), add(add(add(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(mul(mul(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, zeros_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_rows))), compare_blocks_cols))), mul(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols)))
add(add(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, mul(mul(add(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_rows, compare_blocks_rows)), add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_cols, ones_diff_cols)))), add(ones_diff_cols, ones_diff_cols)))
mul(mul(add(ones_diff_rows, mul(mul(add(zeros_diff_cols, add(compare_blocks_cols, zeros_diff_cols)), add(mul(zeros_diff_cols, compare_blocks_rows), zeros_diff_rows)), mul(add(add(ones_diff_cols, ones_diff_rows), ones_diff_rows), add(ones_diff_rows, add(zeros_diff_cols, ones_diff_rows))))), add(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols)))
mul(mul(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, mul(mul(add(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)), mul(mul(compare_blocks_rows, add(zeros_diff_rows, ones_diff_rows)), add(ones_diff_cols, zeros_diff_cols))))), mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)))
add(mul(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, ones_diff_cols))))
mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_rows)))
COND TREES:
ge(_if_then_else(le(max_col_clue, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, _if_then_else(True, _if_then_else(False, 4, zeros_diff_cols), _if_then_else(ge(1, max_row_clue), compare_blocks_rows, 3)), zeros_diff_cols)), _if_then_else(and_(le(compare_blocks_rows, 2), False), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, _if_then_else(False, ones_diff_rows, max_row_clue)), ones_diff_rows), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), compare_blocks_cols, 4)))
le(_if_then_else(le(_if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(True, ones_diff_cols, 3), _if_then_else(False, 0, 4))), _if_then_else(or_(and_(False, False), le(zeros_diff_rows, 3)), _if_then_else(or_(False, False), _if_then_else(True, 4, 0), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(or_(False, True), _if_then_else(True, 1, 1), _if_then_else(True, compare_blocks_cols, 0))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, max_row_clue, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(2, ones_diff_rows), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 4)))), max_row_clue), _if_then_else(True, 1, max_col_clue), _if_then_else(or_(True, True), 2, max_row_clue)), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, _if_then_else(ge(_if_then_else(and_(True, False), _if_then_else(False, ones_diff_rows, 2), _if_then_else(False, max_col_clue, 0)), _if_then_else(or_(False, False), _if_then_else(True, max_col_clue, 2), _if_then_else(True, max_col_clue, 3))), _if_then_else(or_(False, le(ones_diff_rows, 0)), _if_then_else(or_(True, True), _if_then_else(True, 4, max_row_clue), _if_then_else(False, max_col_clue, 0)), _if_then_else(and_(True, False), _if_then_else(False, max_col_clue, max_row_clue), _if_then_else(False, 0, 3))), _if_then_else(False, _if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, 4), _if_then_else(True, compare_blocks_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_rows, 2), _if_then_else(False, zeros_diff_rows, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, 1))))), _if_then_else(True, 4, ones_diff_rows)))
ge(_if_then_else(le(_if_then_else(ge(ones_diff_cols, zeros_diff_rows), _if_then_else(True, max_col_clue, 4), _if_then_else(True, max_col_clue, compare_blocks_cols)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, _if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, compare_blocks_rows, 1))), _if_then_else(False, max_col_clue, 3))), _if_then_else(or_(le(max_col_clue, compare_blocks_rows), or_(True, False)), _if_then_else(or_(False, True), _if_then_else(True, 1, 3), _if_then_else(False, 3, 4)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, 0, max_col_clue), _if_then_else(True, 3, compare_blocks_cols))), _if_then_else(ge(_if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 3, 3)), _if_then_else(True, _if_then_else(False, ones_diff_cols, 4), _if_then_else(True, ones_diff_cols, ones_diff_cols)), _if_then_else(ge(compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_cols, 3), _if_then_else(le(_if_then_else(False, 4, 1), _if_then_else(True, compare_blocks_rows, _if_then_else(False, 0, 3))), _if_then_else(ge(max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 0, _if_then_else(False, 1, 4))), _if_then_else(and_(ge(2, 2), True), _if_then_else(True, _if_then_else(False, 4, max_row_clue), 3), _if_then_else(False, 3, 4)))))), _if_then_else(and_(and_(ge(ones_diff_cols, 3), True), and_(ge(zeros_diff_rows, compare_blocks_rows), ge(0, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 3), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(2, 2), _if_then_else(True, _if_then_else(and_(or_(True, le(zeros_diff_cols, ones_diff_rows)), or_(and_(True, True), le(1, 3))), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, 1, zeros_diff_cols)), _if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(ge(2, max_col_clue), zeros_diff_rows, ones_diff_cols), _if_then_else(ge(zeros_diff_cols, max_col_clue), ones_diff_cols, _if_then_else(False, zeros_diff_rows, 4)))), 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, _if_then_else(ge(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 3), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(2, 2), _if_then_else(True, 1, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols)))), _if_then_else(False, 2, 2)), _if_then_else(and_(False, True), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(le(ones_diff_cols, 4), _if_then_else(False, max_row_clue, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)))))
le(_if_then_else(or_(True, False), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, max_row_clue, 0)), _if_then_else(ge(max_col_clue, 3), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, max_col_clue, max_row_clue)))
ge(_if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 0, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, max_col_clue, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))
or_(ge(_if_then_else(le(0, 4), 3, 4), ones_diff_rows), and_(or_(False, False), and_(le(_if_then_else(le(1, max_row_clue), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, 0)), _if_then_else(or_(False, False), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(False, compare_blocks_rows, compare_blocks_cols))), or_(or_(or_(False, True), le(0, 3)), le(_if_then_else(and_(True, True), 2, ones_diff_rows), _if_then_else(False, 1, ones_diff_cols))))))
ge(_if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, _if_then_else(False, max_col_clue, ones_diff_rows)), _if_then_else(False, _if_then_else(or_(le(ones_diff_cols, 0), le(compare_blocks_cols, max_col_clue)), _if_then_else(le(compare_blocks_cols, ones_diff_rows), _if_then_else(True, max_row_clue, max_col_clue), _if_then_else(False, ones_diff_rows, 2)), _if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(or_(le(_if_then_else(True, 2, 4), _if_then_else(False, compare_blocks_rows, 3)), or_(le(max_col_clue, 4), or_(True, False))), 1, _if_then_else(True, 2, 2)), _if_then_else(True, 4, zeros_diff_rows))), compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(False, max_row_clue, _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(True, compare_blocks_cols, max_col_clue)))
or_(or_(and_(or_(False, False), ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), compare_blocks_rows)), le(2, 2)), or_(or_(False, True), le(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), 4, _if_then_else(True, max_row_clue, _if_then_else(False, zeros_diff_rows, zeros_diff_cols))), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_cols, ones_diff_cols))), compare_blocks_rows)))
VAL TREES:
mul(mul(mul(ones_diff_cols, ones_diff_rows), add(mul(ones_diff_cols, ones_diff_cols), ones_diff_rows)), mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)))
add(add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)))
add(add(mul(add(mul(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols))), add(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_rows)))), add(add(add(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), mul(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols)))
add(add(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)))
mul(mul(add(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols)))
mul(mul(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)))
add(mul(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, ones_diff_cols))))
mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_rows)))
COND TREES:
ge(_if_then_else(le(max_col_clue, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, _if_then_else(True, _if_then_else(False, 4, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, _if_then_else(ge(ones_diff_cols, compare_blocks_cols), compare_blocks_cols, 4))), zeros_diff_cols)), _if_then_else(and_(le(compare_blocks_rows, 2), False), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, _if_then_else(False, ones_diff_rows, max_row_clue)), ones_diff_rows), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), compare_blocks_cols, 4)))
le(_if_then_else(le(_if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(True, ones_diff_cols, 3), _if_then_else(False, 0, 4))), _if_then_else(or_(True, le(zeros_diff_rows, 3)), _if_then_else(or_(False, False), _if_then_else(True, 4, 0), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(or_(False, True), _if_then_else(True, 1, 1), _if_then_else(True, compare_blocks_cols, 0))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, max_row_clue, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(2, ones_diff_rows), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 4)))), max_row_clue), _if_then_else(True, 1, max_col_clue), _if_then_else(or_(True, True), 2, max_row_clue)), _if_then_else(ge(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(False, _if_then_else(False, ones_diff_cols, ones_diff_cols), 4)), 4, _if_then_else(and_(True, False), _if_then_else(False, 2, max_row_clue), _if_then_else(True, compare_blocks_cols, 3))), compare_blocks_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, 4, ones_diff_rows)))
ge(_if_then_else(True, _if_then_else(ge(4, 4), ones_diff_cols, zeros_diff_cols), max_col_clue), _if_then_else(and_(and_(ge(ones_diff_cols, 3), True), and_(ge(zeros_diff_rows, compare_blocks_rows), ge(0, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 3), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(2, 2), _if_then_else(True, 1, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(False, 2, 2)), _if_then_else(and_(False, True), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(le(ones_diff_cols, 4), _if_then_else(False, max_row_clue, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)))))
le(_if_then_else(or_(True, False), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, max_row_clue, 0)), _if_then_else(ge(compare_blocks_cols, 4), _if_then_else(le(ones_diff_cols, max_col_clue), _if_then_else(False, zeros_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), 2, ones_diff_cols)), 3), _if_then_else(True, zeros_diff_cols, _if_then_else(False, _if_then_else(True, compare_blocks_rows, 3), compare_blocks_cols))))
ge(_if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 0, ones_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, 0, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))
or_(ge(_if_then_else(le(0, zeros_diff_rows), 3, 4), _if_then_else(False, 4, 2)), and_(or_(False, False), or_(or_(and_(False, False), ge(max_col_clue, max_col_clue)), ge(_if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, 4)))))
ge(_if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, _if_then_else(True, max_col_clue, ones_diff_rows)), _if_then_else(le(max_col_clue, 4), compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(False, max_row_clue, _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(True, compare_blocks_cols, max_col_clue)))
or_(or_(and_(or_(False, False), False), le(2, 2)), or_(or_(False, True), le(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_row_clue, 1)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, ones_diff_cols))), compare_blocks_rows)))
VAL TREES:
mul(mul(mul(ones_diff_cols, ones_diff_rows), add(mul(ones_diff_cols, ones_diff_cols), ones_diff_rows)), mul(add(ones_diff_cols, compare_blocks_rows), add(add(mul(mul(ones_diff_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)), add(add(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_cols))), mul(add(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_cols))))))
add(add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)))
add(add(mul(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, ones_diff_rows), add(compare_blocks_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)))), add(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_rows)))), add(add(add(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), mul(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols)))
add(add(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)))
mul(mul(add(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols)))
mul(mul(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)))
add(mul(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(mul(add(ones_diff_rows, mul(add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(mul(zeros_diff_cols, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, ones_diff_cols))))
mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_cols, mul(mul(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_rows, compare_blocks_rows)), mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, compare_blocks_rows))))))
COND TREES:
ge(_if_then_else(le(max_col_clue, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, _if_then_else(True, _if_then_else(le(compare_blocks_rows, 2), 4, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 3)), zeros_diff_cols)), _if_then_else(and_(le(compare_blocks_rows, 2), False), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, _if_then_else(False, ones_diff_rows, max_row_clue)), ones_diff_rows), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), compare_blocks_cols, 4)))
le(_if_then_else(le(_if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(True, ones_diff_cols, 3), _if_then_else(False, 0, 4))), _if_then_else(or_(and_(False, False), le(zeros_diff_rows, 3)), _if_then_else(or_(False, False), _if_then_else(True, 4, 0), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(or_(False, True), _if_then_else(True, 1, 1), _if_then_else(True, compare_blocks_cols, 0))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, max_row_clue, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(2, ones_diff_rows), _if_then_else(and_(and_(and_(False, True), or_(False, ge(zeros_diff_cols, _if_then_else(True, ones_diff_cols, compare_blocks_rows)))), le(_if_then_else(le(_if_then_else(False, ones_diff_rows, zeros_diff_rows), compare_blocks_rows), max_row_clue, _if_then_else(False, ones_diff_rows, 2)), _if_then_else(True, _if_then_else(False, 1, compare_blocks_cols), _if_then_else(True, 3, ones_diff_rows)))), 4, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 4)))), max_row_clue), _if_then_else(True, 1, max_col_clue), _if_then_else(le(_if_then_else(False, _if_then_else(True, compare_blocks_cols, zeros_diff_rows), 0), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(or_(False, True), 2, 0), _if_then_else(True, _if_then_else(or_(True, True), zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, max_col_clue))), _if_then_else(ge(compare_blocks_cols, _if_then_else(True, 0, 0)), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, _if_then_else(True, 2, 0), _if_then_else(False, 4, 4))))), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, 4, ones_diff_rows)))
ge(_if_then_else(le(_if_then_else(ge(ones_diff_cols, zeros_diff_rows), _if_then_else(True, max_col_clue, 4), _if_then_else(True, max_col_clue, compare_blocks_cols)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, max_col_clue, 3))), _if_then_else(or_(le(max_col_clue, compare_blocks_rows), or_(True, False)), _if_then_else(or_(False, True), _if_then_else(ge(_if_then_else(and_(le(2, max_row_clue), True), _if_then_else(False, _if_then_else(False, ones_diff_rows, 4), _if_then_else(True, 4, max_col_clue)), _if_then_else(False, max_col_clue, 3)), _if_then_else(and_(False, and_(False, True)), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 0, zeros_diff_rows))), 1, 3), _if_then_else(False, 3, 4)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, 0, max_col_clue), _if_then_else(True, 3, compare_blocks_cols))), _if_then_else(ge(_if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 3, 3)), _if_then_else(True, _if_then_else(False, ones_diff_cols, 4), _if_then_else(True, ones_diff_cols, _if_then_else(and_(le(ones_diff_rows, compare_blocks_cols), and_(True, False)), _if_then_else(or_(or_(and_(False, True), ge(max_row_clue, max_col_clue)), True), _if_then_else(True, _if_then_else(False, 0, ones_diff_rows), max_row_clue), _if_then_else(le(compare_blocks_cols, max_col_clue), 1, ones_diff_cols)), _if_then_else(and_(False, False), _if_then_else(False, 3, 2), _if_then_else(False, max_col_clue, max_row_clue))))), _if_then_else(ge(compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_cols, 3), _if_then_else(le(_if_then_else(False, 4, 1), _if_then_else(True, compare_blocks_rows, _if_then_else(False, 0, 3))), _if_then_else(ge(max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 0, _if_then_else(False, 1, 4))), _if_then_else(le(max_col_clue, compare_blocks_rows), _if_then_else(True, _if_then_else(False, 4, max_row_clue), 3), _if_then_else(False, 3, 4)))))), _if_then_else(and_(and_(ge(ones_diff_cols, 3), True), and_(ge(zeros_diff_rows, compare_blocks_rows), ge(0, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 3), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(2, 2), _if_then_else(True, 1, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(False, 2, 2)), _if_then_else(and_(False, True), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(le(ones_diff_cols, 4), _if_then_else(False, max_row_clue, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)))))
le(_if_then_else(or_(True, False), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, max_row_clue, 0)), _if_then_else(ge(compare_blocks_cols, 4), _if_then_else(False, _if_then_else(False, zeros_diff_rows, compare_blocks_cols), 3), _if_then_else(True, zeros_diff_cols, _if_then_else(False, _if_then_else(True, compare_blocks_rows, 3), compare_blocks_cols))))
ge(_if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 0, ones_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, max_col_clue, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))
or_(ge(_if_then_else(le(0, 4), 3, 4), _if_then_else(False, 4, 2)), and_(or_(False, False), or_(True, True)))
ge(_if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, _if_then_else(False, max_col_clue, ones_diff_rows)), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(False, max_row_clue, _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(le(_if_then_else(or_(ge(4, zeros_diff_cols), or_(True, True)), _if_then_else(le(max_col_clue, max_col_clue), _if_then_else(False, 2, max_col_clue), _if_then_else(False, 0, 0)), _if_then_else(ge(max_col_clue, 0), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, max_row_clue, 2))), _if_then_else(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(False, 1, ones_diff_cols)), _if_then_else(ge(max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, max_col_clue, zeros_diff_rows)), _if_then_else(le(max_row_clue, ones_diff_rows), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, 4)))), _if_then_else(le(_if_then_else(ge(compare_blocks_cols, 3), _if_then_else(False, 3, max_row_clue), _if_then_else(False, compare_blocks_cols, 3)), _if_then_else(ge(max_row_clue, max_col_clue), _if_then_else(True, 4, max_col_clue), _if_then_else(False, 0, zeros_diff_cols))), _if_then_else(and_(or_(False, True), ge(max_col_clue, 1)), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), _if_then_else(False, 0, 0), _if_then_else(False, max_row_clue, max_col_clue)), _if_then_else(le(0, max_col_clue), _if_then_else(False, zeros_diff_cols, 0), _if_then_else(True, ones_diff_cols, 2))), _if_then_else(le(_if_then_else(False, 4, compare_blocks_rows), _if_then_else(True, 2, max_row_clue)), _if_then_else(and_(False, True), _if_then_else(False, zeros_diff_cols, max_col_clue), _if_then_else(False, ones_diff_rows, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(True, 1, 2)))), _if_then_else(and_(and_(or_(False, False), or_(False, False)), le(_if_then_else(False, 3, zeros_diff_rows), _if_then_else(True, 2, 1))), _if_then_else(le(_if_then_else(False, ones_diff_cols, 0), _if_then_else(True, max_row_clue, zeros_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, max_col_clue, 1)), _if_then_else(and_(False, True), _if_then_else(True, ones_diff_cols, 3), _if_then_else(True, 2, max_row_clue))), _if_then_else(and_(and_(False, True), and_(False, False)), _if_then_else(and_(True, False), _if_then_else(False, 1, max_col_clue), _if_then_else(True, 2, compare_blocks_rows)), _if_then_else(and_(True, False), _if_then_else(True, max_row_clue, max_col_clue), _if_then_else(True, compare_blocks_cols, max_col_clue)))))))
or_(or_(and_(or_(False, False), False), le(2, 2)), or_(or_(False, True), le(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(and_(or_(and_(and_(and_(False, False), le(ones_diff_rows, ones_diff_rows)), le(_if_then_else(True, max_col_clue, 2), _if_then_else(True, max_col_clue, 4))), or_(or_(or_(False, False), le(1, max_row_clue)), ge(_if_then_else(False, 0, compare_blocks_rows), _if_then_else(False, 4, zeros_diff_rows)))), or_(and_(le(_if_then_else(False, 2, 0), _if_then_else(True, ones_diff_rows, ones_diff_cols)), and_(and_(False, False), or_(False, True))), or_(or_(or_(False, False), and_(True, False)), ge(_if_then_else(True, ones_diff_rows, 1), _if_then_else(False, 1, zeros_diff_cols))))), 4, ones_diff_rows), _if_then_else(True, max_row_clue, 1)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), 4)), compare_blocks_rows)))
VAL TREES:
mul(mul(mul(ones_diff_cols, ones_diff_rows), add(mul(ones_diff_cols, ones_diff_cols), ones_diff_rows)), mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)))
add(add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)))
add(add(mul(add(mul(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols))), add(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_rows)))), add(add(add(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), mul(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols)))
add(add(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)))
mul(mul(add(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols)))
mul(mul(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)))
add(mul(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, ones_diff_cols))))
mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_rows)))
COND TREES:
ge(_if_then_else(le(max_col_clue, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, _if_then_else(True, max_col_clue, _if_then_else(False, compare_blocks_rows, 3)), zeros_diff_cols)), _if_then_else(and_(le(compare_blocks_rows, 2), False), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, _if_then_else(False, ones_diff_rows, max_row_clue)), ones_diff_rows), _if_then_else(le(_if_then_else(ge(_if_then_else(le(ones_diff_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(False, max_col_clue, max_col_clue)), _if_then_else(ge(ones_diff_rows, 3), _if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, 2, max_row_clue))), _if_then_else(le(_if_then_else(True, ones_diff_cols, 1), _if_then_else(False, 1, zeros_diff_rows)), _if_then_else(ge(0, 0), _if_then_else(False, 3, ones_diff_cols), _if_then_else(True, 1, max_col_clue)), _if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, 0, ones_diff_rows), _if_then_else(False, 0, max_row_clue))), _if_then_else(le(_if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, ones_diff_cols)), _if_then_else(ge(compare_blocks_cols, ones_diff_cols), _if_then_else(True, 1, 1), _if_then_else(True, max_row_clue, zeros_diff_rows)), _if_then_else(le(compare_blocks_rows, max_col_clue), _if_then_else(False, 2, 1), _if_then_else(True, 2, ones_diff_rows)))), _if_then_else(le(_if_then_else(or_(False, False), _if_then_else(False, 1, max_row_clue), _if_then_else(True, ones_diff_cols, 2)), _if_then_else(or_(False, True), _if_then_else(False, zeros_diff_rows, zeros_diff_cols), _if_then_else(False, 0, compare_blocks_rows))), _if_then_else(and_(and_(False, True), and_(False, False)), _if_then_else(le(2, compare_blocks_cols), _if_then_else(False, 2, 4), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(ge(4, max_row_clue), _if_then_else(False, 3, compare_blocks_rows), _if_then_else(True, 4, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, 3, 3), _if_then_else(False, 1, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, 1, zeros_diff_cols), _if_then_else(False, ones_diff_rows, 2)), _if_then_else(ge(max_row_clue, compare_blocks_cols), _if_then_else(True, max_col_clue, 0), _if_then_else(True, ones_diff_rows, 4))))), compare_blocks_cols, 4)))
le(_if_then_else(le(_if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(True, ones_diff_cols, 3), _if_then_else(False, 0, 4))), _if_then_else(or_(and_(False, le(_if_then_else(False, 0, 4), _if_then_else(False, _if_then_else(False, ones_diff_cols, ones_diff_cols), 4))), le(zeros_diff_rows, 3)), _if_then_else(or_(False, False), _if_then_else(True, 4, 0), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(or_(False, True), _if_then_else(True, 1, 1), _if_then_else(True, compare_blocks_cols, 0))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, max_row_clue, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(2, ones_diff_rows), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 4)))), max_row_clue), _if_then_else(True, 1, max_col_clue), _if_then_else(le(_if_then_else(False, _if_then_else(True, compare_blocks_cols, zeros_diff_rows), 0), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(or_(False, True), 2, 0), _if_then_else(True, _if_then_else(or_(True, True), zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, max_col_clue))), _if_then_else(ge(compare_blocks_cols, _if_then_else(True, 0, 0)), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, _if_then_else(True, 2, 0), _if_then_else(False, 4, 4))))), _if_then_else(ge(compare_blocks_rows, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, 4, ones_diff_rows)))
ge(_if_then_else(le(_if_then_else(ge(ones_diff_cols, zeros_diff_rows), _if_then_else(True, max_col_clue, 4), _if_then_else(True, max_col_clue, compare_blocks_cols)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, max_col_clue, 3))), _if_then_else(or_(le(max_col_clue, compare_blocks_rows), or_(True, False)), _if_then_else(or_(False, True), _if_then_else(ge(_if_then_else(and_(le(2, max_row_clue), True), _if_then_else(False, _if_then_else(False, ones_diff_rows, 4), _if_then_else(True, 4, max_col_clue)), _if_then_else(False, max_col_clue, 3)), _if_then_else(and_(False, and_(False, True)), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 0, zeros_diff_rows))), 1, 3), _if_then_else(False, 3, 4)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, 0, max_col_clue), _if_then_else(True, 3, compare_blocks_cols))), _if_then_else(ge(_if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 3, 3)), 2, _if_then_else(ge(compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_cols, 3), _if_then_else(le(_if_then_else(False, 4, 1), _if_then_else(True, compare_blocks_rows, _if_then_else(False, 0, 3))), _if_then_else(ge(max_col_clue, compare_blocks_rows), _if_then_else(le(_if_then_else(or_(False, True), _if_then_else(True, zeros_diff_cols, max_col_clue), _if_then_else(False, 1, max_col_clue)), _if_then_else(and_(True, False), _if_then_else(False, 2, 3), _if_then_else(True, compare_blocks_cols, zeros_diff_rows))), ones_diff_cols, 4), _if_then_else(False, 0, _if_then_else(False, 1, 4))), _if_then_else(le(max_col_clue, compare_blocks_rows), _if_then_else(True, _if_then_else(False, 4, max_row_clue), 3), _if_then_else(False, 3, 4)))))), _if_then_else(and_(and_(and_(and_(ge(_if_then_else(True, 2, 1), _if_then_else(True, ones_diff_rows, 2)), or_(ge(zeros_diff_rows, 1), le(compare_blocks_rows, zeros_diff_cols))), le(_if_then_else(le(compare_blocks_rows, 3), _if_then_else(False, ones_diff_rows, max_col_clue), _if_then_else(True, 4, compare_blocks_cols)), _if_then_else(and_(False, True), _if_then_else(True, 0, compare_blocks_rows), _if_then_else(False, 4, 0)))), True), and_(ge(zeros_diff_rows, compare_blocks_rows), le(ones_diff_cols, 4))), _if_then_else(ge(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 3), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(2, 2), _if_then_else(True, 1, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(False, 2, 2)), _if_then_else(and_(False, True), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(le(ones_diff_cols, 4), _if_then_else(False, max_row_clue, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)))))
le(_if_then_else(or_(True, False), _if_then_else(or_(and_(and_(ge(max_col_clue, max_row_clue), le(compare_blocks_cols, compare_blocks_rows)), ge(_if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 3, max_row_clue))), and_(or_(True, True), and_(le(4, ones_diff_rows), or_(False, True)))), 2, compare_blocks_cols), _if_then_else(False, max_row_clue, 0)), 3)
ge(_if_then_else(or_(False, False), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 0, ones_diff_cols)), _if_then_else(or_(False, True), _if_then_else(or_(and_(ge(_if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), and_(or_(True, False), ge(max_col_clue, 0))), le(_if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(False, max_row_clue, 3), _if_then_else(True, 1, max_row_clue)))), _if_then_else(or_(and_(le(ones_diff_rows, zeros_diff_rows), or_(True, False)), and_(or_(True, True), and_(le(_if_then_else(and_(False, False), _if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, max_col_clue, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(True, 1, max_row_clue))), False))), _if_then_else(le(_if_then_else(False, zeros_diff_rows, 3), _if_then_else(False, 0, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(False, max_row_clue, compare_blocks_rows), _if_then_else(True, 0, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(False, max_row_clue, 2), _if_then_else(True, max_col_clue, compare_blocks_rows))), _if_then_else(and_(ge(2, compare_blocks_rows), ge(zeros_diff_rows, max_row_clue)), _if_then_else(or_(True, False), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(or_(True, False), zeros_diff_rows, _if_then_else(True, 3, compare_blocks_cols)))), _if_then_else(and_(or_(ge(compare_blocks_rows, 3), or_(True, False)), and_(and_(True, True), or_(True, True))), _if_then_else(le(_if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(le(zeros_diff_cols, 4), _if_then_else(True, max_col_clue, 0), _if_then_else(False, zeros_diff_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_rows, max_col_clue), _if_then_else(False, max_row_clue, max_row_clue))), _if_then_else(ge(_if_then_else(True, ones_diff_rows, 2), _if_then_else(False, 3, zeros_diff_rows)), _if_then_else(or_(True, False), _if_then_else(True, 1, 1), _if_then_else(True, zeros_diff_cols, 3)), _if_then_else(ge(ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, 2))))), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))
or_(ge(_if_then_else(le(0, 4), 3, 2), _if_then_else(or_(ge(_if_then_else(True, ones_diff_rows, 2), _if_then_else(True, ones_diff_rows, ones_diff_rows)), or_(le(compare_blocks_cols, zeros_diff_rows), or_(True, False))), _if_then_else(le(_if_then_else(True, max_row_clue, 2), _if_then_else(False, ones_diff_cols, 3)), _if_then_else(and_(True, False), _if_then_else(False, 1, zeros_diff_cols), _if_then_else(False, 4, 0)), _if_then_else(ge(4, zeros_diff_rows), max_col_clue, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, 0, 2)), _if_then_else(or_(False, True), _if_then_else(False, zeros_diff_cols, 4), _if_then_else(False, 0, ones_diff_cols)), _if_then_else(ge(ones_diff_cols, max_row_clue), _if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(False, 0, zeros_diff_cols))))), and_(or_(False, False), or_(True, True)))
ge(_if_then_else(and_(or_(True, True), ge(max_row_clue, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, 3, 2), _if_then_else(False, 2, 0)), _if_then_else(and_(False, False), _if_then_else(False, 3, 4), _if_then_else(False, max_col_clue, compare_blocks_cols))), _if_then_else(or_(False, True), _if_then_else(False, max_row_clue, _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(True, compare_blocks_cols, max_col_clue)))
or_(or_(and_(or_(False, False), False), le(2, 2)), or_(or_(False, True), le(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(and_(or_(and_(and_(and_(False, False), le(ones_diff_rows, ones_diff_rows)), le(_if_then_else(True, max_col_clue, 2), _if_then_else(True, max_col_clue, 4))), or_(or_(or_(False, False), le(1, max_row_clue)), ge(_if_then_else(False, 0, compare_blocks_rows), _if_then_else(False, 4, zeros_diff_rows)))), or_(or_(False, False), or_(or_(or_(False, False), and_(True, False)), ge(_if_then_else(True, ones_diff_rows, 1), _if_then_else(False, 1, zeros_diff_cols))))), 4, ones_diff_rows), _if_then_else(True, max_row_clue, 1)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), 4)), compare_blocks_rows)))
VAL TREES:
mul(mul(mul(ones_diff_cols, ones_diff_rows), add(mul(ones_diff_cols, ones_diff_cols), ones_diff_rows)), mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)))
add(add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)))
add(add(mul(add(mul(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols))), add(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_rows)))), add(add(add(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), mul(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols)))
add(add(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)))
mul(mul(add(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols)))
mul(mul(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)))
add(mul(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, ones_diff_cols))))
mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_rows)))
COND TREES:
ge(_if_then_else(le(max_col_clue, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, _if_then_else(True, _if_then_else(False, 4, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 3)), zeros_diff_cols)), _if_then_else(and_(le(compare_blocks_rows, 2), False), _if_then_else(and_(False, or_(ge(_if_then_else(True, max_row_clue, 2), _if_then_else(True, compare_blocks_cols, _if_then_else(False, zeros_diff_rows, compare_blocks_cols))), or_(or_(or_(True, True), or_(False, True)), le(_if_then_else(False, zeros_diff_rows, _if_then_else(True, max_row_clue, 0)), 1)))), _if_then_else(True, zeros_diff_rows, _if_then_else(False, ones_diff_rows, max_row_clue)), ones_diff_rows), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), compare_blocks_cols, 4)))
le(_if_then_else(le(_if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(True, ones_diff_cols, 3), _if_then_else(False, 0, 4))), _if_then_else(or_(False, le(zeros_diff_rows, 3)), _if_then_else(or_(False, False), _if_then_else(True, 4, 0), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(or_(False, True), _if_then_else(True, 1, 1), _if_then_else(True, compare_blocks_cols, 0))), _if_then_else(le(_if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(True, max_row_clue, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(2, ones_diff_rows), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 4)))), max_row_clue), _if_then_else(True, 1, max_col_clue), _if_then_else(or_(True, True), 2, max_row_clue)), _if_then_else(ge(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(False, _if_then_else(False, ones_diff_cols, ones_diff_cols), 4)), _if_then_else(ge(3, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(or_(ge(ones_diff_cols, zeros_diff_rows), True), ones_diff_cols, _if_then_else(and_(and_(True, True), or_(True, True)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_cols, 0), _if_then_else(True, 4, max_col_clue)), _if_then_else(le(3, _if_then_else(True, ones_diff_cols, 3)), _if_then_else(True, _if_then_else(True, 3, max_col_clue), max_row_clue), _if_then_else(False, ones_diff_rows, _if_then_else(False, zeros_diff_cols, max_col_clue)))))), _if_then_else(and_(True, False), _if_then_else(False, 2, max_row_clue), _if_then_else(True, compare_blocks_cols, 3))), compare_blocks_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, 4, ones_diff_rows)))
ge(_if_then_else(True, _if_then_else(ge(4, 4), ones_diff_cols, zeros_diff_cols), max_col_clue), _if_then_else(and_(and_(ge(ones_diff_cols, 3), True), and_(ge(zeros_diff_rows, compare_blocks_rows), ge(0, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 3), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(2, 2), _if_then_else(True, 1, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(False, 2, 2)), _if_then_else(and_(False, True), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(ge(0, ones_diff_cols), _if_then_else(False, max_row_clue, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)))))
le(_if_then_else(or_(True, False), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, max_row_clue, 0)), _if_then_else(ge(compare_blocks_cols, 4), _if_then_else(le(ones_diff_cols, max_col_clue), _if_then_else(False, zeros_diff_rows, _if_then_else(le(_if_then_else(True, max_col_clue, 4), max_col_clue), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, 2, 3)))), 3), _if_then_else(True, zeros_diff_cols, _if_then_else(True, compare_blocks_rows, 3))))
ge(_if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 0, ones_diff_cols)), _if_then_else(ge(_if_then_else(True, 0, _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(False, 0, max_col_clue)), _if_then_else(le(_if_then_else(False, _if_then_else(True, 4, 1), 4), 4), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(True, 2, _if_then_else(True, 0, compare_blocks_rows))), _if_then_else(le(1, 3), _if_then_else(True, _if_then_else(False, compare_blocks_rows, max_col_clue), zeros_diff_cols), _if_then_else(True, _if_then_else(False, 4, ones_diff_cols), 3))))
or_(True, and_(or_(False, False), or_(or_(and_(False, False), ge(_if_then_else(True, compare_blocks_cols, 4), max_col_clue)), ge(_if_then_else(and_(True, ge(_if_then_else(or_(True, True), _if_then_else(False, zeros_diff_rows, zeros_diff_cols), _if_then_else(True, max_row_clue, 4)), _if_then_else(ge(2, 1), _if_then_else(True, zeros_diff_rows, 1), _if_then_else(False, max_col_clue, 3)))), ones_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, 4)))))
ge(_if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, _if_then_else(True, max_col_clue, ones_diff_rows)), _if_then_else(le(max_col_clue, 4), compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(ge(_if_then_else(False, 3, ones_diff_rows), _if_then_else(False, 3, compare_blocks_rows)), _if_then_else(ge(2, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, _if_then_else(False, max_col_clue, ones_diff_rows)), _if_then_else(True, compare_blocks_rows, compare_blocks_cols))), _if_then_else(True, compare_blocks_cols, max_col_clue)), _if_then_else(le(ones_diff_cols, 4), _if_then_else(False, compare_blocks_rows, 4), _if_then_else(True, 3, 0))), _if_then_else(True, compare_blocks_cols, max_col_clue)))
or_(or_(and_(and_(le(_if_then_else(False, 2, 0), _if_then_else(True, ones_diff_rows, ones_diff_cols)), and_(and_(False, False), or_(False, True))), False), le(2, compare_blocks_rows)), or_(or_(False, True), le(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_row_clue, 1)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, ones_diff_cols))), compare_blocks_rows)))
VAL TREES:
mul(mul(mul(ones_diff_cols, ones_diff_rows), add(mul(ones_diff_cols, ones_diff_cols), ones_diff_rows)), mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)))
add(add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)))
add(add(mul(add(mul(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols))), add(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_rows)))), add(add(add(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), mul(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols)))
add(add(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)))
mul(mul(add(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols)))
mul(mul(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)))
add(mul(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, ones_diff_cols))))
mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_rows)))
COND TREES:
ge(_if_then_else(le(max_col_clue, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, _if_then_else(True, _if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 3)), zeros_diff_cols)), _if_then_else(and_(le(2, 2), False), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, _if_then_else(ge(4, ones_diff_cols), ones_diff_rows, max_row_clue)), ones_diff_rows), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), compare_blocks_cols, 4)))
le(_if_then_else(le(_if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(True, ones_diff_cols, 3), _if_then_else(False, 0, 4))), _if_then_else(or_(True, le(zeros_diff_rows, 3)), _if_then_else(or_(False, False), _if_then_else(True, 4, 0), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(or_(False, True), _if_then_else(True, 1, 1), _if_then_else(True, compare_blocks_cols, 0))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, max_row_clue, compare_blocks_cols)), _if_then_else(or_(True, or_(True, True)), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(2, ones_diff_rows), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, max_row_clue)))), max_row_clue), _if_then_else(True, 1, max_col_clue), _if_then_else(or_(True, True), 2, max_row_clue)), _if_then_else(ge(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(False, _if_then_else(False, ones_diff_cols, ones_diff_cols), 4)), _if_then_else(ge(3, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(or_(ge(ones_diff_cols, zeros_diff_rows), True), ones_diff_cols, 1)), _if_then_else(and_(True, False), _if_then_else(False, 2, max_row_clue), _if_then_else(True, compare_blocks_cols, 3))), compare_blocks_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, 4, ones_diff_rows)))
ge(_if_then_else(True, _if_then_else(ge(4, 4), ones_diff_cols, zeros_diff_cols), max_col_clue), _if_then_else(and_(and_(ge(ones_diff_cols, 3), True), and_(ge(zeros_diff_rows, compare_blocks_rows), ge(0, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 3), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(2, 2), _if_then_else(True, 1, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(False, 2, 2)), _if_then_else(and_(False, True), _if_then_else(True, 1, ones_diff_cols), _if_then_else(le(ones_diff_cols, 4), zeros_diff_rows, 1)), _if_then_else(le(ones_diff_cols, 4), _if_then_else(False, max_row_clue, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)))))
le(_if_then_else(or_(True, False), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, max_row_clue, _if_then_else(False, _if_then_else(False, _if_then_else(True, compare_blocks_rows, 3), compare_blocks_cols), zeros_diff_cols))), _if_then_else(ge(compare_blocks_cols, 4), _if_then_else(le(ones_diff_cols, max_col_clue), _if_then_else(False, zeros_diff_rows, compare_blocks_cols), 3), _if_then_else(True, zeros_diff_cols, _if_then_else(False, _if_then_else(True, compare_blocks_rows, 3), zeros_diff_cols))))
ge(_if_then_else(or_(True, False), 1, _if_then_else(True, 0, ones_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 0), 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))
or_(ge(_if_then_else(le(0, zeros_diff_rows), 3, 4), _if_then_else(True, 4, 2)), and_(or_(and_(and_(ge(_if_then_else(True, 2, zeros_diff_cols), _if_then_else(False, ones_diff_rows, 4)), ge(_if_then_else(False, 1, ones_diff_rows), _if_then_else(True, max_row_clue, 0))), and_(or_(ge(zeros_diff_rows, compare_blocks_rows), ge(max_col_clue, compare_blocks_cols)), ge(_if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, max_row_clue)))), False), or_(or_(and_(False, le(0, zeros_diff_rows)), ge(max_col_clue, max_col_clue)), ge(_if_then_else(and_(True, False), ones_diff_cols, compare_blocks_rows), _if_then_else(and_(False, False), zeros_diff_rows, 4)))))
ge(max_col_clue, _if_then_else(or_(False, True), _if_then_else(le(_if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, 4, compare_blocks_rows)), _if_then_else(ge(max_row_clue, zeros_diff_rows), _if_then_else(True, 3, max_row_clue), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(le(max_col_clue, 1), _if_then_else(False, ones_diff_rows, max_col_clue), _if_then_else(True, zeros_diff_cols, 3))), _if_then_else(True, compare_blocks_cols, max_col_clue)))
or_(or_(and_(or_(False, False), False), le(2, 2)), or_(or_(False, True), le(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), _if_then_else(False, _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_row_clue, 1)), _if_then_else(or_(True, False), zeros_diff_rows, _if_then_else(True, compare_blocks_cols, ones_diff_cols))), compare_blocks_rows)))
VAL TREES:
mul(mul(mul(ones_diff_cols, ones_diff_rows), add(mul(ones_diff_cols, ones_diff_cols), ones_diff_rows)), mul(mul(add(add(ones_diff_cols, zeros_diff_rows), mul(compare_blocks_rows, ones_diff_rows)), mul(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows))), add(ones_diff_rows, compare_blocks_cols)))
add(add(mul(ones_diff_cols, compare_blocks_cols), add(add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_rows)), mul(mul(compare_blocks_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)))), add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)))
add(add(mul(add(mul(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols))), add(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_rows)))), add(add(add(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), mul(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(mul(mul(add(mul(add(add(ones_diff_cols, ones_diff_rows), zeros_diff_rows), mul(ones_diff_cols, mul(compare_blocks_cols, compare_blocks_rows))), add(compare_blocks_cols, ones_diff_rows)), mul(add(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_rows, add(compare_blocks_rows, ones_diff_cols)), compare_blocks_cols))), zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, mul(add(mul(zeros_diff_cols, ones_diff_cols), add(compare_blocks_cols, compare_blocks_cols)), mul(add(zeros_diff_rows, ones_diff_rows), add(compare_blocks_cols, zeros_diff_rows))))), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols)))
add(add(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, mul(mul(mul(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(add(compare_blocks_rows, zeros_diff_cols), ones_diff_cols)))), add(ones_diff_cols, ones_diff_cols)))
mul(mul(add(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols)))
add(add(mul(compare_blocks_rows, ones_diff_cols), add(ones_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)))
add(mul(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, ones_diff_cols))))
mul(mul(add(mul(mul(add(add(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols))), mul(add(add(ones_diff_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_cols, ones_diff_rows)))), compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_rows)))
COND TREES:
ge(_if_then_else(le(max_col_clue, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, _if_then_else(True, _if_then_else(False, 4, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 3)), zeros_diff_cols)), _if_then_else(and_(le(compare_blocks_rows, 2), False), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, _if_then_else(ge(4, ones_diff_cols), ones_diff_rows, max_row_clue)), ones_diff_rows), _if_then_else(ge(4, compare_blocks_cols), compare_blocks_cols, 4)))
le(_if_then_else(le(_if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(True, ones_diff_cols, 3), _if_then_else(False, 0, 4))), _if_then_else(or_(True, le(zeros_diff_rows, 3)), _if_then_else(or_(False, False), _if_then_else(True, 4, 0), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(or_(False, True), _if_then_else(True, 1, 1), _if_then_else(True, compare_blocks_cols, 0))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, max_row_clue, compare_blocks_cols)), _if_then_else(True, _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(2, ones_diff_rows), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, max_row_clue)))), max_row_clue), _if_then_else(True, 1, max_col_clue), _if_then_else(or_(True, True), 2, max_row_clue)), _if_then_else(ge(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(False, _if_then_else(False, ones_diff_cols, ones_diff_cols), 4)), _if_then_else(ge(3, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(or_(ge(ones_diff_cols, zeros_diff_rows), True), ones_diff_cols, 1)), _if_then_else(and_(True, False), _if_then_else(False, 2, max_row_clue), _if_then_else(True, compare_blocks_cols, 3))), compare_blocks_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, 4, ones_diff_rows)))
ge(_if_then_else(True, _if_then_else(ge(4, 4), ones_diff_cols, zeros_diff_cols), max_col_clue), _if_then_else(and_(and_(ge(ones_diff_cols, 3), True), and_(ge(zeros_diff_rows, compare_blocks_rows), ge(0, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 3), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(2, 2), _if_then_else(True, 1, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(False, 2, 2)), _if_then_else(and_(False, True), _if_then_else(True, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 1)), _if_then_else(le(ones_diff_cols, 4), _if_then_else(False, max_row_clue, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)))))
le(_if_then_else(or_(True, False), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, max_row_clue, 0)), _if_then_else(ge(compare_blocks_cols, 4), _if_then_else(le(ones_diff_cols, max_col_clue), _if_then_else(False, zeros_diff_rows, _if_then_else(le(ones_diff_cols, max_col_clue), 2, ones_diff_cols)), 3), _if_then_else(True, zeros_diff_cols, 0)))
ge(_if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 0, ones_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, 0, _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))
or_(ge(_if_then_else(le(0, zeros_diff_rows), 3, 4), _if_then_else(True, 4, 2)), and_(or_(False, False), or_(or_(and_(False, False), ge(max_col_clue, max_col_clue)), ge(_if_then_else(and_(ge(_if_then_else(False, 3, 4), _if_then_else(False, 4, 2)), False), ones_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, 4)))))
ge(_if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, _if_then_else(True, max_col_clue, ones_diff_rows)), _if_then_else(le(max_col_clue, 4), compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(False, max_row_clue, _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(True, compare_blocks_cols, max_col_clue)))
or_(or_(and_(or_(False, False), False), le(2, 2)), or_(or_(False, True), le(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), _if_then_else(False, _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_row_clue, 1)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, ones_diff_cols))), 2)))
VAL TREES:
mul(mul(mul(ones_diff_cols, ones_diff_rows), add(mul(ones_diff_cols, ones_diff_cols), ones_diff_rows)), mul(mul(add(add(ones_diff_cols, zeros_diff_rows), mul(compare_blocks_rows, ones_diff_rows)), mul(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows))), add(ones_diff_rows, compare_blocks_cols)))
add(add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)))
add(add(mul(add(mul(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols))), add(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(mul(mul(add(mul(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols)), add(mul(zeros_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_rows)))), mul(add(add(mul(ones_diff_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_rows)), add(mul(zeros_diff_rows, zeros_diff_rows), add(ones_diff_rows, zeros_diff_cols))), mul(mul(mul(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_rows, zeros_diff_cols)))))))), add(add(add(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), mul(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(mul(mul(add(mul(add(add(ones_diff_cols, ones_diff_rows), zeros_diff_rows), mul(ones_diff_cols, mul(compare_blocks_cols, compare_blocks_rows))), add(compare_blocks_cols, ones_diff_rows)), mul(add(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_rows, add(compare_blocks_rows, ones_diff_cols)), compare_blocks_cols))), zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, mul(add(mul(zeros_diff_cols, ones_diff_cols), add(compare_blocks_cols, compare_blocks_cols)), mul(add(zeros_diff_rows, ones_diff_rows), add(compare_blocks_cols, zeros_diff_rows))))), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols)))
add(add(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)))
mul(mul(add(ones_diff_rows, mul(mul(mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols)), add(add(zeros_diff_rows, zeros_diff_rows), add(compare_blocks_rows, ones_diff_rows))), add(add(mul(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)))), add(add(mul(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)), add(mul(ones_diff_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows))), mul(add(add(ones_diff_rows, ones_diff_cols), mul(compare_blocks_rows, compare_blocks_cols)), add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_cols)))))), add(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols)))
mul(mul(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)))
add(mul(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(add(mul(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_rows)), mul(add(zeros_diff_cols, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows))))
mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), mul(mul(add(add(mul(add(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, ones_diff_rows)), add(add(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_cols, compare_blocks_rows))), add(add(mul(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_cols)))), mul(add(add(mul(ones_diff_rows, ones_diff_rows), add(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_cols, zeros_diff_rows), add(ones_diff_rows, zeros_diff_rows))), add(add(mul(zeros_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_rows)), add(add(compare_blocks_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows))))), ones_diff_rows), add(zeros_diff_cols, compare_blocks_rows)))
COND TREES:
ge(_if_then_else(le(max_col_clue, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, _if_then_else(True, _if_then_else(False, 4, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 3)), zeros_diff_cols)), _if_then_else(and_(le(compare_blocks_rows, 2), False), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, _if_then_else(False, ones_diff_rows, max_row_clue)), ones_diff_rows), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), compare_blocks_cols, 4)))
le(_if_then_else(le(_if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(True, ones_diff_cols, 3), _if_then_else(False, 0, 4))), _if_then_else(or_(True, le(zeros_diff_rows, 3)), _if_then_else(or_(False, False), _if_then_else(True, 4, 0), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(or_(False, True), _if_then_else(True, 1, 1), _if_then_else(True, compare_blocks_cols, 0))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, max_row_clue, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(2, ones_diff_rows), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 4)))), max_row_clue), _if_then_else(True, 1, max_col_clue), _if_then_else(or_(True, True), 2, max_row_clue)), _if_then_else(ge(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(False, _if_then_else(False, ones_diff_cols, ones_diff_cols), 4)), _if_then_else(ge(3, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(or_(ge(ones_diff_cols, zeros_diff_rows), True), ones_diff_cols, 1)), _if_then_else(and_(True, False), _if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(True, ones_diff_cols, 3), _if_then_else(False, 0, 4))), 2, max_row_clue), _if_then_else(True, compare_blocks_cols, 3))), compare_blocks_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, 4, ones_diff_rows)))
ge(_if_then_else(True, _if_then_else(ge(4, 4), ones_diff_cols, zeros_diff_cols), max_col_clue), _if_then_else(and_(and_(ge(ones_diff_cols, 3), True), and_(ge(zeros_diff_rows, compare_blocks_rows), ge(0, ones_diff_cols))), 3, _if_then_else(ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(False, 2, 2)), _if_then_else(and_(False, True), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(le(ones_diff_cols, 4), _if_then_else(False, max_row_clue, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)))))
le(_if_then_else(or_(True, False), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, max_row_clue, 0)), _if_then_else(ge(2, 4), _if_then_else(le(ones_diff_cols, max_col_clue), _if_then_else(False, zeros_diff_rows, _if_then_else(le(ones_diff_cols, max_col_clue), 2, ones_diff_cols)), 3), _if_then_else(True, zeros_diff_cols, _if_then_else(False, _if_then_else(True, compare_blocks_rows, 3), compare_blocks_cols))))
ge(_if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 0, ones_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, 0, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))
or_(ge(_if_then_else(le(0, zeros_diff_rows), 3, 4), _if_then_else(False, 4, 2)), and_(or_(False, False), or_(or_(True, ge(max_col_clue, max_col_clue)), ge(_if_then_else(and_(True, False), ones_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, 4)))))
ge(_if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, _if_then_else(True, max_col_clue, max_col_clue)), _if_then_else(le(max_col_clue, 4), compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(False, max_row_clue, _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(True, compare_blocks_cols, max_col_clue)))
or_(or_(and_(or_(False, False), False), le(2, 2)), or_(or_(False, True), le(_if_then_else(le(zeros_diff_cols, _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_row_clue, 1)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, ones_diff_cols))), compare_blocks_rows)))
VAL TREES:
mul(mul(mul(ones_diff_cols, ones_diff_rows), add(mul(ones_diff_cols, ones_diff_cols), ones_diff_rows)), mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)))
add(add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)))
add(add(mul(add(mul(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols))), add(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_rows)))), add(add(add(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), mul(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols)))
add(add(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)))
mul(mul(add(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols)))
mul(mul(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)))
add(mul(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, ones_diff_cols))))
mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_rows)))
COND TREES:
ge(_if_then_else(le(max_col_clue, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, _if_then_else(True, _if_then_else(False, 4, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, _if_then_else(ge(ones_diff_cols, compare_blocks_cols), compare_blocks_cols, 4))), zeros_diff_cols)), _if_then_else(and_(le(compare_blocks_rows, 2), False), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, _if_then_else(False, ones_diff_rows, max_row_clue)), ones_diff_rows), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), compare_blocks_cols, 4)))
le(_if_then_else(le(_if_then_else(False, _if_then_else(or_(True, le(zeros_diff_rows, 3)), _if_then_else(or_(False, False), _if_then_else(True, 4, 0), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(or_(False, True), _if_then_else(True, 1, 1), _if_then_else(True, compare_blocks_cols, 0))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, max_row_clue, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(2, ones_diff_rows), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 4)))), max_row_clue), _if_then_else(True, 1, max_col_clue), _if_then_else(or_(True, True), 2, max_row_clue)), _if_then_else(ge(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(False, _if_then_else(False, ones_diff_cols, ones_diff_cols), 4)), 4, _if_then_else(and_(True, False), _if_then_else(False, 2, max_row_clue), _if_then_else(True, compare_blocks_cols, 3))), compare_blocks_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, 4, ones_diff_rows)))
ge(_if_then_else(True, _if_then_else(ge(4, 4), ones_diff_cols, zeros_diff_cols), max_col_clue), _if_then_else(and_(and_(ge(ones_diff_cols, _if_then_else(ge(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 3), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(2, 2), _if_then_else(True, 1, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols)))), True), and_(ge(zeros_diff_rows, compare_blocks_rows), ge(0, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 3), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(2, 2), _if_then_else(True, 1, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(False, 2, 2)), _if_then_else(and_(False, True), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(le(ones_diff_cols, 4), _if_then_else(False, max_row_clue, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)))))
le(_if_then_else(or_(True, False), _if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(False, max_row_clue, 0)), _if_then_else(ge(compare_blocks_cols, 4), _if_then_else(le(ones_diff_cols, max_col_clue), _if_then_else(False, zeros_diff_rows, _if_then_else(le(ones_diff_cols, compare_blocks_cols), 2, ones_diff_cols)), 3), _if_then_else(True, zeros_diff_cols, _if_then_else(False, _if_then_else(True, compare_blocks_rows, 3), compare_blocks_cols))))
ge(_if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 0, ones_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, 0, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))
or_(ge(_if_then_else(le(0, zeros_diff_rows), 3, 4), _if_then_else(False, 4, 2)), and_(or_(False, False), or_(or_(and_(False, False), ge(max_col_clue, max_col_clue)), ge(_if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(and_(False, False), zeros_diff_rows, 4)))))
ge(_if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, _if_then_else(True, max_col_clue, ones_diff_rows)), _if_then_else(le(ones_diff_rows, 4), compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(False, max_row_clue, _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(True, compare_blocks_cols, max_col_clue)))
or_(or_(and_(or_(False, False), False), le(2, 2)), or_(or_(False, True), le(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(True, _if_then_else(False, 0, 4), compare_blocks_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, max_row_clue, 1)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, ones_diff_cols))), compare_blocks_rows)))
VAL TREES:
mul(mul(mul(ones_diff_cols, ones_diff_rows), add(mul(ones_diff_cols, ones_diff_cols), ones_diff_rows)), mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)))
add(add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)))
add(add(mul(add(mul(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols))), add(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_rows)))), add(add(add(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), mul(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols)))
add(add(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)))
mul(mul(add(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols)))
mul(mul(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)))
add(mul(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, ones_diff_cols))))
mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_rows)))
COND TREES:
ge(_if_then_else(le(max_col_clue, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, _if_then_else(True, _if_then_else(False, 4, zeros_diff_cols), _if_then_else(ge(1, max_row_clue), compare_blocks_rows, 3)), zeros_diff_cols)), _if_then_else(and_(le(compare_blocks_rows, 2), False), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, _if_then_else(False, ones_diff_rows, max_row_clue)), ones_diff_rows), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), compare_blocks_cols, 4)))
le(_if_then_else(le(_if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(True, ones_diff_cols, 3), _if_then_else(False, 0, 4))), _if_then_else(or_(and_(False, False), le(zeros_diff_rows, 3)), _if_then_else(or_(False, False), _if_then_else(True, 4, _if_then_else(False, 3, zeros_diff_rows)), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(or_(False, True), _if_then_else(True, 1, 1), _if_then_else(True, compare_blocks_cols, 0))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, max_row_clue, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(2, ones_diff_rows), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 4)))), max_row_clue), _if_then_else(True, 1, max_col_clue), _if_then_else(or_(True, True), 2, max_row_clue)), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, _if_then_else(ge(_if_then_else(and_(True, False), _if_then_else(False, ones_diff_rows, 2), _if_then_else(False, max_col_clue, 0)), _if_then_else(or_(False, False), _if_then_else(True, max_col_clue, 2), _if_then_else(True, max_col_clue, 3))), _if_then_else(or_(or_(True, True), le(ones_diff_rows, 0)), _if_then_else(or_(True, True), _if_then_else(True, 4, max_row_clue), _if_then_else(False, max_col_clue, 0)), _if_then_else(and_(True, False), _if_then_else(False, max_col_clue, max_row_clue), _if_then_else(False, 0, 3))), _if_then_else(False, _if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(False, ones_diff_rows, 4), _if_then_else(True, compare_blocks_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_rows, 2), _if_then_else(False, zeros_diff_rows, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, 1))))), _if_then_else(True, 4, ones_diff_rows)))
ge(_if_then_else(le(_if_then_else(ge(ones_diff_cols, zeros_diff_rows), _if_then_else(True, max_col_clue, 4), _if_then_else(True, max_col_clue, compare_blocks_cols)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, _if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, compare_blocks_rows, 1))), _if_then_else(and_(and_(ge(ones_diff_cols, 3), True), and_(ge(zeros_diff_rows, compare_blocks_rows), ge(0, ones_diff_cols))), max_col_clue, 3))), _if_then_else(or_(le(max_col_clue, compare_blocks_rows), or_(True, False)), _if_then_else(or_(False, True), _if_then_else(True, 1, 3), _if_then_else(False, 3, 4)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, 0, max_col_clue), _if_then_else(True, 3, compare_blocks_cols))), _if_then_else(ge(_if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 3, 3)), _if_then_else(True, _if_then_else(False, ones_diff_cols, 4), _if_then_else(True, ones_diff_cols, ones_diff_cols)), _if_then_else(ge(compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_cols, 3), _if_then_else(le(_if_then_else(False, 4, 1), _if_then_else(True, compare_blocks_rows, _if_then_else(False, 0, 3))), _if_then_else(ge(max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 0, _if_then_else(False, 1, 4))), _if_then_else(and_(ge(2, 2), True), _if_then_else(True, _if_then_else(False, 4, max_row_clue), 3), _if_then_else(False, 3, 4)))))), _if_then_else(and_(and_(ge(ones_diff_cols, 3), True), and_(ge(zeros_diff_rows, compare_blocks_rows), ge(0, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 3), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(2, 2), _if_then_else(True, _if_then_else(and_(or_(True, le(zeros_diff_cols, ones_diff_rows)), or_(and_(True, True), le(1, 3))), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, 1, zeros_diff_cols)), _if_then_else(le(zeros_diff_cols, max_row_clue), _if_then_else(ge(2, max_col_clue), zeros_diff_rows, ones_diff_cols), _if_then_else(ge(zeros_diff_cols, max_col_clue), ones_diff_cols, _if_then_else(False, zeros_diff_rows, 4)))), 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(False, 2, 2)), _if_then_else(and_(False, True), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(le(ones_diff_cols, 4), _if_then_else(False, max_row_clue, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)))))
le(_if_then_else(or_(True, False), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, max_row_clue, 0)), _if_then_else(ge(max_col_clue, 3), _if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, max_col_clue, max_row_clue)))
ge(_if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 0, ones_diff_cols)), _if_then_else(or_(or_(False, False), True), _if_then_else(False, max_col_clue, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))
or_(ge(_if_then_else(le(0, 4), 3, 4), ones_diff_rows), and_(or_(False, False), and_(le(_if_then_else(le(1, max_row_clue), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, 0)), _if_then_else(or_(False, False), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(False, compare_blocks_rows, compare_blocks_cols))), or_(or_(or_(False, True), le(0, 3)), le(_if_then_else(and_(True, True), 2, 0), _if_then_else(False, 1, ones_diff_cols))))))
ge(_if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, _if_then_else(False, max_col_clue, ones_diff_rows)), _if_then_else(False, _if_then_else(or_(le(ones_diff_cols, 0), le(compare_blocks_cols, max_col_clue)), _if_then_else(le(compare_blocks_cols, ones_diff_rows), _if_then_else(True, max_row_clue, max_col_clue), _if_then_else(False, ones_diff_rows, 2)), _if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(or_(le(_if_then_else(True, 2, 4), _if_then_else(False, compare_blocks_rows, 3)), or_(le(1, 3), or_(True, False))), 1, _if_then_else(True, 2, 2)), _if_then_else(True, 4, zeros_diff_rows))), compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(False, max_row_clue, _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(True, compare_blocks_cols, max_col_clue)))
or_(or_(and_(or_(False, False), ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), compare_blocks_rows)), le(2, 2)), or_(or_(False, True), le(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(False, _if_then_else(True, ones_diff_rows, max_col_clue), ones_diff_rows), _if_then_else(True, max_row_clue, _if_then_else(False, zeros_diff_rows, zeros_diff_cols))), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_cols, ones_diff_cols))), compare_blocks_rows)))
VAL TREES:
mul(mul(mul(ones_diff_cols, ones_diff_rows), add(mul(ones_diff_cols, ones_diff_cols), ones_diff_rows)), mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)))
add(add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)))
add(add(mul(add(mul(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols))), add(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_rows)))), add(add(add(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), mul(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols)))
add(add(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)))
mul(mul(add(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols)))
mul(mul(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)))
add(mul(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, ones_diff_cols))))
mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_rows)))
COND TREES:
ge(_if_then_else(le(max_col_clue, zeros_diff_cols), _if_then_else(False, ones_diff_cols, max_col_clue), _if_then_else(True, _if_then_else(True, _if_then_else(le(compare_blocks_rows, 2), 4, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 3)), zeros_diff_cols)), _if_then_else(and_(le(compare_blocks_rows, 2), False), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, _if_then_else(False, ones_diff_rows, max_row_clue)), ones_diff_rows), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), compare_blocks_cols, 4)))
le(_if_then_else(le(_if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(True, ones_diff_cols, 3), _if_then_else(False, 0, 4))), _if_then_else(or_(and_(False, False), le(zeros_diff_rows, 3)), _if_then_else(or_(False, False), _if_then_else(True, 4, 0), _if_then_else(False, max_col_clue, max_row_clue)), _if_then_else(or_(False, True), _if_then_else(True, 1, 1), _if_then_else(True, compare_blocks_cols, 0))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, max_row_clue, compare_blocks_cols)), _if_then_else(or_(True, True), 0, _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(2, ones_diff_rows), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 4)))), max_row_clue), _if_then_else(True, 1, max_col_clue), _if_then_else(le(_if_then_else(False, _if_then_else(True, compare_blocks_cols, zeros_diff_rows), 0), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(or_(False, True), 2, 0), _if_then_else(True, _if_then_else(or_(True, True), zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, max_col_clue))), _if_then_else(ge(compare_blocks_cols, _if_then_else(True, 0, 0)), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, _if_then_else(True, 2, 0), _if_then_else(False, 4, 4))))), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, 4, ones_diff_rows)))
ge(_if_then_else(le(_if_then_else(ge(ones_diff_cols, zeros_diff_rows), _if_then_else(True, max_col_clue, 4), _if_then_else(True, max_col_clue, compare_blocks_cols)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, max_col_clue, 3))), _if_then_else(or_(le(max_col_clue, compare_blocks_rows), or_(True, False)), _if_then_else(or_(False, True), _if_then_else(ge(_if_then_else(and_(le(2, max_row_clue), True), _if_then_else(False, _if_then_else(False, ones_diff_rows, 4), _if_then_else(True, 4, max_col_clue)), _if_then_else(False, max_col_clue, 3)), _if_then_else(and_(False, and_(False, True)), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 0, zeros_diff_rows))), 1, 3), _if_then_else(False, 3, 4)), _if_then_else(ge(ones_diff_rows, max_row_clue), _if_then_else(True, 0, max_col_clue), _if_then_else(True, 3, compare_blocks_cols))), _if_then_else(ge(_if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 3, 3)), _if_then_else(True, _if_then_else(False, ones_diff_cols, 4), _if_then_else(True, ones_diff_cols, ones_diff_cols)), _if_then_else(ge(compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_cols, 3), _if_then_else(le(_if_then_else(False, 4, 1), _if_then_else(True, compare_blocks_rows, _if_then_else(False, 0, 3))), _if_then_else(ge(max_col_clue, compare_blocks_rows), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 0, _if_then_else(False, 1, 4))), _if_then_else(le(max_col_clue, compare_blocks_rows), _if_then_else(True, _if_then_else(False, 4, max_row_clue), 3), _if_then_else(False, 3, 4)))))), _if_then_else(False, _if_then_else(ge(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 3), _if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(2, 2), _if_then_else(True, 1, 0), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(False, 2, 2)), _if_then_else(and_(False, True), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(le(ones_diff_cols, 4), _if_then_else(False, max_row_clue, 0), _if_then_else(and_(True, or_(False, le(ones_diff_cols, compare_blocks_rows))), compare_blocks_cols, compare_blocks_cols)))))
le(_if_then_else(or_(True, False), _if_then_else(False, 2, 3), _if_then_else(False, max_row_clue, 0)), _if_then_else(ge(compare_blocks_cols, 4), _if_then_else(False, _if_then_else(False, zeros_diff_rows, compare_blocks_cols), 3), _if_then_else(True, zeros_diff_cols, _if_then_else(False, _if_then_else(True, compare_blocks_rows, 3), compare_blocks_cols))))
ge(_if_then_else(or_(True, and_(le(compare_blocks_rows, 0), True)), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, 0, ones_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, max_col_clue, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))
or_(ge(_if_then_else(le(ones_diff_rows, 4), 3, 4), _if_then_else(False, 4, 2)), and_(or_(False, False), or_(True, True)))
ge(_if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, _if_then_else(False, max_col_clue, ones_diff_rows)), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(False, max_row_clue, _if_then_else(True, _if_then_else(True, 2, 2), compare_blocks_cols)), _if_then_else(True, compare_blocks_cols, max_col_clue)))
or_(or_(and_(or_(False, False), False), le(2, 2)), or_(or_(False, True), le(_if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(and_(or_(and_(and_(and_(False, False), le(ones_diff_rows, ones_diff_rows)), le(_if_then_else(True, max_col_clue, 2), _if_then_else(True, max_col_clue, 4))), or_(or_(or_(False, False), le(1, max_row_clue)), ge(_if_then_else(False, 0, compare_blocks_rows), _if_then_else(False, 4, zeros_diff_rows)))), or_(and_(le(_if_then_else(False, 2, 0), _if_then_else(True, ones_diff_rows, ones_diff_cols)), and_(and_(False, False), or_(False, True))), or_(or_(or_(False, False), and_(True, False)), ge(4, _if_then_else(False, 1, zeros_diff_cols))))), 4, ones_diff_rows), _if_then_else(True, max_row_clue, 1)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), 4)), compare_blocks_rows)))
VAL TREES:
mul(mul(mul(ones_diff_cols, ones_diff_rows), add(mul(ones_diff_cols, ones_diff_cols), ones_diff_rows)), mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)))
add(add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)))
add(add(mul(add(mul(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols))), add(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_rows)))), add(add(add(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), mul(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols)))
add(add(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)))
mul(mul(add(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols)))
mul(mul(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)))
add(mul(add(add(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, ones_diff_cols))))
mul(mul(add(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_rows)))


INFO:root:hof: COND TREES:
and_(le(_if_then_else(False, zeros_diff_cols, 4), _if_then_else(True, zeros_diff_cols, 4)), le(_if_then_else(True, 0, zeros_diff_cols), _if_then_else(False, 1, zeros_diff_rows)))
le(_if_then_else(le(zeros_diff_cols, 1), _if_then_else(True, compare_blocks_rows, _if_then_else(False, 0, ones_diff_cols)), _if_then_else(True, ones_diff_rows, _if_then_else(True, 2, zeros_diff_cols))), _if_then_else(ge(zeros_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, _if_then_else(False, compare_blocks_rows, 0)), _if_then_else(le(0, max_col_clue), _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_cols, 2))))
le(_if_then_else(and_(False, False), _if_then_else(le(3, 2), ones_diff_rows, ones_diff_cols), _if_then_else(and_(False, True), ones_diff_cols, 2)), _if_then_else(ge(ones_diff_rows, _if_then_else(True, compare_blocks_cols, compare_blocks_rows)), _if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(True, _if_then_else(True, zeros_diff_cols, ones_diff_cols), compare_blocks_cols)))
and_(or_(and_(ge(_if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, zeros_diff_rows, 4)), or_(ge(max_col_clue, compare_blocks_rows), or_(True, False))), le(_if_then_else(le(max_row_clue, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(True, max_row_clue, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(False, max_col_clue, 4), _if_then_else(False, zeros_diff_cols, max_row_clue)))), and_(and_(and_(and_(False, True), and_(False, True)), and_(and_(False, True), and_(False, True))), le(_if_then_else(or_(True, True), _if_then_else(False, 1, max_col_clue), _if_then_else(False, 4, ones_diff_cols)), _if_then_else(and_(False, False), _if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, max_col_clue, 2)))))
ge(_if_then_else(or_(or_(ge(1, ones_diff_rows), ge(zeros_diff_cols, compare_blocks_cols)), and_(and_(True, False), and_(True, True))), _if_then_else(or_(ge(compare_blocks_rows, compare_blocks_cols), ge(compare_blocks_rows, compare_blocks_cols)), _if_then_else(ge(3, zeros_diff_rows), _if_then_else(False, 3, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows)), _if_then_else(or_(True, False), _if_then_else(True, 0, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, 2))), _if_then_else(le(_if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(True, 4, zeros_diff_rows)), _if_then_else(ge(compare_blocks_rows, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, ones_diff_cols)), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(True, 1, 1), _if_then_else(True, 2, ones_diff_rows)))), _if_then_else(or_(and_(and_(True, True), ge(compare_blocks_rows, zeros_diff_rows)), or_(or_(False, True), and_(False, True))), _if_then_else(ge(_if_then_else(True, compare_blocks_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols)), _if_then_else(and_(False, True), _if_then_else(False, max_col_clue, max_row_clue), _if_then_else(False, 4, max_col_clue)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(True, compare_blocks_cols, max_row_clue))), _if_then_else(le(_if_then_else(False, 0, 4), _if_then_else(True, zeros_diff_cols, 3)), _if_then_else(ge(zeros_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_cols, max_col_clue), _if_then_else(True, max_col_clue, ones_diff_cols)), _if_then_else(ge(1, compare_blocks_rows), _if_then_else(True, 4, 4), _if_then_else(False, compare_blocks_rows, 4)))))
le(_if_then_else(le(1, max_row_clue), _if_then_else(and_(True, False), zeros_diff_rows, _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(False, _if_then_else(True, 1, _if_then_else(True, ones_diff_cols, 2)), _if_then_else(True, ones_diff_cols, _if_then_else(False, zeros_diff_cols, 4)))), _if_then_else(ge(0, zeros_diff_cols), _if_then_else(False, 1, 2), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(False, _if_then_else(False, max_col_clue, 3), zeros_diff_rows), _if_then_else(le(compare_blocks_rows, compare_blocks_cols), compare_blocks_rows, ones_diff_cols))))
ge(_if_then_else(ge(_if_then_else(False, 3, 0), _if_then_else(True, zeros_diff_rows, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(False, 3, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, ones_diff_cols), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, ones_diff_rows, 3))), _if_then_else(le(_if_then_else(True, 3, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, 3)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, 1), _if_then_else(True, compare_blocks_rows, zeros_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, compare_blocks_cols, compare_blocks_cols), _if_then_else(False, 1, ones_diff_rows))))
and_(or_(ge(4, 1), and_(True, False)), ge(_if_then_else(True, 0, ones_diff_cols), _if_then_else(False, 1, compare_blocks_cols)))
VAL TREES:
mul(mul(mul(mul(add(ones_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows))), add(mul(add(zeros_diff_rows, ones_diff_cols), mul(compare_blocks_rows, compare_blocks_cols)), add(mul(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_cols, zeros_diff_rows)))), add(mul(mul(mul(ones_diff_rows, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), mul(add(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, ones_diff_rows))), add(mul(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_rows)), add(add(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)))))
mul(mul(add(mul(mul(ones_diff_cols, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows)), mul(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols))), add(add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_rows)), add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows)))), mul(mul(mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols)), add(add(ones_diff_cols, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_rows))), add(mul(add(zeros_diff_cols, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_cols)), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_rows)))))
mul(mul(add(ones_diff_rows, ones_diff_rows), add(ones_diff_cols, zeros_diff_cols)), add(add(compare_blocks_rows, add(ones_diff_rows, ones_diff_rows)), add(ones_diff_cols, mul(ones_diff_rows, ones_diff_cols))))
add(mul(mul(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_cols)), add(add(mul(add(compare_blocks_rows, compare_blocks_cols), compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_rows)), mul(compare_blocks_cols, compare_blocks_cols)))
mul(add(add(add(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_cols)), mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_cols))), mul(mul(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols))))
mul(mul(mul(compare_blocks_rows, ones_diff_rows), mul(mul(ones_diff_cols, compare_blocks_cols), compare_blocks_rows)), add(add(ones_diff_cols, mul(add(ones_diff_cols, compare_blocks_cols), compare_blocks_cols)), mul(ones_diff_rows, zeros_diff_cols)))
add(add(add(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_cols)), mul(add(ones_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols)))
add(mul(mul(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_cols)), mul(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)))
mul(mul(add(mul(compare_blocks_rows, compare_blocks_rows), zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(mul(ones_diff_rows, ones_diff_rows), add(compare_blocks_rows, ones_diff_rows)))


INFO:root:stats: {'fitness': <deap.tools.support.Statistics object at 0x0000021916E45A90>, 'size': <deap.tools.support.Statistics object at 0x0000021916E45AC8>}

