INFO:root:

*******STARTING!!!******


INFO:root:

*******Configuration******


INFO:root:# NUM_ROWS = 20


INFO:root:NUM_ROWS = 5


INFO:root:# NUM_COLS = 20


INFO:root:NUM_COLS = 5


INFO:root:empty_in_split = '\xa0'


INFO:root:


INFO:root:pickle_unsolved_file_path = 'data/%dx%d_nonograms.pkl' % (NUM_ROWS, NUM_COLS)


INFO:root:pickle_solved_file_path = 'data/%dx%d_nonograms_solved.pkl' % (NUM_ROWS, NUM_COLS)


INFO:root:should_run_in_parallel = True


INFO:root:


INFO:root:NUM_COND_TREES = 8


INFO:root:NUM_VAL_TREES = NUM_COND_TREES + 1


INFO:root:prob_crossover_global = 0.7  # global probability for cx


INFO:root:prob_crossover_individual_cond = 0.8  # probability to cx a specific cond tree in an individual


INFO:root:prob_crossover_individual_val = 0.8  # probability to cx a specific cond tree in an individual


INFO:root:prob_mutate_global = 0.4


INFO:root:prob_mutate_individual_cond = 0.5


INFO:root:prob_mutate_individual_val = 0.5


INFO:root:


INFO:root:points_correct_box = 5


INFO:root:points_incorrect_box = 0


INFO:root:# points_incorrect_box = -2


INFO:root:pop_size = 50


INFO:root:hof_size = 1


INFO:root:# num_gen = 40


INFO:root:num_gen = 10


INFO:root:train_size = 3


INFO:root:

*******DONE!!!******


INFO:root:run time: 40 sec

INFO:root:max possible fitness for the nonograms ran: 71

INFO:root:log:    	      	            fitness            	              size              
   	      	-------------------------------	--------------------------------
gen	nevals	avg    	max    	min    	std    	avg 	max	min	std     
0  	50    	36.6667	36.6667	36.6667	0      	7.16	8  	7  	0.366606
1  	42    	38.9333	61.6667	31.6667	9.06618	8.02	10 	7  	0.927146
2  	38    	40.8   	60     	31.6667	10.0124	8.34	11 	7  	0.885664
3  	40    	41.5667	58.3333	31.6667	10.1402	8.52	12 	7  	1.08148 
4  	37    	41.7667	61.6667	25     	10.8239	8.6 	11 	7  	1.14891 
5  	36    	42.6333	60     	25     	12.0189	8.56	11 	7  	1.20266 
6  	40    	41.9   	60     	25     	11.9257	8.44	11 	7  	0.875443
7  	43    	41.9   	60     	25     	11.3579	8.68	11 	7  	0.947418
8  	39    	41.4667	60     	25     	11.5933	8.54	10 	7  	0.805233
9  	42    	40.1   	60     	25     	10.9667	8.46	11 	7  	0.78    
10 	38    	42.3   	60     	25     	11.2935	8.6 	10 	7  	0.748331

INFO:root:pop: COND TREES:
and_(and_(or_(True, False), or_(True, True)), and_(le(_if_then_else(True, compare_blocks_rows, ones_diff_cols), ones_diff_rows), or_(le(0, 1), False)))
or_(or_(or_(False, False), le(compare_blocks_cols, max_row_clue)), ge(_if_then_else(ge(_if_then_else(True, 1, ones_diff_rows), _if_then_else(True, ones_diff_rows, 3)), compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, _if_then_else(False, 0, compare_blocks_rows))))
and_(or_(and_(le(_if_then_else(or_(False, False), ones_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 3)), or_(True, le(3, 3))), and_(or_(or_(True, False), or_(True, True)), ge(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, 4, 4)))), or_(or_(False, False), le(_if_then_else(ge(0, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(False, 1, 1))))
ge(_if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(True, ones_diff_rows, 2)), _if_then_else(le(max_row_clue, max_col_clue), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(True, 3, ones_diff_rows), 1), _if_then_else(or_(False, True), _if_then_else(True, max_col_clue, 0), _if_then_else(True, max_row_clue, 3))), _if_then_else(or_(le(ones_diff_cols, 0), and_(True, True)), _if_then_else(and_(False, False), zeros_diff_cols, _if_then_else(True, compare_blocks_cols, 3)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, 3, 2)))), _if_then_else(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(True, 0, ones_diff_cols), _if_then_else(True, 0, 4)), _if_then_else(or_(True, False), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, 2, ones_diff_cols))), _if_then_else(and_(and_(True, True), and_(True, False)), _if_then_else(ge(1, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, 2, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 3, ones_diff_rows))), _if_then_else(le(_if_then_else(False, compare_blocks_rows, ones_diff_rows), _if_then_else(True, 3, 2)), 3, _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 4, _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, 4)))))))
ge(_if_then_else(and_(False, True), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, ones_diff_rows, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 2, zeros_diff_rows)))
ge(_if_then_else(and_(le(3, zeros_diff_cols), ge(max_row_clue, 3)), 1, _if_then_else(and_(False, False), _if_then_else(and_(False, False), zeros_diff_rows, max_row_clue), _if_then_else(and_(False, False), 4, 0))), _if_then_else(le(_if_then_else(False, 1, max_row_clue), _if_then_else(False, 1, 1)), _if_then_else(ge(zeros_diff_cols, 0), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(True, 2, ones_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, 0, 4), _if_then_else(False, 1, max_row_clue))))
ge(_if_then_else(and_(True, True), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, 0)), _if_then_else(le(4, compare_blocks_rows), _if_then_else(False, max_row_clue, max_row_clue), _if_then_else(True, 3, max_row_clue)))
or_(False, or_(and_(False, False), or_(True, or_(True, True))))
VAL TREES:
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)))
add(mul(mul(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_rows)))
mul(add(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_rows, ones_diff_cols)), add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols))), add(add(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(mul(add(zeros_diff_cols, compare_blocks_cols), add(add(add(compare_blocks_cols, ones_diff_cols), ones_diff_rows), compare_blocks_cols)), mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(mul(ones_diff_cols, zeros_diff_cols), ones_diff_cols)), add(ones_diff_cols, zeros_diff_rows)))
mul(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), add(mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_cols))))
add(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)))
mul(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, mul(ones_diff_cols, ones_diff_rows))))
COND TREES:
and_(and_(or_(True, False), or_(True, True)), and_(le(max_col_clue, _if_then_else(or_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(ge(max_col_clue, ones_diff_rows), 0, 1))), or_(le(_if_then_else(or_(and_(or_(or_(True, False), or_(True, True)), le(_if_then_else(True, max_row_clue, zeros_diff_rows), _if_then_else(False, 0, 1))), and_(or_(or_(False, False), le(zeros_diff_rows, ones_diff_cols)), le(_if_then_else(True, 0, ones_diff_rows), _if_then_else(False, compare_blocks_cols, 2)))), _if_then_else(or_(le(_if_then_else(True, 1, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, 2)), or_(and_(False, False), ge(zeros_diff_cols, compare_blocks_cols))), _if_then_else(and_(and_(True, False), le(ones_diff_rows, zeros_diff_cols)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_cols, 2), _if_then_else(False, ones_diff_cols, 0)), _if_then_else(and_(False, False), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, compare_blocks_rows))), _if_then_else(ge(_if_then_else(True, 4, 4), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(le(zeros_diff_cols, 0), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 4)), _if_then_else(ge(zeros_diff_rows, ones_diff_cols), _if_then_else(True, 2, zeros_diff_cols), _if_then_else(False, 4, compare_blocks_cols)))), _if_then_else(ge(_if_then_else(and_(False, True), _if_then_else(True, 1, 1), _if_then_else(False, zeros_diff_cols, compare_blocks_cols)), _if_then_else(le(max_col_clue, max_col_clue), _if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(True, ones_diff_cols, 1))), _if_then_else(le(_if_then_else(True, compare_blocks_rows, 2), _if_then_else(le(_if_then_else(True, zeros_diff_rows, 2), _if_then_else(False, ones_diff_cols, max_col_clue)), _if_then_else(or_(True, False), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(False, 0, 2)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_cols, 2), _if_then_else(False, ones_diff_rows, zeros_diff_cols)))), _if_then_else(or_(True, False), _if_then_else(True, compare_blocks_rows, zeros_diff_cols), max_col_clue), _if_then_else(le(ones_diff_rows, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, 2))), _if_then_else(le(_if_then_else(True, max_row_clue, max_row_clue), _if_then_else(True, ones_diff_rows, zeros_diff_cols)), _if_then_else(and_(False, False), _if_then_else(False, 0, 2), _if_then_else(True, ones_diff_rows, zeros_diff_rows)), _if_then_else(and_(False, False), _if_then_else(False, 4, ones_diff_cols), _if_then_else(True, max_row_clue, zeros_diff_cols))))), 1), False)))
or_(or_(or_(or_(True, True), False), le(compare_blocks_cols, max_row_clue)), ge(_if_then_else(ge(_if_then_else(True, 1, ones_diff_rows), _if_then_else(True, 3, 3)), compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, _if_then_else(False, _if_then_else(and_(le(0, 1), le(1, compare_blocks_cols)), _if_then_else(le(3, zeros_diff_cols), _if_then_else(True, max_col_clue, ones_diff_rows), _if_then_else(ge(_if_then_else(False, 3, zeros_diff_rows), _if_then_else(and_(True, False), 4, 2)), _if_then_else(and_(True, False), _if_then_else(False, 4, _if_then_else(True, _if_then_else(False, ones_diff_cols, max_row_clue), 1)), _if_then_else(and_(True, and_(False, False)), ones_diff_rows, _if_then_else(le(2, ones_diff_cols), max_col_clue, zeros_diff_cols))), _if_then_else(ge(2, _if_then_else(True, compare_blocks_cols, 4)), _if_then_else(or_(True, False), ones_diff_rows, _if_then_else(ge(compare_blocks_cols, max_col_clue), 2, _if_then_else(True, 4, zeros_diff_cols))), _if_then_else(False, 2, _if_then_else(True, max_col_clue, 0))))), _if_then_else(ge(max_row_clue, compare_blocks_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, 2, zeros_diff_rows))), compare_blocks_rows))))
and_(or_(and_(le(_if_then_else(le(_if_then_else(or_(ge(max_col_clue, zeros_diff_rows), le(3, zeros_diff_rows)), _if_then_else(or_(False, False), _if_then_else(False, max_row_clue, ones_diff_rows), _if_then_else(True, 2, 4)), _if_then_else(ge(3, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, 1, max_col_clue))), _if_then_else(and_(or_(True, True), or_(True, True)), _if_then_else(or_(True, False), _if_then_else(True, compare_blocks_rows, ones_diff_rows), _if_then_else(True, ones_diff_rows, 0)), _if_then_else(or_(False, True), _if_then_else(True, max_row_clue, ones_diff_rows), _if_then_else(True, 0, compare_blocks_rows)))), ones_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 3)), or_(or_(True, True), le(3, 3))), False), False)
ge(_if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(True, ones_diff_rows, 2)), _if_then_else(le(max_row_clue, max_col_clue), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(True, 3, ones_diff_rows), 1), _if_then_else(or_(False, True), _if_then_else(True, max_col_clue, 0), _if_then_else(True, max_row_clue, 3))), _if_then_else(or_(le(ones_diff_cols, 0), and_(True, True)), _if_then_else(and_(False, False), zeros_diff_cols, _if_then_else(True, compare_blocks_cols, 3)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, 3, 2)))), _if_then_else(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(True, 0, ones_diff_cols), _if_then_else(True, 0, 4)), _if_then_else(or_(True, False), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, 2, ones_diff_cols))), _if_then_else(and_(and_(True, True), and_(True, False)), _if_then_else(le(_if_then_else(or_(and_(True, True), and_(False, False)), _if_then_else(ge(max_row_clue, zeros_diff_cols), _if_then_else(False, 1, max_row_clue), _if_then_else(True, 3, 2)), _if_then_else(and_(True, True), _if_then_else(False, 3, ones_diff_cols), _if_then_else(False, compare_blocks_cols, 0))), _if_then_else(ge(_if_then_else(True, 0, 2), _if_then_else(True, max_row_clue, compare_blocks_cols)), _if_then_else(ge(4, 1), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, max_col_clue, 0)), _if_then_else(and_(True, True), _if_then_else(False, 1, 1), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)))), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, 2, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 3, ones_diff_rows))), _if_then_else(le(_if_then_else(and_(le(_if_then_else(le(2, compare_blocks_rows), _if_then_else(False, ones_diff_rows, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(le(max_row_clue, compare_blocks_cols), _if_then_else(False, 4, ones_diff_rows), _if_then_else(False, compare_blocks_rows, max_row_clue))), ge(_if_then_else(le(zeros_diff_cols, 0), _if_then_else(False, 2, 4), _if_then_else(True, max_row_clue, 1)), _if_then_else(le(ones_diff_rows, max_col_clue), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, 2)))), _if_then_else(le(_if_then_else(or_(False, False), _if_then_else(False, 1, 1), _if_then_else(False, 2, max_row_clue)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_rows, 0), _if_then_else(False, max_col_clue, 1))), _if_then_else(or_(le(zeros_diff_rows, ones_diff_cols), or_(False, True)), _if_then_else(le(2, compare_blocks_cols), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, max_row_clue, zeros_diff_cols)), _if_then_else(and_(False, False), _if_then_else(False, 4, ones_diff_rows), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(or_(False, False), le(ones_diff_cols, 0)), _if_then_else(or_(True, True), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(True, 4, ones_diff_rows)), _if_then_else(le(_if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), compare_blocks_rows), _if_then_else(True, zeros_diff_rows, 4), _if_then_else(False, 1, ones_diff_rows)))), _if_then_else(le(_if_then_else(and_(True, False), _if_then_else(True, 3, 3), _if_then_else(False, ones_diff_cols, 0)), _if_then_else(or_(False, True), _if_then_else(False, 0, 1), _if_then_else(True, max_row_clue, 0))), _if_then_else(ge(_if_then_else(True, ones_diff_rows, 3), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_col_clue, ones_diff_cols), _if_then_else(True, ones_diff_rows, max_col_clue), _if_then_else(False, max_row_clue, ones_diff_rows)), _if_then_else(ge(1, compare_blocks_cols), _if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, 1, compare_blocks_cols))), _if_then_else(le(_if_then_else(True, ones_diff_cols, ones_diff_cols), _if_then_else(True, max_col_clue, 1)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, 0), _if_then_else(True, ones_diff_cols, 2)), _if_then_else(ge(compare_blocks_cols, max_col_clue), _if_then_else(True, ones_diff_rows, 2), _if_then_else(True, ones_diff_rows, ones_diff_rows))))), _if_then_else(True, 3, 2)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 4, _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, 4)))))))
ge(_if_then_else(and_(False, True), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 0, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 2, zeros_diff_rows)))
ge(_if_then_else(and_(le(3, zeros_diff_cols), ge(max_row_clue, 3)), _if_then_else(or_(False, False), _if_then_else(False, 2, _if_then_else(and_(or_(False, False), or_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(ge(ones_diff_cols, 4), _if_then_else(True, zeros_diff_rows, 2), _if_then_else(False, compare_blocks_cols, ones_diff_cols)))), _if_then_else(False, max_row_clue, zeros_diff_cols)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_rows, 0), _if_then_else(True, 4, 0))), _if_then_else(le(_if_then_else(le(zeros_diff_rows, 2), 1, max_row_clue), _if_then_else(False, 1, 1)), _if_then_else(False, _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(True, 2, ones_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, 0, 1), _if_then_else(False, 1, max_row_clue))))
ge(_if_then_else(le(_if_then_else(True, compare_blocks_rows, 3), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, ones_diff_rows, compare_blocks_rows), _if_then_else(True, 3, compare_blocks_rows)), _if_then_else(ge(3, 2), _if_then_else(False, 0, ones_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols))), _if_then_else(False, _if_then_else(False, max_row_clue, max_row_clue), _if_then_else(True, 3, max_row_clue)))
or_(True, or_(and_(False, False), or_(True, True)))
VAL TREES:
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)))
add(mul(mul(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_rows)))
mul(add(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_rows, ones_diff_cols)), add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols))), add(add(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(mul(add(zeros_diff_cols, compare_blocks_cols), add(add(add(compare_blocks_cols, ones_diff_cols), ones_diff_rows), compare_blocks_cols)), mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(mul(ones_diff_cols, zeros_diff_cols), ones_diff_cols)), add(ones_diff_cols, zeros_diff_rows)))
mul(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), add(mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_cols))))
add(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)))
mul(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, mul(ones_diff_cols, ones_diff_rows))))
COND TREES:
and_(or_(False, or_(le(0, 1), False)), ge(_if_then_else(True, 4, ones_diff_rows), _if_then_else(False, 1, zeros_diff_rows)))
ge(_if_then_else(and_(or_(ge(ones_diff_rows, max_row_clue), and_(True, True)), and_(or_(True, False), le(ones_diff_rows, _if_then_else(True, zeros_diff_cols, 1)))), _if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(or_(False, False), compare_blocks_cols, ones_diff_rows)), _if_then_else(le(zeros_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(True, 4, max_col_clue)))
le(_if_then_else(ge(_if_then_else(True, ones_diff_cols, 4), _if_then_else(False, 0, 0)), _if_then_else(or_(True, True), _if_then_else(True, 4, compare_blocks_cols), _if_then_else(True, 0, ones_diff_rows)), _if_then_else(le(compare_blocks_cols, max_col_clue), _if_then_else(False, 2, 0), zeros_diff_cols)), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, 2, max_row_clue)), _if_then_else(le(0, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(True, _if_then_else(le(_if_then_else(and_(le(2, 3), le(3, 0)), _if_then_else(le(zeros_diff_cols, zeros_diff_cols), _if_then_else(False, ones_diff_rows, 0), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, 2, zeros_diff_cols))), _if_then_else(and_(le(1, max_row_clue), le(0, ones_diff_rows)), _if_then_else(ge(max_col_clue, ones_diff_cols), _if_then_else(False, 4, zeros_diff_cols), _if_then_else(False, 2, 3)), _if_then_else(ge(max_col_clue, zeros_diff_cols), _if_then_else(False, 3, max_col_clue), _if_then_else(False, 2, zeros_diff_rows)))), _if_then_else(and_(or_(le(zeros_diff_cols, compare_blocks_rows), le(compare_blocks_cols, 3)), le(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, ones_diff_rows, 3))), _if_then_else(or_(or_(False, True), ge(max_row_clue, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(True, 4, max_row_clue), _if_then_else(False, 0, 4)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_cols, 4), _if_then_else(True, 4, 2))), _if_then_else(ge(_if_then_else(True, 1, max_row_clue), _if_then_else(True, 3, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(True, compare_blocks_rows, 3), _if_then_else(False, ones_diff_cols, compare_blocks_cols)), _if_then_else(and_(False, False), _if_then_else(True, 4, max_row_clue), _if_then_else(False, 1, zeros_diff_rows)))), _if_then_else(ge(_if_then_else(ge(2, max_col_clue), _if_then_else(False, 4, 0), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(0, 1), _if_then_else(True, 3, 0), _if_then_else(False, compare_blocks_cols, 4))), _if_then_else(or_(or_(True, False), or_(True, True)), _if_then_else(le(3, 3), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(or_(False, False), _if_then_else(True, 1, ones_diff_rows), _if_then_else(True, 0, ones_diff_rows))), _if_then_else(and_(ge(max_col_clue, 3), le(ones_diff_cols, max_col_clue)), _if_then_else(and_(False, True), _if_then_else(False, 4, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_cols)), _if_then_else(le(zeros_diff_rows, ones_diff_rows), _if_then_else(True, zeros_diff_rows, 1), _if_then_else(False, ones_diff_rows, 3))))), compare_blocks_rows), _if_then_else(False, 1, 4))))
ge(_if_then_else(False, _if_then_else(True, 2, max_row_clue), _if_then_else(True, 2, _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(le(ones_diff_rows, 3), _if_then_else(True, _if_then_else(True, 1, 3), zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows)))
ge(_if_then_else(True, _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, 2), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, zeros_diff_cols))), _if_then_else(or_(ge(zeros_diff_rows, zeros_diff_rows), ge(zeros_diff_cols, compare_blocks_rows)), _if_then_else(and_(True, False), _if_then_else(True, 3, compare_blocks_cols), _if_then_else(True, 1, ones_diff_cols)), _if_then_else(le(4, ones_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, 0, 2))))
and_(le(_if_then_else(and_(False, False), zeros_diff_rows, max_row_clue), _if_then_else(False, ones_diff_rows, max_col_clue)), True)
ge(_if_then_else(or_(and_(and_(False, False), and_(False, True)), ge(_if_then_else(True, zeros_diff_cols, _if_then_else(True, zeros_diff_rows, 0)), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(ge(_if_then_else(True, _if_then_else(False, compare_blocks_cols, 4), _if_then_else(False, _if_then_else(False, 1, compare_blocks_rows), ones_diff_cols)), _if_then_else(True, _if_then_else(False, ones_diff_cols, 0), 2)), _if_then_else(ge(zeros_diff_cols, _if_then_else(False, _if_then_else(False, compare_blocks_rows, zeros_diff_cols), compare_blocks_cols)), _if_then_else(or_(le(compare_blocks_rows, ones_diff_rows), and_(True, True)), compare_blocks_cols, 4), _if_then_else(le(ones_diff_cols, _if_then_else(True, zeros_diff_rows, max_col_clue)), compare_blocks_cols, 4)), _if_then_else(le(_if_then_else(and_(False, True), 1, compare_blocks_cols), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)), _if_then_else(True, compare_blocks_rows, ones_diff_rows), _if_then_else(and_(True, False), 3, zeros_diff_rows)))), _if_then_else(le(0, 2), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows))), _if_then_else(or_(le(ones_diff_cols, compare_blocks_rows), or_(False, False)), _if_then_else(ge(max_row_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(True, 0, compare_blocks_rows)), _if_then_else(le(compare_blocks_rows, zeros_diff_cols), 1, _if_then_else(True, ones_diff_cols, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 2), _if_then_else(True, max_col_clue, ones_diff_rows)), and_(ge(3, 2), ge(zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(or_(False, False), and_(True, False)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 2, 4)), _if_then_else(and_(False, True), _if_then_else(False, ones_diff_rows, max_row_clue), _if_then_else(True, zeros_diff_rows, max_row_clue))), _if_then_else(le(_if_then_else(True, max_col_clue, ones_diff_rows), _if_then_else(False, compare_blocks_rows, 2)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_rows, 4), _if_then_else(True, zeros_diff_cols, max_row_clue)), zeros_diff_rows)))
le(_if_then_else(ge(_if_then_else(ge(1, 1), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, max_row_clue, max_row_clue)), _if_then_else(ge(compare_blocks_cols, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 3))), _if_then_else(and_(or_(True, True), ge(3, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, 3, 3), _if_then_else(False, max_row_clue, 1)), _if_then_else(True, _if_then_else(False, 3, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, 3))), _if_then_else(or_(le(zeros_diff_cols, 2), or_(False, True)), _if_then_else(le(1, ones_diff_rows), _if_then_else(or_(True, True), zeros_diff_rows, max_col_clue), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 1), _if_then_else(True, 3, 1)))), _if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, 2, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, 3, max_col_clue), _if_then_else(True, 3, ones_diff_rows))), _if_then_else(and_(and_(False, False), and_(False, True)), _if_then_else(le(max_col_clue, ones_diff_rows), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, 3, max_row_clue)), _if_then_else(and_(False, True), _if_then_else(False, 2, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows))), _if_then_else(ge(_if_then_else(True, max_row_clue, max_col_clue), _if_then_else(True, max_row_clue, ones_diff_cols)), _if_then_else(ge(1, max_col_clue), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 2, 2)), _if_then_else(le(3, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)))))
VAL TREES:
add(mul(mul(mul(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_rows))), add(add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)))), add(add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols)), add(mul(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))))
mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows)))
mul(add(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)), add(mul(compare_blocks_rows, mul(zeros_diff_cols, ones_diff_cols)), mul(zeros_diff_cols, compare_blocks_rows)))
add(mul(mul(mul(mul(ones_diff_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_cols, ones_diff_cols))), add(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_cols)), mul(add(ones_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_cols)), add(mul(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_rows, compare_blocks_rows))), mul(add(add(zeros_diff_cols, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows)), mul(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_cols)))))
mul(add(mul(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_rows, ones_diff_rows)), add(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_cols, ones_diff_cols))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, zeros_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(mul(add(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), add(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)))
add(mul(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(mul(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)))
mul(add(mul(mul(zeros_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_cols))), add(mul(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_cols))))
mul(mul(add(zeros_diff_cols, add(ones_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, compare_blocks_cols), zeros_diff_cols)), mul(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)))
COND TREES:
ge(_if_then_else(and_(True, True), max_row_clue, _if_then_else(True, max_col_clue, 4)), _if_then_else(ge(_if_then_else(False, _if_then_else(False, compare_blocks_cols, compare_blocks_cols), zeros_diff_rows), 3), _if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(True, zeros_diff_rows, ones_diff_rows)))
or_(le(_if_then_else(ge(_if_then_else(True, 1, compare_blocks_cols), _if_then_else(False, max_row_clue, 1)), _if_then_else(or_(True, False), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, 2, max_col_clue)), _if_then_else(le(0, compare_blocks_rows), _if_then_else(True, ones_diff_rows, ones_diff_rows), _if_then_else(False, 2, ones_diff_rows))), _if_then_else(le(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, zeros_diff_rows)), _if_then_else(ge(1, max_col_clue), _if_then_else(True, 1, ones_diff_rows), _if_then_else(ge(zeros_diff_cols, zeros_diff_rows), 0, compare_blocks_rows)), _if_then_else(and_(True, False), _if_then_else(True, 0, max_row_clue), _if_then_else(True, zeros_diff_rows, compare_blocks_rows)))), ge(_if_then_else(le(_if_then_else(False, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, max_row_clue, ones_diff_cols)), _if_then_else(ge(4, 4), _if_then_else(False, 3, max_col_clue), _if_then_else(False, zeros_diff_rows, ones_diff_cols)), _if_then_else(or_(True, False), _if_then_else(True, 2, 3), _if_then_else(False, 4, 1))), _if_then_else(and_(le(0, zeros_diff_rows), le(compare_blocks_rows, max_row_clue)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 4, 1)), _if_then_else(or_(True, True), _if_then_else(True, 0, compare_blocks_rows), _if_then_else(False, 0, max_col_clue)))))
ge(_if_then_else(ge(3, 1), _if_then_else(and_(or_(ge(_if_then_else(False, 3, 0), ones_diff_rows), False), True), 2, max_col_clue), _if_then_else(True, 1, _if_then_else(or_(True, False), zeros_diff_cols, zeros_diff_rows))), _if_then_else(or_(False, True), _if_then_else(True, _if_then_else(False, 3, 4), 0), _if_then_else(and_(True, False), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), 3)))
le(_if_then_else(False, 4, max_col_clue), _if_then_else(or_(True, True), _if_then_else(False, 3, max_row_clue), _if_then_else(True, 0, compare_blocks_rows)))
or_(ge(_if_then_else(False, 0, ones_diff_cols), _if_then_else(True, 1, compare_blocks_rows)), le(_if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 4, 1)))
le(_if_then_else(ge(4, ones_diff_cols), _if_then_else(False, 1, zeros_diff_cols), _if_then_else(True, max_col_clue, zeros_diff_cols)), _if_then_else(True, _if_then_else(ge(zeros_diff_rows, ones_diff_cols), _if_then_else(True, 4, max_row_clue), 1), _if_then_else(False, ones_diff_cols, _if_then_else(False, compare_blocks_rows, 0))))
ge(_if_then_else(le(3, _if_then_else(False, 3, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, _if_then_else(True, 3, max_row_clue), max_col_clue), _if_then_else(False, max_row_clue, max_col_clue)), _if_then_else(ge(compare_blocks_cols, max_col_clue), _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(False, compare_blocks_cols, ones_diff_cols))), _if_then_else(and_(True, and_(False, True)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_rows, 4), _if_then_else(True, 4, 3)), _if_then_else(ge(ones_diff_rows, 3), _if_then_else(False, zeros_diff_cols, 1), _if_then_else(True, zeros_diff_cols, 4))))
and_(or_(or_(False, False), ge(_if_then_else(True, zeros_diff_rows, 0), compare_blocks_rows)), or_(ge(_if_then_else(True, 1, 3), max_row_clue), and_(True, False)))
VAL TREES:
mul(mul(add(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_cols, zeros_diff_rows)))
add(mul(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, add(mul(add(compare_blocks_rows, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_rows, zeros_diff_rows))))))
add(add(mul(zeros_diff_rows, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(mul(add(mul(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, add(mul(add(add(zeros_diff_rows, compare_blocks_rows), zeros_diff_cols), add(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(mul(ones_diff_rows, zeros_diff_rows), compare_blocks_rows))))), add(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows))), mul(add(add(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_rows))))
mul(mul(add(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), mul(mul(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, ones_diff_cols))), add(add(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))))
mul(mul(mul(add(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows))), add(add(add(ones_diff_rows, ones_diff_cols), mul(mul(add(mul(mul(compare_blocks_cols, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_cols)), mul(add(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_cols, zeros_diff_cols))), add(add(mul(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)))), compare_blocks_rows)), add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows))))
mul(add(mul(ones_diff_cols, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_cols)), add(add(ones_diff_cols, zeros_diff_rows), add(add(mul(ones_diff_cols, zeros_diff_rows), zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows))))
mul(add(add(ones_diff_rows, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(mul(mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_cols)), add(mul(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_rows))), mul(add(add(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), add(add(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))), mul(mul(mul(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_rows)), add(add(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_rows)), mul(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_cols)))))
COND TREES:
and_(and_(or_(True, False), or_(False, True)), and_(le(max_col_clue, _if_then_else(or_(or_(and_(True, False), False), False), _if_then_else(True, max_row_clue, 2), _if_then_else(False, 0, 1))), or_(le(0, 1), False)))
or_(or_(or_(False, False), le(compare_blocks_cols, max_row_clue)), ge(_if_then_else(ge(_if_then_else(True, 1, ones_diff_rows), _if_then_else(True, 3, 3)), compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, _if_then_else(False, 0, compare_blocks_rows))))
and_(or_(and_(le(_if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 3)), or_(or_(True, True), le(3, 3))), and_(or_(or_(True, False), or_(True, True)), ge(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, 4, 4)))), or_(or_(False, False), le(_if_then_else(ge(0, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(False, 1, 1))))
ge(_if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(le(compare_blocks_rows, 2), ones_diff_rows, 2)), _if_then_else(le(max_row_clue, max_col_clue), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(True, 3, ones_diff_rows), 1), _if_then_else(or_(False, True), _if_then_else(True, max_col_clue, 0), _if_then_else(True, max_row_clue, 3))), _if_then_else(or_(le(ones_diff_cols, 0), and_(True, True)), _if_then_else(and_(False, False), zeros_diff_cols, _if_then_else(True, compare_blocks_cols, 3)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, 3, 2)))), _if_then_else(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(True, 0, ones_diff_cols), _if_then_else(True, 0, 4)), compare_blocks_rows), _if_then_else(and_(and_(True, True), and_(True, False)), _if_then_else(ge(1, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, 2, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 3, ones_diff_rows))), _if_then_else(le(_if_then_else(False, compare_blocks_rows, ones_diff_rows), _if_then_else(True, 3, 2)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(and_(le(zeros_diff_rows, 0), ge(compare_blocks_cols, ones_diff_rows)), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 4, _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, 4)))))))
ge(_if_then_else(and_(False, True), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, ones_diff_rows, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(False, _if_then_else(and_(False, True), _if_then_else(False, zeros_diff_cols, 4), _if_then_else(False, ones_diff_rows, max_row_clue)), ones_diff_cols), _if_then_else(False, 2, zeros_diff_rows)))
ge(_if_then_else(and_(le(3, zeros_diff_cols), False), _if_then_else(or_(False, False), _if_then_else(False, 2, 4), _if_then_else(False, max_row_clue, zeros_diff_cols)), _if_then_else(and_(False, False), _if_then_else(and_(False, False), zeros_diff_rows, max_row_clue), _if_then_else(le(_if_then_else(False, 1, max_row_clue), _if_then_else(False, 1, 1)), _if_then_else(ge(zeros_diff_cols, 0), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, 2, ones_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, 0, 4), _if_then_else(False, 1, max_row_clue))))), 4)
ge(_if_then_else(and_(True, True), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, 0)), _if_then_else(le(4, compare_blocks_rows), _if_then_else(False, max_row_clue, max_row_clue), _if_then_else(False, 3, max_row_clue)))
or_(ge(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, zeros_diff_cols, 3)), or_(and_(False, True), or_(True, False)))
VAL TREES:
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)))
add(mul(mul(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_rows)))
mul(add(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_rows, ones_diff_cols)), add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols))), add(add(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(mul(add(zeros_diff_cols, compare_blocks_cols), add(add(add(compare_blocks_cols, ones_diff_cols), ones_diff_rows), compare_blocks_cols)), mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(mul(ones_diff_cols, zeros_diff_cols), ones_diff_cols)), add(ones_diff_cols, zeros_diff_rows)))
mul(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), add(mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_cols))))
add(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)))
mul(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, mul(ones_diff_cols, ones_diff_rows))))
COND TREES:
and_(and_(or_(True, False), or_(True, True)), and_(le(max_col_clue, _if_then_else(or_(True, True), _if_then_else(True, max_row_clue, 2), zeros_diff_rows)), or_(le(0, 1), True)))
or_(or_(or_(False, False), le(_if_then_else(False, 4, 1), max_row_clue)), ge(_if_then_else(ge(_if_then_else(True, 1, ones_diff_rows), _if_then_else(True, ones_diff_rows, 3)), compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, _if_then_else(False, 0, compare_blocks_rows))))
and_(or_(False, and_(or_(or_(True, False), or_(True, True)), ge(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, 4, 4)))), or_(or_(False, False), le(_if_then_else(ge(0, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(False, 1, 1))))
ge(_if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(True, ones_diff_rows, 2)), _if_then_else(le(max_row_clue, max_col_clue), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(True, 3, ones_diff_rows), 1), _if_then_else(or_(False, True), _if_then_else(True, max_col_clue, 0), _if_then_else(True, max_row_clue, 3))), _if_then_else(or_(le(ones_diff_cols, 0), and_(True, True)), _if_then_else(and_(False, False), zeros_diff_cols, _if_then_else(True, compare_blocks_cols, 3)), _if_then_else(or_(True, False), _if_then_else(False, _if_then_else(or_(True, False), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, 2, ones_diff_cols)), compare_blocks_cols), _if_then_else(True, 3, 2)))), _if_then_else(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(True, 0, ones_diff_cols), _if_then_else(True, 0, 4)), _if_then_else(or_(True, False), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, 2, ones_diff_cols))), _if_then_else(and_(and_(True, True), and_(True, False)), _if_then_else(ge(1, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, 2, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 3, ones_diff_rows))), _if_then_else(le(_if_then_else(False, compare_blocks_rows, ones_diff_rows), _if_then_else(True, 3, 2)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 4, _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, 4)))))))
ge(zeros_diff_cols, _if_then_else(and_(True, True), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 2, zeros_diff_rows)))
ge(_if_then_else(and_(le(3, zeros_diff_cols), ge(max_row_clue, 3)), _if_then_else(or_(False, False), _if_then_else(False, 2, 4), _if_then_else(False, max_row_clue, zeros_diff_cols)), _if_then_else(and_(False, False), _if_then_else(and_(False, False), zeros_diff_rows, max_row_clue), _if_then_else(True, 4, 0))), _if_then_else(True, 4, 0))
ge(_if_then_else(and_(True, True), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(or_(False, True), zeros_diff_rows, 0)), _if_then_else(le(4, compare_blocks_rows), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(True, 3, max_row_clue)))
or_(ge(_if_then_else(True, max_row_clue, 3), _if_then_else(True, zeros_diff_cols, 3)), or_(and_(False, False), or_(True, True)))
VAL TREES:
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_cols), add(mul(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), zeros_diff_cols)))
add(mul(mul(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), mul(add(mul(mul(mul(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_cols), add(add(ones_diff_cols, compare_blocks_cols), ones_diff_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, zeros_diff_cols))), compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, compare_blocks_cols), add(mul(add(mul(zeros_diff_cols, ones_diff_cols), mul(ones_diff_cols, add(zeros_diff_cols, zeros_diff_cols))), add(add(zeros_diff_rows, ones_diff_rows), add(mul(compare_blocks_cols, ones_diff_cols), compare_blocks_rows))), ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_rows)))
add(add(add(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)))
mul(mul(add(zeros_diff_cols, compare_blocks_cols), add(add(add(compare_blocks_cols, ones_diff_cols), ones_diff_rows), compare_blocks_cols)), mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(mul(ones_diff_cols, zeros_diff_cols), ones_diff_cols)), add(ones_diff_cols, zeros_diff_rows)))
mul(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), add(mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_cols))))
add(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), add(add(zeros_diff_cols, zeros_diff_cols), add(mul(add(compare_blocks_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_cols)))))
mul(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_cols), mul(add(mul(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_cols)), mul(mul(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)))))
COND TREES:
and_(and_(or_(True, False), or_(True, True)), and_(le(_if_then_else(or_(True, False), _if_then_else(True, max_row_clue, 2), zeros_diff_rows), _if_then_else(or_(or_(and_(True, False), False), False), _if_then_else(True, max_row_clue, 2), _if_then_else(False, max_col_clue, 1))), or_(le(0, 1), False)))
or_(or_(or_(False, False), True), ge(_if_then_else(ge(_if_then_else(True, 1, ones_diff_rows), _if_then_else(True, 3, 3)), compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, _if_then_else(False, 0, compare_blocks_rows))))
and_(or_(and_(le(_if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 3)), True), and_(or_(or_(True, False), or_(True, True)), ge(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, 4, 4)))), or_(or_(False, False), le(_if_then_else(ge(0, max_row_clue), _if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(False, 1, 1))))
ge(_if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(le(compare_blocks_rows, 2), ones_diff_rows, 2)), _if_then_else(le(max_row_clue, max_col_clue), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(True, 3, ones_diff_rows), 1), _if_then_else(or_(False, True), _if_then_else(True, max_col_clue, 0), _if_then_else(True, max_row_clue, 3))), _if_then_else(or_(le(ones_diff_cols, 0), and_(True, True)), _if_then_else(and_(False, False), zeros_diff_cols, _if_then_else(True, compare_blocks_cols, 3)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, 3, 2)))), _if_then_else(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(True, 0, ones_diff_cols), _if_then_else(True, 0, 4)), _if_then_else(or_(True, False), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, 2, ones_diff_cols))), _if_then_else(and_(and_(ge(_if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(True, ones_diff_rows, 2)), _if_then_else(le(max_row_clue, max_col_clue), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_cols))), True), and_(True, False)), _if_then_else(ge(1, zeros_diff_cols), _if_then_else(and_(True, True), ones_diff_cols, max_col_clue), _if_then_else(True, 2, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 3, ones_diff_rows))), _if_then_else(le(_if_then_else(False, compare_blocks_rows, ones_diff_rows), _if_then_else(True, 3, 2)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(and_(le(zeros_diff_rows, 0), ge(compare_blocks_cols, ones_diff_rows)), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 4, _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, 4)))))))
ge(_if_then_else(False, _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, ones_diff_rows, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(False, _if_then_else(False, ones_diff_rows, max_row_clue), ones_diff_cols), _if_then_else(False, 2, zeros_diff_rows)))
ge(_if_then_else(and_(le(3, max_row_clue), False), _if_then_else(or_(False, False), _if_then_else(False, 2, 4), _if_then_else(False, max_row_clue, zeros_diff_cols)), _if_then_else(and_(False, False), _if_then_else(and_(False, False), zeros_diff_rows, max_row_clue), _if_then_else(True, 4, 0))), 4)
ge(_if_then_else(and_(True, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, 0)), _if_then_else(le(4, compare_blocks_rows), _if_then_else(False, max_row_clue, max_row_clue), _if_then_else(True, 3, max_row_clue)))
or_(ge(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, zeros_diff_cols, 3)), False)
VAL TREES:
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)))
add(mul(mul(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_rows)))
mul(add(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_rows, ones_diff_cols)), add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols))), add(add(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(mul(add(zeros_diff_cols, compare_blocks_cols), add(add(add(compare_blocks_cols, ones_diff_cols), ones_diff_rows), compare_blocks_cols)), mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(mul(ones_diff_cols, zeros_diff_cols), ones_diff_cols)), add(ones_diff_cols, zeros_diff_rows)))
mul(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), add(mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_cols))))
add(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)))
mul(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, mul(ones_diff_cols, ones_diff_rows))))
COND TREES:
and_(and_(or_(True, False), or_(True, True)), and_(le(0, ones_diff_rows), or_(le(0, 1), False)))
or_(or_(or_(False, False), ge(_if_then_else(ge(_if_then_else(or_(False, False), _if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, max_col_clue, ones_diff_cols)), _if_then_else(and_(True, True), _if_then_else(True, 1, 4), _if_then_else(False, max_row_clue, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, max_col_clue)), _if_then_else(ge(1, compare_blocks_rows), _if_then_else(True, ones_diff_cols, zeros_diff_cols), _if_then_else(True, max_col_clue, zeros_diff_cols)), _if_then_else(ge(3, 0), _if_then_else(False, compare_blocks_cols, 2), _if_then_else(True, zeros_diff_rows, 0))), _if_then_else(or_(le(compare_blocks_cols, compare_blocks_rows), and_(True, False)), _if_then_else(ge(0, ones_diff_rows), _if_then_else(True, 0, zeros_diff_rows), _if_then_else(True, 4, max_col_clue)), _if_then_else(ge(ones_diff_cols, compare_blocks_rows), _if_then_else(False, ones_diff_rows, 1), _if_then_else(True, zeros_diff_cols, max_col_clue)))), _if_then_else(le(_if_then_else(le(max_col_clue, 4), _if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(False, 1, ones_diff_cols)), _if_then_else(le(zeros_diff_rows, zeros_diff_rows), _if_then_else(False, max_row_clue, 0), _if_then_else(True, max_col_clue, 4))), _if_then_else(le(_if_then_else(True, 1, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, max_col_clue)), _if_then_else(le(zeros_diff_rows, 0), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(False, zeros_diff_cols, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_cols, 4), _if_then_else(True, 1, 1))), _if_then_else(le(_if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, max_col_clue, 3)), _if_then_else(le(max_col_clue, 1), _if_then_else(False, max_row_clue, ones_diff_rows), _if_then_else(True, zeros_diff_cols, 3)), _if_then_else(le(max_col_clue, 1), _if_then_else(True, max_col_clue, ones_diff_rows), _if_then_else(True, ones_diff_rows, compare_blocks_rows)))))), ge(_if_then_else(ge(_if_then_else(True, 1, ones_diff_rows), _if_then_else(True, ones_diff_rows, 3)), compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, _if_then_else(False, 0, compare_blocks_rows))))
and_(or_(and_(le(_if_then_else(or_(False, False), ones_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 3)), le(_if_then_else(ge(zeros_diff_rows, ones_diff_rows), _if_then_else(True, 0, 1), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(3, max_col_clue), _if_then_else(False, ones_diff_cols, 1), _if_then_else(False, ones_diff_cols, max_col_clue)))), and_(or_(or_(True, False), or_(True, True)), ge(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, 4, 4)))), or_(or_(False, False), le(_if_then_else(ge(0, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(or_(or_(True, True), le(3, 3)), zeros_diff_rows, zeros_diff_rows)), _if_then_else(False, 1, 1))))
ge(_if_then_else(True, _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(True, 3, ones_diff_rows), 1), _if_then_else(or_(False, True), _if_then_else(True, max_col_clue, 0), _if_then_else(True, max_row_clue, 3))), _if_then_else(or_(le(ones_diff_cols, 0), and_(True, True)), _if_then_else(and_(False, False), zeros_diff_cols, _if_then_else(True, compare_blocks_cols, 3)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, 3, 2)))), _if_then_else(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(True, 0, ones_diff_cols), _if_then_else(True, 0, 4)), _if_then_else(or_(True, False), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, 2, ones_diff_cols))), _if_then_else(and_(and_(True, True), and_(True, False)), _if_then_else(ge(1, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, 2, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(le(_if_then_else(le(ones_diff_cols, compare_blocks_rows), 3, max_row_clue), _if_then_else(le(1, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, _if_then_else(False, zeros_diff_rows, ones_diff_cols)), compare_blocks_rows)), _if_then_else(and_(or_(False, False), ge(ones_diff_cols, 4)), _if_then_else(ge(compare_blocks_cols, zeros_diff_rows), compare_blocks_cols, ones_diff_cols), _if_then_else(True, 2, _if_then_else(False, 0, _if_then_else(True, 2, 2)))), _if_then_else(or_(or_(False, le(compare_blocks_rows, ones_diff_cols)), True), _if_then_else(True, _if_then_else(True, ones_diff_cols, compare_blocks_cols), 1), _if_then_else(True, _if_then_else(le(2, 2), 3, 2), compare_blocks_cols))), _if_then_else(False, 3, ones_diff_rows))), _if_then_else(le(_if_then_else(False, compare_blocks_rows, ones_diff_rows), _if_then_else(True, 3, 2)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 4, _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, 4)))))))
ge(_if_then_else(and_(False, True), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, ones_diff_rows, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(and_(False, True), 1, ones_diff_cols), _if_then_else(False, 2, zeros_diff_rows)))
ge(_if_then_else(and_(le(3, zeros_diff_cols), ge(max_row_clue, 3)), 1, _if_then_else(and_(False, False), _if_then_else(and_(False, False), zeros_diff_rows, max_row_clue), _if_then_else(True, 4, 0))), _if_then_else(le(_if_then_else(False, 1, max_row_clue), _if_then_else(False, 1, 1)), _if_then_else(ge(zeros_diff_cols, 0), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(True, 2, ones_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, 0, 4), _if_then_else(False, 1, max_row_clue))))
ge(_if_then_else(and_(True, True), _if_then_else(or_(and_(False, True), le(0, zeros_diff_cols)), _if_then_else(ge(zeros_diff_rows, 4), _if_then_else(True, ones_diff_rows, max_col_clue), _if_then_else(True, compare_blocks_cols, max_col_clue)), _if_then_else(or_(True, True), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, ones_diff_cols))), _if_then_else(True, zeros_diff_rows, 0)), _if_then_else(le(0, compare_blocks_rows), _if_then_else(False, max_row_clue, max_row_clue), _if_then_else(True, 3, max_row_clue)))
or_(or_(and_(False, False), or_(and_(or_(le(4, zeros_diff_rows), or_(True, False)), and_(and_(True, True), ge(3, 0))), ge(_if_then_else(ge(zeros_diff_rows, max_col_clue), _if_then_else(True, 1, 4), _if_then_else(False, ones_diff_cols, compare_blocks_cols)), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_cols, 3), _if_then_else(True, ones_diff_cols, max_row_clue))))), or_(and_(False, False), or_(True, True)))
VAL TREES:
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)))
add(mul(mul(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_rows)))
mul(add(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_rows, ones_diff_cols)), add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols))), add(add(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(mul(add(zeros_diff_cols, compare_blocks_cols), add(add(add(compare_blocks_cols, ones_diff_cols), ones_diff_rows), compare_blocks_cols)), mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(mul(ones_diff_cols, zeros_diff_cols), ones_diff_cols)), add(ones_diff_cols, zeros_diff_rows)))
mul(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), add(mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_cols))))
add(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)))
mul(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, mul(ones_diff_cols, ones_diff_rows))))
COND TREES:
and_(and_(or_(True, False), or_(True, True)), and_(le(max_row_clue, ones_diff_rows), or_(or_(ge(3, 1), le(_if_then_else(False, compare_blocks_cols, 4), _if_then_else(True, zeros_diff_cols, zeros_diff_cols))), or_(or_(True, and_(False, False)), ge(zeros_diff_cols, 0)))))
or_(or_(or_(False, False), le(compare_blocks_cols, max_row_clue)), ge(_if_then_else(ge(_if_then_else(True, 1, ones_diff_rows), _if_then_else(True, ones_diff_rows, 3)), compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, _if_then_else(False, 0, compare_blocks_rows))))
and_(or_(and_(le(_if_then_else(or_(False, False), ones_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 3)), or_(True, le(3, 3))), and_(or_(or_(True, False), or_(True, True)), ge(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, 4, 4)))), or_(or_(False, False), le(_if_then_else(ge(0, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(False, 1, 1))))
ge(_if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(True, ones_diff_rows, 2)), _if_then_else(le(max_row_clue, max_col_clue), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(True, 3, ones_diff_rows), 1), _if_then_else(or_(False, True), _if_then_else(True, max_col_clue, 0), _if_then_else(True, max_row_clue, 3))), _if_then_else(or_(le(ones_diff_cols, 0), and_(True, True)), _if_then_else(True, zeros_diff_cols, _if_then_else(True, compare_blocks_cols, 3)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, 3, 2)))), _if_then_else(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(True, 0, ones_diff_cols), _if_then_else(True, 0, 4)), _if_then_else(or_(True, False), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, 2, ones_diff_cols))), _if_then_else(and_(and_(True, True), and_(True, False)), _if_then_else(ge(1, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, 2, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 3, ones_diff_rows))), _if_then_else(le(_if_then_else(False, compare_blocks_rows, ones_diff_rows), _if_then_else(True, 3, 2)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, _if_then_else(ge(_if_then_else(False, _if_then_else(True, max_col_clue, compare_blocks_cols), _if_then_else(True, max_row_clue, 0)), _if_then_else(ge(1, compare_blocks_cols), compare_blocks_cols, max_row_clue)), _if_then_else(ge(3, _if_then_else(True, 0, 3)), _if_then_else(True, compare_blocks_rows, 0), _if_then_else(False, _if_then_else(False, max_row_clue, 1), _if_then_else(True, compare_blocks_cols, 2))), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_rows, _if_then_else(False, 4, 2)), _if_then_else(False, ones_diff_cols, max_row_clue))), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, 4)))))))
ge(_if_then_else(and_(False, True), _if_then_else(ge(_if_then_else(ge(ones_diff_cols, max_col_clue), _if_then_else(False, compare_blocks_cols, 0), _if_then_else(True, 3, 1)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(False, 4, ones_diff_rows))), _if_then_else(and_(ge(max_row_clue, compare_blocks_cols), and_(False, True)), _if_then_else(and_(True, True), _if_then_else(True, compare_blocks_rows, 4), _if_then_else(True, ones_diff_rows, max_row_clue)), _if_then_else(and_(False, False), _if_then_else(True, max_col_clue, 3), _if_then_else(True, compare_blocks_cols, max_row_clue))), _if_then_else(le(_if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, max_row_clue, zeros_diff_rows)), _if_then_else(ge(max_col_clue, compare_blocks_rows), _if_then_else(False, max_row_clue, 2), _if_then_else(True, compare_blocks_rows, 2)), _if_then_else(or_(True, True), _if_then_else(True, 4, 3), _if_then_else(False, ones_diff_cols, 1)))), _if_then_else(False, ones_diff_rows, max_row_clue)), _if_then_else(True, _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 2, zeros_diff_rows)))
ge(_if_then_else(and_(le(3, zeros_diff_cols), ge(max_row_clue, 3)), 1, _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(True, 4, 0))), _if_then_else(le(_if_then_else(False, 1, max_row_clue), _if_then_else(False, 1, 1)), _if_then_else(ge(zeros_diff_cols, 0), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(True, 2, ones_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, 0, 4), _if_then_else(False, 1, max_row_clue))))
ge(_if_then_else(and_(True, le(4, compare_blocks_rows)), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, 0)), _if_then_else(False, _if_then_else(ge(_if_then_else(False, ones_diff_rows, 3), _if_then_else(True, 1, max_row_clue)), _if_then_else(ge(4, ones_diff_cols), _if_then_else(True, _if_then_else(True, 4, 2), _if_then_else(ge(ones_diff_rows, 0), 1, 0)), _if_then_else(True, _if_then_else(le(ones_diff_rows, ones_diff_cols), ones_diff_rows, 3), zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, compare_blocks_cols), _if_then_else(False, _if_then_else(True, 3, _if_then_else(True, 2, 1)), zeros_diff_rows))), _if_then_else(True, 3, max_row_clue)))
or_(False, and_(False, True))
VAL TREES:
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)))
add(mul(mul(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_rows)))
mul(add(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_rows, ones_diff_cols)), add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols))), add(add(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(mul(add(zeros_diff_cols, compare_blocks_cols), add(add(add(compare_blocks_cols, ones_diff_cols), ones_diff_rows), compare_blocks_cols)), mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(mul(ones_diff_cols, zeros_diff_cols), ones_diff_cols)), add(ones_diff_cols, zeros_diff_rows)))
mul(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), add(mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_cols))))
add(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)))
mul(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, mul(ones_diff_cols, ones_diff_rows))))
COND TREES:
and_(and_(or_(True, False), or_(True, True)), and_(le(max_col_clue, 1), or_(le(0, 1), False)))
or_(or_(or_(False, False), le(compare_blocks_cols, max_row_clue)), ge(_if_then_else(ge(_if_then_else(True, 1, ones_diff_rows), _if_then_else(True, 3, 3)), compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, _if_then_else(False, 0, compare_blocks_rows))))
and_(or_(and_(le(_if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 3)), or_(or_(True, True), le(3, 3))), and_(or_(or_(True, False), or_(True, True)), ge(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, 4, 4)))), or_(or_(False, False), le(_if_then_else(ge(0, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(True, zeros_diff_rows, max_row_clue)), _if_then_else(False, 1, 1))))
ge(_if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(le(compare_blocks_rows, 2), ones_diff_rows, 2)), _if_then_else(le(max_row_clue, max_col_clue), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(True, 3, ones_diff_rows), 1), _if_then_else(or_(False, True), _if_then_else(True, max_col_clue, 0), _if_then_else(True, max_row_clue, 3))), _if_then_else(or_(le(ones_diff_cols, 0), and_(True, True)), _if_then_else(and_(False, False), zeros_diff_cols, _if_then_else(True, compare_blocks_cols, 3)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, 3, 2)))), _if_then_else(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(True, 0, ones_diff_cols), _if_then_else(True, 0, 4)), _if_then_else(or_(True, False), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, 2, ones_diff_cols))), _if_then_else(and_(and_(True, True), and_(True, False)), _if_then_else(ge(1, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, 2, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 3, ones_diff_rows))), _if_then_else(le(_if_then_else(False, compare_blocks_rows, ones_diff_rows), _if_then_else(True, 3, 2)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(and_(le(zeros_diff_rows, 0), ge(compare_blocks_cols, ones_diff_rows)), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 4, _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, 4)))))))
ge(_if_then_else(and_(False, True), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, ones_diff_rows, max_row_clue)), _if_then_else(and_(True, and_(True, True)), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, 2, zeros_diff_rows)))
ge(_if_then_else(and_(le(3, zeros_diff_cols), False), _if_then_else(or_(False, False), _if_then_else(False, 2, 4), _if_then_else(False, max_row_clue, zeros_diff_cols)), _if_then_else(and_(False, False), _if_then_else(and_(False, False), zeros_diff_rows, max_row_clue), _if_then_else(True, 4, 0))), 4)
ge(_if_then_else(and_(True, True), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, 0)), _if_then_else(True, _if_then_else(False, max_row_clue, max_row_clue), _if_then_else(True, 3, max_row_clue)))
or_(ge(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, zeros_diff_cols, 3)), or_(True, or_(True, True)))
VAL TREES:
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, mul(add(mul(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_rows, zeros_diff_cols))))), mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)))
add(mul(mul(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), mul(mul(add(add(add(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_cols, mul(ones_diff_cols, ones_diff_cols))), mul(add(zeros_diff_rows, mul(zeros_diff_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_rows), zeros_diff_cols))), ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, compare_blocks_cols), add(mul(add(add(mul(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols))), mul(add(mul(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows)), add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)))), add(add(mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, zeros_diff_cols))), add(mul(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows)), mul(mul(compare_blocks_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))))), ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_rows)))
mul(add(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_rows, ones_diff_cols)), add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols))), add(add(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(mul(add(zeros_diff_cols, mul(add(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols)))), add(add(add(compare_blocks_cols, ones_diff_cols), ones_diff_rows), compare_blocks_cols)), mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(mul(ones_diff_cols, zeros_diff_cols), ones_diff_cols)), add(ones_diff_cols, zeros_diff_rows)))
mul(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), add(mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_rows), mul(mul(mul(mul(add(ones_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_rows)), add(add(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_cols))), mul(add(add(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, zeros_diff_cols)), add(mul(zeros_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, ones_diff_cols)))), compare_blocks_cols))))
add(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), add(add(add(mul(mul(add(mul(compare_blocks_rows, ones_diff_cols), add(compare_blocks_rows, ones_diff_cols)), add(mul(ones_diff_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_rows))), add(mul(mul(zeros_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols)), add(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_cols)))), mul(mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols))), mul(mul(add(compare_blocks_cols, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), add(compare_blocks_rows, compare_blocks_rows))))), zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)))
mul(add(mul(compare_blocks_rows, compare_blocks_cols), mul(add(mul(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)))), mul(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, mul(ones_diff_cols, ones_diff_rows))))
COND TREES:
and_(and_(or_(True, False), or_(True, True)), and_(le(max_col_clue, _if_then_else(or_(or_(and_(True, False), False), False), _if_then_else(True, max_row_clue, 2), _if_then_else(False, 0, 1))), or_(le(0, 1), False)))
or_(or_(or_(False, False), le(compare_blocks_cols, max_row_clue)), ge(_if_then_else(ge(_if_then_else(True, 1, ones_diff_rows), _if_then_else(True, 3, 3)), compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, _if_then_else(False, 0, compare_blocks_rows))))
and_(or_(and_(le(_if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 3)), or_(or_(True, True), le(3, 3))), and_(or_(or_(True, False), or_(True, True)), ge(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, 4, 4)))), or_(or_(False, False), le(_if_then_else(ge(0, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(False, 1, 1))))
ge(_if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(le(compare_blocks_rows, 2), ones_diff_rows, 2)), _if_then_else(le(max_row_clue, max_col_clue), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(True, 3, ones_diff_rows), 1), _if_then_else(or_(False, True), _if_then_else(True, max_col_clue, 0), _if_then_else(True, max_row_clue, 3))), _if_then_else(or_(le(ones_diff_cols, 0), and_(True, True)), _if_then_else(and_(False, False), zeros_diff_cols, _if_then_else(True, compare_blocks_cols, 3)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, 3, 2)))), _if_then_else(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(True, 0, ones_diff_cols), _if_then_else(True, 0, 4)), _if_then_else(or_(True, False), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, 2, ones_diff_cols))), _if_then_else(and_(and_(True, True), and_(True, False)), _if_then_else(ge(1, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, 2, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 3, ones_diff_rows))), _if_then_else(le(_if_then_else(False, compare_blocks_rows, ones_diff_rows), _if_then_else(True, 3, 2)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(and_(le(zeros_diff_rows, 0), ge(compare_blocks_cols, ones_diff_rows)), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 4, _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, 4)))))))
ge(_if_then_else(and_(False, True), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, ones_diff_rows, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, 2, zeros_diff_rows)))
ge(_if_then_else(and_(le(3, zeros_diff_cols), False), _if_then_else(or_(False, False), _if_then_else(False, 2, 4), _if_then_else(False, max_row_clue, zeros_diff_cols)), _if_then_else(and_(False, False), _if_then_else(and_(False, False), zeros_diff_rows, max_row_clue), _if_then_else(True, 4, 0))), 4)
ge(_if_then_else(and_(True, True), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, 0)), _if_then_else(le(4, compare_blocks_rows), _if_then_else(False, max_row_clue, max_row_clue), _if_then_else(True, 3, max_row_clue)))
or_(ge(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, zeros_diff_cols, 3)), or_(and_(False, True), or_(True, True)))
VAL TREES:
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)))
add(mul(mul(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_rows)))
mul(add(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_rows, ones_diff_cols)), add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols))), add(add(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(mul(add(zeros_diff_cols, compare_blocks_cols), add(add(add(compare_blocks_cols, ones_diff_cols), ones_diff_rows), compare_blocks_cols)), mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(mul(ones_diff_cols, zeros_diff_cols), ones_diff_cols)), add(ones_diff_cols, zeros_diff_rows)))
mul(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), add(mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_cols))))
add(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)))
mul(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, mul(ones_diff_cols, ones_diff_rows))))
COND TREES:
and_(and_(or_(True, False), or_(True, True)), and_(le(ones_diff_rows, ones_diff_rows), or_(le(0, 1), False)))
or_(or_(or_(False, False), le(compare_blocks_cols, max_row_clue)), ge(_if_then_else(ge(_if_then_else(True, 1, ones_diff_rows), _if_then_else(True, ones_diff_rows, 3)), compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, _if_then_else(False, 0, compare_blocks_rows))))
and_(or_(and_(le(_if_then_else(or_(False, False), ones_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 3)), or_(True, le(4, 3))), and_(or_(or_(True, False), or_(True, True)), ge(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, 4, 4)))), or_(or_(False, False), le(_if_then_else(ge(0, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(False, 1, 1))))
ge(_if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(True, ones_diff_rows, 2)), _if_then_else(le(max_row_clue, max_col_clue), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(True, 3, ones_diff_rows), 1), _if_then_else(or_(False, True), _if_then_else(True, max_col_clue, 0), _if_then_else(True, max_row_clue, 3))), _if_then_else(or_(le(ones_diff_cols, 0), and_(True, True)), _if_then_else(and_(False, False), zeros_diff_cols, _if_then_else(True, compare_blocks_cols, 3)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, 3, 2)))), _if_then_else(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(True, 0, ones_diff_cols), _if_then_else(True, 0, 4)), _if_then_else(or_(True, False), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, 2, ones_diff_cols))), _if_then_else(and_(and_(True, True), and_(True, False)), _if_then_else(ge(1, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, 2, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 3, ones_diff_rows))), _if_then_else(le(_if_then_else(False, compare_blocks_rows, ones_diff_rows), _if_then_else(True, 3, 2)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 4, _if_then_else(and_(True, True), _if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(True, 0, 4)))))))
ge(_if_then_else(and_(False, True), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, ones_diff_rows, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 2, zeros_diff_rows)))
ge(_if_then_else(and_(le(3, zeros_diff_cols), ge(max_row_clue, 3)), 1, _if_then_else(and_(False, False), _if_then_else(and_(False, False), zeros_diff_rows, max_row_clue), _if_then_else(True, 4, 0))), _if_then_else(le(_if_then_else(False, 1, max_row_clue), _if_then_else(False, 1, 1)), _if_then_else(ge(zeros_diff_cols, 0), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(True, 2, ones_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, 0, 4), _if_then_else(False, 1, max_row_clue))))
ge(_if_then_else(and_(True, True), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, 0)), _if_then_else(le(4, compare_blocks_rows), _if_then_else(False, max_row_clue, max_row_clue), _if_then_else(True, 3, max_row_clue)))
or_(False, or_(and_(False, False), or_(ge(max_col_clue, ones_diff_rows), True)))
VAL TREES:
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)))
add(mul(mul(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_rows)))
mul(add(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_rows, ones_diff_cols)), add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols))), add(add(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows))))
add(mul(add(compare_blocks_rows, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)), add(mul(ones_diff_cols, zeros_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))
mul(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), add(mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_cols))))
add(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)))
mul(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, mul(ones_diff_cols, ones_diff_rows))))
COND TREES:
and_(and_(or_(True, False), or_(True, True)), and_(le(_if_then_else(or_(True, False), _if_then_else(True, max_row_clue, 2), zeros_diff_rows), _if_then_else(or_(or_(and_(True, False), False), False), _if_then_else(True, max_row_clue, 2), _if_then_else(False, 0, 1))), and_(le(_if_then_else(or_(True, False), _if_then_else(True, max_row_clue, 2), zeros_diff_rows), _if_then_else(or_(or_(and_(True, False), False), False), _if_then_else(True, max_row_clue, 2), _if_then_else(False, 0, 1))), or_(le(0, 1), False))))
or_(ge(_if_then_else(ge(_if_then_else(True, 1, ones_diff_rows), _if_then_else(True, 3, 3)), compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, _if_then_else(False, 0, compare_blocks_rows))), ge(_if_then_else(ge(_if_then_else(True, 1, ones_diff_rows), _if_then_else(True, 3, 3)), compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, _if_then_else(False, 0, compare_blocks_rows))))
and_(or_(and_(le(_if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 3)), or_(or_(True, True), le(3, 3))), and_(or_(or_(True, False), or_(True, True)), ge(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, 4, 4)))), or_(or_(False, False), le(_if_then_else(ge(0, max_row_clue), _if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(False, 1, 1))))
ge(_if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(le(compare_blocks_rows, 2), ones_diff_rows, 2)), _if_then_else(le(max_row_clue, max_col_clue), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(True, 3, ones_diff_rows), 1), _if_then_else(or_(False, True), _if_then_else(True, max_col_clue, 0), _if_then_else(True, max_row_clue, 3))), _if_then_else(or_(le(ones_diff_cols, 0), and_(True, True)), _if_then_else(and_(False, False), zeros_diff_cols, _if_then_else(True, compare_blocks_cols, 3)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, 3, 2)))), _if_then_else(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(True, 0, ones_diff_cols), _if_then_else(True, 0, 4)), _if_then_else(or_(True, False), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, 2, ones_diff_cols))), _if_then_else(and_(and_(True, True), and_(True, False)), _if_then_else(ge(1, zeros_diff_cols), _if_then_else(and_(True, True), ones_diff_cols, max_col_clue), _if_then_else(True, 2, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 3, ones_diff_rows))), _if_then_else(le(_if_then_else(False, compare_blocks_rows, ones_diff_rows), _if_then_else(True, 3, 2)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(and_(le(zeros_diff_rows, 0), ge(compare_blocks_cols, ones_diff_rows)), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 4, _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, 4)))))))
ge(_if_then_else(and_(False, True), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, ones_diff_rows, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(False, _if_then_else(False, ones_diff_rows, max_row_clue), ones_diff_cols), _if_then_else(False, 2, zeros_diff_rows)))
ge(_if_then_else(and_(le(3, max_row_clue), False), _if_then_else(or_(False, False), _if_then_else(False, 2, 4), _if_then_else(False, max_row_clue, zeros_diff_cols)), _if_then_else(and_(False, False), _if_then_else(and_(False, False), zeros_diff_rows, max_row_clue), _if_then_else(True, _if_then_else(and_(le(3, max_row_clue), False), _if_then_else(or_(False, False), _if_then_else(False, 2, 4), _if_then_else(False, max_row_clue, zeros_diff_cols)), _if_then_else(and_(False, False), _if_then_else(and_(False, False), zeros_diff_rows, max_row_clue), _if_then_else(True, 4, 0))), 0))), 4)
ge(_if_then_else(and_(True, True), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, 0)), _if_then_else(le(4, compare_blocks_rows), _if_then_else(False, max_row_clue, max_row_clue), _if_then_else(True, 3, max_row_clue)))
or_(ge(_if_then_else(False, zeros_diff_cols, max_col_clue), _if_then_else(True, zeros_diff_cols, 3)), or_(and_(False, False), or_(True, True)))
VAL TREES:
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)))
add(mul(mul(add(add(mul(zeros_diff_cols, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols))), ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_rows)))
mul(add(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_rows, ones_diff_cols)), add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols))), add(add(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(mul(add(zeros_diff_cols, compare_blocks_cols), add(add(add(compare_blocks_cols, ones_diff_cols), ones_diff_rows), compare_blocks_cols)), mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(mul(ones_diff_cols, zeros_diff_cols), ones_diff_cols)), add(ones_diff_cols, zeros_diff_rows)))
mul(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), add(mul(mul(ones_diff_cols, zeros_diff_rows), mul(mul(add(mul(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows)), add(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_cols))), mul(add(add(compare_blocks_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), mul(add(compare_blocks_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows))))), mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_cols))))
add(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), add(add(mul(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows)), add(add(zeros_diff_rows, ones_diff_cols), mul(compare_blocks_rows, compare_blocks_cols))), add(ones_diff_rows, compare_blocks_cols)))
mul(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, mul(ones_diff_cols, ones_diff_rows))))
COND TREES:
and_(and_(or_(True, False), or_(True, True)), or_(le(0, 1), False))
or_(or_(or_(False, False), True), or_(or_(False, False), True))
and_(or_(and_(le(_if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 3)), or_(or_(True, True), le(3, 3))), and_(or_(or_(True, False), or_(True, True)), ge(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, 4, 4)))), or_(or_(False, False), le(_if_then_else(ge(0, max_row_clue), _if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(False, 1, 1))))
ge(_if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(le(compare_blocks_rows, 2), ones_diff_rows, 2)), _if_then_else(le(max_row_clue, max_col_clue), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(True, 3, ones_diff_rows), 1), _if_then_else(or_(False, True), _if_then_else(True, max_col_clue, 0), _if_then_else(True, max_row_clue, 3))), _if_then_else(or_(le(ones_diff_cols, 0), and_(True, True)), _if_then_else(and_(False, False), zeros_diff_cols, _if_then_else(True, compare_blocks_cols, 3)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, 3, 2)))), _if_then_else(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(True, 0, ones_diff_cols), _if_then_else(True, 0, 4)), _if_then_else(or_(True, False), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, 2, ones_diff_cols))), _if_then_else(and_(and_(True, True), and_(True, False)), _if_then_else(ge(1, zeros_diff_cols), _if_then_else(and_(True, True), ones_diff_cols, max_col_clue), _if_then_else(True, 2, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 3, ones_diff_rows))), _if_then_else(le(_if_then_else(False, compare_blocks_rows, ones_diff_rows), _if_then_else(True, 3, 2)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(and_(le(zeros_diff_rows, 0), ge(compare_blocks_cols, ones_diff_rows)), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 4, _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, 4)))))))
ge(_if_then_else(and_(False, True), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, ones_diff_rows, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(False, _if_then_else(False, ones_diff_rows, max_row_clue), ones_diff_cols), _if_then_else(False, 2, zeros_diff_rows)))
ge(4, 4)
ge(_if_then_else(and_(True, True), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, 0)), _if_then_else(le(4, compare_blocks_rows), _if_then_else(False, max_row_clue, max_row_clue), _if_then_else(True, 3, max_row_clue)))
or_(ge(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, max_row_clue, 3)), or_(and_(False, False), or_(True, True)))
VAL TREES:
mul(mul(mul(ones_diff_rows, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, mul(ones_diff_rows, compare_blocks_cols))))
add(mul(mul(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, compare_blocks_cols), add(add(mul(mul(mul(zeros_diff_cols, compare_blocks_cols), compare_blocks_cols), add(mul(add(ones_diff_rows, zeros_diff_cols), ones_diff_rows), compare_blocks_cols)), add(add(mul(zeros_diff_cols, ones_diff_rows), ones_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), zeros_diff_rows))), ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_rows)))
mul(add(add(add(add(compare_blocks_cols, zeros_diff_rows), mul(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, add(add(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))))), add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols))), add(add(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(mul(add(zeros_diff_cols, compare_blocks_cols), mul(mul(add(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), mul(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows))), mul(add(mul(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), mul(add(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_rows))))), mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(mul(ones_diff_cols, zeros_diff_cols), ones_diff_cols)), add(ones_diff_cols, zeros_diff_rows)))
mul(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), add(mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(mul(zeros_diff_cols, add(add(add(compare_blocks_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), add(add(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_cols, ones_diff_rows)))), mul(ones_diff_cols, compare_blocks_cols))))
add(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)))
mul(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, add(add(mul(ones_diff_rows, compare_blocks_rows), mul(add(zeros_diff_cols, ones_diff_rows), mul(compare_blocks_rows, compare_blocks_cols))), add(mul(add(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_cols, ones_diff_cols)), mul(zeros_diff_rows, ones_diff_cols))))))
COND TREES:
and_(and_(le(zeros_diff_rows, 2), or_(True, True)), and_(le(max_col_clue, _if_then_else(or_(True, False), 0, _if_then_else(True, 0, 1))), or_(le(0, 1), False)))
or_(or_(or_(False, False), le(compare_blocks_cols, max_row_clue)), ge(_if_then_else(ge(ones_diff_rows, _if_then_else(True, 3, 3)), compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, zeros_diff_rows)))
and_(or_(and_(le(_if_then_else(and_(True, True), ones_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 3)), or_(or_(True, True), le(3, 3))), and_(or_(or_(True, False), True), ge(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, 4, 3)))), or_(or_(False, False), le(_if_then_else(ge(0, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(False, 1, 1))))
ge(_if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(True, ones_diff_rows, 2)), _if_then_else(le(max_row_clue, max_col_clue), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_cols))), max_col_clue, _if_then_else(or_(le(ones_diff_cols, 0), and_(True, True)), _if_then_else(and_(False, False), zeros_diff_cols, _if_then_else(False, 1, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, _if_then_else(True, max_col_clue, 0)), _if_then_else(True, 3, 2)))), _if_then_else(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(True, 0, ones_diff_cols), _if_then_else(True, 0, 4)), _if_then_else(or_(True, False), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, 2, ones_diff_cols))), _if_then_else(and_(and_(True, True), and_(True, False)), _if_then_else(ge(1, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, 2, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 3, ones_diff_rows))), _if_then_else(le(_if_then_else(False, compare_blocks_rows, ones_diff_rows), _if_then_else(True, 3, 2)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 4, _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, 4)))))))
ge(_if_then_else(False, _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, ones_diff_rows, _if_then_else(True, ones_diff_cols, 3))), _if_then_else(and_(True, True), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(False, 4, zeros_diff_rows)), zeros_diff_rows)))
ge(_if_then_else(or_(False, False), _if_then_else(True, compare_blocks_cols, 3), 1), _if_then_else(le(_if_then_else(False, 1, max_row_clue), _if_then_else(False, 1, 1)), _if_then_else(ge(zeros_diff_cols, 0), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(True, 2, ones_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, 0, 1), _if_then_else(False, 1, max_row_clue))))
ge(_if_then_else(and_(True, True), _if_then_else(False, 1, zeros_diff_rows), zeros_diff_rows), _if_then_else(le(4, 1), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(False, 3, max_row_clue)))
or_(False, True)
VAL TREES:
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_cols), add(add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(ones_diff_rows, ones_diff_cols), ones_diff_rows)), mul(mul(zeros_diff_cols, add(add(ones_diff_rows, compare_blocks_cols), compare_blocks_rows)), mul(zeros_diff_rows, ones_diff_rows))), zeros_diff_cols)))
add(mul(mul(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(add(add(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols)), add(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_rows))), add(mul(mul(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, zeros_diff_rows)))), compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_rows)))
mul(add(add(mul(ones_diff_cols, compare_blocks_rows), add(add(add(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, ones_diff_cols)), add(mul(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_rows))), ones_diff_cols)), add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols))), add(add(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(mul(add(zeros_diff_cols, compare_blocks_cols), add(add(add(compare_blocks_cols, ones_diff_cols), ones_diff_rows), compare_blocks_cols)), mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(mul(ones_diff_cols, zeros_diff_cols), ones_diff_cols)), add(ones_diff_cols, zeros_diff_rows)))
mul(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), add(mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_cols))))
add(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)))
mul(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, mul(ones_diff_cols, ones_diff_rows))))
COND TREES:
and_(and_(or_(True, False), or_(True, True)), and_(le(_if_then_else(or_(True, False), _if_then_else(True, max_row_clue, 2), zeros_diff_rows), _if_then_else(or_(or_(and_(True, False), False), False), _if_then_else(True, max_row_clue, 2), _if_then_else(False, 0, 1))), or_(le(_if_then_else(True, max_row_clue, 1), 1), False)))
or_(or_(or_(False, False), True), ge(_if_then_else(ge(_if_then_else(True, 1, _if_then_else(True, 1, ones_diff_rows)), _if_then_else(True, 3, 3)), compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, _if_then_else(False, 0, compare_blocks_rows))))
and_(or_(and_(le(_if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 3)), or_(or_(True, or_(True, True)), le(3, 3))), and_(or_(or_(True, False), or_(True, True)), ge(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, 4, 4)))), or_(or_(False, False), le(_if_then_else(ge(0, max_row_clue), _if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(False, 1, 1))))
ge(_if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(le(compare_blocks_rows, 2), ones_diff_rows, 2)), _if_then_else(le(max_row_clue, _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(True, 3, ones_diff_rows), 1), _if_then_else(or_(False, True), _if_then_else(True, max_col_clue, 0), _if_then_else(True, max_row_clue, 3)))), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(True, 3, ones_diff_rows), 1), _if_then_else(or_(False, True), _if_then_else(True, max_col_clue, 0), _if_then_else(True, max_row_clue, 3))), _if_then_else(or_(le(ones_diff_cols, 0), and_(True, True)), _if_then_else(and_(False, False), zeros_diff_cols, _if_then_else(True, compare_blocks_cols, 3)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, 3, 2)))), _if_then_else(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(True, 0, ones_diff_cols), _if_then_else(True, 0, 4)), _if_then_else(or_(True, False), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, 2, ones_diff_cols))), _if_then_else(and_(and_(True, True), and_(True, False)), _if_then_else(ge(1, zeros_diff_cols), _if_then_else(and_(True, True), ones_diff_cols, max_col_clue), _if_then_else(True, 2, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 3, ones_diff_rows))), _if_then_else(le(_if_then_else(False, compare_blocks_rows, ones_diff_rows), _if_then_else(True, 3, 2)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(and_(le(zeros_diff_rows, 0), ge(compare_blocks_cols, ones_diff_rows)), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 4, _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, 4)))))))
ge(_if_then_else(and_(False, True), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, ones_diff_rows, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(False, _if_then_else(False, ones_diff_rows, max_row_clue), ones_diff_cols), _if_then_else(and_(and_(True, True), True), 2, zeros_diff_rows)))
ge(_if_then_else(and_(le(3, max_row_clue), False), _if_then_else(or_(False, False), _if_then_else(False, 2, 4), _if_then_else(False, max_row_clue, zeros_diff_cols)), _if_then_else(and_(False, False), _if_then_else(and_(False, False), zeros_diff_rows, max_row_clue), _if_then_else(True, 4, 0))), 4)
ge(_if_then_else(and_(True, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, 0)), _if_then_else(le(4, compare_blocks_rows), _if_then_else(False, max_row_clue, max_row_clue), _if_then_else(True, 3, max_row_clue)))
or_(ge(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, zeros_diff_cols, 3)), or_(and_(False, False), or_(True, True)))
VAL TREES:
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)))
add(mul(mul(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_rows)))
mul(add(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_rows, ones_diff_cols)), add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols))), add(add(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(mul(add(zeros_diff_cols, compare_blocks_cols), add(add(add(compare_blocks_cols, ones_diff_cols), ones_diff_rows), compare_blocks_cols)), mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(mul(ones_diff_cols, zeros_diff_cols), ones_diff_cols)), add(ones_diff_cols, zeros_diff_rows)))
mul(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), add(mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_cols))))
add(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)))
mul(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, mul(ones_diff_cols, ones_diff_rows))))
COND TREES:
and_(and_(or_(True, False), or_(True, True)), and_(le(_if_then_else(or_(True, False), _if_then_else(True, max_row_clue, 2), zeros_diff_rows), _if_then_else(or_(or_(and_(True, False), False), False), _if_then_else(True, max_row_clue, 2), _if_then_else(False, 0, 1))), or_(le(0, 1), False)))
or_(or_(or_(False, False), True), ge(_if_then_else(ge(_if_then_else(True, 1, ones_diff_rows), _if_then_else(True, 3, 3)), compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, _if_then_else(False, 0, compare_blocks_rows))))
and_(or_(and_(le(_if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 3)), or_(or_(True, True), le(3, 3))), and_(or_(or_(True, False), or_(True, True)), ge(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, 4, 4)))), or_(or_(False, False), le(_if_then_else(ge(0, max_row_clue), _if_then_else(and_(or_(or_(True, False), or_(True, True)), ge(_if_then_else(False, 1, compare_blocks_cols), _if_then_else(True, 4, 4))), max_col_clue, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(False, 1, 1))))
ge(_if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(le(compare_blocks_rows, 2), ones_diff_rows, 2)), _if_then_else(le(max_row_clue, max_col_clue), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(True, 3, ones_diff_rows), 1), _if_then_else(or_(False, True), _if_then_else(True, max_col_clue, 0), _if_then_else(True, max_row_clue, 3))), _if_then_else(or_(le(ones_diff_cols, 0), and_(True, True)), _if_then_else(and_(False, False), zeros_diff_cols, _if_then_else(True, compare_blocks_cols, 3)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, 3, 2)))), _if_then_else(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(True, 0, ones_diff_cols), _if_then_else(True, 0, 4)), _if_then_else(or_(True, False), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, 3, ones_diff_cols))), _if_then_else(and_(and_(True, True), and_(True, False)), _if_then_else(ge(1, zeros_diff_cols), _if_then_else(and_(True, True), ones_diff_cols, max_col_clue), _if_then_else(True, 2, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 3, ones_diff_rows))), _if_then_else(le(_if_then_else(False, compare_blocks_rows, ones_diff_rows), _if_then_else(True, 3, 2)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(and_(le(zeros_diff_rows, 0), ge(compare_blocks_cols, ones_diff_rows)), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 4, _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, 4)))))))
ge(_if_then_else(and_(False, True), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, ones_diff_rows, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(False, _if_then_else(False, ones_diff_rows, max_row_clue), ones_diff_cols), _if_then_else(False, 2, zeros_diff_rows)))
ge(_if_then_else(and_(le(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(True, max_row_clue, compare_blocks_cols)), or_(and_(True, True), and_(False, True))), _if_then_else(or_(False, False), _if_then_else(False, 2, 4), _if_then_else(False, max_row_clue, zeros_diff_cols)), _if_then_else(and_(False, False), _if_then_else(and_(False, False), zeros_diff_rows, max_row_clue), _if_then_else(True, 4, 0))), 4)
ge(_if_then_else(and_(True, True), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, max_row_clue, max_row_clue)), _if_then_else(le(4, compare_blocks_rows), _if_then_else(False, max_row_clue, max_row_clue), _if_then_else(True, 3, max_row_clue)))
or_(ge(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, zeros_diff_cols, 3)), or_(and_(False, False), or_(ge(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, zeros_diff_cols, 3)), True)))
VAL TREES:
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)))
add(mul(mul(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_rows)))
mul(add(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_rows, ones_diff_cols)), add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols))), add(add(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(mul(add(zeros_diff_cols, compare_blocks_cols), add(add(add(compare_blocks_cols, ones_diff_cols), ones_diff_rows), compare_blocks_cols)), mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(mul(ones_diff_cols, zeros_diff_cols), ones_diff_cols)), add(ones_diff_cols, zeros_diff_rows)))
mul(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), add(mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_cols))))
add(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)))
mul(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, mul(ones_diff_cols, ones_diff_rows))))
COND TREES:
and_(and_(or_(True, False), or_(True, True)), and_(le(max_col_clue, _if_then_else(or_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(False, 0, 1))), or_(le(0, 1), False)))
or_(or_(or_(False, False), le(compare_blocks_cols, max_row_clue)), ge(_if_then_else(ge(0, _if_then_else(True, 3, 3)), compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, _if_then_else(False, 0, compare_blocks_rows))))
and_(or_(and_(le(_if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 3)), or_(ge(3, 3), le(3, 3))), False), or_(or_(False, False), le(_if_then_else(ge(0, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(False, 1, 1))))
ge(_if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(True, ones_diff_rows, 2)), _if_then_else(le(max_row_clue, max_col_clue), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(True, 4, ones_diff_rows), 1), _if_then_else(True, _if_then_else(True, max_col_clue, 0), _if_then_else(True, max_row_clue, 3))), _if_then_else(or_(le(ones_diff_cols, 0), and_(True, True)), _if_then_else(and_(False, False), zeros_diff_cols, _if_then_else(True, compare_blocks_cols, 2)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, 3, 2)))), _if_then_else(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(True, 0, ones_diff_cols), _if_then_else(True, 0, 4)), _if_then_else(or_(True, False), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, 2, ones_diff_cols))), _if_then_else(and_(and_(True, True), and_(True, False)), _if_then_else(ge(1, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, 2, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 3, ones_diff_rows))), _if_then_else(le(_if_then_else(False, compare_blocks_rows, ones_diff_rows), _if_then_else(True, 3, 2)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(and_(le(zeros_diff_rows, 0), ge(compare_blocks_cols, ones_diff_rows)), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 4, _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, 4)))))))
ge(_if_then_else(and_(False, True), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, ones_diff_rows, 4)), _if_then_else(and_(ge(zeros_diff_rows, zeros_diff_rows), True), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 2, zeros_diff_rows)))
ge(_if_then_else(and_(le(3, zeros_diff_cols), ge(max_row_clue, 3)), _if_then_else(or_(and_(and_(and_(le(3, max_row_clue), False), True), ge(2, 3)), False), _if_then_else(False, 2, 4), _if_then_else(False, max_row_clue, zeros_diff_cols)), _if_then_else(and_(False, False), _if_then_else(and_(False, True), zeros_diff_rows, max_row_clue), _if_then_else(True, 4, 0))), 4)
ge(_if_then_else(and_(True, True), _if_then_else(le(compare_blocks_rows, zeros_diff_cols), 1, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, 0)), _if_then_else(le(4, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, 0), _if_then_else(True, 3, max_row_clue)))
or_(True, or_(and_(False, False), or_(True, True)))
VAL TREES:
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)))
add(mul(mul(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_rows)))
mul(add(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_rows, ones_diff_cols)), add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols))), add(add(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(mul(add(zeros_diff_cols, compare_blocks_cols), add(add(add(compare_blocks_cols, ones_diff_cols), ones_diff_rows), compare_blocks_cols)), mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(mul(ones_diff_cols, zeros_diff_cols), ones_diff_cols)), add(ones_diff_cols, zeros_diff_rows)))
mul(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), add(mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_cols))))
add(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)))
mul(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, mul(ones_diff_cols, ones_diff_rows))))
COND TREES:
and_(and_(or_(True, False), or_(True, True)), and_(le(max_col_clue, _if_then_else(or_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(ge(max_col_clue, ones_diff_rows), 0, 1))), or_(le(0, 1), False)))
or_(True, ge(_if_then_else(ge(_if_then_else(True, 1, ones_diff_rows), _if_then_else(True, 3, 3)), compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, _if_then_else(False, 0, compare_blocks_rows))))
and_(and_(le(_if_then_else(or_(False, False), ones_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 3)), or_(True, le(3, 3))), False)
ge(_if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(True, ones_diff_rows, 2)), _if_then_else(le(max_row_clue, max_col_clue), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(True, 3, ones_diff_rows), 1), _if_then_else(or_(False, True), _if_then_else(True, max_col_clue, 0), _if_then_else(True, max_row_clue, 3))), _if_then_else(or_(le(ones_diff_cols, 0), and_(True, True)), _if_then_else(and_(False, False), zeros_diff_cols, _if_then_else(True, compare_blocks_cols, 3)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, 3, 2)))), _if_then_else(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(True, 0, ones_diff_cols), _if_then_else(False, 0, 4)), _if_then_else(or_(True, False), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, 2, ones_diff_cols))), _if_then_else(and_(and_(True, True), and_(True, False)), _if_then_else(ge(1, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, 2, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 3, ones_diff_rows))), _if_then_else(le(_if_then_else(False, compare_blocks_rows, ones_diff_rows), _if_then_else(True, 3, 2)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 4, _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, 4)))))))
ge(_if_then_else(and_(False, True), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 0, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 2, zeros_diff_rows)))
ge(_if_then_else(and_(le(3, zeros_diff_cols), ge(max_row_clue, 3)), _if_then_else(or_(False, False), _if_then_else(False, 2, 4), _if_then_else(True, max_row_clue, zeros_diff_cols)), _if_then_else(and_(False, False), _if_then_else(and_(False, False), zeros_diff_rows, 0), _if_then_else(True, 4, 0))), _if_then_else(le(_if_then_else(le(zeros_diff_rows, 2), 1, max_row_clue), _if_then_else(False, 1, 1)), _if_then_else(False, _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(True, 2, ones_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, 0, 1), _if_then_else(False, 1, max_row_clue))))
ge(_if_then_else(and_(True, True), _if_then_else(False, 1, _if_then_else(True, zeros_diff_rows, 4)), _if_then_else(False, zeros_diff_rows, 0)), _if_then_else(True, _if_then_else(False, max_row_clue, max_row_clue), _if_then_else(False, 3, max_row_clue)))
or_(True, or_(and_(False, False), or_(True, True)))
VAL TREES:
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)))
add(mul(mul(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_rows)))
mul(add(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_rows, ones_diff_cols)), add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols))), add(add(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(mul(add(zeros_diff_cols, compare_blocks_cols), add(add(add(compare_blocks_cols, ones_diff_cols), ones_diff_rows), compare_blocks_cols)), mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(mul(ones_diff_cols, zeros_diff_cols), ones_diff_cols)), add(ones_diff_cols, zeros_diff_rows)))
mul(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), add(mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_cols))))
add(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)))
mul(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, mul(ones_diff_cols, ones_diff_rows))))
COND TREES:
ge(_if_then_else(and_(True, True), _if_then_else(and_(ge(max_col_clue, ones_diff_rows), and_(True, False)), compare_blocks_rows, max_col_clue), _if_then_else(True, max_col_clue, 4)), _if_then_else(ge(_if_then_else(False, _if_then_else(False, compare_blocks_cols, compare_blocks_cols), zeros_diff_rows), 3), _if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(True, zeros_diff_rows, ones_diff_rows)))
or_(le(_if_then_else(ge(_if_then_else(True, 1, compare_blocks_cols), _if_then_else(False, max_row_clue, 1)), _if_then_else(or_(True, False), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, 2, max_col_clue)), _if_then_else(le(0, compare_blocks_rows), _if_then_else(True, ones_diff_rows, ones_diff_rows), _if_then_else(False, 2, ones_diff_rows))), _if_then_else(le(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, zeros_diff_rows)), _if_then_else(ge(1, max_col_clue), _if_then_else(True, 4, ones_diff_rows), _if_then_else(ge(zeros_diff_cols, zeros_diff_rows), 0, compare_blocks_rows)), _if_then_else(and_(True, False), _if_then_else(True, 0, max_row_clue), _if_then_else(True, zeros_diff_rows, compare_blocks_rows)))), ge(_if_then_else(le(_if_then_else(False, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, max_row_clue, ones_diff_cols)), _if_then_else(ge(4, 4), _if_then_else(False, 3, max_col_clue), _if_then_else(False, zeros_diff_rows, ones_diff_cols)), _if_then_else(or_(True, False), _if_then_else(True, 2, 3), compare_blocks_cols)), _if_then_else(and_(le(0, zeros_diff_rows), le(compare_blocks_rows, max_row_clue)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 4, 1)), _if_then_else(or_(True, True), _if_then_else(True, 0, compare_blocks_rows), _if_then_else(False, 0, max_col_clue)))))
ge(_if_then_else(ge(3, 1), _if_then_else(and_(or_(ge(_if_then_else(False, 3, 0), ones_diff_rows), False), True), 2, max_col_clue), _if_then_else(True, 1, _if_then_else(or_(True, and_(le(_if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 3)), or_(True, le(3, 3)))), zeros_diff_cols, zeros_diff_rows))), _if_then_else(or_(False, True), _if_then_else(True, _if_then_else(False, 3, 4), 0), _if_then_else(and_(True, False), 4, 3)))
le(_if_then_else(True, 4, max_col_clue), _if_then_else(or_(True, True), _if_then_else(False, 3, max_row_clue), _if_then_else(True, 0, compare_blocks_rows)))
or_(ge(_if_then_else(False, 0, ones_diff_cols), _if_then_else(True, 1, compare_blocks_rows)), le(_if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 1)))
le(_if_then_else(ge(4, ones_diff_cols), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(True, max_col_clue, zeros_diff_cols)), _if_then_else(True, _if_then_else(ge(zeros_diff_rows, ones_diff_cols), _if_then_else(True, 4, max_row_clue), 1), _if_then_else(False, ones_diff_cols, _if_then_else(False, compare_blocks_rows, 0))))
ge(_if_then_else(le(3, _if_then_else(False, 3, zeros_diff_cols)), _if_then_else(True, _if_then_else(False, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, max_col_clue)), _if_then_else(ge(compare_blocks_cols, max_col_clue), _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(False, compare_blocks_cols, ones_diff_cols))), _if_then_else(and_(True, and_(False, True)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_rows, 4), _if_then_else(True, 4, 3)), _if_then_else(ge(ones_diff_rows, 3), _if_then_else(False, zeros_diff_cols, 1), _if_then_else(True, zeros_diff_cols, 4))))
and_(or_(or_(False, False), ge(_if_then_else(True, zeros_diff_rows, 0), compare_blocks_rows)), or_(ge(_if_then_else(True, 1, 3), max_row_clue), and_(True, False)))
VAL TREES:
mul(mul(add(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_cols, zeros_diff_rows)))
add(mul(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(mul(add(mul(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows))), mul(add(add(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_rows))))
mul(mul(add(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), mul(mul(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, ones_diff_cols))), add(add(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))))
mul(mul(mul(add(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows))), add(add(add(ones_diff_rows, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_rows)), add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows))))
mul(add(mul(ones_diff_cols, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_cols)), add(add(ones_diff_cols, zeros_diff_rows), add(add(mul(ones_diff_cols, zeros_diff_rows), zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows))))
mul(add(add(ones_diff_rows, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(mul(mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_cols)), add(mul(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_rows))), mul(add(add(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), add(add(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))), mul(mul(mul(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_rows)), add(add(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_rows)), mul(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_cols)))))
COND TREES:
and_(or_(False, False), ge(_if_then_else(True, 4, ones_diff_rows), _if_then_else(False, 1, zeros_diff_rows)))
ge(_if_then_else(le(compare_blocks_rows, 2), _if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(le(zeros_diff_rows, max_row_clue), 4, ones_diff_rows)), _if_then_else(le(zeros_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(True, 4, max_col_clue)))
le(_if_then_else(ge(_if_then_else(True, ones_diff_cols, 4), _if_then_else(False, 0, 0)), _if_then_else(or_(True, True), _if_then_else(True, 4, compare_blocks_cols), _if_then_else(True, 0, ones_diff_rows)), _if_then_else(le(compare_blocks_cols, max_col_clue), _if_then_else(False, 2, 0), zeros_diff_cols)), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, 2, max_row_clue)), _if_then_else(le(0, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 1, 4))))
ge(_if_then_else(or_(True, False), _if_then_else(True, 2, max_row_clue), _if_then_else(True, 2, _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(le(ones_diff_rows, 3), _if_then_else(True, _if_then_else(True, 1, 3), zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows)))
ge(_if_then_else(True, _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, 2), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, zeros_diff_cols))), _if_then_else(or_(ge(zeros_diff_rows, zeros_diff_rows), ge(zeros_diff_cols, compare_blocks_rows)), _if_then_else(and_(True, False), ones_diff_rows, _if_then_else(True, 1, ones_diff_cols)), _if_then_else(le(4, ones_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, 0, 2))))
and_(le(_if_then_else(and_(True, True), 4, zeros_diff_cols), _if_then_else(True, ones_diff_rows, max_col_clue)), True)
ge(_if_then_else(or_(and_(and_(False, False), and_(False, True)), ge(_if_then_else(True, zeros_diff_cols, max_col_clue), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(False, ones_diff_rows, 3)), _if_then_else(le(0, 2), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows))), _if_then_else(or_(le(ones_diff_cols, compare_blocks_rows), or_(False, False)), _if_then_else(ge(max_row_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(True, 0, compare_blocks_rows)), _if_then_else(le(compare_blocks_rows, zeros_diff_cols), 1, _if_then_else(True, ones_diff_cols, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 2), _if_then_else(True, max_col_clue, ones_diff_rows)), and_(ge(3, 2), ge(zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(or_(False, False), and_(True, False)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 2, 4)), _if_then_else(and_(False, True), _if_then_else(False, ones_diff_rows, max_row_clue), _if_then_else(True, zeros_diff_rows, max_row_clue))), _if_then_else(le(_if_then_else(True, max_col_clue, ones_diff_rows), _if_then_else(False, compare_blocks_rows, 2)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_rows, 4), _if_then_else(True, zeros_diff_cols, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(True, max_col_clue, 4)))))
le(_if_then_else(ge(_if_then_else(ge(1, 1), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, max_row_clue, max_row_clue)), _if_then_else(ge(compare_blocks_cols, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 3))), _if_then_else(and_(or_(True, True), ge(3, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, 3, 3), _if_then_else(False, max_row_clue, 1)), _if_then_else(or_(True, True), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, 3))), _if_then_else(or_(le(zeros_diff_cols, 2), or_(False, True)), _if_then_else(le(1, ones_diff_rows), _if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 1), _if_then_else(True, 3, 1)))), _if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, 2, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, 3, max_col_clue), _if_then_else(True, 3, ones_diff_rows))), _if_then_else(and_(and_(False, False), and_(False, True)), _if_then_else(le(max_col_clue, ones_diff_rows), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, 3, max_row_clue)), _if_then_else(and_(False, True), _if_then_else(False, 2, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows))), _if_then_else(ge(_if_then_else(True, max_row_clue, max_col_clue), _if_then_else(True, max_row_clue, ones_diff_cols)), _if_then_else(ge(_if_then_else(True, zeros_diff_cols, 3), max_col_clue), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 2, 2)), _if_then_else(le(3, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)))))
VAL TREES:
add(mul(mul(mul(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_rows))), add(add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)))), add(add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols)), add(mul(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))))
mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows)))
mul(add(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)), add(mul(compare_blocks_rows, mul(zeros_diff_cols, ones_diff_cols)), mul(zeros_diff_cols, compare_blocks_rows)))
add(mul(mul(mul(mul(ones_diff_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_cols, ones_diff_cols))), add(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_cols)), mul(add(ones_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_cols)), add(mul(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_rows, compare_blocks_rows))), mul(add(add(zeros_diff_cols, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows)), mul(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_cols)))))
mul(add(mul(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_rows, ones_diff_rows)), add(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_cols, ones_diff_cols))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, zeros_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(mul(add(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), add(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)))
add(mul(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(mul(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)))
mul(add(mul(mul(zeros_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_cols))), add(mul(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_cols))))
mul(mul(add(zeros_diff_cols, add(ones_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, compare_blocks_cols), zeros_diff_cols)), mul(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)))
COND TREES:
and_(or_(False, False), ge(_if_then_else(True, 4, ones_diff_rows), _if_then_else(True, 1, zeros_diff_rows)))
ge(compare_blocks_cols, _if_then_else(le(zeros_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(True, 4, max_col_clue)))
le(_if_then_else(ge(_if_then_else(True, ones_diff_cols, 4), _if_then_else(False, 0, 0)), _if_then_else(or_(True, True), _if_then_else(True, 4, compare_blocks_cols), _if_then_else(True, 0, ones_diff_rows)), zeros_diff_rows), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, 2, max_row_clue)), _if_then_else(le(0, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 1, 4))))
ge(_if_then_else(or_(True, False), _if_then_else(True, _if_then_else(ge(_if_then_else(False, max_col_clue, 4), _if_then_else(and_(True, False), zeros_diff_cols, compare_blocks_rows)), _if_then_else(le(2, zeros_diff_rows), _if_then_else(False, _if_then_else(False, max_row_clue, max_row_clue), ones_diff_cols), _if_then_else(False, compare_blocks_rows, 4)), _if_then_else(ge(_if_then_else(False, 3, ones_diff_rows), max_row_clue), _if_then_else(True, _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 1, zeros_diff_rows)), _if_then_else(ge(4, 4), zeros_diff_cols, zeros_diff_rows))), max_row_clue), _if_then_else(True, 2, _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(le(ones_diff_rows, 3), _if_then_else(True, 0, zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows)))
ge(_if_then_else(True, _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, 2), _if_then_else(False, zeros_diff_rows, _if_then_else(ge(_if_then_else(True, max_row_clue, ones_diff_rows), _if_then_else(True, 4, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, max_col_clue, 2), _if_then_else(True, 0, compare_blocks_cols)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 4))))), _if_then_else(or_(True, True), _if_then_else(False, max_col_clue, zeros_diff_rows), max_row_clue)), _if_then_else(or_(ge(zeros_diff_rows, zeros_diff_rows), ge(zeros_diff_cols, compare_blocks_rows)), _if_then_else(and_(True, False), ones_diff_rows, _if_then_else(True, 1, ones_diff_cols)), _if_then_else(le(4, ones_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, 0, 2))))
and_(le(_if_then_else(and_(True, True), 4, zeros_diff_cols), _if_then_else(True, ones_diff_rows, max_col_clue)), or_(True, False))
ge(_if_then_else(or_(and_(and_(False, False), and_(False, True)), ge(_if_then_else(True, zeros_diff_cols, max_col_clue), _if_then_else(True, max_row_clue, zeros_diff_rows))), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(False, ones_diff_rows, 3)), _if_then_else(le(0, 2), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows))), _if_then_else(or_(le(ones_diff_cols, compare_blocks_rows), or_(False, False)), _if_then_else(ge(max_row_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(True, 0, compare_blocks_rows)), _if_then_else(le(compare_blocks_rows, zeros_diff_cols), 1, _if_then_else(True, ones_diff_cols, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 2), _if_then_else(True, max_col_clue, ones_diff_rows)), and_(ge(3, 2), ge(zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(or_(False, False), and_(True, False)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 2, 4)), _if_then_else(and_(False, True), _if_then_else(False, ones_diff_rows, max_row_clue), _if_then_else(True, zeros_diff_rows, max_row_clue))), _if_then_else(le(_if_then_else(True, max_col_clue, ones_diff_rows), _if_then_else(False, compare_blocks_rows, 2)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_rows, 4), _if_then_else(True, zeros_diff_cols, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(True, max_col_clue, 4)))))
le(_if_then_else(ge(_if_then_else(ge(1, 1), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, max_row_clue, max_row_clue)), _if_then_else(ge(compare_blocks_cols, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 3))), _if_then_else(and_(or_(True, True), ge(3, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, 3, 3), _if_then_else(False, max_row_clue, 1)), _if_then_else(or_(True, True), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, 3))), _if_then_else(or_(le(zeros_diff_cols, 2), or_(False, True)), _if_then_else(le(1, ones_diff_rows), _if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 1), _if_then_else(or_(True, True), 3, 1)))), _if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, 2, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, 3, _if_then_else(ge(_if_then_else(and_(and_(False, True), le(max_col_clue, 3)), _if_then_else(and_(False, True), _if_then_else(False, ones_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, zeros_diff_rows)), _if_then_else(or_(False, False), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_rows))), _if_then_else(or_(and_(False, False), or_(False, True)), _if_then_else(le(1, 2), _if_then_else(True, zeros_diff_cols, 1), _if_then_else(True, 0, 0)), _if_then_else(or_(True, True), _if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(True, 0, ones_diff_rows)))), _if_then_else(and_(or_(le(2, 2), and_(True, False)), and_(or_(True, False), or_(True, False))), _if_then_else(and_(or_(True, False), and_(False, False)), _if_then_else(or_(False, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, ones_diff_rows, max_row_clue)), _if_then_else(le(zeros_diff_rows, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, 1), _if_then_else(False, zeros_diff_rows, zeros_diff_cols))), _if_then_else(le(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(True, 0, 1)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, ones_diff_cols), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(le(ones_diff_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 1, 4)))), _if_then_else(ge(_if_then_else(and_(True, False), _if_then_else(False, max_row_clue, max_col_clue), _if_then_else(False, 1, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(False, 2, ones_diff_rows))), _if_then_else(or_(or_(False, True), and_(True, True)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_rows, ones_diff_rows)), _if_then_else(le(3, 2), _if_then_else(True, max_col_clue, 1), _if_then_else(True, 2, ones_diff_cols))), _if_then_else(or_(and_(False, False), and_(False, True)), _if_then_else(ge(3, 1), _if_then_else(False, max_row_clue, 4), _if_then_else(True, 2, ones_diff_cols)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, ones_diff_cols, 2), _if_then_else(True, 1, max_col_clue)))))), _if_then_else(True, 3, ones_diff_rows))), _if_then_else(and_(and_(False, False), and_(False, True)), _if_then_else(le(max_col_clue, ones_diff_rows), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, 3, max_row_clue)), _if_then_else(and_(False, True), _if_then_else(False, 2, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows))), _if_then_else(ge(_if_then_else(True, max_row_clue, max_col_clue), _if_then_else(True, max_row_clue, ones_diff_cols)), _if_then_else(ge(_if_then_else(True, zeros_diff_cols, 3), max_col_clue), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 2, 2)), _if_then_else(le(3, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)))))
VAL TREES:
add(mul(mul(mul(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_rows))), add(add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)))), add(add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols)), add(mul(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))))
mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows)))
mul(add(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)), add(mul(compare_blocks_rows, mul(zeros_diff_cols, ones_diff_cols)), mul(zeros_diff_cols, compare_blocks_rows)))
add(mul(mul(mul(mul(ones_diff_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_cols, ones_diff_cols))), add(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_cols)), mul(add(ones_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_cols)), add(mul(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_rows, compare_blocks_rows))), mul(add(add(zeros_diff_cols, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows)), mul(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_cols)))))
mul(add(mul(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_rows, ones_diff_rows)), add(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_cols, ones_diff_cols))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, zeros_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(mul(add(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), add(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)))
add(mul(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(mul(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)))
mul(add(mul(mul(zeros_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_cols))), add(mul(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_cols))))
mul(mul(add(zeros_diff_cols, add(ones_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, compare_blocks_cols), zeros_diff_cols)), mul(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)))
COND TREES:
and_(or_(False, False), ge(_if_then_else(True, 4, max_row_clue), _if_then_else(True, 1, zeros_diff_rows)))
ge(compare_blocks_cols, _if_then_else(le(zeros_diff_rows, max_row_clue), _if_then_else(True, 3, max_row_clue), _if_then_else(True, 4, max_col_clue)))
le(_if_then_else(ge(_if_then_else(True, ones_diff_cols, 4), _if_then_else(False, 0, 0)), _if_then_else(or_(True, True), _if_then_else(True, 3, compare_blocks_cols), _if_then_else(True, 0, ones_diff_rows)), zeros_diff_rows), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, 2, max_row_clue)), _if_then_else(le(0, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 1, 4))))
ge(_if_then_else(or_(True, False), _if_then_else(True, 2, max_row_clue), _if_then_else(True, 2, _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(False, _if_then_else(True, 0, zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows)))
ge(_if_then_else(True, _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, 2), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, max_col_clue, zeros_diff_rows), max_row_clue)), _if_then_else(or_(ge(zeros_diff_rows, zeros_diff_rows), ge(zeros_diff_cols, compare_blocks_rows)), _if_then_else(and_(True, False), ones_diff_rows, _if_then_else(True, 1, ones_diff_cols)), _if_then_else(le(4, ones_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, 0, 2))))
and_(le(_if_then_else(and_(True, True), 4, zeros_diff_cols), _if_then_else(True, ones_diff_rows, max_col_clue)), or_(and_(le(3, zeros_diff_cols), ge(max_row_clue, 3)), False))
ge(_if_then_else(or_(and_(and_(False, False), and_(False, True)), ge(_if_then_else(True, zeros_diff_cols, max_col_clue), _if_then_else(True, max_row_clue, zeros_diff_rows))), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(False, ones_diff_rows, 3)), _if_then_else(le(0, 2), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows))), _if_then_else(or_(le(ones_diff_cols, compare_blocks_rows), or_(False, False)), _if_then_else(ge(max_row_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(True, 0, compare_blocks_rows)), _if_then_else(le(compare_blocks_rows, zeros_diff_cols), 1, _if_then_else(True, ones_diff_cols, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 2), _if_then_else(True, max_col_clue, ones_diff_rows)), and_(ge(3, 2), ge(zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(or_(False, False), and_(True, False)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 2, 4)), _if_then_else(and_(False, True), compare_blocks_rows, _if_then_else(True, zeros_diff_rows, max_row_clue))), _if_then_else(le(_if_then_else(True, max_col_clue, ones_diff_rows), _if_then_else(False, compare_blocks_rows, 2)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_rows, 4), _if_then_else(True, zeros_diff_cols, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(True, max_col_clue, 4)))))
le(_if_then_else(ge(_if_then_else(ge(1, 1), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, max_row_clue, max_row_clue)), _if_then_else(ge(compare_blocks_cols, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 3))), _if_then_else(and_(or_(True, True), ge(3, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, 3, 3), _if_then_else(False, max_row_clue, 1)), _if_then_else(or_(True, True), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, 3))), _if_then_else(or_(le(zeros_diff_cols, 2), or_(False, True)), _if_then_else(le(1, ones_diff_rows), _if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 1), _if_then_else(or_(True, True), 3, 1)))), _if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, 2, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, 3, max_col_clue), _if_then_else(True, 3, ones_diff_rows))), _if_then_else(and_(and_(False, False), ge(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, zeros_diff_cols, 3))), _if_then_else(le(max_col_clue, ones_diff_rows), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, 3, max_row_clue)), _if_then_else(and_(False, True), _if_then_else(False, 2, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows))), _if_then_else(ge(_if_then_else(True, max_row_clue, max_col_clue), _if_then_else(True, max_row_clue, ones_diff_cols)), _if_then_else(ge(_if_then_else(True, zeros_diff_cols, 3), max_col_clue), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 2, 2)), _if_then_else(le(3, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)))))
VAL TREES:
add(mul(mul(mul(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_rows))), add(add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)))), add(add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols)), add(mul(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))))
mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows)))
mul(add(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)), add(mul(compare_blocks_rows, mul(zeros_diff_cols, ones_diff_cols)), mul(zeros_diff_cols, compare_blocks_rows)))
add(mul(mul(mul(mul(ones_diff_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_cols, ones_diff_cols))), add(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_cols)), mul(add(ones_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_cols)), add(mul(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_rows, compare_blocks_rows))), mul(add(add(zeros_diff_cols, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows)), mul(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_cols)))))
mul(add(mul(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_rows, ones_diff_rows)), add(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_cols, ones_diff_cols))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, zeros_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(mul(add(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), add(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)))
add(mul(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(mul(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)))
mul(add(mul(mul(zeros_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_cols))), add(mul(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_cols))))
mul(mul(add(zeros_diff_cols, add(ones_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, compare_blocks_cols), zeros_diff_cols)), mul(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)))
COND TREES:
and_(and_(or_(True, False), or_(True, True)), and_(le(max_col_clue, _if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, 2), _if_then_else(False, 0, 1))), or_(le(0, 1), False)))
or_(or_(or_(False, False), le(compare_blocks_cols, max_row_clue)), ge(_if_then_else(ge(0, _if_then_else(True, 3, compare_blocks_cols)), compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, _if_then_else(False, 0, compare_blocks_rows))))
and_(or_(and_(le(_if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 3)), or_(ge(4, 3), le(3, 3))), and_(or_(or_(True, False), or_(True, True)), ge(_if_then_else(False, 1, compare_blocks_cols), _if_then_else(True, 4, 4)))), or_(or_(False, False), le(_if_then_else(ge(0, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(False, 1, 1))))
ge(_if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(True, ones_diff_rows, 2)), _if_then_else(le(max_row_clue, max_col_clue), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(True, 4, ones_diff_rows), 1), _if_then_else(True, _if_then_else(True, max_col_clue, 0), _if_then_else(True, max_row_clue, 3))), _if_then_else(or_(le(ones_diff_cols, 0), and_(True, True)), _if_then_else(and_(False, le(ones_diff_rows, 3)), zeros_diff_cols, _if_then_else(True, compare_blocks_cols, 3)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, 3, 2)))), _if_then_else(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(True, 0, ones_diff_cols), _if_then_else(True, 0, 4)), _if_then_else(or_(True, False), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, 2, ones_diff_cols))), _if_then_else(and_(and_(True, True), and_(True, False)), _if_then_else(ge(1, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, 2, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 3, ones_diff_rows))), _if_then_else(le(_if_then_else(False, compare_blocks_rows, ones_diff_rows), _if_then_else(True, 3, 2)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(and_(le(zeros_diff_rows, 0), ge(compare_blocks_cols, ones_diff_rows)), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 4, _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, 4)))))))
ge(_if_then_else(and_(False, True), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, ones_diff_rows, 4)), _if_then_else(and_(ge(zeros_diff_rows, zeros_diff_rows), True), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 2, zeros_diff_rows)))
ge(_if_then_else(True, _if_then_else(or_(and_(and_(and_(le(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(True, max_row_clue, compare_blocks_cols)), or_(and_(True, True), and_(False, True))), True), ge(2, 3)), False), _if_then_else(False, 2, 4), _if_then_else(False, max_row_clue, zeros_diff_cols)), _if_then_else(and_(False, False), _if_then_else(and_(False, True), zeros_diff_rows, max_row_clue), _if_then_else(True, 4, 0))), 4)
ge(_if_then_else(and_(True, True), _if_then_else(le(_if_then_else(False, ones_diff_rows, max_row_clue), zeros_diff_cols), 1, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, 0)), _if_then_else(le(4, compare_blocks_rows), _if_then_else(False, max_row_clue, max_row_clue), _if_then_else(True, 3, max_row_clue)))
or_(and_(False, True), or_(and_(False, False), or_(True, True)))
VAL TREES:
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)))
add(mul(mul(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_rows)))
mul(add(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_rows, ones_diff_cols)), add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols))), add(add(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(mul(add(zeros_diff_cols, compare_blocks_cols), add(add(add(compare_blocks_cols, ones_diff_cols), ones_diff_rows), compare_blocks_cols)), mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(mul(ones_diff_cols, zeros_diff_cols), ones_diff_cols)), add(ones_diff_cols, zeros_diff_rows)))
mul(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), add(mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_cols))))
add(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)))
mul(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, mul(ones_diff_cols, ones_diff_rows))))
COND TREES:
ge(_if_then_else(and_(True, True), _if_then_else(and_(ge(max_col_clue, ones_diff_rows), and_(True, False)), compare_blocks_rows, max_col_clue), _if_then_else(True, max_col_clue, 4)), _if_then_else(ge(_if_then_else(False, _if_then_else(False, compare_blocks_cols, compare_blocks_cols), zeros_diff_rows), 3), _if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(True, zeros_diff_rows, ones_diff_rows)))
or_(le(_if_then_else(ge(_if_then_else(True, 1, compare_blocks_cols), _if_then_else(False, max_row_clue, 1)), _if_then_else(or_(True, False), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, 2, max_col_clue)), _if_then_else(le(0, compare_blocks_rows), _if_then_else(True, ones_diff_rows, ones_diff_rows), _if_then_else(False, 2, ones_diff_rows))), _if_then_else(le(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, zeros_diff_rows)), _if_then_else(ge(1, max_col_clue), _if_then_else(True, 4, ones_diff_rows), _if_then_else(ge(zeros_diff_cols, zeros_diff_rows), 0, compare_blocks_rows)), _if_then_else(and_(True, False), _if_then_else(True, 0, max_row_clue), _if_then_else(True, zeros_diff_rows, compare_blocks_rows)))), ge(_if_then_else(le(_if_then_else(False, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, max_row_clue, ones_diff_cols)), _if_then_else(ge(4, 4), _if_then_else(False, 3, max_col_clue), _if_then_else(False, zeros_diff_rows, ones_diff_cols)), _if_then_else(or_(True, False), _if_then_else(True, 2, 3), compare_blocks_cols)), _if_then_else(and_(le(0, zeros_diff_rows), le(compare_blocks_rows, max_row_clue)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 4, 1)), _if_then_else(or_(True, True), _if_then_else(True, 0, compare_blocks_rows), _if_then_else(False, 0, max_col_clue)))))
ge(_if_then_else(ge(3, 1), _if_then_else(and_(or_(ge(_if_then_else(False, 3, 0), ones_diff_rows), False), True), 2, max_col_clue), _if_then_else(True, 1, _if_then_else(or_(True, and_(le(_if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 3)), or_(True, le(3, 3)))), zeros_diff_cols, zeros_diff_rows))), _if_then_else(or_(False, True), _if_then_else(True, _if_then_else(False, 3, 4), 0), _if_then_else(and_(True, False), 4, 3)))
le(_if_then_else(True, 4, max_col_clue), _if_then_else(or_(True, True), _if_then_else(False, 3, max_row_clue), _if_then_else(True, 0, compare_blocks_rows)))
or_(ge(_if_then_else(False, 0, ones_diff_cols), _if_then_else(True, 1, compare_blocks_rows)), le(_if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 1)))
le(_if_then_else(ge(4, ones_diff_cols), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(True, max_col_clue, zeros_diff_cols)), _if_then_else(True, _if_then_else(ge(zeros_diff_rows, ones_diff_cols), _if_then_else(True, 4, max_row_clue), 1), _if_then_else(False, ones_diff_cols, _if_then_else(False, compare_blocks_rows, 0))))
ge(_if_then_else(le(3, _if_then_else(False, 3, zeros_diff_cols)), _if_then_else(True, _if_then_else(False, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, max_col_clue)), _if_then_else(ge(compare_blocks_cols, max_col_clue), _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(False, compare_blocks_cols, ones_diff_cols))), _if_then_else(and_(True, and_(False, True)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_rows, 4), _if_then_else(True, 4, 3)), _if_then_else(ge(ones_diff_rows, 3), _if_then_else(False, zeros_diff_cols, 1), _if_then_else(True, zeros_diff_cols, 4))))
and_(or_(or_(False, False), ge(_if_then_else(True, zeros_diff_rows, 0), compare_blocks_rows)), or_(ge(_if_then_else(True, 1, 3), max_row_clue), and_(True, False)))
VAL TREES:
mul(mul(add(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_rows)), mul(mul(add(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_cols)), mul(add(ones_diff_cols, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols))), add(add(mul(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_rows, ones_diff_cols)))), mul(ones_diff_cols, zeros_diff_rows)))
add(mul(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, add(add(add(compare_blocks_rows, ones_diff_cols), mul(ones_diff_rows, zeros_diff_rows)), add(mul(zeros_diff_rows, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))))))
add(mul(add(mul(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows))), mul(add(add(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_rows))))
mul(mul(add(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), mul(mul(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, ones_diff_cols))), add(add(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))))
mul(mul(mul(add(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_rows, mul(mul(add(add(mul(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_cols, ones_diff_cols)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols))), add(add(add(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, zeros_diff_rows)), add(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))), add(add(mul(add(compare_blocks_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, ones_diff_rows), mul(ones_diff_cols, ones_diff_rows))), add(mul(add(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_cols)))))), mul(zeros_diff_cols, zeros_diff_rows))), add(add(add(ones_diff_rows, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_rows)), add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows))))
mul(add(mul(ones_diff_cols, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_cols)), add(add(ones_diff_cols, zeros_diff_rows), add(add(mul(ones_diff_cols, zeros_diff_rows), zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows))))
mul(add(add(ones_diff_rows, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_rows)), add(mul(add(zeros_diff_cols, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(compare_blocks_cols, add(zeros_diff_rows, compare_blocks_rows)), mul(zeros_diff_rows, add(ones_diff_rows, compare_blocks_cols)))))
add(mul(mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_cols)), add(mul(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_rows))), mul(add(add(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), add(add(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))), mul(mul(mul(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_rows)), add(add(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_rows)), mul(add(mul(add(mul(mul(add(ones_diff_cols, zeros_diff_rows), zeros_diff_cols), ones_diff_rows), add(add(compare_blocks_cols, ones_diff_rows), ones_diff_rows)), add(mul(mul(mul(zeros_diff_cols, compare_blocks_cols), compare_blocks_cols), ones_diff_rows), add(compare_blocks_cols, add(mul(ones_diff_rows, zeros_diff_cols), compare_blocks_cols)))), zeros_diff_cols), mul(ones_diff_rows, ones_diff_cols)))))
COND TREES:
and_(or_(False, False), ge(_if_then_else(True, 4, ones_diff_rows), _if_then_else(False, _if_then_else(and_(le(4, 2), or_(True, True)), _if_then_else(le(4, ones_diff_cols), _if_then_else(False, compare_blocks_rows, 2), _if_then_else(le(_if_then_else(False, zeros_diff_cols, 2), zeros_diff_rows), 1, zeros_diff_rows)), _if_then_else(le(max_col_clue, zeros_diff_rows), _if_then_else(and_(and_(False, False), True), compare_blocks_rows, _if_then_else(False, compare_blocks_rows, _if_then_else(True, 2, 2))), _if_then_else(True, ones_diff_rows, _if_then_else(False, 0, 4)))), zeros_diff_rows)))
ge(_if_then_else(le(compare_blocks_rows, 2), _if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(le(zeros_diff_rows, max_row_clue), 4, ones_diff_rows)), _if_then_else(le(zeros_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(True, 4, max_col_clue)))
le(_if_then_else(ge(_if_then_else(True, ones_diff_cols, 4), _if_then_else(False, 0, 0)), _if_then_else(or_(True, True), _if_then_else(True, 4, compare_blocks_cols), _if_then_else(True, 0, ones_diff_rows)), _if_then_else(le(compare_blocks_cols, max_col_clue), _if_then_else(False, 2, 0), zeros_diff_cols)), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, 2, max_row_clue)), _if_then_else(le(0, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(ge(_if_then_else(or_(le(compare_blocks_cols, ones_diff_rows), and_(True, True)), _if_then_else(le(4, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, ones_diff_rows)), _if_then_else(ge(ones_diff_cols, 2), _if_then_else(True, max_row_clue, max_row_clue), _if_then_else(True, max_col_clue, max_col_clue))), _if_then_else(ge(_if_then_else(False, 4, 3), _if_then_else(True, 0, 0)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, max_col_clue)), _if_then_else(le(compare_blocks_rows, 2), _if_then_else(False, ones_diff_rows, 4), _if_then_else(True, 4, 3)))), ones_diff_cols, compare_blocks_rows), _if_then_else(False, 1, 4))))
ge(_if_then_else(or_(True, False), _if_then_else(True, 2, max_row_clue), _if_then_else(True, 2, _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(le(ones_diff_rows, 3), _if_then_else(True, _if_then_else(True, 1, 3), zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows)))
ge(_if_then_else(True, _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, 2), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, zeros_diff_cols))), _if_then_else(or_(ge(zeros_diff_rows, zeros_diff_rows), ge(zeros_diff_cols, compare_blocks_rows)), _if_then_else(and_(True, False), ones_diff_rows, _if_then_else(True, 1, ones_diff_cols)), _if_then_else(le(4, ones_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, 0, 2))))
and_(le(_if_then_else(and_(True, True), 4, zeros_diff_cols), _if_then_else(True, ones_diff_rows, max_col_clue)), True)
ge(_if_then_else(or_(and_(and_(False, False), and_(False, True)), ge(_if_then_else(True, zeros_diff_cols, max_col_clue), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(False, ones_diff_rows, 3)), _if_then_else(le(0, 2), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows))), _if_then_else(or_(le(ones_diff_cols, compare_blocks_rows), or_(False, False)), _if_then_else(ge(max_row_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(True, 0, compare_blocks_rows)), _if_then_else(le(compare_blocks_rows, zeros_diff_cols), 1, _if_then_else(True, ones_diff_cols, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 2), _if_then_else(True, max_col_clue, ones_diff_rows)), and_(ge(3, 2), ge(zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(or_(False, False), and_(True, False)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 2, 4)), _if_then_else(and_(False, True), _if_then_else(False, ones_diff_rows, max_row_clue), _if_then_else(True, zeros_diff_rows, max_row_clue))), _if_then_else(le(_if_then_else(True, max_col_clue, ones_diff_rows), _if_then_else(False, compare_blocks_rows, 2)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_rows, 4), _if_then_else(True, zeros_diff_cols, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(True, max_col_clue, 4)))))
le(_if_then_else(ge(_if_then_else(ge(1, 1), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, max_row_clue, max_row_clue)), _if_then_else(ge(compare_blocks_cols, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 3))), _if_then_else(and_(or_(True, True), ge(3, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, 3, 3), _if_then_else(False, max_row_clue, 1)), _if_then_else(or_(True, True), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, 3))), _if_then_else(or_(le(zeros_diff_cols, 2), or_(False, True)), _if_then_else(le(1, ones_diff_rows), _if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 1), _if_then_else(True, 3, 1)))), _if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, 2, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, 3, max_col_clue), _if_then_else(ge(_if_then_else(ge(_if_then_else(True, zeros_diff_cols, max_row_clue), _if_then_else(False, ones_diff_cols, 3)), _if_then_else(ge(4, compare_blocks_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 3, max_row_clue)), _if_then_else(le(2, 2), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_rows))), _if_then_else(or_(le(compare_blocks_cols, 0), ge(zeros_diff_rows, 0)), _if_then_else(ge(max_row_clue, ones_diff_rows), _if_then_else(True, ones_diff_rows, 1), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(ge(4, zeros_diff_rows), _if_then_else(False, 3, 4), _if_then_else(True, max_row_clue, max_col_clue)))), _if_then_else(ge(_if_then_else(and_(False, True), _if_then_else(True, max_col_clue, ones_diff_rows), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, 2, ones_diff_rows), _if_then_else(False, zeros_diff_cols, 1))), _if_then_else(le(_if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(False, max_row_clue, compare_blocks_cols), _if_then_else(False, 3, 4))), _if_then_else(or_(or_(False, False), ge(compare_blocks_cols, zeros_diff_cols)), _if_then_else(le(zeros_diff_cols, 3), _if_then_else(True, 2, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows)), _if_then_else(or_(False, True), _if_then_else(True, 3, 0), _if_then_else(True, compare_blocks_rows, 3)))), _if_then_else(or_(ge(_if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, 4, max_row_clue)), and_(ge(0, ones_diff_rows), or_(True, True))), _if_then_else(ge(_if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 0, 0)), _if_then_else(ge(ones_diff_cols, max_col_clue), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(True, max_row_clue, compare_blocks_rows)), _if_then_else(ge(ones_diff_cols, 4), _if_then_else(True, 2, ones_diff_rows), _if_then_else(True, 3, max_row_clue))), _if_then_else(or_(and_(True, True), ge(1, zeros_diff_rows)), _if_then_else(and_(True, True), _if_then_else(True, 1, 0), _if_then_else(False, 0, max_row_clue)), _if_then_else(and_(True, False), _if_then_else(False, 0, ones_diff_cols), _if_then_else(False, 0, 0))))))), _if_then_else(and_(and_(False, False), and_(False, True)), _if_then_else(le(max_col_clue, ones_diff_rows), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, 3, max_row_clue)), _if_then_else(and_(False, True), _if_then_else(False, 2, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows))), _if_then_else(ge(_if_then_else(True, max_row_clue, max_col_clue), _if_then_else(True, max_row_clue, ones_diff_cols)), _if_then_else(ge(_if_then_else(True, zeros_diff_cols, 3), max_col_clue), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 2, 2)), _if_then_else(le(3, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)))))
VAL TREES:
add(mul(mul(mul(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_rows))), add(add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)))), add(add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols)), add(mul(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))))
mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows)))
mul(add(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)), add(mul(compare_blocks_rows, mul(zeros_diff_cols, ones_diff_cols)), mul(zeros_diff_cols, compare_blocks_rows)))
add(mul(mul(mul(mul(ones_diff_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_cols, ones_diff_cols))), add(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_cols)), mul(add(ones_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_cols)), add(mul(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_rows, compare_blocks_rows))), mul(add(add(zeros_diff_cols, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows)), mul(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_cols)))))
mul(add(mul(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_rows, ones_diff_rows)), add(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_cols, ones_diff_cols))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, zeros_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(mul(add(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), add(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)))
add(mul(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(mul(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)))
mul(add(mul(mul(zeros_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_cols))), add(mul(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_cols))))
mul(mul(add(zeros_diff_cols, add(ones_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, compare_blocks_cols), zeros_diff_cols)), mul(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)))
COND TREES:
and_(and_(or_(True, False), or_(True, True)), and_(le(max_col_clue, _if_then_else(or_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(ge(max_col_clue, ones_diff_rows), 0, 1))), or_(le(0, 1), False)))
or_(True, ge(_if_then_else(ge(_if_then_else(True, 1, ones_diff_rows), _if_then_else(True, 3, 3)), compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, _if_then_else(False, 0, compare_blocks_rows))))
and_(and_(le(_if_then_else(or_(False, False), ones_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 3)), or_(True, le(3, 3))), False)
ge(_if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(True, ones_diff_rows, 2)), _if_then_else(le(max_row_clue, max_col_clue), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(True, 3, ones_diff_rows), 1), _if_then_else(or_(False, True), _if_then_else(True, max_col_clue, 0), _if_then_else(True, max_row_clue, 3))), _if_then_else(or_(le(ones_diff_cols, 0), and_(True, True)), _if_then_else(and_(False, False), zeros_diff_cols, _if_then_else(True, compare_blocks_cols, 3)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, 3, 2)))), _if_then_else(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(True, 0, ones_diff_cols), _if_then_else(False, 0, 4)), _if_then_else(or_(True, False), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, 2, ones_diff_cols))), _if_then_else(and_(and_(True, True), and_(True, False)), _if_then_else(ge(1, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, 2, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 3, ones_diff_rows))), _if_then_else(le(_if_then_else(False, compare_blocks_rows, ones_diff_rows), _if_then_else(True, 3, 2)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 4, _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, 4)))))))
ge(_if_then_else(and_(False, True), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 0, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 2, zeros_diff_rows)))
ge(_if_then_else(and_(le(3, zeros_diff_cols), ge(max_row_clue, 3)), _if_then_else(or_(False, False), _if_then_else(False, 2, 4), _if_then_else(True, max_row_clue, zeros_diff_cols)), _if_then_else(and_(False, False), _if_then_else(and_(False, False), zeros_diff_rows, 0), _if_then_else(True, 4, 0))), _if_then_else(le(_if_then_else(le(zeros_diff_rows, 2), 1, max_row_clue), _if_then_else(False, 1, 1)), _if_then_else(False, _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(True, 2, ones_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, 0, 1), _if_then_else(False, 1, max_row_clue))))
ge(_if_then_else(and_(True, True), _if_then_else(False, 1, _if_then_else(True, zeros_diff_rows, 4)), _if_then_else(False, zeros_diff_rows, 0)), _if_then_else(True, _if_then_else(False, max_row_clue, max_row_clue), _if_then_else(False, 3, max_row_clue)))
or_(True, or_(and_(False, False), or_(True, True)))
VAL TREES:
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)))
add(mul(mul(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_rows)))
mul(add(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_rows, ones_diff_cols)), add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols))), add(add(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(mul(add(zeros_diff_cols, compare_blocks_cols), add(add(add(compare_blocks_cols, ones_diff_cols), ones_diff_rows), compare_blocks_cols)), mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(mul(ones_diff_cols, zeros_diff_cols), ones_diff_cols)), add(ones_diff_cols, zeros_diff_rows)))
mul(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), add(mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_cols))))
add(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)))
mul(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, mul(ones_diff_cols, ones_diff_rows))))
COND TREES:
and_(and_(or_(True, False), or_(True, True)), and_(le(ones_diff_rows, ones_diff_rows), or_(le(0, 1), False)))
or_(or_(or_(False, False), le(compare_blocks_cols, max_row_clue)), ge(_if_then_else(ge(_if_then_else(True, 1, ones_diff_rows), _if_then_else(True, ones_diff_rows, 3)), compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, _if_then_else(False, 0, compare_blocks_rows))))
and_(or_(and_(le(_if_then_else(or_(False, False), ones_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 3)), or_(True, le(4, 3))), and_(or_(or_(True, False), or_(True, True)), ge(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, 4, 4)))), or_(or_(False, False), le(_if_then_else(ge(0, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(False, 1, 1))))
ge(_if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(True, ones_diff_rows, 2)), _if_then_else(le(max_row_clue, max_col_clue), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(True, 3, ones_diff_rows), 1), _if_then_else(or_(False, True), _if_then_else(True, max_col_clue, 0), _if_then_else(True, max_row_clue, 3))), _if_then_else(or_(le(ones_diff_cols, 0), and_(True, True)), _if_then_else(and_(False, False), zeros_diff_cols, _if_then_else(True, compare_blocks_cols, 3)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, 3, 2)))), _if_then_else(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(True, 0, ones_diff_cols), _if_then_else(True, 0, 4)), _if_then_else(or_(True, False), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, 2, ones_diff_cols))), _if_then_else(and_(and_(True, True), and_(True, False)), _if_then_else(ge(1, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, 2, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 3, ones_diff_rows))), _if_then_else(le(_if_then_else(False, compare_blocks_rows, ones_diff_rows), _if_then_else(True, 3, 2)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 4, _if_then_else(and_(True, True), _if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(True, 0, 4)))))))
ge(_if_then_else(and_(False, True), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, ones_diff_rows, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 2, zeros_diff_rows)))
ge(_if_then_else(and_(le(3, zeros_diff_cols), ge(max_row_clue, 3)), 1, _if_then_else(and_(False, False), _if_then_else(and_(False, False), zeros_diff_rows, max_row_clue), _if_then_else(True, 4, 0))), _if_then_else(le(_if_then_else(False, 1, max_row_clue), _if_then_else(False, 1, 1)), _if_then_else(ge(zeros_diff_cols, 0), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(True, 2, ones_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, 0, 4), _if_then_else(False, 1, max_row_clue))))
ge(_if_then_else(and_(True, True), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, 0)), _if_then_else(le(4, compare_blocks_rows), _if_then_else(False, max_row_clue, max_row_clue), _if_then_else(True, 3, max_row_clue)))
or_(False, or_(and_(False, False), or_(ge(max_col_clue, ones_diff_rows), True)))
VAL TREES:
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)))
add(mul(mul(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), mul(mul(add(add(add(zeros_diff_cols, zeros_diff_cols), add(zeros_diff_rows, ones_diff_cols)), add(mul(ones_diff_rows, ones_diff_rows), add(compare_blocks_rows, ones_diff_cols))), ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(add(mul(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)), add(mul(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows))), mul(add(mul(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)), add(add(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_cols))))
mul(add(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_rows, ones_diff_cols)), add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols))), add(add(add(mul(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_rows))), zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(mul(add(zeros_diff_cols, compare_blocks_cols), add(add(add(compare_blocks_cols, ones_diff_cols), ones_diff_rows), compare_blocks_cols)), mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(mul(ones_diff_cols, zeros_diff_cols), ones_diff_cols)), add(ones_diff_cols, zeros_diff_rows)))
mul(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), add(mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_cols))))
mul(mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(add(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_rows)))
mul(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, mul(ones_diff_cols, ones_diff_rows))))
COND TREES:
and_(or_(False, or_(le(0, max_col_clue), False)), ge(_if_then_else(True, 4, ones_diff_rows), _if_then_else(False, 1, zeros_diff_rows)))
ge(_if_then_else(le(compare_blocks_rows, 2), _if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(or_(False, False), compare_blocks_cols, ones_diff_rows)), _if_then_else(le(zeros_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(True, 4, max_col_clue)))
le(_if_then_else(ge(_if_then_else(True, ones_diff_cols, 4), _if_then_else(False, 0, 0)), _if_then_else(or_(True, True), _if_then_else(True, 4, compare_blocks_cols), _if_then_else(True, 0, ones_diff_rows)), _if_then_else(le(compare_blocks_cols, max_col_clue), _if_then_else(or_(True, True), 2, 0), zeros_diff_cols)), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, 2, max_row_clue)), _if_then_else(le(0, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 1, 4))))
ge(_if_then_else(False, _if_then_else(True, 2, max_row_clue), _if_then_else(True, 2, _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(le(ones_diff_rows, max_row_clue), _if_then_else(True, _if_then_else(True, 1, 3), zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows)))
ge(_if_then_else(True, _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, 2), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, zeros_diff_cols))), _if_then_else(or_(ge(zeros_diff_rows, zeros_diff_rows), ge(zeros_diff_cols, compare_blocks_rows)), _if_then_else(and_(True, False), _if_then_else(True, 3, compare_blocks_cols), _if_then_else(True, 1, ones_diff_cols)), _if_then_else(le(4, ones_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, 0, 2))))
and_(le(_if_then_else(and_(False, False), zeros_diff_rows, max_row_clue), _if_then_else(True, ones_diff_rows, max_col_clue)), True)
ge(_if_then_else(or_(and_(and_(False, False), and_(False, True)), ge(_if_then_else(True, zeros_diff_cols, _if_then_else(True, zeros_diff_rows, 0)), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(False, ones_diff_rows, 3)), _if_then_else(le(0, 2), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows))), _if_then_else(or_(le(ones_diff_cols, compare_blocks_rows), or_(False, False)), _if_then_else(ge(max_row_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(True, 0, compare_blocks_rows)), _if_then_else(le(compare_blocks_rows, zeros_diff_cols), 1, _if_then_else(True, ones_diff_cols, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 2), _if_then_else(True, max_col_clue, ones_diff_rows)), and_(ge(3, 2), ge(zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(or_(False, False), and_(le(ones_diff_cols, compare_blocks_rows), False)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 2, 4)), _if_then_else(and_(False, True), _if_then_else(False, ones_diff_rows, max_row_clue), _if_then_else(True, zeros_diff_rows, max_row_clue))), _if_then_else(le(_if_then_else(True, max_col_clue, ones_diff_rows), _if_then_else(False, compare_blocks_rows, 2)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_rows, 4), _if_then_else(True, zeros_diff_cols, max_row_clue)), zeros_diff_rows)))
le(_if_then_else(ge(_if_then_else(ge(1, 1), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, max_row_clue, max_row_clue)), _if_then_else(ge(compare_blocks_cols, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 3))), _if_then_else(and_(or_(True, True), ge(3, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, 3, 3), _if_then_else(False, max_row_clue, 1)), _if_then_else(True, _if_then_else(False, 3, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, 3))), _if_then_else(or_(le(zeros_diff_cols, 2), or_(False, True)), _if_then_else(le(1, ones_diff_rows), _if_then_else(or_(True, True), zeros_diff_rows, max_col_clue), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 1), _if_then_else(True, 3, 1)))), _if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, 2, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, 3, max_col_clue), _if_then_else(True, 3, ones_diff_rows))), _if_then_else(and_(and_(False, False), and_(False, True)), _if_then_else(le(max_col_clue, ones_diff_rows), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, 3, max_row_clue)), _if_then_else(and_(False, True), _if_then_else(False, 2, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows))), _if_then_else(ge(_if_then_else(True, max_row_clue, max_col_clue), _if_then_else(True, max_row_clue, ones_diff_cols)), _if_then_else(True, _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 2, 2)), _if_then_else(le(3, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)))))
VAL TREES:
add(mul(mul(mul(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_rows))), add(add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)))), add(add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols)), add(mul(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))))
mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows)))
mul(add(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)), add(mul(compare_blocks_rows, mul(zeros_diff_cols, ones_diff_cols)), mul(zeros_diff_cols, compare_blocks_rows)))
add(mul(mul(mul(mul(ones_diff_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_cols, ones_diff_cols))), add(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_cols)), mul(add(ones_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_cols)), add(mul(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_rows, compare_blocks_rows))), mul(add(add(zeros_diff_cols, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows)), mul(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_cols)))))
mul(add(mul(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_rows, ones_diff_rows)), add(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_cols, ones_diff_cols))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, zeros_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(mul(add(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), add(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)))
add(mul(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(mul(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)))
mul(add(mul(mul(zeros_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_cols))), add(mul(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_cols))))
mul(mul(add(zeros_diff_cols, add(ones_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, compare_blocks_cols), zeros_diff_cols)), mul(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)))
COND TREES:
and_(or_(False, False), ge(_if_then_else(and_(True, True), _if_then_else(and_(ge(1, ones_diff_rows), and_(True, True)), compare_blocks_rows, max_col_clue), _if_then_else(True, max_col_clue, 4)), _if_then_else(False, 1, zeros_diff_rows)))
ge(_if_then_else(le(compare_blocks_rows, 2), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(le(zeros_diff_rows, max_row_clue), 4, ones_diff_rows)), _if_then_else(le(zeros_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(True, 4, max_col_clue)))
le(_if_then_else(ge(_if_then_else(True, ones_diff_cols, 4), _if_then_else(False, 0, 0)), _if_then_else(False, _if_then_else(True, 4, compare_blocks_cols), max_col_clue), _if_then_else(le(compare_blocks_cols, max_col_clue), _if_then_else(False, 2, 0), zeros_diff_cols)), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, 2, max_row_clue)), _if_then_else(le(0, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 1, 4))))
ge(_if_then_else(or_(True, False), _if_then_else(True, 2, 3), _if_then_else(False, 2, _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(le(ones_diff_rows, 3), _if_then_else(True, _if_then_else(True, 1, 3), zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows)))
ge(_if_then_else(True, _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, 2), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, zeros_diff_cols))), _if_then_else(or_(ge(zeros_diff_rows, zeros_diff_rows), ge(zeros_diff_cols, compare_blocks_rows)), _if_then_else(and_(True, False), ones_diff_rows, _if_then_else(True, 1, ones_diff_cols)), _if_then_else(le(4, ones_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, 0, 2))))
and_(False, False)
ge(_if_then_else(or_(and_(and_(False, False), and_(False, True)), ge(_if_then_else(True, zeros_diff_cols, max_col_clue), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(False, ones_diff_rows, 3)), _if_then_else(le(0, 2), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows))), _if_then_else(or_(True, or_(False, False)), _if_then_else(ge(max_row_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_cols), ones_diff_cols), _if_then_else(le(compare_blocks_rows, zeros_diff_cols), 1, _if_then_else(True, ones_diff_cols, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 2), _if_then_else(True, max_col_clue, ones_diff_rows)), and_(ge(3, 2), ge(zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(or_(False, False), and_(True, False)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 2, 4)), _if_then_else(and_(False, True), _if_then_else(False, ones_diff_rows, max_row_clue), _if_then_else(True, zeros_diff_rows, max_row_clue))), _if_then_else(le(_if_then_else(True, max_col_clue, ones_diff_rows), _if_then_else(False, compare_blocks_rows, 2)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_rows, 4), _if_then_else(True, zeros_diff_cols, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(True, max_col_clue, 4)))))
le(_if_then_else(ge(_if_then_else(ge(1, 1), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, max_row_clue, max_row_clue)), _if_then_else(ge(compare_blocks_cols, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 3))), _if_then_else(and_(or_(True, True), ge(3, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, 3, 3), _if_then_else(False, max_row_clue, 1)), _if_then_else(or_(True, True), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, 3))), _if_then_else(or_(le(zeros_diff_cols, 2), or_(False, True)), _if_then_else(le(1, ones_diff_rows), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 1), _if_then_else(ge(1, max_col_clue), 3, 1)))), _if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, 2, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, 3, max_col_clue), _if_then_else(True, 3, ones_diff_rows))), _if_then_else(and_(and_(False, False), and_(False, True)), _if_then_else(le(max_col_clue, ones_diff_rows), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, 3, max_row_clue)), _if_then_else(and_(False, True), _if_then_else(False, 2, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows))), _if_then_else(ge(_if_then_else(True, max_row_clue, max_col_clue), _if_then_else(True, max_row_clue, ones_diff_cols)), _if_then_else(ge(_if_then_else(True, zeros_diff_cols, 3), max_col_clue), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 2, 2)), _if_then_else(le(3, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)))))
VAL TREES:
add(mul(mul(mul(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_rows))), add(add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)))), add(add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols)), add(mul(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))))
mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(mul(compare_blocks_cols, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols))))
mul(add(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)), add(mul(compare_blocks_rows, mul(zeros_diff_cols, add(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), mul(mul(compare_blocks_rows, add(mul(ones_diff_cols, compare_blocks_rows), zeros_diff_cols)), mul(mul(compare_blocks_cols, mul(compare_blocks_rows, compare_blocks_rows)), compare_blocks_rows))))), mul(zeros_diff_cols, compare_blocks_rows)))
add(mul(mul(mul(mul(ones_diff_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_cols, ones_diff_cols))), add(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_cols)), mul(add(ones_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_cols)), add(mul(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_rows, compare_blocks_rows))), mul(add(add(zeros_diff_cols, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows)), mul(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_cols)))))
mul(add(mul(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_rows, ones_diff_rows)), mul(add(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_cols, mul(zeros_diff_cols, mul(compare_blocks_rows, compare_blocks_cols)))))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, zeros_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(mul(add(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), add(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)))
add(mul(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(mul(mul(add(mul(compare_blocks_rows, mul(zeros_diff_rows, compare_blocks_cols)), add(compare_blocks_cols, ones_diff_rows)), add(add(mul(compare_blocks_cols, add(zeros_diff_cols, ones_diff_cols)), ones_diff_rows), add(compare_blocks_rows, zeros_diff_rows))), compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)))
mul(add(mul(mul(zeros_diff_rows, zeros_diff_rows), add(mul(mul(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_rows, zeros_diff_cols)), add(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_cols))), compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_cols))), add(mul(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_cols))))
mul(mul(add(zeros_diff_cols, add(ones_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, compare_blocks_cols), zeros_diff_cols)), mul(add(zeros_diff_cols, zeros_diff_cols), add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(mul(zeros_diff_rows, mul(zeros_diff_cols, ones_diff_rows)), mul(zeros_diff_rows, ones_diff_rows))), add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, ones_diff_cols)), ones_diff_cols), mul(mul(ones_diff_cols, zeros_diff_rows), zeros_diff_rows))), compare_blocks_cols)))
COND TREES:
and_(and_(or_(True, False), or_(True, True)), and_(le(max_col_clue, _if_then_else(or_(or_(and_(True, False), False), False), _if_then_else(True, max_row_clue, 2), _if_then_else(False, 0, 1))), or_(le(0, 1), False)))
or_(or_(or_(False, False), le(compare_blocks_cols, max_row_clue)), ge(_if_then_else(ge(_if_then_else(True, 1, ones_diff_rows), _if_then_else(True, 3, 3)), compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, _if_then_else(False, 0, compare_blocks_rows))))
and_(or_(and_(le(_if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 3)), or_(or_(True, True), le(3, 3))), and_(or_(or_(True, False), or_(True, True)), ge(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, 4, 4)))), or_(or_(False, False), le(_if_then_else(ge(zeros_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(False, 1, 1))))
ge(_if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(le(compare_blocks_rows, 2), ones_diff_rows, 2)), _if_then_else(le(max_row_clue, max_col_clue), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(True, 3, ones_diff_rows), 1), _if_then_else(or_(False, True), _if_then_else(True, max_col_clue, 0), _if_then_else(True, max_row_clue, 3))), _if_then_else(or_(le(ones_diff_cols, 0), and_(True, True)), _if_then_else(and_(False, False), zeros_diff_cols, _if_then_else(True, compare_blocks_cols, 3)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, 3, 2)))), _if_then_else(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(True, 0, ones_diff_cols), _if_then_else(True, 0, 4)), _if_then_else(or_(True, False), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, 2, ones_diff_cols))), _if_then_else(and_(and_(True, True), and_(True, False)), _if_then_else(ge(1, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, 2, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 3, ones_diff_rows))), _if_then_else(le(_if_then_else(False, compare_blocks_rows, ones_diff_rows), _if_then_else(True, 3, 2)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(and_(le(zeros_diff_rows, 0), ge(compare_blocks_cols, ones_diff_rows)), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 4, _if_then_else(and_(True, False), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, 4)))))))
ge(_if_then_else(and_(False, True), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, ones_diff_rows, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, 2, zeros_diff_rows)))
ge(_if_then_else(and_(le(3, zeros_diff_cols), False), _if_then_else(or_(False, False), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, max_row_clue, zeros_diff_cols)), _if_then_else(and_(False, False), _if_then_else(and_(False, False), zeros_diff_rows, max_row_clue), _if_then_else(True, 4, 0))), 4)
ge(_if_then_else(and_(True, True), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, 0)), _if_then_else(le(4, compare_blocks_rows), _if_then_else(False, max_row_clue, max_row_clue), _if_then_else(True, 3, max_row_clue)))
or_(ge(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, zeros_diff_cols, 3)), or_(and_(False, True), or_(True, True)))
VAL TREES:
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)))
add(mul(mul(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_rows)))
mul(add(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_rows, ones_diff_cols)), add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols))), add(add(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(mul(add(zeros_diff_cols, compare_blocks_cols), add(add(add(compare_blocks_cols, ones_diff_cols), ones_diff_rows), compare_blocks_cols)), mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(mul(ones_diff_cols, zeros_diff_cols), ones_diff_cols)), add(ones_diff_cols, zeros_diff_rows)))
mul(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), add(mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_cols))))
add(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)))
mul(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, mul(ones_diff_cols, ones_diff_rows))))
COND TREES:
ge(_if_then_else(and_(True, True), _if_then_else(and_(ge(max_col_clue, ones_diff_rows), and_(True, False)), compare_blocks_rows, max_col_clue), _if_then_else(True, max_col_clue, 4)), _if_then_else(ge(_if_then_else(False, _if_then_else(False, compare_blocks_cols, compare_blocks_cols), zeros_diff_rows), 3), _if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(True, zeros_diff_rows, ones_diff_rows)))
or_(le(_if_then_else(ge(_if_then_else(True, 1, compare_blocks_cols), _if_then_else(False, max_row_clue, 1)), _if_then_else(or_(True, False), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, 2, max_col_clue)), _if_then_else(le(0, compare_blocks_rows), _if_then_else(True, ones_diff_rows, ones_diff_rows), _if_then_else(False, 2, ones_diff_rows))), _if_then_else(le(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, zeros_diff_rows)), _if_then_else(ge(1, max_col_clue), _if_then_else(True, 4, ones_diff_rows), _if_then_else(ge(zeros_diff_cols, zeros_diff_rows), 0, compare_blocks_rows)), _if_then_else(and_(True, False), _if_then_else(True, 0, max_row_clue), _if_then_else(True, zeros_diff_rows, compare_blocks_rows)))), ge(_if_then_else(le(_if_then_else(False, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, max_row_clue, ones_diff_cols)), _if_then_else(ge(4, 4), _if_then_else(False, 3, max_col_clue), _if_then_else(False, zeros_diff_rows, ones_diff_cols)), _if_then_else(or_(True, False), _if_then_else(True, 2, 3), compare_blocks_cols)), _if_then_else(and_(le(0, zeros_diff_rows), le(compare_blocks_rows, max_row_clue)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 4, 1)), _if_then_else(or_(True, True), _if_then_else(True, 0, compare_blocks_rows), _if_then_else(False, 0, max_col_clue)))))
ge(_if_then_else(ge(3, 1), _if_then_else(and_(or_(ge(_if_then_else(False, 3, 0), ones_diff_rows), False), True), 2, max_col_clue), _if_then_else(True, 1, _if_then_else(or_(True, and_(le(_if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 3)), or_(True, le(3, 3)))), 0, zeros_diff_rows))), _if_then_else(or_(False, True), _if_then_else(True, _if_then_else(False, 3, 4), 0), _if_then_else(and_(True, False), 4, 3)))
le(_if_then_else(True, 4, max_col_clue), _if_then_else(or_(True, True), _if_then_else(True, 3, max_row_clue), _if_then_else(True, 0, compare_blocks_rows)))
or_(ge(_if_then_else(False, 0, ones_diff_cols), _if_then_else(True, 1, compare_blocks_rows)), le(_if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 1)))
le(_if_then_else(ge(4, ones_diff_cols), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(True, max_col_clue, zeros_diff_cols)), _if_then_else(True, _if_then_else(ge(zeros_diff_rows, ones_diff_cols), _if_then_else(True, 4, max_row_clue), 1), _if_then_else(False, 2, _if_then_else(False, compare_blocks_rows, 0))))
ge(_if_then_else(le(3, _if_then_else(False, 3, zeros_diff_cols)), _if_then_else(True, _if_then_else(False, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, max_col_clue)), _if_then_else(ge(compare_blocks_cols, max_col_clue), _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(False, compare_blocks_cols, ones_diff_cols))), _if_then_else(and_(True, and_(False, True)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_rows, 4), _if_then_else(True, 4, 3)), _if_then_else(ge(ones_diff_rows, 3), _if_then_else(False, zeros_diff_cols, 1), _if_then_else(True, zeros_diff_cols, 4))))
and_(or_(or_(False, False), ge(_if_then_else(True, zeros_diff_rows, 0), compare_blocks_rows)), or_(ge(_if_then_else(True, 1, 3), max_row_clue), and_(True, False)))
VAL TREES:
mul(mul(add(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_cols, zeros_diff_rows)))
add(mul(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(mul(add(mul(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows))), mul(add(add(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_rows))))
mul(mul(add(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), mul(mul(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, ones_diff_cols))), add(add(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))))
mul(mul(mul(add(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows))), add(add(add(ones_diff_rows, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_rows)), add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows))))
mul(add(mul(ones_diff_cols, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_cols)), add(add(ones_diff_cols, zeros_diff_rows), add(add(mul(ones_diff_cols, zeros_diff_rows), zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows))))
mul(add(add(ones_diff_rows, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(mul(mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_cols)), add(mul(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_rows))), mul(add(add(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), add(add(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))), mul(mul(mul(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_rows)), add(add(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_rows)), mul(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_cols)))))
COND TREES:
and_(or_(False, False), ge(_if_then_else(True, 4, ones_diff_rows), _if_then_else(False, 1, zeros_diff_rows)))
ge(_if_then_else(le(compare_blocks_rows, 2), _if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(le(zeros_diff_rows, max_row_clue), 4, ones_diff_rows)), _if_then_else(le(zeros_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(True, 4, max_col_clue)))
le(_if_then_else(ge(_if_then_else(True, ones_diff_cols, 4), _if_then_else(False, 0, 0)), _if_then_else(or_(True, True), _if_then_else(True, 4, compare_blocks_cols), _if_then_else(True, 0, ones_diff_rows)), _if_then_else(le(compare_blocks_cols, max_col_clue), _if_then_else(False, 2, 0), zeros_diff_cols)), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, 2, max_row_clue)), _if_then_else(le(0, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 1, 4))))
ge(_if_then_else(or_(True, False), _if_then_else(True, 2, max_row_clue), _if_then_else(True, 2, _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(le(ones_diff_rows, 3), _if_then_else(True, _if_then_else(True, 1, 3), zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows)))
ge(_if_then_else(True, _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, 2), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, zeros_diff_cols))), _if_then_else(or_(ge(zeros_diff_rows, zeros_diff_rows), ge(zeros_diff_cols, compare_blocks_rows)), _if_then_else(and_(True, False), ones_diff_rows, _if_then_else(True, 1, ones_diff_cols)), _if_then_else(le(4, ones_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, 0, 2))))
and_(le(_if_then_else(and_(True, True), 4, zeros_diff_cols), _if_then_else(True, ones_diff_rows, max_col_clue)), True)
ge(_if_then_else(or_(and_(and_(False, False), and_(False, True)), ge(_if_then_else(True, zeros_diff_cols, max_col_clue), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(False, ones_diff_rows, 3)), _if_then_else(le(0, 2), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows))), _if_then_else(or_(le(ones_diff_cols, compare_blocks_rows), or_(False, False)), _if_then_else(ge(max_row_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(True, 0, compare_blocks_rows)), _if_then_else(le(compare_blocks_rows, zeros_diff_cols), 1, _if_then_else(True, ones_diff_cols, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 2), _if_then_else(True, max_col_clue, ones_diff_rows)), and_(ge(3, 2), ge(zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(or_(False, False), and_(True, False)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 2, 4)), _if_then_else(and_(False, True), _if_then_else(False, ones_diff_rows, max_row_clue), _if_then_else(True, zeros_diff_rows, max_row_clue))), _if_then_else(le(_if_then_else(True, max_col_clue, ones_diff_rows), _if_then_else(False, compare_blocks_rows, 2)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_rows, 4), _if_then_else(True, zeros_diff_cols, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(True, max_col_clue, 4)))))
le(_if_then_else(ge(_if_then_else(ge(1, 1), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, max_row_clue, max_row_clue)), _if_then_else(ge(compare_blocks_cols, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 3))), _if_then_else(and_(or_(True, True), ge(3, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, 3, 3), _if_then_else(False, max_row_clue, 1)), _if_then_else(or_(True, True), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, 3))), _if_then_else(or_(le(zeros_diff_cols, 2), or_(False, True)), _if_then_else(le(1, ones_diff_rows), _if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 1), _if_then_else(True, 3, 1)))), _if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, 2, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, 3, max_col_clue), _if_then_else(True, 3, ones_diff_rows))), _if_then_else(and_(and_(False, False), and_(False, True)), _if_then_else(le(max_col_clue, ones_diff_rows), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, 3, max_row_clue)), _if_then_else(and_(False, True), _if_then_else(False, 2, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows))), _if_then_else(ge(_if_then_else(True, max_row_clue, max_col_clue), _if_then_else(True, max_row_clue, ones_diff_cols)), _if_then_else(ge(_if_then_else(True, zeros_diff_cols, 3), max_col_clue), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 2, 2)), _if_then_else(le(3, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)))))
VAL TREES:
add(mul(mul(mul(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_rows))), add(add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)))), add(add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols)), add(mul(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))))
mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows)))
mul(add(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)), add(mul(compare_blocks_rows, mul(zeros_diff_cols, ones_diff_cols)), mul(zeros_diff_cols, compare_blocks_rows)))
add(mul(mul(mul(mul(ones_diff_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_cols, ones_diff_cols))), add(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_cols)), mul(add(ones_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_cols)), add(mul(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_rows, compare_blocks_rows))), mul(add(add(zeros_diff_cols, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows)), mul(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_cols)))))
mul(add(mul(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_rows, ones_diff_rows)), add(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_cols, ones_diff_cols))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, zeros_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(mul(add(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), add(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)))
add(mul(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(mul(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)))
mul(add(mul(mul(zeros_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_cols))), add(mul(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_cols))))
mul(mul(add(zeros_diff_cols, add(ones_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, compare_blocks_cols), zeros_diff_cols)), mul(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)))
COND TREES:
and_(or_(False, True), ge(_if_then_else(True, 4, ones_diff_rows), _if_then_else(False, 1, zeros_diff_rows)))
ge(_if_then_else(le(compare_blocks_rows, 2), _if_then_else(True, ones_diff_cols, zeros_diff_cols), _if_then_else(and_(True, True), 4, ones_diff_rows)), _if_then_else(le(zeros_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(True, 4, max_col_clue)))
le(_if_then_else(ge(_if_then_else(True, ones_diff_cols, 4), _if_then_else(False, 0, 0)), _if_then_else(or_(True, True), _if_then_else(True, 4, compare_blocks_cols), _if_then_else(ge(_if_then_else(or_(True, False), _if_then_else(True, 4, max_row_clue), _if_then_else(False, 1, compare_blocks_rows)), _if_then_else(le(ones_diff_rows, zeros_diff_cols), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, 2))), _if_then_else(and_(le(2, 1), le(0, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, max_row_clue, ones_diff_rows), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(and_(False, True), _if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, 2, 0))), _if_then_else(le(_if_then_else(False, zeros_diff_rows, 4), _if_then_else(True, compare_blocks_cols, 0)), _if_then_else(or_(False, True), _if_then_else(True, zeros_diff_rows, 2), _if_then_else(False, compare_blocks_rows, 3)), _if_then_else(le(2, compare_blocks_cols), _if_then_else(True, ones_diff_rows, _if_then_else(ge(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, 2, max_row_clue)), _if_then_else(le(0, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 1, 4)))), _if_then_else(True, zeros_diff_cols, 0))))), _if_then_else(le(compare_blocks_cols, max_col_clue), _if_then_else(False, 2, 0), zeros_diff_cols)), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, 2, max_row_clue)), _if_then_else(le(0, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 1, 4))))
ge(_if_then_else(or_(True, False), _if_then_else(True, 2, max_row_clue), compare_blocks_cols), _if_then_else(le(ones_diff_rows, 3), _if_then_else(True, _if_then_else(True, 1, 3), zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows)))
ge(_if_then_else(True, _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_rows, 2), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, zeros_diff_cols))), _if_then_else(or_(ge(zeros_diff_rows, zeros_diff_rows), ge(zeros_diff_cols, compare_blocks_rows)), _if_then_else(and_(True, False), _if_then_else(True, 3, compare_blocks_cols), _if_then_else(True, 1, ones_diff_cols)), _if_then_else(le(4, ones_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, 0, 2))))
and_(and_(False, True), True)
ge(_if_then_else(or_(and_(and_(False, False), and_(False, True)), ge(_if_then_else(True, ones_diff_rows, max_col_clue), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(False, ones_diff_rows, 3)), _if_then_else(le(0, 2), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows))), _if_then_else(or_(le(ones_diff_cols, compare_blocks_rows), or_(False, False)), _if_then_else(ge(max_row_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(True, 0, compare_blocks_rows)), _if_then_else(le(compare_blocks_rows, zeros_diff_cols), 1, _if_then_else(True, ones_diff_cols, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 2), _if_then_else(True, max_col_clue, ones_diff_rows)), and_(ge(3, 2), ge(zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(or_(False, False), and_(True, False)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 2, 4)), _if_then_else(and_(False, True), _if_then_else(False, ones_diff_rows, max_row_clue), _if_then_else(True, zeros_diff_rows, max_row_clue))), _if_then_else(le(_if_then_else(True, max_col_clue, ones_diff_rows), _if_then_else(False, compare_blocks_rows, 2)), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(and_(True, True), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(True, max_col_clue, 4)))))
le(_if_then_else(ge(_if_then_else(ge(1, 1), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, max_row_clue, max_row_clue)), _if_then_else(ge(compare_blocks_cols, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 3))), _if_then_else(and_(or_(True, True), ge(3, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, 3, 3), _if_then_else(False, max_row_clue, 1)), _if_then_else(or_(True, True), _if_then_else(False, 3, zeros_diff_rows), ones_diff_rows)), _if_then_else(or_(le(zeros_diff_cols, 2), or_(False, True)), _if_then_else(le(1, ones_diff_rows), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 1), _if_then_else(True, 3, 1)))), _if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, 2, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, 3, max_col_clue), _if_then_else(True, 3, ones_diff_rows))), _if_then_else(and_(and_(False, False), and_(False, True)), _if_then_else(le(max_col_clue, ones_diff_rows), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, 3, max_row_clue)), _if_then_else(and_(False, True), _if_then_else(False, 2, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows))), _if_then_else(ge(_if_then_else(True, max_row_clue, max_col_clue), _if_then_else(True, max_row_clue, ones_diff_cols)), _if_then_else(ge(1, max_col_clue), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 2, 2)), _if_then_else(le(3, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)))))
VAL TREES:
add(mul(mul(mul(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_rows))), add(add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)))), add(add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols)), add(mul(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))))
mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows)))
mul(add(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)), add(mul(compare_blocks_rows, mul(zeros_diff_cols, ones_diff_cols)), mul(zeros_diff_cols, compare_blocks_rows)))
add(mul(mul(mul(mul(ones_diff_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_cols, ones_diff_cols))), add(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_cols)), mul(add(ones_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_cols)), add(mul(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_rows, compare_blocks_rows))), mul(add(add(zeros_diff_cols, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows)), mul(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_cols)))))
mul(add(mul(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_rows, ones_diff_rows)), add(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_cols, ones_diff_cols))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, zeros_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(mul(add(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), add(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)))
add(mul(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(mul(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)))
mul(add(mul(mul(zeros_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_cols))), add(mul(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_cols))))
mul(mul(add(zeros_diff_cols, add(ones_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, compare_blocks_cols), zeros_diff_cols)), mul(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)))
COND TREES:
and_(and_(or_(True, False), or_(True, True)), and_(le(max_col_clue, _if_then_else(or_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(ge(max_col_clue, ones_diff_rows), 0, 1))), or_(le(1, 1), False)))
or_(True, ge(_if_then_else(ge(compare_blocks_cols, _if_then_else(or_(le(_if_then_else(le(ones_diff_cols, compare_blocks_rows), _if_then_else(False, 0, 0), _if_then_else(True, 3, max_row_clue)), _if_then_else(ge(zeros_diff_cols, zeros_diff_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 2))), and_(and_(le(1, compare_blocks_rows), and_(False, False)), or_(or_(False, False), ge(2, max_col_clue)))), 3, 3)), compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, _if_then_else(False, 0, compare_blocks_rows))))
and_(True, False)
ge(_if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(True, ones_diff_rows, 2)), _if_then_else(le(max_row_clue, max_col_clue), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(and_(False, True), compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(True, 3, ones_diff_rows), 1), _if_then_else(or_(False, True), _if_then_else(True, max_col_clue, 0), _if_then_else(True, max_row_clue, 3))), _if_then_else(or_(le(ones_diff_cols, 0), and_(True, True)), _if_then_else(and_(False, False), zeros_diff_cols, _if_then_else(True, compare_blocks_cols, 3)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, 3, 2)))), _if_then_else(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(True, 0, ones_diff_cols), _if_then_else(False, 0, 4)), _if_then_else(or_(True, False), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, 2, ones_diff_cols))), _if_then_else(and_(and_(True, True), and_(True, False)), _if_then_else(ge(1, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, 2, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 3, ones_diff_rows))), _if_then_else(le(_if_then_else(False, compare_blocks_rows, ones_diff_rows), _if_then_else(True, 3, 2)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(ge(_if_then_else(le(_if_then_else(False, compare_blocks_rows, ones_diff_rows), _if_then_else(False, max_col_clue, 2)), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, max_row_clue), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(False, 0, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows))), _if_then_else(or_(and_(True, False), ge(zeros_diff_rows, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_rows, 1), _if_then_else(True, zeros_diff_cols, 2)), _if_then_else(ge(zeros_diff_cols, ones_diff_cols), _if_then_else(False, 1, 1), _if_then_else(False, ones_diff_rows, zeros_diff_cols)))), _if_then_else(and_(and_(or_(False, False), and_(False, False)), or_(ge(max_row_clue, 4), or_(False, True))), _if_then_else(or_(le(zeros_diff_rows, max_col_clue), and_(False, True)), _if_then_else(le(4, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, 2), _if_then_else(False, max_col_clue, zeros_diff_rows)), _if_then_else(and_(True, False), _if_then_else(False, 1, 4), _if_then_else(True, ones_diff_rows, 1))), _if_then_else(ge(_if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(True, max_row_clue, 0)), _if_then_else(le(compare_blocks_cols, zeros_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, zeros_diff_rows)), _if_then_else(le(0, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(False, 2, ones_diff_cols)))), _if_then_else(and_(ge(_if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, 3, max_col_clue)), and_(le(zeros_diff_rows, ones_diff_rows), or_(False, False))), _if_then_else(le(_if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, 3, 3)), _if_then_else(and_(False, False), _if_then_else(True, max_col_clue, max_row_clue), _if_then_else(False, 2, 3)), _if_then_else(ge(ones_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_cols, 4), _if_then_else(True, 4, ones_diff_rows))), _if_then_else(and_(and_(True, True), ge(1, 0)), _if_then_else(and_(True, False), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(ge(3, 3), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, ones_diff_rows, zeros_diff_cols))))))))
ge(_if_then_else(and_(False, True), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 0, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 2, zeros_diff_rows)))
ge(_if_then_else(False, 1, max_row_clue), _if_then_else(le(_if_then_else(le(zeros_diff_rows, 2), 1, max_row_clue), _if_then_else(False, 1, 1)), _if_then_else(False, _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(True, 2, ones_diff_cols)), _if_then_else(and_(ge(_if_then_else(or_(True, True), zeros_diff_rows, zeros_diff_rows), compare_blocks_rows), ge(_if_then_else(ge(compare_blocks_cols, max_row_clue), 3, ones_diff_rows), max_col_clue)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 3, _if_then_else(True, max_col_clue, zeros_diff_cols))), _if_then_else(ge(compare_blocks_rows, _if_then_else(False, ones_diff_cols, max_row_clue)), _if_then_else(False, 2, 3), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)))))
ge(_if_then_else(and_(True, True), compare_blocks_rows, _if_then_else(False, zeros_diff_rows, 0)), _if_then_else(True, _if_then_else(or_(or_(True, and_(False, False)), le(max_col_clue, ones_diff_cols)), _if_then_else(le(1, _if_then_else(True, ones_diff_cols, 4)), _if_then_else(and_(False, True), max_col_clue, 3), _if_then_else(True, _if_then_else(True, zeros_diff_rows, zeros_diff_cols), compare_blocks_cols)), _if_then_else(ge(_if_then_else(True, 2, zeros_diff_rows), compare_blocks_cols), _if_then_else(False, ones_diff_cols, _if_then_else(True, 4, max_row_clue)), _if_then_else(False, _if_then_else(True, 4, ones_diff_cols), ones_diff_cols))), _if_then_else(False, 3, max_row_clue)))
or_(True, False)
VAL TREES:
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)))
add(mul(mul(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_rows)))
mul(add(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_rows, ones_diff_cols)), add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols))), add(add(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(mul(add(zeros_diff_cols, compare_blocks_cols), add(add(add(compare_blocks_cols, ones_diff_cols), ones_diff_rows), compare_blocks_cols)), mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(mul(ones_diff_cols, zeros_diff_cols), ones_diff_cols)), add(ones_diff_cols, zeros_diff_rows)))
mul(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), add(mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_cols))))
add(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)))
mul(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, mul(ones_diff_cols, ones_diff_rows))))
COND TREES:
and_(and_(or_(True, False), or_(True, True)), and_(le(max_col_clue, ones_diff_rows), or_(le(0, 0), and_(True, True))))
or_(or_(or_(False, False), le(_if_then_else(True, 1, ones_diff_rows), max_row_clue)), ge(_if_then_else(ge(_if_then_else(True, 1, ones_diff_rows), _if_then_else(True, ones_diff_rows, max_row_clue)), compare_blocks_cols, compare_blocks_rows), compare_blocks_rows))
and_(or_(and_(le(_if_then_else(or_(False, False), ones_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 3)), or_(True, le(3, 3))), and_(or_(or_(and_(le(_if_then_else(or_(False, False), ones_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 3)), or_(True, le(3, 3))), False), or_(True, True)), ge(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, 4, 4)))), or_(or_(False, False), le(_if_then_else(ge(0, max_row_clue), 4, _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), compare_blocks_cols)))
ge(_if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(True, ones_diff_rows, 2)), _if_then_else(le(max_row_clue, max_col_clue), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(True, 3, ones_diff_rows), 1), _if_then_else(or_(False, True), _if_then_else(True, max_col_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(or_(le(ones_diff_cols, 0), and_(True, True)), _if_then_else(and_(False, False), zeros_diff_cols, _if_then_else(True, compare_blocks_cols, 3)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, 3, 2)))), _if_then_else(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(True, 0, ones_diff_cols), _if_then_else(True, 0, 4)), _if_then_else(or_(True, False), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, 2, ones_diff_cols))), _if_then_else(and_(and_(True, True), and_(True, False)), _if_then_else(ge(1, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, 2, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 3, ones_diff_rows))), _if_then_else(le(_if_then_else(False, compare_blocks_rows, ones_diff_rows), _if_then_else(True, 3, 2)), _if_then_else(True, _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 4, _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, 4)))))))
ge(_if_then_else(and_(False, True), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, ones_diff_rows, max_row_clue)), _if_then_else(and_(False, True), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 2, zeros_diff_rows)))
ge(_if_then_else(and_(le(3, zeros_diff_cols), ge(max_row_clue, 3)), 1, _if_then_else(and_(False, False), _if_then_else(and_(False, False), zeros_diff_rows, max_row_clue), _if_then_else(True, 4, 0))), _if_then_else(le(_if_then_else(and_(le(3, zeros_diff_cols), ge(max_row_clue, 3)), _if_then_else(or_(False, False), _if_then_else(False, 2, 4), _if_then_else(True, max_row_clue, zeros_diff_cols)), _if_then_else(and_(False, False), _if_then_else(and_(False, False), zeros_diff_rows, 0), _if_then_else(True, 4, 0))), _if_then_else(False, 1, 1)), _if_then_else(ge(zeros_diff_cols, 0), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(True, 2, ones_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, 0, 4), _if_then_else(False, 1, max_row_clue))))
ge(_if_then_else(and_(True, True), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, 0)), _if_then_else(le(4, _if_then_else(False, 1, _if_then_else(True, zeros_diff_rows, 4))), _if_then_else(False, max_row_clue, max_row_clue), _if_then_else(True, 3, max_row_clue)))
or_(False, or_(or_(and_(False, False), or_(True, True)), or_(ge(max_col_clue, ones_diff_rows), True)))
VAL TREES:
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)), mul(mul(mul(mul(mul(add(add(compare_blocks_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows)), add(add(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_cols, ones_diff_cols))), add(add(mul(compare_blocks_rows, ones_diff_rows), add(zeros_diff_rows, ones_diff_rows)), add(add(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, ones_diff_rows)))), add(add(add(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_cols)), mul(add(ones_diff_rows, ones_diff_cols), mul(compare_blocks_cols, ones_diff_rows))), add(mul(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows)), add(add(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_cols))))), zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)))
add(mul(mul(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_rows)))
mul(add(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_rows, ones_diff_cols)), add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols))), add(add(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(mul(add(zeros_diff_cols, compare_blocks_cols), add(add(add(compare_blocks_cols, ones_diff_cols), ones_diff_rows), compare_blocks_cols)), mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(mul(ones_diff_cols, zeros_diff_cols), ones_diff_cols)), add(ones_diff_cols, zeros_diff_rows)))
mul(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), add(mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_cols))))
add(mul(mul(zeros_diff_rows, compare_blocks_rows), add(add(mul(add(ones_diff_rows, zeros_diff_rows), add(add(ones_diff_rows, zeros_diff_rows), zeros_diff_cols)), mul(mul(ones_diff_cols, compare_blocks_rows), add(add(zeros_diff_cols, zeros_diff_rows), zeros_diff_cols))), zeros_diff_cols)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)))
mul(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, mul(mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols)), mul(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows))))))
COND TREES:
and_(or_(False, False), ge(_if_then_else(and_(True, True), _if_then_else(and_(ge(max_col_clue, ones_diff_rows), and_(True, True)), compare_blocks_rows, max_col_clue), _if_then_else(True, max_col_clue, 4)), _if_then_else(False, 1, zeros_diff_rows)))
ge(_if_then_else(le(compare_blocks_rows, 2), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(le(zeros_diff_rows, max_row_clue), 4, ones_diff_rows)), _if_then_else(le(zeros_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(True, 4, max_col_clue)))
le(_if_then_else(ge(_if_then_else(True, ones_diff_cols, 4), _if_then_else(False, 0, 0)), _if_then_else(or_(True, True), _if_then_else(True, 4, compare_blocks_cols), max_col_clue), _if_then_else(le(compare_blocks_cols, max_col_clue), _if_then_else(False, 2, 0), zeros_diff_cols)), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, 2, max_row_clue)), _if_then_else(le(0, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 1, 4))))
ge(_if_then_else(or_(True, False), _if_then_else(True, 2, max_row_clue), _if_then_else(False, 2, _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(le(ones_diff_rows, 3), _if_then_else(True, _if_then_else(True, 1, 3), zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows)))
ge(_if_then_else(True, _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, 2), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, zeros_diff_cols))), _if_then_else(or_(ge(zeros_diff_rows, zeros_diff_rows), ge(zeros_diff_cols, compare_blocks_rows)), _if_then_else(and_(True, False), ones_diff_rows, _if_then_else(True, 1, ones_diff_cols)), _if_then_else(le(4, ones_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, 0, 2))))
and_(False, True)
ge(_if_then_else(or_(and_(and_(False, False), and_(False, True)), ge(_if_then_else(True, zeros_diff_cols, max_col_clue), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(False, ones_diff_rows, 3)), _if_then_else(le(0, 2), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows))), _if_then_else(or_(le(ones_diff_cols, compare_blocks_rows), or_(False, False)), _if_then_else(ge(max_row_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_cols), ones_diff_cols), _if_then_else(le(compare_blocks_rows, zeros_diff_cols), 1, _if_then_else(True, ones_diff_cols, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 2), _if_then_else(True, max_col_clue, ones_diff_rows)), and_(ge(3, 2), ge(zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(or_(False, False), and_(True, False)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 2, 4)), _if_then_else(and_(False, True), _if_then_else(False, ones_diff_rows, max_row_clue), _if_then_else(True, zeros_diff_rows, max_row_clue))), _if_then_else(le(_if_then_else(True, max_col_clue, ones_diff_rows), _if_then_else(False, compare_blocks_rows, 2)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_rows, 4), _if_then_else(True, zeros_diff_cols, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(True, max_col_clue, 4)))))
le(_if_then_else(ge(_if_then_else(ge(1, 1), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, max_row_clue, max_row_clue)), _if_then_else(ge(compare_blocks_cols, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 3))), _if_then_else(and_(or_(True, True), ge(3, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, 3, 3), _if_then_else(False, max_row_clue, 1)), _if_then_else(or_(True, True), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, 3))), _if_then_else(or_(le(zeros_diff_cols, 2), or_(False, True)), _if_then_else(le(1, ones_diff_rows), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 1), _if_then_else(True, 3, 1)))), _if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, 2, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, 3, max_col_clue), _if_then_else(True, 3, ones_diff_rows))), _if_then_else(and_(and_(False, False), and_(False, True)), _if_then_else(le(max_col_clue, ones_diff_rows), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, 3, max_row_clue)), _if_then_else(and_(False, True), _if_then_else(False, 2, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows))), _if_then_else(ge(_if_then_else(True, max_row_clue, max_col_clue), _if_then_else(True, max_row_clue, ones_diff_cols)), _if_then_else(ge(_if_then_else(True, zeros_diff_cols, 3), max_col_clue), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 2, 2)), _if_then_else(le(3, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)))))
VAL TREES:
add(mul(mul(mul(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_rows))), add(add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)))), add(add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols)), add(mul(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))))
mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows)))
mul(add(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)), add(mul(compare_blocks_rows, mul(zeros_diff_cols, ones_diff_cols)), mul(zeros_diff_cols, compare_blocks_rows)))
add(mul(mul(mul(mul(ones_diff_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_cols, mul(mul(add(mul(add(compare_blocks_cols, compare_blocks_cols), ones_diff_cols), mul(ones_diff_rows, ones_diff_cols)), mul(zeros_diff_cols, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, add(add(zeros_diff_cols, compare_blocks_cols), ones_diff_rows))))))), add(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_cols)), mul(add(ones_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_cols)), add(mul(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_rows, compare_blocks_rows))), mul(add(add(zeros_diff_cols, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows)), mul(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_cols)))))
mul(add(mul(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_rows, ones_diff_rows)), add(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_cols, add(mul(mul(compare_blocks_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows)), add(mul(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_cols)))))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, zeros_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(mul(add(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), add(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)))
add(mul(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_cols, mul(add(mul(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, ones_diff_rows)), add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, ones_diff_cols))), add(add(add(ones_diff_cols, zeros_diff_rows), add(ones_diff_rows, compare_blocks_cols)), add(mul(zeros_diff_rows, ones_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)))))), mul(mul(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)))
mul(add(mul(mul(zeros_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_cols))), add(mul(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, ones_diff_cols), add(add(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)), add(mul(zeros_diff_cols, add(ones_diff_cols, compare_blocks_rows)), mul(mul(compare_blocks_rows, compare_blocks_cols), compare_blocks_rows))))))
mul(mul(add(zeros_diff_cols, add(ones_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, mul(add(mul(add(mul(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, compare_blocks_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols))), add(add(add(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_cols)), mul(add(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)))), add(add(mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, compare_blocks_cols)), add(mul(compare_blocks_rows, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_rows))), add(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(zeros_diff_cols, ones_diff_cols)))))), zeros_diff_cols)), mul(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)))
COND TREES:
and_(and_(or_(True, False), or_(True, True)), and_(le(max_col_clue, _if_then_else(or_(or_(and_(True, False), False), le(_if_then_else(or_(False, False), _if_then_else(True, compare_blocks_cols, 3), _if_then_else(True, compare_blocks_cols, 2)), _if_then_else(ge(1, 3), _if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_cols, 1)))), _if_then_else(True, max_row_clue, 2), _if_then_else(False, 0, 1))), or_(le(0, 1), False)))
or_(or_(or_(False, False), le(compare_blocks_cols, max_row_clue)), ge(_if_then_else(ge(_if_then_else(True, 1, ones_diff_rows), _if_then_else(True, 3, _if_then_else(or_(ge(0, ones_diff_cols), le(zeros_diff_rows, 2)), _if_then_else(and_(True, False), _if_then_else(True, max_row_clue, zeros_diff_rows), _if_then_else(True, max_col_clue, 4)), _if_then_else(ge(2, max_row_clue), _if_then_else(False, 3, max_row_clue), _if_then_else(False, ones_diff_cols, compare_blocks_rows))))), compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, _if_then_else(False, 0, compare_blocks_rows))))
and_(or_(le(_if_then_else(or_(False, True), _if_then_else(ge(3, max_row_clue), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 1, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(False, 0, ones_diff_rows), zeros_diff_cols)), _if_then_else(ge(max_row_clue, max_row_clue), _if_then_else(True, 3, 4), _if_then_else(ge(ones_diff_cols, 3), 2, 0))), and_(or_(or_(True, False), or_(True, True)), ge(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, 4, 4)))), or_(or_(False, False), le(_if_then_else(ge(0, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(False, 1, 1))))
ge(_if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(le(compare_blocks_rows, 2), ones_diff_rows, 2)), _if_then_else(le(max_row_clue, max_col_clue), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(True, 3, ones_diff_rows), 1), _if_then_else(or_(False, True), _if_then_else(True, max_col_clue, 0), _if_then_else(True, max_row_clue, 3))), _if_then_else(or_(le(ones_diff_cols, 0), and_(True, True)), _if_then_else(and_(False, False), zeros_diff_cols, _if_then_else(True, compare_blocks_cols, 3)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, 3, 2)))), _if_then_else(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(True, 0, ones_diff_cols), _if_then_else(True, 0, 4)), _if_then_else(or_(True, False), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, 2, ones_diff_cols))), _if_then_else(and_(and_(True, True), and_(True, False)), _if_then_else(ge(1, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, 2, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 3, ones_diff_rows))), _if_then_else(le(_if_then_else(False, compare_blocks_rows, ones_diff_rows), _if_then_else(True, 3, 2)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(and_(le(zeros_diff_rows, 0), ge(compare_blocks_cols, ones_diff_rows)), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 4, _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, 4)))))))
ge(_if_then_else(and_(False, True), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, ones_diff_rows, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_cols, _if_then_else(or_(le(zeros_diff_cols, zeros_diff_rows), or_(True, False)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, 2, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, 4, zeros_diff_rows)))), _if_then_else(False, 2, zeros_diff_rows)))
ge(_if_then_else(and_(le(3, zeros_diff_cols), False), _if_then_else(or_(False, or_(and_(or_(False, False), ge(0, max_row_clue)), and_(or_(True, False), and_(True, True)))), _if_then_else(False, 2, 4), _if_then_else(False, max_row_clue, zeros_diff_cols)), _if_then_else(and_(False, False), _if_then_else(and_(False, False), zeros_diff_rows, max_row_clue), _if_then_else(True, 4, 0))), 4)
ge(_if_then_else(and_(True, True), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, 0)), _if_then_else(le(4, compare_blocks_rows), _if_then_else(False, max_row_clue, max_row_clue), _if_then_else(True, 3, max_row_clue)))
or_(ge(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(True, zeros_diff_cols, 3)), or_(and_(False, True), or_(True, True)))
VAL TREES:
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)))
add(mul(mul(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_rows)))
mul(add(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_rows, ones_diff_cols)), add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols))), add(add(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(mul(add(zeros_diff_cols, compare_blocks_cols), add(add(add(compare_blocks_cols, ones_diff_cols), ones_diff_rows), compare_blocks_cols)), mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(mul(ones_diff_cols, zeros_diff_cols), ones_diff_cols)), add(ones_diff_cols, zeros_diff_rows)))
mul(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), add(mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_cols))))
add(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)))
mul(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, mul(ones_diff_cols, ones_diff_rows))))
COND TREES:
and_(and_(or_(True, False), or_(True, True)), and_(le(max_col_clue, _if_then_else(or_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(ge(max_col_clue, ones_diff_rows), 0, 1))), or_(le(0, 1), False)))
or_(True, ge(_if_then_else(ge(_if_then_else(True, 1, ones_diff_rows), _if_then_else(True, 3, 3)), compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, _if_then_else(False, 0, compare_blocks_rows))))
and_(and_(le(_if_then_else(or_(False, False), ones_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 3)), or_(True, le(3, 3))), False)
ge(_if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(True, ones_diff_rows, 2)), _if_then_else(le(max_row_clue, max_col_clue), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(True, 3, ones_diff_rows), 1), _if_then_else(or_(False, True), _if_then_else(True, max_col_clue, 0), _if_then_else(True, max_row_clue, 3))), _if_then_else(or_(le(ones_diff_cols, 0), and_(True, True)), _if_then_else(and_(False, False), zeros_diff_cols, _if_then_else(True, compare_blocks_cols, 3)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, 3, 2)))), _if_then_else(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(True, 0, ones_diff_cols), _if_then_else(False, 0, 4)), _if_then_else(or_(True, False), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, 2, ones_diff_cols))), _if_then_else(and_(and_(True, True), and_(True, False)), _if_then_else(ge(1, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, 2, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 3, ones_diff_rows))), _if_then_else(le(_if_then_else(False, compare_blocks_rows, ones_diff_rows), _if_then_else(True, 3, 2)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 4, _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, 4)))))))
ge(_if_then_else(and_(False, True), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 0, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 2, zeros_diff_rows)))
ge(_if_then_else(and_(le(3, zeros_diff_cols), ge(max_row_clue, 3)), _if_then_else(or_(False, False), _if_then_else(False, 2, 4), _if_then_else(True, max_row_clue, zeros_diff_cols)), _if_then_else(and_(False, False), _if_then_else(and_(False, False), zeros_diff_rows, 0), _if_then_else(True, 4, 0))), _if_then_else(le(_if_then_else(le(zeros_diff_rows, 2), 1, max_row_clue), _if_then_else(False, 1, 1)), _if_then_else(False, _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(True, 2, ones_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, 0, 1), _if_then_else(False, 1, max_row_clue))))
ge(_if_then_else(and_(True, True), _if_then_else(False, 1, _if_then_else(True, zeros_diff_rows, 4)), _if_then_else(False, zeros_diff_rows, 0)), _if_then_else(True, _if_then_else(False, max_row_clue, max_row_clue), _if_then_else(False, 3, max_row_clue)))
or_(True, or_(and_(False, False), or_(True, True)))
VAL TREES:
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)))
add(mul(mul(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, compare_blocks_cols), add(mul(add(mul(zeros_diff_rows, zeros_diff_rows), add(ones_diff_rows, zeros_diff_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_cols))), ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_rows)))
mul(add(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_rows, ones_diff_cols)), add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols))), add(add(add(mul(add(mul(mul(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_cols))), mul(add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)))), zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(mul(add(zeros_diff_cols, compare_blocks_cols), add(add(add(compare_blocks_cols, ones_diff_cols), ones_diff_rows), compare_blocks_cols)), mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(mul(ones_diff_cols, zeros_diff_cols), ones_diff_cols)), add(ones_diff_cols, zeros_diff_rows)))
mul(add(add(mul(compare_blocks_rows, compare_blocks_cols), mul(add(add(compare_blocks_rows, mul(compare_blocks_rows, ones_diff_rows)), add(compare_blocks_cols, ones_diff_rows)), mul(mul(ones_diff_rows, add(compare_blocks_rows, zeros_diff_rows)), add(ones_diff_cols, compare_blocks_rows)))), mul(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), add(mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_cols))))
add(mul(mul(zeros_diff_rows, mul(add(add(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_cols)))), add(compare_blocks_rows, zeros_diff_cols)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)))
mul(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, mul(ones_diff_cols, ones_diff_rows))))
COND TREES:
ge(_if_then_else(and_(True, True), _if_then_else(and_(ge(max_col_clue, ones_diff_rows), and_(True, True)), compare_blocks_rows, max_col_clue), _if_then_else(True, max_col_clue, 4)), _if_then_else(ge(_if_then_else(False, _if_then_else(False, compare_blocks_cols, compare_blocks_cols), zeros_diff_rows), 3), _if_then_else(True, _if_then_else(True, max_row_clue, 1), max_row_clue), _if_then_else(True, zeros_diff_rows, ones_diff_rows)))
or_(le(_if_then_else(ge(_if_then_else(True, 1, compare_blocks_cols), _if_then_else(False, max_row_clue, 1)), _if_then_else(or_(True, False), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(False, 2, max_col_clue)), _if_then_else(le(0, compare_blocks_rows), _if_then_else(True, ones_diff_rows, ones_diff_rows), _if_then_else(False, 2, ones_diff_rows))), _if_then_else(le(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, ones_diff_rows, zeros_diff_rows)), _if_then_else(ge(1, max_col_clue), _if_then_else(True, 4, ones_diff_rows), _if_then_else(ge(zeros_diff_cols, zeros_diff_rows), 0, compare_blocks_rows)), _if_then_else(and_(True, False), _if_then_else(True, 0, max_row_clue), _if_then_else(True, zeros_diff_rows, compare_blocks_rows)))), ge(_if_then_else(le(_if_then_else(False, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, max_row_clue, ones_diff_cols)), _if_then_else(ge(4, 4), _if_then_else(False, 3, max_col_clue), _if_then_else(False, zeros_diff_rows, ones_diff_cols)), _if_then_else(or_(True, False), _if_then_else(True, 2, 3), _if_then_else(False, 4, 1))), _if_then_else(and_(le(0, zeros_diff_rows), le(compare_blocks_rows, max_row_clue)), _if_then_else(ge(_if_then_else(True, 1, ones_diff_rows), _if_then_else(True, 3, 3)), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 4, 1)), _if_then_else(or_(True, True), _if_then_else(True, 0, compare_blocks_rows), _if_then_else(False, 0, max_col_clue)))))
ge(_if_then_else(ge(3, 1), _if_then_else(and_(or_(ge(_if_then_else(False, 3, 0), ones_diff_rows), False), True), 2, max_col_clue), _if_then_else(True, 1, _if_then_else(or_(True, False), zeros_diff_cols, zeros_diff_rows))), _if_then_else(or_(le(3, 3), True), _if_then_else(True, _if_then_else(False, _if_then_else(ge(0, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), 4), 0), _if_then_else(and_(True, False), 4, 3)))
le(0, 3)
or_(and_(True, True), le(_if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, 4, 1)))
le(_if_then_else(ge(4, ones_diff_cols), _if_then_else(False, 1, zeros_diff_cols), zeros_diff_cols), _if_then_else(True, _if_then_else(True, _if_then_else(True, 4, max_row_clue), 1), _if_then_else(False, ones_diff_cols, _if_then_else(False, compare_blocks_rows, 0))))
ge(_if_then_else(le(3, _if_then_else(False, 3, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, max_col_clue)), _if_then_else(ge(compare_blocks_cols, max_col_clue), _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(False, compare_blocks_cols, ones_diff_cols))), _if_then_else(and_(True, and_(False, True)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_rows, 4), _if_then_else(True, 4, 3)), _if_then_else(ge(ones_diff_rows, 3), _if_then_else(False, zeros_diff_cols, 1), _if_then_else(True, zeros_diff_cols, 4))))
and_(or_(or_(False, False), ge(_if_then_else(True, zeros_diff_rows, 0), max_col_clue)), or_(True, and_(True, False)))
VAL TREES:
mul(mul(add(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_cols, zeros_diff_rows)))
add(mul(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_cols)))
add(add(mul(zeros_diff_rows, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), mul(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols)))
add(mul(add(mul(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows))), mul(add(add(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_rows))))
mul(mul(add(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), mul(mul(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, ones_diff_cols))), add(add(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))))
mul(mul(mul(add(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows))), add(add(add(ones_diff_rows, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_rows)), add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows))))
mul(add(mul(ones_diff_cols, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_cols)), add(add(ones_diff_cols, zeros_diff_rows), add(add(mul(ones_diff_cols, zeros_diff_rows), zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows))))
mul(add(add(ones_diff_rows, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_rows)))
add(mul(mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_cols)), add(mul(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_rows))), mul(add(add(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), add(add(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)))), mul(mul(mul(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_rows)), add(add(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_rows)), mul(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_cols)))))
COND TREES:
and_(and_(or_(True, False), or_(True, True)), and_(le(max_col_clue, ones_diff_rows), or_(le(0, 1), and_(True, True))))
or_(or_(or_(False, False), le(compare_blocks_cols, max_row_clue)), ge(_if_then_else(ge(_if_then_else(True, 1, ones_diff_rows), _if_then_else(True, ones_diff_rows, max_row_clue)), compare_blocks_cols, compare_blocks_rows), compare_blocks_rows))
and_(or_(and_(le(_if_then_else(or_(False, False), ones_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 3)), or_(True, le(3, 3))), and_(or_(or_(True, False), or_(True, True)), ge(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, 4, 4)))), or_(or_(False, False), le(_if_then_else(ge(0, max_row_clue), 4, _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), compare_blocks_cols)))
ge(_if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(True, ones_diff_rows, 2)), _if_then_else(le(max_row_clue, max_col_clue), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(True, 3, ones_diff_rows), 1), _if_then_else(or_(False, True), _if_then_else(True, max_col_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(or_(le(ones_diff_cols, 0), and_(True, True)), _if_then_else(and_(False, False), zeros_diff_cols, _if_then_else(True, compare_blocks_cols, 3)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, 3, 2)))), _if_then_else(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(True, 0, ones_diff_cols), _if_then_else(True, 0, 4)), _if_then_else(or_(True, False), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, 2, ones_diff_cols))), _if_then_else(and_(and_(True, True), and_(True, False)), _if_then_else(ge(1, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, 2, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 3, ones_diff_rows))), _if_then_else(le(_if_then_else(False, compare_blocks_rows, ones_diff_rows), _if_then_else(True, 3, 2)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 4, _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, 4)))))))
ge(_if_then_else(and_(False, True), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, ones_diff_rows, max_row_clue)), _if_then_else(and_(False, True), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 2, zeros_diff_rows)))
ge(_if_then_else(and_(le(3, zeros_diff_cols), ge(max_row_clue, 3)), 1, _if_then_else(and_(False, False), _if_then_else(and_(False, False), zeros_diff_rows, max_row_clue), _if_then_else(True, 4, 0))), _if_then_else(le(_if_then_else(False, 1, max_row_clue), _if_then_else(False, 1, 1)), _if_then_else(ge(zeros_diff_cols, 0), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(True, 2, ones_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, 0, 4), _if_then_else(False, 1, max_row_clue))))
ge(_if_then_else(and_(True, True), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, 0)), _if_then_else(le(4, compare_blocks_rows), _if_then_else(False, max_row_clue, max_row_clue), _if_then_else(True, 3, max_row_clue)))
or_(False, or_(False, or_(ge(max_col_clue, ones_diff_rows), True)))
VAL TREES:
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)))
add(mul(mul(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_rows)))
mul(add(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_rows, ones_diff_cols)), add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols))), add(add(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(mul(add(zeros_diff_cols, compare_blocks_cols), add(add(add(compare_blocks_cols, ones_diff_cols), ones_diff_rows), compare_blocks_cols)), mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(mul(ones_diff_cols, zeros_diff_cols), ones_diff_cols)), add(ones_diff_cols, zeros_diff_rows)))
mul(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), add(mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_cols))))
add(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)))
mul(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, mul(ones_diff_cols, ones_diff_rows))))
COND TREES:
and_(or_(False, False), ge(_if_then_else(True, 4, ones_diff_rows), _if_then_else(False, 1, 1)))
ge(_if_then_else(le(compare_blocks_rows, 2), _if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(le(zeros_diff_rows, max_row_clue), 4, ones_diff_rows)), _if_then_else(le(zeros_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(le(compare_blocks_cols, max_row_clue), 4, max_col_clue)))
le(_if_then_else(ge(_if_then_else(True, ones_diff_cols, 4), _if_then_else(False, 0, 0)), _if_then_else(or_(True, True), _if_then_else(True, 4, compare_blocks_cols), _if_then_else(True, 0, ones_diff_rows)), _if_then_else(le(compare_blocks_cols, max_col_clue), _if_then_else(False, 2, 0), zeros_diff_cols)), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, 2, max_row_clue)), _if_then_else(le(0, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 1, 4))))
ge(_if_then_else(or_(True, False), _if_then_else(True, 2, max_row_clue), _if_then_else(True, 2, _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(le(ones_diff_rows, 3), _if_then_else(True, _if_then_else(True, 1, 0), zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows)))
ge(_if_then_else(True, _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, 2), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, zeros_diff_cols))), _if_then_else(or_(ge(zeros_diff_rows, zeros_diff_rows), ge(zeros_diff_cols, compare_blocks_rows)), _if_then_else(and_(True, False), ones_diff_rows, _if_then_else(True, 1, ones_diff_cols)), _if_then_else(le(4, ones_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, 0, 2))))
and_(le(_if_then_else(and_(False, True), 4, zeros_diff_cols), _if_then_else(True, ones_diff_rows, max_col_clue)), True)
ge(_if_then_else(or_(and_(and_(False, False), and_(False, True)), ge(_if_then_else(True, zeros_diff_cols, max_col_clue), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(False, ones_diff_rows, 3)), _if_then_else(le(0, 2), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows))), _if_then_else(or_(le(ones_diff_cols, compare_blocks_rows), or_(False, False)), _if_then_else(ge(max_row_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(True, 0, compare_blocks_rows)), _if_then_else(le(compare_blocks_rows, zeros_diff_cols), 1, _if_then_else(True, ones_diff_cols, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 2), _if_then_else(True, max_col_clue, ones_diff_rows)), and_(ge(3, 2), ge(zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(or_(False, False), and_(True, False)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 2, 4)), _if_then_else(and_(False, True), _if_then_else(False, ones_diff_rows, max_row_clue), _if_then_else(True, zeros_diff_rows, max_row_clue))), _if_then_else(le(_if_then_else(True, max_col_clue, ones_diff_rows), _if_then_else(False, compare_blocks_rows, 2)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_rows, 4), _if_then_else(True, zeros_diff_cols, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(True, max_col_clue, 4)))))
le(_if_then_else(ge(_if_then_else(ge(1, 1), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, max_row_clue, max_row_clue)), _if_then_else(ge(compare_blocks_cols, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 3))), _if_then_else(and_(or_(True, True), ge(3, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, 3, 3), _if_then_else(False, max_row_clue, 1)), _if_then_else(or_(True, True), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, 3))), _if_then_else(or_(le(zeros_diff_cols, 2), or_(False, True)), _if_then_else(le(1, ones_diff_rows), _if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 1), _if_then_else(True, 3, 1)))), _if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, 2, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, 3, max_col_clue), _if_then_else(True, 3, ones_diff_rows))), _if_then_else(and_(and_(False, False), and_(False, True)), _if_then_else(le(max_col_clue, ones_diff_rows), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, 3, max_row_clue)), _if_then_else(and_(False, True), _if_then_else(False, 2, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows))), _if_then_else(ge(_if_then_else(True, max_row_clue, max_col_clue), _if_then_else(True, max_row_clue, ones_diff_cols)), _if_then_else(ge(_if_then_else(True, zeros_diff_cols, 3), max_col_clue), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 2, 2)), _if_then_else(le(3, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)))))
VAL TREES:
add(mul(mul(mul(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_rows))), add(add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)))), add(add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols)), add(mul(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))))
mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(mul(mul(mul(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(ones_diff_rows, ones_diff_cols), add(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))), add(zeros_diff_rows, zeros_diff_rows)))
mul(add(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)), add(mul(compare_blocks_rows, mul(zeros_diff_cols, ones_diff_cols)), mul(zeros_diff_cols, compare_blocks_rows)))
add(mul(mul(mul(mul(ones_diff_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_cols, ones_diff_cols))), add(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_cols)), mul(add(ones_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_cols)), add(mul(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_rows, compare_blocks_rows))), mul(add(add(zeros_diff_cols, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows)), mul(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_cols)))))
mul(add(mul(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_rows, ones_diff_rows)), add(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_cols, ones_diff_cols))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, zeros_diff_cols)), mul(mul(zeros_diff_cols, mul(mul(mul(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)))), add(compare_blocks_rows, compare_blocks_cols))))
mul(mul(add(compare_blocks_cols, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_rows)), add(add(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, zeros_diff_cols)))
add(mul(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(mul(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)))
mul(add(mul(mul(zeros_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_cols))), add(mul(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_cols))))
mul(mul(add(add(mul(mul(ones_diff_rows, ones_diff_rows), compare_blocks_cols), mul(zeros_diff_rows, mul(zeros_diff_cols, add(ones_diff_cols, zeros_diff_rows)))), add(mul(compare_blocks_rows, zeros_diff_rows), mul(mul(compare_blocks_cols, mul(ones_diff_rows, ones_diff_cols)), ones_diff_rows))), add(add(ones_diff_cols, compare_blocks_cols), zeros_diff_cols)), mul(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)))
COND TREES:
and_(and_(True, True), ge(_if_then_else(True, 4, ones_diff_rows), _if_then_else(False, 1, zeros_diff_rows)))
ge(_if_then_else(le(compare_blocks_rows, 2), _if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(or_(False, False), compare_blocks_cols, ones_diff_rows)), _if_then_else(le(zeros_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(False, 4, max_col_clue)))
le(_if_then_else(ge(_if_then_else(or_(True, le(3, 3)), ones_diff_cols, 4), _if_then_else(False, 0, 0)), _if_then_else(or_(True, True), _if_then_else(True, 4, compare_blocks_cols), _if_then_else(True, 0, ones_diff_rows)), _if_then_else(le(compare_blocks_cols, max_col_clue), _if_then_else(False, 2, 0), zeros_diff_cols)), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, 2, max_row_clue)), _if_then_else(le(0, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 1, 4))))
ge(_if_then_else(False, _if_then_else(True, 2, max_row_clue), _if_then_else(True, 2, _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(le(ones_diff_rows, 3), _if_then_else(True, _if_then_else(True, 1, 3), zeros_diff_cols), _if_then_else(True, 0, zeros_diff_rows)))
ge(_if_then_else(True, _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, 2), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, zeros_diff_cols))), _if_then_else(or_(ge(zeros_diff_rows, zeros_diff_rows), False), _if_then_else(and_(True, False), _if_then_else(True, 3, compare_blocks_cols), _if_then_else(True, 1, ones_diff_cols)), _if_then_else(le(4, ones_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, 0, 2))))
and_(le(_if_then_else(and_(False, False), zeros_diff_rows, max_row_clue), zeros_diff_cols), True)
ge(_if_then_else(or_(and_(and_(False, False), and_(False, True)), ge(_if_then_else(True, zeros_diff_cols, _if_then_else(True, zeros_diff_rows, 0)), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), _if_then_else(le(4, compare_blocks_rows), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(False, ones_diff_rows, 3)), _if_then_else(le(0, 2), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows))), _if_then_else(or_(le(ones_diff_cols, compare_blocks_rows), or_(False, False)), _if_then_else(ge(max_row_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(True, 0, compare_blocks_rows)), _if_then_else(le(compare_blocks_rows, zeros_diff_cols), 1, _if_then_else(True, ones_diff_cols, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 2), _if_then_else(True, max_col_clue, ones_diff_rows)), and_(ge(3, 2), ge(zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(or_(False, False), and_(True, False)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 2, 4)), _if_then_else(and_(False, True), _if_then_else(False, ones_diff_rows, max_row_clue), _if_then_else(True, zeros_diff_rows, max_row_clue))), _if_then_else(le(_if_then_else(True, max_col_clue, ones_diff_rows), _if_then_else(False, compare_blocks_rows, 2)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_rows, 4), _if_then_else(True, zeros_diff_cols, max_row_clue)), zeros_diff_rows)))
le(_if_then_else(ge(_if_then_else(ge(1, 1), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, max_row_clue, max_row_clue)), _if_then_else(ge(compare_blocks_cols, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 3))), _if_then_else(and_(or_(True, True), ge(3, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, 3, 3), _if_then_else(False, max_row_clue, 1)), _if_then_else(True, _if_then_else(False, 3, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, 3))), _if_then_else(or_(le(zeros_diff_cols, 2), or_(False, True)), _if_then_else(le(1, ones_diff_rows), _if_then_else(or_(True, True), zeros_diff_rows, max_col_clue), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 1), _if_then_else(True, 3, 1)))), _if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, 2, ones_diff_rows)), _if_then_else(and_(True, True), ones_diff_rows, _if_then_else(True, 3, ones_diff_rows))), _if_then_else(and_(and_(False, False), and_(False, True)), _if_then_else(le(max_col_clue, ones_diff_rows), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, 3, max_row_clue)), _if_then_else(and_(False, True), _if_then_else(False, 2, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows))), _if_then_else(ge(_if_then_else(True, max_row_clue, max_col_clue), _if_then_else(True, max_row_clue, ones_diff_cols)), _if_then_else(ge(1, max_col_clue), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 2, 2)), _if_then_else(le(3, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)))))
VAL TREES:
add(mul(mul(mul(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_rows))), add(add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)))), add(add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols)), add(mul(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))))
mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows)))
mul(add(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)), add(mul(compare_blocks_rows, mul(zeros_diff_cols, ones_diff_cols)), mul(zeros_diff_cols, compare_blocks_rows)))
add(mul(mul(mul(mul(ones_diff_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_cols, ones_diff_cols))), add(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_cols)), mul(add(ones_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_cols)), add(mul(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_rows, compare_blocks_rows))), mul(add(add(zeros_diff_cols, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows)), mul(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_cols)))))
mul(add(mul(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_rows, ones_diff_rows)), add(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_cols, ones_diff_cols))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, zeros_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(mul(add(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), add(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)))
add(mul(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(mul(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)))
mul(add(mul(mul(zeros_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_cols))), add(mul(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_cols))))
mul(mul(add(zeros_diff_cols, add(ones_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, compare_blocks_cols), zeros_diff_cols)), mul(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)))
COND TREES:
and_(and_(or_(True, False), or_(True, True)), and_(le(max_col_clue, ones_diff_rows), or_(le(0, 1), or_(False, or_(le(0, 1), False)))))
or_(or_(or_(True, False), le(compare_blocks_cols, max_row_clue)), ge(_if_then_else(ge(_if_then_else(True, 1, ones_diff_rows), _if_then_else(True, ones_diff_rows, max_row_clue)), compare_blocks_cols, compare_blocks_rows), compare_blocks_rows))
and_(or_(and_(le(_if_then_else(or_(False, False), ones_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 3)), True), and_(or_(or_(True, False), or_(True, True)), ge(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, 4, 4)))), or_(or_(False, False), le(_if_then_else(ge(0, max_row_clue), 4, _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), compare_blocks_cols)))
ge(_if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(True, ones_diff_rows, 2)), _if_then_else(le(max_row_clue, max_col_clue), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(True, 3, ones_diff_rows), 1), _if_then_else(or_(False, True), _if_then_else(True, max_col_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(or_(le(ones_diff_cols, 0), and_(True, True)), _if_then_else(and_(False, False), zeros_diff_cols, _if_then_else(True, compare_blocks_cols, 3)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, 3, 2)))), _if_then_else(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(True, 0, ones_diff_cols), _if_then_else(True, 0, 4)), _if_then_else(or_(True, False), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, 2, ones_diff_cols))), _if_then_else(and_(and_(True, True), and_(True, False)), _if_then_else(ge(1, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, 2, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 3, ones_diff_rows))), _if_then_else(le(_if_then_else(False, compare_blocks_rows, ones_diff_rows), _if_then_else(True, 3, 2)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, 4, _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, 4)))))))
ge(_if_then_else(and_(False, True), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, ones_diff_rows, max_row_clue)), _if_then_else(and_(ge(zeros_diff_cols, compare_blocks_rows), True), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 2, zeros_diff_rows)))
ge(_if_then_else(and_(le(3, zeros_diff_cols), ge(max_row_clue, 3)), 1, _if_then_else(and_(False, False), _if_then_else(and_(False, False), zeros_diff_rows, max_row_clue), _if_then_else(True, 4, 0))), _if_then_else(le(_if_then_else(False, 1, max_row_clue), _if_then_else(False, 1, 1)), _if_then_else(ge(zeros_diff_cols, 0), _if_then_else(True, _if_then_else(False, ones_diff_rows, max_col_clue), compare_blocks_rows), _if_then_else(True, 2, ones_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, 0, 4), _if_then_else(False, 1, max_row_clue))))
ge(_if_then_else(and_(True, True), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, 0)), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows)), _if_then_else(False, max_row_clue, max_row_clue), _if_then_else(True, 3, max_row_clue)))
or_(False, or_(False, or_(ge(max_col_clue, _if_then_else(False, 3, max_col_clue)), True)))
VAL TREES:
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)))
add(mul(mul(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)), mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_rows, compare_blocks_rows), add(add(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_cols)))))
mul(add(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_rows, ones_diff_cols)), add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols))), add(add(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(mul(add(zeros_diff_cols, compare_blocks_cols), add(add(add(compare_blocks_cols, ones_diff_cols), ones_diff_rows), compare_blocks_cols)), mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(mul(mul(mul(compare_blocks_cols, compare_blocks_cols), mul(mul(ones_diff_cols, ones_diff_rows), compare_blocks_cols)), mul(mul(ones_diff_cols, compare_blocks_cols), add(add(zeros_diff_cols, ones_diff_rows), zeros_diff_cols))), ones_diff_cols)), add(ones_diff_cols, zeros_diff_rows)))
mul(add(mul(add(add(mul(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(compare_blocks_cols, mul(ones_diff_rows, zeros_diff_rows))), add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols))), mul(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), add(mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_cols))))
add(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)))
mul(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, mul(ones_diff_cols, add(mul(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows)), add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_rows)))))))
COND TREES:
and_(and_(or_(True, False), or_(True, True)), and_(le(max_col_clue, _if_then_else(or_(True, False), _if_then_else(True, max_row_clue, 2), _if_then_else(ge(max_col_clue, ones_diff_rows), 0, 1))), or_(le(0, 1), False)))
or_(True, ge(_if_then_else(ge(_if_then_else(True, 1, ones_diff_rows), _if_then_else(True, 3, 3)), compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, _if_then_else(False, 0, compare_blocks_rows))))
and_(and_(le(_if_then_else(or_(False, False), ones_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 3)), or_(True, le(3, 3))), False)
ge(_if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(True, ones_diff_rows, 2)), _if_then_else(le(max_row_clue, max_col_clue), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(True, 3, ones_diff_rows), 1), _if_then_else(or_(False, True), _if_then_else(True, max_col_clue, 0), _if_then_else(True, max_row_clue, 3))), _if_then_else(or_(le(ones_diff_cols, 0), and_(True, True)), _if_then_else(and_(False, False), zeros_diff_cols, _if_then_else(True, compare_blocks_cols, 3)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, 3, 2)))), _if_then_else(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(True, 0, ones_diff_cols), _if_then_else(False, 0, 4)), _if_then_else(or_(True, False), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, 2, ones_diff_cols))), _if_then_else(and_(and_(True, True), and_(True, False)), _if_then_else(ge(1, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, 2, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 3, ones_diff_rows))), _if_then_else(le(_if_then_else(False, compare_blocks_rows, ones_diff_rows), _if_then_else(True, 3, 2)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 4, _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, 4)))))))
ge(_if_then_else(and_(False, True), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 0, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 2, zeros_diff_rows)))
ge(_if_then_else(and_(le(3, zeros_diff_cols), ge(max_row_clue, 3)), _if_then_else(or_(False, False), _if_then_else(False, 2, 4), _if_then_else(True, max_row_clue, zeros_diff_cols)), _if_then_else(and_(False, False), _if_then_else(and_(False, False), zeros_diff_rows, 0), _if_then_else(True, 4, 0))), _if_then_else(le(_if_then_else(le(zeros_diff_rows, 2), 1, max_row_clue), _if_then_else(False, 1, 1)), _if_then_else(False, _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(True, 2, ones_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, 0, 1), _if_then_else(False, 1, max_row_clue))))
ge(_if_then_else(and_(True, True), _if_then_else(False, 1, _if_then_else(True, zeros_diff_rows, 4)), _if_then_else(False, zeros_diff_rows, 0)), _if_then_else(True, _if_then_else(False, max_row_clue, max_row_clue), _if_then_else(False, 3, max_row_clue)))
or_(True, or_(and_(False, False), or_(True, True)))
VAL TREES:
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)))
add(mul(mul(compare_blocks_rows, ones_diff_rows), mul(mul(add(add(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)), add(mul(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, zeros_diff_rows))), compare_blocks_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, compare_blocks_cols), add(mul(mul(add(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)), add(mul(zeros_diff_rows, ones_diff_cols), mul(compare_blocks_rows, ones_diff_rows))), ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_rows)))
mul(add(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_rows, ones_diff_cols)), add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols))), add(add(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(mul(add(zeros_diff_cols, compare_blocks_cols), add(add(add(compare_blocks_cols, ones_diff_cols), ones_diff_rows), compare_blocks_cols)), mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(mul(ones_diff_cols, zeros_diff_cols), ones_diff_cols)), add(ones_diff_cols, zeros_diff_rows)))
mul(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), add(mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_cols))))
add(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_rows, add(mul(mul(mul(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_cols)), add(mul(zeros_diff_rows, ones_diff_cols), mul(compare_blocks_rows, compare_blocks_cols))), add(mul(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_cols)), mul(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows)))))), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)))
mul(add(mul(add(mul(mul(ones_diff_rows, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), add(add(zeros_diff_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_rows))), compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, mul(ones_diff_cols, ones_diff_rows))))
COND TREES:
and_(or_(False, False), ge(_if_then_else(True, 4, ones_diff_rows), _if_then_else(True, 1, zeros_diff_rows)))
ge(compare_blocks_cols, _if_then_else(le(zeros_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(True, 4, max_col_clue)))
le(_if_then_else(ge(_if_then_else(True, ones_diff_cols, 4), _if_then_else(False, 0, 0)), _if_then_else(or_(True, True), _if_then_else(True, 4, compare_blocks_cols), _if_then_else(True, 0, ones_diff_rows)), zeros_diff_rows), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, 2, max_row_clue)), _if_then_else(le(0, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 1, 4))))
ge(_if_then_else(or_(True, False), _if_then_else(True, 2, max_row_clue), _if_then_else(True, 2, _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(le(ones_diff_rows, 3), _if_then_else(True, 0, zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows)))
ge(_if_then_else(True, _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, 2), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, max_col_clue, zeros_diff_rows), max_row_clue)), _if_then_else(or_(ge(zeros_diff_rows, zeros_diff_rows), ge(zeros_diff_cols, compare_blocks_rows)), _if_then_else(and_(True, False), ones_diff_rows, _if_then_else(True, 1, ones_diff_cols)), _if_then_else(le(4, ones_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, 0, 2))))
and_(le(_if_then_else(and_(True, True), 4, zeros_diff_cols), _if_then_else(True, ones_diff_rows, max_col_clue)), or_(True, False))
ge(_if_then_else(or_(and_(and_(False, False), and_(False, True)), ge(_if_then_else(True, zeros_diff_cols, max_col_clue), _if_then_else(True, max_row_clue, zeros_diff_rows))), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(False, ones_diff_rows, 3)), _if_then_else(le(0, 2), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows))), _if_then_else(or_(le(ones_diff_cols, compare_blocks_rows), or_(False, False)), _if_then_else(ge(max_row_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(True, 0, compare_blocks_rows)), _if_then_else(le(compare_blocks_rows, zeros_diff_cols), 1, _if_then_else(True, ones_diff_cols, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 2), _if_then_else(True, max_col_clue, ones_diff_rows)), and_(ge(3, 2), ge(zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(or_(False, False), and_(True, False)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 2, 4)), _if_then_else(and_(False, True), _if_then_else(False, ones_diff_rows, max_row_clue), _if_then_else(True, zeros_diff_rows, max_row_clue))), _if_then_else(le(_if_then_else(True, max_col_clue, ones_diff_rows), _if_then_else(False, compare_blocks_rows, 2)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_rows, 4), _if_then_else(True, zeros_diff_cols, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(True, max_col_clue, 4)))))
le(_if_then_else(ge(_if_then_else(ge(1, 1), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, max_row_clue, max_row_clue)), _if_then_else(ge(compare_blocks_cols, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 3))), _if_then_else(and_(or_(True, True), ge(3, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, 3, 3), _if_then_else(False, max_row_clue, 1)), _if_then_else(or_(True, True), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, 3))), _if_then_else(or_(le(zeros_diff_cols, 2), or_(False, True)), _if_then_else(le(1, ones_diff_rows), _if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 1), _if_then_else(or_(True, True), 3, 1)))), _if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, 2, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, 3, max_col_clue), _if_then_else(True, 3, ones_diff_rows))), _if_then_else(and_(and_(False, False), and_(False, True)), _if_then_else(le(max_col_clue, ones_diff_rows), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, 3, max_row_clue)), _if_then_else(and_(False, True), _if_then_else(False, 2, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows))), _if_then_else(ge(_if_then_else(True, max_row_clue, max_col_clue), _if_then_else(True, max_row_clue, ones_diff_cols)), _if_then_else(ge(_if_then_else(True, zeros_diff_cols, 3), max_col_clue), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 2, 2)), _if_then_else(le(3, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)))))
VAL TREES:
add(mul(mul(mul(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_rows))), add(add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)))), add(mul(add(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, zeros_diff_rows)), add(mul(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_rows))), mul(mul(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols)), add(mul(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))))
mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, mul(add(add(add(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_rows))), mul(add(add(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows))))), add(zeros_diff_rows, zeros_diff_rows)))
mul(add(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)), add(mul(compare_blocks_rows, mul(zeros_diff_cols, ones_diff_cols)), mul(add(add(add(add(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_cols))), mul(mul(mul(compare_blocks_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))), mul(mul(mul(add(ones_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), add(ones_diff_rows, ones_diff_rows))), add(add(mul(zeros_diff_cols, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_cols)))))))
add(mul(mul(mul(mul(ones_diff_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_cols, ones_diff_cols))), add(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_cols)), mul(add(ones_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_cols)), add(mul(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_rows, compare_blocks_rows))), mul(add(add(zeros_diff_cols, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows)), mul(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_cols)))))
mul(add(mul(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_rows, ones_diff_rows)), add(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_cols, ones_diff_cols))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, zeros_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(mul(add(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), add(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)))
add(mul(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), add(add(add(ones_diff_rows, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_rows)), mul(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, zeros_diff_rows))))
mul(add(mul(mul(zeros_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(mul(add(mul(zeros_diff_cols, zeros_diff_cols), compare_blocks_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(zeros_diff_cols, zeros_diff_rows), add(add(compare_blocks_rows, add(compare_blocks_cols, zeros_diff_cols)), compare_blocks_rows))))), add(mul(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_cols))))
mul(mul(add(zeros_diff_cols, add(ones_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, compare_blocks_cols), zeros_diff_cols)), mul(add(add(mul(mul(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_cols, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)))
COND TREES:
and_(and_(or_(True, False), or_(True, True)), and_(le(max_col_clue, ones_diff_rows), or_(le(0, 1), and_(True, True))))
or_(or_(or_(False, False), le(compare_blocks_cols, max_row_clue)), ge(_if_then_else(ge(_if_then_else(True, 1, ones_diff_rows), _if_then_else(True, ones_diff_rows, max_row_clue)), compare_blocks_cols, compare_blocks_rows), compare_blocks_rows))
and_(or_(and_(le(_if_then_else(or_(False, False), ones_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 3)), or_(True, le(3, 3))), and_(or_(or_(True, False), or_(True, True)), ge(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, 4, 4)))), or_(or_(False, False), le(_if_then_else(ge(0, max_row_clue), 4, _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), compare_blocks_cols)))
ge(_if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(True, ones_diff_rows, 2)), _if_then_else(le(max_row_clue, max_col_clue), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(True, 3, ones_diff_rows), 1), _if_then_else(or_(False, True), _if_then_else(True, max_col_clue, 0), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(or_(le(ones_diff_cols, 0), and_(True, True)), _if_then_else(and_(False, False), zeros_diff_cols, _if_then_else(True, compare_blocks_cols, 3)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, 3, 2)))), _if_then_else(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(True, 0, ones_diff_cols), _if_then_else(True, 0, 4)), _if_then_else(or_(True, False), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, 2, ones_diff_cols))), _if_then_else(and_(and_(True, True), and_(True, False)), _if_then_else(ge(1, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, 2, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 3, ones_diff_rows))), _if_then_else(le(_if_then_else(False, compare_blocks_rows, ones_diff_rows), _if_then_else(True, 3, 2)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 4, _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, 4)))))))
ge(_if_then_else(and_(False, True), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, ones_diff_rows, max_row_clue)), _if_then_else(and_(False, True), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 2, zeros_diff_rows)))
ge(_if_then_else(and_(le(3, zeros_diff_cols), ge(max_row_clue, 3)), 1, _if_then_else(and_(False, False), _if_then_else(and_(False, False), zeros_diff_rows, max_row_clue), _if_then_else(True, 4, 0))), _if_then_else(le(_if_then_else(False, 1, max_row_clue), _if_then_else(False, 1, 1)), _if_then_else(ge(zeros_diff_cols, 0), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(True, 2, ones_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, 0, 4), _if_then_else(False, 1, max_row_clue))))
ge(_if_then_else(and_(True, True), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, 0)), _if_then_else(le(4, compare_blocks_rows), _if_then_else(False, max_row_clue, max_row_clue), _if_then_else(True, 3, max_row_clue)))
or_(False, or_(False, or_(ge(max_col_clue, ones_diff_rows), True)))
VAL TREES:
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)))
add(mul(mul(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_rows)))
mul(add(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_rows, ones_diff_cols)), add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols))), add(add(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(mul(add(zeros_diff_cols, compare_blocks_cols), add(add(add(compare_blocks_cols, ones_diff_cols), ones_diff_rows), compare_blocks_cols)), mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(mul(ones_diff_cols, zeros_diff_cols), ones_diff_cols)), add(ones_diff_cols, zeros_diff_rows)))
mul(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), add(mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_cols))))
add(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)))
mul(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, mul(ones_diff_cols, ones_diff_rows))))
COND TREES:
and_(or_(False, False), ge(_if_then_else(True, 4, ones_diff_rows), _if_then_else(False, 1, 1)))
ge(_if_then_else(le(compare_blocks_rows, 2), _if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(le(zeros_diff_rows, max_row_clue), 4, ones_diff_rows)), _if_then_else(le(zeros_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(le(compare_blocks_cols, max_row_clue), 4, max_col_clue)))
le(_if_then_else(ge(_if_then_else(True, ones_diff_cols, 4), _if_then_else(False, 0, 0)), _if_then_else(or_(True, True), _if_then_else(True, 4, compare_blocks_cols), _if_then_else(True, 0, ones_diff_rows)), _if_then_else(le(compare_blocks_cols, max_col_clue), _if_then_else(False, 2, 0), zeros_diff_cols)), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, 2, max_row_clue)), _if_then_else(le(0, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 1, 4))))
ge(_if_then_else(or_(True, False), _if_then_else(True, 2, max_row_clue), _if_then_else(True, 2, _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(le(ones_diff_rows, 3), _if_then_else(True, _if_then_else(True, 1, 0), zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows)))
ge(_if_then_else(True, _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, 2), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, zeros_diff_cols))), _if_then_else(or_(ge(zeros_diff_rows, zeros_diff_rows), ge(zeros_diff_cols, compare_blocks_rows)), _if_then_else(and_(True, False), ones_diff_rows, _if_then_else(True, 1, ones_diff_cols)), _if_then_else(le(4, ones_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, 0, 2))))
and_(le(_if_then_else(and_(False, True), 4, zeros_diff_cols), _if_then_else(True, ones_diff_rows, max_col_clue)), True)
ge(_if_then_else(or_(and_(and_(False, False), and_(False, True)), ge(_if_then_else(True, zeros_diff_cols, max_col_clue), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(False, ones_diff_rows, 3)), _if_then_else(le(0, 2), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows))), _if_then_else(or_(le(ones_diff_cols, compare_blocks_rows), or_(False, False)), _if_then_else(ge(max_row_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(True, 0, compare_blocks_rows)), _if_then_else(le(compare_blocks_rows, zeros_diff_cols), 1, _if_then_else(True, ones_diff_cols, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 2), _if_then_else(True, max_col_clue, ones_diff_rows)), and_(ge(3, 2), ge(zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(or_(False, False), and_(True, False)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, 2, 4)), _if_then_else(and_(False, True), _if_then_else(False, ones_diff_rows, max_row_clue), _if_then_else(True, zeros_diff_rows, max_row_clue))), _if_then_else(le(_if_then_else(True, max_col_clue, ones_diff_rows), _if_then_else(False, compare_blocks_rows, 2)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_rows, 4), _if_then_else(True, zeros_diff_cols, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(True, max_col_clue, 4)))))
le(_if_then_else(ge(_if_then_else(ge(1, 1), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, max_row_clue, max_row_clue)), _if_then_else(ge(compare_blocks_cols, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 3))), _if_then_else(and_(or_(True, True), ge(3, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, 3, 3), _if_then_else(False, max_row_clue, 1)), _if_then_else(or_(True, True), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, 3))), _if_then_else(or_(le(zeros_diff_cols, 2), or_(False, True)), _if_then_else(le(1, ones_diff_rows), _if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 1), _if_then_else(True, 3, 1)))), _if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, 2, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, 3, max_col_clue), _if_then_else(True, 3, ones_diff_rows))), _if_then_else(and_(and_(False, False), and_(False, True)), _if_then_else(le(max_col_clue, ones_diff_rows), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, 3, max_row_clue)), _if_then_else(and_(False, True), _if_then_else(False, 2, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows))), _if_then_else(ge(_if_then_else(True, max_row_clue, max_col_clue), _if_then_else(True, max_row_clue, ones_diff_cols)), _if_then_else(ge(_if_then_else(True, zeros_diff_cols, 3), max_col_clue), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 2, 2)), _if_then_else(le(3, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)))))
VAL TREES:
add(mul(mul(mul(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_rows))), add(add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)))), add(add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols)), add(mul(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))))
mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(mul(mul(mul(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(add(ones_diff_rows, ones_diff_cols), add(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))), add(zeros_diff_rows, zeros_diff_rows)))
mul(add(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)), add(mul(compare_blocks_rows, mul(zeros_diff_cols, ones_diff_cols)), mul(zeros_diff_cols, compare_blocks_rows)))
add(mul(mul(mul(mul(ones_diff_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_cols, ones_diff_cols))), add(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_cols)), mul(add(ones_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_cols)), add(mul(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_rows, compare_blocks_rows))), mul(add(add(zeros_diff_cols, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows)), mul(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_cols)))))
mul(add(mul(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_rows, ones_diff_rows)), add(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_cols, ones_diff_cols))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(add(add(mul(zeros_diff_cols, zeros_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(compare_blocks_cols, zeros_diff_cols), compare_blocks_rows)), mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows)))), mul(mul(zeros_diff_cols, mul(mul(mul(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)))), add(compare_blocks_rows, compare_blocks_cols))))
mul(mul(add(add(add(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_rows)), add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows))), zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_rows)), add(add(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, zeros_diff_cols)))
add(mul(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(mul(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)))
mul(add(mul(mul(zeros_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_cols))), add(mul(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_cols))))
mul(mul(add(add(mul(mul(ones_diff_rows, ones_diff_rows), compare_blocks_cols), mul(zeros_diff_rows, mul(zeros_diff_cols, add(ones_diff_cols, zeros_diff_rows)))), add(mul(compare_blocks_rows, zeros_diff_rows), mul(mul(compare_blocks_cols, mul(ones_diff_rows, add(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_cols))))), ones_diff_rows))), add(add(ones_diff_cols, compare_blocks_cols), zeros_diff_cols)), mul(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)))
COND TREES:
and_(and_(or_(True, False), or_(True, True)), and_(le(max_col_clue, _if_then_else(or_(ge(_if_then_else(or_(True, True), _if_then_else(True, 1, ones_diff_cols), _if_then_else(True, compare_blocks_cols, 2)), _if_then_else(ge(4, 3), _if_then_else(False, ones_diff_cols, max_row_clue), _if_then_else(False, 2, ones_diff_rows))), and_(and_(ge(max_row_clue, max_col_clue), ge(1, compare_blocks_cols)), ge(_if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 4, compare_blocks_cols)))), _if_then_else(le(_if_then_else(le(3, 2), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(True, 1, zeros_diff_rows)), _if_then_else(or_(True, False), _if_then_else(True, 0, 3), _if_then_else(True, max_col_clue, ones_diff_cols))), _if_then_else(and_(le(4, zeros_diff_rows), and_(True, False)), _if_then_else(le(4, compare_blocks_cols), _if_then_else(False, 4, 3), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), _if_then_else(or_(or_(True, False), le(max_col_clue, compare_blocks_rows)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, max_row_clue, max_row_clue)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, 2, 2), _if_then_else(False, compare_blocks_cols, compare_blocks_rows)))), _if_then_else(and_(or_(and_(False, True), or_(False, False)), and_(and_(True, False), ge(0, ones_diff_rows))), _if_then_else(or_(ge(max_col_clue, ones_diff_rows), le(compare_blocks_rows, 3)), _if_then_else(ge(4, max_col_clue), _if_then_else(False, max_col_clue, ones_diff_rows), _if_then_else(False, ones_diff_cols, 1)), _if_then_else(ge(0, compare_blocks_cols), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(True, max_col_clue, max_col_clue))), _if_then_else(le(_if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 4, zeros_diff_cols)), _if_then_else(ge(compare_blocks_cols, 2), _if_then_else(True, 2, 0), _if_then_else(False, 3, compare_blocks_rows)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_rows, ones_diff_cols), _if_then_else(True, 0, max_row_clue)))))), or_(le(4, 1), False)))
or_(or_(or_(False, False), le(compare_blocks_cols, max_row_clue)), ge(_if_then_else(ge(_if_then_else(True, 1, ones_diff_rows), _if_then_else(le(zeros_diff_rows, max_row_clue), ones_diff_rows, 3)), _if_then_else(and_(ge(_if_then_else(ge(zeros_diff_rows, 3), _if_then_else(True, ones_diff_rows, 0), _if_then_else(True, 4, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_rows, ones_diff_cols))), or_(or_(and_(False, True), ge(compare_blocks_rows, ones_diff_cols)), and_(and_(False, False), or_(True, False)))), _if_then_else(or_(and_(and_(True, False), le(max_col_clue, 1)), le(_if_then_else(False, 2, max_col_clue), _if_then_else(True, ones_diff_cols, compare_blocks_rows))), _if_then_else(and_(and_(False, False), le(max_row_clue, 0)), _if_then_else(and_(True, True), _if_then_else(True, 0, compare_blocks_cols), _if_then_else(False, max_col_clue, ones_diff_cols)), _if_then_else(or_(True, False), _if_then_else(True, compare_blocks_cols, 2), _if_then_else(False, 0, 1))), _if_then_else(and_(le(3, 1), or_(False, False)), _if_then_else(and_(True, True), _if_then_else(True, 2, ones_diff_rows), _if_then_else(False, 0, 1)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, ones_diff_rows, 3), _if_then_else(True, compare_blocks_rows, 2)))), _if_then_else(le(_if_then_else(ge(3, max_col_clue), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, 2, 4)), _if_then_else(and_(False, True), _if_then_else(False, zeros_diff_rows, max_row_clue), _if_then_else(False, compare_blocks_cols, 0))), _if_then_else(le(_if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(False, 2, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_rows, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, max_row_clue)), _if_then_else(le(compare_blocks_cols, ones_diff_rows), _if_then_else(True, max_row_clue, 2), _if_then_else(False, 2, ones_diff_rows))), _if_then_else(ge(_if_then_else(False, ones_diff_cols, max_row_clue), _if_then_else(True, zeros_diff_rows, ones_diff_cols)), _if_then_else(ge(3, zeros_diff_rows), _if_then_else(True, 3, max_row_clue), _if_then_else(False, 1, max_row_clue)), _if_then_else(le(0, compare_blocks_cols), _if_then_else(False, max_row_clue, max_row_clue), _if_then_else(True, zeros_diff_rows, 3))))), compare_blocks_rows), _if_then_else(True, compare_blocks_rows, _if_then_else(False, 0, compare_blocks_rows))))
and_(or_(and_(le(_if_then_else(or_(False, False), ones_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 3)), or_(True, le(3, 3))), and_(or_(or_(True, False), or_(True, True)), ge(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, 4, 4)))), or_(or_(False, False), le(_if_then_else(ge(0, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(or_(ge(4, compare_blocks_cols), or_(True, False)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_rows, 2), _if_then_else(False, 3, 4)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(True, 2, max_col_clue), _if_then_else(False, 0, max_col_clue)))), _if_then_else(False, 1, 1))))
ge(_if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(True, ones_diff_rows, 2)), _if_then_else(le(max_row_clue, max_col_clue), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, 0, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(True, 3, ones_diff_rows), 1), _if_then_else(or_(False, True), _if_then_else(True, max_col_clue, 0), _if_then_else(True, max_row_clue, 3))), _if_then_else(or_(le(ones_diff_cols, 0), and_(True, True)), _if_then_else(and_(False, False), zeros_diff_cols, _if_then_else(True, compare_blocks_cols, 3)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, 3, 2)))), _if_then_else(le(_if_then_else(le(compare_blocks_cols, ones_diff_rows), _if_then_else(True, 0, ones_diff_cols), _if_then_else(True, 0, 4)), _if_then_else(or_(True, False), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, 2, ones_diff_cols))), _if_then_else(and_(and_(True, True), and_(True, False)), _if_then_else(ge(1, zeros_diff_cols), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, 2, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 3, ones_diff_rows))), _if_then_else(le(_if_then_else(False, compare_blocks_rows, ones_diff_rows), _if_then_else(True, 3, 2)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 4, _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, 4)))))))
ge(_if_then_else(and_(False, True), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, ones_diff_rows, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(False, _if_then_else(le(_if_then_else(ge(ones_diff_cols, 0), _if_then_else(False, max_row_clue, 1), _if_then_else(True, 4, compare_blocks_cols)), _if_then_else(le(compare_blocks_cols, 1), _if_then_else(False, ones_diff_cols, zeros_diff_rows), _if_then_else(False, ones_diff_cols, max_col_clue))), _if_then_else(or_(le(zeros_diff_cols, 3), and_(True, True)), _if_then_else(le(0, 1), _if_then_else(False, ones_diff_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, zeros_diff_rows)), _if_then_else(le(1, compare_blocks_cols), _if_then_else(False, 2, zeros_diff_rows), _if_then_else(False, 4, compare_blocks_rows))), _if_then_else(le(_if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(True, compare_blocks_cols, 0)), _if_then_else(le(1, max_row_clue), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(True, 0, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_rows)))), ones_diff_cols), _if_then_else(False, 2, zeros_diff_rows)))
ge(_if_then_else(and_(le(3, zeros_diff_cols), ge(_if_then_else(and_(True, True), 4, zeros_diff_cols), 3)), 1, _if_then_else(and_(False, False), _if_then_else(and_(False, False), zeros_diff_rows, max_row_clue), _if_then_else(True, 4, 0))), _if_then_else(le(_if_then_else(False, 1, max_row_clue), _if_then_else(False, 1, 1)), _if_then_else(ge(zeros_diff_cols, 0), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(True, 2, ones_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, _if_then_else(or_(and_(False, True), le(4, 0)), _if_then_else(ge(max_col_clue, compare_blocks_cols), _if_then_else(True, max_col_clue, ones_diff_rows), _if_then_else(True, 4, compare_blocks_rows)), _if_then_else(ge(zeros_diff_cols, max_row_clue), _if_then_else(False, 1, 2), _if_then_else(False, compare_blocks_rows, zeros_diff_cols))), 4), _if_then_else(False, 1, max_row_clue))))
ge(_if_then_else(and_(True, True), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, _if_then_else(ge(_if_then_else(False, 0, max_row_clue), _if_then_else(False, zeros_diff_rows, ones_diff_rows)), _if_then_else(ge(zeros_diff_cols, 4), _if_then_else(True, 3, 0), _if_then_else(True, compare_blocks_rows, max_col_clue)), _if_then_else(and_(True, True), _if_then_else(True, compare_blocks_cols, 2), _if_then_else(True, 2, 4))))), _if_then_else(False, 2, 4))
or_(False, or_(and_(False, False), or_(True, True)))
VAL TREES:
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)))
add(mul(mul(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))
add(mul(add(zeros_diff_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_rows)))
mul(add(add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_rows, ones_diff_cols)), add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols))), add(add(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(mul(add(zeros_diff_cols, compare_blocks_cols), add(add(add(compare_blocks_cols, ones_diff_cols), ones_diff_rows), compare_blocks_cols)), mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(mul(ones_diff_cols, zeros_diff_cols), ones_diff_cols)), add(ones_diff_cols, zeros_diff_rows)))
mul(add(add(mul(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows))), add(mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_cols))))
add(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)))
mul(add(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, mul(ones_diff_cols, ones_diff_rows))))
COND TREES:
and_(or_(False, False), ge(_if_then_else(True, 0, ones_diff_rows), _if_then_else(False, 1, zeros_diff_rows)))
ge(_if_then_else(le(compare_blocks_rows, 2), _if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(True, 4, ones_diff_rows)), _if_then_else(le(zeros_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(True, 4, max_col_clue)))
le(_if_then_else(ge(_if_then_else(True, ones_diff_cols, 4), _if_then_else(False, 0, 0)), _if_then_else(or_(True, True), _if_then_else(True, 4, compare_blocks_cols), _if_then_else(True, 0, ones_diff_rows)), _if_then_else(le(compare_blocks_cols, max_col_clue), _if_then_else(False, 2, 0), zeros_diff_cols)), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, 2, max_row_clue)), _if_then_else(le(0, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 1, 4))))
ge(_if_then_else(or_(True, False), _if_then_else(True, 2, max_row_clue), _if_then_else(True, 2, _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(le(1, 3), _if_then_else(True, _if_then_else(True, 1, 3), zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows)))
ge(_if_then_else(True, _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, 2), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, zeros_diff_cols))), _if_then_else(or_(ge(zeros_diff_rows, zeros_diff_rows), ge(zeros_diff_cols, compare_blocks_rows)), _if_then_else(and_(True, False), ones_diff_rows, _if_then_else(True, 1, ones_diff_cols)), _if_then_else(le(4, ones_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, 0, 2))))
and_(le(max_row_clue, _if_then_else(True, ones_diff_rows, max_col_clue)), True)
ge(_if_then_else(or_(and_(and_(False, False), and_(False, True)), ge(_if_then_else(True, zeros_diff_cols, max_col_clue), _if_then_else(True, ones_diff_rows, zeros_diff_rows))), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(False, ones_diff_rows, 3)), _if_then_else(le(0, 2), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows))), _if_then_else(or_(le(ones_diff_cols, compare_blocks_rows), or_(False, False)), _if_then_else(ge(max_row_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(True, 0, compare_blocks_rows)), _if_then_else(le(compare_blocks_rows, zeros_diff_cols), 1, _if_then_else(True, ones_diff_cols, ones_diff_rows)))), _if_then_else(and_(le(_if_then_else(True, 3, 2), _if_then_else(True, max_col_clue, ones_diff_rows)), and_(ge(3, 2), ge(zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(or_(False, False), and_(True, False)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(le(4, compare_blocks_rows), _if_then_else(False, max_row_clue, max_row_clue), _if_then_else(True, 3, max_row_clue))), _if_then_else(and_(False, True), _if_then_else(False, ones_diff_rows, max_row_clue), _if_then_else(True, zeros_diff_rows, max_row_clue))), _if_then_else(le(_if_then_else(True, max_col_clue, ones_diff_rows), _if_then_else(False, compare_blocks_rows, 2)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_rows, 4), _if_then_else(True, zeros_diff_cols, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(True, max_col_clue, 4)))))
le(_if_then_else(ge(_if_then_else(ge(1, 1), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, max_row_clue, max_row_clue)), _if_then_else(ge(compare_blocks_cols, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 3))), _if_then_else(and_(or_(True, True), ge(3, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, 3, 3), _if_then_else(False, max_row_clue, 1)), _if_then_else(or_(True, True), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, 3))), _if_then_else(or_(le(zeros_diff_cols, 2), or_(False, True)), _if_then_else(le(1, ones_diff_rows), _if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(True, max_row_clue, 1), _if_then_else(True, 3, 1)))), _if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, 2, ones_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, 3, max_col_clue), _if_then_else(True, 3, ones_diff_rows))), _if_then_else(and_(and_(False, False), and_(False, True)), _if_then_else(le(max_col_clue, ones_diff_rows), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, 3, max_row_clue)), _if_then_else(and_(False, True), _if_then_else(False, 2, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows))), _if_then_else(ge(_if_then_else(True, max_row_clue, max_col_clue), _if_then_else(True, max_row_clue, ones_diff_cols)), _if_then_else(ge(_if_then_else(True, zeros_diff_cols, 3), max_col_clue), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 2, 2)), _if_then_else(le(3, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)))))
VAL TREES:
add(mul(mul(mul(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_rows))), add(add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)))), add(add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols)), add(mul(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))))
mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows)))
mul(add(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)), add(mul(compare_blocks_rows, mul(zeros_diff_cols, ones_diff_cols)), mul(zeros_diff_cols, compare_blocks_rows)))
add(mul(mul(mul(mul(ones_diff_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)), add(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_cols, ones_diff_cols))), add(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_cols)), mul(add(ones_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)))), add(add(add(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_cols)), add(mul(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_rows, compare_blocks_rows))), mul(add(add(zeros_diff_cols, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows)), mul(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_cols)))))
mul(add(mul(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_rows, ones_diff_rows)), add(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_cols, ones_diff_cols))), add(add(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, zeros_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols))))
add(mul(add(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), add(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)))
add(mul(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(mul(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows)))
mul(add(mul(mul(zeros_diff_rows, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_cols))), add(mul(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_cols))))
mul(mul(add(zeros_diff_cols, add(ones_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, compare_blocks_cols), zeros_diff_cols)), mul(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)))


INFO:root:hof: COND TREES:
ge(_if_then_else(or_(or_(False, True), le(zeros_diff_cols, 2)), _if_then_else(le(3, ones_diff_cols), _if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(True, ones_diff_rows, 0)), _if_then_else(or_(False, False), _if_then_else(True, compare_blocks_rows, 0), _if_then_else(False, 2, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, 0), _if_then_else(True, compare_blocks_cols, 1)), _if_then_else(le(0, 3), _if_then_else(True, ones_diff_cols, ones_diff_rows), _if_then_else(True, 0, max_col_clue)), _if_then_else(and_(False, True), _if_then_else(False, zeros_diff_cols, 2), _if_then_else(True, max_row_clue, ones_diff_rows))))
and_(le(_if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 4, 3)), _if_then_else(or_(False, False), _if_then_else(True, 1, max_row_clue), _if_then_else(False, compare_blocks_rows, 3))), ge(_if_then_else(ge(ones_diff_cols, compare_blocks_rows), _if_then_else(True, 4, ones_diff_cols), _if_then_else(True, max_col_clue, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(True, ones_diff_rows, 2))))
ge(_if_then_else(or_(False, and_(True, True)), _if_then_else(True, max_row_clue, 4), _if_then_else(True, 1, 4)), _if_then_else(ge(_if_then_else(False, compare_blocks_rows, ones_diff_cols), 1), _if_then_else(or_(False, True), _if_then_else(True, zeros_diff_cols, 3), 2), _if_then_else(False, 0, 2)))
ge(_if_then_else(or_(False, ge(_if_then_else(False, zeros_diff_rows, 4), compare_blocks_cols)), _if_then_else(False, zeros_diff_cols, 4), _if_then_else(or_(False, False), 3, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(ge(max_row_clue, _if_then_else(True, zeros_diff_cols, 3)), 4, _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(False, _if_then_else(True, 4, _if_then_else(True, ones_diff_cols, 4)), 0)))
ge(_if_then_else(or_(or_(False, False), False), _if_then_else(True, max_row_clue, 2), _if_then_else(False, _if_then_else(True, zeros_diff_rows, 2), 3)), _if_then_else(ge(zeros_diff_cols, 3), _if_then_else(True, max_row_clue, 4), _if_then_else(False, ones_diff_rows, 1)))
ge(_if_then_else(or_(True, le(zeros_diff_cols, 1)), _if_then_else(True, max_col_clue, _if_then_else(False, compare_blocks_cols, compare_blocks_rows)), _if_then_else(True, zeros_diff_cols, max_row_clue)), _if_then_else(ge(_if_then_else(False, max_col_clue, compare_blocks_cols), compare_blocks_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, ones_diff_cols, max_col_clue)))
and_(ge(_if_then_else(or_(False, False), _if_then_else(True, 1, max_row_clue), _if_then_else(True, ones_diff_cols, 1)), _if_then_else(le(2, 4), _if_then_else(True, 1, ones_diff_cols), _if_then_else(True, ones_diff_cols, 1))), le(_if_then_else(ge(0, 4), _if_then_else(False, 3, compare_blocks_rows), _if_then_else(True, 4, 2)), _if_then_else(or_(False, False), _if_then_else(False, max_row_clue, zeros_diff_rows), _if_then_else(False, max_row_clue, 3))))
le(_if_then_else(and_(False, True), _if_then_else(True, 0, ones_diff_rows), _if_then_else(True, ones_diff_cols, compare_blocks_cols)), _if_then_else(ge(max_col_clue, max_row_clue), _if_then_else(True, max_row_clue, 1), _if_then_else(True, 0, 2)))
VAL TREES:
add(add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(compare_blocks_rows, mul(ones_diff_cols, add(ones_diff_cols, zeros_diff_cols))), add(ones_diff_cols, add(mul(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, zeros_diff_rows)))), add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, ones_diff_cols)))
mul(mul(mul(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), add(mul(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_rows, ones_diff_rows)))
mul(mul(add(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, zeros_diff_cols)))
add(add(add(add(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_rows)), add(add(zeros_diff_rows, ones_diff_rows), mul(compare_blocks_cols, ones_diff_rows))), mul(add(add(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_rows))))
add(add(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))
add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_cols, zeros_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, ones_diff_cols)))
add(mul(add(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_rows)), add(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, add(zeros_diff_rows, compare_blocks_cols))))
mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, ones_diff_rows)))


INFO:root:stats: {'fitness': <deap.tools.support.Statistics object at 0x0000028F15BF59E8>, 'size': <deap.tools.support.Statistics object at 0x0000028F15BF5A20>}

