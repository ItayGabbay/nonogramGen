INFO:root:

*******STARTING!!!******


INFO:root:

*******Configuration******


INFO:root:# NUM_ROWS = 20


INFO:root:NUM_ROWS = 5


INFO:root:# NUM_COLS = 20


INFO:root:NUM_COLS = 5


INFO:root:empty_in_split = '\xa0'


INFO:root:


INFO:root:pickle_unsolved_file_path = 'data/%dx%d_nonograms.pkl' % (NUM_ROWS, NUM_COLS)


INFO:root:pickle_solved_file_path = 'data/%dx%d_nonograms_solved.pkl' % (NUM_ROWS, NUM_COLS)


INFO:root:should_ran_in_parallel = True


INFO:root:


INFO:root:NUM_COND_TREES = 5


INFO:root:NUM_VAL_TREES = NUM_COND_TREES + 1


INFO:root:prob_crossover_global = 0.7  # global probability for cx


INFO:root:prob_crossover_individual_cond = 0.8  # probability to cx a specific cond tree in an individual


INFO:root:prob_crossover_individual_val = 0.8  # probability to cx a specific cond tree in an individual


INFO:root:prob_mutate_global = 0.2


INFO:root:prob_mutate_individual_cond = 0.5


INFO:root:prob_mutate_individual_val = 0.5


INFO:root:


INFO:root:points_correct_box = 5


INFO:root:points_incorrect_box = 0


INFO:root:# points_incorrect_box = -2


INFO:root:pop_size = 100


INFO:root:hof_size = 1


INFO:root:# num_gen = 40


INFO:root:num_gen = 10


INFO:root:train_size = 3


INFO:root:

*******DONE!!!******


INFO:root:run time: 77 sec

INFO:root:max possible fitness for the nonograms ran: 68

INFO:root:log:    	      	            fitness            	            size           
   	      	-------------------------------	---------------------------
gen	nevals	avg    	max    	min    	std    	avg	max	min	std
0  	100   	37.95  	56.6667	26.6667	7.09011	2  	2  	2  	0  
1  	70    	38.8   	56.6667	21.6667	7.29185	2  	2  	2  	0  
2  	68    	40.6333	56.6667	21.6667	7.37029	2  	2  	2  	0  
3  	82    	40.3833	53.3333	21.6667	7.80262	2  	2  	2  	0  
4  	69    	43.6333	53.3333	21.6667	7.3876 	2  	2  	2  	0  
5  	75    	43.05  	53.3333	21.6667	8.059  	2  	2  	2  	0  
6  	70    	44.7333	53.3333	33.3333	6.85047	2  	2  	2  	0  
7  	82    	44.7   	56.6667	26.6667	7.37255	2  	2  	2  	0  
8  	71    	46.2   	56.6667	26.6667	7.30327	2  	2  	2  	0  
9  	83    	46.0667	56.6667	33.3333	6.99412	2  	2  	2  	0  
10 	79    	44.6833	56.6667	26.6667	8.13666	2  	2  	2  	0  

INFO:root:pop: COND TREES:
ge(_if_then_else(or_(or_(and_(True, True), or_(False, True)), le(_if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, ARG6))), _if_then_else(ge(_if_then_else(False, ARG7, compare_blocks_rows), _if_then_else(True, ARG6, ones_diff_cols)), _if_then_else(le(3, zeros_diff_rows), _if_then_else(True, ARG6, 0), _if_then_else(True, compare_blocks_cols, zeros_diff_rows)), _if_then_else(ge(4, ARG6), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, zeros_diff_cols, ARG6))), _if_then_else(or_(ge(zeros_diff_cols, ones_diff_cols), le(compare_blocks_cols, 1)), _if_then_else(ge(compare_blocks_rows, ones_diff_rows), 2, _if_then_else(True, compare_blocks_cols, ones_diff_cols)), _if_then_else(ge(4, ones_diff_cols), _if_then_else(False, ARG7, 2), _if_then_else(False, compare_blocks_cols, ARG7)))), _if_then_else(or_(and_(le(3, compare_blocks_rows), ge(3, compare_blocks_cols)), ge(_if_then_else(False, 0, ARG7), _if_then_else(False, 2, ARG6))), _if_then_else(le(_if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, 3)), _if_then_else(or_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, 4)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(False, 0, 4))), _if_then_else(and_(True, ge(zeros_diff_cols, 1)), _if_then_else(or_(True, False), _if_then_else(False, ARG6, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(compare_blocks_cols, ones_diff_cols), _if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, 2)))))
and_(and_(and_(or_(True, True), ge(zeros_diff_rows, 1)), ge(_if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, ARG7))), or_(ge(_if_then_else(True, 1, ARG7), _if_then_else(False, ones_diff_rows, 4)), and_(True, True)))
ge(_if_then_else(le(_if_then_else(True, _if_then_else(or_(ge(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(le(ones_diff_cols, 4), 0, 0)), compare_blocks_cols), _if_then_else(False, 4, ones_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, ARG6, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(False, ARG7, ARG6))), _if_then_else(and_(and_(False, True), or_(True, False)), _if_then_else(le(3, 2), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(True, 2, 0)), _if_then_else(ge(ARG6, 2), _if_then_else(True, ARG6, ARG6), 2)))
le(_if_then_else(and_(False, True), _if_then_else(False, ARG7, ones_diff_rows), _if_then_else(True, 1, 2)), _if_then_else(False, _if_then_else(False, compare_blocks_cols, 2), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)))
le(_if_then_else(and_(True, and_(True, True)), _if_then_else(le(2, 0), zeros_diff_cols, 1), _if_then_else(False, _if_then_else(or_(True, False), _if_then_else(False, 2, 2), _if_then_else(False, 4, ARG6)), _if_then_else(True, 1, ARG7))), _if_then_else(and_(True, True), _if_then_else(False, _if_then_else(True, 4, 0), 2), _if_then_else(False, zeros_diff_rows, ARG6)))
VAL TREES:
mul(add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, zeros_diff_rows)), add(add(add(mul(zeros_diff_rows, add(ones_diff_rows, compare_blocks_cols)), mul(add(ones_diff_cols, ones_diff_rows), zeros_diff_cols)), add(add(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_rows))), add(zeros_diff_cols, zeros_diff_rows)))
add(add(mul(add(zeros_diff_rows, ones_diff_rows), mul(compare_blocks_rows, compare_blocks_cols)), mul(mul(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_rows, zeros_diff_rows))), add(mul(add(zeros_diff_cols, mul(compare_blocks_rows, compare_blocks_cols)), zeros_diff_rows), add(add(ones_diff_cols, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_rows))))
mul(add(add(ones_diff_cols, add(mul(mul(add(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_rows)), ones_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), add(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, zeros_diff_rows)))), add(ones_diff_cols, compare_blocks_cols)), add(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), mul(mul(add(add(add(mul(add(zeros_diff_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(mul(ones_diff_cols, ones_diff_cols), zeros_diff_cols))), add(add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(ones_diff_cols, compare_blocks_cols), mul(mul(zeros_diff_rows, compare_blocks_rows), compare_blocks_rows)))), mul(mul(mul(add(zeros_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_rows, zeros_diff_rows))), mul(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, zeros_diff_rows)), mul(mul(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_cols, compare_blocks_rows))))), zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_cols)))
add(add(add(compare_blocks_cols, ones_diff_cols), mul(mul(ones_diff_cols, zeros_diff_cols), add(compare_blocks_rows, compare_blocks_rows))), add(mul(compare_blocks_cols, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)))
add(add(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), add(mul(zeros_diff_cols, zeros_diff_cols), mul(mul(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), compare_blocks_rows))), mul(mul(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_cols))))
COND TREES:
ge(_if_then_else(le(_if_then_else(le(ones_diff_cols, 2), ones_diff_cols, _if_then_else(True, ones_diff_cols, 4)), _if_then_else(True, 0, _if_then_else(True, compare_blocks_rows, ARG6))), _if_then_else(ge(compare_blocks_cols, 2), zeros_diff_rows, 0), _if_then_else(False, _if_then_else(False, zeros_diff_cols, 1), 0)), _if_then_else(ge(ARG7, 3), _if_then_else(and_(ge(3, 4), le(zeros_diff_cols, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, compare_blocks_rows)), _if_then_else(le(zeros_diff_rows, ARG7), _if_then_else(True, 3, ones_diff_cols), _if_then_else(True, ones_diff_cols, 1))), _if_then_else(True, ARG6, ARG6)))
ge(_if_then_else(or_(or_(le(ones_diff_rows, 4), le(1, zeros_diff_rows)), le(_if_then_else(False, 0, ARG6), _if_then_else(True, ones_diff_rows, 4))), _if_then_else(and_(and_(True, False), or_(False, True)), _if_then_else(or_(False, and_(le(ARG6, ARG6), ge(2, 2))), _if_then_else(False, 3, ARG6), _if_then_else(True, ones_diff_cols, 2)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(False, ARG6, compare_blocks_cols))), _if_then_else(and_(le(zeros_diff_cols, compare_blocks_rows), or_(False, True)), _if_then_else(le(ones_diff_rows, 3), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(True, ARG6, zeros_diff_rows)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(True, 3, ARG6), _if_then_else(True, 4, 3)))), _if_then_else(le(_if_then_else(le(compare_blocks_rows, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 4, ARG7)), _if_then_else(and_(True, True), _if_then_else(False, 4, 0), _if_then_else(False, ones_diff_rows, 3))), _if_then_else(and_(le(ARG6, ARG6), ge(2, 2)), _if_then_else(and_(True, False), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows))), _if_then_else(or_(ge(4, 2), ge(zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, ARG6, 1), _if_then_else(False, 0, 3)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4)))))
and_(ge(_if_then_else(le(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 0, ARG6), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(le(3, 3), _if_then_else(False, 1, 4), _if_then_else(False, 0, ones_diff_cols))), ge(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, 4), _if_then_else(False, zeros_diff_rows, compare_blocks_cols)), _if_then_else(ge(_if_then_else(False, 3, zeros_diff_rows), _if_then_else(True, ARG7, compare_blocks_cols)), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(True, compare_blocks_rows, ones_diff_rows))))
or_(and_(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(or_(True, True), _if_then_else(False, ARG6, 4), _if_then_else(True, 2, _if_then_else(le(_if_then_else(False, 4, 0), _if_then_else(False, zeros_diff_cols, 3)), _if_then_else(and_(False, True), _if_then_else(True, 0, zeros_diff_cols), _if_then_else(True, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, 2, 2), _if_then_else(False, 0, compare_blocks_rows)))))), and_(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), le(_if_then_else(True, 1, 2), _if_then_else(True, ARG7, compare_blocks_rows)))), or_(or_(and_(or_(True, False), ge(4, zeros_diff_rows)), le(_if_then_else(True, 4, _if_then_else(False, zeros_diff_cols, 2)), _if_then_else(False, 0, 0))), or_(ge(_if_then_else(True, ones_diff_cols, 0), _if_then_else(True, 0, 0)), and_(or_(False, False), le(ones_diff_rows, 4)))))
and_(le(_if_then_else(ge(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols, ones_diff_cols), _if_then_else(and_(False, False), 4, compare_blocks_cols)), ge(_if_then_else(and_(True, and_(ge(_if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_cols, 2)), ge(_if_then_else(False, 0, ARG6), _if_then_else(False, 2, ones_diff_rows)))), 1, zeros_diff_rows), _if_then_else(True, ARG6, _if_then_else(False, 0, compare_blocks_rows))))
VAL TREES:
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_rows)), mul(add(compare_blocks_cols, ones_diff_cols), mul(mul(add(compare_blocks_cols, ones_diff_cols), ones_diff_rows), ones_diff_rows)))
mul(mul(mul(zeros_diff_cols, ones_diff_cols), mul(add(compare_blocks_cols, mul(ones_diff_cols, compare_blocks_cols)), add(zeros_diff_rows, compare_blocks_cols))), add(add(ones_diff_rows, mul(compare_blocks_rows, compare_blocks_rows)), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))), add(add(mul(mul(mul(zeros_diff_rows, ones_diff_rows), mul(add(mul(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_cols)))), compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols))))
mul(add(ones_diff_rows, add(zeros_diff_rows, add(compare_blocks_cols, zeros_diff_rows))), add(add(zeros_diff_cols, compare_blocks_rows), ones_diff_cols))
add(add(mul(add(add(mul(mul(ones_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows)), zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols))), mul(mul(mul(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_rows)))), add(add(add(mul(ones_diff_rows, mul(compare_blocks_cols, zeros_diff_cols)), add(ones_diff_cols, compare_blocks_cols)), add(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, ones_diff_cols))), add(mul(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)))))
add(mul(add(mul(add(ones_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)), mul(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), add(mul(add(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, add(ones_diff_rows, compare_blocks_cols))), zeros_diff_cols)))
COND TREES:
or_(or_(and_(False, True), le(0, 1)), or_(ge(_if_then_else(or_(and_(True, True), or_(True, True)), _if_then_else(le(ARG6, compare_blocks_rows), _if_then_else(False, ones_diff_rows, 3), _if_then_else(False, ARG7, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(True, 1, 2))), zeros_diff_cols), or_(True, True)))
or_(le(_if_then_else(ge(_if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 3, 4)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 2))), _if_then_else(and_(and_(False, True), ge(4, 2)), _if_then_else(ge(ARG6, 4), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)))), and_(or_(or_(and_(True, False), le(2, ones_diff_rows)), or_(or_(le(ones_diff_rows, 2), ge(2, ones_diff_cols)), and_(or_(ge(_if_then_else(False, zeros_diff_cols, ARG7), ARG6), True), and_(True, True)))), ge(_if_then_else(ge(4, 0), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 3, ARG7)), _if_then_else(le(compare_blocks_rows, 1), _if_then_else(False, 4, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))))
or_(le(_if_then_else(and_(True, True), _if_then_else(True, 4, 3), _if_then_else(le(_if_then_else(True, compare_blocks_rows, _if_then_else(le(_if_then_else(or_(and_(True, False), ge(4, 3)), _if_then_else(and_(False, True), _if_then_else(True, 4, ARG7), _if_then_else(True, zeros_diff_cols, ARG6)), _if_then_else(or_(True, False), _if_then_else(False, 4, 1), _if_then_else(False, compare_blocks_cols, 1))), _if_then_else(ge(_if_then_else(False, 2, _if_then_else(or_(ge(compare_blocks_cols, ones_diff_cols), le(zeros_diff_rows, ones_diff_rows)), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(le(0, 4), 0, 0))), _if_then_else(False, ones_diff_cols, ARG7)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(False, ARG6, compare_blocks_cols)), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_rows, ARG6), _if_then_else(False, 4, zeros_diff_cols)))), _if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, 4, ones_diff_cols), _if_then_else(True, 2, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, ARG7, 4), _if_then_else(False, ARG6, 1))), _if_then_else(ge(_if_then_else(True, 4, compare_blocks_cols), _if_then_else(True, ARG7, ARG7)), _if_then_else(and_(False, True), _if_then_else(True, 0, 1), _if_then_else(True, ARG6, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, 2), _if_then_else(True, ARG7, ARG7), _if_then_else(False, ones_diff_cols, 1))), _if_then_else(ge(_if_then_else(False, ARG7, 4), _if_then_else(True, 4, ones_diff_cols)), _if_then_else(ge(4, 4), _if_then_else(True, ARG6, 0), _if_then_else(False, compare_blocks_cols, compare_blocks_rows)), _if_then_else(le(ones_diff_cols, ones_diff_rows), _if_then_else(False, 0, ones_diff_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)))), _if_then_else(or_(le(_if_then_else(False, compare_blocks_rows, ARG6), _if_then_else(True, ARG6, 1)), ge(_if_then_else(False, ARG7, 0), _if_then_else(True, ARG7, 4))), _if_then_else(le(_if_then_else(True, zeros_diff_cols, 0), _if_then_else(False, ARG6, zeros_diff_rows)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, 2, 0)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 1))), _if_then_else(or_(or_(False, True), ge(0, ones_diff_cols)), _if_then_else(le(1, 0), _if_then_else(True, ARG6, 4), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_cols, ones_diff_rows), _if_then_else(True, ones_diff_rows, ARG7)))))), _if_then_else(False, 4, ones_diff_cols)), 4, compare_blocks_rows)), _if_then_else(True, _if_then_else(True, ARG6, ARG6), compare_blocks_cols)), or_(or_(or_(True, True), and_(False, False)), or_(False, False)))
le(_if_then_else(le(1, 2), _if_then_else(True, zeros_diff_cols, 0), _if_then_else(True, zeros_diff_rows, 1)), _if_then_else(ge(ARG7, 4), _if_then_else(False, 4, ARG6), _if_then_else(False, zeros_diff_cols, 4)))
or_(ge(_if_then_else(and_(True, True), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(ge(1, ARG6), _if_then_else(True, 4, ARG7), _if_then_else(True, compare_blocks_cols, zeros_diff_cols))), and_(or_(or_(False, True), or_(True, False)), ge(_if_then_else(and_(True, and_(True, True)), _if_then_else(le(2, 0), zeros_diff_cols, 1), _if_then_else(False, zeros_diff_rows, _if_then_else(True, 1, ARG7))), _if_then_else(le(_if_then_else(ge(_if_then_else(False, 0, compare_blocks_cols), _if_then_else(False, 1, 0)), _if_then_else(le(ARG7, ones_diff_rows), _if_then_else(True, ones_diff_rows, ARG6), _if_then_else(True, zeros_diff_rows, 4)), _if_then_else(ge(compare_blocks_cols, zeros_diff_cols), _if_then_else(False, 2, 2), _if_then_else(True, ones_diff_cols, ones_diff_rows))), _if_then_else(ge(_if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(True, 3, ARG7)), _if_then_else(or_(False, False), _if_then_else(False, 3, compare_blocks_cols), _if_then_else(True, ones_diff_cols, ARG6)), _if_then_else(ge(3, zeros_diff_cols), _if_then_else(False, ones_diff_rows, 4), _if_then_else(False, zeros_diff_rows, 0)))), _if_then_else(or_(ge(_if_then_else(False, compare_blocks_cols, 2), _if_then_else(True, 3, ones_diff_rows)), and_(ge(compare_blocks_rows, 2), le(4, compare_blocks_rows))), _if_then_else(ge(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(True, ARG6, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(False, zeros_diff_rows, 3)), _if_then_else(ge(0, ARG7), _if_then_else(False, 4, ARG7), _if_then_else(True, ones_diff_rows, compare_blocks_rows))), _if_then_else(le(_if_then_else(False, 4, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(or_(True, True), _if_then_else(False, ARG7, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, 3)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(False, 4, ones_diff_rows)))), _if_then_else(and_(and_(True, and_(False, False)), le(_if_then_else(True, 3, zeros_diff_rows), _if_then_else(False, ones_diff_cols, ARG6))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, ARG7), _if_then_else(True, zeros_diff_cols, zeros_diff_cols)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(False, 3, ones_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, 4, ARG6), _if_then_else(False, 2, 0))), _if_then_else(or_(and_(False, False), le(4, ARG6)), _if_then_else(or_(False, False), _if_then_else(False, 3, ARG7), _if_then_else(True, 1, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, 4, 3), _if_then_else(True, zeros_diff_cols, ARG7))))))))
VAL TREES:
mul(mul(add(ones_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_cols), ones_diff_rows))
add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_cols, add(add(mul(zeros_diff_rows, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(compare_blocks_cols, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_cols))))), add(mul(compare_blocks_cols, zeros_diff_rows), compare_blocks_cols))
add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(mul(add(ones_diff_cols, zeros_diff_rows), mul(add(zeros_diff_cols, zeros_diff_rows), compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_rows), compare_blocks_rows)))
mul(add(add(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows)), add(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))), add(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(zeros_diff_rows, mul(zeros_diff_cols, compare_blocks_rows))))
mul(mul(mul(mul(ones_diff_cols, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), add(add(mul(ones_diff_cols, mul(ones_diff_rows, zeros_diff_cols)), add(compare_blocks_rows, ones_diff_cols)), compare_blocks_rows))
add(mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(add(mul(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_cols, add(mul(compare_blocks_rows, ones_diff_cols), compare_blocks_cols))), mul(mul(add(mul(ones_diff_rows, compare_blocks_cols), ones_diff_cols), zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols))), ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, ones_diff_cols))), add(mul(mul(compare_blocks_cols, ones_diff_rows), compare_blocks_cols), add(add(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)))), add(mul(add(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, ones_diff_cols)), mul(ones_diff_cols, compare_blocks_rows))), add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))))
COND TREES:
ge(_if_then_else(le(_if_then_else(and_(ge(_if_then_else(ge(1, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), zeros_diff_cols), 0), or_(True, le(ARG7, compare_blocks_cols))), _if_then_else(ge(zeros_diff_cols, ARG7), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(True, 1, 4)), _if_then_else(ge(_if_then_else(False, 0, zeros_diff_cols), 3), _if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(True, 2, 3))), _if_then_else(True, 0, _if_then_else(True, compare_blocks_rows, ARG6))), _if_then_else(ge(compare_blocks_cols, 2), zeros_diff_rows, 0), _if_then_else(False, _if_then_else(False, zeros_diff_cols, 1), zeros_diff_rows)), _if_then_else(ge(ARG7, 3), _if_then_else(False, compare_blocks_cols, _if_then_else(True, _if_then_else(True, ARG7, 3), 3)), _if_then_else(True, ARG6, ARG6)))
ge(_if_then_else(or_(or_(le(ones_diff_rows, 4), le(1, zeros_diff_rows)), le(_if_then_else(False, 0, ARG6), _if_then_else(True, ones_diff_rows, 4))), _if_then_else(and_(and_(True, False), or_(False, False)), _if_then_else(or_(False, True), _if_then_else(False, 3, ARG6), _if_then_else(True, ones_diff_cols, 2)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(False, ARG6, compare_blocks_cols))), _if_then_else(and_(le(zeros_diff_cols, compare_blocks_rows), or_(False, True)), _if_then_else(le(ones_diff_rows, 3), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(True, ARG6, zeros_diff_rows)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(True, 3, ARG6), _if_then_else(True, 4, 3)))), _if_then_else(le(_if_then_else(le(compare_blocks_rows, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 4, ARG7)), _if_then_else(and_(True, True), _if_then_else(False, 4, 0), _if_then_else(False, ones_diff_rows, 3))), _if_then_else(and_(le(ARG6, ARG6), ge(2, 2)), _if_then_else(and_(True, False), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows))), _if_then_else(or_(ge(4, 2), ge(zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, ARG6, 1), _if_then_else(False, 0, 3)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4)))))
and_(ge(_if_then_else(le(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 0, ARG6), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(le(3, 3), _if_then_else(False, 1, 4), _if_then_else(False, 0, ones_diff_cols))), ge(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, 4), _if_then_else(False, zeros_diff_rows, compare_blocks_cols)), _if_then_else(ge(_if_then_else(False, 3, zeros_diff_rows), _if_then_else(and_(ge(_if_then_else(True, 3, ones_diff_rows), _if_then_else(True, compare_blocks_rows, 0)), le(_if_then_else(le(_if_then_else(le(_if_then_else(True, 3, ARG6), _if_then_else(False, 4, 3)), _if_then_else(le(3, compare_blocks_cols), _if_then_else(True, 0, ARG7), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, 3, compare_blocks_rows))), _if_then_else(le(_if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(True, 3, 0)), _if_then_else(le(zeros_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(True, ARG6, 3)), _if_then_else(ge(ones_diff_cols, ARG6), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(True, 2, compare_blocks_rows)))), _if_then_else(and_(ge(_if_then_else(False, 2, zeros_diff_cols), _if_then_else(False, 3, 4)), le(_if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(False, 4, 1))), _if_then_else(or_(le(0, ARG6), le(ARG7, ones_diff_cols)), _if_then_else(le(1, ARG6), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, 3, ones_diff_rows), _if_then_else(False, 4, compare_blocks_cols))), _if_then_else(or_(and_(False, True), or_(True, False)), _if_then_else(le(compare_blocks_rows, ones_diff_rows), _if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, ARG7, zeros_diff_rows)), _if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, ones_diff_rows)))), _if_then_else(ge(_if_then_else(ge(ARG7, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, 1, 2), _if_then_else(True, ones_diff_rows, 4))), _if_then_else(ge(_if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, ARG7, zeros_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, ARG6, 0), _if_then_else(True, 3, 1)), _if_then_else(le(zeros_diff_cols, ARG6), _if_then_else(True, ARG7, ones_diff_rows), _if_then_else(True, 1, 4))), _if_then_else(and_(le(4, 4), or_(True, False)), _if_then_else(or_(True, False), _if_then_else(False, ARG7, 0), _if_then_else(False, 3, 3)), _if_then_else(or_(False, False), _if_then_else(True, compare_blocks_cols, ARG6), _if_then_else(True, compare_blocks_cols, 2))))), _if_then_else(False, 3, ones_diff_rows))), zeros_diff_cols, 1)), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(True, compare_blocks_rows, ones_diff_rows))))
or_(and_(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(or_(True, True), _if_then_else(False, ARG6, 4), _if_then_else(True, 2, 3))), and_(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, _if_then_else(ge(_if_then_else(True, 2, 2), _if_then_else(True, 4, ARG7)), _if_then_else(ge(ARG6, 4), _if_then_else(True, 4, 2), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(ge(1, ARG6), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 1, 2))))), le(_if_then_else(True, 1, 2), _if_then_else(True, ARG7, compare_blocks_rows)))), or_(or_(and_(or_(True, False), ge(4, zeros_diff_rows)), le(_if_then_else(True, 4, _if_then_else(False, zeros_diff_cols, 2)), _if_then_else(False, 0, 0))), or_(ge(_if_then_else(True, ones_diff_cols, 0), _if_then_else(True, 0, 0)), and_(or_(False, False), le(ones_diff_rows, 4)))))
and_(le(_if_then_else(ge(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols, ones_diff_cols), _if_then_else(and_(False, False), 4, compare_blocks_cols)), ge(_if_then_else(and_(True, True), 1, zeros_diff_rows), _if_then_else(False, ARG6, _if_then_else(or_(True, True), 0, compare_blocks_rows))))
VAL TREES:
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(mul(compare_blocks_cols, mul(ones_diff_cols, compare_blocks_cols)), ones_diff_rows)))
mul(mul(mul(zeros_diff_cols, ones_diff_cols), mul(add(compare_blocks_cols, mul(ones_diff_cols, zeros_diff_cols)), add(zeros_diff_rows, compare_blocks_cols))), add(add(ones_diff_rows, zeros_diff_rows), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))), add(add(mul(mul(mul(zeros_diff_rows, ones_diff_rows), mul(ones_diff_cols, mul(add(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_cols)))), compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols))))
mul(add(mul(zeros_diff_rows, compare_blocks_rows), add(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_rows))), add(add(compare_blocks_cols, compare_blocks_rows), ones_diff_cols))
add(add(mul(add(add(mul(mul(ones_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows)), zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols))), mul(mul(mul(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_rows)))), add(add(add(mul(ones_diff_rows, mul(compare_blocks_rows, zeros_diff_cols)), add(ones_diff_cols, compare_blocks_cols)), add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), add(mul(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)))))
add(mul(add(mul(add(ones_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)), mul(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(mul(add(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, add(ones_diff_cols, compare_blocks_cols))), zeros_diff_cols)))
COND TREES:
or_(or_(and_(False, True), le(0, _if_then_else(and_(True, le(2, ARG7)), 1, 3))), or_(ge(compare_blocks_cols, zeros_diff_cols), or_(True, True)))
or_(le(_if_then_else(ge(_if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 3, 4)), _if_then_else(or_(ge(compare_blocks_cols, 3), False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 2))), _if_then_else(and_(and_(False, True), ge(4, 2)), _if_then_else(ge(ARG6, 4), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)))), and_(or_(or_(and_(True, False), le(2, ones_diff_rows)), ge(_if_then_else(False, 4, 2), _if_then_else(True, 0, 1))), ge(_if_then_else(ge(4, 0), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 3, ARG7)), _if_then_else(le(compare_blocks_rows, 1), _if_then_else(False, 4, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))))
or_(le(_if_then_else(and_(True, True), _if_then_else(True, 4, 3), _if_then_else(le(_if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, ones_diff_cols)), 4, compare_blocks_rows)), _if_then_else(True, _if_then_else(True, ARG6, ARG6), compare_blocks_cols)), or_(or_(or_(True, True), and_(False, False)), or_(False, False)))
le(_if_then_else(le(1, 2), _if_then_else(False, zeros_diff_cols, 0), _if_then_else(True, zeros_diff_rows, 1)), _if_then_else(ge(ARG7, 4), _if_then_else(False, 4, ARG6), _if_then_else(False, zeros_diff_cols, 4)))
or_(ge(_if_then_else(and_(True, True), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(ge(1, ARG6), _if_then_else(True, 4, ARG7), _if_then_else(True, compare_blocks_cols, zeros_diff_cols))), and_(or_(or_(False, True), or_(True, False)), ge(0, _if_then_else(False, ones_diff_cols, ones_diff_cols))))
VAL TREES:
mul(ones_diff_rows, add(add(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_cols)))
add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols)), add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), mul(add(zeros_diff_cols, compare_blocks_cols), compare_blocks_rows)))
mul(add(add(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, mul(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows)))), add(mul(mul(ones_diff_cols, zeros_diff_rows), ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))), add(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(add(add(zeros_diff_rows, add(compare_blocks_cols, zeros_diff_rows)), compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(add(mul(compare_blocks_rows, mul(compare_blocks_cols, zeros_diff_cols)), add(ones_diff_cols, compare_blocks_cols)), add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols)))), add(add(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)), compare_blocks_rows))
add(mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, ones_diff_cols))), add(mul(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)))), add(mul(add(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows))), add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(zeros_diff_rows, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)))))
COND TREES:
or_(or_(and_(False, True), le(0, 1)), or_(ge(_if_then_else(or_(and_(True, True), or_(True, True)), _if_then_else(le(ARG6, compare_blocks_rows), _if_then_else(False, ones_diff_rows, 3), _if_then_else(False, ARG7, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(True, 1, 2))), zeros_diff_cols), or_(True, True)))
or_(le(_if_then_else(ge(_if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 3, 4)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 2))), _if_then_else(and_(and_(False, True), ge(4, 2)), _if_then_else(ge(ARG6, 4), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)))), and_(or_(or_(and_(True, False), le(2, ones_diff_rows)), or_(or_(le(ones_diff_rows, 2), ge(2, ones_diff_cols)), and_(or_(ge(_if_then_else(False, zeros_diff_cols, ARG7), ARG6), ge(2, 2)), and_(True, True)))), ge(_if_then_else(ge(4, 0), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 3, ARG7)), _if_then_else(le(compare_blocks_rows, 1), _if_then_else(False, 4, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))))
or_(le(_if_then_else(and_(True, True), _if_then_else(True, 4, 3), _if_then_else(le(_if_then_else(True, compare_blocks_rows, _if_then_else(le(_if_then_else(or_(and_(True, False), ge(4, 3)), _if_then_else(and_(False, True), _if_then_else(True, 4, ARG7), _if_then_else(True, zeros_diff_cols, ARG6)), _if_then_else(or_(True, False), _if_then_else(False, 4, 1), _if_then_else(False, compare_blocks_cols, 1))), _if_then_else(ge(_if_then_else(False, 2, 0), _if_then_else(False, ones_diff_cols, ARG7)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(False, ARG6, compare_blocks_cols)), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_rows, ARG6), _if_then_else(False, 4, zeros_diff_cols)))), _if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, 4, ones_diff_cols), _if_then_else(True, 2, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, ARG7, 4), _if_then_else(False, ARG6, 1))), _if_then_else(ge(_if_then_else(True, 4, compare_blocks_cols), _if_then_else(True, ARG7, ARG7)), _if_then_else(and_(False, True), _if_then_else(True, 0, 1), _if_then_else(True, ARG6, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, 2), _if_then_else(True, ARG7, ARG7), _if_then_else(False, ones_diff_cols, 1))), _if_then_else(ge(_if_then_else(False, ARG7, 4), _if_then_else(True, 4, ones_diff_cols)), _if_then_else(ge(4, 4), _if_then_else(True, ARG6, 0), _if_then_else(False, compare_blocks_cols, compare_blocks_rows)), _if_then_else(le(ones_diff_cols, ones_diff_rows), _if_then_else(False, 0, ones_diff_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)))), _if_then_else(or_(le(_if_then_else(False, compare_blocks_rows, ARG6), _if_then_else(True, ARG6, 1)), ge(_if_then_else(False, ARG7, 0), _if_then_else(True, ARG7, 4))), _if_then_else(le(_if_then_else(True, zeros_diff_cols, 0), _if_then_else(False, ARG6, zeros_diff_rows)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, 2, 0)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 1))), _if_then_else(or_(or_(False, True), ge(0, ones_diff_cols)), _if_then_else(le(1, 0), _if_then_else(True, ARG6, 4), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_cols, ones_diff_rows), _if_then_else(True, ones_diff_rows, ARG7)))))), _if_then_else(False, 4, ones_diff_cols)), 4, compare_blocks_rows)), _if_then_else(True, _if_then_else(True, ARG6, ARG6), compare_blocks_cols)), or_(or_(or_(True, True), and_(False, False)), or_(False, False)))
le(_if_then_else(le(1, 2), _if_then_else(True, zeros_diff_cols, 0), _if_then_else(True, zeros_diff_rows, 1)), _if_then_else(ge(ARG7, 4), _if_then_else(False, 4, ARG6), _if_then_else(False, zeros_diff_cols, 4)))
or_(ge(_if_then_else(and_(True, True), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(ge(1, ARG6), _if_then_else(True, 4, ARG7), _if_then_else(True, compare_blocks_cols, zeros_diff_cols))), and_(or_(or_(False, True), or_(True, False)), ge(_if_then_else(and_(True, and_(True, True)), _if_then_else(le(2, 0), zeros_diff_cols, 1), _if_then_else(False, zeros_diff_rows, _if_then_else(True, 1, ARG7))), _if_then_else(le(_if_then_else(ge(_if_then_else(False, 0, compare_blocks_cols), _if_then_else(False, 1, 0)), _if_then_else(le(ARG7, ones_diff_rows), _if_then_else(True, ones_diff_rows, ARG6), _if_then_else(True, zeros_diff_rows, 4)), _if_then_else(ge(compare_blocks_cols, zeros_diff_cols), _if_then_else(False, 2, 2), _if_then_else(True, ones_diff_cols, ones_diff_rows))), _if_then_else(ge(_if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(True, 3, ARG7)), _if_then_else(or_(False, False), _if_then_else(False, 3, compare_blocks_cols), _if_then_else(True, ones_diff_cols, ARG6)), _if_then_else(ge(3, zeros_diff_cols), _if_then_else(False, ones_diff_rows, 4), _if_then_else(False, zeros_diff_rows, 0)))), _if_then_else(or_(ge(_if_then_else(False, compare_blocks_cols, 2), _if_then_else(True, 3, ones_diff_rows)), and_(ge(compare_blocks_rows, 2), le(4, compare_blocks_rows))), _if_then_else(ge(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(True, ARG6, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(False, zeros_diff_rows, 3)), _if_then_else(ge(0, ARG7), _if_then_else(False, 4, ARG7), _if_then_else(True, ones_diff_rows, compare_blocks_rows))), _if_then_else(le(_if_then_else(False, 4, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(or_(True, True), _if_then_else(False, ARG7, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, 3)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(False, 4, ones_diff_rows)))), _if_then_else(and_(and_(and_(False, False), and_(False, False)), le(_if_then_else(True, 3, zeros_diff_rows), _if_then_else(False, ones_diff_cols, ARG6))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, ARG7), _if_then_else(True, zeros_diff_cols, zeros_diff_cols)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(False, 3, ones_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, 4, ARG6), _if_then_else(False, 2, 0))), _if_then_else(or_(and_(False, False), le(4, ARG6)), _if_then_else(or_(False, False), _if_then_else(False, 3, ARG7), _if_then_else(True, 1, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, 4, 3), _if_then_else(True, zeros_diff_cols, ARG7))))))))
VAL TREES:
mul(mul(add(ones_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)))
add(add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, mul(ones_diff_cols, compare_blocks_cols))), add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), mul(add(ones_diff_rows, zeros_diff_rows), compare_blocks_rows)))
mul(add(add(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows)), add(mul(mul(compare_blocks_cols, zeros_diff_rows), ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))), add(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), zeros_diff_rows))
mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), add(add(mul(ones_diff_cols, ones_diff_rows), add(compare_blocks_rows, ones_diff_cols)), compare_blocks_rows))
add(mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, ones_diff_cols))), add(mul(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, zeros_diff_cols), mul(mul(zeros_diff_cols, compare_blocks_cols), zeros_diff_cols)))), add(mul(add(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows))), add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))))
COND TREES:
ge(_if_then_else(or_(or_(and_(True, True), or_(False, True)), le(_if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, ARG6))), _if_then_else(ge(_if_then_else(False, ARG7, compare_blocks_rows), _if_then_else(True, ARG6, ones_diff_cols)), _if_then_else(le(3, zeros_diff_rows), _if_then_else(True, ARG6, 0), _if_then_else(True, compare_blocks_cols, zeros_diff_rows)), _if_then_else(ge(4, ARG6), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, zeros_diff_cols, ARG6))), _if_then_else(or_(ge(zeros_diff_cols, ones_diff_cols), le(compare_blocks_cols, 1)), _if_then_else(ge(compare_blocks_rows, ones_diff_rows), 2, _if_then_else(True, compare_blocks_cols, ones_diff_cols)), _if_then_else(ge(4, ones_diff_cols), _if_then_else(False, ARG7, 2), _if_then_else(False, compare_blocks_cols, ARG7)))), _if_then_else(or_(and_(le(3, compare_blocks_rows), ge(3, compare_blocks_cols)), ge(_if_then_else(False, 0, ARG7), _if_then_else(False, 2, ARG6))), _if_then_else(le(_if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, 3)), _if_then_else(or_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, 4)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(False, 0, 4))), _if_then_else(and_(True, ge(zeros_diff_cols, 1)), _if_then_else(or_(True, False), _if_then_else(False, ARG6, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(compare_blocks_cols, ones_diff_cols), _if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, 2)))))
and_(and_(and_(or_(True, True), ge(zeros_diff_rows, 1)), ge(_if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, ARG7))), or_(ge(_if_then_else(True, 1, ARG7), _if_then_else(False, ones_diff_rows, 4)), and_(True, True)))
ge(_if_then_else(le(_if_then_else(True, _if_then_else(or_(ge(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(le(ones_diff_cols, 4), 0, 0)), compare_blocks_cols), _if_then_else(False, 4, ones_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, ARG6, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(False, ARG7, ARG6))), _if_then_else(and_(and_(False, True), or_(True, False)), _if_then_else(le(3, 2), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(True, 2, 0)), _if_then_else(ge(ARG6, 2), _if_then_else(True, ARG6, ARG6), 2)))
le(_if_then_else(and_(False, True), _if_then_else(False, ARG7, ones_diff_rows), _if_then_else(True, 1, 2)), _if_then_else(False, _if_then_else(False, compare_blocks_cols, 2), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)))
le(_if_then_else(and_(True, and_(True, True)), _if_then_else(le(2, 0), zeros_diff_cols, 1), _if_then_else(False, _if_then_else(or_(True, False), _if_then_else(False, 2, 2), _if_then_else(False, 4, ARG6)), _if_then_else(True, 1, ARG7))), _if_then_else(and_(True, True), _if_then_else(False, _if_then_else(True, 4, 0), 2), _if_then_else(False, zeros_diff_rows, ARG6)))
VAL TREES:
mul(add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), add(ones_diff_rows, compare_blocks_rows))
add(add(mul(add(zeros_diff_rows, ones_diff_rows), mul(compare_blocks_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, zeros_diff_rows))), add(mul(add(zeros_diff_cols, mul(zeros_diff_cols, mul(add(ones_diff_rows, zeros_diff_cols), zeros_diff_rows))), mul(compare_blocks_rows, compare_blocks_rows)), add(zeros_diff_rows, compare_blocks_cols)))
mul(add(add(ones_diff_cols, add(mul(mul(add(add(zeros_diff_rows, compare_blocks_rows), add(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, compare_blocks_cols))), ones_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), add(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, zeros_diff_rows)))), add(ones_diff_cols, compare_blocks_cols)), add(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), mul(mul(add(add(add(mul(add(zeros_diff_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_cols))), add(add(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_cols, zeros_diff_cols)), add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, compare_blocks_rows)))), mul(mul(mul(add(zeros_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_rows, zeros_diff_rows))), mul(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, zeros_diff_rows)), mul(mul(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_cols, compare_blocks_rows))))), zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_cols)))
add(add(add(compare_blocks_cols, ones_diff_cols), compare_blocks_cols), compare_blocks_rows)
add(add(mul(mul(mul(add(ones_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)), zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), add(mul(compare_blocks_cols, zeros_diff_cols), mul(mul(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), zeros_diff_cols))), mul(mul(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_cols))))
COND TREES:
ge(_if_then_else(le(_if_then_else(le(ones_diff_cols, 2), ones_diff_cols, _if_then_else(True, ones_diff_cols, 4)), _if_then_else(True, 0, _if_then_else(True, compare_blocks_rows, ARG6))), _if_then_else(ge(compare_blocks_cols, 2), zeros_diff_rows, 0), _if_then_else(False, _if_then_else(False, zeros_diff_cols, 1), zeros_diff_rows)), _if_then_else(ge(ARG7, 3), _if_then_else(False, compare_blocks_cols, _if_then_else(True, _if_then_else(True, ARG7, 3), 3)), _if_then_else(True, ARG6, ARG6)))
ge(_if_then_else(or_(or_(le(ones_diff_rows, 4), le(1, zeros_diff_rows)), le(_if_then_else(False, 0, ARG6), _if_then_else(True, ones_diff_rows, 4))), _if_then_else(and_(and_(True, False), or_(False, False)), _if_then_else(or_(False, True), _if_then_else(False, 3, ARG6), _if_then_else(True, ones_diff_cols, 2)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(False, ARG6, compare_blocks_cols))), _if_then_else(and_(le(zeros_diff_cols, compare_blocks_rows), or_(False, True)), _if_then_else(le(ones_diff_rows, 3), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(True, ARG6, zeros_diff_rows)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(True, 3, ARG6), _if_then_else(True, 4, 3)))), _if_then_else(le(_if_then_else(le(compare_blocks_rows, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 4, ARG7)), _if_then_else(and_(True, True), _if_then_else(False, 4, 0), _if_then_else(False, ones_diff_rows, 3))), _if_then_else(and_(le(ARG6, ARG6), ge(2, 2)), _if_then_else(and_(True, False), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows))), _if_then_else(or_(ge(4, 2), ge(zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, ARG6, 1), _if_then_else(False, 0, 3)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4)))))
and_(ge(_if_then_else(le(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 0, ARG6), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(le(3, 3), _if_then_else(False, 1, 4), _if_then_else(False, 0, ones_diff_cols))), ge(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, 4), _if_then_else(False, zeros_diff_rows, compare_blocks_cols)), _if_then_else(ge(_if_then_else(False, 3, zeros_diff_rows), _if_then_else(and_(ge(_if_then_else(True, 3, ones_diff_rows), _if_then_else(True, compare_blocks_rows, 0)), le(_if_then_else(True, compare_blocks_rows, ARG7), _if_then_else(False, 3, ones_diff_rows))), zeros_diff_cols, 1)), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(True, compare_blocks_rows, ones_diff_rows))))
or_(and_(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(or_(True, True), _if_then_else(False, ARG6, 4), _if_then_else(True, 2, 3))), and_(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), le(_if_then_else(True, 1, 2), _if_then_else(True, ARG7, compare_blocks_rows)))), or_(or_(and_(or_(True, False), ge(4, zeros_diff_rows)), le(_if_then_else(True, 4, _if_then_else(False, zeros_diff_cols, 2)), _if_then_else(False, 0, 0))), or_(ge(_if_then_else(True, ones_diff_cols, 0), _if_then_else(True, 0, 0)), and_(or_(False, False), le(ones_diff_rows, 4)))))
and_(le(_if_then_else(ge(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols, ones_diff_cols), _if_then_else(and_(False, False), 4, compare_blocks_cols)), ge(_if_then_else(and_(True, True), 1, zeros_diff_rows), _if_then_else(False, ARG6, _if_then_else(or_(True, True), 0, compare_blocks_rows))))
VAL TREES:
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_cols, compare_blocks_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, ones_diff_rows)))
mul(mul(mul(zeros_diff_cols, ones_diff_cols), mul(add(compare_blocks_cols, mul(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_rows)))), add(add(add(compare_blocks_cols, mul(ones_diff_cols, compare_blocks_cols)), zeros_diff_rows), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))), add(add(mul(mul(mul(zeros_diff_rows, ones_diff_rows), mul(add(mul(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_cols, ones_diff_rows)), mul(mul(mul(zeros_diff_rows, ones_diff_rows), mul(add(mul(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_cols)))), compare_blocks_cols))), compare_blocks_cols), add(mul(ones_diff_rows, zeros_diff_cols), compare_blocks_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols))))
mul(add(mul(zeros_diff_rows, compare_blocks_rows), ones_diff_rows), add(add(zeros_diff_cols, compare_blocks_rows), ones_diff_cols))
add(add(mul(add(zeros_diff_rows, mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols))), mul(mul(mul(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_rows)))), add(add(add(mul(ones_diff_rows, mul(compare_blocks_cols, zeros_diff_cols)), add(ones_diff_cols, compare_blocks_cols)), add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), add(mul(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), add(mul(mul(ones_diff_cols, zeros_diff_cols), add(compare_blocks_rows, compare_blocks_rows)), compare_blocks_cols)))))
add(mul(add(zeros_diff_cols, mul(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(mul(add(zeros_diff_cols, mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, add(ones_diff_rows, compare_blocks_cols))), zeros_diff_cols))), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, add(ones_diff_rows, compare_blocks_cols))), zeros_diff_cols)))
COND TREES:
ge(_if_then_else(le(_if_then_else(le(ones_diff_cols, 2), ones_diff_cols, _if_then_else(True, 4, compare_blocks_rows)), _if_then_else(False, 0, _if_then_else(True, compare_blocks_rows, ARG6))), _if_then_else(ge(compare_blocks_cols, 2), _if_then_else(and_(False, False), ARG7, ARG6), 0), _if_then_else(False, _if_then_else(False, zeros_diff_cols, 1), zeros_diff_rows)), _if_then_else(ge(ARG7, 3), _if_then_else(False, compare_blocks_cols, _if_then_else(True, _if_then_else(True, ARG7, 3), 3)), _if_then_else(True, ARG6, ARG6)))
ge(_if_then_else(or_(or_(le(ones_diff_rows, 4), le(1, zeros_diff_rows)), le(_if_then_else(False, 0, ARG6), _if_then_else(True, ones_diff_rows, 4))), _if_then_else(and_(and_(True, False), or_(False, False)), _if_then_else(or_(False, True), _if_then_else(False, 3, compare_blocks_rows), _if_then_else(True, ones_diff_cols, 2)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(False, ARG6, compare_blocks_cols))), _if_then_else(and_(le(zeros_diff_cols, compare_blocks_rows), or_(False, True)), _if_then_else(le(ones_diff_rows, 3), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(True, ARG6, zeros_diff_rows)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(True, 3, ARG6), _if_then_else(True, 4, 3)))), _if_then_else(le(_if_then_else(le(compare_blocks_rows, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 4, ARG7)), _if_then_else(and_(True, True), _if_then_else(False, 4, 0), _if_then_else(False, ones_diff_rows, 3))), _if_then_else(False, _if_then_else(and_(True, False), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows))), _if_then_else(or_(ge(4, 2), ge(zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, ARG6, 1), _if_then_else(False, 0, 3)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4)))))
and_(ge(_if_then_else(le(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 0, ARG6), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(le(3, 3), _if_then_else(False, 1, 4), _if_then_else(False, 0, ones_diff_cols))), ge(_if_then_else(or_(False, False), _if_then_else(True, ones_diff_cols, 4), _if_then_else(False, zeros_diff_rows, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(ge(ones_diff_rows, 2), compare_blocks_rows, ones_diff_rows))))
or_(and_(le(_if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(True, zeros_diff_cols, ones_diff_rows)), and_(ge(compare_blocks_cols, _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), le(_if_then_else(True, 1, 2), _if_then_else(True, ARG7, compare_blocks_rows)))), or_(or_(and_(or_(True, False), ge(4, zeros_diff_rows)), le(_if_then_else(True, 4, ARG7), _if_then_else(False, 0, 0))), or_(ge(_if_then_else(True, ones_diff_cols, 0), _if_then_else(True, 0, 0)), and_(or_(ge(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, ARG7)), and_(ge(ones_diff_rows, ones_diff_rows), or_(True, False))), and_(False, True)))))
and_(le(_if_then_else(ge(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols, ones_diff_cols), _if_then_else(and_(True, True), 4, compare_blocks_cols)), ge(_if_then_else(and_(True, True), 1, zeros_diff_rows), _if_then_else(False, ARG6, _if_then_else(True, 0, compare_blocks_rows))))
VAL TREES:
mul(zeros_diff_cols, mul(add(ones_diff_cols, add(ones_diff_cols, mul(ones_diff_rows, compare_blocks_rows))), mul(ones_diff_rows, zeros_diff_rows)))
mul(mul(zeros_diff_cols, mul(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, add(add(compare_blocks_cols, compare_blocks_cols), zeros_diff_cols)), add(add(add(ones_diff_rows, add(zeros_diff_rows, zeros_diff_cols)), ones_diff_cols), zeros_diff_rows)))
mul(compare_blocks_cols, add(add(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, add(ones_diff_rows, zeros_diff_rows)))))
mul(add(mul(ones_diff_cols, ones_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(compare_blocks_cols, add(ones_diff_cols, zeros_diff_rows)), mul(zeros_diff_cols, zeros_diff_rows)))
add(add(mul(add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols))), mul(mul(mul(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), mul(ones_diff_rows, zeros_diff_rows))), add(add(add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows))), add(mul(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)))))
add(mul(add(mul(compare_blocks_rows, add(add(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows)), mul(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(mul(add(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_rows)))))
COND TREES:
ge(_if_then_else(le(_if_then_else(le(ones_diff_cols, 2), ones_diff_cols, _if_then_else(True, ones_diff_cols, 4)), _if_then_else(True, 0, _if_then_else(True, compare_blocks_rows, ARG6))), _if_then_else(ge(compare_blocks_cols, 2), _if_then_else(and_(False, False), ARG7, ARG6), 0), _if_then_else(False, _if_then_else(False, zeros_diff_cols, 1), zeros_diff_rows)), _if_then_else(ge(ARG7, 3), _if_then_else(False, compare_blocks_cols, _if_then_else(True, _if_then_else(True, ARG7, 3), 3)), _if_then_else(True, ARG6, ARG6)))
ge(_if_then_else(or_(or_(le(ones_diff_rows, 4), le(1, zeros_diff_rows)), le(_if_then_else(False, 0, ARG6), _if_then_else(True, ones_diff_rows, 4))), _if_then_else(and_(and_(True, False), or_(False, False)), _if_then_else(or_(False, True), _if_then_else(False, 3, ARG6), _if_then_else(True, ones_diff_cols, 2)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(False, ARG6, compare_blocks_cols))), _if_then_else(and_(le(zeros_diff_cols, compare_blocks_rows), or_(False, True)), _if_then_else(le(ones_diff_rows, 3), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(True, ARG6, zeros_diff_rows)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(True, 3, ARG6), _if_then_else(True, 4, 3)))), _if_then_else(le(_if_then_else(le(compare_blocks_rows, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 4, ARG7)), _if_then_else(and_(True, True), _if_then_else(False, 4, 0), _if_then_else(False, ones_diff_rows, 3))), _if_then_else(and_(le(ARG6, ARG6), ge(2, 2)), _if_then_else(and_(True, False), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows))), _if_then_else(or_(ge(4, 2), ge(zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, ARG6, 1), _if_then_else(False, 0, 3)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4)))))
and_(ge(_if_then_else(le(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 0, ARG6), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(le(3, 3), _if_then_else(False, 1, 4), _if_then_else(False, 0, ones_diff_cols))), ge(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, 4), _if_then_else(False, zeros_diff_rows, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(True, compare_blocks_rows, ones_diff_rows))))
or_(and_(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(or_(True, True), _if_then_else(False, ARG6, 4), _if_then_else(True, 2, 3))), and_(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), le(_if_then_else(True, 1, 2), _if_then_else(True, ARG7, compare_blocks_rows)))), or_(or_(and_(or_(True, False), ge(4, zeros_diff_rows)), le(_if_then_else(True, 4, ARG7), _if_then_else(False, 0, 0))), or_(ge(_if_then_else(True, ones_diff_cols, 0), _if_then_else(True, 0, 0)), and_(or_(False, False), le(ones_diff_rows, 4)))))
and_(le(_if_then_else(ge(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols, ones_diff_cols), _if_then_else(and_(False, False), 4, compare_blocks_cols)), ge(_if_then_else(and_(True, True), 1, zeros_diff_rows), _if_then_else(False, ARG6, _if_then_else(True, 0, compare_blocks_rows))))
VAL TREES:
mul(mul(add(compare_blocks_cols, mul(compare_blocks_cols, zeros_diff_rows)), add(compare_blocks_rows, compare_blocks_rows)), mul(mul(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, zeros_diff_rows)))
mul(mul(ones_diff_cols, compare_blocks_cols), zeros_diff_rows)
mul(ones_diff_rows, add(add(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(ones_diff_cols, compare_blocks_cols), mul(add(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_cols)))))
mul(add(mul(zeros_diff_rows, mul(mul(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols))), add(zeros_diff_rows, compare_blocks_rows)), add(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, zeros_diff_rows)))
add(add(mul(add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols))), mul(add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(ones_diff_rows, zeros_diff_rows))), add(add(add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), add(mul(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)))))
add(mul(add(mul(compare_blocks_rows, add(add(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows)), mul(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(mul(add(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_rows)))))
COND TREES:
ge(_if_then_else(le(_if_then_else(le(ones_diff_cols, 2), ones_diff_cols, _if_then_else(True, ones_diff_cols, 4)), _if_then_else(True, 0, _if_then_else(True, compare_blocks_rows, ARG6))), _if_then_else(ge(compare_blocks_cols, 2), _if_then_else(and_(False, False), ARG7, ARG6), 0), _if_then_else(False, _if_then_else(False, zeros_diff_cols, 1), zeros_diff_rows)), _if_then_else(ge(ARG7, 3), _if_then_else(False, compare_blocks_cols, _if_then_else(True, _if_then_else(True, ARG7, 3), 3)), _if_then_else(True, ARG6, ARG6)))
ge(_if_then_else(or_(or_(le(ones_diff_rows, 4), le(1, zeros_diff_rows)), le(_if_then_else(False, 0, ARG6), _if_then_else(True, ones_diff_rows, 4))), _if_then_else(and_(and_(True, False), or_(False, False)), _if_then_else(or_(False, True), _if_then_else(False, 3, ARG6), _if_then_else(True, ones_diff_cols, 2)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(False, ARG6, compare_blocks_cols))), _if_then_else(and_(le(zeros_diff_cols, compare_blocks_rows), or_(False, True)), _if_then_else(le(ones_diff_rows, 3), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(True, ARG6, zeros_diff_rows)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(True, 3, ARG6), _if_then_else(True, 4, 3)))), _if_then_else(le(_if_then_else(le(compare_blocks_rows, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 4, ARG7)), _if_then_else(and_(True, True), _if_then_else(False, 4, 0), _if_then_else(False, ones_diff_rows, 3))), _if_then_else(and_(le(ARG6, ARG6), ge(2, 2)), _if_then_else(and_(True, False), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows))), _if_then_else(or_(ge(4, 2), ge(zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, ARG6, 1), _if_then_else(False, 0, 3)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4)))))
and_(ge(_if_then_else(le(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 0, ARG6), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(le(3, 3), _if_then_else(False, 1, 4), _if_then_else(False, 0, ones_diff_cols))), ge(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, 4), _if_then_else(False, zeros_diff_rows, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(True, compare_blocks_rows, ones_diff_rows))))
or_(and_(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(or_(True, True), _if_then_else(False, ARG6, 4), _if_then_else(True, 2, 3))), and_(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), le(_if_then_else(True, 1, 2), _if_then_else(True, ARG7, compare_blocks_rows)))), or_(or_(and_(or_(True, False), ge(4, zeros_diff_rows)), le(_if_then_else(True, 4, ARG7), _if_then_else(False, 0, 0))), or_(ge(_if_then_else(True, ones_diff_cols, 0), _if_then_else(True, 0, 0)), and_(or_(False, False), le(ones_diff_rows, 4)))))
and_(le(_if_then_else(ge(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols, ones_diff_cols), _if_then_else(and_(False, False), 4, compare_blocks_cols)), ge(_if_then_else(and_(True, True), 1, zeros_diff_rows), _if_then_else(False, ARG6, _if_then_else(True, 0, compare_blocks_rows))))
VAL TREES:
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(zeros_diff_rows, ones_diff_cols)), zeros_diff_cols)
mul(mul(zeros_diff_cols, mul(compare_blocks_cols, compare_blocks_cols)), add(add(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows)))
mul(compare_blocks_rows, add(add(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, add(ones_diff_rows, zeros_diff_rows)))))
mul(add(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, add(ones_diff_cols, zeros_diff_rows))), add(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)))
add(add(mul(add(add(zeros_diff_rows, zeros_diff_cols), zeros_diff_rows), add(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols))), mul(mul(mul(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), mul(ones_diff_rows, zeros_diff_rows))), add(add(add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), add(mul(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)))))
add(mul(add(mul(compare_blocks_rows, add(add(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows)), mul(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(mul(add(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(mul(mul(add(mul(zeros_diff_cols, ones_diff_cols), compare_blocks_cols), add(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows)), mul(mul(mul(compare_blocks_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, compare_blocks_rows))), compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols))), mul(mul(compare_blocks_rows, add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_rows)))))
COND TREES:
ge(_if_then_else(le(_if_then_else(le(ones_diff_cols, 2), ones_diff_cols, _if_then_else(True, ones_diff_cols, 4)), _if_then_else(True, 0, _if_then_else(True, compare_blocks_rows, ARG6))), _if_then_else(ge(compare_blocks_cols, 2), zeros_diff_rows, 0), _if_then_else(False, _if_then_else(False, zeros_diff_cols, 1), zeros_diff_rows)), _if_then_else(ge(ARG7, 3), _if_then_else(False, compare_blocks_cols, _if_then_else(True, _if_then_else(True, ARG7, 3), 3)), _if_then_else(True, ARG6, ARG6)))
ge(_if_then_else(or_(or_(le(ones_diff_rows, 4), le(1, zeros_diff_rows)), le(_if_then_else(False, 0, ARG6), _if_then_else(True, ones_diff_rows, 4))), _if_then_else(and_(and_(True, False), or_(False, False)), _if_then_else(or_(False, True), _if_then_else(False, 3, ARG6), _if_then_else(True, ones_diff_cols, 2)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(False, ARG6, compare_blocks_cols))), _if_then_else(and_(le(zeros_diff_cols, compare_blocks_rows), or_(False, True)), _if_then_else(le(ones_diff_rows, 3), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(True, ARG6, zeros_diff_rows)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(True, 3, ARG6), _if_then_else(True, 4, 3)))), _if_then_else(le(_if_then_else(le(compare_blocks_rows, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 4, ARG7)), _if_then_else(and_(True, True), _if_then_else(False, 4, 0), _if_then_else(False, ones_diff_rows, 3))), _if_then_else(and_(le(ARG6, ARG6), ge(2, 2)), _if_then_else(and_(True, False), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows))), _if_then_else(or_(ge(4, 2), ge(zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, ARG6, 1), _if_then_else(False, 0, 3)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4)))))
and_(ge(_if_then_else(le(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 0, ARG6), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(le(3, 3), _if_then_else(False, 1, 4), _if_then_else(False, 0, ones_diff_cols))), ge(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, 4), _if_then_else(False, zeros_diff_rows, compare_blocks_cols)), _if_then_else(ge(_if_then_else(False, 3, zeros_diff_rows), _if_then_else(and_(ge(_if_then_else(True, 3, ones_diff_rows), _if_then_else(True, compare_blocks_rows, 0)), le(_if_then_else(True, compare_blocks_rows, ARG7), _if_then_else(False, 3, ones_diff_rows))), zeros_diff_cols, 1)), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(True, compare_blocks_rows, ones_diff_rows))))
or_(and_(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(or_(True, True), _if_then_else(False, ARG6, 4), _if_then_else(True, 2, 3))), and_(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), le(_if_then_else(True, 1, 2), _if_then_else(True, ARG7, compare_blocks_rows)))), or_(or_(and_(or_(True, False), ge(4, zeros_diff_rows)), le(_if_then_else(True, 4, _if_then_else(False, zeros_diff_cols, 2)), _if_then_else(False, 0, 0))), or_(ge(_if_then_else(True, ones_diff_cols, 0), _if_then_else(True, 0, 0)), and_(or_(False, False), le(ones_diff_rows, 4)))))
and_(le(_if_then_else(ge(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols, ones_diff_cols), _if_then_else(and_(False, False), 4, compare_blocks_cols)), ge(_if_then_else(and_(True, True), 1, zeros_diff_rows), _if_then_else(False, ARG6, _if_then_else(or_(True, True), 0, compare_blocks_rows))))
VAL TREES:
mul(mul(ones_diff_cols, add(compare_blocks_rows, compare_blocks_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, ones_diff_rows)))
mul(mul(mul(zeros_diff_cols, add(zeros_diff_cols, mul(zeros_diff_cols, mul(compare_blocks_cols, zeros_diff_rows)))), mul(add(compare_blocks_cols, mul(ones_diff_cols, compare_blocks_cols)), add(zeros_diff_rows, compare_blocks_cols))), add(add(add(compare_blocks_cols, mul(ones_diff_cols, compare_blocks_cols)), zeros_diff_rows), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))), add(add(mul(mul(mul(zeros_diff_rows, ones_diff_rows), mul(add(mul(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_cols, ones_diff_rows)), mul(mul(mul(zeros_diff_rows, ones_diff_rows), mul(add(mul(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_cols)))), compare_blocks_cols))), compare_blocks_cols), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols))))
mul(add(mul(zeros_diff_rows, mul(mul(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols))), zeros_diff_cols), add(add(zeros_diff_cols, compare_blocks_rows), ones_diff_cols))
add(add(mul(add(zeros_diff_rows, mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols))), mul(mul(mul(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, mul(ones_diff_cols, ones_diff_cols))))), add(add(add(mul(ones_diff_rows, mul(compare_blocks_cols, zeros_diff_cols)), add(ones_diff_cols, compare_blocks_cols)), add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), add(mul(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)))))
add(mul(add(mul(add(ones_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)), mul(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(mul(add(zeros_diff_cols, mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, add(ones_diff_rows, compare_blocks_cols))), zeros_diff_cols))), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, add(ones_diff_rows, compare_blocks_cols))), zeros_diff_cols)))
COND TREES:
or_(or_(and_(False, True), le(0, 1)), or_(ge(compare_blocks_cols, 4), or_(True, False)))
or_(le(_if_then_else(ge(_if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 3, 4)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, ones_diff_rows, 2))), _if_then_else(and_(and_(False, True), ge(4, 2)), _if_then_else(ge(ARG6, 4), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)))), and_(or_(or_(and_(True, False), le(2, ones_diff_rows)), ge(_if_then_else(False, 4, 2), _if_then_else(True, 0, 1))), ge(_if_then_else(ge(4, 0), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 3, ARG7)), _if_then_else(le(compare_blocks_rows, 1), _if_then_else(False, 4, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))))
or_(le(_if_then_else(and_(True, True), _if_then_else(True, 4, _if_then_else(False, ones_diff_cols, 2)), _if_then_else(False, 4, compare_blocks_rows)), _if_then_else(True, _if_then_else(True, ARG6, ARG6), compare_blocks_cols)), or_(or_(or_(True, True), and_(False, False)), or_(False, False)))
le(_if_then_else(le(1, 2), _if_then_else(True, zeros_diff_cols, 0), _if_then_else(True, zeros_diff_rows, 1)), _if_then_else(False, compare_blocks_cols, 4))
or_(ge(_if_then_else(and_(True, True), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(ge(1, _if_then_else(and_(False, False), 4, compare_blocks_cols)), _if_then_else(True, 4, ARG7), _if_then_else(True, compare_blocks_cols, zeros_diff_cols))), and_(or_(or_(False, True), or_(True, False)), ge(_if_then_else(False, ARG7, zeros_diff_rows), _if_then_else(False, ones_diff_cols, ones_diff_cols))))
VAL TREES:
mul(mul(add(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_cols)))
add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, add(mul(add(mul(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_cols)), add(add(compare_blocks_rows, compare_blocks_cols), mul(ones_diff_rows, ones_diff_rows))), mul(add(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(zeros_diff_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols))))), mul(zeros_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), add(add(add(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))))))
mul(add(add(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows)), add(mul(mul(compare_blocks_cols, zeros_diff_rows), ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))), add(mul(add(zeros_diff_rows, add(add(compare_blocks_rows, mul(compare_blocks_rows, ones_diff_rows)), mul(compare_blocks_rows, zeros_diff_rows))), add(ones_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(mul(mul(ones_diff_rows, zeros_diff_rows), mul(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), add(add(mul(add(add(zeros_diff_cols, ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows))), add(compare_blocks_rows, ones_diff_cols)), compare_blocks_rows))
add(mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, ones_diff_cols))), add(mul(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols)), compare_blocks_rows)), add(mul(add(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows))), add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))))
COND TREES:
or_(or_(and_(False, True), le(0, 1)), or_(ge(_if_then_else(or_(and_(True, True), or_(True, True)), _if_then_else(le(ARG6, compare_blocks_rows), _if_then_else(False, ones_diff_rows, 3), _if_then_else(False, ARG7, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(True, 1, 2))), zeros_diff_cols), or_(True, True)))
or_(le(_if_then_else(ge(_if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 3, 4)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 2))), _if_then_else(and_(and_(False, True), ge(4, 2)), _if_then_else(ge(ARG6, 4), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)))), and_(or_(or_(and_(True, False), le(2, ones_diff_rows)), or_(or_(le(ones_diff_rows, 2), ge(2, ones_diff_cols)), and_(or_(ge(_if_then_else(False, zeros_diff_cols, ARG7), ARG6), True), and_(True, True)))), ge(_if_then_else(ge(4, 0), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 3, ARG7)), _if_then_else(le(compare_blocks_rows, 1), _if_then_else(False, 4, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))))
or_(le(_if_then_else(and_(True, True), _if_then_else(True, 4, 3), _if_then_else(le(_if_then_else(True, compare_blocks_rows, _if_then_else(le(_if_then_else(or_(and_(True, False), ge(4, 3)), _if_then_else(and_(False, True), _if_then_else(True, 4, ARG7), _if_then_else(True, zeros_diff_cols, ARG6)), _if_then_else(or_(True, False), _if_then_else(False, 4, 1), _if_then_else(False, compare_blocks_cols, 1))), _if_then_else(ge(_if_then_else(False, 2, _if_then_else(or_(ge(compare_blocks_cols, ones_diff_cols), le(zeros_diff_rows, ones_diff_rows)), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(le(0, 4), 0, 0))), _if_then_else(False, ones_diff_cols, ARG7)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(False, ARG6, compare_blocks_cols)), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_rows, ARG6), _if_then_else(False, 4, zeros_diff_cols)))), _if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, 4, ones_diff_cols), _if_then_else(True, 2, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, ARG7, 4), _if_then_else(False, ARG6, 1))), _if_then_else(ge(_if_then_else(True, 4, compare_blocks_cols), _if_then_else(True, ARG7, ARG7)), _if_then_else(and_(False, True), _if_then_else(True, 0, 1), _if_then_else(True, ARG6, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, 2), _if_then_else(True, ARG7, ARG7), _if_then_else(False, ones_diff_cols, 1))), _if_then_else(ge(_if_then_else(False, ARG7, 4), _if_then_else(True, 4, ones_diff_cols)), _if_then_else(ge(4, 4), _if_then_else(True, ARG6, 0), _if_then_else(False, compare_blocks_cols, compare_blocks_rows)), _if_then_else(le(ones_diff_cols, ones_diff_rows), _if_then_else(False, 0, ones_diff_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)))), _if_then_else(or_(le(_if_then_else(False, compare_blocks_rows, ARG6), _if_then_else(True, ARG6, 1)), ge(_if_then_else(False, ARG7, 0), _if_then_else(True, ARG7, 4))), _if_then_else(le(_if_then_else(True, zeros_diff_cols, 0), _if_then_else(False, ARG6, zeros_diff_rows)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, 2, 0)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 1))), _if_then_else(or_(or_(False, True), ge(0, ones_diff_cols)), _if_then_else(le(1, 0), _if_then_else(True, ARG6, 4), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_cols, ones_diff_rows), _if_then_else(True, ones_diff_rows, ARG7)))))), _if_then_else(False, 4, ones_diff_cols)), 4, compare_blocks_rows)), _if_then_else(True, _if_then_else(True, ARG6, ARG6), compare_blocks_cols)), or_(or_(or_(True, True), and_(False, False)), or_(False, False)))
le(_if_then_else(le(1, 2), _if_then_else(True, zeros_diff_cols, 0), _if_then_else(True, zeros_diff_rows, 1)), _if_then_else(ge(ARG7, 4), _if_then_else(False, 4, ARG6), _if_then_else(False, zeros_diff_cols, 4)))
or_(ge(_if_then_else(and_(True, True), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(ge(1, ARG6), _if_then_else(True, 4, ARG7), _if_then_else(True, compare_blocks_cols, zeros_diff_cols))), and_(or_(or_(False, True), or_(True, False)), ge(_if_then_else(and_(True, and_(True, True)), _if_then_else(le(2, 0), zeros_diff_cols, 1), _if_then_else(False, zeros_diff_rows, _if_then_else(True, 1, ARG7))), _if_then_else(le(_if_then_else(ge(_if_then_else(False, 0, compare_blocks_cols), _if_then_else(False, 1, 0)), _if_then_else(le(ARG7, ones_diff_rows), _if_then_else(True, ones_diff_rows, ARG6), _if_then_else(True, zeros_diff_rows, 4)), _if_then_else(ge(compare_blocks_cols, zeros_diff_cols), _if_then_else(False, 2, 2), _if_then_else(True, ones_diff_cols, ones_diff_rows))), _if_then_else(ge(_if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(True, 3, ARG7)), _if_then_else(or_(False, False), _if_then_else(False, 3, compare_blocks_cols), _if_then_else(True, ones_diff_cols, ARG6)), _if_then_else(ge(3, zeros_diff_cols), _if_then_else(False, ones_diff_rows, 4), _if_then_else(False, zeros_diff_rows, 0)))), _if_then_else(or_(ge(_if_then_else(False, compare_blocks_cols, 2), _if_then_else(True, 3, ones_diff_rows)), and_(ge(compare_blocks_rows, 2), le(4, compare_blocks_rows))), _if_then_else(ge(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(True, ARG6, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(False, zeros_diff_rows, 3)), _if_then_else(ge(0, ARG7), _if_then_else(False, 4, ARG7), _if_then_else(True, ones_diff_rows, compare_blocks_rows))), _if_then_else(le(_if_then_else(False, 4, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(or_(True, True), _if_then_else(False, ARG7, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, 3)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(False, 4, ones_diff_rows)))), _if_then_else(and_(and_(True, and_(False, False)), le(_if_then_else(True, 3, zeros_diff_rows), _if_then_else(False, ones_diff_cols, ARG6))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, ARG7), _if_then_else(True, zeros_diff_cols, zeros_diff_cols)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(False, 3, ones_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, 4, ARG6), _if_then_else(False, 2, 0))), _if_then_else(or_(and_(False, False), le(4, ARG6)), _if_then_else(or_(False, False), _if_then_else(False, 3, ARG7), _if_then_else(True, 1, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, 4, 3), _if_then_else(True, zeros_diff_cols, ARG7))))))))
VAL TREES:
mul(mul(add(ones_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_cols)))
add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_cols, add(add(mul(zeros_diff_rows, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(compare_blocks_cols, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_cols))))), add(mul(compare_blocks_cols, zeros_diff_rows), compare_blocks_cols))
add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(mul(add(ones_diff_cols, zeros_diff_rows), mul(add(zeros_diff_cols, zeros_diff_rows), compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_rows), compare_blocks_rows)))
mul(add(add(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows)), add(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))), add(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), add(add(mul(ones_diff_cols, mul(ones_diff_rows, zeros_diff_cols)), add(compare_blocks_rows, ones_diff_cols)), compare_blocks_rows))
add(mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(add(mul(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_cols, add(mul(compare_blocks_rows, ones_diff_cols), compare_blocks_cols))), mul(mul(add(mul(ones_diff_rows, compare_blocks_cols), ones_diff_cols), zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols))), ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, ones_diff_cols))), add(mul(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)))), add(mul(add(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, ones_diff_cols)), mul(ones_diff_cols, compare_blocks_rows))), add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))))
COND TREES:
ge(_if_then_else(or_(or_(and_(True, True), or_(False, True)), le(_if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, ARG6))), _if_then_else(ge(_if_then_else(False, ARG7, compare_blocks_rows), _if_then_else(True, ARG6, ones_diff_cols)), _if_then_else(le(3, zeros_diff_rows), _if_then_else(True, ARG6, 0), _if_then_else(True, compare_blocks_cols, zeros_diff_rows)), _if_then_else(ge(4, ARG6), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, zeros_diff_cols, ARG6))), _if_then_else(or_(ge(zeros_diff_cols, ones_diff_cols), le(compare_blocks_cols, 1)), _if_then_else(ge(compare_blocks_rows, ones_diff_rows), 2, _if_then_else(True, compare_blocks_cols, ones_diff_cols)), _if_then_else(ge(4, ones_diff_cols), _if_then_else(False, ARG7, 2), _if_then_else(False, compare_blocks_cols, ARG7)))), _if_then_else(or_(and_(le(3, compare_blocks_rows), ge(3, compare_blocks_cols)), ge(_if_then_else(False, 0, ARG7), _if_then_else(False, 2, ARG6))), _if_then_else(le(_if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, 3)), _if_then_else(or_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, 4)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(False, 0, 4))), _if_then_else(and_(True, ge(zeros_diff_cols, 1)), _if_then_else(or_(True, False), _if_then_else(True, ARG6, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(compare_blocks_cols, ones_diff_cols), _if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, 2)))))
and_(and_(and_(or_(True, True), ge(zeros_diff_rows, 1)), ge(_if_then_else(False, _if_then_else(True, ones_diff_rows, 4), zeros_diff_cols), _if_then_else(False, zeros_diff_cols, ARG7))), or_(ge(_if_then_else(True, 1, ARG7), _if_then_else(False, ones_diff_rows, 4)), and_(True, True)))
ge(_if_then_else(le(_if_then_else(True, _if_then_else(or_(ge(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(le(ones_diff_cols, 4), 0, 0)), compare_blocks_cols), _if_then_else(False, 4, ones_diff_cols)), _if_then_else(or_(ge(ones_diff_rows, 2), False), _if_then_else(False, ARG6, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(False, ARG7, ARG6))), _if_then_else(and_(and_(False, True), or_(True, False)), _if_then_else(le(3, 2), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(True, 2, 0)), _if_then_else(ge(ARG6, 2), _if_then_else(True, ARG6, ARG6), 2)))
le(_if_then_else(and_(False, True), _if_then_else(False, ARG7, ones_diff_rows), _if_then_else(True, 1, 2)), _if_then_else(False, _if_then_else(False, compare_blocks_cols, 2), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)))
le(_if_then_else(and_(True, and_(True, True)), _if_then_else(le(2, 0), zeros_diff_cols, 1), _if_then_else(False, _if_then_else(or_(True, False), _if_then_else(False, 2, 2), _if_then_else(False, 4, ARG6)), _if_then_else(True, 1, ARG7))), _if_then_else(and_(True, True), _if_then_else(False, _if_then_else(True, 4, 0), 2), _if_then_else(False, zeros_diff_rows, ARG6)))
VAL TREES:
mul(add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, zeros_diff_rows)), add(ones_diff_rows, compare_blocks_rows))
add(add(mul(add(zeros_diff_rows, ones_diff_rows), mul(compare_blocks_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, zeros_diff_rows))), add(mul(add(zeros_diff_cols, mul(zeros_diff_cols, mul(add(ones_diff_rows, zeros_diff_cols), zeros_diff_rows))), mul(compare_blocks_rows, compare_blocks_rows)), add(add(ones_diff_cols, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_rows))))
mul(add(add(ones_diff_cols, add(mul(mul(add(add(zeros_diff_rows, compare_blocks_rows), add(mul(compare_blocks_rows, compare_blocks_rows), mul(mul(ones_diff_rows, zeros_diff_cols), compare_blocks_cols))), ones_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), add(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, zeros_diff_rows)))), add(ones_diff_cols, compare_blocks_cols)), add(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), mul(mul(add(add(add(mul(add(zeros_diff_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_cols))), add(add(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_cols, zeros_diff_cols)), add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_rows)))), mul(mul(mul(add(zeros_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_rows, zeros_diff_rows))), mul(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, zeros_diff_rows)), mul(mul(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_cols, compare_blocks_rows))))), zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_cols)))
add(add(add(compare_blocks_cols, ones_diff_cols), mul(mul(ones_diff_cols, zeros_diff_cols), add(compare_blocks_rows, compare_blocks_rows))), compare_blocks_rows)
add(add(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), add(mul(compare_blocks_cols, zeros_diff_cols), mul(mul(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), zeros_diff_cols))), mul(mul(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_cols))))
COND TREES:
ge(_if_then_else(le(_if_then_else(le(ones_diff_cols, 2), ones_diff_cols, _if_then_else(True, 4, compare_blocks_rows)), _if_then_else(False, 0, _if_then_else(True, compare_blocks_rows, ARG6))), _if_then_else(ge(compare_blocks_cols, 2), _if_then_else(and_(False, False), ARG7, ARG6), 0), _if_then_else(False, _if_then_else(False, zeros_diff_cols, 1), zeros_diff_rows)), _if_then_else(ge(ARG7, 3), _if_then_else(False, compare_blocks_cols, _if_then_else(True, _if_then_else(False, ARG7, 3), 3)), _if_then_else(True, ARG6, ARG6)))
ge(_if_then_else(or_(or_(le(ones_diff_rows, 4), le(1, zeros_diff_rows)), le(_if_then_else(False, 0, ARG6), compare_blocks_cols)), _if_then_else(and_(and_(True, False), or_(False, False)), _if_then_else(or_(False, True), _if_then_else(False, 3, compare_blocks_rows), _if_then_else(True, ones_diff_cols, 2)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(False, ARG6, compare_blocks_cols))), _if_then_else(and_(le(zeros_diff_cols, compare_blocks_rows), or_(False, True)), _if_then_else(le(ones_diff_rows, 3), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(True, ARG6, zeros_diff_rows)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(True, 3, ARG6), _if_then_else(True, 4, 3)))), _if_then_else(le(_if_then_else(le(compare_blocks_rows, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 4, ARG7)), _if_then_else(and_(True, True), _if_then_else(False, 4, 0), _if_then_else(False, ones_diff_rows, 3))), _if_then_else(False, _if_then_else(and_(True, False), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows))), _if_then_else(or_(ge(4, 2), ge(zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, ARG6, 1), _if_then_else(False, 0, 3)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4)))))
and_(ge(_if_then_else(le(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 0, ARG6), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(le(_if_then_else(or_(ge(_if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(True, 2, ARG6)), ge(_if_then_else(False, ones_diff_cols, compare_blocks_cols), _if_then_else(False, ARG7, ARG7))), _if_then_else(and_(or_(False, True), and_(False, True)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_cols, compare_blocks_rows), _if_then_else(True, 2, ARG7)), _if_then_else(le(ARG7, ones_diff_rows), _if_then_else(True, 3, ones_diff_cols), _if_then_else(True, ARG6, 1))), _if_then_else(le(_if_then_else(True, 4, compare_blocks_cols), _if_then_else(True, 2, 3)), _if_then_else(and_(True, True), _if_then_else(False, ones_diff_cols, 3), _if_then_else(True, 4, ones_diff_cols)), _if_then_else(le(ARG7, 2), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, ARG6, 1)))), 3), _if_then_else(False, 1, 4), _if_then_else(False, 0, ones_diff_cols))), ge(_if_then_else(or_(False, False), _if_then_else(True, ones_diff_cols, 4), _if_then_else(False, zeros_diff_rows, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(False, compare_blocks_rows, ones_diff_rows))))
or_(and_(le(_if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(True, zeros_diff_cols, ones_diff_rows)), and_(ge(compare_blocks_cols, _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), le(_if_then_else(True, 1, 2), _if_then_else(True, ARG7, compare_blocks_rows)))), or_(or_(and_(or_(True, False), ge(4, zeros_diff_rows)), le(_if_then_else(True, 4, ARG7), _if_then_else(False, 0, 0))), or_(ge(_if_then_else(True, ones_diff_cols, 0), _if_then_else(True, 0, 0)), and_(or_(ge(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, ARG7)), and_(ge(ones_diff_rows, ones_diff_rows), or_(True, False))), and_(False, True)))))
and_(le(_if_then_else(ge(compare_blocks_cols, zeros_diff_cols), _if_then_else(and_(le(4, zeros_diff_rows), ge(3, 1)), _if_then_else(ge(4, ones_diff_rows), _if_then_else(False, 2, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_cols)), _if_then_else(le(1, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows), _if_then_else(True, 2, 3))), ones_diff_cols), _if_then_else(and_(True, True), 4, compare_blocks_cols)), ge(_if_then_else(and_(True, True), 1, zeros_diff_rows), _if_then_else(False, ARG6, _if_then_else(True, 0, compare_blocks_rows))))
VAL TREES:
mul(zeros_diff_cols, mul(add(ones_diff_cols, mul(ones_diff_rows, compare_blocks_rows)), mul(ones_diff_rows, zeros_diff_rows)))
mul(mul(zeros_diff_cols, mul(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, add(add(compare_blocks_cols, compare_blocks_cols), zeros_diff_cols)), add(zeros_diff_rows, zeros_diff_rows)))
mul(compare_blocks_cols, add(add(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, add(ones_diff_rows, zeros_diff_rows)))))
mul(add(mul(ones_diff_cols, ones_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, zeros_diff_rows)))
add(add(mul(add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols))), mul(mul(mul(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), mul(ones_diff_rows, zeros_diff_rows))), add(add(add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, compare_blocks_cols)), add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), add(mul(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)))))
add(mul(add(mul(compare_blocks_rows, add(add(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows)), mul(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(mul(add(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_rows)))))
COND TREES:
or_(ge(2, 1), ge(_if_then_else(le(_if_then_else(le(ARG7, zeros_diff_rows), _if_then_else(True, ARG6, zeros_diff_cols), _if_then_else(True, 1, 2)), _if_then_else(le(compare_blocks_cols, 0), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, zeros_diff_rows))), _if_then_else(False, 2, ARG6), _if_then_else(True, 3, ARG6)), _if_then_else(le(1, 1), 2, _if_then_else(False, zeros_diff_cols, 0))))
and_(or_(ge(4, 1), and_(or_(ge(4, 1), and_(True, True)), True)), le(_if_then_else(le(_if_then_else(or_(and_(False, True), ge(3, ARG7)), _if_then_else(ge(0, ARG7), _if_then_else(True, ARG7, zeros_diff_rows), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(4, zeros_diff_cols), _if_then_else(True, 1, 1), _if_then_else(False, 4, zeros_diff_cols))), _if_then_else(or_(ge(4, compare_blocks_rows), or_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ARG6, ARG7), _if_then_else(True, zeros_diff_rows, 4)), _if_then_else(and_(False, False), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, 3)))), _if_then_else(le(_if_then_else(or_(True, True), _if_then_else(True, ARG7, 0), _if_then_else(True, ARG7, compare_blocks_rows)), _if_then_else(ge(0, 0), _if_then_else(False, _if_then_else(and_(ge(compare_blocks_cols, compare_blocks_rows), or_(le(2, 1), False)), _if_then_else(ge(4, compare_blocks_cols), _if_then_else(True, compare_blocks_cols, _if_then_else(True, 3, 2)), _if_then_else(True, 3, ARG6)), _if_then_else(le(_if_then_else(False, 4, compare_blocks_cols), 1), _if_then_else(True, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, 0, 1))), 1), _if_then_else(True, ones_diff_rows, zeros_diff_cols))), _if_then_else(and_(and_(True, False), or_(True, True)), _if_then_else(or_(True, False), _if_then_else(True, 3, 2), _if_then_else(True, compare_blocks_rows, 3)), _if_then_else(or_(False, False), _if_then_else(False, 0, ones_diff_cols), _if_then_else(True, 2, ones_diff_rows))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, 3), _if_then_else(False, ARG7, ARG6)), _if_then_else(ge(2, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, 3, compare_blocks_cols)), _if_then_else(le(compare_blocks_cols, 2), _if_then_else(False, 4, 0), _if_then_else(False, 3, ARG6)))), _if_then_else(ge(_if_then_else(or_(True, False), _if_then_else(False, 1, zeros_diff_rows), 1), _if_then_else(le(compare_blocks_rows, 2), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, 4))), _if_then_else(or_(le(compare_blocks_cols, ARG7), ge(3, zeros_diff_cols)), _if_then_else(ge(1, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, ones_diff_rows)), _if_then_else(ge(ARG6, ARG6), _if_then_else(True, zeros_diff_rows, ARG6), _if_then_else(True, compare_blocks_cols, compare_blocks_rows))), _if_then_else(le(_if_then_else(False, ARG7, 4), _if_then_else(True, 2, ones_diff_rows)), _if_then_else(and_(True, False), _if_then_else(True, zeros_diff_cols, ones_diff_cols), _if_then_else(False, 1, compare_blocks_rows)), _if_then_else(le(2, ones_diff_cols), _if_then_else(False, 1, 2), _if_then_else(False, compare_blocks_cols, ones_diff_rows))))), _if_then_else(True, zeros_diff_cols, 0)))
le(_if_then_else(or_(ge(compare_blocks_cols, ones_diff_cols), le(zeros_diff_rows, ones_diff_rows)), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(le(0, 4), 0, 0)), _if_then_else(le(zeros_diff_rows, 0), _if_then_else(ge(ones_diff_rows, 2), ones_diff_cols, ARG6), _if_then_else(True, 1, compare_blocks_rows)))
or_(ge(_if_then_else(False, ARG7, 3), _if_then_else(True, ARG7, ARG6)), and_(or_(and_(le(_if_then_else(ge(0, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, 0), _if_then_else(True, _if_then_else(False, zeros_diff_rows, compare_blocks_rows), ARG7)), _if_then_else(and_(False, False), _if_then_else(False, 4, 4), _if_then_else(False, ARG7, ARG7))), le(_if_then_else(or_(False, False), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(le(2, 2), _if_then_else(True, 1, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, ARG6)))), ge(_if_then_else(le(_if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(True, zeros_diff_cols, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(False, 4, 0), _if_then_else(False, ARG6, 0)), _if_then_else(ge(2, 1), _if_then_else(False, compare_blocks_rows, 2), _if_then_else(False, 1, ARG7))), _if_then_else(le(_if_then_else(True, compare_blocks_rows, 0), _if_then_else(True, 2, 0)), _if_then_else(or_(True, False), _if_then_else(True, 2, ARG6), _if_then_else(True, 0, 3)), _if_then_else(le(zeros_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 4))))), or_(False, and_(False, True))))
ge(_if_then_else(and_(True, le(ones_diff_cols, _if_then_else(and_(and_(True, True), le(4, 2)), _if_then_else(or_(True, False), _if_then_else(False, _if_then_else(and_(False, and_(True, True)), _if_then_else(le(2, 0), zeros_diff_cols, 1), _if_then_else(False, zeros_diff_rows, _if_then_else(True, 1, ARG7))), 2), _if_then_else(False, 4, ARG6)), _if_then_else(le(ones_diff_rows, 1), _if_then_else(and_(le(_if_then_else(or_(False, ge(zeros_diff_cols, compare_blocks_rows)), 4, ones_diff_cols), _if_then_else(False, 0, zeros_diff_rows)), or_(or_(False, True), le(ones_diff_cols, _if_then_else(ge(compare_blocks_cols, 1), zeros_diff_cols, 1)))), zeros_diff_rows, ARG7), _if_then_else(False, 2, 2))))), _if_then_else(and_(False, True), _if_then_else(ge(_if_then_else(and_(True, True), 1, zeros_diff_rows), _if_then_else(False, ARG6, _if_then_else(True, 0, compare_blocks_rows))), zeros_diff_rows, zeros_diff_cols), 3), _if_then_else(True, 4, ARG6)), _if_then_else(and_(True, True), _if_then_else(True, compare_blocks_rows, zeros_diff_rows), _if_then_else(True, ARG7, 1)))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_rows), add(mul(zeros_diff_cols, ones_diff_rows), compare_blocks_cols)), add(mul(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_cols)))
add(add(mul(mul(ones_diff_cols, zeros_diff_cols), mul(ones_diff_cols, mul(zeros_diff_rows, ones_diff_rows))), add(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_cols))), mul(mul(mul(ones_diff_cols, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows))))
mul(mul(mul(add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_cols)), add(add(mul(compare_blocks_rows, zeros_diff_rows), add(ones_diff_rows, zeros_diff_cols)), add(ones_diff_rows, ones_diff_rows))), mul(mul(add(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_cols, ones_diff_cols)))), add(mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), add(add(ones_diff_rows, mul(zeros_diff_rows, ones_diff_rows)), mul(zeros_diff_cols, zeros_diff_rows))), mul(add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols)))))
add(mul(mul(add(ones_diff_rows, ones_diff_cols), compare_blocks_cols), mul(compare_blocks_rows, compare_blocks_rows)), mul(mul(compare_blocks_rows, zeros_diff_cols), add(add(ones_diff_rows, mul(mul(ones_diff_rows, ones_diff_cols), ones_diff_cols)), add(mul(compare_blocks_rows, compare_blocks_rows), compare_blocks_cols))))
add(mul(add(mul(mul(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, zeros_diff_cols)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_cols))), mul(mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_rows, compare_blocks_rows)), add(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_cols)))), add(add(mul(mul(ones_diff_cols, ones_diff_rows), mul(ones_diff_rows, ones_diff_cols)), add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows))), add(add(mul(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, zeros_diff_cols)), add(add(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)))))
mul(mul(mul(mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), mul(add(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_rows, ones_diff_rows))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), add(compare_blocks_rows, ones_diff_cols)), mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)))), mul(add(mul(mul(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)))))
COND TREES:
ge(_if_then_else(le(_if_then_else(le(ones_diff_cols, 2), ones_diff_cols, _if_then_else(True, ones_diff_cols, 4)), _if_then_else(True, 0, _if_then_else(True, compare_blocks_rows, ARG6))), _if_then_else(ge(compare_blocks_cols, 2), zeros_diff_rows, 0), _if_then_else(False, _if_then_else(False, zeros_diff_cols, 1), zeros_diff_rows)), _if_then_else(ge(ARG7, 3), _if_then_else(False, compare_blocks_cols, _if_then_else(True, _if_then_else(True, ARG7, 3), 3)), _if_then_else(True, ARG6, ARG6)))
ge(_if_then_else(or_(or_(le(ones_diff_rows, 4), le(1, zeros_diff_rows)), le(_if_then_else(False, 0, ARG6), _if_then_else(True, ones_diff_rows, 4))), _if_then_else(and_(and_(True, False), or_(False, False)), _if_then_else(or_(False, True), _if_then_else(False, 3, ARG6), _if_then_else(True, ones_diff_cols, 2)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(False, ARG6, compare_blocks_cols))), _if_then_else(and_(le(zeros_diff_cols, compare_blocks_rows), or_(False, True)), _if_then_else(le(ones_diff_rows, 3), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(True, ARG6, zeros_diff_rows)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(True, 3, ARG6), _if_then_else(True, 4, 3)))), _if_then_else(le(_if_then_else(le(compare_blocks_rows, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 4, ARG7)), _if_then_else(and_(True, True), _if_then_else(False, 4, 0), _if_then_else(False, ones_diff_rows, 3))), _if_then_else(and_(le(ARG6, ARG6), ge(2, 2)), _if_then_else(and_(True, False), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows))), _if_then_else(or_(ge(4, 2), ge(zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, ARG6, 1), _if_then_else(False, 0, 3)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4)))))
and_(ge(_if_then_else(le(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 0, ARG6), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(le(3, 3), _if_then_else(False, 1, 4), _if_then_else(False, 0, ones_diff_cols))), ge(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, 4), _if_then_else(False, zeros_diff_rows, compare_blocks_cols)), _if_then_else(ge(_if_then_else(False, 3, zeros_diff_rows), _if_then_else(and_(ge(_if_then_else(True, 3, ones_diff_rows), _if_then_else(True, compare_blocks_rows, 0)), le(_if_then_else(True, compare_blocks_rows, ARG7), _if_then_else(False, 3, ones_diff_rows))), zeros_diff_cols, 1)), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(True, compare_blocks_rows, ones_diff_rows))))
or_(and_(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(or_(True, True), _if_then_else(False, ARG6, 4), _if_then_else(True, 2, 3))), and_(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), le(_if_then_else(True, 1, 2), _if_then_else(True, ARG7, compare_blocks_rows)))), or_(or_(and_(or_(True, False), ge(4, zeros_diff_rows)), le(_if_then_else(True, 4, _if_then_else(False, zeros_diff_cols, 2)), _if_then_else(False, 0, 0))), or_(ge(_if_then_else(True, ones_diff_cols, 0), _if_then_else(True, 0, 0)), and_(or_(False, False), le(ones_diff_rows, 4)))))
and_(le(_if_then_else(ge(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols, ones_diff_cols), _if_then_else(and_(False, False), 4, compare_blocks_cols)), ge(_if_then_else(and_(True, True), 1, zeros_diff_rows), _if_then_else(False, ARG6, _if_then_else(or_(True, True), 0, compare_blocks_rows))))
VAL TREES:
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, ones_diff_rows)))
mul(mul(mul(zeros_diff_cols, ones_diff_cols), mul(add(compare_blocks_cols, mul(ones_diff_cols, compare_blocks_cols)), add(zeros_diff_rows, compare_blocks_cols))), add(add(add(compare_blocks_rows, mul(ones_diff_cols, compare_blocks_cols)), zeros_diff_rows), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))), add(add(mul(mul(mul(zeros_diff_rows, ones_diff_rows), mul(add(mul(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_cols, ones_diff_rows)), mul(mul(ones_diff_cols, mul(add(mul(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_cols)))), compare_blocks_cols))), compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols))))
mul(add(mul(zeros_diff_rows, compare_blocks_rows), zeros_diff_cols), add(add(ones_diff_rows, compare_blocks_rows), ones_diff_cols))
add(add(mul(add(zeros_diff_rows, mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols))), mul(mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_rows)))), add(add(add(mul(ones_diff_rows, mul(compare_blocks_cols, zeros_diff_cols)), add(ones_diff_cols, compare_blocks_cols)), add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), add(mul(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)))))
add(mul(add(mul(add(ones_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)), mul(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(mul(add(zeros_diff_cols, mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))), mul(mul(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, add(ones_diff_rows, compare_blocks_cols))), zeros_diff_cols))), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, add(ones_diff_rows, compare_blocks_cols))), zeros_diff_cols)))
COND TREES:
or_(ge(2, 1), ge(_if_then_else(le(_if_then_else(le(0, zeros_diff_rows), _if_then_else(True, ARG6, zeros_diff_cols), _if_then_else(True, 1, 2)), _if_then_else(le(compare_blocks_cols, 0), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, zeros_diff_rows))), _if_then_else(False, 2, _if_then_else(ge(_if_then_else(ge(_if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(True, ARG7, ARG7)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(ge(1, ARG7), _if_then_else(False, 1, ARG7), _if_then_else(True, 1, ones_diff_rows))), _if_then_else(ge(_if_then_else(True, compare_blocks_cols, ARG7), _if_then_else(False, compare_blocks_cols, 2)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, ARG7, 2)), _if_then_else(le(2, ARG6), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(False, ARG7, ARG7)))), _if_then_else(le(_if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, ARG6)), _if_then_else(and_(True, True), _if_then_else(False, 3, 4), _if_then_else(True, ARG6, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, 0, 3), _if_then_else(True, 4, ARG6)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, compare_blocks_cols), _if_then_else(False, 0, 4)), _if_then_else(and_(False, False), _if_then_else(True, 4, 4), _if_then_else(False, zeros_diff_cols, 3))), _if_then_else(ge(_if_then_else(True, 2, ones_diff_rows), _if_then_else(False, compare_blocks_rows, ARG7)), _if_then_else(le(compare_blocks_rows, ARG7), _if_then_else(False, 3, 3), _if_then_else(True, 3, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(True, 0, zeros_diff_rows), _if_then_else(False, ones_diff_rows, 0)))), _if_then_else(or_(and_(ge(ARG7, 2), ge(2, ones_diff_rows)), ge(_if_then_else(False, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, zeros_diff_cols))), _if_then_else(ge(_if_then_else(False, 3, 2), _if_then_else(True, zeros_diff_cols, zeros_diff_cols)), _if_then_else(and_(False, False), _if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(False, 1, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, ARG7, 0), _if_then_else(False, zeros_diff_cols, ones_diff_rows))), _if_then_else(and_(and_(False, True), and_(True, True)), _if_then_else(ge(compare_blocks_cols, 4), _if_then_else(True, ARG7, ARG6), _if_then_else(True, ARG6, ARG6)), _if_then_else(and_(True, True), _if_then_else(False, 3, ones_diff_rows), _if_then_else(False, 4, ones_diff_cols)))))), _if_then_else(True, 3, ARG6)), _if_then_else(le(1, 1), _if_then_else(False, ones_diff_rows, ARG7), _if_then_else(False, zeros_diff_cols, 0))))
and_(or_(ge(4, 1), and_(or_(ge(4, 1), and_(True, True)), True)), le(_if_then_else(le(_if_then_else(or_(and_(False, True), ge(3, ARG7)), _if_then_else(ge(0, ARG7), _if_then_else(True, ARG7, zeros_diff_rows), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(4, zeros_diff_cols), _if_then_else(True, 1, 1), _if_then_else(False, 4, zeros_diff_cols))), _if_then_else(or_(ge(4, compare_blocks_rows), or_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ARG6, ARG7), _if_then_else(True, zeros_diff_rows, 4)), _if_then_else(and_(False, False), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, 3)))), _if_then_else(le(_if_then_else(or_(True, True), _if_then_else(True, ARG7, 0), _if_then_else(True, ARG7, compare_blocks_rows)), _if_then_else(ge(0, 0), _if_then_else(False, 0, 1), _if_then_else(True, ones_diff_rows, zeros_diff_cols))), _if_then_else(True, _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_cols, 2), _if_then_else(True, compare_blocks_rows, 3)), _if_then_else(or_(False, False), _if_then_else(False, 0, ones_diff_cols), _if_then_else(True, 2, ones_diff_rows))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, 3), _if_then_else(False, ARG7, ARG6)), _if_then_else(ge(2, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, 3, compare_blocks_cols)), _if_then_else(and_(and_(le(_if_then_else(True, 1, compare_blocks_rows), _if_then_else(True, 2, ones_diff_rows)), and_(le(ARG6, 3), le(2, zeros_diff_rows))), le(_if_then_else(and_(False, True), _if_then_else(True, 1, compare_blocks_rows), _if_then_else(False, ones_diff_cols, ARG7)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(True, ARG7, compare_blocks_cols)))), _if_then_else(ge(_if_then_else(ge(ARG6, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 4, ARG7)), _if_then_else(or_(False, True), _if_then_else(True, 0, ARG7), _if_then_else(False, ones_diff_rows, ARG7))), _if_then_else(le(_if_then_else(False, ones_diff_rows, 0), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(True, 3, 4), _if_then_else(True, 1, 2)), _if_then_else(or_(False, False), _if_then_else(False, 4, zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows))), _if_then_else(or_(le(ARG6, ARG7), le(zeros_diff_cols, ones_diff_rows)), _if_then_else(le(3, compare_blocks_cols), _if_then_else(True, 1, ARG7), _if_then_else(False, 2, 4)), _if_then_else(le(compare_blocks_cols, compare_blocks_cols), _if_then_else(True, 2, ones_diff_rows), _if_then_else(False, ones_diff_rows, ARG7)))), _if_then_else(ge(_if_then_else(le(ones_diff_cols, ARG7), _if_then_else(False, 4, 2), _if_then_else(True, zeros_diff_rows, compare_blocks_rows)), _if_then_else(ge(1, 2), _if_then_else(True, ARG6, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, 0))), _if_then_else(or_(and_(False, False), or_(True, True)), _if_then_else(le(zeros_diff_cols, 4), _if_then_else(True, 1, ARG7), _if_then_else(True, 3, 0)), _if_then_else(ge(compare_blocks_cols, 0), _if_then_else(False, 2, compare_blocks_rows), _if_then_else(False, 4, ones_diff_cols))), _if_then_else(or_(ge(3, 1), and_(True, True)), _if_then_else(or_(True, True), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(False, 0, ARG7)), _if_then_else(ge(ones_diff_cols, 3), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, 3, 4))))))), _if_then_else(ge(_if_then_else(or_(True, False), _if_then_else(False, 1, zeros_diff_rows), 1), _if_then_else(le(compare_blocks_rows, 2), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, 4))), _if_then_else(or_(le(compare_blocks_cols, ARG7), ge(3, zeros_diff_cols)), _if_then_else(ge(1, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, ones_diff_rows)), _if_then_else(ge(ARG6, ARG6), _if_then_else(True, zeros_diff_rows, ARG6), _if_then_else(True, compare_blocks_cols, compare_blocks_rows))), _if_then_else(le(_if_then_else(False, ARG7, 4), _if_then_else(True, 2, ones_diff_rows)), _if_then_else(and_(True, False), _if_then_else(True, zeros_diff_cols, ones_diff_cols), _if_then_else(False, 1, compare_blocks_rows)), _if_then_else(le(2, ones_diff_cols), _if_then_else(False, 1, 2), _if_then_else(False, compare_blocks_cols, ones_diff_rows))))), _if_then_else(True, zeros_diff_cols, 0)))
le(_if_then_else(or_(ge(compare_blocks_cols, ones_diff_cols), le(zeros_diff_rows, ones_diff_rows)), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(le(0, 4), 0, 0)), _if_then_else(le(_if_then_else(ge(_if_then_else(True, ARG6, ones_diff_cols), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(False, ones_diff_cols, 3), _if_then_else(False, ARG6, ARG6)), _if_then_else(and_(True, False), _if_then_else(False, 3, ones_diff_cols), _if_then_else(True, ones_diff_rows, ARG7))), _if_then_else(le(_if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(True, 4, 1)), _if_then_else(ge(3, ARG7), _if_then_else(True, 2, zeros_diff_cols), _if_then_else(True, 2, ARG6)), _if_then_else(or_(True, False), _if_then_else(True, 4, 1), _if_then_else(False, compare_blocks_rows, compare_blocks_rows)))), _if_then_else(and_(or_(or_(False, True), le(3, 4)), and_(ge(compare_blocks_cols, ARG7), or_(False, True))), _if_then_else(and_(or_(or_(True, True), and_(False, False)), le(0, ones_diff_cols)), _if_then_else(ge(4, 0), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, compare_blocks_rows, ARG7)), _if_then_else(ge(zeros_diff_cols, ones_diff_rows), _if_then_else(True, zeros_diff_rows, zeros_diff_cols), _if_then_else(False, 1, ARG6))), _if_then_else(le(_if_then_else(True, compare_blocks_cols, 2), _if_then_else(False, compare_blocks_cols, ARG7)), _if_then_else(and_(True, False), _if_then_else(False, ARG7, 4), _if_then_else(True, zeros_diff_cols, ones_diff_cols)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, 2, 2)))), _if_then_else(and_(or_(or_(True, True), or_(False, True)), le(_if_then_else(False, compare_blocks_cols, 0), _if_then_else(True, 4, ones_diff_rows))), _if_then_else(and_(ge(zeros_diff_rows, ARG6), or_(False, True)), _if_then_else(or_(False, True), _if_then_else(False, 0, 1), _if_then_else(True, 0, 2)), _if_then_else(le(compare_blocks_rows, compare_blocks_rows), _if_then_else(False, ARG7, 2), _if_then_else(False, ARG6, ARG6))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, ARG7), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(le(2, ARG7), _if_then_else(False, 0, 0), _if_then_else(True, ARG7, ones_diff_rows)), _if_then_else(ge(0, 0), _if_then_else(True, ARG7, 2), _if_then_else(True, ARG7, 1))))))
or_(ge(_if_then_else(False, ARG7, 3), _if_then_else(True, ARG7, ARG6)), and_(or_(and_(le(_if_then_else(ge(0, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, 0), _if_then_else(True, ones_diff_rows, ARG7)), _if_then_else(and_(False, False), _if_then_else(False, 4, 4), _if_then_else(False, ARG7, ARG7))), le(_if_then_else(or_(False, False), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(le(_if_then_else(False, 4, ARG6), 2), _if_then_else(True, 1, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, ARG6)))), ge(_if_then_else(le(_if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(True, zeros_diff_cols, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(False, 4, 0), _if_then_else(False, ARG6, 0)), _if_then_else(ge(2, 1), _if_then_else(False, compare_blocks_rows, 2), _if_then_else(False, 1, ARG7))), _if_then_else(le(_if_then_else(True, compare_blocks_rows, 0), _if_then_else(True, 2, 0)), _if_then_else(or_(True, False), _if_then_else(True, 2, ARG6), _if_then_else(True, 0, 3)), _if_then_else(le(zeros_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 4))))), or_(False, and_(False, True))))
ge(_if_then_else(and_(True, ge(_if_then_else(le(_if_then_else(and_(True, True), _if_then_else(True, ARG6, 4), _if_then_else(True, 3, 0)), _if_then_else(and_(False, False), _if_then_else(False, ARG7, zeros_diff_cols), _if_then_else(True, 3, compare_blocks_cols))), _if_then_else(ge(_if_then_else(True, 2, ones_diff_rows), _if_then_else(and_(ge(_if_then_else(or_(True, False), _if_then_else(False, ones_diff_rows, compare_blocks_cols), _if_then_else(True, ARG6, 0)), _if_then_else(and_(False, True), _if_then_else(False, 1, 2), _if_then_else(True, compare_blocks_rows, ARG7))), and_(or_(le(ARG7, 1), or_(True, True)), ge(_if_then_else(False, 0, compare_blocks_cols), _if_then_else(True, 3, 2)))), 3, 2)), _if_then_else(le(ones_diff_cols, zeros_diff_cols), _if_then_else(False, ARG6, 3), _if_then_else(False, 4, 1)), _if_then_else(or_(True, False), _if_then_else(True, compare_blocks_cols, 4), _if_then_else(False, ones_diff_cols, 4))), _if_then_else(and_(or_(False, or_(or_(False, True), or_(True, False))), and_(False, True)), _if_then_else(ge(1, compare_blocks_rows), _if_then_else(False, 0, ones_diff_cols), _if_then_else(True, 0, ones_diff_cols)), _if_then_else(le(0, 4), _if_then_else(True, ARG6, 0), _if_then_else(False, 3, compare_blocks_rows)))), _if_then_else(ge(_if_then_else(le(ARG6, 2), _if_then_else(False, zeros_diff_cols, ARG6), _if_then_else(True, 4, 3)), _if_then_else(ge(zeros_diff_cols, ARG7), _if_then_else(False, ARG7, 3), _if_then_else(False, ARG6, ARG6))), _if_then_else(or_(le(3, compare_blocks_rows), or_(True, True)), _if_then_else(and_(True, True), _if_then_else(True, 4, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, 4)), _if_then_else(and_(True, True), _if_then_else(False, 4, 4), _if_then_else(False, zeros_diff_cols, 2))), _if_then_else(ge(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, compare_blocks_cols, 0)), _if_then_else(le(zeros_diff_cols, 4), _if_then_else(True, ones_diff_cols, 0), _if_then_else(False, ones_diff_cols, ones_diff_rows)), _if_then_else(ge(ones_diff_cols, 4), _if_then_else(True, 3, 2), _if_then_else(False, 1, ones_diff_cols)))))), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, zeros_diff_cols), 3), _if_then_else(True, 4, ARG6)), _if_then_else(and_(True, True), _if_then_else(True, compare_blocks_rows, zeros_diff_rows), _if_then_else(True, ARG7, 1)))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_rows), add(mul(zeros_diff_cols, ones_diff_rows), compare_blocks_cols)), add(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)))
add(add(ones_diff_rows, add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, compare_blocks_cols))), mul(mul(mul(ones_diff_cols, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows))))
mul(mul(mul(add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_cols, add(ones_diff_rows, zeros_diff_cols)), add(ones_diff_rows, ones_diff_rows))), mul(mul(add(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_cols, ones_diff_cols)))), add(mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_rows))), mul(add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols)))))
add(mul(mul(add(ones_diff_rows, ones_diff_cols), compare_blocks_cols), mul(compare_blocks_rows, compare_blocks_rows)), mul(mul(compare_blocks_rows, ones_diff_rows), add(add(ones_diff_rows, mul(mul(ones_diff_rows, mul(mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, ones_diff_rows)))), ones_diff_cols)), add(compare_blocks_rows, compare_blocks_cols))))
add(mul(add(mul(mul(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, zeros_diff_cols)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_cols))), mul(mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_rows, compare_blocks_rows)), add(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_cols)))), add(add(mul(mul(ones_diff_cols, ones_diff_rows), mul(ones_diff_rows, ones_diff_rows)), mul(mul(mul(ones_diff_cols, mul(compare_blocks_cols, zeros_diff_rows)), mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_cols)), add(add(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, mul(zeros_diff_cols, ones_diff_rows))))), add(add(mul(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, zeros_diff_cols)), add(add(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)))))
mul(mul(mul(mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), mul(add(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_rows, ones_diff_rows))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(mul(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)))), mul(add(mul(mul(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)))))
COND TREES:
or_(or_(and_(False, True), le(ARG7, _if_then_else(and_(True, le(2, ARG7)), 1, 3))), or_(ge(compare_blocks_cols, zeros_diff_cols), or_(True, True)))
or_(le(_if_then_else(ge(_if_then_else(True, zeros_diff_rows, 3), _if_then_else(and_(and_(True, False), or_(True, True)), 3, 4)), _if_then_else(or_(ge(compare_blocks_cols, 3), False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 2))), _if_then_else(and_(and_(False, True), ge(4, 2)), _if_then_else(ge(ARG6, 4), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)))), and_(or_(or_(and_(True, False), le(2, ones_diff_rows)), ge(_if_then_else(False, 4, 2), _if_then_else(True, 0, 1))), ge(_if_then_else(ge(4, 0), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 3, ARG7)), _if_then_else(le(compare_blocks_rows, 1), _if_then_else(False, 4, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))))
or_(le(_if_then_else(and_(True, True), _if_then_else(True, 4, 3), _if_then_else(le(_if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, ones_diff_cols)), 4, compare_blocks_rows)), _if_then_else(True, _if_then_else(True, ARG6, ARG6), compare_blocks_cols)), or_(le(zeros_diff_rows, zeros_diff_rows), or_(False, False)))
le(_if_then_else(le(1, 2), _if_then_else(False, zeros_diff_cols, 0), _if_then_else(True, zeros_diff_rows, 1)), _if_then_else(ge(ARG7, 4), 2, _if_then_else(False, zeros_diff_cols, 4)))
or_(ge(_if_then_else(and_(True, True), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(ge(1, ARG6), _if_then_else(True, 4, ARG7), _if_then_else(True, compare_blocks_cols, zeros_diff_cols))), and_(True, ge(0, _if_then_else(False, ones_diff_cols, ones_diff_cols))))
VAL TREES:
mul(ones_diff_rows, add(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_cols)))
add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, mul(ones_diff_cols, compare_blocks_cols))))
add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), mul(add(zeros_diff_cols, compare_blocks_cols), compare_blocks_rows)))
mul(add(add(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows)), add(mul(mul(ones_diff_cols, zeros_diff_rows), ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))), add(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(add(add(zeros_diff_rows, add(compare_blocks_cols, zeros_diff_rows)), compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(add(mul(ones_diff_rows, mul(compare_blocks_cols, zeros_diff_cols)), add(ones_diff_cols, compare_blocks_cols)), add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols)))), add(add(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)), compare_blocks_rows))
add(mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, ones_diff_cols))), add(mul(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)))), add(mul(add(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows))), add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(mul(zeros_diff_cols, compare_blocks_cols), zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))))
COND TREES:
ge(_if_then_else(or_(and_(True, True), or_(True, True)), _if_then_else(and_(and_(False, False), and_(True, True)), _if_then_else(True, 3, 1), _if_then_else(or_(True, False), 2, 4)), _if_then_else(le(ARG6, 3), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, _if_then_else(True, _if_then_else(True, 3, ones_diff_cols), ARG7), compare_blocks_rows))), _if_then_else(ge(ARG7, 3), _if_then_else(False, compare_blocks_cols, _if_then_else(True, _if_then_else(True, ARG7, 3), 3)), _if_then_else(True, ARG6, ARG6)))
ge(_if_then_else(or_(or_(le(ones_diff_rows, 4), le(1, zeros_diff_rows)), le(_if_then_else(False, 0, ARG6), _if_then_else(True, ones_diff_rows, 4))), _if_then_else(and_(and_(True, False), or_(False, False)), _if_then_else(or_(False, True), _if_then_else(False, 3, ARG6), _if_then_else(True, ones_diff_cols, 2)), _if_then_else(and_(False, False), _if_then_else(True, _if_then_else(ge(_if_then_else(and_(and_(False, True), and_(True, True)), _if_then_else(le(4, ARG7), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(False, 2, 1)), _if_then_else(and_(True, False), _if_then_else(True, 0, compare_blocks_cols), _if_then_else(True, 4, zeros_diff_rows))), _if_then_else(and_(le(2, compare_blocks_rows), le(zeros_diff_rows, 2)), _if_then_else(ge(1, ones_diff_rows), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, 1, ARG7)), _if_then_else(ge(2, zeros_diff_cols), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, 3, compare_blocks_rows)))), _if_then_else(or_(and_(ge(4, zeros_diff_rows), or_(False, False)), ge(_if_then_else(False, 3, 3), _if_then_else(False, ones_diff_rows, ones_diff_cols))), _if_then_else(le(_if_then_else(True, 3, zeros_diff_cols), _if_then_else(False, 1, 4)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_cols, 0), _if_then_else(False, 1, ones_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, 3, ARG7), _if_then_else(False, 2, 4))), _if_then_else(or_(le(1, 1), ge(3, ARG6)), _if_then_else(le(0, 2), _if_then_else(True, 2, ARG6), _if_then_else(True, 0, compare_blocks_cols)), _if_then_else(or_(True, False), _if_then_else(True, compare_blocks_cols, ARG7), _if_then_else(False, 3, compare_blocks_rows)))), _if_then_else(le(_if_then_else(and_(True, True), _if_then_else(True, 3, 1), _if_then_else(False, ones_diff_rows, 0)), _if_then_else(ge(zeros_diff_rows, 1), _if_then_else(False, 0, ARG6), _if_then_else(True, compare_blocks_rows, ones_diff_rows))), _if_then_else(or_(ge(zeros_diff_rows, 3), or_(False, False)), _if_then_else(or_(False, True), _if_then_else(False, 3, 2), _if_then_else(True, 1, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(True, 4, 0), _if_then_else(False, zeros_diff_cols, ARG7))), _if_then_else(and_(ge(1, zeros_diff_cols), le(ones_diff_cols, 0)), _if_then_else(or_(True, False), _if_then_else(True, 1, 3), _if_then_else(True, zeros_diff_cols, ARG7)), _if_then_else(and_(False, False), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, ones_diff_rows, 1))))), 1), _if_then_else(False, ARG6, compare_blocks_cols))), _if_then_else(and_(le(zeros_diff_cols, compare_blocks_rows), or_(False, True)), _if_then_else(le(ones_diff_rows, 3), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(True, ARG6, zeros_diff_rows)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(True, 3, ARG6), _if_then_else(True, 4, 3)))), _if_then_else(le(_if_then_else(le(compare_blocks_rows, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 4, ARG7)), _if_then_else(and_(True, True), _if_then_else(False, 4, 0), _if_then_else(False, ones_diff_rows, 3))), _if_then_else(and_(le(ARG6, ARG6), ge(2, 2)), _if_then_else(and_(True, False), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows))), _if_then_else(or_(ge(4, 2), ge(zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, ARG6, 1), _if_then_else(False, 0, 3)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4)))))
and_(ge(_if_then_else(le(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 0, ARG6), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(le(3, 3), _if_then_else(False, 1, 4), _if_then_else(False, 0, ones_diff_cols))), ge(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, 4), _if_then_else(False, zeros_diff_rows, compare_blocks_cols)), _if_then_else(ge(_if_then_else(False, 3, zeros_diff_rows), _if_then_else(True, ARG7, compare_blocks_cols)), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(True, compare_blocks_rows, ones_diff_rows))))
or_(and_(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(or_(True, True), _if_then_else(False, ARG6, 4), _if_then_else(True, 2, 3))), and_(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), le(_if_then_else(True, 1, 2), _if_then_else(True, ARG7, compare_blocks_rows)))), or_(or_(and_(or_(True, False), ge(_if_then_else(ge(_if_then_else(le(zeros_diff_cols, 3), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(True, compare_blocks_rows, 4)), _if_then_else(le(2, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_cols), _if_then_else(True, zeros_diff_rows, 4))), _if_then_else(or_(and_(False, False), and_(False, False)), _if_then_else(or_(True, False), _if_then_else(False, 0, 0), _if_then_else(False, 1, ones_diff_rows)), _if_then_else(and_(True, False), _if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, 0, zeros_diff_cols))), _if_then_else(le(_if_then_else(False, 0, ones_diff_rows), _if_then_else(True, ones_diff_cols, ARG6)), _if_then_else(ge(zeros_diff_cols, ones_diff_cols), _if_then_else(False, 1, ones_diff_rows), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(le(1, 1), _if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 0)))), _if_then_else(and_(ge(_if_then_else(True, 3, 3), _if_then_else(True, compare_blocks_cols, 3)), le(_if_then_else(True, 3, 2), _if_then_else(True, compare_blocks_rows, ARG7))), _if_then_else(and_(ge(ARG7, ARG6), ge(ones_diff_cols, ones_diff_rows)), _if_then_else(ge(0, 1), _if_then_else(False, 2, ARG6), _if_then_else(False, ARG6, ARG6)), _if_then_else(ge(ARG7, compare_blocks_cols), _if_then_else(False, 2, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, zeros_diff_cols))), _if_then_else(and_(and_(True, True), ge(ARG7, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, 4)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, ARG6), _if_then_else(True, 4, 1)))))), le(_if_then_else(True, 4, _if_then_else(False, zeros_diff_cols, 2)), _if_then_else(False, 0, 0))), or_(ge(_if_then_else(True, ones_diff_cols, 0), _if_then_else(True, 0, 0)), and_(or_(False, False), le(ones_diff_rows, 4)))))
and_(le(_if_then_else(ge(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols, ones_diff_cols), _if_then_else(and_(False, False), 4, compare_blocks_cols)), ge(_if_then_else(and_(True, True), 1, zeros_diff_rows), _if_then_else(True, ARG6, _if_then_else(or_(True, True), 0, compare_blocks_rows))))
VAL TREES:
mul(add(add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), add(zeros_diff_cols, zeros_diff_cols)), mul(add(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_rows))), mul(add(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), mul(zeros_diff_rows, zeros_diff_cols)))), mul(add(ones_diff_cols, ones_diff_cols), mul(mul(add(compare_blocks_cols, ones_diff_cols), ones_diff_rows), ones_diff_rows)))
mul(add(add(zeros_diff_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, zeros_diff_rows), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))), add(add(mul(mul(mul(zeros_diff_rows, ones_diff_rows), mul(add(mul(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_cols)))), compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), mul(mul(ones_diff_cols, zeros_diff_cols), compare_blocks_cols))))
mul(add(mul(zeros_diff_rows, compare_blocks_rows), mul(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, add(ones_diff_rows, ones_diff_cols)))), add(add(zeros_diff_cols, compare_blocks_rows), ones_diff_cols))
add(add(mul(add(add(mul(mul(ones_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows)), zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols))), mul(mul(mul(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_rows)))), add(add(add(zeros_diff_cols, zeros_diff_rows), add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), add(mul(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)))))
add(mul(add(mul(add(ones_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)), mul(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(mul(add(add(ones_diff_cols, zeros_diff_cols), ones_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))), mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, add(ones_diff_rows, compare_blocks_cols))), zeros_diff_cols)))
COND TREES:
le(_if_then_else(le(ones_diff_rows, ARG7), _if_then_else(and_(True, le(2, ARG7)), 1, 3), _if_then_else(le(_if_then_else(False, ARG6, 2), ARG7), 3, _if_then_else(ge(0, 1), zeros_diff_rows, 3))), _if_then_else(ge(_if_then_else(False, 4, zeros_diff_rows), compare_blocks_cols), _if_then_else(and_(False, False), 1, 0), _if_then_else(False, ARG7, _if_then_else(ge(0, ones_diff_rows), 4, zeros_diff_cols))))
le(_if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, ones_diff_rows, 4), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(and_(True, False), _if_then_else(True, 2, ARG6), _if_then_else(False, compare_blocks_rows, 3)))
le(_if_then_else(ge(2, compare_blocks_cols), _if_then_else(ge(_if_then_else(False, ARG6, 1), _if_then_else(True, ones_diff_rows, compare_blocks_cols)), compare_blocks_cols, 3), _if_then_else(True, ones_diff_cols, _if_then_else(and_(True, False), 0, 4))), 3)
ge(_if_then_else(and_(or_(True, False), and_(False, False)), _if_then_else(or_(False, False), _if_then_else(True, compare_blocks_cols, 2), _if_then_else(False, ARG7, zeros_diff_cols)), _if_then_else(le(compare_blocks_rows, ARG6), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(True, 0, zeros_diff_rows))), _if_then_else(or_(le(zeros_diff_rows, 2), ge(ones_diff_rows, ARG7)), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(False, 3, zeros_diff_cols)), _if_then_else(ge(4, 0), _if_then_else(le(1, 2), ones_diff_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_rows))))
le(_if_then_else(and_(True, or_(True, False)), _if_then_else(False, 0, zeros_diff_cols), _if_then_else(True, ARG6, 4)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(True, _if_then_else(False, 2, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols)), _if_then_else(True, 0, ARG6)))
VAL TREES:
mul(mul(add(compare_blocks_rows, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_rows)), add(mul(add(add(ones_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)), mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_rows))), add(add(mul(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows)), mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_rows)))))
add(mul(add(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_rows)), compare_blocks_cols)
add(add(add(zeros_diff_rows, compare_blocks_cols), add(mul(add(zeros_diff_rows, add(mul(ones_diff_rows, zeros_diff_cols), zeros_diff_rows)), mul(mul(compare_blocks_cols, compare_blocks_rows), ones_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), mul(add(ones_diff_rows, compare_blocks_cols), add(mul(compare_blocks_cols, zeros_diff_rows), compare_blocks_cols))))), add(mul(compare_blocks_rows, compare_blocks_rows), mul(mul(ones_diff_rows, zeros_diff_cols), compare_blocks_cols)))
mul(add(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, add(add(mul(mul(ones_diff_rows, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_cols)), mul(add(ones_diff_cols, zeros_diff_rows), mul(compare_blocks_rows, ones_diff_cols))), mul(add(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols)), mul(add(ones_diff_rows, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_rows)))))), add(zeros_diff_rows, add(compare_blocks_cols, zeros_diff_rows)))
add(add(add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), add(zeros_diff_rows, compare_blocks_cols)), add(mul(ones_diff_rows, zeros_diff_cols), add(mul(ones_diff_rows, mul(compare_blocks_cols, zeros_diff_cols)), add(ones_diff_cols, compare_blocks_cols))))
mul(mul(mul(add(mul(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(add(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows))))), add(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_rows, zeros_diff_rows)))), add(mul(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), add(mul(mul(ones_diff_rows, zeros_diff_cols), zeros_diff_cols), mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_rows, ones_diff_rows))))
COND TREES:
le(_if_then_else(le(ones_diff_rows, ARG7), _if_then_else(and_(True, le(2, ARG7)), 1, 3), _if_then_else(le(_if_then_else(False, ARG6, 2), ARG7), 3, _if_then_else(ge(0, 1), zeros_diff_rows, 3))), _if_then_else(ge(_if_then_else(False, 4, zeros_diff_rows), compare_blocks_cols), _if_then_else(and_(False, False), 1, 0), _if_then_else(False, ARG7, _if_then_else(ge(0, ones_diff_rows), 4, zeros_diff_cols))))
le(_if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, ones_diff_rows, 3), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(and_(True, False), _if_then_else(True, 2, ARG6), _if_then_else(False, compare_blocks_rows, 3)))
le(_if_then_else(ge(2, compare_blocks_cols), _if_then_else(ge(_if_then_else(False, ARG6, 1), _if_then_else(True, ones_diff_rows, compare_blocks_cols)), compare_blocks_cols, 3), _if_then_else(True, ones_diff_cols, _if_then_else(and_(True, False), 0, 4))), 3)
ge(_if_then_else(and_(or_(True, False), and_(False, False)), _if_then_else(or_(False, False), _if_then_else(True, compare_blocks_cols, 2), _if_then_else(False, ARG7, zeros_diff_cols)), _if_then_else(le(compare_blocks_rows, ARG6), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(True, 0, zeros_diff_rows))), _if_then_else(or_(le(zeros_diff_rows, 2), ge(ones_diff_rows, ARG7)), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(False, 3, zeros_diff_cols)), _if_then_else(ge(4, 0), _if_then_else(le(1, 2), ones_diff_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_rows))))
le(_if_then_else(and_(True, or_(True, False)), _if_then_else(False, 0, zeros_diff_cols), _if_then_else(True, ARG6, 4)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(True, _if_then_else(False, 2, zeros_diff_cols), _if_then_else(ge(compare_blocks_cols, zeros_diff_cols), zeros_diff_cols, compare_blocks_cols)), _if_then_else(True, 0, ARG6)))
VAL TREES:
mul(add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), add(zeros_diff_cols, zeros_diff_cols)), mul(add(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_rows))), mul(add(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), mul(zeros_diff_rows, zeros_diff_cols))), add(mul(add(add(ones_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)), mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_rows))), add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows)), mul(mul(compare_blocks_rows, compare_blocks_rows), ones_diff_cols))))
add(mul(add(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_rows)), compare_blocks_cols)
add(add(add(zeros_diff_rows, compare_blocks_cols), add(mul(add(zeros_diff_rows, add(mul(ones_diff_rows, zeros_diff_cols), zeros_diff_rows)), mul(mul(compare_blocks_cols, compare_blocks_rows), ones_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), mul(add(zeros_diff_cols, compare_blocks_cols), add(mul(compare_blocks_cols, zeros_diff_rows), compare_blocks_cols))))), add(mul(compare_blocks_rows, compare_blocks_rows), mul(mul(ones_diff_rows, zeros_diff_cols), compare_blocks_cols)))
mul(add(mul(ones_diff_cols, ones_diff_rows), add(compare_blocks_cols, add(add(mul(mul(ones_diff_rows, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_cols)), mul(add(ones_diff_cols, zeros_diff_rows), mul(compare_blocks_rows, ones_diff_cols))), mul(add(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols)), mul(add(ones_diff_rows, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_rows)))))), mul(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, add(ones_diff_rows, ones_diff_cols))))
add(add(add(mul(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), add(zeros_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, mul(mul(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_cols)), add(compare_blocks_rows, zeros_diff_rows)), mul(add(add(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_cols, ones_diff_cols)), add(compare_blocks_cols, compare_blocks_rows)))), add(zeros_diff_cols, zeros_diff_rows)))
mul(mul(mul(add(mul(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_cols, ones_diff_rows), add(compare_blocks_rows, compare_blocks_rows))), add(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_rows, zeros_diff_rows)))), add(mul(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), add(mul(mul(ones_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_rows, ones_diff_rows))))
COND TREES:
ge(_if_then_else(le(_if_then_else(le(ones_diff_cols, 2), ones_diff_cols, _if_then_else(True, ones_diff_cols, 4)), _if_then_else(True, 0, _if_then_else(True, compare_blocks_rows, ARG6))), _if_then_else(ge(compare_blocks_cols, 2), _if_then_else(and_(False, False), ARG7, ARG6), 0), _if_then_else(False, _if_then_else(False, zeros_diff_cols, 1), zeros_diff_rows)), _if_then_else(ge(ARG7, 3), _if_then_else(False, compare_blocks_cols, _if_then_else(True, _if_then_else(True, ARG7, 3), 3)), _if_then_else(True, ARG6, ARG6)))
ge(_if_then_else(or_(or_(le(ones_diff_rows, 4), le(1, zeros_diff_rows)), le(_if_then_else(False, 0, ARG6), _if_then_else(True, ones_diff_rows, 4))), _if_then_else(and_(and_(True, False), or_(False, False)), _if_then_else(or_(False, True), _if_then_else(False, 4, ARG6), _if_then_else(True, ones_diff_cols, 2)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(False, ARG6, compare_blocks_cols))), _if_then_else(and_(le(zeros_diff_cols, compare_blocks_rows), or_(False, True)), _if_then_else(le(ones_diff_rows, 3), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(True, ARG6, zeros_diff_rows)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(True, 3, ARG6), _if_then_else(True, 4, 3)))), _if_then_else(le(_if_then_else(le(compare_blocks_rows, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 4, ARG7)), _if_then_else(and_(True, True), _if_then_else(False, 4, 0), _if_then_else(False, ones_diff_rows, 3))), _if_then_else(and_(le(ARG6, ARG6), ge(2, 2)), _if_then_else(and_(True, False), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows))), _if_then_else(or_(ge(4, 2), ge(zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, ARG6, 1), _if_then_else(False, 0, 3)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4)))))
and_(ge(_if_then_else(le(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 0, ARG6), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(le(3, 3), _if_then_else(False, 1, 4), _if_then_else(False, 0, ones_diff_cols))), ge(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, 4), _if_then_else(False, zeros_diff_rows, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(True, compare_blocks_rows, ones_diff_rows))))
or_(and_(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(or_(True, True), _if_then_else(False, ARG6, 4), _if_then_else(True, 2, 3))), and_(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), le(_if_then_else(True, 1, 2), _if_then_else(True, ARG7, compare_blocks_rows)))), or_(or_(and_(or_(True, False), ge(4, zeros_diff_rows)), le(_if_then_else(True, 4, ARG7), _if_then_else(False, 0, 0))), or_(ge(_if_then_else(True, ones_diff_cols, 0), _if_then_else(True, 0, 0)), and_(or_(False, False), le(ones_diff_rows, 4)))))
and_(le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(and_(False, False), 4, compare_blocks_cols)), ge(_if_then_else(and_(True, True), 1, zeros_diff_rows), _if_then_else(False, ARG6, _if_then_else(True, 0, compare_blocks_rows))))
VAL TREES:
mul(add(ones_diff_rows, compare_blocks_cols), mul(add(ones_diff_cols, mul(ones_diff_rows, compare_blocks_rows)), mul(ones_diff_rows, zeros_diff_rows)))
mul(mul(zeros_diff_cols, mul(compare_blocks_cols, zeros_diff_rows)), mul(zeros_diff_rows, ones_diff_rows))
mul(zeros_diff_cols, add(add(mul(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_cols)), add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, add(ones_diff_rows, zeros_diff_rows)))))
mul(ones_diff_cols, add(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, zeros_diff_rows)))
add(add(mul(add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols))), mul(mul(mul(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), mul(ones_diff_rows, zeros_diff_rows))), add(add(add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), add(mul(mul(compare_blocks_cols, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols)), mul(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)))))
add(mul(add(mul(compare_blocks_rows, add(add(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows)), mul(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(mul(add(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), mul(mul(add(zeros_diff_cols, add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_rows)))))
COND TREES:
ge(_if_then_else(le(_if_then_else(le(ones_diff_cols, 2), ones_diff_cols, _if_then_else(True, 4, compare_blocks_rows)), _if_then_else(False, 0, _if_then_else(le(_if_then_else(le(ones_diff_cols, 2), ones_diff_cols, _if_then_else(True, ones_diff_cols, 4)), _if_then_else(True, 0, _if_then_else(True, compare_blocks_rows, ARG6))), compare_blocks_rows, ARG6))), _if_then_else(ge(compare_blocks_cols, 2), _if_then_else(and_(False, False), ARG7, ARG6), 0), _if_then_else(False, _if_then_else(False, zeros_diff_cols, 1), zeros_diff_rows)), _if_then_else(ge(ARG7, 3), _if_then_else(False, compare_blocks_cols, _if_then_else(True, _if_then_else(True, ARG7, 3), 3)), _if_then_else(True, ARG6, ARG6)))
ge(_if_then_else(or_(or_(le(ones_diff_rows, 4), le(1, zeros_diff_rows)), le(_if_then_else(False, 0, ARG6), _if_then_else(True, ones_diff_rows, 4))), _if_then_else(and_(and_(True, False), or_(False, False)), _if_then_else(or_(False, True), _if_then_else(False, 3, ARG6), _if_then_else(True, ones_diff_cols, 2)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(False, ARG6, compare_blocks_cols))), _if_then_else(and_(le(zeros_diff_cols, compare_blocks_rows), or_(False, True)), _if_then_else(le(ones_diff_rows, 3), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(True, ARG6, zeros_diff_rows)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(True, 3, ARG6), _if_then_else(True, 4, 3)))), _if_then_else(le(_if_then_else(le(compare_blocks_rows, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 4, ARG7)), _if_then_else(and_(True, True), _if_then_else(False, 4, 0), _if_then_else(False, ones_diff_rows, 3))), _if_then_else(False, _if_then_else(and_(True, False), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows))), _if_then_else(or_(ge(4, 2), ge(zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(False, ARG6, 1), _if_then_else(False, 0, 3)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4)))))
and_(ge(_if_then_else(le(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 0, ARG6), ARG7), _if_then_else(le(3, 3), _if_then_else(False, 1, 4), _if_then_else(False, 0, ones_diff_cols))), ge(_if_then_else(or_(False, False), _if_then_else(True, ones_diff_cols, 4), _if_then_else(False, zeros_diff_rows, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(True, compare_blocks_rows, ones_diff_rows))))
or_(and_(le(compare_blocks_rows, _if_then_else(or_(True, True), _if_then_else(False, ARG6, 4), _if_then_else(True, 2, 3))), and_(ge(compare_blocks_cols, _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), le(_if_then_else(True, 1, 2), _if_then_else(True, ARG7, compare_blocks_rows)))), or_(or_(and_(or_(True, False), ge(4, zeros_diff_rows)), le(_if_then_else(True, 4, ARG7), _if_then_else(False, 0, 0))), or_(ge(_if_then_else(True, ones_diff_cols, 0), _if_then_else(True, 0, 0)), and_(or_(False, False), and_(False, True)))))
and_(le(_if_then_else(ge(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols, ones_diff_cols), _if_then_else(and_(True, False), 4, compare_blocks_cols)), ge(_if_then_else(and_(True, True), _if_then_else(or_(True, True), 0, compare_blocks_rows), zeros_diff_rows), _if_then_else(False, ARG6, _if_then_else(True, 0, compare_blocks_rows))))
VAL TREES:
mul(zeros_diff_cols, mul(add(ones_diff_cols, mul(ones_diff_rows, mul(compare_blocks_cols, ones_diff_rows))), mul(ones_diff_rows, zeros_diff_rows)))
mul(mul(zeros_diff_cols, mul(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, add(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_cols, mul(ones_diff_cols, zeros_diff_cols)))), add(zeros_diff_rows, zeros_diff_rows)))
mul(compare_blocks_cols, add(add(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, zeros_diff_cols)), add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, add(ones_diff_rows, zeros_diff_rows)))))
mul(add(mul(ones_diff_cols, ones_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, zeros_diff_rows)))
add(add(mul(add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols))), mul(mul(mul(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, mul(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))), mul(ones_diff_rows, zeros_diff_rows))), add(add(add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, compare_blocks_cols)), add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), add(mul(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)))))
add(mul(add(mul(compare_blocks_rows, add(add(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows)), mul(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(mul(add(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_rows)))))
COND TREES:
ge(_if_then_else(True, _if_then_else(ge(compare_blocks_cols, 2), zeros_diff_rows, 0), _if_then_else(False, _if_then_else(False, zeros_diff_cols, 1), zeros_diff_rows)), _if_then_else(ge(ARG7, 3), _if_then_else(False, compare_blocks_cols, _if_then_else(True, _if_then_else(True, ARG7, 3), 3)), _if_then_else(True, ARG6, ARG6)))
ge(_if_then_else(or_(or_(le(ones_diff_rows, 4), le(1, zeros_diff_rows)), le(_if_then_else(False, 0, ARG6), _if_then_else(True, ones_diff_rows, 4))), _if_then_else(and_(and_(True, False), or_(False, False)), _if_then_else(or_(False, True), _if_then_else(False, 3, ARG6), _if_then_else(True, ones_diff_cols, 2)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(False, ARG6, compare_blocks_cols))), _if_then_else(and_(le(zeros_diff_cols, compare_blocks_rows), or_(False, True)), _if_then_else(le(ones_diff_rows, 3), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(True, ARG6, zeros_diff_rows)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(True, 3, ARG6), _if_then_else(True, 4, 3)))), _if_then_else(le(_if_then_else(le(compare_blocks_rows, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 4, ARG7)), _if_then_else(and_(True, True), _if_then_else(False, 4, 0), _if_then_else(False, ones_diff_rows, 3))), _if_then_else(and_(le(ARG6, ARG6), ge(ones_diff_rows, 2)), _if_then_else(and_(True, False), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows))), _if_then_else(or_(ge(4, 2), ge(zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, ARG6, 1), _if_then_else(False, 0, 3)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4)))))
and_(ge(_if_then_else(le(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 0, ARG6), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(le(3, 3), _if_then_else(False, 1, 4), _if_then_else(False, 0, ones_diff_cols))), ge(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, 4), _if_then_else(False, zeros_diff_rows, compare_blocks_cols)), _if_then_else(ge(_if_then_else(False, 3, zeros_diff_rows), _if_then_else(and_(ge(_if_then_else(True, 3, ones_diff_rows), _if_then_else(True, compare_blocks_rows, 0)), le(_if_then_else(True, compare_blocks_rows, _if_then_else(False, ones_diff_cols, 2)), _if_then_else(False, 3, ones_diff_rows))), zeros_diff_cols, 1)), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(True, compare_blocks_rows, ones_diff_rows))))
or_(and_(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(or_(True, True), _if_then_else(False, ARG6, 4), _if_then_else(True, 2, 3))), and_(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), le(_if_then_else(True, 1, 2), _if_then_else(True, ARG7, _if_then_else(le(compare_blocks_cols, 1), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)))))), or_(or_(and_(or_(True, False), ge(4, zeros_diff_rows)), le(_if_then_else(True, 4, _if_then_else(False, zeros_diff_cols, 2)), _if_then_else(False, 0, 0))), or_(ge(_if_then_else(True, ones_diff_cols, 0), _if_then_else(True, 0, 0)), and_(or_(False, False), le(ones_diff_rows, 4)))))
and_(le(_if_then_else(ge(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols, ones_diff_cols), _if_then_else(and_(False, False), 4, compare_blocks_cols)), ge(_if_then_else(and_(True, True), 1, zeros_diff_rows), _if_then_else(False, ARG6, 1)))
VAL TREES:
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(mul(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)), ones_diff_rows)))
mul(mul(mul(zeros_diff_cols, ones_diff_cols), compare_blocks_rows), add(add(ones_diff_rows, zeros_diff_rows), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(add(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))), add(add(mul(mul(mul(zeros_diff_rows, ones_diff_rows), mul(add(mul(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_cols)))), compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols))))
mul(add(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows)), add(add(zeros_diff_cols, compare_blocks_rows), ones_diff_cols))
add(add(mul(add(add(mul(mul(ones_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows)), zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols))), mul(mul(mul(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_rows)))), add(add(add(mul(ones_diff_rows, mul(compare_blocks_cols, zeros_diff_cols)), add(ones_diff_cols, compare_blocks_cols)), add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), add(mul(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)))))
add(mul(add(mul(add(ones_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)), mul(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(mul(add(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))), mul(mul(compare_blocks_cols, zeros_diff_cols), zeros_diff_cols)))
COND TREES:
or_(or_(and_(False, True), le(0, 1)), True)
or_(le(_if_then_else(ge(_if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 3, 4)), _if_then_else(or_(and_(False, False), False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, ones_diff_rows, 2))), _if_then_else(and_(and_(False, True), ge(4, 2)), _if_then_else(ge(ARG6, 4), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)))), and_(or_(or_(and_(True, False), le(2, ones_diff_rows)), ge(_if_then_else(False, 4, 2), _if_then_else(True, 0, 1))), ge(_if_then_else(ge(4, 0), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 3, ARG7)), _if_then_else(le(compare_blocks_rows, 1), _if_then_else(False, 4, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))))
or_(le(_if_then_else(and_(ge(4, 3), True), _if_then_else(True, 4, _if_then_else(False, ones_diff_cols, 2)), _if_then_else(False, 4, compare_blocks_rows)), _if_then_else(True, _if_then_else(True, ARG6, ARG6), compare_blocks_cols)), or_(or_(or_(True, True), and_(False, False)), or_(False, False)))
le(_if_then_else(le(1, 2), _if_then_else(True, zeros_diff_cols, 0), _if_then_else(True, zeros_diff_rows, 1)), _if_then_else(False, compare_blocks_cols, 4))
or_(ge(_if_then_else(and_(True, False), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(ge(1, _if_then_else(and_(False, False), 4, compare_blocks_cols)), _if_then_else(True, 4, ARG7), _if_then_else(True, compare_blocks_cols, zeros_diff_cols))), and_(or_(or_(False, True), or_(True, False)), ge(_if_then_else(False, ARG7, zeros_diff_rows), _if_then_else(False, ones_diff_cols, ones_diff_cols))))
VAL TREES:
mul(mul(add(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_cols)))
add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, add(mul(add(mul(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_cols)), add(add(compare_blocks_rows, compare_blocks_cols), mul(ones_diff_rows, ones_diff_rows))), mul(add(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(zeros_diff_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols))))), mul(zeros_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), add(add(add(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))))))
mul(add(add(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows)), add(mul(mul(compare_blocks_cols, zeros_diff_rows), ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))), add(mul(add(zeros_diff_rows, add(add(compare_blocks_rows, mul(compare_blocks_rows, ones_diff_rows)), mul(compare_blocks_rows, zeros_diff_rows))), add(ones_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(mul(mul(ones_diff_rows, zeros_diff_rows), mul(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), add(add(mul(add(add(zeros_diff_cols, ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows))), add(compare_blocks_rows, ones_diff_cols)), compare_blocks_rows))
add(mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, ones_diff_cols))), add(mul(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols)), compare_blocks_rows)), add(mul(add(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows))), add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))))
COND TREES:
or_(or_(and_(False, or_(ge(compare_blocks_cols, 4), or_(True, False))), le(0, 1)), or_(ge(_if_then_else(or_(and_(True, True), or_(True, True)), _if_then_else(le(ARG6, compare_blocks_rows), _if_then_else(False, ones_diff_rows, 3), _if_then_else(False, ARG7, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(True, 1, 2))), zeros_diff_cols), or_(True, True)))
or_(le(_if_then_else(ge(_if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 3, 4)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(False, _if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 2))), _if_then_else(and_(and_(False, True), ge(4, 2)), _if_then_else(ge(ARG6, 4), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)))), and_(or_(or_(and_(True, False), le(2, ones_diff_rows)), or_(or_(le(ones_diff_rows, 2), ge(2, ones_diff_cols)), and_(or_(ge(_if_then_else(False, zeros_diff_cols, ARG7), ARG6), True), and_(True, True)))), ge(_if_then_else(ge(4, 0), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 3, ARG7)), _if_then_else(le(compare_blocks_rows, 1), _if_then_else(False, 4, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))))
or_(le(_if_then_else(and_(True, True), _if_then_else(True, 4, 3), _if_then_else(le(_if_then_else(True, compare_blocks_rows, _if_then_else(le(_if_then_else(or_(and_(True, False), True), _if_then_else(and_(False, True), _if_then_else(True, 4, ARG7), _if_then_else(True, zeros_diff_cols, ARG6)), _if_then_else(or_(True, False), _if_then_else(False, 4, 1), _if_then_else(False, compare_blocks_cols, 1))), _if_then_else(ge(_if_then_else(False, 2, _if_then_else(or_(ge(compare_blocks_cols, ones_diff_cols), le(zeros_diff_rows, ones_diff_rows)), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(le(0, 4), 0, 0))), _if_then_else(False, ones_diff_cols, ARG7)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(False, ARG6, compare_blocks_cols)), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_rows, ARG6), _if_then_else(False, 4, zeros_diff_cols)))), _if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, 4, ones_diff_cols), _if_then_else(True, 2, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, ARG7, 4), _if_then_else(False, ARG6, 1))), _if_then_else(ge(_if_then_else(True, 4, compare_blocks_cols), _if_then_else(True, ARG7, ARG7)), _if_then_else(and_(False, True), _if_then_else(True, 0, 1), _if_then_else(True, ARG6, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, 2), _if_then_else(True, ARG7, ARG7), _if_then_else(False, ones_diff_cols, 1))), _if_then_else(ge(_if_then_else(False, ARG7, 4), _if_then_else(True, 4, ones_diff_cols)), _if_then_else(ge(4, 4), _if_then_else(True, ARG6, 0), _if_then_else(False, compare_blocks_cols, compare_blocks_rows)), _if_then_else(le(ones_diff_cols, ones_diff_rows), _if_then_else(False, 0, ones_diff_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)))), _if_then_else(or_(le(_if_then_else(False, compare_blocks_rows, ARG6), _if_then_else(True, ARG6, 1)), ge(_if_then_else(False, ARG7, 0), _if_then_else(True, ARG7, 4))), _if_then_else(le(_if_then_else(True, zeros_diff_cols, 0), _if_then_else(False, ARG6, zeros_diff_rows)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, 2, 0)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 1))), _if_then_else(or_(or_(False, True), ge(0, ones_diff_cols)), _if_then_else(le(1, 0), _if_then_else(True, ARG6, 4), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_cols, ones_diff_rows), _if_then_else(True, ones_diff_rows, ARG7)))))), _if_then_else(False, 4, ones_diff_cols)), 4, compare_blocks_rows)), _if_then_else(True, _if_then_else(True, ARG6, ARG6), compare_blocks_cols)), or_(or_(or_(True, True), and_(False, False)), or_(False, False)))
le(_if_then_else(le(1, 2), _if_then_else(True, zeros_diff_cols, 0), _if_then_else(True, zeros_diff_rows, 1)), _if_then_else(ge(ARG7, 4), _if_then_else(False, 4, ARG6), _if_then_else(False, zeros_diff_cols, 4)))
or_(ge(_if_then_else(and_(True, True), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(ge(1, ARG6), _if_then_else(True, 4, ARG7), _if_then_else(True, compare_blocks_cols, zeros_diff_cols))), and_(or_(or_(False, True), or_(True, False)), ge(_if_then_else(and_(True, and_(True, True)), _if_then_else(le(2, 0), zeros_diff_cols, 1), _if_then_else(False, zeros_diff_rows, _if_then_else(True, 1, ARG7))), _if_then_else(le(_if_then_else(ge(_if_then_else(False, 0, compare_blocks_cols), _if_then_else(False, 1, 0)), _if_then_else(le(ARG7, ones_diff_rows), _if_then_else(True, ones_diff_rows, ARG6), _if_then_else(True, zeros_diff_rows, 4)), _if_then_else(ge(compare_blocks_cols, zeros_diff_cols), _if_then_else(False, 2, 2), _if_then_else(True, ones_diff_cols, ones_diff_rows))), _if_then_else(ge(_if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(True, 3, ARG7)), _if_then_else(or_(False, False), _if_then_else(False, 3, compare_blocks_cols), _if_then_else(True, ones_diff_cols, ARG6)), _if_then_else(ge(3, zeros_diff_cols), _if_then_else(True, ones_diff_rows, 4), _if_then_else(False, zeros_diff_rows, 0)))), _if_then_else(or_(ge(_if_then_else(False, compare_blocks_cols, 2), _if_then_else(True, 3, ones_diff_rows)), and_(ge(compare_blocks_rows, 2), le(4, compare_blocks_rows))), _if_then_else(ge(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(True, ARG6, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(False, zeros_diff_rows, 3)), _if_then_else(ge(0, ARG7), _if_then_else(False, 4, ARG7), _if_then_else(True, ones_diff_rows, compare_blocks_rows))), _if_then_else(le(_if_then_else(False, 4, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(or_(True, True), _if_then_else(False, ARG7, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, 3)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(False, 4, ones_diff_rows)))), _if_then_else(and_(and_(True, and_(False, False)), le(_if_then_else(True, 3, zeros_diff_rows), _if_then_else(False, ones_diff_cols, ARG6))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, ARG7), _if_then_else(True, zeros_diff_cols, zeros_diff_cols)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(False, 3, ones_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, 4, ARG6), _if_then_else(False, 2, 0))), _if_then_else(or_(and_(False, False), le(4, ARG6)), _if_then_else(or_(False, False), _if_then_else(False, 3, ARG7), _if_then_else(True, 1, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, 4, 3), _if_then_else(True, zeros_diff_cols, ARG7))))))))
VAL TREES:
mul(mul(add(ones_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_cols)))
add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), mul(add(ones_diff_rows, zeros_diff_rows), compare_blocks_rows)))
mul(add(add(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows)), add(mul(mul(compare_blocks_cols, zeros_diff_rows), ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))), add(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), add(add(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)), compare_blocks_rows))
add(mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, ones_diff_cols))), add(mul(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)))), add(mul(add(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows))), add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))))
COND TREES:
and_(le(_if_then_else(True, 0, ARG7), _if_then_else(True, _if_then_else(True, ARG7, 3), 3)), le(_if_then_else(or_(or_(True, True), True), _if_then_else(le(1, ones_diff_rows), ones_diff_cols, _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), 0), _if_then_else(False, zeros_diff_rows, 0)))
or_(ge(_if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, ones_diff_cols), _if_then_else(True, ones_diff_rows, 2)), _if_then_else(le(ARG7, 4), _if_then_else(False, ones_diff_rows, compare_blocks_cols), _if_then_else(True, 0, ones_diff_rows))), ge(_if_then_else(ge(ones_diff_cols, 2), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(True, 0, ones_diff_cols)), _if_then_else(le(zeros_diff_cols, 4), _if_then_else(False, ARG7, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))))
ge(_if_then_else(le(compare_blocks_cols, _if_then_else(False, _if_then_else(and_(True, True), _if_then_else(True, 4, 3), _if_then_else(False, 4, 1)), 3)), _if_then_else(or_(False, False), ones_diff_cols, 2), _if_then_else(True, _if_then_else(False, ARG6, ARG7), compare_blocks_rows)), _if_then_else(le(ARG6, _if_then_else(False, ARG7, ARG7)), _if_then_else(True, 3, 3), _if_then_else(ge(1, 1), 1, _if_then_else(False, 3, 4))))
or_(le(_if_then_else(True, zeros_diff_rows, 3), _if_then_else(or_(False, True), _if_then_else(False, ARG6, 4), zeros_diff_rows)), ge(3, _if_then_else(False, compare_blocks_rows, ones_diff_cols)))
le(_if_then_else(ge(_if_then_else(False, compare_blocks_cols, ARG7), _if_then_else(True, zeros_diff_rows, 1)), _if_then_else(ge(ARG6, 2), _if_then_else(True, 0, compare_blocks_rows), _if_then_else(ge(1, ARG6), 1, _if_then_else(True, _if_then_else(and_(True, True), 1, zeros_diff_rows), zeros_diff_cols))), _if_then_else(ge(compare_blocks_cols, 2), _if_then_else(False, ones_diff_cols, ARG6), _if_then_else(False, ARG7, zeros_diff_cols))), zeros_diff_cols)
VAL TREES:
add(add(mul(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_rows, add(mul(mul(mul(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, compare_blocks_rows))), add(add(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(ones_diff_cols, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)))), add(add(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)), add(add(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, ones_diff_cols))), mul(add(mul(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, ones_diff_rows), zeros_diff_rows)))))), add(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, add(zeros_diff_cols, ones_diff_rows))))
add(add(add(add(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_cols))), mul(mul(add(zeros_diff_rows, zeros_diff_rows), add(add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols)), compare_blocks_rows)), add(add(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_rows))))
add(add(add(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_rows, mul(ones_diff_rows, zeros_diff_cols))), mul(add(mul(mul(add(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_cols, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_cols, ones_diff_cols))), add(mul(mul(zeros_diff_rows, ones_diff_cols), zeros_diff_rows), add(add(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_rows)))), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_rows)))
mul(mul(add(add(compare_blocks_rows, zeros_diff_cols), zeros_diff_cols), mul(compare_blocks_cols, zeros_diff_cols)), compare_blocks_rows)
add(add(mul(zeros_diff_cols, mul(add(mul(mul(mul(compare_blocks_cols, compare_blocks_cols), compare_blocks_rows), compare_blocks_rows), add(zeros_diff_cols, zeros_diff_cols)), add(add(ones_diff_cols, mul(add(compare_blocks_cols, ones_diff_rows), zeros_diff_cols)), mul(zeros_diff_rows, ones_diff_rows)))), mul(compare_blocks_cols, ones_diff_cols)), add(add(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, ones_diff_rows)))
mul(add(add(ones_diff_cols, zeros_diff_rows), mul(add(ones_diff_cols, compare_blocks_rows), mul(add(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)))), mul(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_rows, ones_diff_cols)))
COND TREES:
or_(or_(and_(False, True), le(_if_then_else(True, ARG6, zeros_diff_cols), 1)), or_(ge(ones_diff_cols, 4), True))
or_(le(_if_then_else(ge(_if_then_else(le(compare_blocks_rows, 2), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, 4)), _if_then_else(True, _if_then_else(and_(False, True), _if_then_else(False, ARG7, ARG6), 1), 4)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 2))), _if_then_else(and_(and_(False, True), ge(4, 2)), _if_then_else(ge(ARG6, 4), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)))), and_(or_(or_(and_(True, False), le(2, ones_diff_rows)), ge(_if_then_else(False, 4, 2), _if_then_else(True, 0, 1))), ge(_if_then_else(ge(4, 0), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 3, ARG7)), _if_then_else(le(compare_blocks_rows, 1), _if_then_else(False, 4, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))))
or_(le(zeros_diff_rows, _if_then_else(True, _if_then_else(True, ARG6, _if_then_else(True, 4, 3)), compare_blocks_cols)), ge(ones_diff_rows, 2))
le(_if_then_else(le(1, 2), _if_then_else(True, zeros_diff_cols, 0), _if_then_else(True, zeros_diff_rows, 1)), _if_then_else(True, _if_then_else(le(_if_then_else(False, ones_diff_cols, compare_blocks_cols), _if_then_else(False, _if_then_else(True, ones_diff_rows, 3), 4)), 4, ARG6), _if_then_else(False, zeros_diff_cols, 4)))
or_(ge(_if_then_else(and_(True, True), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(True, compare_blocks_rows, zeros_diff_rows)), and_(or_(or_(False, True), or_(True, False)), ge(_if_then_else(True, ARG7, ARG6), _if_then_else(False, ones_diff_cols, ones_diff_cols))))
VAL TREES:
mul(add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, zeros_diff_rows)), add(add(zeros_diff_cols, add(ones_diff_rows, compare_blocks_cols)), mul(ones_diff_cols, compare_blocks_cols)))
add(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows)))
mul(add(add(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows)), add(mul(zeros_diff_cols, ones_diff_cols), mul(add(zeros_diff_rows, zeros_diff_rows), compare_blocks_cols))), add(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(compare_blocks_cols, mul(zeros_diff_cols, compare_blocks_rows))))
mul(ones_diff_rows, add(add(mul(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(mul(ones_diff_cols, ones_diff_rows), add(compare_blocks_cols, ones_diff_cols))))
add(mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, ones_diff_cols))), add(mul(mul(compare_blocks_cols, add(ones_diff_rows, compare_blocks_rows)), add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)))), add(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows))), add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))))
COND TREES:
ge(_if_then_else(or_(or_(and_(True, True), or_(False, True)), le(_if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, ARG6))), _if_then_else(ge(_if_then_else(False, ARG7, compare_blocks_rows), _if_then_else(True, ARG6, ones_diff_cols)), _if_then_else(le(3, zeros_diff_rows), _if_then_else(True, ARG6, 0), compare_blocks_cols), _if_then_else(ge(4, ARG6), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, zeros_diff_cols, ARG6))), _if_then_else(or_(ge(zeros_diff_cols, ones_diff_cols), le(compare_blocks_cols, 1)), _if_then_else(ge(compare_blocks_rows, ones_diff_rows), 2, _if_then_else(True, compare_blocks_cols, ones_diff_cols)), _if_then_else(ge(4, ones_diff_cols), _if_then_else(False, ARG7, 2), _if_then_else(False, compare_blocks_cols, ARG7)))), _if_then_else(or_(and_(le(3, compare_blocks_rows), ge(3, compare_blocks_cols)), ge(_if_then_else(False, 0, ARG7), _if_then_else(False, 2, ARG6))), _if_then_else(le(_if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, 3)), _if_then_else(or_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, 4)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(False, 0, 4))), _if_then_else(and_(True, ge(zeros_diff_cols, 1)), _if_then_else(or_(True, False), _if_then_else(False, ARG6, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(compare_blocks_cols, ones_diff_cols), _if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, 2)))))
and_(and_(and_(or_(True, True), ge(zeros_diff_rows, 1)), ge(_if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, ARG7))), or_(ge(_if_then_else(True, 1, ARG7), _if_then_else(False, ones_diff_rows, 4)), and_(True, True)))
ge(_if_then_else(le(_if_then_else(True, _if_then_else(or_(ge(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(le(ones_diff_cols, 4), 0, 0)), compare_blocks_cols), _if_then_else(False, 4, ones_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, ARG6, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(False, ARG7, ARG6))), _if_then_else(and_(and_(False, True), or_(True, False)), _if_then_else(le(3, 2), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(True, 2, 0)), _if_then_else(ge(ARG6, 2), _if_then_else(True, ARG6, ARG6), 2)))
le(_if_then_else(and_(False, True), _if_then_else(False, ARG7, ones_diff_rows), _if_then_else(True, 1, 2)), _if_then_else(le(1, 2), _if_then_else(False, compare_blocks_cols, 2), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)))
le(_if_then_else(and_(True, and_(True, True)), _if_then_else(le(2, 0), zeros_diff_cols, 1), _if_then_else(False, _if_then_else(or_(False, False), _if_then_else(False, 2, 2), _if_then_else(False, 4, ARG6)), _if_then_else(True, 1, ARG7))), _if_then_else(and_(True, True), _if_then_else(False, _if_then_else(True, 4, 0), 2), _if_then_else(False, zeros_diff_rows, ARG6)))
VAL TREES:
mul(add(mul(ones_diff_rows, zeros_diff_cols), add(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_rows)), add(add(add(mul(zeros_diff_rows, add(ones_diff_rows, compare_blocks_cols)), mul(add(ones_diff_cols, ones_diff_rows), zeros_diff_cols)), add(add(ones_diff_rows, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(ones_diff_rows, zeros_diff_rows)))
add(add(mul(add(zeros_diff_rows, ones_diff_rows), mul(compare_blocks_rows, compare_blocks_cols)), mul(mul(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_rows, zeros_diff_rows))), add(mul(add(zeros_diff_cols, mul(zeros_diff_cols, mul(add(ones_diff_rows, zeros_diff_cols), zeros_diff_rows))), mul(compare_blocks_rows, compare_blocks_rows)), add(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_rows))))
mul(add(add(ones_diff_cols, add(mul(mul(add(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_rows)), ones_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), add(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, zeros_diff_rows)))), add(ones_diff_cols, compare_blocks_cols)), add(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), mul(mul(add(add(add(mul(add(zeros_diff_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_cols))), add(add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_rows)))), mul(mul(mul(add(zeros_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_rows, zeros_diff_rows))), mul(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, zeros_diff_rows)), mul(mul(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_cols, compare_blocks_rows))))), zeros_diff_cols), mul(compare_blocks_rows, add(compare_blocks_cols, compare_blocks_rows))))
add(add(add(compare_blocks_cols, ones_diff_cols), mul(mul(mul(zeros_diff_cols, ones_diff_rows), zeros_diff_cols), add(compare_blocks_rows, compare_blocks_rows))), add(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_rows)))
add(add(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), add(mul(zeros_diff_cols, zeros_diff_cols), mul(mul(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), zeros_diff_cols))), mul(mul(add(zeros_diff_cols, ones_diff_cols), compare_blocks_cols), mul(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_cols))))
COND TREES:
ge(_if_then_else(le(_if_then_else(le(ones_diff_cols, 2), ones_diff_cols, _if_then_else(True, 4, compare_blocks_rows)), _if_then_else(False, 0, _if_then_else(True, compare_blocks_rows, ARG6))), _if_then_else(ge(compare_blocks_cols, 2), _if_then_else(and_(False, False), ARG7, ARG6), 0), _if_then_else(False, _if_then_else(False, zeros_diff_cols, 1), zeros_diff_rows)), _if_then_else(ge(ARG7, 3), _if_then_else(False, compare_blocks_cols, _if_then_else(True, _if_then_else(True, _if_then_else(False, 0, zeros_diff_rows), 3), 3)), _if_then_else(True, ARG6, ARG6)))
ge(_if_then_else(or_(or_(le(ones_diff_rows, 4), le(1, zeros_diff_rows)), le(_if_then_else(False, 0, ARG6), _if_then_else(True, ones_diff_rows, 4))), _if_then_else(and_(and_(True, False), or_(False, False)), _if_then_else(or_(False, True), _if_then_else(False, 3, ARG6), _if_then_else(True, ones_diff_cols, 2)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(False, ARG6, compare_blocks_cols))), _if_then_else(and_(le(zeros_diff_cols, compare_blocks_rows), or_(False, True)), _if_then_else(le(ones_diff_rows, 3), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(True, ARG6, zeros_diff_rows)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(True, 3, ARG6), _if_then_else(True, 4, 3)))), _if_then_else(le(_if_then_else(le(compare_blocks_rows, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 4, ARG7)), _if_then_else(and_(True, True), _if_then_else(False, 4, 0), _if_then_else(False, ones_diff_rows, 3))), _if_then_else(False, _if_then_else(and_(True, False), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows))), _if_then_else(or_(ge(ARG7, 2), ge(zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, ARG6, 1), _if_then_else(False, 0, 3)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4)))))
and_(ge(_if_then_else(le(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 0, ARG6), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(le(3, 3), _if_then_else(False, 1, 4), _if_then_else(False, 0, ones_diff_cols))), ge(_if_then_else(or_(False, and_(or_(or_(False, True), le(3, zeros_diff_cols)), le(_if_then_else(False, ones_diff_rows, 1), _if_then_else(True, ones_diff_rows, ones_diff_cols)))), _if_then_else(or_(ge(compare_blocks_cols, ones_diff_cols), or_(False, True)), ones_diff_cols, 4), _if_then_else(False, zeros_diff_rows, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(True, compare_blocks_rows, ones_diff_rows))))
or_(and_(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(or_(True, True), _if_then_else(False, ARG6, 4), _if_then_else(True, 2, 3))), and_(ge(compare_blocks_cols, _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), le(_if_then_else(True, 1, 2), _if_then_else(True, ARG7, compare_blocks_rows)))), or_(or_(and_(or_(True, False), ge(4, zeros_diff_rows)), le(_if_then_else(True, 4, ARG7), _if_then_else(False, 0, 0))), or_(ge(_if_then_else(True, ones_diff_cols, 0), _if_then_else(True, 0, 0)), and_(or_(False, False), and_(False, True)))))
and_(le(_if_then_else(ge(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols, ones_diff_cols), _if_then_else(and_(True, False), _if_then_else(and_(and_(True, False), or_(False, False)), _if_then_else(le(ARG6, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 2), _if_then_else(True, ones_diff_rows, 3)), _if_then_else(or_(True, False), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(False, zeros_diff_rows, 3))), compare_blocks_cols)), ge(_if_then_else(and_(True, True), 1, zeros_diff_rows), _if_then_else(False, ARG6, _if_then_else(True, 0, compare_blocks_rows))))
VAL TREES:
mul(zeros_diff_cols, mul(add(ones_diff_cols, mul(ones_diff_rows, compare_blocks_rows)), zeros_diff_cols))
mul(mul(zeros_diff_cols, mul(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, add(add(zeros_diff_rows, compare_blocks_cols), zeros_diff_cols)), add(zeros_diff_rows, zeros_diff_rows)))
mul(compare_blocks_cols, add(add(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, add(ones_diff_rows, zeros_diff_rows)))))
mul(add(mul(ones_diff_cols, ones_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(compare_blocks_cols, mul(zeros_diff_cols, zeros_diff_rows)))
add(add(mul(add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols))), mul(mul(mul(ones_diff_cols, ones_diff_cols), ones_diff_cols), mul(ones_diff_rows, zeros_diff_rows))), add(add(add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, compare_blocks_cols)), add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), add(mul(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)))))
add(mul(add(mul(compare_blocks_rows, add(add(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows)), mul(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(mul(add(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, add(ones_diff_cols, compare_blocks_rows))), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_rows)))))
COND TREES:
ge(_if_then_else(le(_if_then_else(le(ones_diff_cols, 2), ones_diff_cols, _if_then_else(True, 4, compare_blocks_rows)), _if_then_else(False, 0, _if_then_else(True, compare_blocks_rows, ARG6))), _if_then_else(ge(compare_blocks_cols, 2), _if_then_else(and_(False, False), ARG7, ARG6), 0), _if_then_else(False, _if_then_else(False, zeros_diff_cols, 1), zeros_diff_rows)), _if_then_else(ge(ARG7, 3), _if_then_else(False, compare_blocks_cols, _if_then_else(True, _if_then_else(True, ARG7, 3), 3)), _if_then_else(True, ARG6, ARG6)))
ge(_if_then_else(or_(or_(le(ones_diff_rows, 4), le(1, zeros_diff_rows)), le(_if_then_else(False, 0, ARG6), _if_then_else(True, ones_diff_rows, 4))), _if_then_else(and_(and_(True, False), or_(False, False)), _if_then_else(or_(False, True), _if_then_else(False, 3, ARG6), _if_then_else(True, ones_diff_cols, 2)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(False, ARG6, compare_blocks_cols))), _if_then_else(and_(le(zeros_diff_cols, compare_blocks_rows), or_(False, True)), _if_then_else(le(ones_diff_rows, 3), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(True, ARG6, zeros_diff_rows)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(True, 3, ARG6), _if_then_else(True, 4, 3)))), _if_then_else(le(_if_then_else(le(compare_blocks_rows, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 4, ARG7)), _if_then_else(and_(True, True), _if_then_else(False, 4, 0), _if_then_else(False, ones_diff_rows, 3))), _if_then_else(False, _if_then_else(and_(True, False), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows))), _if_then_else(or_(ge(4, 2), ge(zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, ARG6, 1), _if_then_else(False, 0, 3)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4)))))
and_(ge(_if_then_else(le(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 0, ARG6), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(le(3, 3), _if_then_else(False, 1, 4), _if_then_else(False, 0, ones_diff_cols))), ge(_if_then_else(or_(False, False), _if_then_else(True, ones_diff_cols, 4), _if_then_else(False, zeros_diff_rows, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(True, compare_blocks_rows, ones_diff_rows))))
or_(and_(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(or_(True, True), _if_then_else(False, ARG6, 4), _if_then_else(True, 2, 3))), and_(ge(compare_blocks_cols, _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), le(_if_then_else(True, 1, 2), _if_then_else(True, ARG7, compare_blocks_rows)))), or_(or_(and_(or_(True, False), ge(4, zeros_diff_rows)), le(_if_then_else(True, 4, ARG7), _if_then_else(False, 0, 0))), or_(ge(_if_then_else(True, ones_diff_cols, 0), _if_then_else(True, 0, 0)), and_(or_(False, False), and_(False, True)))))
and_(le(_if_then_else(ge(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols, ones_diff_cols), _if_then_else(and_(True, False), 4, compare_blocks_cols)), ge(_if_then_else(and_(True, True), 1, zeros_diff_rows), _if_then_else(False, ARG6, _if_then_else(True, 0, compare_blocks_rows))))
VAL TREES:
mul(zeros_diff_cols, mul(add(ones_diff_cols, mul(ones_diff_rows, mul(compare_blocks_cols, ones_diff_rows))), mul(ones_diff_rows, zeros_diff_rows)))
mul(mul(zeros_diff_cols, mul(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, add(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_cols, mul(ones_diff_cols, zeros_diff_cols)))), add(zeros_diff_rows, mul(compare_blocks_rows, compare_blocks_rows))))
mul(compare_blocks_cols, add(add(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)), add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, add(ones_diff_rows, zeros_diff_rows)))))
mul(add(mul(ones_diff_cols, ones_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(compare_blocks_cols, compare_blocks_rows), ones_diff_rows))
add(add(mul(add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols))), mul(mul(mul(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, mul(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))), mul(ones_diff_rows, compare_blocks_cols))), add(add(add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, compare_blocks_cols)), add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), add(mul(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)))))
add(mul(add(mul(compare_blocks_rows, add(add(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows)), mul(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(mul(add(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, zeros_diff_rows)))), mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_rows)))))
COND TREES:
ge(_if_then_else(or_(or_(and_(True, True), or_(False, True)), le(_if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, ARG6))), _if_then_else(ge(_if_then_else(False, ARG7, compare_blocks_rows), _if_then_else(True, ARG6, ones_diff_cols)), _if_then_else(le(3, zeros_diff_rows), _if_then_else(True, ARG6, 0), _if_then_else(True, compare_blocks_cols, zeros_diff_rows)), _if_then_else(ge(4, ARG6), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, zeros_diff_cols, ARG6))), _if_then_else(or_(ge(zeros_diff_cols, ones_diff_cols), le(compare_blocks_cols, 1)), _if_then_else(ge(compare_blocks_rows, ones_diff_rows), 2, _if_then_else(True, compare_blocks_cols, ones_diff_cols)), _if_then_else(ge(4, ones_diff_cols), _if_then_else(False, ARG7, 2), _if_then_else(False, compare_blocks_cols, ARG7)))), _if_then_else(or_(and_(le(3, compare_blocks_rows), ge(3, compare_blocks_cols)), ge(_if_then_else(False, 0, ARG7), _if_then_else(False, 2, ARG6))), _if_then_else(le(_if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, 3)), _if_then_else(or_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, 4)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(False, 0, 4))), _if_then_else(and_(True, ge(zeros_diff_cols, 1)), _if_then_else(or_(True, False), _if_then_else(False, ARG6, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(compare_blocks_cols, ones_diff_cols), _if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, 2)))))
and_(and_(and_(or_(True, True), ge(zeros_diff_rows, 1)), ge(_if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, ARG7))), or_(ge(_if_then_else(True, 1, ARG7), _if_then_else(False, ones_diff_rows, 4)), and_(True, True)))
ge(_if_then_else(le(_if_then_else(True, _if_then_else(or_(ge(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(le(ones_diff_cols, 4), 0, 0)), compare_blocks_cols), _if_then_else(False, 4, ones_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, ARG6, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(False, ARG7, ARG6))), _if_then_else(and_(and_(False, True), or_(True, False)), _if_then_else(le(3, 2), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(True, 2, 0)), _if_then_else(ge(ARG6, 2), _if_then_else(True, ARG6, ARG6), 2)))
le(_if_then_else(and_(False, True), _if_then_else(False, ARG7, ones_diff_rows), _if_then_else(True, 1, 2)), _if_then_else(False, _if_then_else(False, compare_blocks_cols, 2), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)))
le(_if_then_else(and_(True, and_(True, True)), _if_then_else(le(2, 0), zeros_diff_cols, 1), _if_then_else(False, _if_then_else(or_(True, False), _if_then_else(False, 2, 2), _if_then_else(False, 4, ARG6)), _if_then_else(True, 1, ARG7))), _if_then_else(and_(True, True), _if_then_else(False, _if_then_else(True, 4, 0), 2), _if_then_else(False, zeros_diff_rows, ARG6)))
VAL TREES:
mul(add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, zeros_diff_rows)), add(add(add(mul(zeros_diff_rows, add(ones_diff_rows, compare_blocks_cols)), mul(ones_diff_cols, zeros_diff_cols)), add(add(ones_diff_rows, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(ones_diff_rows, zeros_diff_rows)))
add(add(mul(add(zeros_diff_rows, ones_diff_rows), mul(add(zeros_diff_rows, compare_blocks_cols), compare_blocks_cols)), mul(mul(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_rows, zeros_diff_rows))), add(mul(add(zeros_diff_cols, mul(zeros_diff_cols, mul(add(ones_diff_rows, zeros_diff_cols), zeros_diff_rows))), zeros_diff_rows), add(add(ones_diff_cols, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_rows))))
mul(add(add(ones_diff_cols, add(mul(mul(add(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_rows)), ones_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), add(mul(compare_blocks_cols, compare_blocks_cols), zeros_diff_cols))), add(ones_diff_cols, compare_blocks_cols)), add(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), mul(mul(add(add(add(mul(add(zeros_diff_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_cols))), add(add(mul(compare_blocks_cols, mul(zeros_diff_cols, zeros_diff_rows)), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_rows)))), mul(mul(mul(add(zeros_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_rows, zeros_diff_rows))), mul(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, zeros_diff_rows)), mul(mul(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_cols, compare_blocks_rows))))), zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_cols)))
add(add(add(compare_blocks_cols, ones_diff_cols), mul(mul(ones_diff_cols, zeros_diff_cols), add(compare_blocks_rows, compare_blocks_rows))), add(mul(zeros_diff_rows, compare_blocks_cols), add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))))
add(add(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), add(mul(zeros_diff_cols, zeros_diff_cols), mul(mul(add(ones_diff_rows, ones_diff_cols), compare_blocks_cols), zeros_diff_cols))), mul(mul(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_cols))))
COND TREES:
or_(ge(2, 1), ge(_if_then_else(le(_if_then_else(le(ARG7, zeros_diff_rows), _if_then_else(True, ARG6, zeros_diff_cols), _if_then_else(True, 1, 2)), _if_then_else(le(2, 0), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, _if_then_else(le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows)), _if_then_else(or_(False, True), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(False, ARG6, 4)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, ARG7, 3)))))), _if_then_else(False, 2, ARG6), _if_then_else(True, 3, ARG6)), _if_then_else(le(1, 1), _if_then_else(False, ones_diff_rows, ARG7), _if_then_else(False, zeros_diff_cols, 0))))
and_(or_(ge(4, 1), and_(or_(ge(4, 1), and_(True, True)), True)), le(_if_then_else(le(_if_then_else(or_(and_(False, True), ge(3, ARG7)), _if_then_else(ge(0, ARG7), _if_then_else(True, ARG7, zeros_diff_rows), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(4, zeros_diff_cols), _if_then_else(True, 1, 1), _if_then_else(False, 4, zeros_diff_cols))), _if_then_else(or_(ge(4, compare_blocks_rows), or_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ARG6, ARG7), _if_then_else(True, zeros_diff_rows, 4)), _if_then_else(and_(False, False), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, 3)))), _if_then_else(le(_if_then_else(or_(True, True), _if_then_else(True, ARG7, 0), _if_then_else(True, ARG7, compare_blocks_rows)), _if_then_else(ge(0, 0), _if_then_else(False, 0, 1), _if_then_else(True, ones_diff_rows, zeros_diff_cols))), _if_then_else(and_(and_(True, False), or_(True, True)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_cols, 2), _if_then_else(True, compare_blocks_rows, 3)), _if_then_else(or_(False, False), _if_then_else(False, 0, ones_diff_cols), _if_then_else(True, 2, ones_diff_rows))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, 3), _if_then_else(False, ARG7, ARG6)), _if_then_else(ge(2, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, 3, compare_blocks_cols)), _if_then_else(le(compare_blocks_cols, 2), _if_then_else(False, 4, 0), _if_then_else(False, 3, ARG6)))), _if_then_else(ge(_if_then_else(or_(True, False), _if_then_else(False, 1, zeros_diff_rows), 1), _if_then_else(le(compare_blocks_rows, 2), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, 4))), _if_then_else(or_(le(compare_blocks_cols, ARG7), ge(3, zeros_diff_cols)), _if_then_else(ge(1, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, ones_diff_rows)), _if_then_else(ge(ARG6, ARG6), _if_then_else(True, zeros_diff_rows, ARG6), _if_then_else(True, compare_blocks_cols, compare_blocks_rows))), _if_then_else(le(_if_then_else(False, ARG7, 4), _if_then_else(True, 2, ones_diff_rows)), _if_then_else(and_(True, False), _if_then_else(True, zeros_diff_cols, ones_diff_cols), _if_then_else(False, 1, compare_blocks_rows)), _if_then_else(le(2, ones_diff_cols), _if_then_else(False, 1, 2), _if_then_else(False, compare_blocks_cols, ones_diff_rows))))), _if_then_else(True, zeros_diff_cols, 0)))
le(_if_then_else(or_(ge(compare_blocks_cols, ones_diff_cols), le(zeros_diff_rows, ones_diff_rows)), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(le(0, 4), 0, 0)), _if_then_else(le(zeros_diff_rows, 0), _if_then_else(ge(ones_diff_rows, 2), ones_diff_cols, ARG6), _if_then_else(True, 1, compare_blocks_rows)))
or_(ge(_if_then_else(False, ARG7, 3), _if_then_else(True, ARG7, ARG6)), and_(or_(and_(le(_if_then_else(ge(0, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, 0), _if_then_else(True, ones_diff_rows, ARG7)), _if_then_else(and_(False, False), _if_then_else(False, 4, 4), _if_then_else(False, ARG7, ARG7))), le(_if_then_else(or_(False, False), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, _if_then_else(le(_if_then_else(True, ARG7, ones_diff_rows), _if_then_else(False, ARG6, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, compare_blocks_cols)), _if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 3, 3), _if_then_else(False, 1, 1))), zeros_diff_rows)), _if_then_else(le(2, 2), _if_then_else(True, 1, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, ARG6)))), ge(_if_then_else(le(_if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(True, zeros_diff_cols, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(False, 4, 0), _if_then_else(False, ARG6, 0)), _if_then_else(ge(2, 1), _if_then_else(False, compare_blocks_rows, 2), _if_then_else(False, 1, ARG7))), _if_then_else(le(_if_then_else(True, compare_blocks_rows, 0), _if_then_else(True, 2, 0)), _if_then_else(or_(True, False), _if_then_else(True, 2, ARG6), _if_then_else(True, 0, 3)), _if_then_else(le(zeros_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 4))))), or_(False, and_(False, True))))
ge(_if_then_else(and_(True, le(ones_diff_cols, _if_then_else(and_(and_(True, True), le(4, 2)), _if_then_else(or_(True, False), _if_then_else(False, _if_then_else(and_(False, and_(True, True)), _if_then_else(le(2, 0), zeros_diff_cols, 1), _if_then_else(False, zeros_diff_rows, _if_then_else(True, 1, ARG7))), 2), _if_then_else(False, 4, ARG6)), _if_then_else(le(ones_diff_rows, 1), _if_then_else(False, zeros_diff_rows, ARG7), _if_then_else(False, 2, 2))))), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, zeros_diff_cols), 3), _if_then_else(True, 4, ARG6)), _if_then_else(and_(True, True), _if_then_else(True, compare_blocks_rows, zeros_diff_rows), _if_then_else(True, ARG7, 1)))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_rows), add(mul(zeros_diff_cols, ones_diff_rows), compare_blocks_cols)), add(mul(zeros_diff_rows, zeros_diff_cols), ones_diff_cols))
add(add(ones_diff_rows, add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, compare_blocks_cols))), mul(mul(mul(ones_diff_cols, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), mul(mul(compare_blocks_rows, compare_blocks_rows), add(add(ones_diff_cols, ones_diff_rows), ones_diff_rows))))
mul(mul(mul(add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_cols, add(ones_diff_rows, zeros_diff_cols)), add(ones_diff_rows, ones_diff_rows))), mul(mul(add(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_cols)))), add(mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_rows))), mul(add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols)))))
add(mul(mul(add(ones_diff_rows, ones_diff_cols), compare_blocks_cols), mul(compare_blocks_rows, compare_blocks_rows)), mul(mul(compare_blocks_rows, ones_diff_rows), add(add(ones_diff_rows, mul(compare_blocks_cols, add(ones_diff_rows, ones_diff_cols))), add(compare_blocks_rows, compare_blocks_cols))))
add(mul(add(mul(mul(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, zeros_diff_cols)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_cols))), mul(mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_rows, compare_blocks_rows)), add(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_cols)))), add(add(mul(mul(ones_diff_cols, ones_diff_rows), mul(ones_diff_rows, ones_diff_rows)), add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows))), add(add(mul(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, zeros_diff_cols)), add(add(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)))))
mul(mul(mul(mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), mul(add(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_rows, ones_diff_rows))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(mul(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)))), mul(add(mul(mul(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows))), zeros_diff_cols))
COND TREES:
or_(or_(and_(False, True), le(0, 1)), or_(ge(_if_then_else(or_(and_(True, True), or_(True, True)), _if_then_else(le(ARG6, compare_blocks_rows), _if_then_else(False, ones_diff_rows, 3), _if_then_else(False, ARG7, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(True, 1, 2))), zeros_diff_cols), or_(True, True)))
or_(le(_if_then_else(ge(_if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 3, 4)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 2))), _if_then_else(and_(and_(False, True), ge(4, 2)), _if_then_else(ge(ARG6, 4), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)))), and_(or_(or_(and_(True, False), le(2, ones_diff_rows)), or_(or_(le(ones_diff_rows, 2), ge(2, ones_diff_cols)), and_(or_(ge(_if_then_else(False, zeros_diff_cols, ARG7), ARG6), ge(2, 2)), and_(True, True)))), ge(_if_then_else(ge(4, 0), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 3, ARG7)), _if_then_else(le(compare_blocks_rows, 1), _if_then_else(False, 4, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))))
or_(le(_if_then_else(and_(True, True), _if_then_else(True, 4, 3), _if_then_else(le(_if_then_else(True, compare_blocks_rows, _if_then_else(le(_if_then_else(or_(and_(True, False), ge(4, 3)), _if_then_else(and_(False, True), _if_then_else(True, 4, ARG7), _if_then_else(True, zeros_diff_cols, ARG6)), _if_then_else(or_(True, False), _if_then_else(False, 4, 1), _if_then_else(False, compare_blocks_cols, 1))), _if_then_else(ge(_if_then_else(False, 2, 0), _if_then_else(False, ones_diff_cols, ARG7)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(False, ARG6, compare_blocks_cols)), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_rows, ARG6), _if_then_else(False, 4, zeros_diff_cols)))), _if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, 4, ones_diff_cols), _if_then_else(True, 2, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, ARG7, 4), _if_then_else(False, ARG6, 1))), _if_then_else(ge(_if_then_else(True, 4, compare_blocks_cols), _if_then_else(True, ARG7, ARG7)), _if_then_else(and_(False, True), _if_then_else(True, 0, 1), _if_then_else(True, ARG6, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, 2), _if_then_else(True, ARG7, ARG7), _if_then_else(False, ones_diff_cols, 1))), _if_then_else(ge(_if_then_else(False, ARG7, 4), _if_then_else(True, 4, ones_diff_cols)), _if_then_else(ge(4, 4), _if_then_else(True, ARG6, 0), _if_then_else(False, compare_blocks_cols, compare_blocks_rows)), _if_then_else(le(ones_diff_cols, ones_diff_rows), _if_then_else(False, 0, ones_diff_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)))), _if_then_else(or_(le(_if_then_else(False, compare_blocks_rows, ARG6), _if_then_else(True, ARG6, 1)), ge(_if_then_else(False, ARG7, 0), _if_then_else(True, ARG7, 4))), _if_then_else(le(_if_then_else(True, zeros_diff_cols, 0), _if_then_else(False, ARG6, zeros_diff_rows)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, 2, 0)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 1))), _if_then_else(or_(or_(False, True), ge(0, ones_diff_cols)), _if_then_else(le(1, 0), _if_then_else(True, ARG6, 4), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_cols, ones_diff_rows), _if_then_else(True, ones_diff_rows, ARG7)))))), _if_then_else(False, 4, ones_diff_cols)), 4, compare_blocks_rows)), _if_then_else(True, _if_then_else(True, ARG6, ARG6), compare_blocks_cols)), or_(or_(or_(True, True), and_(False, False)), or_(False, False)))
le(_if_then_else(le(1, 2), _if_then_else(True, zeros_diff_cols, 0), _if_then_else(True, zeros_diff_rows, 1)), _if_then_else(ge(ARG7, 4), _if_then_else(False, 4, ARG6), _if_then_else(False, zeros_diff_cols, 4)))
or_(ge(_if_then_else(and_(True, True), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(ge(1, ARG6), _if_then_else(True, 4, ARG7), _if_then_else(True, compare_blocks_cols, zeros_diff_cols))), and_(or_(or_(False, True), or_(True, False)), ge(_if_then_else(and_(True, and_(True, True)), _if_then_else(le(2, 0), zeros_diff_cols, 1), _if_then_else(False, zeros_diff_rows, _if_then_else(True, 1, ARG7))), _if_then_else(le(_if_then_else(ge(_if_then_else(False, 0, compare_blocks_cols), _if_then_else(False, 1, 0)), _if_then_else(le(ARG7, ones_diff_rows), _if_then_else(True, ones_diff_rows, ARG6), _if_then_else(True, zeros_diff_rows, 4)), _if_then_else(ge(compare_blocks_cols, zeros_diff_cols), _if_then_else(False, 2, 2), _if_then_else(True, ones_diff_cols, ones_diff_rows))), _if_then_else(ge(_if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(True, 3, ARG7)), _if_then_else(or_(False, False), _if_then_else(False, 3, compare_blocks_cols), _if_then_else(True, ones_diff_cols, ARG6)), _if_then_else(ge(3, zeros_diff_cols), _if_then_else(False, ones_diff_rows, 4), _if_then_else(False, zeros_diff_rows, 0)))), _if_then_else(or_(ge(_if_then_else(False, compare_blocks_cols, 2), _if_then_else(True, 3, ones_diff_rows)), and_(ge(compare_blocks_rows, 2), le(4, compare_blocks_rows))), _if_then_else(ge(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(True, ARG6, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(False, zeros_diff_rows, 3)), _if_then_else(ge(0, ARG7), _if_then_else(False, 4, ARG7), _if_then_else(True, ones_diff_rows, compare_blocks_rows))), _if_then_else(le(_if_then_else(False, 4, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(or_(True, True), _if_then_else(False, ARG7, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, 3)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(False, 4, ones_diff_rows)))), _if_then_else(and_(and_(and_(False, False), and_(False, False)), le(_if_then_else(True, 3, zeros_diff_rows), _if_then_else(False, ones_diff_cols, ARG6))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, ARG7), _if_then_else(True, zeros_diff_cols, zeros_diff_cols)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(False, 3, ones_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, 4, ARG6), _if_then_else(False, 2, 0))), _if_then_else(or_(and_(False, False), le(4, ARG6)), _if_then_else(or_(False, False), _if_then_else(False, 3, ARG7), _if_then_else(True, 1, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, 4, 3), _if_then_else(True, zeros_diff_cols, ARG7))))))))
VAL TREES:
mul(mul(add(ones_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_cols)))
add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), mul(add(ones_diff_rows, zeros_diff_rows), add(add(mul(add(ones_diff_cols, compare_blocks_cols), compare_blocks_cols), add(zeros_diff_rows, compare_blocks_cols)), mul(add(zeros_diff_rows, add(add(ones_diff_rows, zeros_diff_cols), compare_blocks_rows)), add(compare_blocks_cols, zeros_diff_cols))))))
mul(add(add(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows)), add(mul(mul(compare_blocks_cols, zeros_diff_rows), ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))), add(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), add(add(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)), compare_blocks_rows))
add(mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), add(mul(add(add(zeros_diff_cols, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_cols)), mul(add(zeros_diff_rows, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols))), ones_diff_cols))), add(mul(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)))), add(mul(add(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows))), add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))))
COND TREES:
or_(or_(and_(False, True), le(0, _if_then_else(and_(True, le(2, ARG7)), 1, 3))), or_(ge(_if_then_else(le(_if_then_else(le(ones_diff_cols, 2), ones_diff_cols, _if_then_else(True, ones_diff_cols, _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, 0), _if_then_else(ge(_if_then_else(and_(True, False), _if_then_else(True, 2, ARG7), _if_then_else(False, ARG7, 1)), _if_then_else(le(4, 4), _if_then_else(True, 4, 2), _if_then_else(True, ones_diff_rows, ones_diff_cols))), 0, 4)))), _if_then_else(True, 0, _if_then_else(True, compare_blocks_rows, ARG6))), compare_blocks_cols, zeros_diff_rows), zeros_diff_cols), or_(True, True)))
or_(le(_if_then_else(or_(ge(_if_then_else(True, zeros_diff_rows, _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(False, ones_diff_cols, 4)), le(_if_then_else(False, ARG7, 4), _if_then_else(False, zeros_diff_cols, zeros_diff_rows))), _if_then_else(or_(ge(compare_blocks_cols, 3), False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 2))), _if_then_else(and_(and_(False, True), ge(4, 2)), _if_then_else(ge(ARG6, 4), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)))), and_(or_(or_(and_(True, False), le(2, ones_diff_rows)), ge(_if_then_else(False, 4, 2), _if_then_else(True, 0, 1))), ge(_if_then_else(ge(4, 0), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 3, 3)), _if_then_else(le(compare_blocks_rows, 1), _if_then_else(False, 4, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))))
or_(le(_if_then_else(and_(True, True), _if_then_else(True, 4, 3), _if_then_else(le(_if_then_else(or_(ge(_if_then_else(False, 0, 2), _if_then_else(True, 0, zeros_diff_rows)), and_(ge(ARG7, ARG6), or_(False, True))), _if_then_else(and_(ge(compare_blocks_cols, ARG6), and_(False, True)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(False, 2, compare_blocks_rows), _if_then_else(False, 1, compare_blocks_rows)), _if_then_else(ge(1, ones_diff_rows), _if_then_else(True, 2, ones_diff_rows), _if_then_else(False, 0, 2))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, ARG7), _if_then_else(True, compare_blocks_cols, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, 0, 2), _if_then_else(True, 4, compare_blocks_rows)), _if_then_else(le(compare_blocks_cols, 2), _if_then_else(False, 4, zeros_diff_cols), _if_then_else(True, 4, compare_blocks_cols)))), _if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(True, ones_diff_rows, ARG6), _if_then_else(False, 1, zeros_diff_rows)), _if_then_else(le(ARG6, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 1), _if_then_else(False, zeros_diff_rows, compare_blocks_rows))), _if_then_else(ge(_if_then_else(False, compare_blocks_rows, 3), _if_then_else(False, 2, zeros_diff_cols)), _if_then_else(or_(True, True), _if_then_else(True, ARG6, 2), _if_then_else(False, ARG6, ones_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, 0, 2), _if_then_else(False, 2, 0))), _if_then_else(and_(le(1, zeros_diff_rows), le(2, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, 3, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, 0, 3))))), 4, compare_blocks_rows)), _if_then_else(True, _if_then_else(True, ARG6, ARG6), compare_blocks_cols)), False)
le(_if_then_else(False, _if_then_else(False, zeros_diff_cols, 0), _if_then_else(True, zeros_diff_rows, 1)), _if_then_else(ge(_if_then_else(ge(_if_then_else(True, _if_then_else(False, compare_blocks_rows, ones_diff_rows), ARG7), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(ge(zeros_diff_cols, ARG6), _if_then_else(or_(False, False), compare_blocks_rows, zeros_diff_cols), _if_then_else(True, 4, compare_blocks_cols)), _if_then_else(ge(compare_blocks_rows, _if_then_else(False, 3, zeros_diff_cols)), _if_then_else(False, zeros_diff_rows, zeros_diff_cols), _if_then_else(or_(False, True), compare_blocks_cols, 0))), 4), _if_then_else(False, 4, ARG6), _if_then_else(False, zeros_diff_cols, 4)))
or_(ge(_if_then_else(and_(True, True), _if_then_else(True, _if_then_else(and_(True, True), 1, zeros_diff_rows), ones_diff_cols), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(ge(1, ARG6), _if_then_else(True, _if_then_else(ge(_if_then_else(True, compare_blocks_rows, 4), _if_then_else(True, 2, ARG7)), _if_then_else(and_(False, True), _if_then_else(False, 0, compare_blocks_cols), _if_then_else(False, 1, 1)), _if_then_else(and_(False, True), _if_then_else(False, 4, 1), _if_then_else(False, ones_diff_cols, 1))), ARG7), _if_then_else(True, compare_blocks_cols, zeros_diff_cols))), and_(or_(or_(True, True), or_(True, False)), ge(0, _if_then_else(False, ones_diff_cols, ones_diff_cols))))
VAL TREES:
mul(ones_diff_rows, add(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_cols)))
add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), mul(add(zeros_diff_cols, zeros_diff_rows), compare_blocks_rows)))
mul(add(add(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows)), add(mul(mul(ones_diff_cols, zeros_diff_rows), ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))), add(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), add(add(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)), compare_blocks_rows))
add(mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, ones_diff_cols))), add(mul(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)))), add(mul(add(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows))), add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(mul(zeros_diff_cols, compare_blocks_cols), zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))))
COND TREES:
ge(_if_then_else(True, _if_then_else(and_(le(_if_then_else(True, zeros_diff_cols, 0), _if_then_else(True, 3, compare_blocks_rows)), le(_if_then_else(False, 0, 3), _if_then_else(False, zeros_diff_rows, ones_diff_rows))), _if_then_else(and_(False, False), ARG7, ARG6), 0), _if_then_else(False, _if_then_else(False, zeros_diff_cols, 1), zeros_diff_rows)), _if_then_else(ge(ARG7, 3), _if_then_else(False, compare_blocks_cols, _if_then_else(True, _if_then_else(True, ARG7, 3), 3)), _if_then_else(True, ARG6, ARG6)))
ge(_if_then_else(or_(or_(le(ones_diff_rows, 4), le(1, zeros_diff_rows)), le(_if_then_else(False, 0, ARG6), _if_then_else(True, ones_diff_rows, 4))), _if_then_else(and_(and_(True, False), or_(False, False)), _if_then_else(or_(False, True), _if_then_else(False, 3, ARG6), _if_then_else(True, ones_diff_cols, 2)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(False, ARG6, compare_blocks_cols))), _if_then_else(and_(le(zeros_diff_cols, compare_blocks_rows), or_(False, True)), _if_then_else(le(ones_diff_rows, 3), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(True, ARG6, zeros_diff_rows)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(True, ARG7, ARG6), _if_then_else(True, 4, 3)))), _if_then_else(le(_if_then_else(le(compare_blocks_rows, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 4, ARG7)), _if_then_else(and_(True, True), _if_then_else(False, 4, 0), _if_then_else(False, ones_diff_rows, 3))), _if_then_else(and_(le(ARG6, ARG6), ge(2, 2)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_cols, 1), _if_then_else(True, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows))), _if_then_else(or_(ge(4, 2), ge(zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, ARG6, 1), _if_then_else(False, 0, 3)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4)))))
and_(ge(_if_then_else(le(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 0, ARG6), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(le(3, 3), _if_then_else(False, 1, 4), _if_then_else(or_(or_(or_(True, True), and_(False, False)), or_(False, False)), 0, ones_diff_cols))), ge(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, 4), _if_then_else(False, zeros_diff_rows, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(True, compare_blocks_rows, ones_diff_rows))))
or_(and_(le(_if_then_else(le(ARG7, _if_then_else(True, compare_blocks_rows, 4)), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(or_(True, True), _if_then_else(False, ARG6, 4), _if_then_else(True, 2, 3))), and_(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), le(_if_then_else(True, 1, 2), _if_then_else(True, ARG7, compare_blocks_rows)))), or_(or_(and_(or_(True, False), ge(4, zeros_diff_rows)), le(_if_then_else(True, 4, ARG7), _if_then_else(False, 0, 0))), or_(ge(_if_then_else(True, ones_diff_cols, 0), _if_then_else(True, 0, 0)), and_(or_(False, False), le(ones_diff_rows, 4)))))
and_(le(3, _if_then_else(and_(False, False), 4, compare_blocks_cols)), ge(ARG6, _if_then_else(False, ARG6, _if_then_else(True, 0, compare_blocks_rows))))
VAL TREES:
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, compare_blocks_rows)), zeros_diff_cols)
mul(mul(zeros_diff_cols, mul(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, add(zeros_diff_cols, mul(zeros_diff_cols, mul(compare_blocks_cols, zeros_diff_rows)))), add(zeros_diff_rows, zeros_diff_rows)))
mul(zeros_diff_cols, add(add(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, add(ones_diff_rows, zeros_diff_rows)))))
mul(add(mul(zeros_diff_rows, mul(mul(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols))), add(zeros_diff_rows, add(ones_diff_cols, zeros_diff_rows))), add(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, zeros_diff_rows)))
add(add(mul(add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols))), mul(mul(mul(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), mul(ones_diff_rows, zeros_diff_rows))), add(add(add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), add(mul(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)))))
add(mul(add(mul(compare_blocks_rows, add(add(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows)), mul(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(mul(add(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(mul(mul(add(mul(zeros_diff_cols, ones_diff_cols), compare_blocks_cols), add(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows))), mul(mul(mul(compare_blocks_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, compare_blocks_rows))), compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))), mul(mul(compare_blocks_rows, add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_rows)))))
COND TREES:
ge(_if_then_else(or_(or_(and_(True, True), or_(False, True)), le(_if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, ARG6))), _if_then_else(ge(_if_then_else(False, ARG7, compare_blocks_rows), _if_then_else(True, ARG6, ones_diff_cols)), _if_then_else(le(3, zeros_diff_rows), _if_then_else(True, ARG6, 0), _if_then_else(True, compare_blocks_cols, zeros_diff_rows)), _if_then_else(ge(4, ARG6), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, zeros_diff_cols, ARG6))), _if_then_else(or_(ge(zeros_diff_cols, ones_diff_cols), le(compare_blocks_cols, 1)), _if_then_else(ge(compare_blocks_rows, ones_diff_rows), 2, _if_then_else(True, compare_blocks_cols, ones_diff_cols)), _if_then_else(ge(4, ones_diff_cols), _if_then_else(False, ARG7, 2), _if_then_else(False, compare_blocks_cols, ARG7)))), _if_then_else(or_(and_(le(3, compare_blocks_rows), ge(3, compare_blocks_cols)), ge(_if_then_else(False, 0, ARG7), _if_then_else(False, 2, ARG6))), _if_then_else(le(_if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, 3)), _if_then_else(or_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, 4)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(False, 0, 4))), _if_then_else(and_(True, ge(zeros_diff_cols, 1)), _if_then_else(or_(True, False), _if_then_else(False, ARG6, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(compare_blocks_cols, ones_diff_cols), _if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, 2)))))
and_(and_(and_(or_(True, True), ge(zeros_diff_rows, 1)), ge(_if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, ARG7))), or_(ge(_if_then_else(True, 1, ARG7), _if_then_else(False, ones_diff_rows, 4)), and_(True, True)))
ge(_if_then_else(le(_if_then_else(True, _if_then_else(or_(ge(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(le(ones_diff_cols, 4), 0, 0)), compare_blocks_cols), _if_then_else(False, 4, ones_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, ARG6, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(False, ARG7, ARG6))), _if_then_else(and_(and_(False, True), or_(True, False)), _if_then_else(le(3, 2), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(True, 2, 0)), _if_then_else(ge(ARG6, 2), _if_then_else(True, ARG6, ARG6), 2)))
le(_if_then_else(and_(False, True), _if_then_else(False, ARG7, ones_diff_rows), _if_then_else(True, 1, 2)), _if_then_else(False, _if_then_else(False, compare_blocks_cols, 2), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)))
le(_if_then_else(and_(True, and_(True, True)), _if_then_else(le(2, 0), zeros_diff_cols, 1), _if_then_else(False, _if_then_else(or_(True, False), _if_then_else(False, 2, 2), _if_then_else(False, 4, ARG6)), _if_then_else(True, 1, ARG7))), _if_then_else(and_(True, True), _if_then_else(False, _if_then_else(True, 4, 0), 2), _if_then_else(False, zeros_diff_rows, ARG6)))
VAL TREES:
mul(add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, zeros_diff_rows)), add(ones_diff_rows, compare_blocks_rows))
add(add(mul(add(zeros_diff_rows, ones_diff_rows), mul(compare_blocks_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, compare_blocks_rows), mul(add(zeros_diff_rows, ones_diff_rows), mul(compare_blocks_rows, compare_blocks_cols)))), add(mul(add(zeros_diff_cols, mul(zeros_diff_cols, mul(add(ones_diff_rows, zeros_diff_cols), zeros_diff_rows))), mul(compare_blocks_rows, compare_blocks_rows)), add(add(ones_diff_cols, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_rows))))
mul(add(add(ones_diff_cols, add(mul(mul(add(ones_diff_cols, add(mul(compare_blocks_rows, compare_blocks_rows), mul(mul(ones_diff_rows, zeros_diff_cols), compare_blocks_cols))), ones_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), add(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, zeros_diff_rows)))), add(ones_diff_cols, compare_blocks_cols)), add(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), mul(mul(add(add(add(mul(add(zeros_diff_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_cols))), add(add(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_cols, zeros_diff_cols)), add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_rows)))), mul(mul(mul(add(zeros_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_rows, zeros_diff_rows))), mul(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, zeros_diff_rows)), mul(mul(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_cols, compare_blocks_rows))))), zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_cols)))
add(compare_blocks_rows, compare_blocks_rows)
add(add(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), add(mul(compare_blocks_cols, zeros_diff_cols), mul(mul(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), zeros_diff_cols))), mul(mul(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, compare_blocks_rows)), mul(add(mul(zeros_diff_rows, compare_blocks_cols), zeros_diff_rows), mul(compare_blocks_cols, ones_diff_cols))))
COND TREES:
ge(_if_then_else(or_(or_(and_(True, True), or_(False, True)), le(_if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, ARG6))), _if_then_else(ge(_if_then_else(False, ARG7, compare_blocks_rows), _if_then_else(True, ARG6, ones_diff_cols)), _if_then_else(le(3, zeros_diff_rows), _if_then_else(True, ARG6, 0), _if_then_else(True, compare_blocks_cols, zeros_diff_rows)), _if_then_else(ge(4, ARG6), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, zeros_diff_cols, ARG6))), _if_then_else(or_(ge(zeros_diff_cols, ones_diff_cols), le(compare_blocks_cols, 1)), _if_then_else(ge(compare_blocks_rows, ones_diff_rows), 2, _if_then_else(True, compare_blocks_cols, ones_diff_cols)), _if_then_else(ge(4, ones_diff_cols), _if_then_else(False, ARG7, 2), _if_then_else(False, compare_blocks_cols, ARG7)))), _if_then_else(or_(and_(le(3, compare_blocks_rows), ge(3, compare_blocks_cols)), ge(_if_then_else(False, 0, ARG7), _if_then_else(False, 2, ARG6))), _if_then_else(le(_if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, 3)), _if_then_else(or_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, 4)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(False, 0, 4))), _if_then_else(and_(True, ge(zeros_diff_cols, 1)), _if_then_else(or_(True, False), _if_then_else(False, ARG6, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(compare_blocks_cols, ones_diff_cols), _if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, 2)))))
and_(and_(and_(or_(True, True), ge(zeros_diff_rows, 1)), ge(_if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, ARG7))), or_(ge(_if_then_else(True, 1, ARG7), _if_then_else(False, ones_diff_rows, 4)), and_(True, True)))
ge(_if_then_else(le(_if_then_else(True, _if_then_else(or_(ge(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(le(ones_diff_cols, 4), 0, 0)), compare_blocks_cols), _if_then_else(False, 4, ones_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, ARG6, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(False, ARG7, ARG6))), _if_then_else(and_(and_(False, True), or_(True, False)), _if_then_else(le(3, 2), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(True, 2, 0)), _if_then_else(ge(ARG6, 2), _if_then_else(True, ARG6, ARG6), 2)))
le(_if_then_else(and_(False, True), _if_then_else(False, ARG7, ones_diff_rows), _if_then_else(True, 1, 2)), _if_then_else(False, _if_then_else(False, compare_blocks_cols, 2), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)))
le(_if_then_else(and_(True, and_(True, True)), _if_then_else(le(2, 0), zeros_diff_cols, 1), _if_then_else(False, _if_then_else(or_(True, False), _if_then_else(False, 2, 2), _if_then_else(False, 4, ARG6)), _if_then_else(True, 1, ARG7))), _if_then_else(and_(True, True), _if_then_else(False, _if_then_else(True, 4, 0), 2), _if_then_else(False, zeros_diff_rows, ARG6)))
VAL TREES:
mul(add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, zeros_diff_rows)), add(ones_diff_rows, compare_blocks_rows))
add(add(mul(ones_diff_rows, zeros_diff_rows), mul(mul(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, zeros_diff_rows))), add(mul(add(zeros_diff_cols, mul(zeros_diff_cols, mul(add(ones_diff_rows, zeros_diff_cols), zeros_diff_rows))), mul(compare_blocks_rows, compare_blocks_rows)), add(add(ones_diff_cols, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_rows))))
mul(add(add(ones_diff_cols, add(mul(mul(add(add(zeros_diff_rows, compare_blocks_rows), add(mul(compare_blocks_rows, compare_blocks_rows), mul(mul(ones_diff_rows, zeros_diff_cols), compare_blocks_cols))), ones_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), add(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, zeros_diff_rows)))), add(ones_diff_cols, compare_blocks_cols)), add(mul(compare_blocks_cols, compare_blocks_rows), add(add(zeros_diff_rows, compare_blocks_rows), ones_diff_cols)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), mul(mul(add(add(add(mul(add(zeros_diff_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_cols))), add(add(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_cols, zeros_diff_cols)), add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_rows)))), mul(mul(mul(add(zeros_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_rows, zeros_diff_rows))), mul(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, zeros_diff_rows)), mul(mul(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_cols, compare_blocks_rows))))), zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_cols)))
add(add(add(compare_blocks_cols, ones_diff_cols), mul(mul(ones_diff_cols, zeros_diff_cols), add(compare_blocks_rows, compare_blocks_rows))), add(add(compare_blocks_cols, ones_diff_cols), mul(mul(ones_diff_cols, zeros_diff_cols), add(compare_blocks_rows, compare_blocks_rows))))
add(add(mul(mul(zeros_diff_cols, zeros_diff_cols), ones_diff_rows), add(mul(compare_blocks_cols, zeros_diff_cols), mul(mul(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), zeros_diff_cols))), mul(mul(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_cols))))
COND TREES:
le(_if_then_else(le(ones_diff_rows, ARG7), _if_then_else(and_(True, le(2, ARG7)), 1, 3), _if_then_else(le(_if_then_else(False, ARG6, 2), ARG7), 3, _if_then_else(ge(0, 1), zeros_diff_rows, 3))), _if_then_else(ge(_if_then_else(False, 4, zeros_diff_rows), compare_blocks_cols), _if_then_else(and_(False, False), 1, 0), _if_then_else(False, ARG7, _if_then_else(ge(0, ones_diff_rows), 4, zeros_diff_cols))))
le(_if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, ones_diff_rows, 4), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(and_(True, False), _if_then_else(True, 2, ARG6), _if_then_else(False, compare_blocks_rows, 3)))
le(_if_then_else(ge(2, compare_blocks_cols), _if_then_else(ge(_if_then_else(False, ARG6, 1), _if_then_else(True, ones_diff_rows, compare_blocks_cols)), compare_blocks_cols, 3), _if_then_else(True, ones_diff_cols, _if_then_else(and_(True, False), 0, 4))), 3)
ge(_if_then_else(and_(or_(True, False), and_(False, False)), _if_then_else(or_(False, False), _if_then_else(True, compare_blocks_cols, 2), _if_then_else(False, ARG7, zeros_diff_cols)), _if_then_else(le(compare_blocks_rows, ARG6), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(True, 0, zeros_diff_rows))), _if_then_else(or_(le(zeros_diff_rows, 2), ge(ones_diff_rows, ARG7)), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(False, 3, zeros_diff_cols)), _if_then_else(ge(4, 0), _if_then_else(le(1, 2), ones_diff_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_rows))))
le(_if_then_else(and_(True, or_(True, False)), _if_then_else(False, 0, zeros_diff_cols), _if_then_else(True, ARG6, 4)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(True, _if_then_else(False, 2, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols)), _if_then_else(True, 0, ARG6)))
VAL TREES:
mul(add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), add(zeros_diff_cols, zeros_diff_cols)), mul(add(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_rows))), mul(add(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), mul(zeros_diff_rows, zeros_diff_cols))), add(mul(add(add(ones_diff_cols, ones_diff_cols), mul(add(ones_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols))), mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_rows))), add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows)), mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_rows)))))
add(mul(add(compare_blocks_cols, compare_blocks_cols), mul(add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_rows)), ones_diff_rows)), add(add(ones_diff_cols, compare_blocks_cols), compare_blocks_cols))
add(add(add(zeros_diff_rows, compare_blocks_cols), add(mul(add(zeros_diff_rows, add(mul(ones_diff_rows, zeros_diff_cols), zeros_diff_rows)), mul(mul(compare_blocks_cols, compare_blocks_rows), ones_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), mul(add(ones_diff_rows, compare_blocks_cols), add(mul(compare_blocks_cols, zeros_diff_rows), ones_diff_cols))))), add(mul(compare_blocks_rows, compare_blocks_rows), mul(mul(ones_diff_rows, zeros_diff_cols), compare_blocks_cols)))
mul(add(mul(ones_diff_cols, ones_diff_rows), add(compare_blocks_cols, add(add(mul(mul(ones_diff_rows, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_cols)), mul(add(ones_diff_cols, zeros_diff_rows), mul(compare_blocks_rows, ones_diff_cols))), mul(add(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols)), mul(add(ones_diff_rows, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_rows)))))), mul(mul(zeros_diff_cols, compare_blocks_cols), add(add(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows)), add(mul(mul(compare_blocks_cols, zeros_diff_rows), ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)))))
add(add(add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), add(zeros_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, mul(mul(mul(mul(zeros_diff_rows, ones_diff_rows), add(compare_blocks_cols, mul(ones_diff_cols, ones_diff_cols))), add(compare_blocks_rows, zeros_diff_rows)), mul(add(add(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_cols, ones_diff_cols)), add(compare_blocks_cols, compare_blocks_rows)))), add(zeros_diff_cols, zeros_diff_rows)))
mul(mul(mul(add(mul(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols)), mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(mul(mul(add(mul(zeros_diff_cols, ones_diff_cols), compare_blocks_cols), add(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows))), mul(mul(mul(compare_blocks_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, compare_blocks_rows))), compare_blocks_cols)), add(compare_blocks_rows, compare_blocks_rows))), add(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_rows, zeros_diff_rows)))), add(mul(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), add(mul(mul(ones_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_rows, ones_diff_rows))))
COND TREES:
ge(_if_then_else(le(_if_then_else(le(ones_diff_cols, 2), ones_diff_cols, _if_then_else(True, ones_diff_cols, _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, 0), _if_then_else(False, 0, 4)))), _if_then_else(True, 0, _if_then_else(True, compare_blocks_rows, ARG6))), _if_then_else(ge(compare_blocks_cols, 2), _if_then_else(and_(False, False), ARG7, ARG6), 0), _if_then_else(False, _if_then_else(False, zeros_diff_cols, 1), zeros_diff_rows)), _if_then_else(ge(ARG7, 3), _if_then_else(False, compare_blocks_cols, _if_then_else(True, _if_then_else(True, ARG7, 3), 3)), _if_then_else(True, ARG6, ARG6)))
ge(_if_then_else(or_(or_(le(ones_diff_rows, 4), le(1, zeros_diff_rows)), le(_if_then_else(False, 0, ARG6), _if_then_else(True, ones_diff_rows, 4))), _if_then_else(and_(and_(True, False), or_(False, False)), _if_then_else(or_(False, True), _if_then_else(False, 3, ARG6), _if_then_else(True, ones_diff_cols, 2)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(False, ARG6, compare_blocks_cols))), _if_then_else(and_(le(zeros_diff_cols, compare_blocks_rows), or_(False, True)), _if_then_else(le(ones_diff_rows, 3), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(True, ARG6, zeros_diff_rows)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(True, 3, ARG6), _if_then_else(True, 4, 3)))), _if_then_else(le(_if_then_else(le(compare_blocks_rows, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 4, ARG7)), _if_then_else(and_(True, True), _if_then_else(False, 4, 0), _if_then_else(False, ones_diff_rows, 3))), _if_then_else(and_(le(ARG6, ARG6), ge(2, 2)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_cols, 1), _if_then_else(True, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows))), _if_then_else(or_(ge(4, 2), ge(zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, ARG6, 1), _if_then_else(False, 0, 3)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4)))))
and_(ge(_if_then_else(le(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 0, ARG6), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(le(3, 3), _if_then_else(False, 1, 4), _if_then_else(False, 0, ones_diff_cols))), ge(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, 4), _if_then_else(False, zeros_diff_rows, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(True, compare_blocks_rows, ones_diff_rows))))
or_(and_(le(_if_then_else(le(ARG7, _if_then_else(True, compare_blocks_rows, 4)), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(or_(True, True), _if_then_else(False, ARG6, 4), _if_then_else(True, 2, 3))), and_(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), le(_if_then_else(True, 1, 2), _if_then_else(True, ARG7, compare_blocks_rows)))), or_(or_(and_(or_(True, False), ge(4, zeros_diff_rows)), le(_if_then_else(True, 4, ARG7), _if_then_else(False, 0, 0))), or_(ge(_if_then_else(True, ones_diff_cols, 0), _if_then_else(True, 0, 0)), and_(or_(False, False), le(ones_diff_rows, 4)))))
and_(le(3, _if_then_else(and_(False, False), 4, compare_blocks_cols)), ge(_if_then_else(and_(True, True), 1, zeros_diff_rows), _if_then_else(False, ARG6, _if_then_else(True, 0, compare_blocks_rows))))
VAL TREES:
mul(mul(mul(mul(add(mul(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_rows)), add(mul(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_cols))), mul(mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, compare_blocks_cols)), mul(add(ones_diff_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_rows)))), add(compare_blocks_rows, compare_blocks_rows)), zeros_diff_cols)
mul(add(mul(mul(add(ones_diff_rows, ones_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), add(add(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols))), mul(add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows)))), add(add(ones_diff_rows, add(zeros_diff_cols, mul(zeros_diff_cols, mul(compare_blocks_cols, zeros_diff_rows)))), add(zeros_diff_rows, zeros_diff_rows)))
mul(zeros_diff_cols, add(add(mul(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, add(ones_diff_rows, zeros_diff_rows)))))
mul(add(mul(zeros_diff_rows, mul(mul(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols))), add(zeros_diff_rows, add(ones_diff_cols, zeros_diff_rows))), add(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, zeros_diff_rows)))
add(add(mul(add(add(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), add(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols))), mul(mul(mul(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), mul(ones_diff_rows, zeros_diff_rows))), add(add(add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), add(mul(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)))))
add(mul(add(mul(compare_blocks_rows, add(add(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows)), mul(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(mul(add(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(ones_diff_rows, add(ones_diff_rows, ones_diff_cols)))), mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))), mul(mul(compare_blocks_rows, add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_rows)))))
COND TREES:
ge(_if_then_else(le(_if_then_else(and_(ge(_if_then_else(ge(1, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), zeros_diff_cols), 0), or_(True, le(ARG7, compare_blocks_cols))), _if_then_else(ge(zeros_diff_cols, ARG7), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(True, 1, 4)), _if_then_else(ge(_if_then_else(False, 0, zeros_diff_cols), 3), _if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(True, 2, 3))), _if_then_else(True, 0, _if_then_else(True, compare_blocks_rows, ARG6))), _if_then_else(ge(compare_blocks_cols, 2), zeros_diff_rows, 0), _if_then_else(False, _if_then_else(False, zeros_diff_cols, 1), zeros_diff_rows)), _if_then_else(ge(ARG7, 3), _if_then_else(False, compare_blocks_cols, _if_then_else(True, _if_then_else(True, ARG7, 3), 3)), _if_then_else(True, ARG6, ARG6)))
ge(_if_then_else(or_(or_(le(ones_diff_rows, 4), le(1, zeros_diff_rows)), le(_if_then_else(False, 0, ARG6), _if_then_else(True, ones_diff_rows, 4))), _if_then_else(and_(and_(True, False), or_(False, False)), _if_then_else(or_(False, True), _if_then_else(False, 3, ARG6), _if_then_else(True, ones_diff_cols, 2)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(False, ARG6, compare_blocks_cols))), _if_then_else(and_(le(zeros_diff_cols, compare_blocks_rows), or_(False, True)), _if_then_else(le(ones_diff_rows, 3), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(True, ARG6, zeros_diff_rows)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(True, 3, ARG6), _if_then_else(True, 4, 3)))), _if_then_else(le(_if_then_else(le(compare_blocks_rows, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 4, ARG7)), _if_then_else(and_(True, True), _if_then_else(False, 4, 0), _if_then_else(False, ones_diff_rows, 3))), _if_then_else(and_(le(ARG6, ARG6), ge(2, 2)), _if_then_else(and_(True, False), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows))), _if_then_else(or_(ge(4, 2), ge(zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, ARG6, 1), _if_then_else(False, 0, 3)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4)))))
and_(ge(_if_then_else(le(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 0, ARG6), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(le(3, 3), _if_then_else(False, 1, 4), _if_then_else(False, 0, ones_diff_cols))), ge(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, 4), _if_then_else(False, zeros_diff_rows, compare_blocks_cols)), _if_then_else(ge(_if_then_else(False, 3, zeros_diff_rows), _if_then_else(and_(ge(_if_then_else(True, 3, ones_diff_rows), _if_then_else(True, compare_blocks_rows, 0)), le(_if_then_else(le(_if_then_else(le(_if_then_else(True, 3, ARG6), _if_then_else(False, 4, 3)), _if_then_else(le(3, compare_blocks_cols), _if_then_else(True, 0, ARG7), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, 3, compare_blocks_rows))), _if_then_else(le(_if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(True, 3, 0)), _if_then_else(le(zeros_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(True, ARG6, 3)), _if_then_else(ge(ones_diff_cols, ARG6), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(True, 2, compare_blocks_rows)))), _if_then_else(and_(ge(_if_then_else(False, 2, zeros_diff_cols), _if_then_else(False, 3, 4)), le(_if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(False, 4, 1))), _if_then_else(or_(le(0, ARG6), le(ARG7, ones_diff_cols)), _if_then_else(le(1, ARG6), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, 3, ones_diff_rows), _if_then_else(False, 4, compare_blocks_cols))), _if_then_else(or_(and_(False, True), or_(True, False)), _if_then_else(le(compare_blocks_rows, ones_diff_rows), _if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, ARG7, zeros_diff_rows)), _if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, ones_diff_rows)))), _if_then_else(ge(_if_then_else(ge(ARG7, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, 1, 2), _if_then_else(True, ones_diff_rows, 4))), _if_then_else(ge(_if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, ARG7, zeros_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, ARG6, 0), _if_then_else(True, 3, 1)), _if_then_else(le(zeros_diff_cols, ARG6), _if_then_else(True, ARG7, ones_diff_rows), _if_then_else(True, 1, 4))), _if_then_else(and_(le(4, 4), or_(True, False)), _if_then_else(or_(True, False), _if_then_else(False, ARG7, 0), _if_then_else(False, 3, 3)), _if_then_else(or_(False, False), _if_then_else(True, compare_blocks_cols, ARG6), _if_then_else(True, compare_blocks_cols, 2))))), _if_then_else(False, 3, ones_diff_rows))), zeros_diff_cols, 1)), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(True, compare_blocks_rows, ones_diff_rows))))
or_(and_(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(or_(True, True), _if_then_else(False, ARG6, 4), _if_then_else(True, 2, 3))), and_(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, _if_then_else(ge(_if_then_else(True, 2, 2), _if_then_else(True, 4, ARG7)), _if_then_else(ge(ARG6, 4), _if_then_else(True, 4, 2), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(ge(1, ARG6), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 1, 2))))), le(_if_then_else(True, 1, 2), _if_then_else(True, ARG7, compare_blocks_rows)))), or_(or_(and_(or_(True, False), ge(4, zeros_diff_rows)), le(_if_then_else(True, 4, _if_then_else(False, zeros_diff_cols, 2)), _if_then_else(False, 0, 0))), or_(ge(_if_then_else(True, ones_diff_cols, 0), _if_then_else(True, 0, 0)), and_(or_(False, False), le(ones_diff_rows, 4)))))
and_(le(_if_then_else(ge(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols, ones_diff_cols), _if_then_else(and_(False, False), 4, compare_blocks_cols)), ge(_if_then_else(and_(True, True), 1, zeros_diff_rows), _if_then_else(False, ARG6, _if_then_else(or_(True, True), 0, compare_blocks_rows))))
VAL TREES:
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(mul(compare_blocks_cols, mul(ones_diff_cols, compare_blocks_cols)), ones_diff_rows)))
mul(mul(ones_diff_cols, compare_blocks_cols), add(add(ones_diff_rows, zeros_diff_rows), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))), add(add(mul(mul(mul(zeros_diff_rows, ones_diff_rows), mul(ones_diff_cols, mul(add(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_cols)))), compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols))))
mul(add(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, add(compare_blocks_cols, zeros_diff_rows))), add(add(compare_blocks_cols, compare_blocks_rows), ones_diff_cols))
add(add(mul(add(add(mul(mul(ones_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows)), zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols))), mul(mul(mul(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_rows)))), add(add(add(mul(ones_diff_rows, mul(compare_blocks_rows, zeros_diff_cols)), add(ones_diff_cols, compare_blocks_cols)), add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), add(mul(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)))))
add(mul(add(mul(add(ones_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)), mul(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(mul(add(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))), mul(mul(add(zeros_diff_rows, compare_blocks_cols), add(ones_diff_cols, compare_blocks_cols)), zeros_diff_cols)))
COND TREES:
or_(or_(and_(False, True), le(0, _if_then_else(and_(True, le(2, ARG7)), 1, 3))), or_(ge(compare_blocks_cols, zeros_diff_cols), or_(True, True)))
or_(le(_if_then_else(ge(_if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 3, 4)), _if_then_else(or_(ge(compare_blocks_cols, 3), False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 2))), _if_then_else(and_(and_(False, True), ge(4, 2)), _if_then_else(ge(ARG6, 4), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)))), and_(or_(or_(and_(True, False), le(2, ones_diff_rows)), ge(_if_then_else(False, 4, 2), _if_then_else(True, 0, 1))), ge(_if_then_else(ge(4, 0), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 3, ARG7)), _if_then_else(le(compare_blocks_rows, 1), _if_then_else(False, 4, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))))
or_(le(_if_then_else(and_(True, True), _if_then_else(True, 4, 3), _if_then_else(le(_if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, ones_diff_cols)), 4, compare_blocks_rows)), _if_then_else(True, _if_then_else(True, ARG6, ARG6), compare_blocks_cols)), or_(or_(or_(True, True), and_(False, False)), or_(False, False)))
le(_if_then_else(le(1, 2), _if_then_else(False, zeros_diff_cols, 0), _if_then_else(True, zeros_diff_rows, 1)), _if_then_else(ge(ARG7, 4), _if_then_else(False, 4, ARG6), _if_then_else(False, zeros_diff_cols, 4)))
or_(ge(_if_then_else(and_(True, True), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(ge(1, ARG6), _if_then_else(True, 4, ARG7), _if_then_else(True, compare_blocks_cols, zeros_diff_cols))), and_(or_(or_(False, True), or_(True, False)), ge(0, _if_then_else(False, ones_diff_cols, ones_diff_cols))))
VAL TREES:
mul(ones_diff_rows, add(add(zeros_diff_cols, compare_blocks_cols), ones_diff_rows))
add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, mul(mul(zeros_diff_cols, ones_diff_cols), mul(add(compare_blocks_cols, mul(ones_diff_cols, zeros_diff_cols)), add(zeros_diff_rows, compare_blocks_cols))))))
add(add(zeros_diff_rows, mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), mul(add(zeros_diff_cols, compare_blocks_cols), compare_blocks_rows)))
mul(add(add(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows)), add(mul(mul(ones_diff_cols, zeros_diff_rows), ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))), add(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(add(add(zeros_diff_rows, add(compare_blocks_cols, zeros_diff_rows)), compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(add(mul(ones_diff_rows, mul(compare_blocks_cols, zeros_diff_cols)), add(ones_diff_cols, compare_blocks_cols)), add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols)))), add(add(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)), compare_blocks_rows))
add(mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, ones_diff_cols))), add(mul(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)))), add(mul(add(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows))), add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(mul(zeros_diff_cols, compare_blocks_cols), zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))))
COND TREES:
or_(or_(and_(False, True), le(0, 1)), or_(ge(_if_then_else(or_(and_(True, True), or_(True, True)), _if_then_else(le(ARG6, compare_blocks_rows), _if_then_else(False, ones_diff_rows, 3), _if_then_else(False, ARG7, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(True, 1, 2))), zeros_diff_cols), or_(True, True)))
or_(le(_if_then_else(ge(_if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 3, 4)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 2))), _if_then_else(and_(and_(False, True), ge(4, 2)), _if_then_else(ge(ARG6, 4), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)))), and_(or_(or_(and_(True, False), le(2, ones_diff_rows)), or_(or_(le(ones_diff_rows, 2), ge(2, ones_diff_cols)), and_(or_(ge(_if_then_else(False, zeros_diff_cols, ARG7), ARG6), True), and_(True, True)))), ge(_if_then_else(ge(4, 0), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 3, ARG7)), _if_then_else(le(compare_blocks_rows, 1), _if_then_else(False, 4, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))))
or_(le(_if_then_else(and_(True, True), _if_then_else(True, 4, 3), _if_then_else(le(_if_then_else(True, compare_blocks_rows, _if_then_else(le(_if_then_else(or_(and_(True, False), ge(4, 3)), _if_then_else(and_(False, True), _if_then_else(True, 4, ARG7), _if_then_else(True, zeros_diff_cols, ARG6)), _if_then_else(or_(True, False), _if_then_else(False, 4, 1), _if_then_else(False, compare_blocks_cols, 1))), _if_then_else(ge(_if_then_else(False, 2, _if_then_else(or_(ge(compare_blocks_cols, ones_diff_cols), le(zeros_diff_rows, ones_diff_rows)), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(le(0, 4), 0, 0))), _if_then_else(False, ones_diff_cols, ARG7)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(False, ARG6, compare_blocks_cols)), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_rows, ARG6), _if_then_else(False, 4, zeros_diff_cols)))), _if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, 4, ones_diff_cols), _if_then_else(True, 2, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, ARG7, 4), _if_then_else(False, ARG6, 1))), _if_then_else(ge(_if_then_else(True, 4, compare_blocks_cols), _if_then_else(True, ARG7, ARG7)), _if_then_else(and_(False, True), _if_then_else(True, 0, 1), _if_then_else(True, ARG6, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, 2), _if_then_else(True, ARG7, ARG7), _if_then_else(False, ones_diff_cols, 1))), _if_then_else(ge(_if_then_else(False, ARG7, 4), _if_then_else(True, 4, ones_diff_cols)), _if_then_else(ge(4, 4), _if_then_else(True, ARG6, 0), _if_then_else(False, compare_blocks_cols, compare_blocks_rows)), _if_then_else(le(ones_diff_cols, ones_diff_rows), _if_then_else(False, 0, ones_diff_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)))), _if_then_else(or_(le(_if_then_else(False, compare_blocks_rows, ARG6), _if_then_else(True, ARG6, 1)), ge(_if_then_else(False, ARG7, 0), _if_then_else(True, ARG7, 4))), _if_then_else(le(_if_then_else(True, zeros_diff_cols, 0), _if_then_else(False, ARG6, zeros_diff_rows)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, 2, 0)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 1))), _if_then_else(or_(or_(False, True), ge(0, ones_diff_cols)), _if_then_else(le(1, 0), _if_then_else(True, ARG6, 4), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_cols, ones_diff_rows), _if_then_else(True, ones_diff_rows, ARG7)))))), _if_then_else(False, 4, ones_diff_cols)), 4, compare_blocks_rows)), _if_then_else(True, _if_then_else(True, ARG6, ARG6), compare_blocks_cols)), or_(or_(or_(True, True), and_(False, False)), or_(False, False)))
le(_if_then_else(le(1, 2), _if_then_else(True, zeros_diff_cols, 0), _if_then_else(True, zeros_diff_rows, 1)), _if_then_else(ge(ARG7, 4), _if_then_else(False, 4, ARG6), _if_then_else(False, zeros_diff_cols, 4)))
or_(ge(_if_then_else(and_(True, True), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(ge(1, ARG6), _if_then_else(True, 4, ARG7), _if_then_else(True, compare_blocks_cols, zeros_diff_cols))), and_(or_(or_(False, True), or_(True, False)), ge(_if_then_else(and_(True, and_(True, True)), _if_then_else(le(2, 0), zeros_diff_cols, 1), _if_then_else(False, zeros_diff_rows, _if_then_else(True, 1, ARG7))), _if_then_else(le(_if_then_else(ge(_if_then_else(False, 0, compare_blocks_cols), _if_then_else(False, 1, 0)), _if_then_else(le(ARG7, ones_diff_rows), _if_then_else(True, ones_diff_rows, ARG6), _if_then_else(True, zeros_diff_rows, 4)), _if_then_else(ge(compare_blocks_cols, zeros_diff_cols), _if_then_else(False, 2, 2), _if_then_else(True, ones_diff_cols, ones_diff_rows))), _if_then_else(ge(_if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(True, 3, ARG7)), _if_then_else(or_(False, False), _if_then_else(False, 3, compare_blocks_cols), _if_then_else(True, ones_diff_cols, ARG6)), _if_then_else(ge(3, zeros_diff_cols), _if_then_else(False, ones_diff_rows, 4), _if_then_else(False, zeros_diff_rows, 0)))), _if_then_else(or_(ge(_if_then_else(False, compare_blocks_cols, 2), _if_then_else(True, 3, ones_diff_rows)), and_(ge(compare_blocks_rows, 2), le(4, compare_blocks_rows))), _if_then_else(ge(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(True, ARG6, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(False, zeros_diff_rows, 3)), _if_then_else(ge(0, ARG7), _if_then_else(False, 4, ARG7), _if_then_else(True, ones_diff_rows, compare_blocks_rows))), _if_then_else(le(_if_then_else(False, 4, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(or_(True, True), _if_then_else(False, ARG7, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, 3)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(False, 4, ones_diff_rows)))), _if_then_else(and_(and_(True, and_(False, False)), le(_if_then_else(True, 3, zeros_diff_rows), _if_then_else(False, ones_diff_cols, ARG6))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, ARG7), _if_then_else(True, zeros_diff_cols, zeros_diff_cols)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(False, 3, ones_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, 4, ARG6), _if_then_else(False, 2, 0))), _if_then_else(or_(and_(False, False), le(4, ARG6)), _if_then_else(or_(False, False), _if_then_else(False, 3, ARG7), _if_then_else(True, 1, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, 4, 3), _if_then_else(True, zeros_diff_cols, ARG7))))))))
VAL TREES:
mul(mul(add(ones_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_cols)))
add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), mul(add(ones_diff_rows, zeros_diff_rows), compare_blocks_rows)))
mul(add(add(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows)), add(mul(mul(compare_blocks_cols, zeros_diff_rows), ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))), add(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), add(add(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)), compare_blocks_rows))
add(mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, ones_diff_cols))), add(mul(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)))), add(mul(add(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows))), add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))))
COND TREES:
or_(or_(and_(False, True), le(_if_then_else(True, ARG6, zeros_diff_cols), 1)), or_(ge(ones_diff_cols, 4), or_(or_(True, True), True)))
or_(le(_if_then_else(ge(_if_then_else(le(compare_blocks_rows, 2), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, 4)), _if_then_else(True, _if_then_else(and_(False, True), _if_then_else(False, ARG7, ARG6), 1), 4)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 2))), _if_then_else(and_(and_(False, True), ge(4, 2)), _if_then_else(ge(ARG6, 4), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)))), and_(or_(or_(and_(True, False), le(2, ones_diff_rows)), ge(_if_then_else(False, 4, 2), _if_then_else(True, 0, 1))), ge(_if_then_else(ge(4, 0), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 3, ARG7)), _if_then_else(le(compare_blocks_rows, 1), _if_then_else(False, 4, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))))
or_(le(_if_then_else(False, _if_then_else(True, 4, 3), _if_then_else(False, 4, 1)), _if_then_else(True, _if_then_else(True, ARG6, _if_then_else(True, 4, 3)), compare_blocks_cols)), ge(ones_diff_rows, 2))
le(_if_then_else(le(1, 2), _if_then_else(True, zeros_diff_cols, 0), _if_then_else(True, zeros_diff_rows, 1)), _if_then_else(True, 0, _if_then_else(False, zeros_diff_cols, 4)))
or_(ge(_if_then_else(and_(True, True), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(ge(1, ARG6), 1, _if_then_else(True, _if_then_else(and_(True, True), 1, zeros_diff_rows), zeros_diff_cols))), and_(or_(or_(False, True), or_(True, False)), ge(_if_then_else(True, ARG7, ARG6), _if_then_else(False, ones_diff_cols, ones_diff_cols))))
VAL TREES:
mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(add(zeros_diff_cols, add(ones_diff_rows, compare_blocks_cols)), mul(ones_diff_cols, compare_blocks_cols)))
add(add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
mul(add(add(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows)), add(mul(zeros_diff_cols, ones_diff_cols), mul(add(zeros_diff_rows, zeros_diff_rows), compare_blocks_cols))), add(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(ones_diff_rows, add(add(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)), add(mul(ones_diff_cols, ones_diff_rows), add(compare_blocks_cols, ones_diff_cols))))
add(mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, ones_diff_cols))), add(mul(mul(compare_blocks_cols, add(ones_diff_rows, compare_blocks_rows)), add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)))), add(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows))), add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))))
COND TREES:
ge(_if_then_else(le(_if_then_else(and_(ge(_if_then_else(ge(1, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), zeros_diff_cols), 0), or_(True, le(ARG7, compare_blocks_cols))), _if_then_else(ge(zeros_diff_cols, ARG7), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(True, 1, 4)), _if_then_else(ge(_if_then_else(False, 0, zeros_diff_cols), 3), _if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(True, 2, 3))), _if_then_else(True, 0, _if_then_else(True, compare_blocks_rows, ARG6))), _if_then_else(ge(compare_blocks_cols, 2), zeros_diff_rows, 0), _if_then_else(False, _if_then_else(False, zeros_diff_cols, 1), zeros_diff_rows)), _if_then_else(ge(ARG7, 3), _if_then_else(False, compare_blocks_cols, _if_then_else(True, _if_then_else(True, ARG7, 3), 3)), _if_then_else(True, ARG6, ARG6)))
ge(_if_then_else(or_(or_(le(ones_diff_rows, 4), le(1, zeros_diff_rows)), le(_if_then_else(False, 0, ARG6), _if_then_else(True, ones_diff_rows, 4))), _if_then_else(and_(and_(True, False), or_(False, False)), _if_then_else(or_(False, True), _if_then_else(False, 3, ARG6), _if_then_else(True, ones_diff_cols, 2)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(False, ARG6, compare_blocks_cols))), _if_then_else(and_(le(zeros_diff_cols, compare_blocks_rows), or_(False, True)), _if_then_else(le(ones_diff_rows, 3), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(True, ARG6, zeros_diff_rows)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(True, 3, ARG6), _if_then_else(True, 4, 3)))), _if_then_else(le(_if_then_else(le(compare_blocks_rows, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 4, ARG7)), _if_then_else(and_(True, True), _if_then_else(False, 4, 0), _if_then_else(False, ones_diff_rows, 3))), _if_then_else(and_(le(ARG6, ARG6), ge(2, 2)), _if_then_else(and_(True, False), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows))), _if_then_else(or_(ge(4, 2), ge(zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, ARG6, 1), _if_then_else(False, 0, 3)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4)))))
and_(ge(_if_then_else(le(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 0, ARG6), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(le(3, 3), _if_then_else(False, 1, 4), _if_then_else(False, 0, ones_diff_cols))), ge(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, 4), _if_then_else(False, zeros_diff_rows, compare_blocks_cols)), _if_then_else(ge(_if_then_else(False, 3, zeros_diff_rows), _if_then_else(and_(ge(_if_then_else(True, 3, ones_diff_rows), _if_then_else(True, compare_blocks_rows, 0)), le(_if_then_else(le(_if_then_else(le(_if_then_else(True, 3, ARG6), _if_then_else(False, 4, 3)), _if_then_else(le(3, compare_blocks_cols), _if_then_else(True, 0, ARG7), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, 3, compare_blocks_rows))), _if_then_else(le(_if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(True, 3, 0)), _if_then_else(le(zeros_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(True, ARG6, 3)), _if_then_else(ge(ones_diff_cols, ARG6), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(True, 2, compare_blocks_rows)))), _if_then_else(and_(ge(_if_then_else(False, 2, zeros_diff_cols), _if_then_else(False, 3, 4)), le(_if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(False, 4, 1))), _if_then_else(or_(le(0, ARG6), le(ARG7, ones_diff_cols)), _if_then_else(le(1, ARG6), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, 3, ones_diff_rows), _if_then_else(False, 4, compare_blocks_cols))), _if_then_else(or_(and_(False, True), or_(True, False)), _if_then_else(le(compare_blocks_rows, ones_diff_rows), _if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, ARG7, zeros_diff_rows)), _if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, ones_diff_rows)))), _if_then_else(ge(_if_then_else(ge(ARG7, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, 1, 2), _if_then_else(True, ones_diff_rows, 4))), _if_then_else(ge(_if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, ARG7, zeros_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, ARG6, 0), _if_then_else(True, 3, 1)), _if_then_else(le(zeros_diff_cols, ARG6), _if_then_else(True, ARG7, ones_diff_rows), _if_then_else(True, 1, 4))), _if_then_else(and_(le(4, 4), or_(True, and_(True, True))), _if_then_else(or_(True, False), _if_then_else(False, ARG7, 0), _if_then_else(False, 3, 3)), _if_then_else(or_(False, False), _if_then_else(True, compare_blocks_cols, ARG6), _if_then_else(True, compare_blocks_cols, 2))))), _if_then_else(False, 3, ones_diff_rows))), zeros_diff_cols, 1)), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(True, compare_blocks_rows, ones_diff_rows))))
or_(and_(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(or_(True, True), _if_then_else(False, ARG6, 4), _if_then_else(True, 2, 3))), and_(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, _if_then_else(ge(_if_then_else(True, 2, 2), _if_then_else(True, 4, ARG7)), _if_then_else(ge(ARG6, 4), _if_then_else(True, 4, 2), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(ge(1, ARG6), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 1, 2))))), le(_if_then_else(True, 1, 2), _if_then_else(True, ARG7, compare_blocks_rows)))), or_(or_(and_(or_(True, False), ge(4, zeros_diff_rows)), le(_if_then_else(True, 4, _if_then_else(False, zeros_diff_cols, 2)), _if_then_else(False, 0, 0))), or_(ge(_if_then_else(True, ones_diff_cols, _if_then_else(le(_if_then_else(False, ones_diff_cols, compare_blocks_cols), _if_then_else(False, 3, 4)), 4, ARG6)), _if_then_else(True, 0, 0)), and_(or_(False, False), le(ones_diff_rows, 4)))))
and_(le(_if_then_else(ge(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols, ones_diff_cols), _if_then_else(and_(False, False), 4, compare_blocks_cols)), ge(_if_then_else(and_(True, True), 1, zeros_diff_rows), _if_then_else(False, ARG6, _if_then_else(or_(True, True), 0, compare_blocks_rows))))
VAL TREES:
mul(mul(add(zeros_diff_rows, ones_diff_cols), compare_blocks_cols), mul(add(ones_diff_cols, ones_diff_cols), mul(mul(compare_blocks_cols, ones_diff_rows), ones_diff_rows)))
mul(mul(mul(zeros_diff_cols, ones_diff_cols), mul(add(compare_blocks_cols, mul(ones_diff_cols, zeros_diff_cols)), add(zeros_diff_rows, compare_blocks_cols))), add(mul(compare_blocks_cols, add(mul(add(mul(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_cols)), add(add(add(compare_blocks_rows, zeros_diff_rows), compare_blocks_cols), mul(ones_diff_rows, ones_diff_rows))), mul(add(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(zeros_diff_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols))))), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))), add(add(zeros_diff_rows, zeros_diff_rows), add(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols))))
mul(add(mul(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_rows, add(compare_blocks_cols, zeros_diff_rows))), add(add(compare_blocks_cols, compare_blocks_rows), ones_diff_cols))
add(add(mul(add(add(mul(mul(ones_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows)), zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols))), mul(mul(mul(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_rows)))), add(add(add(mul(ones_diff_rows, mul(compare_blocks_rows, zeros_diff_cols)), add(ones_diff_cols, compare_blocks_cols)), add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), add(mul(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)))))
add(mul(add(mul(add(ones_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)), mul(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(mul(add(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), mul(mul(add(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), zeros_diff_cols)))
COND TREES:
or_(or_(and_(False, True), le(0, 1)), or_(ge(compare_blocks_cols, 4), or_(True, True)))
or_(le(_if_then_else(ge(_if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 3, 4)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 2))), _if_then_else(and_(and_(False, True), ge(4, 2)), _if_then_else(ge(ARG6, 4), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)))), and_(or_(or_(and_(True, False), le(2, ones_diff_rows)), ge(_if_then_else(False, 4, 2), _if_then_else(True, 0, 1))), ge(_if_then_else(ge(4, 0), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 3, ARG7)), _if_then_else(le(compare_blocks_rows, 1), _if_then_else(False, 4, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))))
or_(le(_if_then_else(and_(True, True), _if_then_else(True, 4, 3), _if_then_else(False, 4, compare_blocks_rows)), _if_then_else(True, _if_then_else(True, ARG6, ARG6), compare_blocks_cols)), or_(or_(or_(True, True), and_(False, False)), or_(False, False)))
le(_if_then_else(le(1, 2), _if_then_else(True, zeros_diff_cols, 0), _if_then_else(True, zeros_diff_rows, 1)), _if_then_else(ge(ARG7, 4), _if_then_else(False, 4, ARG6), _if_then_else(False, zeros_diff_cols, 4)))
or_(ge(_if_then_else(and_(True, True), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(ge(1, ARG6), _if_then_else(True, 4, ARG7), _if_then_else(True, compare_blocks_cols, zeros_diff_cols))), and_(or_(or_(False, True), or_(True, False)), ge(_if_then_else(True, ARG7, zeros_diff_rows), _if_then_else(False, ones_diff_cols, ones_diff_cols))))
VAL TREES:
mul(mul(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, add(compare_blocks_rows, compare_blocks_rows))))
add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols)), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), add(add(add(add(mul(mul(mul(zeros_diff_rows, ones_diff_rows), mul(ones_diff_cols, mul(add(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_cols)))), compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))))))
mul(add(add(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows)), add(mul(mul(compare_blocks_cols, zeros_diff_rows), ones_diff_cols), mul(zeros_diff_cols, zeros_diff_rows))), add(mul(add(zeros_diff_rows, add(add(compare_blocks_rows, mul(compare_blocks_rows, ones_diff_rows)), mul(compare_blocks_rows, zeros_diff_rows))), compare_blocks_rows), mul(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(mul(mul(ones_diff_rows, zeros_diff_rows), mul(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), add(add(mul(add(add(zeros_diff_cols, ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), mul(zeros_diff_rows, add(ones_diff_cols, zeros_diff_rows))), add(compare_blocks_rows, ones_diff_cols)), compare_blocks_rows))
add(mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, ones_diff_cols))), add(mul(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols)), compare_blocks_rows)), add(mul(mul(ones_diff_cols, zeros_diff_cols), mul(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows))), add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_cols)))))
COND TREES:
ge(_if_then_else(or_(or_(and_(True, True), or_(False, True)), le(_if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, ARG6))), _if_then_else(ge(_if_then_else(False, ARG7, compare_blocks_rows), _if_then_else(True, ARG6, ones_diff_cols)), _if_then_else(le(3, zeros_diff_rows), _if_then_else(True, ARG6, 0), _if_then_else(True, compare_blocks_cols, zeros_diff_rows)), _if_then_else(ge(4, ARG6), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, zeros_diff_cols, ARG6))), _if_then_else(or_(ge(zeros_diff_cols, ones_diff_cols), le(compare_blocks_cols, 1)), _if_then_else(ge(compare_blocks_rows, ones_diff_rows), 2, _if_then_else(True, compare_blocks_cols, ones_diff_cols)), _if_then_else(ge(4, ones_diff_cols), _if_then_else(False, ARG7, 2), _if_then_else(False, compare_blocks_cols, ARG7)))), _if_then_else(or_(and_(le(3, compare_blocks_rows), ge(3, compare_blocks_cols)), ge(_if_then_else(False, 0, ARG7), _if_then_else(False, 2, ARG6))), _if_then_else(le(_if_then_else(False, 2, _if_then_else(ge(_if_then_else(False, 1, ones_diff_rows), _if_then_else(False, zeros_diff_rows, ones_diff_rows)), _if_then_else(le(0, zeros_diff_rows), _if_then_else(False, ARG6, compare_blocks_rows), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(or_(True, True), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(True, ARG6, compare_blocks_rows)))), _if_then_else(False, compare_blocks_rows, 3)), _if_then_else(or_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, 4)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(False, 0, 4))), _if_then_else(and_(True, ge(zeros_diff_cols, 1)), _if_then_else(or_(True, False), _if_then_else(False, ARG6, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(compare_blocks_cols, ones_diff_cols), _if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, 2)))))
and_(and_(and_(or_(True, True), ge(_if_then_else(and_(ge(_if_then_else(True, 3, ARG7), _if_then_else(True, ones_diff_cols, ones_diff_rows)), le(0, 0)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(True, 3, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, ones_diff_rows), _if_then_else(True, _if_then_else(True, 3, ones_diff_cols), zeros_diff_rows), _if_then_else(True, 1, zeros_diff_rows))), 1)), ge(_if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, ARG7))), or_(ge(_if_then_else(True, 1, ARG7), _if_then_else(False, ones_diff_rows, 4)), and_(True, True)))
ge(_if_then_else(le(_if_then_else(True, _if_then_else(or_(ge(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(le(ones_diff_cols, 4), 0, 0)), compare_blocks_cols), _if_then_else(False, 4, ones_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, ARG6, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(False, ARG7, ARG6))), _if_then_else(and_(and_(False, True), or_(True, False)), _if_then_else(le(3, 2), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(True, 2, 0)), _if_then_else(ge(ARG6, 2), _if_then_else(True, ARG6, ARG6), 2)))
le(_if_then_else(and_(False, True), _if_then_else(False, ARG7, ones_diff_rows), _if_then_else(True, 1, 2)), _if_then_else(False, _if_then_else(False, compare_blocks_cols, 2), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)))
le(_if_then_else(ge(_if_then_else(ge(_if_then_else(False, ones_diff_rows, 2), _if_then_else(True, 0, 2)), _if_then_else(False, ones_diff_rows, _if_then_else(False, 0, ARG6)), _if_then_else(False, 4, ARG6)), _if_then_else(ge(zeros_diff_cols, 3), _if_then_else(True, _if_then_else(True, compare_blocks_cols, compare_blocks_cols), zeros_diff_rows), _if_then_else(True, 2, _if_then_else(False, compare_blocks_cols, 0)))), _if_then_else(le(2, 0), zeros_diff_cols, 1), _if_then_else(False, _if_then_else(or_(True, False), _if_then_else(False, 2, 2), _if_then_else(False, 4, ARG6)), _if_then_else(True, 1, ARG7))), _if_then_else(and_(True, True), _if_then_else(False, _if_then_else(True, 4, 0), 2), _if_then_else(False, zeros_diff_rows, ARG6)))
VAL TREES:
mul(add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, zeros_diff_rows)), add(add(add(mul(zeros_diff_rows, add(ones_diff_rows, compare_blocks_cols)), mul(add(ones_diff_cols, ones_diff_rows), zeros_diff_cols)), add(add(ones_diff_rows, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(zeros_diff_cols, zeros_diff_rows)))
add(add(mul(add(zeros_diff_rows, ones_diff_rows), mul(compare_blocks_rows, compare_blocks_cols)), mul(mul(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_rows, zeros_diff_rows))), add(mul(add(zeros_diff_cols, mul(compare_blocks_rows, compare_blocks_cols)), mul(compare_blocks_rows, compare_blocks_rows)), add(add(ones_diff_cols, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_rows))))
mul(add(add(ones_diff_cols, add(mul(mul(add(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_rows)), ones_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), add(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, zeros_diff_rows)))), add(ones_diff_cols, compare_blocks_cols)), add(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), mul(mul(add(add(add(mul(add(zeros_diff_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(mul(ones_diff_cols, ones_diff_cols), zeros_diff_cols))), add(add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_rows)))), mul(mul(mul(add(zeros_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_rows, zeros_diff_rows))), mul(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, zeros_diff_rows)), mul(mul(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_cols, compare_blocks_rows))))), zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_cols)))
add(add(add(compare_blocks_cols, ones_diff_cols), mul(mul(ones_diff_cols, zeros_diff_cols), add(compare_blocks_rows, compare_blocks_rows))), add(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_rows)))
add(add(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), add(mul(zeros_diff_cols, zeros_diff_cols), mul(mul(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), zeros_diff_cols))), mul(mul(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_cols))))
COND TREES:
ge(_if_then_else(or_(or_(and_(True, True), or_(False, True)), le(_if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, ARG6))), _if_then_else(ge(_if_then_else(False, ARG7, compare_blocks_rows), _if_then_else(True, ARG6, ones_diff_cols)), _if_then_else(le(3, zeros_diff_rows), _if_then_else(True, ARG6, 0), _if_then_else(True, compare_blocks_cols, zeros_diff_rows)), _if_then_else(ge(4, ARG6), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, zeros_diff_cols, ARG6))), _if_then_else(or_(ge(zeros_diff_cols, ones_diff_cols), le(compare_blocks_cols, 1)), _if_then_else(ge(compare_blocks_rows, ones_diff_rows), 2, _if_then_else(True, compare_blocks_cols, ones_diff_cols)), _if_then_else(ge(4, ones_diff_cols), _if_then_else(False, ARG7, 2), _if_then_else(False, compare_blocks_cols, ARG7)))), _if_then_else(or_(and_(le(3, compare_blocks_rows), ge(3, compare_blocks_cols)), ge(_if_then_else(False, 0, ARG7), _if_then_else(False, 2, ARG6))), _if_then_else(le(_if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, 3)), _if_then_else(or_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, 4)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(False, 0, 4))), _if_then_else(and_(True, ge(zeros_diff_cols, 1)), _if_then_else(or_(True, False), _if_then_else(False, ARG6, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(compare_blocks_cols, ones_diff_cols), _if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, 2)))))
and_(and_(and_(or_(True, True), ge(zeros_diff_rows, 1)), ge(_if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, ARG7))), or_(ge(_if_then_else(True, 1, ARG7), _if_then_else(False, ones_diff_rows, 4)), and_(True, True)))
ge(_if_then_else(le(_if_then_else(True, _if_then_else(or_(ge(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(le(ones_diff_cols, 4), 0, 0)), compare_blocks_cols), _if_then_else(False, 4, ones_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, ARG6, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(False, ARG7, ARG6))), _if_then_else(and_(and_(False, True), or_(True, False)), _if_then_else(le(3, 2), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(True, 2, 0)), _if_then_else(ge(ARG6, 2), _if_then_else(True, ARG6, ARG6), 2)))
le(_if_then_else(and_(False, True), _if_then_else(False, ARG7, ones_diff_rows), _if_then_else(True, 1, 2)), _if_then_else(False, _if_then_else(False, compare_blocks_cols, 2), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)))
le(_if_then_else(and_(True, and_(True, True)), _if_then_else(le(2, 0), zeros_diff_cols, 1), _if_then_else(False, _if_then_else(or_(True, False), _if_then_else(False, 2, 2), _if_then_else(False, 4, ARG6)), _if_then_else(True, 1, ARG7))), _if_then_else(and_(True, True), _if_then_else(False, _if_then_else(True, 4, 0), 2), _if_then_else(False, zeros_diff_rows, ARG6)))
VAL TREES:
mul(add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, zeros_diff_rows)), add(add(add(mul(zeros_diff_rows, add(ones_diff_rows, compare_blocks_cols)), mul(add(ones_diff_cols, ones_diff_rows), zeros_diff_cols)), add(add(ones_diff_rows, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), add(ones_diff_rows, zeros_diff_rows)))
add(add(mul(add(zeros_diff_rows, ones_diff_rows), mul(compare_blocks_rows, compare_blocks_cols)), mul(mul(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_rows, zeros_diff_rows))), add(mul(add(zeros_diff_cols, mul(zeros_diff_cols, mul(add(ones_diff_rows, zeros_diff_cols), zeros_diff_rows))), mul(compare_blocks_rows, compare_blocks_rows)), add(add(ones_diff_cols, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_rows))))
mul(add(add(ones_diff_cols, add(mul(mul(add(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_rows)), ones_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), add(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, zeros_diff_rows)))), add(ones_diff_cols, compare_blocks_cols)), add(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), mul(mul(add(add(add(mul(add(zeros_diff_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_cols))), add(add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_rows)))), mul(mul(mul(add(zeros_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_rows, zeros_diff_rows))), mul(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, zeros_diff_rows)), mul(mul(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_cols, compare_blocks_rows))))), zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_cols)))
add(add(add(mul(add(mul(mul(compare_blocks_rows, mul(ones_diff_rows, compare_blocks_cols)), ones_diff_cols), add(ones_diff_cols, mul(zeros_diff_cols, ones_diff_cols))), add(add(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows))), ones_diff_cols), mul(mul(ones_diff_cols, zeros_diff_cols), add(compare_blocks_rows, compare_blocks_rows))), add(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_rows)))
add(add(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), add(mul(zeros_diff_cols, zeros_diff_cols), mul(mul(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), zeros_diff_cols))), mul(mul(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_cols))))
COND TREES:
ge(_if_then_else(le(_if_then_else(and_(ge(_if_then_else(ge(1, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), zeros_diff_cols), 0), or_(True, le(ARG7, compare_blocks_cols))), _if_then_else(ge(zeros_diff_cols, ARG7), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(True, 1, 4)), _if_then_else(ge(_if_then_else(False, 0, zeros_diff_cols), 3), _if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(True, 2, 3))), _if_then_else(True, 0, _if_then_else(True, compare_blocks_rows, ARG6))), _if_then_else(ge(compare_blocks_cols, 2), zeros_diff_rows, 0), _if_then_else(False, _if_then_else(False, zeros_diff_cols, 1), zeros_diff_rows)), _if_then_else(ge(ARG7, 3), _if_then_else(False, compare_blocks_cols, _if_then_else(True, _if_then_else(True, ARG7, 3), 3)), _if_then_else(True, ARG6, ARG6)))
ge(_if_then_else(or_(or_(le(ones_diff_rows, 4), le(1, zeros_diff_rows)), le(_if_then_else(False, 0, ARG6), _if_then_else(True, ones_diff_rows, 4))), _if_then_else(and_(and_(True, False), or_(False, False)), _if_then_else(or_(False, True), _if_then_else(False, 3, ARG6), _if_then_else(True, ones_diff_cols, 2)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(False, ARG6, compare_blocks_cols))), _if_then_else(and_(le(zeros_diff_cols, compare_blocks_rows), or_(False, True)), _if_then_else(le(ones_diff_rows, 3), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(True, ARG6, zeros_diff_rows)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(True, 3, ARG6), _if_then_else(True, 4, 3)))), _if_then_else(le(_if_then_else(le(compare_blocks_rows, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 4, ARG7)), _if_then_else(and_(True, True), _if_then_else(False, 4, 0), _if_then_else(False, ones_diff_rows, 3))), _if_then_else(and_(le(ARG6, ARG6), ge(2, 2)), _if_then_else(and_(True, False), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows))), _if_then_else(or_(ge(4, 2), ge(zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, ARG6, 1), _if_then_else(False, 0, 3)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4)))))
and_(ge(_if_then_else(le(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 0, ARG6), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(le(3, 3), _if_then_else(False, 1, 4), _if_then_else(False, 0, ones_diff_cols))), ge(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, 4), _if_then_else(False, zeros_diff_rows, compare_blocks_cols)), _if_then_else(ge(_if_then_else(False, 3, zeros_diff_rows), _if_then_else(and_(ge(_if_then_else(True, 3, ones_diff_rows), _if_then_else(True, compare_blocks_rows, 0)), le(_if_then_else(le(_if_then_else(le(_if_then_else(True, 3, ARG6), _if_then_else(False, 4, 3)), _if_then_else(le(3, compare_blocks_cols), _if_then_else(True, 0, ARG7), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, 3, compare_blocks_rows))), _if_then_else(le(_if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(True, 3, 0)), _if_then_else(le(zeros_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(True, ARG6, 3)), _if_then_else(ge(ones_diff_cols, ARG6), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(True, 2, compare_blocks_rows)))), _if_then_else(and_(ge(_if_then_else(False, 2, zeros_diff_cols), _if_then_else(False, 3, 4)), le(_if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(False, 4, 1))), _if_then_else(or_(le(0, ARG6), le(ARG7, ones_diff_cols)), _if_then_else(le(1, ARG6), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, 3, ones_diff_rows), _if_then_else(False, 4, compare_blocks_cols))), _if_then_else(or_(and_(False, True), or_(True, False)), _if_then_else(le(compare_blocks_rows, ones_diff_rows), _if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, ARG7, zeros_diff_rows)), _if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, ones_diff_rows)))), _if_then_else(ge(_if_then_else(ge(ARG7, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, 1, 2), _if_then_else(True, ones_diff_rows, 4))), _if_then_else(ge(_if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, ARG7, zeros_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, ARG6, 0), _if_then_else(True, 3, 1)), _if_then_else(le(zeros_diff_cols, ARG6), _if_then_else(True, ARG7, ones_diff_rows), _if_then_else(True, 1, 4))), _if_then_else(and_(le(4, 4), or_(True, False)), _if_then_else(or_(True, False), _if_then_else(False, ARG7, 0), _if_then_else(False, 3, 3)), _if_then_else(or_(False, False), _if_then_else(True, compare_blocks_cols, ARG6), _if_then_else(True, compare_blocks_cols, 2))))), _if_then_else(False, 3, ones_diff_rows))), zeros_diff_cols, 1)), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(True, compare_blocks_rows, ones_diff_rows))))
or_(and_(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(or_(True, True), _if_then_else(False, ARG6, 4), _if_then_else(True, 2, 3))), and_(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, _if_then_else(ge(_if_then_else(True, 2, 2), _if_then_else(True, 4, ARG7)), _if_then_else(ge(ARG6, 4), _if_then_else(True, 4, 2), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(ge(1, ARG6), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 1, 2))))), le(_if_then_else(True, 1, 2), _if_then_else(True, ARG7, compare_blocks_rows)))), or_(or_(and_(or_(True, False), ge(4, zeros_diff_rows)), le(_if_then_else(True, 4, _if_then_else(False, zeros_diff_cols, 2)), _if_then_else(False, 0, 0))), or_(ge(_if_then_else(True, ones_diff_cols, 0), _if_then_else(True, 0, 0)), and_(or_(False, False), le(ones_diff_rows, 4)))))
and_(le(_if_then_else(ge(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols, ones_diff_cols), _if_then_else(and_(False, False), 4, compare_blocks_cols)), ge(_if_then_else(and_(True, True), 1, zeros_diff_rows), _if_then_else(False, ARG6, _if_then_else(or_(True, True), 0, compare_blocks_rows))))
VAL TREES:
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(mul(compare_blocks_cols, ones_diff_rows), ones_diff_rows)))
mul(mul(mul(zeros_diff_cols, ones_diff_cols), mul(add(compare_blocks_cols, mul(ones_diff_cols, zeros_diff_cols)), add(zeros_diff_rows, compare_blocks_cols))), add(add(ones_diff_rows, zeros_diff_rows), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))), add(add(mul(mul(mul(zeros_diff_rows, ones_diff_rows), mul(ones_diff_cols, mul(add(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_cols)))), compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols))))
mul(add(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, add(compare_blocks_cols, zeros_diff_rows))), add(add(compare_blocks_cols, compare_blocks_rows), ones_diff_cols))
add(add(mul(add(add(mul(mul(ones_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows)), zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols))), mul(mul(mul(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_rows)))), add(add(add(mul(ones_diff_rows, mul(compare_blocks_rows, zeros_diff_cols)), add(ones_diff_cols, compare_blocks_cols)), add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), add(mul(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)))))
add(mul(add(mul(add(ones_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)), mul(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(mul(add(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), zeros_diff_cols)))
COND TREES:
or_(or_(and_(False, True), le(0, _if_then_else(and_(True, le(3, ARG7)), 1, 3))), or_(ge(compare_blocks_cols, zeros_diff_cols), or_(True, True)))
or_(le(_if_then_else(ge(_if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 3, 4)), _if_then_else(or_(ge(compare_blocks_cols, 3), False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 2))), _if_then_else(True, _if_then_else(ge(ARG6, 4), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)))), and_(or_(or_(and_(True, False), le(2, ones_diff_rows)), ge(_if_then_else(False, 4, 2), _if_then_else(True, 0, 1))), ge(_if_then_else(ge(4, 0), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 3, ARG7)), _if_then_else(le(compare_blocks_rows, 1), _if_then_else(False, 4, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))))
or_(le(zeros_diff_rows, _if_then_else(True, _if_then_else(True, ARG6, ARG6), compare_blocks_cols)), or_(or_(or_(True, True), and_(False, False)), or_(False, False)))
le(_if_then_else(le(1, 2), _if_then_else(False, zeros_diff_cols, 0), _if_then_else(True, zeros_diff_rows, 1)), _if_then_else(ge(ARG7, 4), _if_then_else(False, 4, ARG6), _if_then_else(False, zeros_diff_cols, 4)))
or_(ge(zeros_diff_rows, _if_then_else(ge(1, ARG6), _if_then_else(True, 4, ARG7), _if_then_else(True, compare_blocks_cols, zeros_diff_cols))), and_(or_(or_(False, True), or_(True, False)), ge(0, _if_then_else(False, ones_diff_cols, ones_diff_cols))))
VAL TREES:
mul(ones_diff_rows, add(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_cols)))
add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), mul(add(zeros_diff_cols, zeros_diff_rows), compare_blocks_rows)))
mul(add(add(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows)), add(mul(mul(ones_diff_cols, zeros_diff_rows), ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))), add(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), add(add(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)), compare_blocks_rows))
add(mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, ones_diff_cols))), add(mul(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)))), add(mul(add(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows))), add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(mul(zeros_diff_cols, compare_blocks_cols), zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))))
COND TREES:
or_(or_(and_(False, True), le(_if_then_else(ge(0, 1), zeros_diff_rows, 3), 1)), or_(ge(compare_blocks_cols, 4), or_(True, True)))
or_(le(_if_then_else(ge(_if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 3, 4)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 2))), _if_then_else(and_(and_(False, True), ge(4, 2)), _if_then_else(ge(ARG6, 4), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(and_(ge(_if_then_else(False, ARG7, zeros_diff_rows), _if_then_else(False, 3, 0)), le(_if_then_else(False, 0, ARG6), _if_then_else(True, ones_diff_rows, ARG6))), _if_then_else(le(_if_then_else(True, 3, compare_blocks_cols), _if_then_else(False, 3, 2)), _if_then_else(or_(True, False), _if_then_else(False, 2, ARG7), _if_then_else(True, ones_diff_cols, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(False, 0, 3), _if_then_else(True, compare_blocks_rows, 4))), _if_then_else(le(_if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, ones_diff_cols, ones_diff_cols)), _if_then_else(ge(ones_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_rows, 0), _if_then_else(False, ones_diff_rows, 0)), _if_then_else(and_(True, False), _if_then_else(False, 0, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))))), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)))), and_(or_(or_(and_(True, False), le(2, ones_diff_rows)), ge(_if_then_else(False, 4, 2), _if_then_else(True, 0, 1))), ge(_if_then_else(ge(4, 0), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 3, ARG7)), _if_then_else(le(compare_blocks_rows, 1), _if_then_else(False, 4, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))))
or_(le(_if_then_else(and_(True, True), _if_then_else(True, 4, 3), _if_then_else(False, 4, compare_blocks_cols)), _if_then_else(True, _if_then_else(True, ARG6, ARG6), compare_blocks_cols)), or_(or_(or_(True, True), and_(False, False)), or_(False, False)))
le(_if_then_else(False, _if_then_else(True, zeros_diff_cols, 0), _if_then_else(True, zeros_diff_rows, 1)), _if_then_else(ge(ARG7, 4), _if_then_else(False, 4, ARG6), _if_then_else(False, zeros_diff_cols, 4)))
or_(ge(_if_then_else(and_(True, True), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(ge(1, ARG6), _if_then_else(True, 4, ARG7), _if_then_else(True, compare_blocks_cols, zeros_diff_cols))), and_(or_(or_(False, True), or_(True, False)), ge(_if_then_else(True, ARG7, zeros_diff_rows), _if_then_else(False, _if_then_else(or_(le(_if_then_else(True, ARG7, zeros_diff_cols), _if_then_else(True, ones_diff_rows, 1)), ge(_if_then_else(False, compare_blocks_cols, 0), _if_then_else(False, 3, zeros_diff_cols))), _if_then_else(and_(or_(False, True), and_(False, True)), _if_then_else(le(1, ARG6), _if_then_else(True, 4, 3), _if_then_else(False, 4, zeros_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, ones_diff_rows, 3), _if_then_else(True, 3, compare_blocks_rows))), _if_then_else(ge(_if_then_else(False, 3, ones_diff_cols), _if_then_else(True, ones_diff_cols, ARG7)), _if_then_else(True, _if_then_else(False, zeros_diff_rows, 4), _if_then_else(False, compare_blocks_rows, ARG6)), _if_then_else(le(ARG6, compare_blocks_cols), _if_then_else(False, ones_diff_rows, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, ones_diff_cols)))), ones_diff_cols))))
VAL TREES:
mul(mul(add(ones_diff_cols, zeros_diff_cols), mul(add(ones_diff_rows, compare_blocks_cols), ones_diff_cols)), add(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_cols)))
add(add(zeros_diff_rows, compare_blocks_cols), add(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows)))
add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), zeros_diff_rows))
mul(add(add(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows)), add(mul(mul(compare_blocks_cols, zeros_diff_rows), ones_diff_cols), mul(ones_diff_cols, compare_blocks_cols))), add(mul(mul(add(mul(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(compare_blocks_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols))), add(ones_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_rows), mul(compare_blocks_cols, compare_blocks_rows))))
mul(mul(mul(mul(ones_diff_cols, mul(mul(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_cols)), add(compare_blocks_rows, zeros_diff_rows)), mul(add(add(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_cols, ones_diff_cols)), add(compare_blocks_cols, compare_blocks_rows)))), zeros_diff_cols), mul(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), add(add(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)), compare_blocks_rows))
add(mul(mul(mul(add(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), mul(compare_blocks_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_rows)), add(mul(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)))), mul(mul(mul(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_rows), mul(zeros_diff_cols, zeros_diff_cols))), add(mul(mul(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_cols)), add(mul(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_rows))))), add(add(compare_blocks_rows, compare_blocks_rows), add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))))
COND TREES:
le(_if_then_else(le(ones_diff_rows, ARG7), _if_then_else(and_(True, le(2, ARG7)), 1, 3), _if_then_else(le(_if_then_else(False, ARG6, 2), ARG7), 3, _if_then_else(ge(0, 1), zeros_diff_rows, 3))), _if_then_else(ge(_if_then_else(False, 4, zeros_diff_rows), compare_blocks_cols), _if_then_else(and_(False, False), 1, 0), _if_then_else(False, ARG7, _if_then_else(ge(0, ones_diff_rows), 4, zeros_diff_cols))))
le(_if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, ones_diff_rows, 4), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(and_(True, False), _if_then_else(True, 2, ARG6), _if_then_else(False, compare_blocks_rows, 3)))
le(_if_then_else(ge(2, compare_blocks_cols), _if_then_else(ge(_if_then_else(False, ARG6, 1), _if_then_else(True, ones_diff_rows, compare_blocks_cols)), compare_blocks_cols, 3), _if_then_else(True, ones_diff_cols, _if_then_else(and_(True, False), 0, 4))), 3)
ge(_if_then_else(and_(or_(True, False), and_(False, False)), _if_then_else(or_(False, False), _if_then_else(True, compare_blocks_cols, 2), _if_then_else(False, ARG7, zeros_diff_cols)), _if_then_else(le(compare_blocks_rows, ARG6), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(True, 0, zeros_diff_rows))), _if_then_else(or_(le(zeros_diff_rows, 2), ge(ones_diff_rows, ARG7)), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(False, 3, zeros_diff_cols)), _if_then_else(ge(4, 0), _if_then_else(le(1, 2), ones_diff_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_rows))))
le(_if_then_else(and_(True, or_(True, False)), _if_then_else(False, 0, zeros_diff_cols), _if_then_else(True, ARG6, 4)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(True, _if_then_else(False, 2, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols)), _if_then_else(True, 0, ARG6)))
VAL TREES:
mul(add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), add(zeros_diff_cols, zeros_diff_cols)), mul(add(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_rows))), mul(add(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), mul(zeros_diff_rows, zeros_diff_cols))), add(mul(add(add(ones_diff_cols, ones_diff_cols), mul(add(ones_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols))), mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_rows))), add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows)), mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_rows)))))
add(mul(add(compare_blocks_cols, compare_blocks_cols), mul(add(mul(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_rows)), ones_diff_rows)), add(add(ones_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)))
add(add(add(zeros_diff_rows, compare_blocks_cols), add(mul(add(zeros_diff_rows, add(mul(ones_diff_rows, zeros_diff_cols), mul(add(ones_diff_rows, zeros_diff_rows), compare_blocks_rows))), mul(mul(compare_blocks_cols, compare_blocks_rows), ones_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), mul(add(ones_diff_rows, compare_blocks_cols), add(mul(compare_blocks_cols, zeros_diff_rows), compare_blocks_cols))))), add(mul(compare_blocks_rows, compare_blocks_rows), mul(mul(ones_diff_rows, zeros_diff_cols), compare_blocks_cols)))
mul(add(mul(zeros_diff_cols, ones_diff_rows), add(compare_blocks_cols, add(add(mul(mul(ones_diff_rows, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_cols)), mul(add(ones_diff_cols, zeros_diff_rows), mul(compare_blocks_rows, ones_diff_cols))), mul(add(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols)), mul(add(ones_diff_rows, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_rows)))))), mul(mul(zeros_diff_cols, compare_blocks_cols), add(add(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows)), add(mul(mul(compare_blocks_cols, zeros_diff_rows), ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)))))
add(add(add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows)), add(zeros_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, mul(mul(mul(mul(zeros_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)), add(compare_blocks_rows, zeros_diff_rows)), mul(add(add(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_cols, ones_diff_cols)), add(compare_blocks_cols, compare_blocks_rows)))), add(add(compare_blocks_cols, compare_blocks_rows), zeros_diff_rows)))
mul(mul(mul(add(mul(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols)), mul(mul(mul(zeros_diff_cols, zeros_diff_cols), ones_diff_rows), add(compare_blocks_rows, compare_blocks_rows))), add(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_rows, zeros_diff_rows)))), add(mul(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), add(mul(mul(ones_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(mul(ones_diff_rows, ones_diff_rows), add(compare_blocks_rows, ones_diff_rows))))
COND TREES:
ge(_if_then_else(le(_if_then_else(le(ones_diff_cols, 2), 4, _if_then_else(True, ones_diff_cols, 4)), _if_then_else(True, 0, _if_then_else(True, compare_blocks_rows, ARG6))), _if_then_else(ge(compare_blocks_cols, 2), _if_then_else(and_(False, False), ARG7, ARG6), 0), _if_then_else(False, _if_then_else(False, zeros_diff_cols, 1), zeros_diff_rows)), _if_then_else(ge(ARG7, 3), _if_then_else(False, compare_blocks_cols, _if_then_else(True, _if_then_else(True, ARG7, 3), 3)), _if_then_else(True, 3, ARG6)))
ge(_if_then_else(or_(or_(le(ones_diff_rows, 4), le(1, zeros_diff_rows)), le(_if_then_else(False, 0, ARG6), _if_then_else(True, ones_diff_rows, 4))), _if_then_else(and_(and_(True, False), or_(False, False)), _if_then_else(or_(False, True), _if_then_else(False, 3, ARG6), _if_then_else(True, ones_diff_cols, 2)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(False, ARG6, compare_blocks_cols))), _if_then_else(and_(le(zeros_diff_cols, compare_blocks_rows), or_(False, True)), _if_then_else(le(_if_then_else(True, ones_diff_rows, zeros_diff_cols), 3), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(True, ARG6, zeros_diff_rows)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(True, 3, ARG6), _if_then_else(True, 4, 3)))), _if_then_else(le(_if_then_else(le(compare_blocks_rows, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 4, ARG7)), _if_then_else(and_(True, True), _if_then_else(False, 4, 0), _if_then_else(False, ones_diff_rows, 3))), _if_then_else(and_(le(ARG6, ARG6), ge(2, 2)), _if_then_else(and_(True, False), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows))), _if_then_else(or_(ge(4, 2), ge(zeros_diff_cols, 0)), _if_then_else(or_(True, False), _if_then_else(False, ARG6, 1), _if_then_else(False, 0, 3)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4)))))
and_(ge(_if_then_else(le(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 0, ARG6), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(le(3, 3), _if_then_else(False, 1, 4), _if_then_else(False, 0, ones_diff_cols))), ge(_if_then_else(or_(True, False), _if_then_else(or_(True, True), ones_diff_cols, 4), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(True, compare_blocks_rows, ones_diff_rows))))
or_(and_(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(or_(True, True), _if_then_else(False, ARG6, compare_blocks_rows), _if_then_else(True, 2, 3))), and_(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), le(_if_then_else(True, 1, 2), _if_then_else(True, ARG7, compare_blocks_rows)))), or_(or_(and_(or_(True, False), ge(4, zeros_diff_rows)), le(_if_then_else(True, 4, ARG7), _if_then_else(False, 0, 0))), or_(ge(_if_then_else(True, ones_diff_cols, 0), _if_then_else(True, 0, 0)), and_(or_(False, False), le(ones_diff_rows, 4)))))
and_(le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(le(ones_diff_rows, 1), 4, compare_blocks_cols)), ge(_if_then_else(and_(True, True), 1, zeros_diff_rows), _if_then_else(False, ARG6, _if_then_else(True, 0, compare_blocks_rows))))
VAL TREES:
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, compare_blocks_rows)), zeros_diff_cols)
mul(mul(zeros_diff_cols, mul(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, add(zeros_diff_cols, mul(ones_diff_cols, mul(compare_blocks_cols, zeros_diff_rows)))), add(zeros_diff_rows, zeros_diff_rows)))
mul(zeros_diff_cols, add(add(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(ones_diff_cols, mul(ones_diff_cols, compare_blocks_cols)), mul(ones_diff_rows, add(ones_diff_rows, zeros_diff_rows)))))
mul(add(mul(zeros_diff_rows, mul(mul(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols))), add(zeros_diff_rows, add(ones_diff_cols, zeros_diff_rows))), add(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, zeros_diff_rows)))
add(add(mul(add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols))), mul(mul(mul(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), mul(ones_diff_rows, zeros_diff_rows))), add(add(add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), add(mul(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_rows, mul(ones_diff_cols, ones_diff_cols))), mul(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)))))
add(mul(add(mul(compare_blocks_rows, add(add(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows)), mul(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(mul(add(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(mul(mul(add(mul(zeros_diff_cols, ones_diff_cols), compare_blocks_cols), add(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows))), mul(mul(mul(compare_blocks_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, compare_blocks_rows))), compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), compare_blocks_cols), mul(mul(compare_blocks_rows, add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_rows)))))
COND TREES:
or_(ge(2, 1), ge(_if_then_else(le(_if_then_else(le(ARG7, zeros_diff_rows), _if_then_else(True, ARG6, zeros_diff_cols), _if_then_else(False, 1, 2)), _if_then_else(le(compare_blocks_cols, 0), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, zeros_diff_rows))), _if_then_else(False, 2, ARG6), _if_then_else(True, ARG6, ARG6)), _if_then_else(le(1, 1), _if_then_else(False, ones_diff_rows, ARG7), _if_then_else(False, zeros_diff_cols, 0))))
and_(or_(ge(4, 1), and_(and_(False, False), True)), le(_if_then_else(le(_if_then_else(or_(and_(False, True), ge(3, ARG7)), _if_then_else(ge(0, ARG7), _if_then_else(True, ARG7, zeros_diff_rows), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(4, zeros_diff_cols), _if_then_else(True, 1, 1), _if_then_else(False, 4, zeros_diff_cols))), _if_then_else(or_(ge(4, compare_blocks_rows), or_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ARG6, ARG7), _if_then_else(True, zeros_diff_rows, 4)), _if_then_else(and_(False, False), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, 3)))), _if_then_else(le(_if_then_else(or_(True, True), _if_then_else(True, ARG7, 0), _if_then_else(True, ARG7, compare_blocks_rows)), _if_then_else(ge(0, 0), _if_then_else(False, 0, 1), ones_diff_rows)), _if_then_else(and_(and_(True, False), or_(True, True)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_cols, 2), _if_then_else(True, compare_blocks_rows, 3)), _if_then_else(or_(False, False), _if_then_else(False, 0, ones_diff_cols), _if_then_else(True, 2, ones_diff_rows))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, 3), _if_then_else(False, ARG7, ARG6)), _if_then_else(ge(2, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, 3, compare_blocks_cols)), _if_then_else(le(compare_blocks_cols, 2), _if_then_else(False, 4, 0), _if_then_else(False, 3, ARG6)))), _if_then_else(ge(_if_then_else(or_(True, False), _if_then_else(False, 1, zeros_diff_rows), 1), _if_then_else(le(compare_blocks_rows, 2), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, 4))), _if_then_else(or_(le(compare_blocks_cols, ARG7), ge(3, zeros_diff_cols)), _if_then_else(ge(1, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, ones_diff_rows)), _if_then_else(ge(ARG6, ARG6), _if_then_else(True, zeros_diff_rows, ARG6), _if_then_else(True, compare_blocks_cols, compare_blocks_rows))), _if_then_else(le(_if_then_else(False, ARG7, 4), _if_then_else(True, 2, ones_diff_rows)), _if_then_else(and_(True, False), _if_then_else(True, zeros_diff_cols, ones_diff_cols), _if_then_else(False, 1, compare_blocks_rows)), _if_then_else(le(2, ones_diff_cols), _if_then_else(False, 1, 2), _if_then_else(False, compare_blocks_cols, ones_diff_rows))))), _if_then_else(True, zeros_diff_cols, 0)))
le(_if_then_else(or_(ge(compare_blocks_cols, ones_diff_cols), le(compare_blocks_cols, ones_diff_rows)), _if_then_else(False, ARG7, compare_blocks_rows), _if_then_else(le(0, 4), 0, 0)), _if_then_else(le(zeros_diff_rows, 0), _if_then_else(ge(ones_diff_rows, 2), ones_diff_cols, ARG6), _if_then_else(True, 1, compare_blocks_rows)))
or_(ge(_if_then_else(False, ARG7, 3), _if_then_else(True, ARG7, ARG6)), and_(or_(and_(le(_if_then_else(ge(0, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, 0), _if_then_else(True, ones_diff_rows, ARG7)), _if_then_else(and_(False, False), _if_then_else(False, 4, 4), _if_then_else(False, ARG7, ARG7))), le(_if_then_else(or_(False, False), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(le(2, 2), _if_then_else(True, 1, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, ARG6)))), ge(_if_then_else(le(_if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(True, zeros_diff_cols, ones_diff_rows)), _if_then_else(and_(or_(ge(_if_then_else(True, ones_diff_cols, 0), _if_then_else(True, 0, 0)), and_(or_(False, False), le(ones_diff_rows, 4))), True), _if_then_else(False, 4, 0), _if_then_else(False, ARG6, 0)), _if_then_else(ge(2, 1), _if_then_else(False, compare_blocks_rows, 2), _if_then_else(False, 1, ARG7))), _if_then_else(le(_if_then_else(True, compare_blocks_rows, 0), _if_then_else(True, 2, 0)), _if_then_else(or_(True, False), _if_then_else(True, 2, ARG6), _if_then_else(True, 0, 3)), _if_then_else(le(zeros_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 4))))), or_(False, and_(False, True))))
ge(_if_then_else(and_(True, le(ones_diff_cols, _if_then_else(and_(and_(True, True), le(4, 2)), _if_then_else(or_(True, False), _if_then_else(False, _if_then_else(and_(False, and_(True, True)), _if_then_else(le(2, 0), zeros_diff_cols, 1), _if_then_else(False, zeros_diff_rows, _if_then_else(True, 1, ARG7))), 2), _if_then_else(False, 4, ARG6)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_rows, ARG7), _if_then_else(ge(_if_then_else(and_(True, True), 1, zeros_diff_rows), _if_then_else(False, ARG6, _if_then_else(or_(True, True), 0, compare_blocks_rows))), 2, 2))))), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, zeros_diff_cols), 3), _if_then_else(True, 4, ARG6)), _if_then_else(and_(True, True), _if_then_else(True, compare_blocks_rows, zeros_diff_rows), _if_then_else(True, ARG7, 1)))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_rows), add(mul(zeros_diff_cols, ones_diff_rows), compare_blocks_cols)), add(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)))
add(add(ones_diff_rows, add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, compare_blocks_cols))), mul(mul(mul(ones_diff_cols, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows))))
mul(mul(mul(add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_cols, add(ones_diff_rows, zeros_diff_cols)), add(ones_diff_rows, ones_diff_rows))), mul(mul(add(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_cols, ones_diff_cols)))), add(mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_rows))), mul(add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols)))))
add(mul(mul(add(ones_diff_rows, ones_diff_cols), compare_blocks_cols), mul(compare_blocks_rows, compare_blocks_rows)), mul(mul(compare_blocks_rows, ones_diff_rows), add(add(ones_diff_rows, mul(mul(ones_diff_rows, ones_diff_cols), ones_diff_cols)), add(compare_blocks_rows, compare_blocks_cols))))
add(mul(add(mul(mul(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, zeros_diff_cols)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_cols))), mul(mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_rows, compare_blocks_rows)), add(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_cols)))), add(add(mul(mul(ones_diff_cols, ones_diff_rows), mul(ones_diff_rows, ones_diff_rows)), add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows))), add(add(mul(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, zeros_diff_cols)), add(add(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)))))
mul(mul(mul(mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), mul(add(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_rows, ones_diff_rows))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(mul(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)))), mul(add(mul(mul(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)))))
COND TREES:
or_(ge(2, 1), ge(_if_then_else(le(_if_then_else(le(ARG7, zeros_diff_rows), _if_then_else(True, ARG6, zeros_diff_cols), _if_then_else(True, 1, 2)), _if_then_else(le(compare_blocks_cols, 0), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, zeros_diff_rows))), _if_then_else(False, 2, ARG6), _if_then_else(True, 3, ARG6)), _if_then_else(le(1, 1), 2, _if_then_else(False, zeros_diff_cols, 0))))
and_(or_(ge(4, 1), and_(or_(ge(4, 1), and_(True, True)), True)), le(_if_then_else(le(_if_then_else(or_(and_(False, True), ge(3, ARG7)), _if_then_else(ge(0, ARG7), _if_then_else(True, ARG7, zeros_diff_rows), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(4, zeros_diff_cols), _if_then_else(True, 1, 1), _if_then_else(False, 4, zeros_diff_cols))), _if_then_else(or_(ge(4, compare_blocks_rows), or_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ARG6, ARG7), _if_then_else(True, zeros_diff_rows, 4)), _if_then_else(and_(False, False), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, 3)))), _if_then_else(le(_if_then_else(or_(True, True), _if_then_else(True, ARG7, 0), _if_then_else(True, ARG7, compare_blocks_rows)), _if_then_else(ge(0, 0), _if_then_else(False, 0, 1), _if_then_else(True, ones_diff_rows, zeros_diff_cols))), _if_then_else(and_(and_(True, False), or_(True, True)), _if_then_else(or_(True, False), _if_then_else(True, 3, 2), _if_then_else(True, compare_blocks_rows, 3)), _if_then_else(or_(False, False), _if_then_else(False, 0, ones_diff_cols), _if_then_else(True, 2, ones_diff_rows))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, 3), _if_then_else(False, ARG7, ARG6)), _if_then_else(ge(2, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, 3, compare_blocks_cols)), _if_then_else(le(compare_blocks_cols, 2), _if_then_else(False, 4, 0), _if_then_else(False, 3, ARG6)))), _if_then_else(ge(_if_then_else(or_(True, False), _if_then_else(False, 1, zeros_diff_rows), 1), _if_then_else(le(compare_blocks_rows, 2), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, 4))), _if_then_else(or_(le(compare_blocks_cols, ARG7), ge(3, zeros_diff_cols)), _if_then_else(ge(1, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, ones_diff_rows)), _if_then_else(ge(ARG6, ARG6), _if_then_else(True, zeros_diff_rows, ARG6), _if_then_else(True, compare_blocks_cols, compare_blocks_rows))), _if_then_else(le(_if_then_else(False, ARG7, 4), _if_then_else(True, 2, ones_diff_rows)), _if_then_else(and_(True, False), _if_then_else(True, zeros_diff_cols, ones_diff_cols), _if_then_else(False, 1, compare_blocks_rows)), _if_then_else(le(2, ones_diff_cols), _if_then_else(False, 1, 2), _if_then_else(False, compare_blocks_cols, ones_diff_rows))))), _if_then_else(True, zeros_diff_cols, 0)))
le(_if_then_else(or_(ge(compare_blocks_cols, ones_diff_cols), le(zeros_diff_rows, ones_diff_rows)), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(le(0, 4), 0, 0)), _if_then_else(le(zeros_diff_rows, 0), _if_then_else(ge(ones_diff_rows, 2), ones_diff_cols, ARG6), _if_then_else(True, 1, compare_blocks_rows)))
or_(ge(_if_then_else(False, ARG7, 3), _if_then_else(True, ARG7, ARG6)), and_(or_(and_(le(_if_then_else(ge(0, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, 0), _if_then_else(True, _if_then_else(False, zeros_diff_rows, compare_blocks_rows), ARG7)), _if_then_else(and_(False, False), _if_then_else(False, 4, 4), _if_then_else(False, ARG7, ARG7))), le(_if_then_else(or_(False, False), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(le(2, 2), _if_then_else(True, 1, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, ARG6)))), ge(_if_then_else(le(_if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(True, zeros_diff_cols, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(False, 4, 0), _if_then_else(False, ARG6, 0)), _if_then_else(ge(2, 1), _if_then_else(False, compare_blocks_rows, 2), _if_then_else(False, 1, ARG7))), _if_then_else(le(_if_then_else(True, compare_blocks_rows, 0), _if_then_else(True, 2, 0)), _if_then_else(or_(True, False), _if_then_else(True, 2, ARG6), _if_then_else(True, 0, 3)), _if_then_else(le(zeros_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 4))))), or_(False, and_(False, True))))
ge(_if_then_else(and_(True, le(ones_diff_cols, _if_then_else(and_(and_(True, True), le(4, 2)), _if_then_else(or_(True, False), _if_then_else(False, _if_then_else(and_(False, and_(True, True)), _if_then_else(le(2, 0), zeros_diff_cols, 1), _if_then_else(False, zeros_diff_rows, _if_then_else(True, 1, ARG7))), 2), _if_then_else(False, 4, ARG6)), _if_then_else(le(ones_diff_rows, 1), _if_then_else(False, zeros_diff_rows, ARG7), _if_then_else(False, 2, 2))))), _if_then_else(and_(False, True), _if_then_else(ge(_if_then_else(and_(True, True), 1, zeros_diff_rows), _if_then_else(False, ARG6, _if_then_else(True, 0, compare_blocks_rows))), zeros_diff_rows, zeros_diff_cols), 3), _if_then_else(True, 4, ARG6)), _if_then_else(and_(True, True), _if_then_else(True, compare_blocks_rows, zeros_diff_rows), _if_then_else(True, ARG7, 1)))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_rows), add(mul(zeros_diff_cols, ones_diff_rows), compare_blocks_cols)), add(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)))
add(add(ones_diff_rows, add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, compare_blocks_cols))), mul(mul(mul(ones_diff_cols, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows))))
mul(mul(mul(add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_cols, add(ones_diff_rows, zeros_diff_cols)), add(ones_diff_rows, ones_diff_rows))), mul(mul(add(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_cols, ones_diff_cols)))), add(mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_rows))), mul(add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols)))))
add(mul(mul(add(ones_diff_rows, ones_diff_cols), compare_blocks_cols), mul(compare_blocks_rows, compare_blocks_rows)), mul(mul(compare_blocks_rows, ones_diff_rows), add(add(ones_diff_rows, mul(mul(ones_diff_rows, ones_diff_cols), ones_diff_cols)), add(compare_blocks_rows, compare_blocks_cols))))
add(mul(add(mul(mul(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, zeros_diff_cols)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_cols))), mul(mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_rows, compare_blocks_rows)), add(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_cols)))), add(add(mul(mul(ones_diff_cols, ones_diff_rows), mul(ones_diff_rows, ones_diff_rows)), add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows))), add(add(mul(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, zeros_diff_cols)), add(add(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)))))
mul(mul(mul(mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), mul(add(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_rows, ones_diff_rows))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(mul(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)))), mul(add(mul(mul(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)))))
COND TREES:
ge(_if_then_else(le(_if_then_else(le(ones_diff_cols, 2), ones_diff_cols, _if_then_else(True, 4, compare_blocks_rows)), _if_then_else(False, 0, _if_then_else(True, compare_blocks_rows, ARG6))), _if_then_else(ge(compare_blocks_cols, 2), _if_then_else(and_(False, False), ARG7, ARG6), 0), _if_then_else(False, _if_then_else(False, zeros_diff_cols, 1), zeros_diff_rows)), _if_then_else(ge(ARG7, 3), _if_then_else(False, compare_blocks_cols, _if_then_else(True, _if_then_else(True, _if_then_else(False, 0, zeros_diff_rows), 3), 3)), _if_then_else(True, ARG6, ARG6)))
ge(_if_then_else(or_(or_(le(ones_diff_rows, 4), le(1, zeros_diff_rows)), le(_if_then_else(False, 0, ARG6), _if_then_else(True, ones_diff_rows, 4))), _if_then_else(and_(and_(True, False), or_(False, False)), _if_then_else(or_(False, True), _if_then_else(False, 3, ARG6), _if_then_else(True, ones_diff_cols, 2)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(False, ARG6, compare_blocks_cols))), _if_then_else(and_(le(zeros_diff_cols, compare_blocks_rows), or_(False, True)), _if_then_else(le(ones_diff_rows, 3), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(True, ARG6, zeros_diff_rows)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(True, 3, ARG6), _if_then_else(True, 4, 3)))), _if_then_else(le(_if_then_else(le(compare_blocks_rows, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 4, ARG7)), _if_then_else(and_(True, True), _if_then_else(False, 4, 0), _if_then_else(False, ones_diff_rows, 3))), _if_then_else(False, _if_then_else(and_(True, False), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows))), _if_then_else(or_(ge(ARG7, 2), ge(zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, ARG6, 1), _if_then_else(False, 0, 3)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4)))))
and_(ge(_if_then_else(le(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 0, ARG6), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(le(3, 3), _if_then_else(False, 1, 4), _if_then_else(False, 0, ones_diff_cols))), ge(_if_then_else(or_(False, and_(or_(or_(False, True), le(3, zeros_diff_cols)), le(_if_then_else(False, ones_diff_rows, 1), _if_then_else(True, ones_diff_rows, ones_diff_cols)))), _if_then_else(or_(ge(compare_blocks_cols, ones_diff_cols), or_(False, True)), ones_diff_cols, 4), _if_then_else(False, zeros_diff_rows, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(True, compare_blocks_rows, ones_diff_rows))))
or_(and_(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(or_(True, True), _if_then_else(False, ARG6, 4), _if_then_else(True, 2, 3))), and_(ge(compare_blocks_cols, _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), le(_if_then_else(True, 1, 2), _if_then_else(True, ARG7, compare_blocks_rows)))), or_(or_(and_(or_(True, False), ge(4, zeros_diff_rows)), le(_if_then_else(True, 4, ARG7), _if_then_else(False, 0, 0))), or_(ge(_if_then_else(True, ones_diff_cols, 0), _if_then_else(True, 0, 0)), and_(or_(False, False), and_(False, True)))))
and_(le(_if_then_else(ge(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols, ones_diff_cols), _if_then_else(and_(True, False), _if_then_else(and_(and_(True, False), or_(False, False)), _if_then_else(le(ARG6, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 2), _if_then_else(True, ones_diff_rows, 3)), _if_then_else(or_(True, False), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(False, zeros_diff_rows, 3))), compare_blocks_cols)), ge(_if_then_else(and_(True, True), 1, zeros_diff_rows), _if_then_else(False, ARG6, _if_then_else(True, 0, compare_blocks_rows))))
VAL TREES:
mul(zeros_diff_cols, mul(add(ones_diff_cols, mul(ones_diff_rows, compare_blocks_rows)), mul(ones_diff_rows, zeros_diff_rows)))
mul(mul(zeros_diff_cols, mul(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, add(add(compare_blocks_cols, compare_blocks_cols), zeros_diff_cols)), add(zeros_diff_rows, zeros_diff_rows)))
mul(compare_blocks_cols, add(add(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, add(ones_diff_rows, zeros_diff_rows)))))
mul(add(mul(ones_diff_cols, ones_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, zeros_diff_rows)))
add(add(mul(add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols))), mul(mul(mul(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), mul(ones_diff_rows, zeros_diff_rows))), add(add(add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, compare_blocks_cols)), add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), add(mul(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)))))
add(mul(add(mul(compare_blocks_rows, add(add(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows)), mul(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(mul(add(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_rows)))))
COND TREES:
or_(or_(and_(False, True), le(0, _if_then_else(and_(True, le(2, ARG7)), 1, 3))), or_(ge(compare_blocks_cols, zeros_diff_cols), or_(True, True)))
or_(le(_if_then_else(ge(_if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 3, 4)), _if_then_else(or_(ge(compare_blocks_cols, 3), False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 2))), _if_then_else(and_(and_(False, True), ge(4, 2)), _if_then_else(ge(ARG6, 4), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)))), and_(or_(or_(and_(True, False), le(2, ones_diff_rows)), ge(_if_then_else(False, 4, 2), _if_then_else(True, 0, 1))), ge(_if_then_else(ge(4, 0), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 3, ARG7)), _if_then_else(le(compare_blocks_rows, 1), _if_then_else(False, 4, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))))
or_(le(_if_then_else(and_(True, True), _if_then_else(True, 4, 3), _if_then_else(le(_if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, ones_diff_cols)), 4, compare_blocks_rows)), _if_then_else(True, _if_then_else(True, ARG6, ARG6), compare_blocks_cols)), or_(or_(or_(True, True), and_(False, False)), or_(False, False)))
le(_if_then_else(le(1, 2), _if_then_else(False, zeros_diff_cols, 0), _if_then_else(True, zeros_diff_rows, 1)), _if_then_else(ge(ARG7, 4), _if_then_else(False, 4, ARG6), _if_then_else(False, zeros_diff_cols, 4)))
or_(ge(_if_then_else(and_(True, True), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(ge(1, ARG6), _if_then_else(True, 4, ARG7), _if_then_else(True, compare_blocks_cols, zeros_diff_cols))), and_(or_(or_(False, True), or_(True, False)), ge(0, _if_then_else(False, ones_diff_cols, ones_diff_cols))))
VAL TREES:
mul(ones_diff_rows, add(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_cols)))
add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, mul(ones_diff_cols, compare_blocks_cols))))
add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), mul(add(zeros_diff_cols, compare_blocks_cols), compare_blocks_rows)))
mul(add(add(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows)), add(mul(mul(ones_diff_cols, zeros_diff_rows), ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))), add(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(add(add(zeros_diff_rows, add(compare_blocks_cols, zeros_diff_rows)), compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(add(mul(ones_diff_rows, mul(compare_blocks_cols, zeros_diff_cols)), add(ones_diff_cols, compare_blocks_cols)), add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols)))), add(add(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)), compare_blocks_rows))
add(mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, ones_diff_cols))), add(mul(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)))), add(mul(add(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows))), add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(mul(zeros_diff_cols, compare_blocks_cols), zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))))
COND TREES:
ge(_if_then_else(le(_if_then_else(le(ones_diff_cols, 2), ones_diff_cols, _if_then_else(True, 4, compare_blocks_rows)), _if_then_else(False, 0, _if_then_else(True, compare_blocks_rows, ARG6))), _if_then_else(ge(compare_blocks_cols, 2), _if_then_else(and_(False, False), ARG7, ARG6), 0), _if_then_else(False, _if_then_else(False, zeros_diff_cols, 1), zeros_diff_rows)), _if_then_else(ge(ARG7, 3), _if_then_else(False, compare_blocks_cols, _if_then_else(True, _if_then_else(True, ARG7, 3), 3)), _if_then_else(True, ARG6, ARG6)))
ge(_if_then_else(or_(or_(le(ones_diff_rows, 4), le(1, zeros_diff_rows)), le(_if_then_else(False, 0, ARG6), _if_then_else(True, ones_diff_rows, 4))), _if_then_else(and_(and_(True, False), or_(False, False)), _if_then_else(or_(False, True), _if_then_else(False, 3, ARG6), _if_then_else(True, ones_diff_cols, 2)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(False, ARG6, compare_blocks_cols))), _if_then_else(and_(le(zeros_diff_cols, compare_blocks_rows), or_(False, True)), _if_then_else(le(ones_diff_rows, 3), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(True, ARG6, zeros_diff_rows)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(True, 3, ARG6), _if_then_else(True, 4, 3)))), _if_then_else(le(_if_then_else(le(compare_blocks_rows, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 4, ARG7)), _if_then_else(and_(True, True), _if_then_else(False, 4, 0), _if_then_else(False, ones_diff_rows, 3))), _if_then_else(False, _if_then_else(and_(True, False), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows))), _if_then_else(or_(ge(4, 2), ge(zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, ARG6, 1), _if_then_else(False, 0, 3)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4)))))
and_(ge(_if_then_else(le(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 0, ARG6), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(le(3, 3), _if_then_else(False, 1, 4), _if_then_else(False, 0, ones_diff_cols))), ge(_if_then_else(or_(False, False), _if_then_else(True, ones_diff_cols, 4), _if_then_else(False, zeros_diff_rows, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(True, compare_blocks_rows, ones_diff_rows))))
or_(and_(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(or_(True, True), _if_then_else(False, ARG6, 4), _if_then_else(True, 2, 3))), and_(ge(compare_blocks_cols, _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), le(_if_then_else(True, 1, 2), _if_then_else(True, ARG7, compare_blocks_rows)))), or_(or_(and_(or_(True, False), ge(4, zeros_diff_rows)), le(_if_then_else(True, 4, ARG7), _if_then_else(False, 0, 0))), or_(ge(_if_then_else(True, ones_diff_cols, 0), _if_then_else(True, 0, 0)), and_(or_(False, False), and_(False, True)))))
and_(le(_if_then_else(ge(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols, ones_diff_cols), _if_then_else(and_(True, False), 4, compare_blocks_cols)), ge(_if_then_else(and_(True, True), 1, zeros_diff_rows), _if_then_else(False, ARG6, _if_then_else(True, 0, compare_blocks_rows))))
VAL TREES:
mul(zeros_diff_cols, mul(add(ones_diff_cols, mul(ones_diff_rows, compare_blocks_rows)), mul(ones_diff_rows, zeros_diff_rows)))
mul(mul(zeros_diff_cols, mul(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, add(add(compare_blocks_cols, compare_blocks_cols), zeros_diff_cols)), add(zeros_diff_rows, zeros_diff_rows)))
mul(compare_blocks_cols, add(add(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, add(ones_diff_rows, zeros_diff_rows)))))
mul(add(mul(ones_diff_cols, ones_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, zeros_diff_rows)))
add(add(mul(add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols))), mul(mul(mul(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), mul(ones_diff_rows, zeros_diff_rows))), add(add(add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, compare_blocks_cols)), add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), add(mul(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)))))
add(mul(add(mul(compare_blocks_rows, add(add(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows)), mul(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(mul(add(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_rows)))))
COND TREES:
or_(or_(and_(False, True), le(0, 1)), or_(ge(compare_blocks_cols, 4), or_(True, True)))
or_(le(_if_then_else(ge(_if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 3, 4)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 2))), _if_then_else(and_(and_(False, True), ge(4, 2)), _if_then_else(ge(ARG6, 4), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)))), and_(or_(or_(and_(True, False), le(2, ones_diff_rows)), ge(_if_then_else(False, 4, 2), _if_then_else(True, 0, 1))), ge(_if_then_else(ge(4, 0), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 3, ARG7)), _if_then_else(le(compare_blocks_rows, 1), _if_then_else(False, 4, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))))
or_(le(_if_then_else(and_(True, True), _if_then_else(True, 4, 3), _if_then_else(False, 4, compare_blocks_rows)), _if_then_else(True, _if_then_else(True, ARG6, ARG6), compare_blocks_cols)), or_(or_(or_(True, True), and_(False, False)), or_(False, False)))
le(_if_then_else(and_(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(or_(True, True), _if_then_else(False, ARG6, 4), _if_then_else(True, 2, 3))), and_(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), le(_if_then_else(True, 1, 2), _if_then_else(True, ARG7, compare_blocks_rows)))), _if_then_else(True, zeros_diff_cols, 0), _if_then_else(True, zeros_diff_rows, 1)), _if_then_else(ge(ARG7, 4), _if_then_else(False, 4, ARG6), _if_then_else(False, zeros_diff_cols, 4)))
or_(ge(_if_then_else(and_(True, True), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(ge(1, ARG6), _if_then_else(True, 4, ARG7), _if_then_else(True, compare_blocks_cols, zeros_diff_cols))), and_(or_(or_(False, True), False), ge(_if_then_else(True, ARG7, zeros_diff_rows), _if_then_else(False, ones_diff_cols, ones_diff_cols))))
VAL TREES:
mul(mul(add(ones_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_cols)))
add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols)), add(zeros_diff_rows, mul(zeros_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), mul(add(add(ones_diff_cols, compare_blocks_rows), zeros_diff_rows), compare_blocks_rows)))
mul(add(add(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows)), add(mul(mul(compare_blocks_cols, zeros_diff_rows), ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))), add(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), zeros_diff_rows))
mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(add(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)), compare_blocks_rows))
add(mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, ones_diff_cols))), add(mul(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)))), add(mul(add(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows))), add(mul(ones_diff_rows, compare_blocks_rows), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))))
COND TREES:
ge(_if_then_else(le(_if_then_else(le(ones_diff_cols, 2), ones_diff_cols, _if_then_else(True, ones_diff_cols, 4)), _if_then_else(True, 0, _if_then_else(True, compare_blocks_rows, ARG6))), _if_then_else(ge(compare_blocks_cols, 2), zeros_diff_rows, 0), _if_then_else(False, _if_then_else(False, zeros_diff_cols, 1), 0)), _if_then_else(ge(ARG7, 3), _if_then_else(False, compare_blocks_cols, _if_then_else(True, _if_then_else(True, ARG7, ARG6), 3)), _if_then_else(True, ARG6, ARG6)))
ge(_if_then_else(or_(or_(le(ones_diff_rows, 4), le(1, zeros_diff_rows)), le(_if_then_else(False, 0, ARG6), _if_then_else(True, ones_diff_rows, 4))), _if_then_else(and_(and_(True, False), or_(False, True)), _if_then_else(or_(False, and_(le(ARG6, ARG6), ge(2, 2))), _if_then_else(False, 3, ARG6), _if_then_else(True, ones_diff_cols, 2)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(False, ARG6, compare_blocks_cols))), _if_then_else(and_(le(zeros_diff_cols, compare_blocks_rows), or_(False, True)), _if_then_else(le(ones_diff_rows, 3), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(True, ARG6, zeros_diff_rows)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(True, 3, ARG6), _if_then_else(True, 4, 3)))), _if_then_else(le(_if_then_else(le(compare_blocks_rows, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 4, ARG7)), _if_then_else(and_(True, True), _if_then_else(False, 4, 0), _if_then_else(False, ones_diff_rows, 3))), _if_then_else(and_(le(ARG6, ARG6), ge(2, 2)), _if_then_else(and_(True, False), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows))), _if_then_else(or_(ge(4, 2), ge(zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, ARG6, 1), _if_then_else(False, 0, 3)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4)))))
and_(ge(_if_then_else(le(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 0, ARG6), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(le(3, 3), _if_then_else(False, 1, 4), _if_then_else(False, 0, ones_diff_cols))), ge(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, 4), _if_then_else(False, zeros_diff_rows, compare_blocks_cols)), _if_then_else(ge(_if_then_else(False, 3, zeros_diff_rows), _if_then_else(True, ARG7, compare_blocks_cols)), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(True, compare_blocks_rows, ones_diff_rows))))
or_(and_(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(or_(True, True), _if_then_else(False, ARG6, 4), _if_then_else(True, 2, 3))), and_(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), le(_if_then_else(True, 1, 2), _if_then_else(True, ARG7, compare_blocks_rows)))), or_(or_(and_(or_(True, False), ge(4, zeros_diff_rows)), le(_if_then_else(True, 4, _if_then_else(False, zeros_diff_cols, 2)), _if_then_else(False, 0, 0))), or_(ge(_if_then_else(True, ones_diff_cols, 0), _if_then_else(True, 0, 0)), and_(or_(False, False), le(ones_diff_rows, 4)))))
and_(le(_if_then_else(ge(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols, ones_diff_cols), _if_then_else(and_(False, False), 4, compare_blocks_cols)), ge(_if_then_else(and_(True, True), 1, zeros_diff_rows), _if_then_else(True, ARG6, _if_then_else(False, 0, compare_blocks_rows))))
VAL TREES:
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(mul(add(compare_blocks_cols, ones_diff_cols), ones_diff_rows), ones_diff_rows)))
mul(mul(mul(zeros_diff_cols, ones_diff_cols), mul(add(compare_blocks_cols, mul(ones_diff_cols, compare_blocks_cols)), add(zeros_diff_rows, compare_blocks_cols))), add(add(ones_diff_rows, zeros_diff_rows), add(zeros_diff_rows, mul(compare_blocks_cols, zeros_diff_rows))))
mul(mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))), add(add(mul(mul(mul(zeros_diff_rows, ones_diff_rows), mul(add(mul(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_cols)))), compare_blocks_cols), ones_diff_rows), add(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols))))
mul(add(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, add(compare_blocks_cols, mul(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))), add(add(zeros_diff_cols, compare_blocks_rows), ones_diff_cols))
add(add(mul(add(add(mul(mul(ones_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows)), zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols))), mul(mul(mul(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_rows)))), add(add(add(mul(ones_diff_rows, mul(compare_blocks_cols, zeros_diff_cols)), add(ones_diff_cols, compare_blocks_cols)), add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), add(mul(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)))))
add(mul(add(mul(add(ones_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)), mul(mul(compare_blocks_cols, ones_diff_rows), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)))), add(mul(add(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, add(ones_diff_rows, compare_blocks_cols))), zeros_diff_cols)))
COND TREES:
or_(or_(and_(False, True), le(0, 1)), or_(ge(_if_then_else(False, compare_blocks_cols, ones_diff_rows), 4), or_(True, True)))
or_(le(_if_then_else(ge(_if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 3, 4)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 2))), _if_then_else(and_(and_(False, True), ge(4, 2)), _if_then_else(ge(ARG6, 4), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)))), and_(or_(or_(and_(True, False), le(2, ones_diff_rows)), ge(_if_then_else(False, 4, 2), _if_then_else(True, 0, 1))), ge(zeros_diff_cols, _if_then_else(le(compare_blocks_rows, 1), _if_then_else(False, 4, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))))
or_(le(_if_then_else(and_(True, True), _if_then_else(True, 4, 3), _if_then_else(False, 4, compare_blocks_rows)), _if_then_else(True, _if_then_else(True, ARG6, ARG6), compare_blocks_cols)), or_(or_(or_(True, True), and_(False, False)), or_(False, False)))
le(_if_then_else(le(1, 2), _if_then_else(True, zeros_diff_cols, 0), _if_then_else(True, 0, 1)), _if_then_else(ge(ARG7, 4), _if_then_else(False, 4, ARG6), _if_then_else(False, zeros_diff_cols, 4)))
or_(ge(_if_then_else(and_(True, True), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(ge(1, ARG6), _if_then_else(True, 4, ARG7), _if_then_else(True, compare_blocks_cols, _if_then_else(False, ones_diff_cols, ones_diff_cols)))), and_(or_(or_(False, True), or_(True, False)), ge(_if_then_else(True, ARG7, zeros_diff_rows), _if_then_else(False, ones_diff_cols, ones_diff_cols))))
VAL TREES:
mul(mul(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_cols)))
add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, add(mul(add(mul(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_cols)), add(add(add(compare_blocks_rows, zeros_diff_rows), compare_blocks_cols), mul(ones_diff_rows, ones_diff_rows))), mul(add(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(zeros_diff_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols))))), mul(zeros_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), add(add(add(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))))))
mul(add(add(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows)), add(mul(mul(compare_blocks_cols, zeros_diff_rows), ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))), add(mul(add(zeros_diff_rows, add(add(compare_blocks_rows, mul(compare_blocks_rows, ones_diff_rows)), mul(compare_blocks_rows, zeros_diff_rows))), compare_blocks_rows), mul(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(mul(mul(ones_diff_rows, zeros_diff_rows), mul(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), add(add(mul(add(add(zeros_diff_cols, ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), mul(zeros_diff_rows, add(ones_diff_cols, zeros_diff_rows))), add(compare_blocks_rows, ones_diff_cols)), compare_blocks_rows))
add(mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, ones_diff_cols))), add(mul(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols)), compare_blocks_rows)), add(mul(mul(ones_diff_cols, zeros_diff_cols), mul(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows))), add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))))
COND TREES:
or_(True, or_(ge(_if_then_else(True, compare_blocks_rows, 3), _if_then_else(False, ARG6, zeros_diff_rows)), ge(compare_blocks_cols, _if_then_else(False, ARG6, ARG7))))
or_(le(_if_then_else(ge(_if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 3, 4)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, _if_then_else(False, zeros_diff_cols, ARG7), 0)), _if_then_else(and_(False, False), _if_then_else(True, _if_then_else(ge(4, 0), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 3, ARG7)), zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 2))), _if_then_else(and_(and_(False, True), ge(4, 2)), _if_then_else(ge(ARG6, 4), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)))), and_(or_(or_(and_(True, False), le(2, ones_diff_rows)), and_(or_(or_(False, True), or_(True, True)), le(_if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, 2, 4)))), ge(_if_then_else(ge(4, 0), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 3, ARG7)), _if_then_else(le(compare_blocks_rows, 1), _if_then_else(False, 4, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))))
or_(le(_if_then_else(and_(True, True), _if_then_else(True, ones_diff_rows, 3), _if_then_else(False, 4, _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(ge(2, ones_diff_cols), 4, _if_then_else(ge(ARG6, compare_blocks_rows), ones_diff_rows, 3))), _if_then_else(and_(and_(True, False), True), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(False, 0, compare_blocks_cols)), _if_then_else(le(_if_then_else(False, 0, zeros_diff_rows), _if_then_else(le(ARG7, ARG6), ARG6, compare_blocks_rows)), _if_then_else(le(_if_then_else(True, ARG7, 0), ones_diff_cols), 1, 4), _if_then_else(True, compare_blocks_rows, 2))))), _if_then_else(True, _if_then_else(True, ARG6, ARG6), compare_blocks_cols)), or_(or_(or_(True, True), and_(False, False)), or_(False, False)))
le(_if_then_else(le(1, 2), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, 1)), _if_then_else(or_(le(ARG6, ARG6), or_(False, True)), _if_then_else(le(compare_blocks_rows, zeros_diff_cols), _if_then_else(True, 2, 0), _if_then_else(True, ARG6, ones_diff_rows)), _if_then_else(le(ones_diff_cols, _if_then_else(False, 3, zeros_diff_rows)), _if_then_else(False, _if_then_else(False, 0, 2), 3), _if_then_else(False, 1, ones_diff_rows))))
or_(ge(_if_then_else(and_(True, ge(_if_then_else(le(_if_then_else(True, 3, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, 0)), _if_then_else(le(ones_diff_cols, ones_diff_rows), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, 3, 4))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, 4), _if_then_else(False, ARG6, compare_blocks_rows)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_cols, 4), _if_then_else(False, 1, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, ARG7, 4), _if_then_else(False, compare_blocks_cols, 3))))), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(ge(1, ARG6), _if_then_else(True, 4, ARG7), _if_then_else(True, compare_blocks_cols, zeros_diff_cols))), and_(or_(or_(False, True), or_(True, False)), ge(_if_then_else(True, _if_then_else(False, zeros_diff_rows, ARG6), zeros_diff_rows), zeros_diff_cols)))
VAL TREES:
mul(add(zeros_diff_cols, zeros_diff_rows), add(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_cols)))
add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols)), compare_blocks_cols)
add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), mul(add(ones_diff_rows, zeros_diff_rows), compare_blocks_rows)))
mul(mul(compare_blocks_cols, add(ones_diff_rows, ones_diff_cols)), add(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_cols))), add(add(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)), compare_blocks_rows))
add(mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, ones_diff_cols))), add(mul(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)))), add(mul(add(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows))), add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(ones_diff_cols, mul(compare_blocks_rows, ones_diff_rows)))))
COND TREES:
or_(or_(and_(False, True), le(0, 1)), or_(ge(_if_then_else(or_(and_(True, True), or_(True, True)), _if_then_else(le(ARG6, compare_blocks_rows), _if_then_else(le(ones_diff_cols, 2), ones_diff_cols, _if_then_else(True, 4, compare_blocks_rows)), _if_then_else(False, ARG7, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(True, 1, 2))), zeros_diff_cols), or_(True, True)))
or_(le(_if_then_else(ge(_if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 3, 4)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 2))), _if_then_else(and_(and_(False, True), ge(4, 2)), _if_then_else(ge(ARG6, 4), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)))), and_(or_(or_(and_(True, False), le(2, ones_diff_rows)), or_(or_(le(ones_diff_rows, 2), ge(2, ones_diff_cols)), and_(or_(ge(_if_then_else(False, zeros_diff_cols, ARG7), ARG6), True), and_(True, True)))), ge(_if_then_else(ge(4, 0), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 3, ARG7)), _if_then_else(le(compare_blocks_rows, 1), _if_then_else(False, 4, _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))))
or_(le(_if_then_else(and_(True, True), _if_then_else(True, 4, 3), _if_then_else(le(_if_then_else(True, compare_blocks_rows, _if_then_else(le(_if_then_else(or_(and_(True, False), ge(4, 3)), _if_then_else(and_(False, True), _if_then_else(True, 4, ARG7), _if_then_else(True, zeros_diff_cols, ARG6)), _if_then_else(or_(True, False), _if_then_else(False, 4, 1), _if_then_else(False, compare_blocks_cols, 1))), _if_then_else(ge(_if_then_else(False, 2, _if_then_else(or_(ge(compare_blocks_cols, ones_diff_cols), le(zeros_diff_rows, ones_diff_rows)), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(le(0, 4), 0, 0))), _if_then_else(False, ones_diff_cols, ARG7)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(False, ARG6, compare_blocks_cols)), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_rows, ARG6), _if_then_else(False, 4, zeros_diff_cols)))), _if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, 4, ones_diff_cols), _if_then_else(True, 2, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, ARG7, 4), _if_then_else(False, ARG6, 1))), _if_then_else(ge(_if_then_else(True, 4, compare_blocks_cols), _if_then_else(True, ARG7, ARG7)), _if_then_else(and_(False, True), _if_then_else(True, 0, 1), _if_then_else(True, ARG6, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, 2), _if_then_else(True, ARG7, ARG7), _if_then_else(False, ones_diff_cols, 1))), _if_then_else(ge(_if_then_else(False, ARG7, 4), _if_then_else(True, 4, ones_diff_cols)), _if_then_else(ge(4, 4), _if_then_else(True, ARG6, 0), _if_then_else(False, compare_blocks_cols, compare_blocks_rows)), _if_then_else(le(ones_diff_cols, ones_diff_rows), _if_then_else(False, 0, ones_diff_rows), ones_diff_cols))), _if_then_else(or_(le(_if_then_else(False, compare_blocks_rows, ARG6), _if_then_else(True, ARG6, 1)), ge(_if_then_else(False, ARG7, 0), _if_then_else(True, ARG7, 4))), _if_then_else(le(_if_then_else(True, zeros_diff_cols, 0), _if_then_else(False, ARG6, zeros_diff_rows)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, 2, 0)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 1))), _if_then_else(or_(or_(False, True), ge(0, ones_diff_cols)), _if_then_else(le(1, 0), _if_then_else(True, ARG6, 4), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_cols, ones_diff_rows), _if_then_else(True, ones_diff_rows, ARG7)))))), _if_then_else(False, 4, ones_diff_cols)), 4, compare_blocks_rows)), _if_then_else(True, _if_then_else(True, ARG6, ARG6), compare_blocks_cols)), or_(or_(or_(True, True), and_(False, False)), or_(False, False)))
le(_if_then_else(le(1, 2), _if_then_else(True, zeros_diff_cols, 0), _if_then_else(True, zeros_diff_rows, 1)), _if_then_else(ge(ARG7, 4), _if_then_else(False, 4, ARG6), _if_then_else(False, zeros_diff_cols, 4)))
or_(ge(_if_then_else(and_(True, True), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(ge(1, ARG6), _if_then_else(True, 4, ARG7), _if_then_else(True, compare_blocks_cols, zeros_diff_cols))), and_(or_(or_(False, True), or_(True, False)), ge(_if_then_else(and_(True, and_(True, True)), _if_then_else(le(2, 0), zeros_diff_cols, 1), _if_then_else(False, zeros_diff_rows, _if_then_else(True, 1, ARG7))), _if_then_else(le(0, _if_then_else(ge(_if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(True, 3, ARG7)), _if_then_else(or_(False, False), _if_then_else(False, 3, compare_blocks_cols), _if_then_else(True, ones_diff_cols, ARG6)), _if_then_else(ge(3, zeros_diff_cols), _if_then_else(False, ones_diff_rows, 4), _if_then_else(False, zeros_diff_rows, 0)))), _if_then_else(or_(ge(_if_then_else(False, compare_blocks_cols, 2), _if_then_else(True, 3, ones_diff_rows)), and_(ge(compare_blocks_rows, 2), le(4, compare_blocks_rows))), _if_then_else(ge(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(True, ARG6, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(False, zeros_diff_rows, 3)), _if_then_else(ge(0, ARG7), _if_then_else(False, 4, ARG7), _if_then_else(True, ones_diff_rows, compare_blocks_rows))), _if_then_else(le(_if_then_else(False, 4, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(or_(True, True), _if_then_else(False, ARG7, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, 3)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(False, 4, ones_diff_rows)))), _if_then_else(and_(and_(True, and_(False, False)), le(_if_then_else(True, 3, zeros_diff_rows), _if_then_else(False, ones_diff_cols, ARG6))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, ARG7), _if_then_else(True, zeros_diff_cols, zeros_diff_cols)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(False, 3, ones_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, 4, ARG6), _if_then_else(False, 2, 0))), _if_then_else(or_(and_(False, False), le(4, ARG6)), _if_then_else(or_(False, False), _if_then_else(False, 3, ARG7), _if_then_else(True, 1, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, 4, 3), _if_then_else(True, zeros_diff_cols, ARG7))))))))
VAL TREES:
mul(mul(zeros_diff_rows, mul(ones_diff_cols, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_cols)))
add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_cols, ones_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_cols)), mul(add(ones_diff_cols, zeros_diff_rows), mul(add(ones_diff_rows, zeros_diff_rows), compare_blocks_rows)))
mul(add(add(mul(add(ones_diff_cols, zeros_diff_rows), mul(compare_blocks_rows, ones_diff_cols)), add(ones_diff_rows, zeros_diff_rows)), add(mul(mul(compare_blocks_cols, zeros_diff_rows), ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))), add(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(add(add(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_cols)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))), add(add(mul(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)), compare_blocks_rows))
add(mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, ones_diff_cols))), add(mul(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)))), add(mul(add(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)), zeros_diff_cols), add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))))
COND TREES:
ge(_if_then_else(le(_if_then_else(False, ones_diff_rows, 3), _if_then_else(False, 0, _if_then_else(True, compare_blocks_rows, ARG6))), _if_then_else(ge(compare_blocks_cols, 2), _if_then_else(and_(False, False), ARG7, ARG6), 0), _if_then_else(False, _if_then_else(False, zeros_diff_cols, 1), zeros_diff_rows)), _if_then_else(ge(ARG7, 3), _if_then_else(False, compare_blocks_cols, _if_then_else(True, _if_then_else(True, ARG7, 3), 3)), _if_then_else(True, ARG6, ARG6)))
ge(_if_then_else(or_(or_(le(ones_diff_rows, 4), le(1, zeros_diff_rows)), le(_if_then_else(False, 0, ARG6), _if_then_else(True, ones_diff_rows, 4))), _if_then_else(and_(and_(True, False), or_(False, False)), _if_then_else(or_(False, True), _if_then_else(False, 3, ARG6), _if_then_else(True, ones_diff_cols, 2)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(False, ARG6, compare_blocks_cols))), _if_then_else(and_(le(zeros_diff_cols, compare_blocks_rows), or_(False, True)), _if_then_else(le(ones_diff_rows, 3), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(True, ARG6, zeros_diff_rows)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(True, 3, ARG6), _if_then_else(True, 4, 3)))), _if_then_else(le(_if_then_else(le(compare_blocks_rows, 0), 1, _if_then_else(False, 4, ARG7)), _if_then_else(and_(True, True), _if_then_else(False, 4, 0), _if_then_else(False, ones_diff_rows, 3))), _if_then_else(False, _if_then_else(and_(True, False), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows))), _if_then_else(or_(ge(4, 2), ge(zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, ARG6, 1), _if_then_else(False, 0, 3)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4)))))
and_(ge(_if_then_else(le(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 0, ARG6), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(le(3, 3), _if_then_else(False, 1, 4), _if_then_else(False, 0, ones_diff_cols))), ge(_if_then_else(or_(False, False), _if_then_else(True, _if_then_else(False, compare_blocks_cols, zeros_diff_rows), 4), _if_then_else(False, zeros_diff_rows, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(True, compare_blocks_rows, ones_diff_rows))))
or_(and_(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(or_(True, True), _if_then_else(False, ARG6, 4), _if_then_else(True, 2, 3))), and_(ge(compare_blocks_cols, _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), le(_if_then_else(True, 1, 2), _if_then_else(True, ARG7, compare_blocks_rows)))), or_(or_(and_(or_(True, False), ge(4, zeros_diff_rows)), le(_if_then_else(True, 4, ARG7), _if_then_else(False, 0, 0))), or_(ge(_if_then_else(True, ones_diff_cols, 0), _if_then_else(True, 0, 0)), and_(or_(False, False), and_(False, True)))))
and_(le(_if_then_else(ge(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols, ones_diff_cols), _if_then_else(and_(True, False), 4, compare_blocks_cols)), ge(_if_then_else(and_(True, True), 1, zeros_diff_rows), _if_then_else(False, ARG6, _if_then_else(True, _if_then_else(ge(_if_then_else(False, 0, compare_blocks_cols), _if_then_else(False, 1, 0)), _if_then_else(le(ARG7, ones_diff_rows), _if_then_else(True, ones_diff_rows, ARG6), _if_then_else(True, zeros_diff_rows, 4)), _if_then_else(ge(compare_blocks_cols, zeros_diff_cols), _if_then_else(False, 2, 2), _if_then_else(True, ones_diff_cols, ones_diff_rows))), compare_blocks_rows))))
VAL TREES:
mul(zeros_diff_cols, mul(add(ones_diff_cols, mul(ones_diff_rows, mul(compare_blocks_cols, ones_diff_rows))), mul(ones_diff_rows, zeros_diff_rows)))
mul(mul(zeros_diff_cols, mul(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, add(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_cols, mul(ones_diff_cols, zeros_diff_cols)))), add(zeros_diff_rows, zeros_diff_rows)))
mul(compare_blocks_cols, add(add(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, zeros_diff_cols)), add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, add(ones_diff_rows, zeros_diff_rows)))))
mul(add(mul(ones_diff_cols, ones_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, zeros_diff_rows)))
add(add(mul(add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols))), mul(mul(mul(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, mul(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)))), mul(ones_diff_rows, zeros_diff_rows))), add(add(add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, compare_blocks_cols)), add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), add(mul(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)))))
add(mul(add(mul(compare_blocks_rows, add(add(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows)), mul(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(mul(add(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_rows)))))
COND TREES:
or_(or_(and_(False, True), le(0, _if_then_else(and_(True, le(3, ARG7)), 1, 3))), or_(ge(compare_blocks_cols, zeros_diff_cols), or_(True, True)))
or_(le(_if_then_else(ge(_if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 3, 4)), _if_then_else(or_(ge(compare_blocks_cols, 3), False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 2))), _if_then_else(True, _if_then_else(ge(ARG6, 4), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)))), and_(or_(or_(and_(True, False), le(2, ones_diff_rows)), ge(_if_then_else(False, 4, 2), _if_then_else(True, 0, 1))), ge(_if_then_else(ge(4, 0), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 3, ARG7)), _if_then_else(le(compare_blocks_rows, 1), _if_then_else(False, 4, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))))
or_(le(zeros_diff_rows, _if_then_else(True, _if_then_else(True, ARG6, ARG6), compare_blocks_cols)), or_(or_(or_(True, True), and_(False, False)), or_(False, False)))
le(_if_then_else(le(1, 2), _if_then_else(False, zeros_diff_cols, 0), _if_then_else(True, zeros_diff_rows, 1)), _if_then_else(ge(ARG7, 4), _if_then_else(False, 4, ARG6), _if_then_else(False, zeros_diff_cols, 4)))
or_(ge(zeros_diff_rows, _if_then_else(ge(1, ARG6), _if_then_else(True, 4, ARG7), _if_then_else(True, compare_blocks_cols, zeros_diff_cols))), and_(or_(or_(False, True), or_(True, False)), ge(0, _if_then_else(False, ones_diff_cols, ones_diff_cols))))
VAL TREES:
mul(ones_diff_rows, add(add(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_cols)))
add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows)), compare_blocks_rows)))
mul(add(add(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows)), add(mul(mul(ones_diff_cols, zeros_diff_rows), ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))), add(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), add(add(mul(ones_diff_cols, add(zeros_diff_rows, zeros_diff_rows)), add(compare_blocks_rows, ones_diff_cols)), compare_blocks_rows))
add(mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, ones_diff_cols))), add(mul(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)))), add(mul(add(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows))), add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(mul(zeros_diff_cols, compare_blocks_cols), zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))))
COND TREES:
ge(_if_then_else(le(_if_then_else(le(ones_diff_cols, 2), ones_diff_cols, _if_then_else(True, ones_diff_cols, 4)), _if_then_else(True, 0, _if_then_else(True, compare_blocks_rows, ARG6))), _if_then_else(True, zeros_diff_rows, 0), _if_then_else(False, _if_then_else(False, zeros_diff_cols, 1), 0)), _if_then_else(ge(ARG7, 3), _if_then_else(False, compare_blocks_cols, _if_then_else(True, _if_then_else(True, ARG7, 3), 3)), _if_then_else(True, ARG6, ARG6)))
ge(_if_then_else(or_(or_(le(ones_diff_rows, 4), le(1, zeros_diff_rows)), le(_if_then_else(False, 0, ARG6), _if_then_else(True, ones_diff_rows, 4))), _if_then_else(and_(and_(True, False), or_(False, False)), _if_then_else(or_(False, True), _if_then_else(False, 3, ARG6), _if_then_else(True, ones_diff_cols, 2)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(False, ARG6, compare_blocks_cols))), _if_then_else(and_(le(zeros_diff_cols, compare_blocks_rows), or_(False, True)), _if_then_else(le(ones_diff_rows, 3), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(True, ARG6, zeros_diff_rows)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(True, 3, ARG6), _if_then_else(True, 4, 3)))), _if_then_else(le(_if_then_else(le(compare_blocks_rows, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 4, ARG7)), _if_then_else(and_(True, True), _if_then_else(False, 4, 0), _if_then_else(False, ones_diff_rows, 3))), _if_then_else(and_(le(ARG6, ARG6), ge(2, 2)), _if_then_else(and_(True, False), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows))), _if_then_else(or_(ge(4, 2), ge(zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, ARG6, 1), _if_then_else(False, 0, 3)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4)))))
and_(ge(_if_then_else(le(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 0, ARG6), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(le(3, 3), _if_then_else(False, 1, 4), _if_then_else(False, 0, ones_diff_cols))), ge(_if_then_else(or_(True, True), _if_then_else(True, ones_diff_cols, 4), _if_then_else(False, zeros_diff_rows, compare_blocks_cols)), _if_then_else(ge(_if_then_else(False, 3, zeros_diff_rows), _if_then_else(True, ARG7, compare_blocks_cols)), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(True, compare_blocks_rows, ones_diff_rows))))
or_(and_(True, and_(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), le(_if_then_else(True, 1, 2), _if_then_else(True, ARG7, compare_blocks_rows)))), or_(or_(and_(or_(True, False), ge(4, zeros_diff_rows)), le(_if_then_else(True, 4, _if_then_else(False, zeros_diff_cols, 2)), _if_then_else(False, 0, 0))), or_(ge(_if_then_else(True, ones_diff_cols, 0), _if_then_else(True, 0, 0)), and_(or_(False, False), le(ones_diff_rows, 4)))))
and_(le(_if_then_else(ge(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols, ones_diff_cols), _if_then_else(and_(False, False), 4, compare_blocks_cols)), ge(_if_then_else(False, zeros_diff_rows, ARG6), _if_then_else(True, ARG6, _if_then_else(or_(True, True), 0, compare_blocks_rows))))
VAL TREES:
mul(mul(add(zeros_diff_cols, ones_diff_cols), add(compare_blocks_rows, compare_blocks_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(mul(add(compare_blocks_cols, ones_diff_cols), ones_diff_rows), ones_diff_rows)))
mul(mul(mul(zeros_diff_cols, ones_diff_cols), mul(add(compare_blocks_cols, mul(ones_diff_cols, compare_blocks_cols)), add(zeros_diff_rows, compare_blocks_cols))), add(add(ones_diff_rows, zeros_diff_rows), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(mul(zeros_diff_rows, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))), add(add(mul(mul(mul(zeros_diff_rows, ones_diff_rows), mul(add(mul(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_cols)))), compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols))))
mul(add(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, add(compare_blocks_cols, zeros_diff_rows))), add(add(zeros_diff_cols, compare_blocks_rows), ones_diff_cols))
add(add(mul(add(add(mul(mul(ones_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows)), zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols))), mul(mul(mul(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(ones_diff_cols, zeros_diff_cols), compare_blocks_rows))), add(add(add(mul(ones_diff_rows, mul(compare_blocks_cols, zeros_diff_cols)), add(ones_diff_cols, compare_blocks_cols)), add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), add(mul(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)))))
add(mul(add(mul(add(ones_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(mul(add(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, add(ones_diff_rows, compare_blocks_cols))), zeros_diff_cols)))
COND TREES:
ge(_if_then_else(le(_if_then_else(le(ones_diff_cols, 2), ones_diff_cols, _if_then_else(True, ones_diff_cols, _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, 0), _if_then_else(False, 0, 4)))), _if_then_else(True, 0, _if_then_else(True, compare_blocks_rows, ARG6))), _if_then_else(ge(compare_blocks_cols, 2), _if_then_else(and_(False, False), ARG7, ARG6), 0), _if_then_else(False, _if_then_else(False, zeros_diff_cols, 1), zeros_diff_rows)), _if_then_else(ge(ARG7, 3), _if_then_else(False, compare_blocks_cols, _if_then_else(True, _if_then_else(True, ARG7, 3), 3)), _if_then_else(True, ARG6, ARG6)))
ge(_if_then_else(or_(or_(le(ones_diff_rows, 4), le(1, zeros_diff_rows)), le(_if_then_else(False, 0, ARG6), _if_then_else(True, ones_diff_rows, 4))), _if_then_else(and_(and_(True, False), or_(False, False)), _if_then_else(or_(False, True), _if_then_else(False, 3, ARG6), _if_then_else(True, ones_diff_cols, 2)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(False, ARG6, compare_blocks_cols))), _if_then_else(and_(le(zeros_diff_cols, compare_blocks_rows), or_(False, True)), _if_then_else(le(ones_diff_rows, 3), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(True, ARG6, zeros_diff_rows)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(True, 3, ARG6), _if_then_else(True, 4, 3)))), _if_then_else(le(_if_then_else(le(compare_blocks_rows, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 4, ARG7)), _if_then_else(and_(True, True), _if_then_else(False, 4, 0), _if_then_else(False, ones_diff_rows, 3))), _if_then_else(and_(le(ARG6, ARG6), ge(2, 2)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_cols, 1), _if_then_else(True, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows))), _if_then_else(or_(ge(4, 2), ge(zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, ARG6, 1), _if_then_else(False, 0, 3)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4)))))
and_(ge(_if_then_else(le(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 0, ARG6), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(le(3, 3), _if_then_else(False, 1, 4), _if_then_else(False, 0, ones_diff_cols))), ge(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, 4), _if_then_else(False, zeros_diff_rows, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(True, compare_blocks_rows, ones_diff_rows))))
or_(and_(le(_if_then_else(le(ARG7, _if_then_else(True, compare_blocks_rows, 4)), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(or_(True, True), _if_then_else(False, ARG6, 4), _if_then_else(True, 2, 3))), and_(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), le(_if_then_else(True, 1, 2), _if_then_else(True, ARG7, compare_blocks_rows)))), or_(or_(and_(or_(True, False), ge(4, zeros_diff_rows)), le(_if_then_else(True, 4, ARG7), _if_then_else(False, 0, 0))), or_(ge(_if_then_else(True, ones_diff_cols, 0), _if_then_else(True, 0, 0)), and_(or_(False, False), le(ones_diff_rows, 4)))))
and_(le(3, _if_then_else(and_(False, False), 4, compare_blocks_cols)), ge(_if_then_else(and_(True, True), 1, zeros_diff_rows), _if_then_else(False, ARG6, _if_then_else(True, 0, compare_blocks_rows))))
VAL TREES:
mul(mul(add(add(mul(zeros_diff_cols, ones_diff_rows), compare_blocks_cols), ones_diff_cols), add(compare_blocks_rows, compare_blocks_rows)), zeros_diff_cols)
mul(mul(zeros_diff_cols, mul(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, mul(ones_diff_cols, zeros_diff_cols)), add(zeros_diff_rows, zeros_diff_rows)))
mul(zeros_diff_cols, add(add(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, add(ones_diff_rows, zeros_diff_rows)))))
mul(add(mul(zeros_diff_rows, mul(mul(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))), add(zeros_diff_rows, add(ones_diff_cols, zeros_diff_rows))), add(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, zeros_diff_rows)))
add(add(mul(add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols))), mul(mul(mul(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), mul(ones_diff_rows, zeros_diff_rows))), add(add(add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), add(mul(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)))))
add(mul(add(mul(compare_blocks_rows, add(add(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows)), mul(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(mul(add(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(mul(mul(add(mul(zeros_diff_cols, ones_diff_cols), compare_blocks_cols), add(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows))), mul(mul(mul(compare_blocks_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, compare_blocks_rows))), compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))), mul(mul(compare_blocks_rows, add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_rows)))))
COND TREES:
or_(ge(2, 1), ge(_if_then_else(le(_if_then_else(le(ARG7, zeros_diff_rows), _if_then_else(True, ARG6, zeros_diff_cols), _if_then_else(True, 1, 2)), _if_then_else(le(compare_blocks_cols, 0), _if_then_else(ge(_if_then_else(le(compare_blocks_cols, 2), _if_then_else(False, 1, _if_then_else(True, 2, 1)), _if_then_else(and_(False, False), 1, ARG7)), _if_then_else(ge(1, ones_diff_rows), _if_then_else(le(2, compare_blocks_cols), _if_then_else(True, ARG7, 2), compare_blocks_rows), _if_then_else(False, _if_then_else(le(2, ARG7), zeros_diff_cols, 0), ones_diff_rows))), ones_diff_rows, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, zeros_diff_rows))), 1, _if_then_else(True, 3, ARG6)), _if_then_else(le(1, 1), _if_then_else(False, ones_diff_rows, 1), _if_then_else(False, zeros_diff_cols, 0))))
and_(or_(ge(4, 1), and_(or_(ge(0, 1), and_(True, True)), True)), le(_if_then_else(le(_if_then_else(or_(and_(False, True), ge(3, ARG7)), _if_then_else(ge(0, ARG7), _if_then_else(True, ARG7, zeros_diff_rows), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(4, zeros_diff_cols), _if_then_else(True, 1, 1), _if_then_else(False, 4, zeros_diff_cols))), _if_then_else(or_(ge(4, compare_blocks_rows), or_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ARG6, ARG7), _if_then_else(True, zeros_diff_rows, 4)), _if_then_else(and_(False, False), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, 3)))), _if_then_else(le(_if_then_else(or_(True, True), _if_then_else(True, ARG7, 0), _if_then_else(True, ARG7, compare_blocks_rows)), _if_then_else(ge(0, 0), _if_then_else(False, 0, 1), _if_then_else(True, ones_diff_rows, zeros_diff_cols))), _if_then_else(and_(and_(True, False), or_(True, True)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_cols, 2), _if_then_else(True, compare_blocks_rows, 3)), _if_then_else(or_(False, False), _if_then_else(False, 0, ones_diff_cols), _if_then_else(True, 2, ones_diff_rows))), _if_then_else(ge(_if_then_else(True, ARG6, 3), _if_then_else(False, ARG7, ARG6)), _if_then_else(ge(2, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, 3, compare_blocks_cols)), _if_then_else(le(compare_blocks_cols, 2), _if_then_else(False, 4, 0), _if_then_else(False, 3, ARG6)))), _if_then_else(ge(_if_then_else(or_(True, False), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(compare_blocks_rows, 2), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, 4))), _if_then_else(or_(le(compare_blocks_cols, ARG7), ge(3, zeros_diff_cols)), _if_then_else(ge(1, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, ones_diff_rows)), _if_then_else(ge(ARG6, ARG6), _if_then_else(True, zeros_diff_rows, ARG6), _if_then_else(True, compare_blocks_cols, compare_blocks_rows))), _if_then_else(le(_if_then_else(False, ARG7, 4), _if_then_else(True, 2, ones_diff_rows)), _if_then_else(and_(True, False), _if_then_else(True, zeros_diff_cols, ones_diff_cols), _if_then_else(False, 1, compare_blocks_rows)), _if_then_else(le(2, ones_diff_cols), _if_then_else(False, 1, 2), _if_then_else(False, compare_blocks_cols, ones_diff_rows))))), _if_then_else(True, zeros_diff_cols, 0)))
le(_if_then_else(or_(ge(compare_blocks_cols, ones_diff_cols), le(zeros_diff_rows, ones_diff_rows)), _if_then_else(and_(False, False), ARG7, compare_blocks_cols), _if_then_else(le(0, 4), 0, 0)), _if_then_else(le(zeros_diff_rows, 0), _if_then_else(True, ones_diff_cols, ARG6), _if_then_else(True, 1, compare_blocks_rows)))
or_(ge(_if_then_else(False, ARG7, 3), _if_then_else(True, ARG7, ARG6)), and_(or_(and_(le(_if_then_else(ge(0, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, 0), _if_then_else(True, ones_diff_rows, ARG7)), _if_then_else(False, 4, ARG6)), le(_if_then_else(or_(False, False), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(le(2, 2), _if_then_else(True, 1, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, ARG6)))), ge(_if_then_else(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(or_(True, True), _if_then_else(False, ARG6, 4), _if_then_else(True, 2, 3))), _if_then_else(and_(False, True), _if_then_else(False, 4, 0), _if_then_else(False, ARG6, 0)), _if_then_else(ge(2, 1), _if_then_else(False, compare_blocks_rows, 2), _if_then_else(False, 1, ARG7))), _if_then_else(le(_if_then_else(True, compare_blocks_rows, 0), _if_then_else(True, _if_then_else(le(_if_then_else(ge(ones_diff_cols, ARG6), _if_then_else(False, ARG6, 4), _if_then_else(True, ARG6, ones_diff_rows)), _if_then_else(ge(ones_diff_cols, 2), _if_then_else(True, zeros_diff_cols, ARG6), _if_then_else(False, ones_diff_rows, 3))), _if_then_else(and_(and_(False, True), ge(0, 2)), _if_then_else(or_(True, True), _if_then_else(True, 3, ARG6), _if_then_else(False, ARG7, 3)), _if_then_else(and_(False, False), _if_then_else(True, ARG6, 1), _if_then_else(True, 2, ones_diff_rows))), _if_then_else(or_(or_(True, True), and_(True, False)), _if_then_else(ge(0, compare_blocks_rows), _if_then_else(False, ones_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 2)), _if_then_else(ge(ARG6, ARG6), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(True, 0, 2)))), 0)), _if_then_else(or_(True, False), _if_then_else(True, 2, ARG6), _if_then_else(True, 0, 3)), _if_then_else(le(zeros_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 4))))), or_(False, and_(False, True))))
ge(_if_then_else(and_(True, le(ones_diff_cols, _if_then_else(and_(and_(True, True), le(4, _if_then_else(and_(and_(False, False), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(False, 3, ARG7), _if_then_else(True, ARG7, zeros_diff_rows)), _if_then_else(and_(True, True), _if_then_else(False, 2, ones_diff_cols), _if_then_else(True, ones_diff_cols, 3))))), _if_then_else(or_(True, False), _if_then_else(False, 2, 2), _if_then_else(False, 4, ARG6)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, ARG7), _if_then_else(False, 2, 2))))), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, zeros_diff_cols), 3), _if_then_else(True, 4, ARG6)), _if_then_else(and_(True, False), _if_then_else(True, compare_blocks_rows, zeros_diff_rows), _if_then_else(True, ARG7, 1)))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_rows), compare_blocks_cols), add(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)))
add(add(ones_diff_rows, add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, compare_blocks_cols))), mul(mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_cols, mul(zeros_diff_cols, mul(compare_blocks_cols, zeros_diff_rows)))), mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows))))
mul(mul(mul(add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_cols, add(ones_diff_rows, zeros_diff_cols)), add(ones_diff_rows, ones_diff_rows))), mul(mul(add(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_cols, ones_diff_cols)))), add(mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_rows))), mul(add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols)))))
add(mul(mul(add(ones_diff_rows, ones_diff_cols), compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_cols)), mul(mul(compare_blocks_rows, ones_diff_rows), add(add(ones_diff_rows, mul(mul(ones_diff_rows, ones_diff_cols), ones_diff_cols)), add(compare_blocks_rows, compare_blocks_cols))))
add(mul(add(mul(mul(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, zeros_diff_cols)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_cols))), mul(mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_rows, compare_blocks_rows)), add(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_cols)))), add(add(mul(mul(ones_diff_cols, ones_diff_rows), mul(ones_diff_rows, ones_diff_rows)), add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows))), add(add(mul(zeros_diff_rows, ones_diff_rows), add(compare_blocks_cols, zeros_diff_cols)), add(add(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)))))
mul(mul(mul(mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), mul(add(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_rows, ones_diff_rows))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(mul(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)))), mul(add(mul(mul(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)))))
COND TREES:
or_(or_(and_(False, True), le(0, 1)), or_(ge(_if_then_else(or_(and_(True, True), or_(True, True)), _if_then_else(le(ARG6, compare_blocks_rows), _if_then_else(le(_if_then_else(or_(False, ge(zeros_diff_cols, zeros_diff_cols)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), 4, ARG6), _if_then_else(True, _if_then_else(True, 0, 1), _if_then_else(False, 1, compare_blocks_cols))), _if_then_else(True, ARG6, 3)), _if_then_else(ge(3, _if_then_else(True, ones_diff_cols, zeros_diff_cols)), _if_then_else(False, _if_then_else(True, _if_then_else(False, ones_diff_cols, 4), ones_diff_rows), 0), _if_then_else(False, 3, 1)), _if_then_else(ge(0, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, _if_then_else(True, _if_then_else(True, ARG7, 4), ARG7)), _if_then_else(or_(True, True), ARG7, _if_then_else(False, _if_then_else(True, ARG7, zeros_diff_rows), ARG7)))), _if_then_else(False, ARG7, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(True, 1, 2))), zeros_diff_cols), or_(True, True)))
or_(le(_if_then_else(ge(_if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 3, 4)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 2))), _if_then_else(and_(and_(False, True), ge(4, 2)), _if_then_else(ge(ARG6, 4), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)))), and_(or_(or_(and_(True, False), le(2, ones_diff_rows)), or_(or_(le(ones_diff_rows, 2), ge(2, ones_diff_cols)), and_(or_(ge(_if_then_else(False, zeros_diff_cols, ARG7), ARG6), True), and_(True, True)))), ge(_if_then_else(ge(4, 0), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 3, ARG7)), _if_then_else(le(compare_blocks_rows, 1), _if_then_else(False, 4, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))))
or_(le(_if_then_else(and_(True, True), _if_then_else(True, 4, 3), _if_then_else(le(_if_then_else(True, compare_blocks_rows, _if_then_else(le(_if_then_else(or_(and_(True, False), ge(4, 3)), _if_then_else(and_(False, True), _if_then_else(True, 4, ARG7), _if_then_else(True, zeros_diff_cols, ARG6)), _if_then_else(or_(True, False), _if_then_else(False, 4, 1), _if_then_else(False, compare_blocks_cols, 1))), _if_then_else(ge(_if_then_else(False, 2, _if_then_else(or_(ge(compare_blocks_cols, ones_diff_cols), le(zeros_diff_rows, ones_diff_rows)), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(le(0, 4), 0, 0))), _if_then_else(False, ones_diff_cols, ARG7)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(False, ARG6, compare_blocks_cols)), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_rows, ARG6), _if_then_else(False, 4, zeros_diff_cols)))), _if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, 4, ones_diff_cols), _if_then_else(True, 2, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, ARG7, 4), _if_then_else(False, ARG6, 1))), _if_then_else(ge(_if_then_else(True, 4, compare_blocks_cols), _if_then_else(True, ARG7, ARG7)), _if_then_else(and_(False, True), _if_then_else(True, 0, 1), _if_then_else(True, ARG6, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, 2), _if_then_else(True, ARG7, ARG7), _if_then_else(False, ones_diff_cols, 1))), _if_then_else(ge(_if_then_else(False, ARG7, 4), _if_then_else(True, 4, ones_diff_cols)), _if_then_else(ge(4, 4), _if_then_else(True, ARG6, 0), _if_then_else(False, compare_blocks_cols, compare_blocks_rows)), _if_then_else(le(ones_diff_cols, ones_diff_rows), _if_then_else(False, 0, ones_diff_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)))), _if_then_else(or_(le(_if_then_else(False, compare_blocks_rows, ARG6), _if_then_else(True, ARG6, 1)), ge(_if_then_else(False, ARG7, 0), _if_then_else(True, ARG7, 4))), _if_then_else(le(_if_then_else(True, _if_then_else(or_(ge(3, 2), or_(True, True)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, ARG6, 1)), _if_then_else(le(compare_blocks_cols, 3), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(True, 1, ARG6))), 0), _if_then_else(False, ARG6, zeros_diff_rows)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, 2, 0)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 1))), _if_then_else(or_(or_(False, True), ge(0, ones_diff_cols)), _if_then_else(le(1, 0), _if_then_else(True, ARG6, 4), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_cols, ones_diff_rows), _if_then_else(True, ones_diff_rows, ARG7)))))), _if_then_else(False, 4, ones_diff_cols)), 4, compare_blocks_rows)), _if_then_else(True, _if_then_else(True, ARG6, ARG6), compare_blocks_cols)), or_(or_(or_(True, True), and_(False, False)), or_(False, False)))
le(_if_then_else(le(1, 2), _if_then_else(True, zeros_diff_cols, 0), _if_then_else(True, zeros_diff_rows, 1)), _if_then_else(ge(ARG7, 4), _if_then_else(False, 4, ARG6), _if_then_else(False, zeros_diff_cols, 4)))
or_(ge(_if_then_else(and_(True, True), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(ge(1, ARG6), _if_then_else(True, 4, ARG7), _if_then_else(True, compare_blocks_cols, zeros_diff_cols))), and_(or_(or_(False, True), or_(True, False)), ge(_if_then_else(and_(True, and_(True, True)), _if_then_else(le(2, 0), zeros_diff_cols, 1), _if_then_else(False, zeros_diff_rows, _if_then_else(True, 1, ARG7))), _if_then_else(le(_if_then_else(ge(_if_then_else(False, 0, compare_blocks_cols), _if_then_else(False, 1, 0)), _if_then_else(le(ARG7, ones_diff_rows), _if_then_else(True, ones_diff_rows, ARG6), _if_then_else(True, zeros_diff_rows, 4)), _if_then_else(ge(compare_blocks_cols, zeros_diff_cols), _if_then_else(False, 2, 2), _if_then_else(True, ones_diff_cols, ones_diff_rows))), _if_then_else(or_(ge(_if_then_else(False, 3, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, ARG7)), and_(or_(False, True), le(ARG6, 0))), _if_then_else(le(_if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(True, 3, ARG6)), _if_then_else(le(zeros_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(False, ARG7, 4)), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(False, ones_diff_rows, ARG6), _if_then_else(False, compare_blocks_cols, zeros_diff_rows))), _if_then_else(or_(and_(False, True), ge(0, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(True, ones_diff_rows, ARG6), _if_then_else(False, ARG6, 3)), _if_then_else(ge(3, 4), _if_then_else(True, ones_diff_cols, compare_blocks_cols), _if_then_else(False, ones_diff_cols, 1))))), _if_then_else(or_(ge(_if_then_else(False, compare_blocks_cols, 2), _if_then_else(True, 3, ones_diff_rows)), and_(ge(compare_blocks_rows, 2), le(4, compare_blocks_rows))), _if_then_else(ge(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(True, ARG6, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(False, zeros_diff_rows, 3)), _if_then_else(ge(0, ARG7), _if_then_else(False, 4, ARG7), _if_then_else(True, ones_diff_rows, compare_blocks_rows))), _if_then_else(le(_if_then_else(False, 4, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(or_(True, True), _if_then_else(False, ARG7, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, 3)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(False, 4, ones_diff_rows)))), _if_then_else(and_(and_(True, and_(False, False)), le(_if_then_else(True, 3, zeros_diff_rows), _if_then_else(False, ones_diff_cols, ARG6))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, ARG7), _if_then_else(True, zeros_diff_cols, zeros_diff_cols)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(False, 3, ones_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, 4, ARG6), _if_then_else(False, 2, 0))), _if_then_else(or_(and_(False, False), le(4, ARG6)), _if_then_else(or_(False, False), _if_then_else(False, 3, ARG7), _if_then_else(True, 1, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, 4, 3), _if_then_else(True, zeros_diff_cols, ARG7))))))))
VAL TREES:
mul(mul(zeros_diff_rows, mul(ones_diff_cols, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_cols)))
add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_cols, ones_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_cols)), mul(add(ones_diff_cols, zeros_diff_rows), mul(add(ones_diff_rows, zeros_diff_rows), compare_blocks_rows)))
mul(add(add(mul(add(ones_diff_cols, zeros_diff_rows), mul(compare_blocks_rows, ones_diff_cols)), add(ones_diff_rows, zeros_diff_rows)), add(mul(mul(compare_blocks_cols, zeros_diff_rows), ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))), add(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), add(add(mul(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)), compare_blocks_rows))
add(mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, ones_diff_cols))), add(mul(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)))), add(mul(add(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)), zeros_diff_cols), add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))))
COND TREES:
le(_if_then_else(le(_if_then_else(False, 2, 2), _if_then_else(True, compare_blocks_cols, ones_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, 3, zeros_diff_rows), _if_then_else(False, 2, zeros_diff_rows)), _if_then_else(le(zeros_diff_rows, ones_diff_cols), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, 0), _if_then_else(False, 0, 4)), _if_then_else(True, zeros_diff_cols, compare_blocks_cols))), _if_then_else(ge(_if_then_else(True, _if_then_else(and_(True, False), ARG7, ARG6), 1), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(or_(or_(or_(False, True), or_(False, True)), or_(le(zeros_diff_rows, 4), le(ones_diff_cols, 2))), _if_then_else(and_(or_(False, True), or_(False, True)), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(False, 1, ones_diff_cols)), _if_then_else(and_(False, False), _if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(True, ARG6, compare_blocks_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, 0), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(ge(zeros_diff_rows, ARG6), _if_then_else(False, ARG7, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, 4)), _if_then_else(and_(True, False), _if_then_else(False, 1, compare_blocks_rows), _if_then_else(False, 1, ones_diff_rows)))), _if_then_else(True, ARG7, 1)), _if_then_else(ge(ones_diff_cols, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, ARG6), _if_then_else(True, 4, compare_blocks_rows))))
le(_if_then_else(le(_if_then_else(ge(4, 2), _if_then_else(False, zeros_diff_rows, ARG6), _if_then_else(False, ARG7, ARG7)), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_rows, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, compare_blocks_rows))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, ones_diff_rows), _if_then_else(True, ARG6, 1)), _if_then_else(and_(True, False), _if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(False, 3, 0)), _if_then_else(and_(False, True), _if_then_else(False, 1, zeros_diff_rows), 1)), _if_then_else(and_(le(ARG6, 2), ge(ones_diff_cols, 1)), _if_then_else(and_(False, True), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(False, 3, 1)), _if_then_else(ge(ones_diff_cols, 0), _if_then_else(False, 1, 1), _if_then_else(True, 4, zeros_diff_cols)))), _if_then_else(ge(_if_then_else(and_(False, False), _if_then_else(True, 4, ARG6), _if_then_else(True, zeros_diff_cols, 0)), _if_then_else(and_(True, False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, 4))), _if_then_else(or_(le(compare_blocks_rows, 1), le(ones_diff_cols, 1)), _if_then_else(ge(3, 3), _if_then_else(True, ones_diff_cols, 2), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, 4), _if_then_else(True, 3, zeros_diff_rows))), _if_then_else(and_(or_(True, False), or_(le(_if_then_else(or_(False, True), _if_then_else(True, ARG6, 1), _if_then_else(True, 4, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(False, 2, 4), _if_then_else(False, 4, 0))), False)), _if_then_else(and_(False, False), _if_then_else(True, 1, ones_diff_cols), _if_then_else(True, zeros_diff_rows, ARG7)), _if_then_else(le(ARG6, 1), _if_then_else(False, ARG6, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 3)))))
or_(le(_if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(False, ARG6, 4)), or_(and_(True, True), True))
le(_if_then_else(le(ARG7, _if_then_else(True, compare_blocks_rows, 4)), _if_then_else(and_(False, True), _if_then_else(True, ARG7, ones_diff_rows), _if_then_else(True, ones_diff_cols, ARG7)), _if_then_else(True, _if_then_else(True, 4, 0), _if_then_else(False, ARG6, 3))), _if_then_else(ge(_if_then_else(True, 2, ARG6), _if_then_else(True, compare_blocks_rows, 3)), _if_then_else(and_(True, False), _if_then_else(True, 0, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(le(1, zeros_diff_cols), _if_then_else(True, ones_diff_cols, ones_diff_rows), _if_then_else(True, ones_diff_rows, compare_blocks_cols))))
or_(and_(or_(True, True), True), le(_if_then_else(ge(ones_diff_rows, ARG7), _if_then_else(False, zeros_diff_rows, ARG6), _if_then_else(True, ones_diff_rows, compare_blocks_cols)), _if_then_else(le(1, zeros_diff_rows), _if_then_else(True, ARG6, ones_diff_rows), _if_then_else(True, 1, 2))))
VAL TREES:
mul(add(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, mul(ones_diff_rows, zeros_diff_rows))), add(add(zeros_diff_rows, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)))
mul(add(mul(ones_diff_rows, mul(ones_diff_cols, add(zeros_diff_rows, compare_blocks_cols))), add(zeros_diff_rows, add(ones_diff_cols, zeros_diff_cols))), add(mul(zeros_diff_cols, add(zeros_diff_cols, zeros_diff_rows)), mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_cols))))
add(add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, compare_blocks_cols)), add(mul(compare_blocks_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_cols)))
add(add(add(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_rows))), mul(add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_rows)), add(mul(mul(zeros_diff_rows, ones_diff_rows), ones_diff_cols), add(ones_diff_cols, ones_diff_rows))))
mul(mul(add(zeros_diff_rows, ones_diff_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, compare_blocks_cols), mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_rows))))
mul(add(zeros_diff_cols, zeros_diff_cols), add(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, ones_diff_cols), ones_diff_rows)))
COND TREES:
or_(or_(and_(False, True), le(0, 1)), or_(ge(_if_then_else(or_(and_(True, True), or_(True, True)), _if_then_else(le(ARG6, compare_blocks_rows), _if_then_else(False, ones_diff_rows, 3), _if_then_else(False, ARG7, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(True, 1, 2))), zeros_diff_cols), or_(True, True)))
or_(le(_if_then_else(ge(_if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 3, 4)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 2))), _if_then_else(and_(and_(False, True), ge(4, 2)), _if_then_else(ge(ARG6, 4), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)))), and_(or_(or_(and_(True, False), le(2, ones_diff_rows)), or_(or_(le(ones_diff_rows, 2), ge(2, ones_diff_cols)), and_(or_(ge(_if_then_else(False, zeros_diff_cols, ARG7), ARG6), True), and_(True, True)))), ge(_if_then_else(ge(4, 0), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 3, ARG7)), _if_then_else(le(compare_blocks_rows, 1), _if_then_else(False, 4, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))))
or_(le(_if_then_else(and_(True, True), _if_then_else(True, 4, 3), _if_then_else(le(_if_then_else(True, compare_blocks_rows, 3), _if_then_else(and_(ge(_if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(or_(True, True), ARG6, _if_then_else(False, 4, ones_diff_rows))), le(_if_then_else(False, _if_then_else(False, zeros_diff_rows, compare_blocks_rows), ARG6), _if_then_else(True, 1, _if_then_else(True, 3, ones_diff_rows)))), 4, ones_diff_cols)), 4, compare_blocks_rows)), _if_then_else(True, _if_then_else(True, ARG6, ARG6), compare_blocks_cols)), or_(or_(or_(True, True), and_(False, False)), or_(False, False)))
le(_if_then_else(le(1, 2), _if_then_else(True, zeros_diff_cols, 0), _if_then_else(True, zeros_diff_rows, 1)), _if_then_else(ge(ARG7, 4), 4, _if_then_else(False, zeros_diff_cols, 4)))
or_(ge(_if_then_else(and_(True, True), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(ge(1, ARG6), _if_then_else(True, 4, ARG7), _if_then_else(True, compare_blocks_cols, zeros_diff_cols))), and_(or_(or_(False, True), or_(True, False)), ge(_if_then_else(and_(True, and_(True, True)), _if_then_else(le(2, 0), zeros_diff_cols, 1), _if_then_else(False, zeros_diff_rows, _if_then_else(True, 1, ARG7))), _if_then_else(le(_if_then_else(ge(_if_then_else(False, 0, compare_blocks_cols), _if_then_else(False, 1, 0)), _if_then_else(le(ARG7, ones_diff_rows), _if_then_else(True, ones_diff_rows, ARG6), _if_then_else(True, zeros_diff_rows, 4)), _if_then_else(ge(compare_blocks_cols, zeros_diff_cols), _if_then_else(False, 2, 2), _if_then_else(True, ones_diff_cols, ones_diff_rows))), _if_then_else(ge(_if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(True, 3, ARG7)), _if_then_else(or_(False, False), _if_then_else(False, 3, compare_blocks_cols), _if_then_else(True, ones_diff_cols, ARG6)), _if_then_else(ge(3, zeros_diff_cols), _if_then_else(False, ones_diff_rows, 4), _if_then_else(False, zeros_diff_rows, 0)))), _if_then_else(or_(ge(_if_then_else(False, compare_blocks_cols, 2), _if_then_else(True, 3, ones_diff_rows)), and_(ge(compare_blocks_rows, 2), le(4, compare_blocks_rows))), _if_then_else(ge(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(True, ARG6, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(False, zeros_diff_rows, 3)), _if_then_else(ge(0, ARG7), _if_then_else(False, 4, ARG7), _if_then_else(True, ones_diff_rows, compare_blocks_rows))), _if_then_else(le(_if_then_else(False, 4, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(or_(True, True), _if_then_else(False, ARG7, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, 3)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(False, 4, ones_diff_rows)))), _if_then_else(and_(and_(True, and_(False, False)), le(_if_then_else(True, 3, zeros_diff_rows), _if_then_else(False, ones_diff_cols, ARG6))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, ARG7), _if_then_else(True, zeros_diff_cols, zeros_diff_cols)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(False, 3, ones_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, 4, ARG6), _if_then_else(False, 2, 0))), _if_then_else(or_(and_(False, False), le(4, ARG6)), _if_then_else(or_(False, False), _if_then_else(False, 3, ARG7), _if_then_else(True, 1, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, 4, 3), _if_then_else(True, zeros_diff_cols, ARG7))))))))
VAL TREES:
mul(mul(add(ones_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_cols)))
add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), mul(add(ones_diff_rows, zeros_diff_rows), compare_blocks_rows)))
mul(add(add(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows)), add(mul(mul(compare_blocks_cols, zeros_diff_rows), ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))), add(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), add(add(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)), compare_blocks_rows))
add(mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, ones_diff_cols))), add(mul(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)))), add(mul(add(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows))), add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))))
COND TREES:
ge(_if_then_else(le(_if_then_else(le(ones_diff_cols, 2), ones_diff_cols, _if_then_else(True, ones_diff_cols, 4)), _if_then_else(True, 0, _if_then_else(True, compare_blocks_rows, ARG6))), _if_then_else(ge(compare_blocks_cols, 2), zeros_diff_rows, 0), _if_then_else(False, _if_then_else(False, zeros_diff_cols, 1), 0)), _if_then_else(ge(ARG7, 3), _if_then_else(False, compare_blocks_cols, _if_then_else(True, _if_then_else(True, ARG7, 3), 3)), _if_then_else(True, ARG6, ARG6)))
ge(_if_then_else(or_(or_(le(ones_diff_rows, 4), le(1, zeros_diff_rows)), le(_if_then_else(False, 0, ARG6), _if_then_else(True, ones_diff_rows, 4))), _if_then_else(and_(and_(True, False), or_(False, False)), _if_then_else(or_(False, True), _if_then_else(False, 3, ARG6), _if_then_else(True, ones_diff_cols, 2)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(False, ARG6, compare_blocks_cols))), _if_then_else(and_(le(zeros_diff_cols, compare_blocks_rows), or_(False, True)), _if_then_else(le(ones_diff_rows, 3), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(True, ARG6, zeros_diff_rows)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(True, 3, ARG6), _if_then_else(True, 4, 3)))), _if_then_else(le(_if_then_else(le(compare_blocks_rows, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 4, ARG7)), _if_then_else(and_(True, True), _if_then_else(False, 4, 0), _if_then_else(False, ones_diff_rows, 3))), _if_then_else(and_(le(ARG6, ARG6), ge(2, 2)), _if_then_else(and_(True, False), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows))), _if_then_else(or_(ge(4, 2), ge(zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, ARG6, 1), _if_then_else(and_(ge(ones_diff_rows, zeros_diff_cols), ge(_if_then_else(le(compare_blocks_cols, compare_blocks_rows), ones_diff_rows, zeros_diff_cols), ones_diff_rows)), _if_then_else(ge(ARG7, ones_diff_cols), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(False, ones_diff_rows, 0)), _if_then_else(ge(0, 1), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(and_(True, False), 0, 1)))), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4)))))
and_(ge(_if_then_else(le(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 0, ARG6), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(le(_if_then_else(le(_if_then_else(or_(and_(True, False), ge(4, 3)), _if_then_else(and_(False, True), _if_then_else(True, 4, ARG7), _if_then_else(True, zeros_diff_cols, ARG6)), _if_then_else(or_(True, False), _if_then_else(False, 4, 1), _if_then_else(False, compare_blocks_cols, 1))), _if_then_else(ge(_if_then_else(False, 2, _if_then_else(or_(ge(compare_blocks_cols, ones_diff_cols), le(zeros_diff_rows, ones_diff_rows)), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(le(0, 4), 0, 0))), _if_then_else(False, ones_diff_cols, ARG7)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(False, ARG6, compare_blocks_cols)), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_rows, ARG6), _if_then_else(False, 4, zeros_diff_cols)))), _if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, 4, ones_diff_cols), _if_then_else(True, 2, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, ARG7, 4), _if_then_else(False, ARG6, 1))), _if_then_else(ge(_if_then_else(True, 4, compare_blocks_cols), _if_then_else(True, ARG7, ARG7)), _if_then_else(and_(False, True), _if_then_else(True, 0, 1), _if_then_else(True, ARG6, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, 2), _if_then_else(True, ARG7, ARG7), _if_then_else(False, ones_diff_cols, 1))), _if_then_else(ge(_if_then_else(False, ARG7, 4), _if_then_else(True, 4, ones_diff_cols)), _if_then_else(ge(4, 4), _if_then_else(True, ARG6, 0), _if_then_else(False, compare_blocks_cols, compare_blocks_rows)), _if_then_else(le(ones_diff_cols, ones_diff_rows), _if_then_else(False, 0, ones_diff_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)))), _if_then_else(or_(le(_if_then_else(False, compare_blocks_rows, ARG6), _if_then_else(True, ARG6, 1)), ge(_if_then_else(False, ARG7, 0), _if_then_else(True, ARG7, 4))), _if_then_else(le(_if_then_else(True, zeros_diff_cols, 0), _if_then_else(False, ARG6, zeros_diff_rows)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, 2, 0)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 1))), _if_then_else(or_(or_(False, True), ge(0, ones_diff_cols)), _if_then_else(le(1, 0), _if_then_else(True, ARG6, 4), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_cols, ones_diff_rows), _if_then_else(True, ones_diff_rows, ARG7))))), 3), _if_then_else(False, 1, 4), _if_then_else(False, 0, ones_diff_cols))), ge(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, 4), _if_then_else(False, zeros_diff_rows, compare_blocks_cols)), _if_then_else(ge(_if_then_else(False, 3, zeros_diff_rows), _if_then_else(True, ARG7, compare_blocks_cols)), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(True, compare_blocks_rows, ones_diff_rows))))
or_(and_(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(or_(True, True), _if_then_else(False, ARG6, 4), _if_then_else(True, 2, 3))), and_(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), le(_if_then_else(True, 1, 2), _if_then_else(True, ARG7, compare_blocks_rows)))), or_(or_(and_(or_(True, False), ge(4, zeros_diff_rows)), le(_if_then_else(True, 4, _if_then_else(False, zeros_diff_cols, 2)), _if_then_else(False, 0, 0))), or_(ge(_if_then_else(True, ones_diff_cols, 0), _if_then_else(True, 0, 0)), and_(or_(False, False), le(ones_diff_rows, _if_then_else(False, 4, ARG6))))))
and_(le(_if_then_else(ge(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols, ones_diff_cols), _if_then_else(and_(False, False), 4, compare_blocks_cols)), ge(_if_then_else(and_(True, True), 1, zeros_diff_rows), _if_then_else(True, ARG6, _if_then_else(or_(True, True), 0, compare_blocks_rows))))
VAL TREES:
mul(add(add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_rows))), mul(add(ones_diff_cols, ones_diff_cols), mul(mul(add(compare_blocks_cols, ones_diff_cols), ones_diff_rows), ones_diff_rows)))
mul(compare_blocks_cols, add(add(ones_diff_rows, zeros_diff_rows), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))), add(add(mul(mul(mul(zeros_diff_rows, ones_diff_rows), mul(add(mul(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_cols)))), compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), mul(mul(ones_diff_cols, zeros_diff_cols), compare_blocks_cols))))
mul(add(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, add(compare_blocks_cols, zeros_diff_rows))), add(add(zeros_diff_cols, compare_blocks_rows), ones_diff_cols))
add(add(mul(add(add(mul(mul(ones_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows)), zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols))), mul(mul(mul(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_rows)))), add(add(add(mul(ones_diff_rows, mul(compare_blocks_cols, zeros_diff_cols)), add(ones_diff_cols, compare_blocks_cols)), add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), add(mul(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)))))
add(mul(add(mul(add(ones_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)), mul(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(mul(add(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)))), mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, add(ones_diff_rows, compare_blocks_cols))), zeros_diff_cols)))
COND TREES:
or_(ge(2, 1), ge(_if_then_else(le(_if_then_else(le(ARG7, zeros_diff_rows), _if_then_else(True, ARG6, zeros_diff_cols), _if_then_else(True, 1, 2)), _if_then_else(le(compare_blocks_cols, 0), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, zeros_diff_rows))), _if_then_else(False, 2, ARG6), _if_then_else(True, 3, ARG6)), _if_then_else(le(1, 1), _if_then_else(False, ones_diff_rows, ARG7), _if_then_else(False, zeros_diff_cols, 0))))
and_(or_(ge(4, 1), and_(or_(ge(4, 1), and_(True, True)), True)), le(_if_then_else(le(_if_then_else(or_(and_(False, True), ge(3, ARG7)), _if_then_else(ge(0, ARG7), _if_then_else(True, ARG7, zeros_diff_rows), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(4, zeros_diff_cols), _if_then_else(True, 1, 1), _if_then_else(False, 4, zeros_diff_cols))), _if_then_else(or_(ge(4, compare_blocks_rows), or_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ARG6, ARG7), _if_then_else(True, zeros_diff_rows, 4)), _if_then_else(and_(False, False), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, 3)))), _if_then_else(le(_if_then_else(or_(True, True), _if_then_else(True, ARG7, 0), _if_then_else(True, ARG7, compare_blocks_rows)), _if_then_else(ge(0, 0), _if_then_else(False, 0, 1), _if_then_else(True, ones_diff_rows, zeros_diff_cols))), _if_then_else(and_(and_(True, False), or_(True, True)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_cols, 2), _if_then_else(True, compare_blocks_rows, 3)), _if_then_else(or_(False, False), _if_then_else(False, 0, ones_diff_cols), _if_then_else(True, 2, ones_diff_rows))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, 3), _if_then_else(False, ARG7, ARG6)), _if_then_else(ge(2, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, 3, compare_blocks_cols)), _if_then_else(le(compare_blocks_cols, 2), _if_then_else(False, 4, 0), _if_then_else(False, 3, ARG6)))), _if_then_else(ge(_if_then_else(or_(True, False), _if_then_else(False, 1, zeros_diff_rows), 1), _if_then_else(le(compare_blocks_rows, 2), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, 4))), _if_then_else(or_(le(compare_blocks_cols, ARG7), ge(3, zeros_diff_cols)), _if_then_else(ge(1, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, ones_diff_rows)), _if_then_else(ge(ARG6, ARG6), _if_then_else(True, zeros_diff_rows, ARG6), _if_then_else(True, compare_blocks_cols, compare_blocks_rows))), _if_then_else(le(_if_then_else(False, ARG7, 4), _if_then_else(True, 2, ones_diff_rows)), _if_then_else(and_(True, False), _if_then_else(True, zeros_diff_cols, ones_diff_cols), _if_then_else(False, 1, compare_blocks_rows)), _if_then_else(le(2, ones_diff_cols), _if_then_else(False, 1, 2), _if_then_else(False, compare_blocks_cols, ones_diff_rows))))), _if_then_else(True, zeros_diff_cols, 0)))
le(_if_then_else(or_(ge(compare_blocks_cols, ones_diff_cols), le(zeros_diff_rows, ones_diff_rows)), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(le(0, 4), 0, 0)), _if_then_else(le(zeros_diff_rows, 0), _if_then_else(ge(ones_diff_rows, 2), ones_diff_cols, ARG6), _if_then_else(True, 1, compare_blocks_rows)))
or_(ge(_if_then_else(False, ARG7, 3), _if_then_else(True, ARG7, ARG6)), and_(or_(and_(le(_if_then_else(ge(0, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, 0), _if_then_else(True, ones_diff_rows, ARG7)), _if_then_else(and_(False, False), _if_then_else(False, 4, 4), _if_then_else(False, ARG7, ARG7))), le(_if_then_else(or_(False, False), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(le(2, 2), _if_then_else(True, 1, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, ARG6)))), ge(_if_then_else(le(_if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(True, zeros_diff_cols, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(False, 4, 0), _if_then_else(False, ARG6, 0)), _if_then_else(ge(2, 1), _if_then_else(False, compare_blocks_rows, 2), _if_then_else(False, 1, ARG7))), _if_then_else(le(_if_then_else(True, compare_blocks_rows, 0), _if_then_else(True, 2, 0)), _if_then_else(or_(True, False), _if_then_else(True, 2, ARG6), _if_then_else(True, 0, 3)), _if_then_else(le(zeros_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 4))))), or_(False, and_(False, True))))
ge(_if_then_else(and_(True, le(ones_diff_cols, _if_then_else(and_(and_(True, True), le(4, 2)), _if_then_else(or_(True, False), _if_then_else(False, _if_then_else(and_(False, and_(True, True)), _if_then_else(le(2, 0), zeros_diff_cols, 1), _if_then_else(False, zeros_diff_rows, _if_then_else(True, 1, ARG7))), 2), _if_then_else(False, 4, ARG6)), _if_then_else(le(ones_diff_rows, 1), _if_then_else(False, zeros_diff_rows, ARG7), _if_then_else(False, 2, 2))))), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, zeros_diff_cols), 3), _if_then_else(True, 4, ARG6)), _if_then_else(and_(True, True), _if_then_else(True, compare_blocks_rows, zeros_diff_rows), _if_then_else(True, ARG7, 1)))
VAL TREES:
add(add(add(add(add(mul(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows)), add(mul(add(ones_diff_rows, ones_diff_rows), compare_blocks_rows), add(zeros_diff_rows, zeros_diff_rows))), zeros_diff_rows), add(zeros_diff_cols, compare_blocks_cols)), add(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)))
add(add(ones_diff_rows, add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, compare_blocks_cols))), mul(mul(mul(ones_diff_cols, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), mul(add(mul(add(mul(mul(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, ones_diff_cols)), mul(mul(compare_blocks_rows, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows))), add(add(mul(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_rows)), mul(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)))), mul(mul(mul(mul(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_cols)), add(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, ones_diff_cols))), mul(mul(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_rows, zeros_diff_rows)), mul(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_cols))))), add(zeros_diff_rows, ones_diff_rows))))
mul(mul(mul(add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_cols, add(ones_diff_rows, zeros_diff_cols)), add(ones_diff_rows, ones_diff_rows))), mul(mul(add(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_cols, ones_diff_cols)))), add(compare_blocks_cols, mul(add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols)))))
add(mul(mul(add(ones_diff_rows, ones_diff_cols), compare_blocks_cols), mul(compare_blocks_rows, compare_blocks_rows)), mul(mul(compare_blocks_rows, ones_diff_rows), add(add(ones_diff_rows, mul(mul(ones_diff_rows, ones_diff_cols), ones_diff_cols)), add(mul(mul(add(add(add(mul(add(zeros_diff_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_cols))), add(add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_rows)))), mul(mul(mul(add(zeros_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_rows, zeros_diff_rows))), mul(mul(zeros_diff_rows, add(ones_diff_rows, zeros_diff_rows)), mul(mul(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_cols, compare_blocks_rows))))), zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_cols)), compare_blocks_cols))))
add(zeros_diff_rows, add(add(mul(mul(ones_diff_cols, ones_diff_rows), mul(ones_diff_rows, ones_diff_rows)), add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows))), add(add(mul(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols)), add(add(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)))))
mul(mul(mul(add(mul(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, ones_diff_rows)), mul(mul(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols))), mul(add(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_rows, ones_diff_rows))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(mul(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)))), mul(add(mul(mul(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)))))
COND TREES:
ge(_if_then_else(le(_if_then_else(le(ones_diff_cols, 2), ones_diff_cols, _if_then_else(True, 4, compare_blocks_rows)), _if_then_else(False, 0, _if_then_else(True, compare_blocks_rows, ARG6))), _if_then_else(ge(compare_blocks_cols, 2), _if_then_else(and_(False, False), ARG7, ARG6), 0), _if_then_else(False, _if_then_else(False, zeros_diff_cols, 1), zeros_diff_rows)), _if_then_else(ge(ARG7, 3), _if_then_else(False, compare_blocks_cols, _if_then_else(True, _if_then_else(True, ARG7, 3), 3)), _if_then_else(True, ARG6, ARG6)))
ge(_if_then_else(or_(or_(le(ones_diff_rows, 4), le(1, zeros_diff_rows)), le(_if_then_else(False, 0, ARG6), _if_then_else(True, ones_diff_rows, 4))), _if_then_else(and_(and_(True, False), or_(False, False)), _if_then_else(or_(False, True), _if_then_else(False, 3, ARG6), _if_then_else(True, ones_diff_cols, 2)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(False, ARG6, compare_blocks_cols))), _if_then_else(and_(le(zeros_diff_cols, compare_blocks_rows), or_(False, True)), _if_then_else(le(ones_diff_rows, 3), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(True, ARG6, zeros_diff_rows)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(True, 3, ARG6), _if_then_else(True, 4, 3)))), _if_then_else(le(_if_then_else(le(compare_blocks_rows, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 4, ARG7)), _if_then_else(and_(True, True), _if_then_else(False, 4, 0), _if_then_else(False, ones_diff_rows, 3))), _if_then_else(False, _if_then_else(and_(True, False), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows))), _if_then_else(or_(ge(4, 2), ge(zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, ARG6, 1), _if_then_else(False, 0, 3)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4)))))
and_(ge(_if_then_else(le(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 0, ARG6), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(le(3, 3), _if_then_else(False, 1, 4), _if_then_else(False, 0, ones_diff_cols))), ge(_if_then_else(or_(False, False), _if_then_else(True, ones_diff_cols, 4), _if_then_else(False, zeros_diff_rows, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(True, compare_blocks_rows, ones_diff_rows))))
or_(and_(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(or_(True, True), _if_then_else(False, ARG6, 4), _if_then_else(True, 2, 3))), and_(ge(compare_blocks_cols, _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), le(_if_then_else(True, 1, 2), _if_then_else(True, ARG7, compare_blocks_rows)))), or_(or_(and_(or_(True, False), ge(4, zeros_diff_rows)), le(_if_then_else(True, 4, ARG7), _if_then_else(False, 0, 0))), or_(ge(_if_then_else(True, ones_diff_cols, 0), _if_then_else(True, 0, 0)), and_(or_(False, False), and_(False, True)))))
and_(le(_if_then_else(ge(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols, ones_diff_cols), _if_then_else(and_(True, False), 4, compare_blocks_cols)), ge(_if_then_else(and_(True, True), 1, zeros_diff_rows), _if_then_else(False, ARG6, _if_then_else(True, 0, compare_blocks_rows))))
VAL TREES:
mul(mul(zeros_diff_cols, ones_diff_rows), mul(add(ones_diff_cols, mul(ones_diff_rows, compare_blocks_rows)), mul(ones_diff_rows, zeros_diff_rows)))
mul(mul(zeros_diff_cols, mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_rows)), add(add(ones_diff_rows, add(add(compare_blocks_cols, compare_blocks_cols), zeros_diff_cols)), add(zeros_diff_rows, zeros_diff_rows)))
mul(compare_blocks_cols, add(add(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, compare_blocks_rows)), add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, add(ones_diff_rows, zeros_diff_rows)))))
mul(add(mul(ones_diff_cols, ones_diff_rows), add(compare_blocks_cols, add(zeros_diff_rows, ones_diff_cols))), add(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, zeros_diff_rows)))
add(add(mul(add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols))), mul(mul(mul(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows)), mul(ones_diff_rows, zeros_diff_rows))), add(add(add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, compare_blocks_cols)), add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), add(mul(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)))))
add(mul(add(mul(compare_blocks_rows, add(add(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows)), mul(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(mul(add(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), mul(mul(add(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_rows)))))
COND TREES:
ge(_if_then_else(le(_if_then_else(le(ones_diff_cols, 2), ones_diff_cols, _if_then_else(True, ones_diff_cols, 4)), _if_then_else(True, 0, _if_then_else(True, compare_blocks_rows, ARG6))), _if_then_else(ge(compare_blocks_cols, 2), _if_then_else(and_(False, False), ARG7, ARG6), 0), _if_then_else(False, _if_then_else(False, zeros_diff_cols, 1), zeros_diff_rows)), _if_then_else(ge(ARG7, 3), _if_then_else(False, compare_blocks_cols, _if_then_else(True, _if_then_else(True, ARG7, 3), compare_blocks_cols)), _if_then_else(True, ARG6, ARG6)))
ge(_if_then_else(or_(or_(le(ones_diff_rows, 4), le(1, zeros_diff_rows)), le(_if_then_else(False, 0, ARG6), _if_then_else(True, ones_diff_rows, 4))), _if_then_else(and_(and_(True, False), or_(False, False)), _if_then_else(or_(False, True), _if_then_else(False, 3, ARG6), _if_then_else(True, ones_diff_cols, 2)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(False, ARG6, compare_blocks_cols))), _if_then_else(and_(le(zeros_diff_cols, compare_blocks_rows), or_(False, True)), _if_then_else(le(ones_diff_rows, 3), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(True, ARG6, zeros_diff_rows)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(True, 3, ARG6), _if_then_else(True, 4, 3)))), _if_then_else(le(_if_then_else(le(compare_blocks_rows, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 4, ARG7)), _if_then_else(and_(True, True), _if_then_else(False, 4, 0), _if_then_else(False, ones_diff_rows, 3))), _if_then_else(and_(le(ARG6, ARG6), ge(2, 2)), _if_then_else(and_(True, False), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows))), _if_then_else(or_(ge(4, 2), ge(zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, ARG6, 1), _if_then_else(False, 0, 3)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4)))))
and_(ge(_if_then_else(le(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 0, ARG6), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(le(3, 3), _if_then_else(False, 1, 4), _if_then_else(or_(or_(True, True), and_(False, False)), 0, ones_diff_cols))), ge(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, 4), _if_then_else(False, zeros_diff_rows, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(True, compare_blocks_rows, ones_diff_rows))))
or_(and_(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(or_(True, True), _if_then_else(False, ARG6, 4), _if_then_else(True, 2, 3))), True), or_(or_(and_(or_(True, False), ge(4, zeros_diff_rows)), le(_if_then_else(True, 4, ARG7), _if_then_else(False, 0, 0))), or_(ge(_if_then_else(True, ones_diff_cols, 0), _if_then_else(True, 0, 0)), and_(or_(False, False), le(ones_diff_rows, 4)))))
and_(le(_if_then_else(ge(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols, ones_diff_cols), _if_then_else(and_(False, False), 4, compare_blocks_cols)), ge(_if_then_else(and_(True, True), 1, zeros_diff_rows), _if_then_else(False, ARG6, _if_then_else(True, 0, compare_blocks_rows))))
VAL TREES:
mul(add(ones_diff_rows, compare_blocks_cols), mul(add(ones_diff_cols, mul(ones_diff_rows, compare_blocks_rows)), mul(ones_diff_rows, zeros_diff_rows)))
mul(mul(zeros_diff_cols, mul(compare_blocks_cols, zeros_diff_rows)), mul(zeros_diff_rows, ones_diff_rows))
mul(zeros_diff_cols, add(add(mul(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_rows, zeros_diff_cols)), add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, add(ones_diff_rows, zeros_diff_rows)))))
mul(ones_diff_cols, add(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, zeros_diff_rows)))
add(add(mul(add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols))), mul(mul(mul(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), mul(ones_diff_rows, zeros_diff_rows))), add(add(add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), add(mul(mul(compare_blocks_cols, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols)), mul(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)))))
add(mul(add(mul(compare_blocks_rows, add(add(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows)), mul(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(mul(add(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), mul(mul(add(zeros_diff_cols, add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_rows)))))
COND TREES:
or_(or_(and_(False, True), le(0, 1)), or_(ge(3, 4), or_(True, False)))
or_(le(_if_then_else(ge(_if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 3, 4)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, ones_diff_rows, 2))), _if_then_else(and_(and_(False, True), ge(4, 2)), _if_then_else(ge(ARG6, 4), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)))), and_(or_(or_(and_(True, False), le(2, ones_diff_rows)), ge(_if_then_else(False, 4, 2), _if_then_else(True, 0, 1))), ge(_if_then_else(ge(4, 0), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 3, ARG7)), _if_then_else(le(compare_blocks_rows, 1), _if_then_else(False, 4, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))))
or_(le(_if_then_else(and_(True, True), _if_then_else(True, 4, _if_then_else(False, ones_diff_cols, 2)), _if_then_else(False, 4, compare_blocks_rows)), _if_then_else(True, _if_then_else(True, ARG6, ARG6), compare_blocks_cols)), or_(False, or_(False, False)))
le(_if_then_else(le(1, 2), _if_then_else(True, zeros_diff_cols, 0), _if_then_else(and_(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), le(_if_then_else(True, 1, 2), _if_then_else(True, ARG7, compare_blocks_rows))), zeros_diff_rows, 1)), _if_then_else(False, compare_blocks_cols, 4))
or_(ge(_if_then_else(and_(True, True), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(ge(1, _if_then_else(and_(False, False), 4, compare_blocks_cols)), _if_then_else(True, 4, ARG7), _if_then_else(True, compare_blocks_cols, zeros_diff_cols))), and_(or_(or_(False, True), or_(True, False)), ge(_if_then_else(False, ARG7, zeros_diff_rows), _if_then_else(False, ones_diff_cols, ones_diff_cols))))
VAL TREES:
mul(mul(add(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_cols)))
add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, add(mul(add(mul(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_cols)), add(add(compare_blocks_rows, compare_blocks_cols), mul(ones_diff_rows, ones_diff_rows))), mul(add(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(zeros_diff_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols))))), mul(zeros_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), add(add(add(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, mul(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, compare_blocks_rows)), add(add(ones_diff_rows, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols))))), add(mul(ones_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))))))
mul(add(add(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows)), add(mul(mul(compare_blocks_cols, zeros_diff_rows), ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))), add(mul(add(zeros_diff_rows, add(add(compare_blocks_rows, mul(compare_blocks_rows, ones_diff_rows)), mul(compare_blocks_rows, zeros_diff_rows))), add(ones_diff_rows, add(mul(mul(compare_blocks_rows, ones_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_cols))))), mul(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(mul(mul(ones_diff_rows, zeros_diff_rows), mul(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), add(add(mul(add(add(zeros_diff_cols, ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows))), add(compare_blocks_rows, ones_diff_cols)), compare_blocks_rows))
add(mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, ones_diff_cols))), add(mul(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols)), compare_blocks_rows)), add(mul(add(add(zeros_diff_cols, ones_diff_rows), add(add(add(mul(compare_blocks_rows, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(ones_diff_rows, ones_diff_cols)), mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, compare_blocks_cols)))), mul(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows))), add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))))
COND TREES:
le(_if_then_else(le(ones_diff_rows, ARG7), _if_then_else(and_(True, le(2, ARG7)), 1, 3), _if_then_else(le(_if_then_else(False, ARG6, 2), ARG7), 3, _if_then_else(ge(0, 1), zeros_diff_rows, 3))), _if_then_else(ge(_if_then_else(False, 4, zeros_diff_rows), compare_blocks_cols), _if_then_else(and_(False, False), 1, 0), _if_then_else(False, ARG7, _if_then_else(ge(0, ones_diff_rows), 4, zeros_diff_cols))))
le(_if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, ones_diff_rows, 4), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(and_(True, False), _if_then_else(True, 2, ARG6), _if_then_else(False, compare_blocks_rows, 3)))
le(_if_then_else(ge(2, compare_blocks_cols), _if_then_else(ge(_if_then_else(False, ARG6, 1), _if_then_else(True, ones_diff_rows, compare_blocks_cols)), compare_blocks_cols, 3), _if_then_else(True, ones_diff_cols, _if_then_else(and_(True, False), 0, 4))), 3)
ge(_if_then_else(and_(or_(True, False), and_(False, False)), _if_then_else(or_(False, False), _if_then_else(True, compare_blocks_cols, 2), _if_then_else(False, ARG7, zeros_diff_cols)), _if_then_else(le(compare_blocks_rows, ARG6), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(True, 0, zeros_diff_rows))), _if_then_else(or_(le(zeros_diff_rows, 2), ge(ones_diff_rows, ARG7)), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(False, 3, zeros_diff_cols)), _if_then_else(ge(4, 0), _if_then_else(le(1, 2), ones_diff_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_rows))))
le(_if_then_else(and_(True, or_(True, False)), _if_then_else(False, 0, zeros_diff_cols), _if_then_else(True, ARG6, 4)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(True, _if_then_else(False, 2, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols)), _if_then_else(True, 0, ARG6)))
VAL TREES:
mul(add(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), add(zeros_diff_cols, zeros_diff_cols)), mul(add(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_rows))), mul(add(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), mul(zeros_diff_rows, zeros_diff_cols))), add(mul(add(add(ones_diff_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)), mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_rows))), add(add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows)), mul(mul(compare_blocks_rows, compare_blocks_rows), ones_diff_cols))))
add(mul(add(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_rows)), compare_blocks_cols)
add(add(add(zeros_diff_rows, compare_blocks_cols), add(mul(add(zeros_diff_rows, add(mul(ones_diff_rows, zeros_diff_cols), zeros_diff_rows)), mul(mul(compare_blocks_cols, compare_blocks_rows), ones_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), mul(add(zeros_diff_cols, compare_blocks_cols), add(mul(compare_blocks_cols, zeros_diff_rows), compare_blocks_cols))))), add(mul(compare_blocks_rows, compare_blocks_rows), mul(mul(ones_diff_rows, zeros_diff_cols), compare_blocks_cols)))
mul(add(mul(ones_diff_cols, ones_diff_rows), add(compare_blocks_cols, add(add(mul(mul(ones_diff_rows, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_cols)), mul(add(ones_diff_cols, zeros_diff_rows), mul(compare_blocks_rows, ones_diff_cols))), mul(add(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols)), mul(add(ones_diff_rows, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_rows)))))), mul(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, add(ones_diff_rows, ones_diff_cols))))
add(add(add(mul(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_rows)), add(zeros_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, mul(mul(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_cols)), add(compare_blocks_rows, zeros_diff_rows)), mul(add(add(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_cols, ones_diff_cols)), add(compare_blocks_cols, compare_blocks_rows)))), add(zeros_diff_cols, zeros_diff_rows)))
mul(mul(mul(add(mul(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_cols, ones_diff_rows), add(compare_blocks_rows, compare_blocks_rows))), add(add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_rows, zeros_diff_rows)))), add(mul(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_rows))), add(mul(mul(ones_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_rows, ones_diff_rows))))
COND TREES:
ge(_if_then_else(le(_if_then_else(le(ones_diff_cols, 2), ones_diff_cols, _if_then_else(True, ones_diff_cols, _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, 0), _if_then_else(False, 0, 4)))), _if_then_else(True, 0, _if_then_else(True, compare_blocks_rows, ARG6))), _if_then_else(ge(compare_blocks_cols, 2), _if_then_else(and_(False, False), ARG7, ARG6), 0), _if_then_else(False, _if_then_else(False, zeros_diff_cols, 1), zeros_diff_rows)), _if_then_else(ge(ARG7, 3), _if_then_else(False, compare_blocks_cols, _if_then_else(True, _if_then_else(True, ARG7, 3), 3)), _if_then_else(True, ARG6, ARG6)))
ge(_if_then_else(or_(or_(le(ones_diff_rows, 4), le(1, zeros_diff_rows)), le(_if_then_else(False, 0, ARG6), _if_then_else(True, ones_diff_rows, 4))), _if_then_else(and_(and_(True, False), or_(False, False)), _if_then_else(or_(False, True), _if_then_else(False, 3, ARG6), _if_then_else(True, ones_diff_cols, 2)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(False, ARG6, compare_blocks_cols))), _if_then_else(and_(le(zeros_diff_cols, compare_blocks_rows), or_(False, True)), _if_then_else(le(ones_diff_rows, 3), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(True, ARG6, zeros_diff_rows)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(True, 3, ARG6), _if_then_else(True, 4, 3)))), _if_then_else(le(_if_then_else(le(compare_blocks_rows, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 4, ARG7)), _if_then_else(and_(True, True), _if_then_else(False, 4, 0), _if_then_else(False, ones_diff_rows, 3))), _if_then_else(and_(le(ARG6, ARG6), ge(2, 2)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_cols, 1), _if_then_else(True, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows))), _if_then_else(or_(ge(4, 2), ge(zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, ARG6, 1), _if_then_else(False, 0, 3)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4)))))
and_(ge(_if_then_else(le(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 0, ARG6), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(le(3, 3), _if_then_else(False, 1, 4), _if_then_else(False, 0, ones_diff_cols))), ge(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, 4), _if_then_else(False, zeros_diff_rows, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(True, compare_blocks_rows, ones_diff_rows))))
or_(and_(le(_if_then_else(le(ARG7, _if_then_else(True, compare_blocks_rows, 4)), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(or_(True, True), _if_then_else(False, ARG6, 4), _if_then_else(True, 2, 3))), and_(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), le(_if_then_else(True, 1, 2), _if_then_else(True, ARG7, compare_blocks_rows)))), or_(or_(and_(or_(True, False), ge(4, zeros_diff_rows)), le(_if_then_else(True, 4, ARG7), _if_then_else(False, 0, 0))), or_(ge(_if_then_else(True, ones_diff_cols, 0), _if_then_else(True, 0, 0)), and_(or_(False, False), le(ones_diff_rows, 4)))))
and_(le(3, _if_then_else(and_(False, False), 4, compare_blocks_cols)), ge(_if_then_else(and_(True, True), 1, zeros_diff_rows), _if_then_else(False, ARG6, _if_then_else(True, 0, compare_blocks_rows))))
VAL TREES:
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, compare_blocks_rows)), zeros_diff_cols)
mul(mul(zeros_diff_cols, mul(compare_blocks_cols, zeros_diff_rows)), add(add(ones_diff_rows, add(zeros_diff_cols, mul(zeros_diff_cols, mul(compare_blocks_cols, zeros_diff_rows)))), add(zeros_diff_rows, zeros_diff_rows)))
mul(zeros_diff_cols, add(add(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, add(ones_diff_rows, zeros_diff_rows)))))
mul(add(mul(zeros_diff_rows, mul(mul(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols))), add(zeros_diff_rows, add(ones_diff_cols, zeros_diff_rows))), add(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, zeros_diff_rows)))
add(add(mul(add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols))), mul(mul(mul(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), mul(ones_diff_rows, zeros_diff_rows))), add(add(add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), add(mul(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)))))
add(mul(add(mul(compare_blocks_rows, add(add(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows)), mul(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(mul(add(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(mul(mul(add(mul(zeros_diff_cols, ones_diff_cols), compare_blocks_cols), add(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows))), mul(mul(mul(compare_blocks_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, compare_blocks_rows))), compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))), mul(mul(compare_blocks_rows, add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_rows)))))
COND TREES:
ge(_if_then_else(le(_if_then_else(and_(ge(_if_then_else(ge(1, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), zeros_diff_cols), 0), or_(True, le(ARG7, compare_blocks_cols))), _if_then_else(ge(zeros_diff_cols, ARG7), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(True, 1, 4)), _if_then_else(ge(_if_then_else(False, 0, zeros_diff_cols), 3), _if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(True, 2, 3))), _if_then_else(True, 0, _if_then_else(True, compare_blocks_rows, ARG6))), _if_then_else(ge(compare_blocks_cols, 2), zeros_diff_rows, 0), _if_then_else(ge(compare_blocks_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, 1), zeros_diff_rows)), _if_then_else(ge(ARG7, 3), _if_then_else(False, compare_blocks_cols, _if_then_else(True, _if_then_else(True, ARG7, 3), 3)), _if_then_else(True, ARG6, ARG6)))
ge(_if_then_else(or_(or_(le(ones_diff_rows, 4), le(1, zeros_diff_rows)), le(_if_then_else(False, 0, ARG6), _if_then_else(True, ones_diff_rows, 4))), _if_then_else(and_(and_(True, False), or_(False, False)), _if_then_else(or_(False, True), _if_then_else(False, 3, ARG6), _if_then_else(True, ones_diff_cols, 2)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(False, ARG6, compare_blocks_cols))), _if_then_else(and_(le(zeros_diff_cols, compare_blocks_rows), or_(False, True)), _if_then_else(le(ones_diff_rows, 3), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(True, ARG6, zeros_diff_rows)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(True, 3, ARG6), _if_then_else(True, 4, 3)))), _if_then_else(le(_if_then_else(le(compare_blocks_rows, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 4, ARG7)), _if_then_else(and_(True, True), _if_then_else(False, 4, 0), _if_then_else(False, ones_diff_rows, 3))), _if_then_else(and_(le(ARG6, ARG6), ge(2, 2)), _if_then_else(and_(True, False), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows))), _if_then_else(or_(ge(4, 2), ge(zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, ARG6, 1), _if_then_else(False, 0, 3)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4)))))
and_(ge(_if_then_else(le(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 0, ARG6), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(le(3, 3), _if_then_else(False, 1, 4), _if_then_else(False, 0, ones_diff_cols))), ge(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, 4), _if_then_else(False, zeros_diff_rows, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(True, compare_blocks_rows, ones_diff_rows))))
or_(and_(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(or_(True, True), _if_then_else(False, ARG6, 4), _if_then_else(True, 2, 3))), and_(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, _if_then_else(ge(_if_then_else(True, 2, 2), _if_then_else(True, 4, ARG7)), _if_then_else(ge(ARG6, 4), _if_then_else(True, 4, 2), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(ge(1, ARG6), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 1, 2))))), le(_if_then_else(True, 1, 2), _if_then_else(True, ARG7, compare_blocks_rows)))), or_(or_(and_(or_(True, False), ge(4, zeros_diff_rows)), le(_if_then_else(True, 4, _if_then_else(False, zeros_diff_cols, 2)), _if_then_else(False, 0, 0))), or_(ge(_if_then_else(True, ones_diff_cols, 0), _if_then_else(True, 0, 0)), and_(or_(False, False), le(_if_then_else(False, zeros_diff_cols, 4), 4)))))
and_(True, ge(_if_then_else(and_(True, True), 1, zeros_diff_rows), _if_then_else(False, ARG6, _if_then_else(or_(True, True), 0, compare_blocks_rows))))
VAL TREES:
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(mul(compare_blocks_cols, ones_diff_rows), ones_diff_rows)))
mul(mul(mul(zeros_diff_cols, ones_diff_cols), mul(add(compare_blocks_cols, mul(ones_diff_cols, zeros_diff_cols)), add(zeros_diff_rows, compare_blocks_cols))), add(add(ones_diff_rows, zeros_diff_rows), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))), add(add(mul(mul(mul(zeros_diff_rows, ones_diff_rows), mul(ones_diff_cols, mul(add(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_cols)))), compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols))))
mul(add(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, add(compare_blocks_cols, zeros_diff_rows))), add(add(compare_blocks_cols, compare_blocks_rows), ones_diff_cols))
add(add(mul(add(add(mul(mul(ones_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows)), zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols))), mul(mul(mul(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_rows)))), add(add(add(mul(ones_diff_rows, mul(compare_blocks_rows, zeros_diff_cols)), add(ones_diff_cols, compare_blocks_cols)), add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), add(mul(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)))))
add(mul(add(mul(add(ones_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)), mul(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(mul(add(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), zeros_diff_cols)))
COND TREES:
or_(or_(and_(False, True), le(0, _if_then_else(and_(True, le(3, ARG7)), 1, 3))), or_(False, or_(True, True)))
or_(le(_if_then_else(ge(_if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 3, 4)), _if_then_else(or_(ge(compare_blocks_cols, 3), False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 2))), _if_then_else(True, _if_then_else(ge(ARG6, 4), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)))), and_(or_(or_(and_(True, False), le(2, ones_diff_rows)), ge(_if_then_else(False, 4, 2), _if_then_else(True, 0, 1))), ge(_if_then_else(ge(4, 0), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 3, ARG7)), _if_then_else(le(compare_blocks_rows, 1), _if_then_else(False, 4, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))))
or_(le(zeros_diff_rows, _if_then_else(True, _if_then_else(True, ARG6, ARG6), compare_blocks_cols)), or_(or_(ge(_if_then_else(False, 3, zeros_diff_rows), _if_then_else(and_(ge(_if_then_else(True, 3, ones_diff_rows), _if_then_else(True, compare_blocks_rows, 0)), le(_if_then_else(le(_if_then_else(le(_if_then_else(True, 3, ARG6), _if_then_else(False, 4, 3)), _if_then_else(le(3, compare_blocks_cols), _if_then_else(True, 0, ARG7), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, 3, compare_blocks_rows))), _if_then_else(le(_if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(True, 3, 0)), _if_then_else(le(zeros_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(True, ARG6, 3)), _if_then_else(ge(ones_diff_cols, ARG6), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(True, 2, compare_blocks_rows)))), _if_then_else(and_(ge(_if_then_else(False, 2, zeros_diff_cols), _if_then_else(False, 3, 4)), le(_if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(False, 4, 1))), _if_then_else(or_(le(0, ARG6), le(ARG7, ones_diff_cols)), _if_then_else(le(1, ARG6), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, 3, ones_diff_rows), _if_then_else(False, 4, compare_blocks_cols))), _if_then_else(or_(and_(False, True), or_(True, False)), _if_then_else(le(compare_blocks_rows, ones_diff_rows), _if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, ARG7, zeros_diff_rows)), _if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, ones_diff_rows)))), _if_then_else(ge(_if_then_else(ge(ARG7, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, 1, 2), _if_then_else(True, ones_diff_rows, 4))), _if_then_else(ge(_if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, ARG7, zeros_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, ARG6, 0), _if_then_else(True, 3, 1)), _if_then_else(le(zeros_diff_cols, ARG6), _if_then_else(True, ARG7, ones_diff_rows), _if_then_else(True, 1, 4))), _if_then_else(and_(le(4, 4), or_(True, False)), _if_then_else(or_(True, False), _if_then_else(False, ARG7, 0), _if_then_else(False, 3, 3)), _if_then_else(or_(False, False), _if_then_else(True, compare_blocks_cols, ARG6), _if_then_else(True, compare_blocks_cols, 2))))), _if_then_else(False, 3, ones_diff_rows))), zeros_diff_cols, 1)), and_(False, False)), or_(False, False)))
le(_if_then_else(le(1, 2), _if_then_else(False, zeros_diff_cols, 0), _if_then_else(True, zeros_diff_rows, 1)), _if_then_else(ge(ARG7, 4), _if_then_else(False, 4, ARG6), ones_diff_rows))
or_(ge(zeros_diff_rows, _if_then_else(ge(1, ARG6), _if_then_else(True, 4, ARG7), _if_then_else(True, compare_blocks_cols, zeros_diff_cols))), and_(or_(or_(False, le(_if_then_else(ge(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols, ones_diff_cols), _if_then_else(and_(False, False), 4, compare_blocks_cols))), or_(True, False)), ge(0, _if_then_else(False, ones_diff_cols, ones_diff_cols))))
VAL TREES:
mul(ones_diff_rows, add(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_cols)))
add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(add(mul(mul(add(zeros_diff_rows, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_rows))), add(add(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_cols)), mul(add(ones_diff_cols, compare_blocks_rows), mul(zeros_diff_cols, zeros_diff_rows)))), mul(add(zeros_diff_cols, zeros_diff_rows), compare_blocks_rows)))
mul(add(add(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows)), add(mul(mul(ones_diff_cols, zeros_diff_rows), ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))), add(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), add(add(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)), compare_blocks_rows))
add(mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, ones_diff_cols))), add(mul(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)))), add(mul(add(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows))), add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(mul(zeros_diff_cols, compare_blocks_cols), zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))))
COND TREES:
or_(or_(and_(False, True), le(_if_then_else(le(_if_then_else(ge(compare_blocks_cols, zeros_diff_rows), 1, 1), _if_then_else(and_(ge(3, compare_blocks_cols), True), ARG6, ARG7)), _if_then_else(ge(2, ones_diff_rows), _if_then_else(True, ARG7, _if_then_else(False, zeros_diff_rows, ones_diff_rows)), _if_then_else(True, ARG7, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, _if_then_else(True, compare_blocks_rows, _if_then_else(True, 2, ones_diff_cols)), _if_then_else(False, 4, ARG7)), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_cols, 2), 1), ARG6))), 1)), or_(ge(_if_then_else(or_(and_(True, True), or_(True, True)), _if_then_else(le(ARG6, compare_blocks_rows), _if_then_else(False, ones_diff_rows, 3), _if_then_else(False, ARG7, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(True, 1, 2))), zeros_diff_cols), or_(True, True)))
or_(le(_if_then_else(ge(_if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 3, 4)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 2))), _if_then_else(or_(or_(and_(and_(True, False), and_(True, True)), ge(_if_then_else(True, 3, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_rows))), or_(and_(ge(3, ones_diff_cols), and_(False, False)), and_(ge(4, ones_diff_cols), or_(False, True)))), _if_then_else(ge(ARG6, 4), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)))), and_(or_(or_(and_(True, False), le(2, ones_diff_rows)), or_(or_(le(ones_diff_rows, 2), ge(2, ones_diff_cols)), and_(or_(ge(_if_then_else(False, zeros_diff_cols, ARG7), ARG6), ge(2, 2)), and_(True, True)))), ge(_if_then_else(ge(4, 0), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 3, ARG7)), _if_then_else(le(compare_blocks_rows, 1), _if_then_else(False, 4, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))))
or_(le(_if_then_else(and_(True, True), _if_then_else(True, 4, 3), _if_then_else(le(_if_then_else(True, compare_blocks_rows, _if_then_else(le(_if_then_else(or_(and_(True, False), ge(4, 3)), _if_then_else(and_(False, True), _if_then_else(True, 4, ARG7), _if_then_else(True, zeros_diff_cols, ARG6)), _if_then_else(or_(True, False), _if_then_else(False, 4, 1), _if_then_else(False, compare_blocks_cols, 1))), _if_then_else(ge(_if_then_else(False, 2, 0), _if_then_else(False, ones_diff_cols, ARG7)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(False, ARG6, compare_blocks_cols)), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_rows, ARG6), _if_then_else(False, 4, zeros_diff_cols)))), _if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, 4, ones_diff_cols), _if_then_else(True, 2, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, ARG7, 4), _if_then_else(False, ARG6, 1))), _if_then_else(ge(_if_then_else(True, 4, compare_blocks_cols), _if_then_else(True, ARG7, ARG7)), _if_then_else(and_(False, True), _if_then_else(True, 0, 1), _if_then_else(True, ARG6, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, 2), _if_then_else(True, ARG7, ARG7), _if_then_else(False, ones_diff_cols, 1))), _if_then_else(ge(_if_then_else(False, ARG7, 4), _if_then_else(True, 4, ones_diff_cols)), _if_then_else(ge(4, 4), _if_then_else(True, ARG6, 0), _if_then_else(False, compare_blocks_cols, compare_blocks_rows)), _if_then_else(le(ones_diff_cols, ones_diff_rows), _if_then_else(False, 0, ones_diff_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)))), _if_then_else(or_(le(_if_then_else(False, compare_blocks_rows, ARG6), _if_then_else(True, ARG6, 1)), ge(_if_then_else(False, ARG7, 0), _if_then_else(True, ARG7, 4))), _if_then_else(le(_if_then_else(True, zeros_diff_cols, 0), _if_then_else(False, ARG6, zeros_diff_rows)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, 2, 0)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 1))), _if_then_else(or_(or_(False, True), ge(0, ones_diff_cols)), _if_then_else(le(1, 0), _if_then_else(True, ARG6, 4), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_cols, ones_diff_rows), _if_then_else(True, ones_diff_rows, ARG7)))))), _if_then_else(False, 4, ones_diff_cols)), 4, compare_blocks_rows)), _if_then_else(True, _if_then_else(True, ARG6, ARG6), compare_blocks_cols)), or_(or_(or_(True, True), and_(False, False)), or_(False, False)))
le(_if_then_else(le(1, 2), _if_then_else(True, zeros_diff_cols, 0), _if_then_else(True, _if_then_else(le(_if_then_else(True, compare_blocks_cols, 2), _if_then_else(False, compare_blocks_rows, 3)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, 1), _if_then_else(False, compare_blocks_rows, ones_diff_cols)), _if_then_else(ge(zeros_diff_cols, 2), _if_then_else(True, 3, 3), _if_then_else(False, zeros_diff_cols, 4))), 1)), _if_then_else(ge(ARG7, 4), _if_then_else(False, 4, ARG6), _if_then_else(False, zeros_diff_cols, 4)))
or_(ge(_if_then_else(and_(True, True), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(ge(1, ARG6), _if_then_else(True, 4, ARG7), _if_then_else(True, compare_blocks_cols, zeros_diff_cols))), and_(or_(or_(False, True), or_(True, False)), ge(_if_then_else(and_(True, and_(True, True)), _if_then_else(le(2, 0), zeros_diff_cols, 1), _if_then_else(False, zeros_diff_rows, _if_then_else(True, 1, ARG7))), _if_then_else(le(_if_then_else(ge(_if_then_else(False, 0, compare_blocks_cols), _if_then_else(False, 1, 0)), _if_then_else(le(ARG7, ones_diff_rows), _if_then_else(True, ones_diff_rows, ARG6), _if_then_else(True, zeros_diff_rows, 4)), _if_then_else(ge(compare_blocks_cols, zeros_diff_cols), _if_then_else(False, 2, 2), _if_then_else(True, ones_diff_cols, ones_diff_rows))), _if_then_else(ge(_if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(True, 3, ARG7)), _if_then_else(or_(False, False), _if_then_else(False, 3, compare_blocks_cols), _if_then_else(True, ones_diff_cols, ARG6)), _if_then_else(ge(3, zeros_diff_cols), _if_then_else(False, ones_diff_rows, 4), _if_then_else(False, zeros_diff_rows, 0)))), _if_then_else(or_(ge(_if_then_else(False, compare_blocks_cols, 2), _if_then_else(True, 3, ones_diff_rows)), and_(ge(compare_blocks_rows, 2), le(4, compare_blocks_rows))), _if_then_else(ge(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(True, ARG6, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(False, zeros_diff_rows, 3)), _if_then_else(ge(0, ARG7), _if_then_else(False, 4, ARG7), _if_then_else(True, ones_diff_rows, compare_blocks_rows))), _if_then_else(le(_if_then_else(False, 4, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(or_(True, True), _if_then_else(False, ARG7, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, 3)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(False, 4, ones_diff_rows)))), _if_then_else(and_(and_(and_(False, False), and_(False, False)), le(_if_then_else(True, 3, zeros_diff_rows), _if_then_else(False, ones_diff_cols, ARG6))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, ARG7), _if_then_else(True, zeros_diff_cols, zeros_diff_cols)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(False, 3, ones_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, 4, ARG6), _if_then_else(False, 2, 0))), _if_then_else(or_(and_(False, False), le(4, ARG6)), _if_then_else(or_(False, False), _if_then_else(False, 3, ARG7), _if_then_else(True, 1, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, 4, 3), _if_then_else(True, zeros_diff_cols, ARG7))))))))
VAL TREES:
mul(mul(add(ones_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)))
add(add(add(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), mul(add(ones_diff_rows, zeros_diff_rows), compare_blocks_rows)))
mul(add(add(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows)), add(mul(mul(compare_blocks_cols, zeros_diff_rows), ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))), add(ones_diff_rows, mul(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), add(add(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)), compare_blocks_rows))
add(mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, ones_diff_cols))), add(mul(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)))), add(mul(add(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows))), add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))))
COND TREES:
or_(ge(2, 1), ge(_if_then_else(le(_if_then_else(le(ARG7, zeros_diff_rows), _if_then_else(True, ARG6, zeros_diff_cols), _if_then_else(True, 1, 2)), _if_then_else(le(compare_blocks_cols, 0), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(and_(or_(and_(or_(True, False), False), False), or_(False, or_(False, le(compare_blocks_cols, compare_blocks_cols)))), _if_then_else(ge(2, _if_then_else(False, compare_blocks_rows, 4)), _if_then_else(True, _if_then_else(False, zeros_diff_cols, _if_then_else(False, 1, zeros_diff_rows)), _if_then_else(False, ARG6, ARG7)), _if_then_else(False, 4, zeros_diff_rows)), _if_then_else(and_(True, False), _if_then_else(le(ARG6, _if_then_else(False, zeros_diff_rows, ones_diff_rows)), _if_then_else(True, compare_blocks_rows, zeros_diff_rows), compare_blocks_rows), _if_then_else(False, compare_blocks_rows, 1))))), _if_then_else(False, 2, ARG6), _if_then_else(True, 3, ARG6)), _if_then_else(le(1, 1), 2, _if_then_else(False, zeros_diff_cols, 0))))
and_(or_(ge(4, 1), and_(or_(ge(4, 1), and_(True, True)), True)), le(_if_then_else(le(_if_then_else(or_(and_(False, True), ge(3, ARG7)), _if_then_else(ge(0, ARG7), _if_then_else(True, ARG7, zeros_diff_rows), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(4, zeros_diff_cols), _if_then_else(True, 1, 1), _if_then_else(False, 4, zeros_diff_cols))), _if_then_else(or_(ge(4, compare_blocks_rows), or_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ARG6, ARG7), _if_then_else(True, zeros_diff_rows, 4)), _if_then_else(and_(False, False), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, _if_then_else(le(_if_then_else(False, _if_then_else(or_(False, False), zeros_diff_cols, ARG7), ARG7), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(compare_blocks_rows, _if_then_else(True, _if_then_else(False, 1, zeros_diff_rows), 1)), _if_then_else(ge(_if_then_else(False, ones_diff_rows, 0), _if_then_else(False, compare_blocks_cols, compare_blocks_cols)), ARG7, zeros_diff_rows), _if_then_else(True, ones_diff_rows, _if_then_else(False, _if_then_else(True, zeros_diff_cols, ARG6), _if_then_else(True, 3, ARG6)))), _if_then_else(le(_if_then_else(or_(True, False), ones_diff_cols, zeros_diff_cols), 3), _if_then_else(or_(True, ge(ARG7, zeros_diff_rows)), ARG7, ones_diff_cols), _if_then_else(True, 0, ARG7))))))), _if_then_else(le(_if_then_else(or_(True, True), _if_then_else(True, ARG7, 0), _if_then_else(True, ARG7, compare_blocks_rows)), _if_then_else(ge(0, 0), _if_then_else(False, _if_then_else(and_(ge(compare_blocks_cols, compare_blocks_rows), or_(le(2, 1), False)), _if_then_else(ge(4, compare_blocks_cols), _if_then_else(True, compare_blocks_cols, _if_then_else(True, 3, 2)), _if_then_else(True, 3, ARG6)), _if_then_else(le(_if_then_else(False, 4, compare_blocks_cols), 1), _if_then_else(True, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, 0, 1))), 1), _if_then_else(True, ones_diff_rows, zeros_diff_cols))), _if_then_else(and_(and_(True, False), or_(True, True)), _if_then_else(or_(True, False), _if_then_else(True, 3, 2), _if_then_else(True, compare_blocks_rows, 3)), _if_then_else(or_(False, False), _if_then_else(False, 0, ones_diff_cols), _if_then_else(True, 2, ones_diff_rows))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, 3), _if_then_else(False, ARG7, ARG6)), _if_then_else(ge(2, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, 3, compare_blocks_cols)), _if_then_else(le(compare_blocks_cols, 2), _if_then_else(False, 4, 0), _if_then_else(False, 3, ARG6)))), _if_then_else(ge(_if_then_else(or_(True, False), _if_then_else(False, 1, zeros_diff_rows), 1), _if_then_else(le(compare_blocks_rows, 2), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, 4))), _if_then_else(or_(le(compare_blocks_cols, ARG7), ge(3, zeros_diff_cols)), _if_then_else(ge(1, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, ones_diff_rows)), _if_then_else(ge(ARG6, ARG6), _if_then_else(True, zeros_diff_rows, ARG6), _if_then_else(True, compare_blocks_cols, compare_blocks_rows))), _if_then_else(le(_if_then_else(False, ARG7, 4), _if_then_else(True, 2, ones_diff_rows)), _if_then_else(and_(True, False), _if_then_else(True, zeros_diff_cols, ones_diff_cols), _if_then_else(False, 1, compare_blocks_rows)), _if_then_else(le(2, ones_diff_cols), _if_then_else(False, 1, 2), _if_then_else(False, compare_blocks_cols, ones_diff_rows))))), _if_then_else(True, zeros_diff_cols, 0)))
le(_if_then_else(or_(ge(compare_blocks_cols, ones_diff_cols), le(zeros_diff_rows, ones_diff_rows)), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(le(0, 4), 0, 0)), _if_then_else(le(zeros_diff_rows, 0), _if_then_else(ge(ones_diff_rows, 2), ones_diff_cols, ARG6), _if_then_else(True, 1, compare_blocks_rows)))
or_(ge(_if_then_else(False, ARG7, 3), _if_then_else(True, ARG7, ARG6)), and_(or_(and_(le(_if_then_else(ge(0, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, 0), _if_then_else(True, _if_then_else(False, zeros_diff_rows, compare_blocks_rows), ARG7)), _if_then_else(and_(False, False), _if_then_else(False, 4, 4), _if_then_else(False, ARG7, ARG7))), le(_if_then_else(or_(False, False), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(le(2, 2), _if_then_else(True, 1, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, ARG6)))), ge(_if_then_else(le(_if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(True, zeros_diff_cols, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(False, 4, 0), _if_then_else(False, ARG6, 0)), _if_then_else(ge(2, 1), _if_then_else(False, compare_blocks_rows, 2), _if_then_else(False, 1, ARG7))), _if_then_else(le(_if_then_else(or_(ge(_if_then_else(and_(True, False), _if_then_else(False, 3, 1), _if_then_else(True, 1, 1)), _if_then_else(ge(3, 3), _if_then_else(True, 3, 0), _if_then_else(True, zeros_diff_rows, 3))), ge(_if_then_else(or_(False, True), _if_then_else(True, 4, 4), _if_then_else(True, zeros_diff_rows, ones_diff_cols)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_rows, 4), _if_then_else(True, 4, 4)))), _if_then_else(le(_if_then_else(or_(True, True), _if_then_else(True, ARG7, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), _if_then_else(le(ones_diff_cols, ones_diff_cols), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, compare_blocks_cols, ARG7))), _if_then_else(le(_if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)), _if_then_else(ge(ARG6, 0), _if_then_else(False, 4, ARG7), _if_then_else(False, 3, ARG6)), _if_then_else(le(ARG7, ones_diff_rows), _if_then_else(False, ones_diff_cols, ones_diff_cols), _if_then_else(True, 0, zeros_diff_rows))), _if_then_else(or_(or_(True, True), le(ARG6, 0)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, ARG6)), _if_then_else(ge(ones_diff_rows, ARG6), _if_then_else(True, 4, compare_blocks_cols), _if_then_else(False, ARG6, 2)))), _if_then_else(or_(ge(_if_then_else(True, 1, 4), _if_then_else(False, 3, ones_diff_rows)), le(_if_then_else(False, 1, 1), _if_then_else(True, compare_blocks_cols, zeros_diff_cols))), _if_then_else(or_(or_(True, False), le(1, 1)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_cols, 4), _if_then_else(False, 3, 2)), _if_then_else(or_(False, False), _if_then_else(True, 1, compare_blocks_rows), _if_then_else(False, 0, 2))), _if_then_else(and_(le(1, 0), ge(3, 2)), _if_then_else(and_(False, False), _if_then_else(False, 1, compare_blocks_rows), _if_then_else(True, ARG7, 0)), _if_then_else(ge(2, ARG6), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, ARG6))))), _if_then_else(True, 2, 0)), _if_then_else(or_(True, False), _if_then_else(True, 2, ARG6), _if_then_else(True, 0, 3)), _if_then_else(le(zeros_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 4))))), or_(False, and_(False, True))))
ge(_if_then_else(and_(True, le(ones_diff_cols, _if_then_else(and_(and_(True, True), le(4, 2)), _if_then_else(or_(True, False), _if_then_else(False, _if_then_else(and_(False, and_(True, True)), _if_then_else(le(2, 0), zeros_diff_cols, 1), _if_then_else(False, zeros_diff_rows, _if_then_else(True, 1, ARG7))), 2), _if_then_else(False, 4, ARG6)), _if_then_else(le(ones_diff_rows, 1), _if_then_else(and_(le(_if_then_else(or_(False, ge(zeros_diff_cols, compare_blocks_rows)), 4, ones_diff_cols), _if_then_else(False, 0, zeros_diff_rows)), or_(or_(False, True), le(ones_diff_cols, _if_then_else(ge(compare_blocks_cols, 1), zeros_diff_cols, 1)))), zeros_diff_rows, ARG7), _if_then_else(False, 2, 2))))), _if_then_else(and_(False, True), _if_then_else(ge(_if_then_else(and_(True, True), 1, zeros_diff_rows), _if_then_else(False, ARG6, _if_then_else(True, 0, compare_blocks_rows))), zeros_diff_rows, zeros_diff_cols), 3), _if_then_else(True, 4, ARG6)), _if_then_else(and_(True, True), _if_then_else(True, compare_blocks_rows, zeros_diff_rows), _if_then_else(True, ARG7, 1)))
VAL TREES:
add(add(add(zeros_diff_rows, zeros_diff_rows), add(mul(zeros_diff_cols, ones_diff_rows), compare_blocks_cols)), add(mul(zeros_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, zeros_diff_cols)))
add(add(mul(mul(ones_diff_cols, zeros_diff_cols), mul(ones_diff_cols, mul(zeros_diff_rows, ones_diff_rows))), add(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols))), mul(mul(mul(ones_diff_cols, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows))))
mul(mul(mul(add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_cols)), add(add(mul(compare_blocks_rows, zeros_diff_rows), add(ones_diff_rows, zeros_diff_cols)), add(ones_diff_rows, ones_diff_rows))), mul(mul(add(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_cols, ones_diff_cols)))), add(mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_rows))), mul(add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols)))))
add(mul(mul(add(ones_diff_rows, ones_diff_cols), compare_blocks_cols), mul(compare_blocks_rows, compare_blocks_rows)), mul(mul(compare_blocks_rows, ones_diff_rows), add(add(ones_diff_rows, mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), ones_diff_cols), ones_diff_cols)), add(mul(compare_blocks_rows, compare_blocks_rows), compare_blocks_cols))))
add(mul(add(mul(mul(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, zeros_diff_cols)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_cols))), mul(mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_rows, compare_blocks_rows)), add(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_cols)))), add(add(mul(mul(ones_diff_cols, ones_diff_rows), mul(ones_diff_rows, ones_diff_rows)), add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows))), add(add(mul(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, zeros_diff_cols)), add(add(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)))))
mul(mul(mul(mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), mul(add(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_rows, zeros_diff_rows))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), add(compare_blocks_rows, ones_diff_cols)), mul(mul(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)))), mul(add(mul(mul(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)))))
COND TREES:
or_(or_(and_(False, True), le(0, 1)), or_(or_(and_(True, or_(True, True)), or_(True, True)), le(_if_then_else(False, ones_diff_rows, 2), _if_then_else(True, _if_then_else(True, 1, compare_blocks_rows), _if_then_else(True, ones_diff_cols, 0)))))
or_(le(_if_then_else(ge(_if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 3, 4)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 2))), _if_then_else(and_(and_(False, or_(le(_if_then_else(False, 0, 4), _if_then_else(True, ones_diff_cols, zeros_diff_cols)), and_(or_(False, False), and_(True, True)))), ge(4, 2)), _if_then_else(ge(ARG6, 4), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)))), and_(or_(or_(and_(True, False), le(2, ones_diff_rows)), ge(_if_then_else(False, 4, 2), _if_then_else(True, 0, 1))), ge(_if_then_else(ge(4, 0), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 3, ARG7)), _if_then_else(le(compare_blocks_rows, 1), _if_then_else(False, 4, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))))
or_(le(_if_then_else(and_(True, True), _if_then_else(True, 4, 3), _if_then_else(False, 4, compare_blocks_rows)), _if_then_else(True, _if_then_else(True, ARG6, ARG6), compare_blocks_cols)), or_(or_(or_(True, True), and_(False, False)), or_(False, False)))
le(_if_then_else(le(1, 2), _if_then_else(True, zeros_diff_cols, 0), _if_then_else(True, zeros_diff_rows, 1)), _if_then_else(ge(_if_then_else(and_(ge(compare_blocks_cols, compare_blocks_cols), ge(ones_diff_cols, zeros_diff_rows)), _if_then_else(and_(True, True), _if_then_else(True, 1, 2), _if_then_else(True, compare_blocks_cols, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, ones_diff_rows, ARG6), _if_then_else(True, 4, 1))), 4), _if_then_else(False, 4, ARG6), _if_then_else(False, zeros_diff_cols, 4)))
or_(ge(_if_then_else(and_(True, True), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(ge(1, _if_then_else(ge(_if_then_else(False, compare_blocks_cols, 4), _if_then_else(True, ones_diff_rows, 1)), _if_then_else(or_(False, True), _if_then_else(True, ARG7, compare_blocks_rows), _if_then_else(False, 2, ones_diff_cols)), _if_then_else(ge(0, 4), _if_then_else(True, ones_diff_rows, compare_blocks_cols), _if_then_else(True, ones_diff_cols, ones_diff_rows)))), _if_then_else(True, 4, ARG7), _if_then_else(True, compare_blocks_cols, zeros_diff_cols))), and_(or_(or_(False, True), or_(True, False)), ge(_if_then_else(True, ARG7, zeros_diff_rows), _if_then_else(False, ones_diff_cols, ones_diff_cols))))
VAL TREES:
mul(mul(add(ones_diff_cols, zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols)), add(add(zeros_diff_cols, compare_blocks_cols), mul(mul(compare_blocks_cols, ones_diff_cols), compare_blocks_cols)))
add(add(add(add(zeros_diff_cols, ones_diff_rows), ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_rows, zeros_diff_cols), ones_diff_rows), mul(add(ones_diff_cols, zeros_diff_rows), compare_blocks_cols))
mul(add(add(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows)), add(mul(mul(compare_blocks_cols, ones_diff_cols), ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))), add(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))))
mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), ones_diff_rows), mul(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), add(add(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)), add(mul(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows))))
add(mul(mul(mul(mul(mul(mul(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_rows))), mul(mul(add(zeros_diff_cols, zeros_diff_rows), add(zeros_diff_rows, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(compare_blocks_rows, zeros_diff_cols)))), zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, ones_diff_cols))), add(mul(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)))), add(mul(add(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows))), add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))))
COND TREES:
ge(_if_then_else(le(_if_then_else(le(ones_diff_cols, 2), ones_diff_cols, _if_then_else(True, ones_diff_cols, 4)), _if_then_else(True, 0, _if_then_else(True, compare_blocks_rows, ARG6))), _if_then_else(ge(compare_blocks_cols, 2), zeros_diff_rows, 0), _if_then_else(False, _if_then_else(False, zeros_diff_cols, 1), zeros_diff_rows)), _if_then_else(ge(ARG7, 3), _if_then_else(False, compare_blocks_cols, _if_then_else(True, _if_then_else(True, ARG7, 3), 3)), _if_then_else(True, ARG6, ARG6)))
ge(_if_then_else(or_(or_(le(ones_diff_rows, 4), le(1, zeros_diff_rows)), le(_if_then_else(False, 0, ARG6), _if_then_else(True, ones_diff_rows, 4))), _if_then_else(and_(and_(True, False), or_(False, False)), _if_then_else(or_(False, True), _if_then_else(False, 3, ARG6), _if_then_else(True, ones_diff_cols, 2)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(False, ARG6, compare_blocks_cols))), _if_then_else(and_(le(zeros_diff_cols, compare_blocks_rows), or_(False, True)), _if_then_else(le(ones_diff_rows, 3), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(True, ARG6, zeros_diff_rows)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(True, 3, ARG6), _if_then_else(True, 4, 3)))), _if_then_else(le(_if_then_else(le(compare_blocks_rows, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 4, ARG7)), _if_then_else(and_(True, True), _if_then_else(False, 4, 0), _if_then_else(False, ones_diff_rows, 3))), _if_then_else(and_(le(ARG6, ARG6), ge(2, 2)), _if_then_else(and_(True, False), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows))), _if_then_else(or_(ge(4, 2), ge(zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, ARG6, 1), _if_then_else(False, 0, 3)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4)))))
and_(ge(_if_then_else(le(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 0, ARG6), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(le(3, 3), _if_then_else(False, 1, 4), _if_then_else(False, 0, ones_diff_cols))), ge(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, 4), _if_then_else(False, zeros_diff_rows, compare_blocks_cols)), _if_then_else(ge(_if_then_else(False, 3, zeros_diff_rows), _if_then_else(and_(ge(_if_then_else(True, 3, ones_diff_rows), _if_then_else(True, compare_blocks_rows, 0)), le(_if_then_else(True, compare_blocks_rows, ARG7), _if_then_else(False, 3, ones_diff_rows))), zeros_diff_cols, 1)), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(True, compare_blocks_rows, ones_diff_rows))))
or_(and_(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(or_(True, True), _if_then_else(False, ARG6, 4), _if_then_else(True, 2, 3))), and_(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), le(_if_then_else(True, 1, 2), _if_then_else(True, ARG7, compare_blocks_rows)))), or_(or_(and_(or_(True, False), ge(4, zeros_diff_rows)), le(_if_then_else(True, 4, _if_then_else(False, zeros_diff_cols, 2)), _if_then_else(False, 0, 0))), or_(ge(_if_then_else(True, ones_diff_cols, 0), _if_then_else(True, 0, 0)), and_(or_(False, False), le(ones_diff_rows, 4)))))
and_(le(_if_then_else(ge(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols, ones_diff_cols), _if_then_else(and_(False, False), 4, compare_blocks_cols)), ge(_if_then_else(and_(True, True), 1, zeros_diff_rows), _if_then_else(False, ARG6, _if_then_else(or_(True, True), 0, compare_blocks_rows))))
VAL TREES:
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(mul(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)), ones_diff_rows)))
mul(mul(mul(zeros_diff_cols, ones_diff_cols), compare_blocks_rows), add(add(ones_diff_rows, zeros_diff_rows), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(add(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))), add(add(mul(mul(mul(zeros_diff_rows, ones_diff_rows), mul(add(mul(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_cols)))), compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols))))
mul(add(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows)), add(add(zeros_diff_cols, compare_blocks_rows), ones_diff_cols))
add(add(mul(add(add(mul(mul(ones_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows)), zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols))), mul(mul(mul(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_rows)))), add(add(add(mul(ones_diff_rows, mul(compare_blocks_cols, zeros_diff_cols)), add(ones_diff_cols, compare_blocks_cols)), add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), add(mul(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)))))
add(mul(add(mul(add(ones_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)), mul(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(mul(add(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))), mul(mul(compare_blocks_cols, zeros_diff_cols), zeros_diff_cols)))
COND TREES:
ge(_if_then_else(le(_if_then_else(le(ones_diff_cols, 2), ones_diff_cols, _if_then_else(True, 4, compare_blocks_rows)), _if_then_else(False, 0, _if_then_else(True, compare_blocks_rows, ARG6))), _if_then_else(ge(compare_blocks_cols, 2), _if_then_else(and_(False, False), ARG7, ARG6), 0), _if_then_else(False, _if_then_else(False, zeros_diff_cols, 1), zeros_diff_rows)), _if_then_else(ge(ARG7, 3), _if_then_else(False, compare_blocks_cols, _if_then_else(True, _if_then_else(True, _if_then_else(False, 0, zeros_diff_rows), 3), 3)), _if_then_else(True, ARG6, ARG6)))
ge(_if_then_else(or_(or_(le(ones_diff_rows, 4), le(1, zeros_diff_rows)), le(_if_then_else(False, 0, ARG6), _if_then_else(True, ones_diff_rows, 4))), _if_then_else(and_(and_(True, False), or_(False, False)), _if_then_else(or_(False, True), _if_then_else(False, 3, ARG6), _if_then_else(True, ones_diff_cols, 2)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(False, ARG6, compare_blocks_cols))), _if_then_else(and_(le(zeros_diff_cols, compare_blocks_rows), or_(False, True)), _if_then_else(le(ones_diff_rows, 3), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(True, ARG6, zeros_diff_rows)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(True, 3, ARG6), _if_then_else(True, 4, 3)))), _if_then_else(le(_if_then_else(le(compare_blocks_rows, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 4, ARG7)), _if_then_else(and_(True, True), _if_then_else(False, 4, 0), _if_then_else(False, ones_diff_rows, 3))), _if_then_else(False, _if_then_else(and_(True, False), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows))), _if_then_else(or_(ge(ARG7, 2), ge(zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, ARG6, 1), _if_then_else(False, 0, 3)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4)))))
and_(ge(_if_then_else(le(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 0, ARG6), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(le(3, 3), _if_then_else(False, 1, 4), _if_then_else(False, 0, ones_diff_cols))), ge(_if_then_else(or_(False, and_(or_(or_(False, True), le(3, zeros_diff_cols)), le(_if_then_else(False, ones_diff_rows, 1), _if_then_else(True, ones_diff_rows, ones_diff_cols)))), _if_then_else(or_(ge(compare_blocks_cols, ones_diff_cols), or_(False, True)), ones_diff_cols, 4), _if_then_else(False, zeros_diff_rows, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(True, compare_blocks_rows, ones_diff_rows))))
or_(and_(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(or_(True, True), _if_then_else(False, ARG6, 4), _if_then_else(True, 2, 3))), and_(ge(compare_blocks_cols, _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), le(_if_then_else(True, 1, 2), _if_then_else(True, ARG7, compare_blocks_rows)))), or_(or_(and_(or_(True, False), ge(4, zeros_diff_rows)), le(_if_then_else(True, 4, ARG7), _if_then_else(False, 0, 0))), or_(ge(_if_then_else(True, ones_diff_cols, 0), _if_then_else(True, 0, 0)), and_(or_(False, False), and_(False, True)))))
and_(le(_if_then_else(ge(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols, ones_diff_cols), _if_then_else(and_(True, False), _if_then_else(and_(and_(True, False), or_(False, False)), _if_then_else(le(ARG6, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 2), _if_then_else(True, ones_diff_rows, 3)), _if_then_else(or_(True, False), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(False, zeros_diff_rows, 3))), compare_blocks_cols)), ge(_if_then_else(and_(True, True), 1, zeros_diff_rows), _if_then_else(False, ARG6, _if_then_else(True, 0, compare_blocks_rows))))
VAL TREES:
mul(zeros_diff_cols, mul(add(ones_diff_cols, mul(ones_diff_rows, compare_blocks_rows)), mul(ones_diff_rows, zeros_diff_rows)))
mul(add(add(mul(add(compare_blocks_rows, compare_blocks_rows), ones_diff_cols), mul(ones_diff_cols, zeros_diff_rows)), add(add(ones_diff_cols, ones_diff_rows), add(compare_blocks_cols, compare_blocks_rows))), add(add(ones_diff_rows, add(add(compare_blocks_cols, compare_blocks_cols), zeros_diff_cols)), add(zeros_diff_rows, zeros_diff_rows)))
mul(compare_blocks_cols, add(add(mul(compare_blocks_cols, mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows)), mul(add(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, compare_blocks_rows)))), add(ones_diff_cols, compare_blocks_rows)), add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, add(ones_diff_rows, zeros_diff_rows)))))
mul(add(mul(ones_diff_cols, ones_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), add(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, zeros_diff_rows)))
add(add(mul(add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols))), mul(mul(mul(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), mul(ones_diff_rows, zeros_diff_rows))), add(add(add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, compare_blocks_cols)), add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), add(mul(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)))))
add(mul(add(mul(compare_blocks_rows, add(add(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows)), mul(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(mul(add(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_rows)))))
COND TREES:
or_(ge(2, 1), ge(_if_then_else(le(_if_then_else(le(ARG7, zeros_diff_rows), _if_then_else(True, ARG6, zeros_diff_cols), _if_then_else(True, 1, 2)), _if_then_else(le(2, 0), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, _if_then_else(le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_rows)), _if_then_else(or_(False, True), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(False, ARG6, 4)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, ARG7, 3)))))), _if_then_else(False, 2, ARG6), _if_then_else(True, 3, ARG6)), _if_then_else(le(1, 1), _if_then_else(False, ones_diff_rows, ARG7), _if_then_else(False, zeros_diff_cols, 0))))
and_(or_(ge(4, 1), and_(or_(ge(4, 1), and_(True, True)), True)), le(_if_then_else(le(_if_then_else(or_(and_(False, True), ge(3, ARG7)), _if_then_else(ge(0, ARG7), _if_then_else(True, ARG7, zeros_diff_rows), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(4, zeros_diff_cols), _if_then_else(True, 1, 1), _if_then_else(False, 4, zeros_diff_cols))), _if_then_else(or_(ge(4, compare_blocks_rows), or_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ARG6, ARG7), _if_then_else(True, zeros_diff_rows, 4)), _if_then_else(and_(False, False), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, 3)))), _if_then_else(le(_if_then_else(or_(True, True), _if_then_else(True, ARG7, 0), _if_then_else(True, ARG7, compare_blocks_rows)), _if_then_else(ge(0, 0), _if_then_else(False, 0, 1), _if_then_else(True, ones_diff_rows, zeros_diff_cols))), _if_then_else(and_(and_(True, False), or_(True, True)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_cols, 2), _if_then_else(True, compare_blocks_rows, 3)), _if_then_else(or_(False, False), _if_then_else(False, 0, ones_diff_cols), _if_then_else(True, 2, ones_diff_rows))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, 3), _if_then_else(False, ARG7, ARG6)), _if_then_else(ge(2, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, 3, compare_blocks_cols)), _if_then_else(le(compare_blocks_cols, 2), _if_then_else(False, 4, 0), _if_then_else(False, 3, ARG6)))), _if_then_else(ge(_if_then_else(or_(True, False), _if_then_else(False, 1, zeros_diff_rows), 1), _if_then_else(le(compare_blocks_rows, 2), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, 4))), _if_then_else(or_(le(compare_blocks_cols, ARG7), ge(3, zeros_diff_cols)), _if_then_else(ge(1, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, ones_diff_rows)), _if_then_else(ge(ARG6, ARG6), _if_then_else(True, zeros_diff_rows, ARG6), _if_then_else(True, compare_blocks_cols, compare_blocks_rows))), _if_then_else(le(_if_then_else(False, ARG7, 4), _if_then_else(True, 2, ones_diff_rows)), _if_then_else(and_(True, False), _if_then_else(True, zeros_diff_cols, ones_diff_cols), _if_then_else(False, 1, compare_blocks_rows)), _if_then_else(le(2, ones_diff_cols), _if_then_else(False, 1, 2), _if_then_else(False, compare_blocks_cols, ones_diff_rows))))), _if_then_else(True, zeros_diff_cols, 0)))
le(_if_then_else(or_(ge(compare_blocks_cols, ones_diff_cols), le(zeros_diff_rows, ones_diff_rows)), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(le(0, 4), 0, 0)), _if_then_else(le(zeros_diff_rows, 0), _if_then_else(ge(ones_diff_rows, 2), ones_diff_cols, ARG6), _if_then_else(True, 1, compare_blocks_rows)))
or_(ge(_if_then_else(False, ARG7, 3), _if_then_else(True, ARG7, ARG6)), and_(or_(and_(le(_if_then_else(ge(0, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, 0), _if_then_else(True, ones_diff_rows, ARG7)), _if_then_else(and_(False, False), _if_then_else(False, 4, 4), _if_then_else(False, ARG7, ARG7))), le(_if_then_else(or_(False, False), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, _if_then_else(le(_if_then_else(True, ARG7, ones_diff_rows), _if_then_else(False, ARG6, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, compare_blocks_cols)), _if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 3, 3), _if_then_else(False, 1, 1))), zeros_diff_rows)), _if_then_else(le(2, 2), _if_then_else(True, 1, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, ARG6)))), ge(_if_then_else(le(_if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(True, zeros_diff_cols, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(False, 4, 0), _if_then_else(False, ARG6, 0)), _if_then_else(ge(2, 1), _if_then_else(False, compare_blocks_rows, 2), _if_then_else(False, 1, ARG7))), _if_then_else(le(_if_then_else(True, compare_blocks_rows, 0), _if_then_else(True, 2, 0)), _if_then_else(or_(True, False), _if_then_else(True, 2, ARG6), _if_then_else(True, 0, 3)), _if_then_else(le(zeros_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 4))))), or_(False, and_(False, True))))
ge(_if_then_else(and_(True, le(ones_diff_cols, _if_then_else(and_(and_(True, True), le(4, 2)), _if_then_else(or_(True, False), _if_then_else(False, _if_then_else(and_(False, and_(True, True)), _if_then_else(le(2, 0), zeros_diff_cols, 1), _if_then_else(False, zeros_diff_rows, _if_then_else(True, 1, ARG7))), 2), _if_then_else(False, 4, ARG6)), _if_then_else(le(ones_diff_rows, 1), _if_then_else(False, zeros_diff_rows, ARG7), _if_then_else(False, 2, 2))))), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, zeros_diff_cols), 3), _if_then_else(True, 4, ARG6)), _if_then_else(and_(True, True), _if_then_else(True, compare_blocks_rows, zeros_diff_rows), _if_then_else(True, ARG7, 1)))
VAL TREES:
add(add(mul(add(mul(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_cols, compare_blocks_cols)), mul(zeros_diff_cols, ones_diff_rows)), add(mul(mul(compare_blocks_rows, compare_blocks_cols), zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols))), add(mul(zeros_diff_rows, zeros_diff_cols), ones_diff_cols))
add(add(ones_diff_rows, add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, compare_blocks_cols))), mul(mul(mul(ones_diff_cols, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), mul(mul(compare_blocks_rows, compare_blocks_rows), add(add(ones_diff_cols, ones_diff_rows), ones_diff_rows))))
mul(mul(mul(add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_cols, add(ones_diff_rows, zeros_diff_cols)), add(ones_diff_rows, ones_diff_rows))), mul(mul(add(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_cols)))), mul(mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_rows)), add(mul(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_cols, zeros_diff_rows))))
add(mul(mul(add(ones_diff_rows, ones_diff_cols), compare_blocks_cols), mul(compare_blocks_rows, compare_blocks_rows)), mul(mul(compare_blocks_rows, ones_diff_rows), add(add(ones_diff_rows, mul(compare_blocks_cols, add(ones_diff_rows, ones_diff_cols))), add(compare_blocks_rows, compare_blocks_cols))))
add(mul(add(mul(mul(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, zeros_diff_cols)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_cols))), mul(mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_rows, compare_blocks_rows)), add(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_cols)))), add(add(mul(mul(ones_diff_cols, ones_diff_rows), mul(ones_diff_rows, ones_diff_rows)), add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows))), add(add(mul(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, zeros_diff_cols)), add(add(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)))))
mul(mul(mul(mul(add(ones_diff_cols, compare_blocks_rows), add(mul(mul(add(add(ones_diff_cols, zeros_diff_rows), zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_cols)), mul(add(zeros_diff_cols, mul(add(ones_diff_cols, ones_diff_cols), compare_blocks_cols)), mul(add(mul(compare_blocks_rows, zeros_diff_rows), zeros_diff_cols), zeros_diff_rows))), zeros_diff_cols)), mul(add(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_rows, ones_diff_rows))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(mul(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)))), mul(add(mul(mul(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows))), zeros_diff_cols))
COND TREES:
or_(or_(and_(False, le(_if_then_else(le(ARG7, zeros_diff_rows), _if_then_else(True, ARG6, zeros_diff_cols), _if_then_else(True, 1, 2)), _if_then_else(le(compare_blocks_cols, 0), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, zeros_diff_rows)))), le(_if_then_else(ge(0, 1), zeros_diff_rows, 3), 1)), or_(ge(compare_blocks_cols, 4), or_(True, True)))
or_(le(_if_then_else(ge(_if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 3, 4)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 2))), _if_then_else(and_(and_(False, True), ge(4, 2)), _if_then_else(ge(ARG6, 4), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(and_(ge(_if_then_else(False, ARG7, zeros_diff_rows), _if_then_else(False, 3, 0)), le(_if_then_else(False, 0, ARG6), _if_then_else(True, ones_diff_rows, ARG6))), _if_then_else(le(_if_then_else(True, 3, compare_blocks_cols), _if_then_else(False, 3, 2)), _if_then_else(or_(True, False), _if_then_else(False, 2, ARG7), _if_then_else(True, ones_diff_cols, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(False, 0, 3), _if_then_else(True, compare_blocks_rows, 4))), _if_then_else(le(_if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(True, ones_diff_cols, ones_diff_cols)), _if_then_else(ge(ones_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_rows, 0), _if_then_else(False, ones_diff_rows, 0)), _if_then_else(and_(True, False), _if_then_else(False, 0, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))))), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)))), and_(or_(or_(and_(True, False), le(2, ones_diff_rows)), ge(_if_then_else(False, 4, 2), _if_then_else(True, 0, 1))), ge(_if_then_else(ge(4, 0), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 3, ARG7)), _if_then_else(le(compare_blocks_rows, 1), _if_then_else(False, 4, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))))
or_(le(2, _if_then_else(True, _if_then_else(True, ARG6, ARG6), compare_blocks_cols)), or_(or_(or_(True, True), and_(False, False)), or_(False, False)))
le(_if_then_else(False, _if_then_else(True, zeros_diff_cols, 0), _if_then_else(True, zeros_diff_rows, 1)), _if_then_else(ge(ARG7, 4), _if_then_else(False, 4, ARG6), _if_then_else(False, zeros_diff_cols, _if_then_else(True, ones_diff_rows, ARG7))))
or_(ge(_if_then_else(and_(True, True), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(ge(1, ARG6), _if_then_else(True, 4, ARG7), _if_then_else(True, compare_blocks_cols, zeros_diff_cols))), and_(or_(or_(False, True), or_(True, False)), ge(_if_then_else(True, ARG7, zeros_diff_rows), _if_then_else(False, _if_then_else(or_(le(_if_then_else(True, ARG7, zeros_diff_cols), _if_then_else(True, ones_diff_rows, 1)), ge(_if_then_else(False, compare_blocks_cols, 0), _if_then_else(False, 3, zeros_diff_cols))), _if_then_else(and_(or_(False, True), and_(False, True)), _if_then_else(le(1, ARG6), _if_then_else(True, 4, 3), _if_then_else(False, 4, zeros_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, ones_diff_rows, 3), _if_then_else(True, 3, compare_blocks_rows))), _if_then_else(ge(_if_then_else(False, 3, ones_diff_cols), _if_then_else(True, ones_diff_cols, ARG7)), _if_then_else(True, _if_then_else(False, zeros_diff_rows, 4), _if_then_else(False, compare_blocks_rows, ARG6)), _if_then_else(le(ARG6, compare_blocks_cols), _if_then_else(False, ones_diff_rows, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, ones_diff_cols)))), ones_diff_cols))))
VAL TREES:
mul(mul(add(ones_diff_cols, zeros_diff_cols), mul(add(ones_diff_rows, compare_blocks_cols), compare_blocks_cols)), add(add(zeros_diff_cols, mul(zeros_diff_cols, ones_diff_rows)), mul(ones_diff_cols, compare_blocks_cols)))
add(add(zeros_diff_rows, zeros_diff_cols), add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_rows)))
add(add(mul(mul(compare_blocks_cols, ones_diff_rows), zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), mul(add(ones_diff_rows, zeros_diff_rows), compare_blocks_rows)))
mul(add(add(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows)), add(mul(mul(mul(add(add(add(mul(add(zeros_diff_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_cols))), add(add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_rows)))), mul(mul(mul(add(zeros_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_rows, zeros_diff_rows))), mul(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, zeros_diff_rows)), mul(mul(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_cols, compare_blocks_rows))))), zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_cols)), ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))), add(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), add(compare_blocks_cols, compare_blocks_rows))
add(add(mul(mul(compare_blocks_cols, add(ones_diff_rows, compare_blocks_rows)), add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols))), add(mul(add(add(zeros_diff_cols, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows))), add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))))
COND TREES:
or_(ge(2, 1), ge(_if_then_else(le(_if_then_else(le(ARG7, zeros_diff_rows), _if_then_else(True, ARG6, zeros_diff_cols), _if_then_else(True, 1, 2)), _if_then_else(le(compare_blocks_cols, 0), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, zeros_diff_rows))), _if_then_else(False, 2, ARG6), _if_then_else(True, 3, ARG6)), _if_then_else(le(1, 1), _if_then_else(False, ones_diff_rows, ARG7), _if_then_else(False, zeros_diff_cols, 0))))
and_(or_(ge(4, 1), and_(or_(ge(4, 1), and_(True, True)), True)), le(_if_then_else(le(_if_then_else(or_(and_(False, True), ge(3, ARG7)), _if_then_else(ge(0, ARG7), _if_then_else(True, ARG7, zeros_diff_rows), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(4, zeros_diff_cols), _if_then_else(True, 1, 1), _if_then_else(False, 4, zeros_diff_cols))), _if_then_else(or_(ge(4, compare_blocks_rows), or_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ARG6, ARG7), _if_then_else(True, zeros_diff_rows, 4)), _if_then_else(and_(False, False), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, 3)))), _if_then_else(le(_if_then_else(or_(True, True), _if_then_else(True, ARG7, 0), _if_then_else(True, ARG7, compare_blocks_rows)), _if_then_else(ge(0, 0), _if_then_else(False, 0, 1), _if_then_else(True, ones_diff_rows, zeros_diff_cols))), _if_then_else(and_(and_(True, False), or_(True, True)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_cols, 2), _if_then_else(True, compare_blocks_rows, 3)), _if_then_else(or_(False, False), _if_then_else(False, 0, ones_diff_cols), _if_then_else(True, 2, ones_diff_rows))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, 3), _if_then_else(False, ARG7, ARG6)), _if_then_else(ge(2, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, 3, compare_blocks_cols)), _if_then_else(le(compare_blocks_cols, 2), _if_then_else(False, 4, 0), _if_then_else(False, 3, ARG6)))), _if_then_else(ge(_if_then_else(or_(True, False), _if_then_else(False, 1, zeros_diff_rows), 1), _if_then_else(le(compare_blocks_rows, 2), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, 4))), _if_then_else(or_(le(compare_blocks_cols, ARG7), ge(3, zeros_diff_cols)), _if_then_else(ge(1, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, ones_diff_rows)), _if_then_else(ge(ARG6, ARG6), _if_then_else(True, zeros_diff_rows, ARG6), _if_then_else(True, compare_blocks_cols, compare_blocks_rows))), _if_then_else(le(_if_then_else(False, ARG7, 4), _if_then_else(True, 2, ones_diff_rows)), _if_then_else(and_(True, False), _if_then_else(True, zeros_diff_cols, ones_diff_cols), _if_then_else(False, 1, compare_blocks_rows)), _if_then_else(le(2, ones_diff_cols), _if_then_else(False, 1, 2), _if_then_else(False, compare_blocks_cols, ones_diff_rows))))), _if_then_else(True, zeros_diff_cols, 0)))
le(_if_then_else(or_(ge(compare_blocks_cols, ones_diff_cols), le(zeros_diff_rows, ones_diff_rows)), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(le(0, 4), 0, 0)), _if_then_else(le(zeros_diff_rows, 0), _if_then_else(ge(ones_diff_rows, 2), ones_diff_cols, ARG6), _if_then_else(True, 1, compare_blocks_rows)))
or_(ge(_if_then_else(False, ARG7, 3), _if_then_else(True, ARG7, ARG6)), and_(or_(and_(le(_if_then_else(ge(0, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, 0), _if_then_else(True, ones_diff_rows, ARG7)), _if_then_else(and_(False, False), _if_then_else(False, 4, 4), _if_then_else(False, ARG7, ARG7))), le(_if_then_else(or_(False, False), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(le(2, 2), _if_then_else(True, 1, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, ARG6)))), ge(_if_then_else(le(_if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(True, zeros_diff_cols, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(False, 4, 0), _if_then_else(False, ARG6, 0)), _if_then_else(ge(2, 1), _if_then_else(False, compare_blocks_rows, 2), _if_then_else(False, 1, ARG7))), _if_then_else(le(_if_then_else(True, compare_blocks_rows, 0), _if_then_else(True, 2, 0)), _if_then_else(or_(True, False), _if_then_else(True, 2, ARG6), _if_then_else(True, 0, 3)), _if_then_else(le(zeros_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 4))))), or_(False, and_(False, True))))
ge(_if_then_else(and_(True, le(ones_diff_cols, _if_then_else(and_(and_(True, True), le(4, 2)), _if_then_else(or_(True, False), _if_then_else(False, _if_then_else(and_(False, and_(True, True)), _if_then_else(le(2, 0), zeros_diff_cols, 1), _if_then_else(False, zeros_diff_rows, _if_then_else(True, 1, ARG7))), 2), _if_then_else(False, 4, ARG6)), _if_then_else(le(ones_diff_rows, 1), _if_then_else(False, zeros_diff_rows, ARG7), _if_then_else(False, 2, 2))))), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, zeros_diff_cols), 3), _if_then_else(True, 4, ARG6)), _if_then_else(and_(True, True), _if_then_else(True, compare_blocks_rows, zeros_diff_rows), _if_then_else(True, ARG7, 1)))
VAL TREES:
add(add(add(mul(ones_diff_rows, zeros_diff_cols), zeros_diff_rows), add(compare_blocks_cols, compare_blocks_cols)), add(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)))
add(add(ones_diff_rows, add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, compare_blocks_cols))), mul(mul(mul(ones_diff_cols, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), mul(mul(compare_blocks_rows, mul(mul(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_rows, zeros_diff_rows))), add(zeros_diff_rows, ones_diff_rows))))
mul(mul(mul(add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_cols, add(ones_diff_rows, zeros_diff_cols)), add(ones_diff_rows, ones_diff_rows))), mul(mul(add(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_cols, ones_diff_cols)))), add(compare_blocks_cols, mul(add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(compare_blocks_rows, add(zeros_diff_rows, ones_diff_cols)))))
add(mul(mul(add(ones_diff_rows, ones_diff_cols), compare_blocks_cols), mul(compare_blocks_rows, compare_blocks_rows)), mul(mul(compare_blocks_rows, ones_diff_rows), add(add(ones_diff_rows, mul(mul(ones_diff_rows, ones_diff_cols), ones_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), compare_blocks_cols))))
add(zeros_diff_rows, add(add(mul(mul(ones_diff_cols, ones_diff_rows), mul(ones_diff_rows, ones_diff_rows)), add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows))), add(add(mul(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, zeros_diff_cols)), add(add(ones_diff_cols, add(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols))), mul(compare_blocks_rows, ones_diff_rows)))))
mul(mul(mul(mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), mul(add(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_rows, ones_diff_rows))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(mul(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)))), mul(add(mul(mul(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)))))
COND TREES:
or_(ge(2, 1), ge(_if_then_else(and_(True, le(2, ARG7)), 1, 3), _if_then_else(le(1, 1), _if_then_else(False, ones_diff_rows, ARG7), _if_then_else(False, zeros_diff_cols, 0))))
and_(or_(ge(4, 1), and_(or_(ge(4, 1), and_(True, True)), True)), le(_if_then_else(le(_if_then_else(or_(and_(False, True), ge(3, ARG7)), _if_then_else(ge(0, ARG7), _if_then_else(True, ARG7, zeros_diff_rows), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(4, zeros_diff_cols), _if_then_else(True, 1, 1), _if_then_else(False, 4, zeros_diff_cols))), _if_then_else(or_(ge(4, compare_blocks_rows), or_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ARG6, ARG7), _if_then_else(True, zeros_diff_rows, 4)), _if_then_else(and_(False, False), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, 3)))), _if_then_else(le(_if_then_else(or_(True, True), _if_then_else(True, ARG7, 0), _if_then_else(True, ARG7, compare_blocks_rows)), _if_then_else(ge(0, 0), _if_then_else(False, 0, 1), _if_then_else(True, ones_diff_rows, zeros_diff_cols))), _if_then_else(and_(and_(True, False), or_(True, True)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_cols, 2), _if_then_else(True, compare_blocks_rows, 3)), _if_then_else(or_(False, False), _if_then_else(False, 0, ones_diff_cols), _if_then_else(True, 2, ones_diff_rows))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, 3), _if_then_else(False, ARG7, ARG6)), _if_then_else(ge(2, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, 3, compare_blocks_cols)), _if_then_else(le(compare_blocks_cols, 2), _if_then_else(False, 4, 0), _if_then_else(False, 3, ARG6)))), _if_then_else(ge(_if_then_else(or_(True, False), _if_then_else(False, 1, zeros_diff_rows), 1), _if_then_else(le(compare_blocks_rows, 2), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, 4))), _if_then_else(or_(le(compare_blocks_cols, ARG7), ge(3, zeros_diff_cols)), _if_then_else(ge(1, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, ones_diff_rows)), _if_then_else(ge(ARG6, ARG6), _if_then_else(True, zeros_diff_rows, ARG6), _if_then_else(True, compare_blocks_cols, compare_blocks_rows))), _if_then_else(le(_if_then_else(False, ARG7, 4), _if_then_else(True, 2, ones_diff_rows)), _if_then_else(and_(True, False), _if_then_else(True, zeros_diff_cols, ones_diff_cols), _if_then_else(False, 1, compare_blocks_rows)), _if_then_else(le(2, ones_diff_cols), _if_then_else(False, 1, 2), _if_then_else(False, compare_blocks_cols, ones_diff_rows))))), _if_then_else(True, zeros_diff_cols, 0)))
le(_if_then_else(or_(ge(compare_blocks_cols, ones_diff_cols), le(zeros_diff_rows, ones_diff_rows)), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(le(0, 4), 0, 0)), _if_then_else(le(zeros_diff_rows, 0), _if_then_else(ge(ones_diff_rows, 2), ones_diff_cols, ARG6), _if_then_else(True, 1, compare_blocks_rows)))
or_(ge(_if_then_else(False, ARG7, 3), _if_then_else(True, ARG7, ARG6)), and_(or_(and_(le(_if_then_else(ge(0, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, 0), _if_then_else(True, ones_diff_rows, ARG7)), _if_then_else(and_(False, False), _if_then_else(False, 4, 4), _if_then_else(False, ARG7, ARG7))), le(_if_then_else(or_(False, False), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(le(2, 2), _if_then_else(True, 1, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, ARG6)))), ge(_if_then_else(le(_if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(True, zeros_diff_cols, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(False, 4, 0), _if_then_else(False, ARG6, 0)), _if_then_else(ge(2, 1), _if_then_else(False, compare_blocks_rows, 2), _if_then_else(False, 1, ARG7))), _if_then_else(le(_if_then_else(True, compare_blocks_rows, 0), _if_then_else(True, 2, 0)), _if_then_else(or_(True, False), _if_then_else(True, 2, ARG6), _if_then_else(True, 0, 3)), _if_then_else(le(zeros_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 4))))), or_(False, and_(False, True))))
ge(_if_then_else(and_(True, le(ones_diff_cols, _if_then_else(and_(and_(True, True), le(4, 2)), _if_then_else(or_(True, False), _if_then_else(False, _if_then_else(and_(False, and_(True, True)), _if_then_else(ge(0, _if_then_else(False, ones_diff_cols, ones_diff_cols)), zeros_diff_cols, 1), _if_then_else(False, zeros_diff_rows, _if_then_else(True, 1, ARG7))), 2), _if_then_else(False, 4, ARG6)), _if_then_else(le(ones_diff_rows, 1), _if_then_else(False, zeros_diff_rows, ARG7), _if_then_else(False, 2, 2))))), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, zeros_diff_cols), 3), _if_then_else(True, 4, ARG6)), _if_then_else(and_(True, True), _if_then_else(True, compare_blocks_rows, zeros_diff_rows), _if_then_else(True, ARG7, 1)))
VAL TREES:
add(add(add(mul(ones_diff_rows, zeros_diff_cols), zeros_diff_rows), add(mul(zeros_diff_cols, ones_diff_rows), compare_blocks_cols)), add(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)))
add(add(ones_diff_rows, add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, compare_blocks_cols))), mul(mul(mul(ones_diff_cols, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), mul(mul(compare_blocks_rows, mul(mul(compare_blocks_cols, compare_blocks_rows), mul(ones_diff_rows, zeros_diff_rows))), add(zeros_diff_rows, ones_diff_rows))))
mul(mul(mul(add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_cols, add(ones_diff_rows, zeros_diff_cols)), add(ones_diff_rows, ones_diff_rows))), mul(mul(add(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_cols, ones_diff_cols)))), add(compare_blocks_cols, mul(add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols)))))
add(mul(mul(add(ones_diff_rows, ones_diff_cols), compare_blocks_cols), mul(compare_blocks_rows, compare_blocks_rows)), mul(mul(compare_blocks_rows, ones_diff_rows), add(add(ones_diff_rows, mul(mul(ones_diff_rows, ones_diff_cols), ones_diff_cols)), add(mul(mul(add(add(add(mul(add(zeros_diff_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_cols))), add(add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_rows)))), mul(mul(mul(add(zeros_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_rows, zeros_diff_rows))), mul(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, zeros_diff_rows)), mul(mul(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_cols, compare_blocks_rows))))), zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_cols)), compare_blocks_cols))))
add(zeros_diff_rows, add(add(mul(mul(ones_diff_cols, ones_diff_rows), mul(ones_diff_rows, ones_diff_rows)), add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows))), add(add(mul(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, zeros_diff_cols)), add(add(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)))))
mul(mul(mul(mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), mul(add(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_rows, ones_diff_rows))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(mul(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)))), mul(add(mul(mul(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)))))
COND TREES:
or_(or_(and_(False, True), le(0, _if_then_else(le(_if_then_else(le(ARG7, zeros_diff_rows), _if_then_else(True, ARG6, zeros_diff_cols), _if_then_else(True, 1, 2)), _if_then_else(le(compare_blocks_cols, 0), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, zeros_diff_rows))), _if_then_else(False, 2, ARG6), _if_then_else(True, 3, ARG6)))), or_(ge(_if_then_else(True, compare_blocks_cols, zeros_diff_rows), zeros_diff_cols), or_(True, True)))
or_(le(_if_then_else(ge(_if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 3, 4)), _if_then_else(or_(ge(compare_blocks_cols, 3), False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 2))), _if_then_else(and_(and_(False, True), ge(4, 2)), _if_then_else(ge(ARG6, 4), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)))), and_(or_(or_(and_(True, False), le(2, ones_diff_rows)), ge(_if_then_else(False, 4, 2), _if_then_else(True, 0, 1))), ge(_if_then_else(ge(4, 0), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 3, ARG7)), _if_then_else(le(compare_blocks_rows, 1), _if_then_else(False, 4, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))))
or_(le(_if_then_else(and_(True, True), _if_then_else(True, 4, 3), _if_then_else(le(_if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, ones_diff_cols)), 4, compare_blocks_rows)), _if_then_else(True, _if_then_else(True, ARG6, ARG6), compare_blocks_cols)), or_(or_(or_(True, True), and_(False, False)), or_(False, False)))
le(_if_then_else(True, _if_then_else(False, zeros_diff_cols, 0), _if_then_else(True, zeros_diff_rows, 1)), _if_then_else(ge(ARG7, 4), _if_then_else(False, 4, ARG6), _if_then_else(False, zeros_diff_cols, 4)))
or_(ge(_if_then_else(and_(True, True), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(ge(1, ARG6), _if_then_else(True, 4, ARG7), _if_then_else(True, compare_blocks_cols, zeros_diff_cols))), and_(or_(or_(True, True), or_(True, False)), le(2, 0)))
VAL TREES:
mul(ones_diff_rows, add(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_cols)))
add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), mul(add(zeros_diff_cols, zeros_diff_rows), compare_blocks_rows)))
mul(add(add(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows)), add(mul(mul(ones_diff_cols, zeros_diff_rows), ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))), add(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), add(add(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)), compare_blocks_rows))
add(mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, ones_diff_cols))), add(mul(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)))), add(mul(add(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows))), add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(mul(zeros_diff_cols, compare_blocks_cols), zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))))
COND TREES:
ge(_if_then_else(le(_if_then_else(and_(ge(_if_then_else(ge(1, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), zeros_diff_cols), 0), or_(True, le(ARG7, compare_blocks_cols))), _if_then_else(ge(zeros_diff_cols, ARG7), _if_then_else(False, compare_blocks_rows, zeros_diff_rows), _if_then_else(True, 1, 4)), _if_then_else(ge(_if_then_else(False, 0, zeros_diff_cols), 3), _if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(True, 2, 3))), _if_then_else(True, 0, _if_then_else(True, compare_blocks_rows, ARG6))), _if_then_else(ge(compare_blocks_cols, 2), zeros_diff_rows, 0), _if_then_else(False, _if_then_else(False, zeros_diff_cols, 1), zeros_diff_rows)), _if_then_else(ge(ARG7, 3), _if_then_else(False, compare_blocks_cols, _if_then_else(True, _if_then_else(True, ARG7, 3), 3)), _if_then_else(True, ARG6, ARG6)))
ge(_if_then_else(or_(or_(le(ones_diff_rows, 4), le(1, zeros_diff_rows)), le(_if_then_else(False, 0, ARG6), _if_then_else(True, ones_diff_rows, 4))), _if_then_else(and_(and_(True, False), or_(False, False)), _if_then_else(or_(False, True), _if_then_else(False, 3, ARG6), _if_then_else(True, ones_diff_cols, 2)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(False, ARG6, compare_blocks_cols))), _if_then_else(and_(le(zeros_diff_cols, compare_blocks_rows), or_(False, True)), _if_then_else(le(ones_diff_rows, 3), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(True, ARG6, zeros_diff_rows)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(True, 3, ARG6), _if_then_else(True, 4, 3)))), _if_then_else(le(_if_then_else(le(compare_blocks_rows, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 4, ARG7)), _if_then_else(and_(True, True), _if_then_else(False, 4, 0), _if_then_else(False, ones_diff_rows, 3))), _if_then_else(and_(le(ARG6, ARG6), ge(2, 2)), _if_then_else(and_(True, False), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows))), _if_then_else(or_(ge(4, 2), ge(zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, ARG6, 1), _if_then_else(False, 0, 3)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4)))))
and_(ge(_if_then_else(le(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 0, ARG6), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(le(3, 3), _if_then_else(False, 1, 4), _if_then_else(False, 0, ones_diff_cols))), ge(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, 4), _if_then_else(False, zeros_diff_rows, compare_blocks_cols)), _if_then_else(ge(_if_then_else(False, 3, zeros_diff_rows), _if_then_else(and_(ge(_if_then_else(True, 3, ones_diff_rows), _if_then_else(True, compare_blocks_rows, 0)), le(_if_then_else(le(_if_then_else(le(_if_then_else(True, 3, ARG6), _if_then_else(False, 4, 3)), _if_then_else(le(3, compare_blocks_cols), _if_then_else(True, 0, ARG7), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, 3, compare_blocks_rows))), _if_then_else(le(_if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(True, 3, 0)), _if_then_else(le(zeros_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(True, ARG6, 3)), _if_then_else(ge(ones_diff_cols, ARG6), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(True, 2, compare_blocks_rows)))), _if_then_else(and_(ge(_if_then_else(False, 2, zeros_diff_cols), _if_then_else(False, 3, 4)), le(_if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(False, 4, 1))), _if_then_else(or_(le(0, ARG6), le(ARG7, ones_diff_cols)), _if_then_else(le(1, ARG6), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, 3, ones_diff_rows), _if_then_else(False, 4, compare_blocks_cols))), _if_then_else(or_(and_(False, True), or_(True, False)), _if_then_else(le(compare_blocks_rows, ones_diff_rows), _if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, ARG7, zeros_diff_rows)), _if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, ones_diff_rows)))), _if_then_else(ge(_if_then_else(ge(ARG7, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, 1, 2), _if_then_else(True, ones_diff_rows, 4))), _if_then_else(ge(_if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, ARG7, zeros_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, ARG6, 0), _if_then_else(True, 3, 1)), _if_then_else(le(zeros_diff_cols, ARG6), _if_then_else(True, ARG7, ones_diff_rows), _if_then_else(True, 1, 4))), _if_then_else(and_(le(4, 4), or_(True, False)), _if_then_else(or_(True, False), _if_then_else(False, ARG7, 0), _if_then_else(False, 3, 3)), _if_then_else(or_(False, False), _if_then_else(True, compare_blocks_cols, ARG6), _if_then_else(True, compare_blocks_cols, 2))))), _if_then_else(False, 3, ones_diff_rows))), zeros_diff_cols, 1)), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(True, compare_blocks_rows, ones_diff_rows))))
or_(and_(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(or_(True, True), _if_then_else(False, ARG6, 4), _if_then_else(True, 2, 3))), and_(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, _if_then_else(ge(_if_then_else(True, 2, 2), _if_then_else(True, 4, ARG7)), _if_then_else(ge(ARG6, 4), _if_then_else(True, 4, 2), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(ge(1, ARG6), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 1, 2))))), le(_if_then_else(True, 1, 2), _if_then_else(True, ARG7, compare_blocks_rows)))), or_(or_(and_(or_(True, False), ge(4, zeros_diff_rows)), le(_if_then_else(True, 4, _if_then_else(False, zeros_diff_cols, 2)), _if_then_else(False, 0, 0))), or_(ge(_if_then_else(True, ones_diff_cols, 0), _if_then_else(True, 0, 0)), and_(or_(False, False), le(ones_diff_rows, 4)))))
and_(le(_if_then_else(ge(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols, ones_diff_cols), _if_then_else(and_(False, False), 4, compare_blocks_cols)), ge(_if_then_else(and_(True, True), 1, zeros_diff_rows), _if_then_else(False, ARG6, _if_then_else(or_(True, True), 0, compare_blocks_rows))))
VAL TREES:
mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(mul(compare_blocks_cols, ones_diff_rows), ones_diff_rows)))
mul(mul(mul(zeros_diff_cols, ones_diff_cols), mul(add(compare_blocks_cols, mul(ones_diff_cols, zeros_diff_cols)), add(zeros_diff_rows, compare_blocks_cols))), add(add(ones_diff_rows, zeros_diff_rows), add(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))), add(add(mul(mul(mul(zeros_diff_rows, ones_diff_rows), mul(ones_diff_cols, mul(add(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_cols)))), compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols))))
mul(add(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, add(compare_blocks_cols, zeros_diff_rows))), add(add(compare_blocks_cols, compare_blocks_rows), ones_diff_cols))
add(add(mul(add(add(mul(mul(ones_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows)), zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols))), mul(mul(mul(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_rows)))), add(add(add(mul(ones_diff_rows, mul(compare_blocks_rows, zeros_diff_cols)), add(ones_diff_cols, compare_blocks_cols)), add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), add(mul(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)))))
add(mul(add(mul(add(ones_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_rows)), mul(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(mul(add(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), zeros_diff_cols)))
COND TREES:
or_(or_(and_(False, True), le(0, _if_then_else(and_(True, le(2, ARG7)), 1, 3))), or_(ge(_if_then_else(True, compare_blocks_cols, zeros_diff_rows), zeros_diff_cols), or_(True, True)))
or_(le(_if_then_else(ge(_if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 3, 4)), _if_then_else(or_(ge(compare_blocks_cols, 3), False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 2))), _if_then_else(and_(and_(False, True), ge(4, 2)), _if_then_else(ge(ARG6, 4), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)))), and_(or_(or_(and_(True, False), le(2, ones_diff_rows)), ge(_if_then_else(False, 4, 2), _if_then_else(True, 0, 1))), ge(_if_then_else(ge(4, 0), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 3, ARG7)), _if_then_else(le(compare_blocks_rows, 1), _if_then_else(False, 4, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))))
or_(le(_if_then_else(and_(True, True), _if_then_else(True, 4, 3), _if_then_else(le(_if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, ones_diff_cols)), 4, compare_blocks_rows)), _if_then_else(True, _if_then_else(True, ARG6, ARG6), compare_blocks_cols)), or_(or_(or_(True, True), and_(False, False)), or_(False, False)))
le(_if_then_else(False, _if_then_else(False, zeros_diff_cols, 0), _if_then_else(True, zeros_diff_rows, 1)), _if_then_else(ge(ARG7, 4), _if_then_else(False, 4, ARG6), _if_then_else(False, zeros_diff_cols, 4)))
or_(ge(_if_then_else(and_(True, True), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(ge(1, ARG6), _if_then_else(True, 4, ARG7), _if_then_else(True, compare_blocks_cols, zeros_diff_cols))), and_(or_(or_(True, True), or_(True, False)), ge(0, _if_then_else(False, ones_diff_cols, ones_diff_cols))))
VAL TREES:
mul(ones_diff_rows, add(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_cols)))
add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), mul(add(zeros_diff_cols, zeros_diff_rows), compare_blocks_rows)))
mul(add(add(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows)), add(mul(mul(ones_diff_cols, zeros_diff_rows), ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))), add(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), mul(mul(ones_diff_rows, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), add(add(mul(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)), compare_blocks_rows))
add(mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, ones_diff_cols))), add(mul(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)))), add(mul(add(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows))), add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(mul(zeros_diff_cols, compare_blocks_cols), zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))))
COND TREES:
ge(_if_then_else(or_(or_(and_(True, True), or_(False, True)), le(_if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, ARG6))), _if_then_else(ge(_if_then_else(False, ARG7, compare_blocks_rows), _if_then_else(True, ARG6, ones_diff_cols)), _if_then_else(le(3, zeros_diff_rows), _if_then_else(True, ARG6, 0), _if_then_else(True, compare_blocks_cols, zeros_diff_rows)), _if_then_else(ge(4, ARG6), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, zeros_diff_cols, ARG6))), _if_then_else(or_(ge(zeros_diff_cols, ones_diff_cols), le(compare_blocks_cols, 1)), _if_then_else(ge(compare_blocks_rows, ones_diff_rows), 2, _if_then_else(True, compare_blocks_cols, ones_diff_cols)), _if_then_else(ge(4, ones_diff_cols), _if_then_else(False, ARG7, 2), _if_then_else(False, compare_blocks_cols, ARG7)))), _if_then_else(or_(and_(le(3, compare_blocks_rows), ge(3, compare_blocks_cols)), ge(_if_then_else(False, 0, ARG7), _if_then_else(False, 2, ARG6))), _if_then_else(le(_if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, 3)), _if_then_else(or_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, 4)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(False, 0, 4))), _if_then_else(and_(True, ge(zeros_diff_cols, 1)), _if_then_else(or_(True, False), _if_then_else(False, ARG6, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(compare_blocks_cols, ones_diff_cols), _if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, 2)))))
and_(and_(and_(or_(True, True), ge(zeros_diff_rows, 1)), ge(_if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, ARG7))), or_(ge(_if_then_else(True, 1, ARG7), _if_then_else(False, ones_diff_rows, 4)), and_(True, True)))
ge(_if_then_else(le(_if_then_else(True, _if_then_else(or_(ge(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(le(ones_diff_cols, 4), 0, 0)), compare_blocks_cols), _if_then_else(False, 4, ones_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, ARG6, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(False, ARG7, ARG6))), _if_then_else(and_(and_(False, True), or_(True, False)), _if_then_else(le(3, 2), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(True, 2, 0)), _if_then_else(ge(ARG6, 2), _if_then_else(True, ARG6, ARG6), 2)))
le(_if_then_else(and_(False, True), _if_then_else(False, ARG7, ones_diff_rows), _if_then_else(True, 1, 2)), _if_then_else(False, _if_then_else(False, compare_blocks_cols, 2), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)))
le(_if_then_else(and_(True, and_(True, True)), _if_then_else(le(2, 0), zeros_diff_cols, 1), _if_then_else(False, _if_then_else(or_(True, False), _if_then_else(False, 2, 2), _if_then_else(False, 4, ARG6)), _if_then_else(True, 1, ARG7))), _if_then_else(and_(True, True), _if_then_else(False, _if_then_else(True, 4, 0), 2), _if_then_else(False, zeros_diff_rows, ARG6)))
VAL TREES:
mul(add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, zeros_diff_rows)), add(ones_diff_rows, compare_blocks_rows))
add(add(mul(add(zeros_diff_rows, ones_diff_rows), mul(compare_blocks_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, zeros_diff_rows))), add(mul(add(zeros_diff_cols, mul(zeros_diff_cols, mul(add(ones_diff_rows, zeros_diff_cols), zeros_diff_rows))), mul(compare_blocks_rows, compare_blocks_rows)), add(add(ones_diff_cols, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_rows))))
mul(add(add(ones_diff_cols, add(mul(mul(add(add(zeros_diff_rows, compare_blocks_rows), add(mul(compare_blocks_rows, compare_blocks_rows), mul(mul(ones_diff_rows, zeros_diff_cols), compare_blocks_cols))), ones_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), add(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, zeros_diff_rows)))), add(ones_diff_cols, compare_blocks_cols)), add(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), mul(mul(add(add(add(mul(add(zeros_diff_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_cols))), add(add(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_cols, zeros_diff_cols)), add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_rows)))), mul(mul(mul(add(zeros_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_rows, zeros_diff_rows))), mul(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, zeros_diff_rows)), mul(mul(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_cols, compare_blocks_rows))))), zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_cols)))
add(add(add(compare_blocks_cols, ones_diff_cols), mul(mul(ones_diff_cols, zeros_diff_cols), add(compare_blocks_rows, compare_blocks_rows))), compare_blocks_rows)
add(add(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), add(mul(compare_blocks_cols, zeros_diff_cols), mul(mul(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), zeros_diff_cols))), mul(mul(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_cols))))
COND TREES:
or_(or_(and_(False, True), le(0, 1)), or_(ge(_if_then_else(or_(and_(True, True), or_(True, True)), _if_then_else(le(ARG6, compare_blocks_rows), _if_then_else(False, ones_diff_rows, 3), _if_then_else(False, ARG7, ones_diff_cols)), _if_then_else(le(2, 0), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(True, 1, 2))), zeros_diff_cols), or_(True, True)))
or_(le(_if_then_else(ge(_if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 3, 4)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 2))), _if_then_else(and_(and_(False, True), ge(4, 2)), _if_then_else(ge(ARG6, 4), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)))), and_(or_(or_(and_(True, False), le(2, ones_diff_rows)), or_(or_(le(ones_diff_rows, 2), ge(2, ones_diff_cols)), and_(or_(ge(_if_then_else(False, zeros_diff_cols, ARG7), ARG6), True), and_(True, True)))), ge(_if_then_else(ge(4, 0), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 3, ARG7)), _if_then_else(le(compare_blocks_rows, 1), _if_then_else(False, 4, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))))
or_(le(_if_then_else(and_(True, True), _if_then_else(True, 4, 3), _if_then_else(le(_if_then_else(True, compare_blocks_rows, _if_then_else(le(_if_then_else(or_(and_(True, False), ge(4, 3)), _if_then_else(and_(False, True), _if_then_else(True, 4, ARG7), _if_then_else(True, zeros_diff_cols, ARG6)), _if_then_else(or_(True, False), _if_then_else(False, 4, 1), _if_then_else(False, compare_blocks_cols, 1))), _if_then_else(ge(_if_then_else(False, 2, _if_then_else(or_(ge(compare_blocks_cols, ones_diff_cols), le(zeros_diff_rows, ones_diff_rows)), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(le(0, 4), 0, 0))), _if_then_else(False, ones_diff_cols, ARG7)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(False, ARG6, compare_blocks_cols)), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_rows, ARG6), _if_then_else(False, 4, zeros_diff_cols)))), _if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, 4, ones_diff_cols), _if_then_else(True, 2, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, ARG7, 4), _if_then_else(False, ARG6, 1))), _if_then_else(ge(_if_then_else(True, 4, compare_blocks_cols), _if_then_else(True, ARG7, ARG7)), _if_then_else(and_(False, True), _if_then_else(True, 0, 1), _if_then_else(True, ARG6, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, 2), _if_then_else(True, ARG7, ARG7), _if_then_else(False, ones_diff_cols, 1))), _if_then_else(ge(_if_then_else(False, ARG7, 4), _if_then_else(True, 4, ones_diff_cols)), _if_then_else(ge(4, 4), _if_then_else(True, ARG6, 0), _if_then_else(False, compare_blocks_cols, compare_blocks_rows)), _if_then_else(le(ones_diff_cols, ones_diff_rows), _if_then_else(False, 0, ones_diff_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)))), _if_then_else(or_(le(_if_then_else(False, compare_blocks_rows, ARG6), _if_then_else(True, ARG6, 1)), ge(_if_then_else(False, ARG7, 0), _if_then_else(True, ARG7, 4))), _if_then_else(le(_if_then_else(True, zeros_diff_cols, 0), _if_then_else(False, ARG6, zeros_diff_rows)), _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, 2, 0)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 1))), _if_then_else(or_(or_(False, True), ge(0, ones_diff_cols)), _if_then_else(le(1, 0), _if_then_else(True, ARG6, 4), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_cols, ones_diff_rows), _if_then_else(True, ones_diff_rows, ARG7)))))), _if_then_else(False, 4, ones_diff_cols)), 4, compare_blocks_rows)), _if_then_else(True, _if_then_else(True, ARG6, ARG6), compare_blocks_cols)), or_(or_(or_(True, True), and_(False, False)), or_(False, False)))
le(_if_then_else(le(1, 2), _if_then_else(True, zeros_diff_cols, 0), _if_then_else(True, zeros_diff_rows, 1)), _if_then_else(ge(ARG7, 4), _if_then_else(False, 4, ARG6), _if_then_else(False, zeros_diff_cols, 4)))
or_(ge(_if_then_else(and_(True, True), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(ge(1, ARG6), _if_then_else(True, 4, ARG7), _if_then_else(True, compare_blocks_cols, zeros_diff_cols))), and_(or_(or_(False, True), or_(True, False)), ge(_if_then_else(and_(True, and_(True, True)), _if_then_else(le(2, 0), zeros_diff_cols, 1), _if_then_else(False, zeros_diff_rows, _if_then_else(True, 1, ARG7))), _if_then_else(le(_if_then_else(ge(_if_then_else(False, 0, compare_blocks_cols), _if_then_else(False, 1, 0)), _if_then_else(le(ARG7, ones_diff_rows), _if_then_else(True, ones_diff_rows, ARG6), _if_then_else(True, zeros_diff_rows, 4)), _if_then_else(ge(compare_blocks_cols, zeros_diff_cols), _if_then_else(False, 2, 2), _if_then_else(True, ones_diff_cols, ones_diff_rows))), _if_then_else(ge(_if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(True, 3, ARG7)), _if_then_else(or_(False, False), _if_then_else(False, 3, compare_blocks_cols), _if_then_else(True, ones_diff_cols, ARG6)), _if_then_else(ge(3, zeros_diff_cols), _if_then_else(False, ones_diff_rows, 4), _if_then_else(False, zeros_diff_rows, 0)))), _if_then_else(or_(ge(_if_then_else(False, compare_blocks_cols, 2), _if_then_else(True, 3, ones_diff_rows)), and_(ge(compare_blocks_rows, 2), le(4, compare_blocks_rows))), _if_then_else(ge(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(True, ARG6, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, zeros_diff_rows, 4), _if_then_else(False, zeros_diff_rows, 3)), _if_then_else(ge(0, ARG7), _if_then_else(False, 4, ARG7), _if_then_else(True, ones_diff_rows, compare_blocks_rows))), _if_then_else(le(_if_then_else(False, 4, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(or_(True, True), _if_then_else(False, ARG7, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, 3)), _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(False, 4, ones_diff_rows)))), _if_then_else(and_(and_(True, and_(False, False)), le(_if_then_else(True, 3, zeros_diff_rows), _if_then_else(False, ones_diff_cols, ARG6))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, ARG7), _if_then_else(True, zeros_diff_cols, zeros_diff_cols)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(False, 3, ones_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, 4, ARG6), _if_then_else(False, 2, 0))), _if_then_else(or_(and_(False, False), le(4, ARG6)), _if_then_else(or_(False, False), _if_then_else(False, 3, ARG7), _if_then_else(True, 1, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, 4, 3), _if_then_else(True, zeros_diff_cols, ARG7))))))))
VAL TREES:
mul(mul(add(ones_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_cols)))
add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_cols, add(add(mul(zeros_diff_rows, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(add(compare_blocks_cols, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_cols))))), add(mul(compare_blocks_cols, zeros_diff_rows), compare_blocks_cols))
add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(mul(add(ones_diff_cols, zeros_diff_rows), mul(add(zeros_diff_cols, zeros_diff_rows), compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_rows), compare_blocks_rows)))
mul(add(add(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows)), add(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))), add(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), add(add(mul(ones_diff_cols, mul(ones_diff_rows, zeros_diff_cols)), add(compare_blocks_rows, ones_diff_cols)), compare_blocks_rows))
add(mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(add(mul(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_cols, add(mul(compare_blocks_rows, ones_diff_cols), compare_blocks_cols))), mul(mul(add(mul(ones_diff_rows, compare_blocks_cols), ones_diff_cols), zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols))), ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, ones_diff_cols))), add(mul(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)))), add(mul(add(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols)), mul(mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, ones_diff_cols)), mul(ones_diff_cols, compare_blocks_rows))), add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))))
COND TREES:
ge(_if_then_else(or_(or_(and_(True, True), or_(False, True)), le(_if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, ARG6))), _if_then_else(ge(_if_then_else(False, ARG7, compare_blocks_rows), _if_then_else(True, ARG6, ones_diff_cols)), _if_then_else(le(3, zeros_diff_rows), _if_then_else(True, ARG6, 0), _if_then_else(True, compare_blocks_cols, zeros_diff_rows)), _if_then_else(ge(4, ARG6), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, zeros_diff_cols, ARG6))), _if_then_else(or_(ge(zeros_diff_cols, ones_diff_cols), le(compare_blocks_cols, 1)), _if_then_else(ge(compare_blocks_rows, ones_diff_rows), 2, _if_then_else(True, compare_blocks_cols, ones_diff_cols)), _if_then_else(ge(4, ones_diff_cols), _if_then_else(False, ARG7, 2), _if_then_else(False, compare_blocks_cols, ARG7)))), _if_then_else(or_(True, True), _if_then_else(le(_if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, 3)), _if_then_else(or_(False, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, 4)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(False, 0, 4))), _if_then_else(and_(True, ge(zeros_diff_cols, 1)), _if_then_else(or_(True, False), _if_then_else(False, ARG6, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(compare_blocks_cols, ones_diff_cols), _if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, 2)))))
and_(and_(and_(or_(True, True), ge(zeros_diff_rows, 1)), ge(_if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, ARG7))), or_(ge(_if_then_else(True, 1, _if_then_else(ge(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows))), _if_then_else(False, ones_diff_rows, 4)), and_(True, True)))
ge(_if_then_else(le(_if_then_else(True, _if_then_else(or_(ge(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(le(ones_diff_cols, 4), 0, 0)), compare_blocks_cols), _if_then_else(False, 4, ones_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, ARG6, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(False, ARG7, ARG6))), _if_then_else(and_(and_(False, True), or_(True, False)), _if_then_else(le(3, 2), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(True, 2, 0)), _if_then_else(ge(ARG6, 2), _if_then_else(True, _if_then_else(True, ARG6, ARG6), ARG6), 2)))
le(_if_then_else(and_(False, True), _if_then_else(False, ARG7, ones_diff_rows), _if_then_else(True, 1, 2)), _if_then_else(False, _if_then_else(False, compare_blocks_cols, 2), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)))
le(_if_then_else(and_(True, and_(True, True)), ARG7, _if_then_else(False, _if_then_else(or_(True, False), _if_then_else(False, 2, 2), _if_then_else(False, 4, ARG6)), _if_then_else(True, 1, ARG7))), _if_then_else(and_(True, True), _if_then_else(False, _if_then_else(True, 4, 0), 2), _if_then_else(False, zeros_diff_rows, ARG6)))
VAL TREES:
mul(add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, zeros_diff_rows)), add(ones_diff_rows, compare_blocks_rows))
add(add(mul(add(zeros_diff_rows, ones_diff_rows), mul(compare_blocks_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, zeros_diff_rows))), add(mul(add(zeros_diff_cols, mul(zeros_diff_cols, mul(add(ones_diff_rows, zeros_diff_cols), zeros_diff_rows))), mul(compare_blocks_rows, compare_blocks_rows)), add(add(ones_diff_cols, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_rows))))
mul(add(add(ones_diff_cols, add(mul(mul(add(add(zeros_diff_rows, compare_blocks_rows), add(mul(compare_blocks_rows, compare_blocks_rows), mul(mul(ones_diff_rows, zeros_diff_cols), compare_blocks_cols))), ones_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), add(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, zeros_diff_rows)))), add(ones_diff_cols, compare_blocks_cols)), add(mul(compare_blocks_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_cols)))
add(add(mul(ones_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), mul(mul(add(add(add(mul(add(zeros_diff_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_cols))), add(add(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_cols, zeros_diff_cols)), add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_rows)))), mul(mul(mul(add(zeros_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_rows, zeros_diff_rows))), mul(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, zeros_diff_rows)), mul(mul(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_cols, compare_blocks_rows))))), zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_cols)))
add(add(add(compare_blocks_cols, ones_diff_cols), mul(mul(ones_diff_cols, zeros_diff_cols), add(compare_blocks_rows, compare_blocks_rows))), compare_blocks_rows)
add(add(mul(mul(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), add(mul(compare_blocks_cols, zeros_diff_cols), mul(mul(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), zeros_diff_cols))), mul(mul(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_cols))))
COND TREES:
or_(or_(and_(False, True), le(0, 1)), or_(ge(compare_blocks_cols, 4), or_(and_(le(3, compare_blocks_rows), ge(3, compare_blocks_cols)), ge(_if_then_else(False, 0, ARG7), _if_then_else(False, 2, ARG6)))))
or_(le(_if_then_else(ge(_if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, 3, 4)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 2))), _if_then_else(and_(and_(False, True), ge(4, 2)), _if_then_else(ge(ARG6, 4), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), ARG7)), and_(or_(or_(and_(True, False), le(2, ones_diff_rows)), ge(_if_then_else(False, 4, 2), _if_then_else(True, 0, 1))), ge(_if_then_else(ge(4, 0), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 3, ARG7)), _if_then_else(le(compare_blocks_rows, 1), _if_then_else(False, 4, 1), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)))))
or_(le(_if_then_else(and_(True, True), _if_then_else(True, 4, 3), _if_then_else(False, 4, compare_blocks_rows)), _if_then_else(True, ARG6, compare_blocks_cols)), or_(or_(or_(True, True), and_(False, False)), or_(False, False)))
le(_if_then_else(le(1, 2), _if_then_else(True, zeros_diff_cols, 0), _if_then_else(True, zeros_diff_rows, 1)), _if_then_else(ge(ARG7, 4), _if_then_else(False, 4, ARG6), _if_then_else(False, zeros_diff_cols, 4)))
or_(ge(_if_then_else(and_(True, True), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(ge(1, ARG6), _if_then_else(True, 4, _if_then_else(le(2, 0), zeros_diff_cols, 1)), _if_then_else(True, compare_blocks_cols, zeros_diff_cols))), and_(or_(or_(False, True), or_(True, False)), ge(_if_then_else(True, ARG7, zeros_diff_rows), _if_then_else(False, ones_diff_cols, ones_diff_cols))))
VAL TREES:
mul(mul(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_cols)))
add(add(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, add(mul(add(mul(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_cols)), add(add(add(compare_blocks_rows, zeros_diff_rows), compare_blocks_cols), mul(ones_diff_rows, ones_diff_rows))), mul(add(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(zeros_diff_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols))))), mul(zeros_diff_rows, ones_diff_rows)))
add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), add(add(add(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_cols))), mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols))))))
mul(add(add(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows)), add(mul(mul(compare_blocks_cols, zeros_diff_rows), ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols))), add(mul(add(zeros_diff_rows, add(add(compare_blocks_rows, mul(compare_blocks_rows, ones_diff_rows)), mul(compare_blocks_rows, zeros_diff_rows))), compare_blocks_rows), mul(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows))))
mul(mul(mul(ones_diff_rows, zeros_diff_rows), mul(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_cols))), add(add(mul(add(add(zeros_diff_cols, ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), mul(zeros_diff_rows, add(ones_diff_cols, zeros_diff_rows))), add(compare_blocks_rows, ones_diff_cols)), compare_blocks_rows))
add(mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, ones_diff_cols))), add(mul(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols)), compare_blocks_rows)), add(mul(mul(ones_diff_cols, zeros_diff_cols), mul(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows))), add(mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))))
COND TREES:
or_(ge(2, 1), ge(_if_then_else(le(_if_then_else(le(ARG7, zeros_diff_rows), _if_then_else(True, ARG6, zeros_diff_cols), _if_then_else(True, 1, 2)), _if_then_else(le(compare_blocks_cols, 0), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, zeros_diff_rows))), 1, _if_then_else(True, 3, ARG6)), _if_then_else(le(1, 1), _if_then_else(False, ones_diff_rows, 1), _if_then_else(False, zeros_diff_cols, 0))))
and_(or_(ge(4, 1), and_(or_(ge(0, 1), and_(True, True)), True)), le(_if_then_else(le(_if_then_else(or_(and_(False, True), ge(3, ARG7)), _if_then_else(ge(0, ARG7), _if_then_else(True, ARG7, zeros_diff_rows), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(4, zeros_diff_cols), _if_then_else(True, 1, 1), _if_then_else(False, 4, zeros_diff_cols))), _if_then_else(or_(ge(4, compare_blocks_rows), or_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ARG6, ARG7), _if_then_else(True, zeros_diff_rows, 4)), _if_then_else(and_(False, False), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, 3)))), _if_then_else(le(_if_then_else(or_(True, True), _if_then_else(True, ARG7, 0), _if_then_else(True, ARG7, compare_blocks_rows)), _if_then_else(ge(0, 0), _if_then_else(False, 0, 1), _if_then_else(True, ones_diff_rows, zeros_diff_cols))), _if_then_else(and_(and_(True, False), or_(True, True)), _if_then_else(or_(True, False), _if_then_else(True, zeros_diff_cols, 2), _if_then_else(True, compare_blocks_rows, 3)), _if_then_else(or_(False, False), _if_then_else(False, 0, ones_diff_cols), _if_then_else(True, 2, ones_diff_rows))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, 3), _if_then_else(False, ARG7, ARG6)), _if_then_else(ge(2, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, 3, compare_blocks_cols)), _if_then_else(le(compare_blocks_cols, 2), _if_then_else(False, 4, 0), _if_then_else(False, 3, ARG6)))), _if_then_else(ge(_if_then_else(or_(True, False), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(compare_blocks_rows, 2), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, 4))), _if_then_else(or_(le(compare_blocks_cols, ARG7), ge(3, zeros_diff_cols)), _if_then_else(ge(1, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, ones_diff_rows)), _if_then_else(ge(ARG6, ARG6), _if_then_else(True, zeros_diff_rows, ARG6), _if_then_else(True, compare_blocks_cols, compare_blocks_rows))), _if_then_else(le(_if_then_else(False, ARG7, 4), _if_then_else(True, 2, ones_diff_rows)), _if_then_else(and_(True, False), _if_then_else(True, zeros_diff_cols, ones_diff_cols), _if_then_else(False, 1, compare_blocks_rows)), _if_then_else(le(2, ones_diff_cols), _if_then_else(False, 1, 2), _if_then_else(False, compare_blocks_cols, ones_diff_rows))))), _if_then_else(True, zeros_diff_cols, 0)))
le(_if_then_else(or_(ge(compare_blocks_cols, ones_diff_cols), le(zeros_diff_rows, ones_diff_rows)), _if_then_else(and_(False, False), ARG7, compare_blocks_cols), _if_then_else(le(0, 4), 0, 0)), _if_then_else(le(zeros_diff_rows, 0), _if_then_else(ge(ones_diff_rows, 2), ones_diff_cols, ARG6), _if_then_else(True, 1, compare_blocks_rows)))
or_(ge(_if_then_else(False, ARG7, 3), _if_then_else(True, ARG7, ARG6)), and_(or_(and_(le(_if_then_else(ge(0, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, 0), _if_then_else(True, ones_diff_rows, ARG7)), _if_then_else(False, 4, ARG6)), le(_if_then_else(or_(False, False), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(le(2, 2), _if_then_else(True, 1, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, ARG6)))), ge(_if_then_else(le(_if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(True, zeros_diff_cols, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(False, 4, 0), _if_then_else(False, ARG6, 0)), _if_then_else(ge(2, 1), _if_then_else(False, compare_blocks_rows, 2), _if_then_else(False, 1, ARG7))), _if_then_else(le(_if_then_else(True, compare_blocks_rows, 0), _if_then_else(True, 2, 0)), _if_then_else(or_(True, False), _if_then_else(True, 2, ARG6), _if_then_else(True, 0, 3)), _if_then_else(le(zeros_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 4))))), or_(False, and_(False, True))))
ge(_if_then_else(and_(True, le(ones_diff_cols, _if_then_else(and_(and_(True, True), le(4, 2)), _if_then_else(or_(True, False), _if_then_else(False, 2, 2), _if_then_else(False, 4, ARG6)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, ARG7), _if_then_else(False, 2, 2))))), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, zeros_diff_cols), 3), _if_then_else(True, 4, ARG6)), _if_then_else(and_(True, True), _if_then_else(True, compare_blocks_rows, zeros_diff_rows), _if_then_else(True, ARG7, 1)))
VAL TREES:
add(zeros_diff_cols, add(mul(zeros_diff_rows, mul(mul(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols))), mul(zeros_diff_cols, zeros_diff_cols)))
add(add(ones_diff_rows, add(zeros_diff_cols, add(zeros_diff_cols, compare_blocks_cols))), mul(mul(mul(ones_diff_cols, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows))))
mul(mul(mul(mul(compare_blocks_rows, ones_diff_rows), add(add(zeros_diff_cols, add(ones_diff_rows, zeros_diff_cols)), add(ones_diff_rows, ones_diff_rows))), mul(mul(add(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_cols, ones_diff_cols)))), add(mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_rows))), mul(add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols)))))
add(mul(mul(add(ones_diff_rows, ones_diff_cols), compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)), mul(add(mul(mul(compare_blocks_cols, zeros_diff_rows), ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(add(ones_diff_rows, mul(mul(add(compare_blocks_cols, compare_blocks_rows), ones_diff_cols), ones_diff_cols)), add(compare_blocks_rows, compare_blocks_cols))))
add(mul(add(mul(mul(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, zeros_diff_cols)), mul(mul(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_cols))), mul(mul(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_rows, compare_blocks_rows)), add(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_cols)))), add(add(mul(mul(ones_diff_cols, ones_diff_rows), mul(ones_diff_rows, ones_diff_rows)), add(compare_blocks_cols, mul(ones_diff_rows, add(add(mul(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), add(compare_blocks_cols, ones_diff_cols))))), add(add(mul(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, zeros_diff_cols)), add(add(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_rows, ones_diff_rows)))))
mul(mul(mul(mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols)), mul(add(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_rows, ones_diff_rows))), mul(add(mul(compare_blocks_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(mul(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)))), mul(add(mul(mul(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_cols), mul(mul(mul(mul(ones_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, ones_diff_cols))), add(mul(mul(compare_blocks_cols, add(ones_diff_rows, compare_blocks_rows)), add(ones_diff_rows, compare_blocks_cols)), add(add(ones_diff_cols, mul(add(mul(compare_blocks_rows, add(add(zeros_diff_cols, zeros_diff_cols), zeros_diff_rows)), mul(mul(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows))), add(mul(add(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(mul(mul(add(mul(zeros_diff_cols, ones_diff_cols), compare_blocks_cols), add(add(zeros_diff_rows, zeros_diff_rows), zeros_diff_rows)), mul(mul(mul(compare_blocks_cols, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, compare_blocks_rows))), compare_blocks_cols), add(ones_diff_rows, ones_diff_cols))))), add(zeros_diff_rows, compare_blocks_cols)))))), add(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)))))
COND TREES:
ge(_if_then_else(le(_if_then_else(le(ones_diff_cols, 2), ones_diff_cols, _if_then_else(True, ones_diff_cols, 4)), _if_then_else(True, 0, _if_then_else(True, compare_blocks_rows, ARG6))), _if_then_else(ge(compare_blocks_cols, 2), _if_then_else(and_(False, False), ARG7, ARG6), 0), _if_then_else(False, _if_then_else(False, zeros_diff_cols, 1), zeros_diff_rows)), _if_then_else(ge(ARG7, 3), _if_then_else(False, compare_blocks_cols, _if_then_else(True, _if_then_else(True, ARG7, 3), 3)), _if_then_else(True, ARG6, ARG6)))
ge(_if_then_else(or_(or_(le(ones_diff_rows, 4), le(1, zeros_diff_rows)), le(_if_then_else(False, 0, ARG6), _if_then_else(True, ones_diff_rows, 4))), _if_then_else(and_(and_(True, False), or_(False, False)), _if_then_else(or_(False, True), _if_then_else(False, 3, ARG6), _if_then_else(True, ones_diff_cols, 2)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_cols, 1), _if_then_else(False, ARG6, compare_blocks_cols))), _if_then_else(and_(le(zeros_diff_cols, compare_blocks_rows), or_(False, True)), _if_then_else(le(ones_diff_rows, 3), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(True, ARG6, zeros_diff_rows)), _if_then_else(ge(compare_blocks_rows, 4), _if_then_else(True, 3, ARG6), _if_then_else(True, 4, 3)))), _if_then_else(le(_if_then_else(le(compare_blocks_rows, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 4, ARG7)), _if_then_else(and_(True, True), _if_then_else(False, 4, 0), _if_then_else(False, ones_diff_rows, 3))), _if_then_else(and_(le(ARG6, ARG6), ge(2, 2)), _if_then_else(and_(True, False), _if_then_else(False, ones_diff_cols, 1), _if_then_else(True, ones_diff_rows, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 0, compare_blocks_rows))), _if_then_else(or_(ge(4, 2), ge(zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, ARG6, 1), _if_then_else(False, 0, 3)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 4)))))
and_(ge(_if_then_else(le(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 0, ARG6), _if_then_else(False, ones_diff_cols, 2)), _if_then_else(le(3, 3), _if_then_else(False, 1, 4), _if_then_else(False, 0, ones_diff_cols))), ge(_if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, 4), _if_then_else(False, zeros_diff_rows, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(True, compare_blocks_rows, ones_diff_rows))))
or_(and_(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(False, 3, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(or_(True, True), _if_then_else(False, ARG6, 4), _if_then_else(True, 2, 3))), and_(ge(_if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, compare_blocks_rows)), le(_if_then_else(True, 1, 2), _if_then_else(True, ARG7, compare_blocks_rows)))), or_(or_(and_(or_(True, False), ge(4, zeros_diff_rows)), le(_if_then_else(True, 4, ARG7), _if_then_else(False, 0, 0))), or_(ge(_if_then_else(True, ones_diff_cols, 0), _if_then_else(True, 0, 0)), and_(or_(False, False), le(ones_diff_rows, 4)))))
and_(le(_if_then_else(ge(compare_blocks_cols, zeros_diff_cols), compare_blocks_cols, ones_diff_cols), _if_then_else(and_(False, False), 4, compare_blocks_cols)), ge(_if_then_else(and_(True, True), 1, zeros_diff_rows), _if_then_else(False, ARG6, _if_then_else(True, 0, compare_blocks_rows))))
VAL TREES:
mul(mul(add(compare_blocks_cols, ones_diff_cols), ones_diff_cols), add(add(zeros_diff_rows, zeros_diff_rows), add(mul(add(ones_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), compare_blocks_cols)))
mul(mul(zeros_diff_cols, mul(compare_blocks_cols, compare_blocks_cols)), add(add(ones_diff_rows, add(mul(ones_diff_cols, compare_blocks_rows), mul(zeros_diff_cols, mul(compare_blocks_cols, zeros_diff_rows)))), add(zeros_diff_rows, zeros_diff_rows)))
mul(zeros_diff_cols, add(add(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, add(ones_diff_rows, zeros_diff_rows)))))
mul(add(mul(zeros_diff_rows, mul(mul(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols))), add(compare_blocks_rows, add(ones_diff_cols, zeros_diff_rows))), add(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)))
add(add(mul(add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_rows, ones_diff_cols))), mul(mul(mul(ones_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), mul(ones_diff_rows, zeros_diff_rows))), add(add(mul(ones_diff_cols, ones_diff_rows), add(mul(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), add(mul(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows)), mul(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)))))
add(zeros_diff_cols, mul(mul(add(add(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))), mul(mul(compare_blocks_rows, add(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_rows)))))


INFO:root:hof: COND TREES:
or_(or_(and_(or_(True, True), le(2, ones_diff_cols)), and_(False, True)), le(_if_then_else(False, 3, 2), _if_then_else(and_(True, True), ones_diff_cols, ones_diff_cols)))
and_(ge(_if_then_else(False, ones_diff_cols, 4), _if_then_else(False, ones_diff_cols, ARG7)), le(_if_then_else(True, 3, zeros_diff_rows), _if_then_else(False, ARG7, 0)))
or_(and_(or_(True, False), or_(True, False)), le(_if_then_else(True, zeros_diff_cols, ones_diff_cols), _if_then_else(False, compare_blocks_cols, compare_blocks_cols)))
or_(le(_if_then_else(and_(False, False), _if_then_else(False, 3, 2), _if_then_else(True, 2, compare_blocks_cols)), _if_then_else(le(ones_diff_cols, ARG7), _if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(True, zeros_diff_rows, ARG6))), or_(le(_if_then_else(True, zeros_diff_cols, ones_diff_cols), _if_then_else(False, 4, 4)), and_(le(ARG6, ARG6), and_(False, True))))
ge(_if_then_else(ge(ARG7, _if_then_else(True, ARG6, _if_then_else(False, compare_blocks_rows, 0))), _if_then_else(True, _if_then_else(and_(True, False), 4, _if_then_else(True, compare_blocks_cols, 4)), _if_then_else(False, _if_then_else(True, ARG7, 4), _if_then_else(False, ARG7, compare_blocks_rows))), _if_then_else(or_(False, or_(False, False)), _if_then_else(True, 0, ones_diff_rows), ARG6)), _if_then_else(or_(False, False), _if_then_else(True, ARG7, 4), _if_then_else(le(zeros_diff_cols, ARG7), ones_diff_rows, ones_diff_cols)))
VAL TREES:
mul(mul(add(add(compare_blocks_rows, ones_diff_cols), mul(ones_diff_rows, zeros_diff_rows)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols))), mul(mul(mul(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_cols)), mul(mul(compare_blocks_rows, compare_blocks_cols), add(zeros_diff_rows, compare_blocks_rows))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), add(zeros_diff_cols, ones_diff_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_rows)))
mul(add(add(add(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows))), mul(mul(mul(ones_diff_cols, zeros_diff_cols), mul(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows))))
add(mul(mul(mul(mul(ones_diff_cols, zeros_diff_rows), add(ones_diff_cols, zeros_diff_cols)), mul(mul(ones_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows))), add(mul(mul(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)))), mul(mul(mul(add(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_cols, ones_diff_rows))), mul(mul(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_cols, ones_diff_rows), add(ones_diff_cols, zeros_diff_cols)))))
add(add(add(ones_diff_rows, add(zeros_diff_cols, zeros_diff_cols)), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_rows))), add(add(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows)))
add(add(mul(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_rows)), add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_cols)))


INFO:root:stats: {'fitness': <deap.tools.support.Statistics object at 0x00000185CA0B4C18>, 'size': <deap.tools.support.Statistics object at 0x00000185CA0B4C50>}

