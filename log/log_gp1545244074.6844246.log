INFO:root:

*******STARTING!!!******


INFO:root:

*******Configuration******


INFO:root:# NUM_ROWS = 20


INFO:root:NUM_ROWS = 5


INFO:root:# NUM_COLS = 20


INFO:root:NUM_COLS = 5


INFO:root:empty_in_split = '\xa0'


INFO:root:


INFO:root:pickle_unsolved_file_path = 'data/%dx%d_nonograms.pkl' % (NUM_ROWS, NUM_COLS)


INFO:root:pickle_solved_file_path = 'data/%dx%d_nonograms_solved.pkl' % (NUM_ROWS, NUM_COLS)


INFO:root:should_run_in_parallel = True


INFO:root:


INFO:root:NUM_COND_TREES = 5


INFO:root:NUM_VAL_TREES = NUM_COND_TREES + 1


INFO:root:prob_crossover_global = 0.6  # global probability for cx


INFO:root:prob_crossover_individual_cond = 0.8  # probability to cx a specific cond tree in an individual


INFO:root:prob_crossover_individual_val = 0.8  # probability to cx a specific cond tree in an individual


INFO:root:prob_mutate_global = 0.4


INFO:root:prob_mutate_individual_cond = 1


INFO:root:prob_mutate_individual_val = 1


INFO:root:


INFO:root:points_correct_box = 5


INFO:root:points_incorrect_box = 0


INFO:root:# points_incorrect_box = -2


INFO:root:pop_size = 100


INFO:root:hof_size = 1


INFO:root:# num_gen = 40


INFO:root:num_gen = 10


INFO:root:train_size = 3


INFO:root:

*******DONE!!!******


INFO:root:run time: 98 sec

INFO:root:max possible fitness for the nonograms ran: 75

INFO:root:log:    	      	            fitness            	              size              
   	      	-------------------------------	--------------------------------
gen	nevals	avg    	max	min    	std    	avg 	max	min	std     
0  	100   	45     	45 	45     	0      	7.43	9  	6  	0.570175
1  	82    	48.35  	60 	40     	5.1881 	7.68	9  	7  	0.676461
2  	77    	50.4333	60 	40     	6.12654	7.82	10 	6  	0.726361
3  	80    	51.3   	60 	40     	6.16252	8.03	10 	6  	0.888313
4  	72    	51.9667	60 	40     	5.99713	8.17	10 	6  	1.0301  
5  	69    	53.3167	60 	40     	6.42259	8.44	11 	6  	0.886792
6  	78    	53.9   	60 	40     	5.95455	8.67	10 	7  	0.837317
7  	82    	54.1   	60 	40     	5.66382	8.64	10 	7  	0.866256
8  	69    	55.15  	60 	40     	5.8314 	8.76	10 	7  	0.81388 
9  	76    	55.35  	60 	40     	5.70718	8.76	11 	7  	0.917824
10 	74    	55.4333	60 	41.6667	5.24203	8.82	11 	7  	0.876128

INFO:root:pop: COND TREES:
and_(le(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, ones_diff_cols, max_col_clue)), ge(max_row_clue, _if_then_else(ge(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, compare_blocks_cols))))
or_(or_(le(_if_then_else(or_(False, False), _if_then_else(False, ones_diff_rows, compare_blocks_rows), compare_blocks_rows), _if_then_else(ge(ones_diff_rows, 4), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(False, 4, ones_diff_rows))), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, ones_diff_rows, 2)))), or_(or_(ge(_if_then_else(True, 0, 3), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(le(0, zeros_diff_rows), ge(_if_then_else(True, 1, max_col_clue), max_col_clue)))))
ge(compare_blocks_cols, _if_then_else(and_(False, True), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 0, 4)))
ge(0, zeros_diff_rows)
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, max_row_clue, 3), 0), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(le(_if_then_else(False, 1, zeros_diff_rows), 4), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_rows))), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(add(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_cols))))
COND TREES:
and_(le(_if_then_else(le(_if_then_else(False, zeros_diff_cols, max_col_clue), _if_then_else(True, _if_then_else(and_(False, False), _if_then_else(False, max_row_clue, compare_blocks_cols), _if_then_else(True, 0, zeros_diff_rows)), ones_diff_rows)), compare_blocks_cols, _if_then_else(True, max_col_clue, ones_diff_rows)), max_row_clue), le(_if_then_else(False, zeros_diff_cols, max_col_clue), _if_then_else(False, 1, ones_diff_rows)))
or_(or_(le(_if_then_else(or_(False, False), _if_then_else(False, ones_diff_rows, compare_blocks_rows), _if_then_else(True, ones_diff_rows, max_row_clue)), _if_then_else(ge(ones_diff_rows, 4), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(False, 4, ones_diff_rows))), or_(False, le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2)))), or_(or_(ge(_if_then_else(True, _if_then_else(or_(True, True), _if_then_else(False, ones_diff_rows, 3), _if_then_else(True, 1, max_col_clue)), 3), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, _if_then_else(False, 3, zeros_diff_cols), zeros_diff_rows)), and_(le(ones_diff_cols, _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, 1, 2))), ge(max_col_clue, max_col_clue)))))
or_(False, True)
or_(ge(_if_then_else(True, 2, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), ge(_if_then_else(True, 0, zeros_diff_cols), _if_then_else(True, ones_diff_rows, _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(False, compare_blocks_rows, compare_blocks_cols)))))
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, _if_then_else(and_(True, True), _if_then_else(False, 3, ones_diff_rows), _if_then_else(False, max_row_clue, max_col_clue)), 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(True, _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, max_row_clue, 3), _if_then_else(True, _if_then_else(or_(False, False), _if_then_else(False, max_col_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, max_col_clue)), compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(False, ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(_if_then_else(True, 1, zeros_diff_cols), zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, ones_diff_rows)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(compare_blocks_rows, ones_diff_rows))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, zeros_diff_cols))))
mul(mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(add(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, ones_diff_cols)))))
COND TREES:
le(_if_then_else(True, _if_then_else(False, ones_diff_cols, max_col_clue), compare_blocks_cols), _if_then_else(and_(True, False), _if_then_else(True, 1, max_row_clue), _if_then_else(False, 2, compare_blocks_cols)))
le(_if_then_else(or_(or_(ge(compare_blocks_cols, compare_blocks_cols), or_(False, True)), le(_if_then_else(True, 4, 0), _if_then_else(True, 3, compare_blocks_rows))), _if_then_else(or_(ge(4, 1), ge(3, 2)), _if_then_else(ge(max_col_clue, zeros_diff_cols), _if_then_else(and_(and_(False, True), False), _if_then_else(False, 4, ones_diff_rows), _if_then_else(False, _if_then_else(True, compare_blocks_rows, zeros_diff_rows), max_col_clue)), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(ge(zeros_diff_cols, ones_diff_cols), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(True, max_row_clue, max_row_clue))), _if_then_else(le(_if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, compare_blocks_cols, 3)), _if_then_else(ge(max_row_clue, 1), _if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, ones_diff_cols, _if_then_else(True, ones_diff_cols, compare_blocks_cols))), _if_then_else(or_(True, True), _if_then_else(False, 1, 3), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)))), _if_then_else(le(_if_then_else(and_(True, True), _if_then_else(True, 1, max_col_clue), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(max_row_clue, 2), _if_then_else(False, 1, 0), _if_then_else(False, 2, zeros_diff_rows))), _if_then_else(ge(_if_then_else(True, ones_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, ones_diff_rows)), _if_then_else(ge(zeros_diff_cols, 3), _if_then_else(False, max_col_clue, 4), _if_then_else(True, 2, 4)), _if_then_else(ge(max_col_clue, 4), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 2, zeros_diff_rows))), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, 0), _if_then_else(False, 3, 2)), _if_then_else(True, _if_then_else(True, 3, ones_diff_rows), _if_then_else(False, 0, 3)), _if_then_else(le(2, ones_diff_rows), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_rows)))))
le(_if_then_else(ge(max_row_clue, ones_diff_rows), _if_then_else(False, zeros_diff_cols, 0), _if_then_else(False, max_col_clue, ones_diff_rows)), _if_then_else(le(max_col_clue, zeros_diff_cols), _if_then_else(ge(_if_then_else(le(compare_blocks_rows, _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(False, _if_then_else(True, max_row_clue, zeros_diff_rows), zeros_diff_cols), ones_diff_cols), _if_then_else(and_(False, True), _if_then_else(False, max_col_clue, 4), _if_then_else(False, max_col_clue, compare_blocks_cols))), _if_then_else(or_(and_(True, True), le(0, 2)), _if_then_else(and_(False, False), _if_then_else(False, 3, compare_blocks_rows), _if_then_else(le(ones_diff_rows, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(False, compare_blocks_rows, 1))), _if_then_else(le(compare_blocks_cols, 3), _if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(True, ones_diff_rows, 4))), _if_then_else(le(_if_then_else(False, 2, ones_diff_cols), _if_then_else(False, max_col_clue, 0)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_cols, zeros_diff_cols), _if_then_else(False, ones_diff_cols, 3)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(True, max_col_clue, max_row_clue)))), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)))
ge(_if_then_else(ge(compare_blocks_cols, 4), _if_then_else(False, 0, _if_then_else(True, 4, max_row_clue)), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(and_(True, ge(0, max_row_clue)), _if_then_else(True, 4, _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), _if_then_else(and_(True, False), compare_blocks_cols, _if_then_else(False, zeros_diff_rows, max_col_clue))))
or_(or_(le(ones_diff_rows, 4), or_(le(compare_blocks_rows, _if_then_else(and_(True, False), _if_then_else(True, max_col_clue, 0), max_row_clue)), and_(le(max_col_clue, zeros_diff_cols), False))), or_(and_(False, le(_if_then_else(True, 3, zeros_diff_cols), 2)), ge(compare_blocks_cols, max_row_clue)))
VAL TREES:
mul(mul(mul(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, compare_blocks_cols)), add(add(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_rows)))
add(mul(add(mul(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_cols))), add(add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)))), add(mul(add(mul(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), add(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols))), mul(mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)))))
add(mul(add(add(zeros_diff_cols, mul(compare_blocks_rows, zeros_diff_cols)), compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(mul(compare_blocks_cols, compare_blocks_rows), compare_blocks_rows)))
add(mul(add(mul(add(compare_blocks_rows, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols))), mul(mul(add(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(mul(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, compare_blocks_rows)))), mul(add(add(mul(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows))), mul(add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_rows)), add(add(zeros_diff_cols, compare_blocks_rows), add(ones_diff_cols, compare_blocks_cols)))))
mul(add(add(mul(add(compare_blocks_cols, ones_diff_rows), compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_rows, add(add(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, ones_diff_cols)))), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, ones_diff_rows)))
add(add(add(ones_diff_rows, mul(compare_blocks_rows, add(compare_blocks_cols, ones_diff_cols))), add(compare_blocks_rows, ones_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_cols)))
COND TREES:
le(_if_then_else(ge(2, 2), _if_then_else(False, 3, 1), _if_then_else(le(compare_blocks_rows, _if_then_else(ge(compare_blocks_rows, max_row_clue), _if_then_else(ge(max_row_clue, 3), max_col_clue, 3), _if_then_else(False, 2, 0))), _if_then_else(ge(_if_then_else(le(4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(True, 3, max_row_clue)), 4), _if_then_else(False, ones_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(False, max_col_clue, 0))), _if_then_else(False, _if_then_else(False, ones_diff_cols, ones_diff_cols), _if_then_else(False, compare_blocks_cols, 1)))
le(_if_then_else(ge(_if_then_else(ge(2, 3), _if_then_else(le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2)), ones_diff_cols, compare_blocks_rows), _if_then_else(False, 2, compare_blocks_rows)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(False, 0, zeros_diff_rows))), _if_then_else(or_(or_(False, False), le(0, max_col_clue)), _if_then_else(le(ones_diff_cols, ones_diff_cols), _if_then_else(True, ones_diff_cols, 0), _if_then_else(False, 1, 2)), _if_then_else(or_(True, True), _if_then_else(False, 4, 0), _if_then_else(True, 0, max_col_clue))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, 0), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, max_col_clue)), _if_then_else(True, 2, compare_blocks_cols))), _if_then_else(ge(_if_then_else(False, _if_then_else(True, 1, compare_blocks_cols), _if_then_else(False, 2, 2)), _if_then_else(le(1, max_col_clue), _if_then_else(True, compare_blocks_cols, compare_blocks_cols), _if_then_else(True, compare_blocks_cols, zeros_diff_rows))), _if_then_else(le(_if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, _if_then_else(False, compare_blocks_rows, 3))), _if_then_else(ge(3, 3), _if_then_else(True, 1, max_col_clue), _if_then_else(False, 2, compare_blocks_cols)), _if_then_else(le(max_row_clue, 2), _if_then_else(ge(2, _if_then_else(False, 3, _if_then_else(False, compare_blocks_rows, 0))), compare_blocks_cols, 4), _if_then_else(True, 2, 3))), _if_then_else(le(_if_then_else(True, 3, zeros_diff_cols), _if_then_else(False, max_col_clue, max_col_clue)), _if_then_else(le(max_row_clue, 1), _if_then_else(False, 3, 4), _if_then_else(False, 3, max_col_clue)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(True, ones_diff_cols, ones_diff_rows)))))
or_(and_(or_(True, True), ge(_if_then_else(True, ones_diff_rows, zeros_diff_rows), zeros_diff_cols)), False)
and_(ge(1, ones_diff_rows), or_(False, ge(_if_then_else(True, 2, 1), _if_then_else(True, ones_diff_rows, 2))))
ge(compare_blocks_rows, _if_then_else(or_(True, False), _if_then_else(False, 0, 1), _if_then_else(or_(False, True), max_col_clue, ones_diff_cols)))
VAL TREES:
mul(mul(mul(compare_blocks_cols, add(zeros_diff_cols, mul(ones_diff_cols, ones_diff_rows))), mul(zeros_diff_rows, ones_diff_rows)), ones_diff_cols)
add(add(add(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), add(add(add(mul(compare_blocks_cols, compare_blocks_cols), add(add(compare_blocks_cols, zeros_diff_cols), zeros_diff_cols)), compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)))
add(mul(add(ones_diff_rows, ones_diff_rows), add(mul(compare_blocks_cols, compare_blocks_cols), ones_diff_cols)), mul(mul(add(ones_diff_cols, ones_diff_cols), compare_blocks_cols), add(zeros_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(add(add(mul(add(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_cols, zeros_diff_rows))), add(add(add(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols)))), add(add(add(add(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows))), mul(add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_rows)))))
mul(add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, add(ones_diff_cols, compare_blocks_cols))), add(add(compare_blocks_cols, compare_blocks_rows), mul(add(compare_blocks_rows, ones_diff_cols), ones_diff_rows)))
mul(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows)))
COND TREES:
and_(le(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, ones_diff_cols, max_col_clue)), ge(max_row_clue, _if_then_else(True, _if_then_else(True, ones_diff_rows, zeros_diff_cols), compare_blocks_cols)))
or_(or_(le(ones_diff_cols, _if_then_else(ge(ones_diff_rows, 4), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(False, 4, ones_diff_rows))), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2)))), or_(or_(ge(_if_then_else(True, 0, 3), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(le(0, zeros_diff_rows), ge(_if_then_else(True, 1, max_col_clue), max_col_clue)))))
ge(compare_blocks_cols, _if_then_else(and_(False, or_(True, False)), _if_then_else(False, 0, _if_then_else(False, compare_blocks_cols, ones_diff_cols)), _if_then_else(False, max_row_clue, ones_diff_cols)))
or_(or_(True, and_(False, True)), ge(_if_then_else(False, 0, ones_diff_rows), _if_then_else(True, ones_diff_rows, 2)))
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols))), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(le(_if_then_else(False, 1, zeros_diff_rows), 4), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_rows))), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(add(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_cols))))
COND TREES:
and_(ge(2, _if_then_else(and_(True, True), _if_then_else(False, 3, 1), _if_then_else(False, zeros_diff_cols, 1))), ge(2, _if_then_else(True, max_col_clue, max_row_clue)))
or_(or_(and_(False, False), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(le(compare_blocks_rows, 4), ones_diff_rows, 2)))), or_(or_(ge(_if_then_else(True, 0, 3), 1), ge(zeros_diff_cols, 3)), and_(le(_if_then_else(True, compare_blocks_cols, 4), _if_then_else(False, 1, ones_diff_rows)), and_(or_(le(zeros_diff_rows, 0), ge(_if_then_else(True, 0, 3), _if_then_else(False, compare_blocks_rows, zeros_diff_cols))), ge(max_col_clue, max_col_clue)))))
ge(compare_blocks_cols, _if_then_else(le(compare_blocks_cols, _if_then_else(False, compare_blocks_rows, _if_then_else(or_(True, True), _if_then_else(False, 4, 1), _if_then_else(False, 0, 2)))), _if_then_else(False, 1, 4), _if_then_else(ge(_if_then_else(False, 1, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, max_row_clue)), compare_blocks_cols, ones_diff_cols)))
or_(True, True)
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(True, _if_then_else(and_(False, True), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(and_(or_(True, False), and_(False, False)), zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(ge(_if_then_else(False, 1, max_col_clue), _if_then_else(le(0, zeros_diff_cols), compare_blocks_cols, zeros_diff_cols)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_rows))), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(add(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_cols))))
COND TREES:
and_(le(_if_then_else(True, _if_then_else(True, 1, ones_diff_rows), 0), _if_then_else(and_(and_(False, True), ge(1, 1)), ones_diff_cols, max_col_clue)), ge(ones_diff_rows, 4))
or_(or_(True, or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(or_(and_(True, True), ge(4, compare_blocks_cols)), ones_diff_rows, 2)))), or_(or_(ge(_if_then_else(True, 0, 3), _if_then_else(le(max_row_clue, 1), _if_then_else(False, 3, 4), _if_then_else(False, 3, max_col_clue))), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(le(_if_then_else(True, 2, zeros_diff_rows), zeros_diff_rows), False))))
or_(True, False)
or_(or_(True, and_(False, True)), ge(_if_then_else(True, 0, zeros_diff_cols), _if_then_else(True, ones_diff_rows, 2)))
ge(_if_then_else(and_(and_(False, or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, _if_then_else(False, 3, 2)), _if_then_else(False, _if_then_else(or_(and_(True, False), True), _if_then_else(True, max_col_clue, 1), _if_then_else(True, zeros_diff_rows, max_row_clue)), 3), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(ge(compare_blocks_cols, max_row_clue), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(add(ones_diff_rows, compare_blocks_rows), add(compare_blocks_cols, mul(zeros_diff_rows, ones_diff_cols))))
add(mul(compare_blocks_cols, ones_diff_cols), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, add(compare_blocks_rows, ones_diff_cols))))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(compare_blocks_cols, mul(compare_blocks_rows, mul(zeros_diff_cols, zeros_diff_rows)))))
zeros_diff_rows
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(mul(mul(zeros_diff_cols, ones_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(compare_blocks_cols, ones_diff_cols))))
add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, zeros_diff_cols))
COND TREES:
and_(ge(_if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(ge(_if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(True, max_col_clue, max_row_clue)), compare_blocks_cols, 0)), le(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, ones_diff_cols, max_col_clue)))
or_(or_(and_(False, False), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, 4, ones_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, max_col_clue, 2)))), or_(or_(ge(_if_then_else(True, 0, 3), 1), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(or_(le(zeros_diff_rows, 0), and_(False, False)), ge(max_col_clue, max_col_clue)))))
ge(compare_blocks_cols, _if_then_else(le(_if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(False, compare_blocks_rows, max_col_clue)), _if_then_else(and_(False, True), _if_then_else(False, 1, _if_then_else(and_(True, True), _if_then_else(True, 3, 3), _if_then_else(False, 0, 1))), _if_then_else(False, compare_blocks_cols, ones_diff_cols)), _if_then_else(False, compare_blocks_cols, ones_diff_cols)))
False
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(True, _if_then_else(and_(False, True), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), zeros_diff_rows), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, _if_then_else(False, compare_blocks_rows, 4), zeros_diff_cols)))), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_cols)), add(add(ones_diff_rows, ones_diff_cols), add(add(mul(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(zeros_diff_rows, ones_diff_cols))))
add(add(add(compare_blocks_cols, add(add(ones_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows))), add(add(ones_diff_cols, mul(zeros_diff_rows, ones_diff_rows)), mul(ones_diff_cols, zeros_diff_rows))), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_cols))))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_cols)), zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(add(ones_diff_rows, ones_diff_cols), mul(zeros_diff_cols, mul(add(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, ones_diff_cols)))))
mul(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(zeros_diff_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols)), add(ones_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(mul(mul(mul(compare_blocks_cols, mul(zeros_diff_cols, ones_diff_cols)), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(ones_diff_cols, add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_cols))))
COND TREES:
and_(le(_if_then_else(and_(True, False), _if_then_else(True, ones_diff_cols, ones_diff_cols), 0), _if_then_else(True, compare_blocks_cols, 0)), le(_if_then_else(False, zeros_diff_cols, max_col_clue), _if_then_else(True, 1, ones_diff_rows)))
or_(and_(True, True), or_(or_(ge(_if_then_else(True, 0, 3), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), ge(_if_then_else(False, _if_then_else(False, ones_diff_rows, compare_blocks_rows), 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, _if_then_else(True, 2, zeros_diff_rows), zeros_diff_rows)), and_(le(_if_then_else(and_(True, False), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_rows, 3), _if_then_else(False, 1, max_row_clue)), _if_then_else(False, compare_blocks_rows, 4)), zeros_diff_rows), ge(max_col_clue, max_col_clue)))))
ge(compare_blocks_cols, _if_then_else(le(max_row_clue, _if_then_else(False, compare_blocks_rows, max_col_clue)), _if_then_else(le(0, compare_blocks_rows), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, compare_blocks_cols, ones_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, 2, ones_diff_cols), _if_then_else(True, 4, max_col_clue))))
or_(or_(ge(_if_then_else(False, 4, ones_diff_rows), ones_diff_cols), and_(False, True)), ge(_if_then_else(ge(compare_blocks_cols, 0), _if_then_else(True, 0, zeros_diff_cols), _if_then_else(True, zeros_diff_rows, 4)), _if_then_else(False, 4, compare_blocks_cols)))
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, _if_then_else(ge(4, 3), _if_then_else(False, compare_blocks_rows, 2), _if_then_else(False, ones_diff_rows, ones_diff_cols)), zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(ge(_if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, ones_diff_rows))), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), compare_blocks_cols), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(ones_diff_rows, 4), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(add(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_cols, ones_diff_cols))))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_rows))), add(add(zeros_diff_rows, zeros_diff_cols), add(add(mul(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_rows, zeros_diff_cols)), ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), add(add(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, compare_blocks_cols))), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, mul(add(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)))))
mul(mul(mul(mul(compare_blocks_cols, add(add(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows))), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(add(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_cols))))
COND TREES:
ge(_if_then_else(ge(max_row_clue, 3), _if_then_else(True, compare_blocks_cols, compare_blocks_cols), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, zeros_diff_rows), _if_then_else(False, _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, 1, 3)), _if_then_else(le(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, ones_diff_cols, max_col_clue)), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, max_row_clue))))
ge(_if_then_else(ge(zeros_diff_rows, ones_diff_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 1, ones_diff_cols)), _if_then_else(le(0, ones_diff_cols), _if_then_else(True, max_row_clue, ones_diff_rows), _if_then_else(False, zeros_diff_cols, 3)))
ge(_if_then_else(and_(False, le(ones_diff_cols, zeros_diff_cols)), _if_then_else(le(max_row_clue, _if_then_else(False, compare_blocks_rows, max_col_clue)), _if_then_else(True, max_row_clue, zeros_diff_rows), ones_diff_cols), _if_then_else(ge(2, 3), ones_diff_cols, _if_then_else(False, max_row_clue, 3))), _if_then_else(le(compare_blocks_rows, _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(False, _if_then_else(or_(or_(False, False), or_(True, True)), max_row_clue, zeros_diff_rows), zeros_diff_cols), ones_diff_cols))
or_(ge(_if_then_else(False, 4, ones_diff_rows), _if_then_else(True, 2, 2)), or_(le(_if_then_else(True, 3, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)), and_(or_(True, True), le(0, compare_blocks_cols))))
ge(_if_then_else(le(0, 0), _if_then_else(True, compare_blocks_rows, 3), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(False, compare_blocks_rows, _if_then_else(ge(max_row_clue, max_col_clue), _if_then_else(True, ones_diff_rows, 0), _if_then_else(False, 0, ones_diff_rows))))
VAL TREES:
mul(add(add(zeros_diff_cols, ones_diff_rows), mul(add(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols))), add(add(mul(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))))
mul(add(mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), add(add(ones_diff_cols, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_rows))), add(add(mul(compare_blocks_cols, mul(zeros_diff_rows, ones_diff_rows)), add(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, zeros_diff_cols))))
mul(mul(mul(mul(compare_blocks_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows)), add(add(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols))), add(add(mul(compare_blocks_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)), add(mul(mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)), zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols))))
mul(mul(mul(ones_diff_cols, mul(zeros_diff_cols, zeros_diff_cols)), add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols))), add(mul(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, mul(ones_diff_rows, zeros_diff_cols))))
mul(add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(add(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)), ones_diff_rows)), add(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(add(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_cols))))
mul(add(mul(ones_diff_cols, ones_diff_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_cols, add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_cols)))))
COND TREES:
and_(False, le(_if_then_else(False, zeros_diff_cols, max_col_clue), _if_then_else(True, 1, ones_diff_rows)))
or_(or_(and_(False, False), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2)))), or_(or_(ge(_if_then_else(True, 0, 3), 1), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(or_(le(zeros_diff_rows, 0), or_(True, True)), ge(max_col_clue, max_col_clue)))))
ge(compare_blocks_cols, _if_then_else(le(max_row_clue, _if_then_else(False, compare_blocks_rows, max_col_clue)), _if_then_else(False, 1, 4), _if_then_else(False, compare_blocks_cols, ones_diff_cols)))
True
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(True, _if_then_else(and_(False, True), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(True, _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), zeros_diff_cols))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_rows))), add(add(zeros_diff_rows, zeros_diff_cols), add(add(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, ones_diff_rows)), ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, ones_diff_cols)), ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(mul(compare_blocks_rows, zeros_diff_rows), mul(add(ones_diff_rows, ones_diff_rows), ones_diff_rows))), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(mul(mul(mul(add(compare_blocks_rows, ones_diff_cols), zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(add(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_cols))))
COND TREES:
ge(_if_then_else(or_(True, False), _if_then_else(True, compare_blocks_cols, compare_blocks_cols), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(_if_then_else(False, _if_then_else(False, ones_diff_cols, compare_blocks_cols), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, _if_then_else(True, zeros_diff_rows, max_col_clue), max_row_clue))), zeros_diff_rows), _if_then_else(False, _if_then_else(True, zeros_diff_cols, compare_blocks_rows), 4), _if_then_else(and_(False, False), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, max_row_clue))))
ge(compare_blocks_rows, _if_then_else(le(3, max_row_clue), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 3), 4), _if_then_else(True, zeros_diff_cols, 4)))
ge(_if_then_else(and_(False, le(ones_diff_cols, zeros_diff_cols)), _if_then_else(or_(and_(True, True), le(0, 2)), _if_then_else(False, compare_blocks_rows, _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(True, max_row_clue, 2))), ones_diff_cols), 0), _if_then_else(le(2, _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(False, _if_then_else(False, 2, compare_blocks_rows), zeros_diff_cols), ones_diff_cols))
or_(ge(zeros_diff_cols, _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(True, 4, 1))), or_(le(_if_then_else(and_(True, False), _if_then_else(False, ones_diff_rows, ones_diff_cols), max_row_clue), _if_then_else(False, 2, zeros_diff_cols)), and_(ge(zeros_diff_rows, 3), le(0, compare_blocks_cols))))
ge(_if_then_else(False, zeros_diff_cols, zeros_diff_rows), compare_blocks_rows)
VAL TREES:
mul(add(add(zeros_diff_cols, ones_diff_rows), mul(add(zeros_diff_rows, ones_diff_rows), zeros_diff_rows)), add(add(mul(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))))
mul(add(mul(mul(ones_diff_cols, compare_blocks_cols), ones_diff_cols), add(add(ones_diff_cols, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_rows))), add(add(mul(compare_blocks_cols, mul(zeros_diff_rows, ones_diff_rows)), add(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, zeros_diff_cols))))
mul(mul(mul(mul(compare_blocks_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows)), add(add(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols))), add(add(mul(compare_blocks_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)), add(mul(mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)), zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_rows))))
mul(mul(mul(ones_diff_cols, mul(zeros_diff_cols, zeros_diff_cols)), add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols))), add(mul(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, mul(ones_diff_rows, zeros_diff_cols))))
mul(add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(add(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)), ones_diff_rows)), add(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(add(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, zeros_diff_rows), mul(compare_blocks_cols, mul(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))))))
mul(add(mul(mul(ones_diff_cols, compare_blocks_rows), ones_diff_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_cols, add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_cols)))))
COND TREES:
and_(le(_if_then_else(and_(False, False), _if_then_else(True, ones_diff_cols, compare_blocks_cols), _if_then_else(False, 4, 0)), _if_then_else(and_(and_(False, True), ge(1, 1)), max_col_clue, max_col_clue)), ge(2, 2))
or_(or_(le(_if_then_else(or_(False, False), _if_then_else(ge(max_row_clue, zeros_diff_rows), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(True, ones_diff_rows, max_row_clue)), _if_then_else(ge(ones_diff_rows, 4), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(False, 4, ones_diff_rows))), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(or_(and_(True, True), ge(4, compare_blocks_cols)), ones_diff_rows, 2)))), or_(or_(ge(_if_then_else(True, 0, 3), _if_then_else(False, 3, 4)), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(le(ones_diff_cols, zeros_diff_rows), False))))
or_(True, ge(3, zeros_diff_cols))
or_(or_(ge(_if_then_else(False, 0, _if_then_else(True, zeros_diff_rows, 0)), ones_diff_rows), and_(False, True)), ge(_if_then_else(True, 0, _if_then_else(and_(True, True), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, 3, compare_blocks_rows))), _if_then_else(True, ones_diff_rows, 2)))
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, _if_then_else(False, 3, 2)), _if_then_else(False, _if_then_else(or_(and_(True, False), True), _if_then_else(True, max_col_clue, 1), _if_then_else(True, zeros_diff_rows, max_row_clue)), 3), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), 0, _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, False)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(add(ones_diff_rows, ones_diff_cols), add(compare_blocks_cols, mul(zeros_diff_rows, ones_diff_cols))))
add(mul(compare_blocks_cols, ones_diff_cols), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, add(compare_blocks_rows, ones_diff_cols))))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(compare_blocks_cols, mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
ones_diff_cols
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(zeros_diff_cols, compare_blocks_rows)
COND TREES:
or_(and_(and_(or_(le(zeros_diff_cols, zeros_diff_cols), and_(True, True)), True), le(_if_then_else(le(1, zeros_diff_cols), _if_then_else(False, 0, 1), _if_then_else(True, ones_diff_cols, 3)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_rows, ones_diff_cols)))), True)
ge(_if_then_else(or_(or_(False, True), and_(and_(False, False), le(ones_diff_cols, ones_diff_cols))), _if_then_else(False, 4, 3), _if_then_else(True, 4, 2)), _if_then_else(ge(zeros_diff_cols, ones_diff_cols), _if_then_else(False, _if_then_else(False, 3, zeros_diff_rows), zeros_diff_cols), _if_then_else(False, _if_then_else(False, 3, 0), compare_blocks_rows)))
or_(le(max_row_clue, _if_then_else(and_(False, False), _if_then_else(True, 4, 3), _if_then_else(True, compare_blocks_cols, ones_diff_cols))), or_(ge(compare_blocks_rows, 2), le(_if_then_else(False, max_row_clue, 1), _if_then_else(False, 3, 3))))
le(_if_then_else(or_(True, True), _if_then_else(True, max_row_clue, _if_then_else(False, 2, compare_blocks_cols)), _if_then_else(or_(False, ge(zeros_diff_cols, compare_blocks_cols)), 0, _if_then_else(False, max_row_clue, _if_then_else(False, zeros_diff_rows, compare_blocks_rows)))), _if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, ones_diff_rows, compare_blocks_cols)), _if_then_else(True, _if_then_else(False, max_row_clue, compare_blocks_cols), _if_then_else(True, 4, compare_blocks_cols))), _if_then_else(False, _if_then_else(True, max_col_clue, _if_then_else(False, 2, compare_blocks_rows)), 3), _if_then_else(False, _if_then_else(and_(False, False), _if_then_else(False, 1, ones_diff_cols), 1), _if_then_else(True, _if_then_else(False, max_row_clue, 4), max_row_clue))))
and_(and_(True, or_(False, or_(ge(max_row_clue, 1), ge(3, max_col_clue)))), le(compare_blocks_cols, zeros_diff_rows))
VAL TREES:
add(add(ones_diff_rows, add(compare_blocks_cols, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)))
mul(mul(add(ones_diff_rows, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_cols)), ones_diff_rows)
add(ones_diff_rows, add(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_rows)))
add(mul(mul(zeros_diff_rows, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), add(mul(mul(ones_diff_rows, mul(add(ones_diff_rows, compare_blocks_cols), compare_blocks_rows)), ones_diff_cols), add(ones_diff_cols, mul(zeros_diff_rows, zeros_diff_cols))))
add(add(mul(zeros_diff_rows, zeros_diff_rows), mul(mul(compare_blocks_cols, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_cols))), add(mul(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows)))
add(add(mul(ones_diff_cols, zeros_diff_rows), add(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))), mul(add(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols))))
COND TREES:
and_(ge(2, _if_then_else(True, _if_then_else(ge(4, ones_diff_cols), _if_then_else(True, max_row_clue, 2), _if_then_else(False, ones_diff_cols, zeros_diff_rows)), 0)), and_(False, False))
or_(or_(and_(False, False), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2)))), or_(or_(ge(_if_then_else(True, 0, 3), 1), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(True, compare_blocks_cols, 4), _if_then_else(False, 1, ones_diff_rows)), and_(or_(le(zeros_diff_rows, 0), ge(_if_then_else(True, 0, 3), _if_then_else(False, compare_blocks_rows, zeros_diff_cols))), ge(max_col_clue, _if_then_else(and_(True, True), _if_then_else(True, ones_diff_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, max_col_clue)))))))
ge(compare_blocks_cols, ones_diff_rows)
or_(and_(False, True), ge(1, zeros_diff_cols))
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(True, _if_then_else(and_(False, True), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(True, zeros_diff_cols, zeros_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_rows))), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(add(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_cols))))
COND TREES:
and_(and_(False, False), ge(_if_then_else(and_(le(compare_blocks_cols, 1), le(ones_diff_rows, 1)), ones_diff_rows, _if_then_else(le(0, max_row_clue), _if_then_else(False, max_col_clue, 4), _if_then_else(False, 4, ones_diff_rows))), _if_then_else(True, max_col_clue, max_row_clue)))
or_(or_(and_(True, False), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, _if_then_else(True, 3, max_row_clue), 2)))), or_(or_(ge(_if_then_else(True, 0, 3), 1), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(True, compare_blocks_cols, 4), _if_then_else(False, 1, ones_diff_rows)), and_(or_(le(zeros_diff_rows, 0), ge(_if_then_else(True, 0, 3), _if_then_else(False, compare_blocks_rows, zeros_diff_cols))), ge(max_col_clue, max_col_clue)))))
ge(compare_blocks_cols, _if_then_else(le(max_row_clue, _if_then_else(False, compare_blocks_rows, _if_then_else(or_(ge(ones_diff_rows, 0), False), _if_then_else(False, 4, 1), _if_then_else(False, 0, _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(False, zeros_diff_rows, max_col_clue)))))), _if_then_else(False, 1, 4), ones_diff_cols))
ge(_if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 4))
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, _if_then_else(True, 4, 4), 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(True, _if_then_else(and_(False, True), _if_then_else(le(1, ones_diff_rows), _if_then_else(False, compare_blocks_cols, 2), _if_then_else(True, 2, 1)), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(le(0, zeros_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_rows))), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(add(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_cols))))
COND TREES:
and_(le(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, ones_diff_cols, max_col_clue)), le(_if_then_else(True, zeros_diff_cols, max_col_clue), _if_then_else(ge(ones_diff_cols, ones_diff_cols), max_col_clue, _if_then_else(True, 1, zeros_diff_rows))))
or_(or_(le(_if_then_else(or_(False, False), _if_then_else(False, ones_diff_rows, compare_blocks_rows), _if_then_else(True, ones_diff_rows, max_row_clue)), _if_then_else(ge(ones_diff_rows, 4), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(False, 4, ones_diff_rows))), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2)))), or_(or_(ge(_if_then_else(True, 0, 3), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), True))
ge(compare_blocks_cols, _if_then_else(and_(le(zeros_diff_cols, zeros_diff_rows), or_(True, False)), compare_blocks_rows, _if_then_else(ge(_if_then_else(True, 0, compare_blocks_rows), _if_then_else(True, 2, ones_diff_cols)), compare_blocks_cols, ones_diff_cols)))
or_(or_(ge(max_row_clue, ones_diff_cols), and_(False, True)), False)
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(True, _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(ge(zeros_diff_cols, _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, max_row_clue, 3), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), True), _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(compare_blocks_rows, ones_diff_rows))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, zeros_diff_cols))))
mul(mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(add(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, ones_diff_cols)))))
COND TREES:
le(_if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(and_(True, False), _if_then_else(le(zeros_diff_cols, max_row_clue), 1, max_row_clue), _if_then_else(False, 2, _if_then_else(ge(ones_diff_rows, _if_then_else(True, 2, 4)), _if_then_else(True, 3, 0), _if_then_else(False, ones_diff_cols, zeros_diff_rows)))))
le(_if_then_else(or_(or_(ge(compare_blocks_cols, compare_blocks_cols), or_(False, True)), le(_if_then_else(True, 4, 0), _if_then_else(True, 3, compare_blocks_rows))), _if_then_else(or_(ge(4, 1), ge(3, 2)), _if_then_else(ge(max_col_clue, zeros_diff_cols), _if_then_else(and_(and_(False, True), False), _if_then_else(False, 4, _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(False, _if_then_else(False, ones_diff_rows, ones_diff_rows), max_col_clue)), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(ge(zeros_diff_cols, ones_diff_cols), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(True, max_row_clue, max_row_clue))), _if_then_else(le(_if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, compare_blocks_cols, 3)), _if_then_else(ge(max_row_clue, 1), _if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, ones_diff_cols, 0)), _if_then_else(or_(True, True), _if_then_else(False, 1, 3), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)))), _if_then_else(le(_if_then_else(and_(True, True), _if_then_else(True, 1, max_col_clue), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(max_row_clue, 2), _if_then_else(False, 1, 0), _if_then_else(or_(True, True), _if_then_else(False, 1, 3), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)))), _if_then_else(ge(_if_then_else(True, ones_diff_rows, _if_then_else(and_(True, True), _if_then_else(True, max_col_clue, ones_diff_cols), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(True, ones_diff_cols, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(False, max_col_clue, 4), _if_then_else(True, 2, 4)), _if_then_else(ge(max_col_clue, 4), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 2, zeros_diff_rows))), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, 0), _if_then_else(or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(ge(zeros_diff_cols, ones_diff_cols), _if_then_else(le(_if_then_else(False, 0, max_col_clue), _if_then_else(False, 4, 2)), _if_then_else(False, 3, zeros_diff_rows), zeros_diff_cols), ones_diff_cols)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2))), 3, 2)), _if_then_else(and_(ge(2, 0), le(0, zeros_diff_rows)), _if_then_else(ge(max_row_clue, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(True, ones_diff_cols, zeros_diff_cols)), _if_then_else(or_(and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(le(ones_diff_cols, zeros_diff_rows), ge(max_col_clue, max_col_clue))), False), _if_then_else(False, max_row_clue, 1), _if_then_else(False, compare_blocks_rows, 0))), _if_then_else(le(2, ones_diff_rows), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_rows)))))
le(_if_then_else(or_(False, ge(ones_diff_rows, zeros_diff_rows)), _if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)), _if_then_else(le(max_col_clue, zeros_diff_cols), ones_diff_cols, _if_then_else(False, zeros_diff_cols, zeros_diff_cols)))
ge(_if_then_else(False, 4, compare_blocks_rows), _if_then_else(or_(ge(compare_blocks_rows, 3), ge(ones_diff_cols, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(le(1, compare_blocks_cols), _if_then_else(True, 0, compare_blocks_rows), _if_then_else(True, 4, ones_diff_cols))), _if_then_else(and_(True, ge(0, _if_then_else(True, ones_diff_rows, 2))), compare_blocks_cols, _if_then_else(True, 4, compare_blocks_cols))))
or_(or_(ge(compare_blocks_cols, _if_then_else(False, ones_diff_rows, max_col_clue)), and_(le(0, zeros_diff_cols), and_(ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), True))), or_(and_(False, le(_if_then_else(False, zeros_diff_cols, 3), 2)), ge(_if_then_else(ge(0, max_row_clue), _if_then_else(False, 3, ones_diff_cols), _if_then_else(True, 2, max_col_clue)), max_row_clue)))
VAL TREES:
mul(mul(mul(zeros_diff_rows, ones_diff_cols), zeros_diff_rows), add(add(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_rows)))
add(mul(add(mul(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_cols))), add(add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)))), add(mul(add(mul(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), add(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols))), mul(mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)))))
add(mul(add(mul(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(mul(compare_blocks_cols, compare_blocks_rows), compare_blocks_rows)))
add(mul(add(mul(add(compare_blocks_rows, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols))), mul(mul(add(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), mul(zeros_diff_cols, compare_blocks_cols))), mul(add(add(mul(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows))), mul(add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_rows)), add(add(zeros_diff_cols, compare_blocks_rows), add(ones_diff_cols, compare_blocks_cols)))))
mul(add(add(mul(add(compare_blocks_cols, ones_diff_rows), compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_rows, add(add(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, ones_diff_cols)))), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, ones_diff_rows)))
add(add(add(mul(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, add(compare_blocks_cols, ones_diff_cols))), add(compare_blocks_rows, ones_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_cols)))
COND TREES:
le(_if_then_else(ge(2, 2), _if_then_else(False, 3, 1), _if_then_else(le(compare_blocks_rows, _if_then_else(ge(compare_blocks_rows, max_row_clue), _if_then_else(ge(max_row_clue, 3), max_col_clue, 3), _if_then_else(False, 2, 0))), _if_then_else(True, _if_then_else(False, ones_diff_cols, max_col_clue), compare_blocks_cols), _if_then_else(False, max_col_clue, 0))), _if_then_else(False, _if_then_else(False, ones_diff_cols, ones_diff_cols), _if_then_else(False, compare_blocks_cols, 1)))
le(_if_then_else(ge(_if_then_else(ge(2, 3), _if_then_else(le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2)), ones_diff_cols, compare_blocks_rows), _if_then_else(False, 2, compare_blocks_rows)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(False, 0, zeros_diff_rows))), _if_then_else(or_(or_(False, False), le(0, max_col_clue)), _if_then_else(le(ones_diff_cols, ones_diff_cols), _if_then_else(True, ones_diff_cols, _if_then_else(True, ones_diff_cols, compare_blocks_cols)), _if_then_else(False, 1, 2)), _if_then_else(or_(True, True), _if_then_else(False, 4, 0), _if_then_else(True, 0, max_col_clue))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, 0), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, max_col_clue)), _if_then_else(True, 2, compare_blocks_cols))), _if_then_else(ge(_if_then_else(False, _if_then_else(True, 1, compare_blocks_cols), _if_then_else(False, 2, 2)), _if_then_else(le(1, max_col_clue), _if_then_else(True, compare_blocks_cols, compare_blocks_cols), _if_then_else(True, compare_blocks_cols, zeros_diff_rows))), _if_then_else(le(_if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, _if_then_else(False, compare_blocks_rows, 3))), _if_then_else(ge(3, 3), _if_then_else(True, 1, max_col_clue), _if_then_else(False, 2, compare_blocks_cols)), _if_then_else(le(max_row_clue, 2), _if_then_else(ge(2, _if_then_else(False, 3, _if_then_else(False, compare_blocks_rows, 0))), compare_blocks_cols, 4), _if_then_else(True, 2, 3))), _if_then_else(le(_if_then_else(True, 3, zeros_diff_cols), _if_then_else(False, max_col_clue, max_col_clue)), _if_then_else(le(max_row_clue, 1), _if_then_else(False, 3, 4), _if_then_else(False, 3, max_col_clue)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(True, ones_diff_cols, ones_diff_rows)))))
or_(and_(or_(True, False), ge(_if_then_else(True, ones_diff_rows, max_col_clue), zeros_diff_cols)), False)
and_(ge(1, ones_diff_rows), or_(False, ge(_if_then_else(True, 4, 1), _if_then_else(True, ones_diff_rows, 2))))
ge(compare_blocks_rows, _if_then_else(True, compare_blocks_rows, compare_blocks_rows))
VAL TREES:
mul(mul(mul(compare_blocks_cols, add(zeros_diff_cols, mul(ones_diff_cols, ones_diff_rows))), mul(zeros_diff_rows, ones_diff_rows)), ones_diff_cols)
add(add(add(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), add(add(add(mul(compare_blocks_cols, compare_blocks_cols), add(add(compare_blocks_cols, zeros_diff_cols), zeros_diff_cols)), compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)))
add(mul(add(ones_diff_rows, ones_diff_rows), add(mul(compare_blocks_cols, compare_blocks_cols), ones_diff_cols)), mul(mul(add(ones_diff_cols, ones_diff_cols), compare_blocks_cols), add(zeros_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(add(add(mul(add(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_cols, zeros_diff_rows))), add(add(add(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols)))), add(add(add(add(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows))), mul(add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_rows)))))
mul(add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, add(ones_diff_cols, compare_blocks_cols))), add(add(compare_blocks_cols, compare_blocks_rows), mul(add(compare_blocks_rows, ones_diff_cols), ones_diff_rows)))
mul(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows)))
COND TREES:
and_(le(_if_then_else(False, compare_blocks_cols, 0), _if_then_else(False, ones_diff_cols, max_col_clue)), ge(zeros_diff_cols, 4))
or_(or_(and_(False, False), or_(ge(_if_then_else(True, max_row_clue, _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_cols, 4), _if_then_else(True, max_row_clue, 0))), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2)))), or_(ge(zeros_diff_cols, ones_diff_cols), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(le(ones_diff_cols, zeros_diff_rows), ge(max_col_clue, max_col_clue)))))
ge(compare_blocks_cols, _if_then_else(False, _if_then_else(False, 1, ones_diff_rows), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), ones_diff_cols, _if_then_else(False, 0, 0))))
or_(or_(ge(_if_then_else(False, 2, ones_diff_rows), ones_diff_cols), and_(False, and_(True, True))), ge(_if_then_else(True, 0, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, 4)))
ge(_if_then_else(True, _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(le(max_row_clue, ones_diff_cols), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(True, 1, compare_blocks_cols))), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(ge(_if_then_else(or_(True, False), _if_then_else(False, 0, 3), _if_then_else(or_(False, True), max_col_clue, ones_diff_cols)), _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, _if_then_else(True, 1, zeros_diff_cols)), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(mul(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_rows))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_rows))), add(add(ones_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(mul(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols))), add(ones_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(mul(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, ones_diff_rows))
COND TREES:
and_(le(_if_then_else(False, zeros_diff_cols, max_col_clue), _if_then_else(True, ones_diff_cols, ones_diff_rows)), ge(max_row_clue, _if_then_else(True, 2, compare_blocks_cols)))
or_(or_(le(_if_then_else(or_(False, False), _if_then_else(False, ones_diff_rows, compare_blocks_rows), _if_then_else(ge(_if_then_else(True, 4, 1), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), ones_diff_rows, max_row_clue)), _if_then_else(ge(ones_diff_rows, 4), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(False, 4, ones_diff_rows))), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2)))), or_(or_(ge(_if_then_else(True, 0, 3), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(le(0, zeros_diff_rows), ge(_if_then_else(True, 1, max_col_clue), max_col_clue)))))
ge(compare_blocks_cols, _if_then_else(and_(False, True), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, compare_blocks_cols, ones_diff_cols)))
or_(and_(False, True), ge(_if_then_else(False, 0, ones_diff_rows), _if_then_else(True, ones_diff_rows, 2)))
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(le(_if_then_else(False, 1, zeros_diff_rows), 4), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(zeros_diff_rows, compare_blocks_rows)
add(add(add(compare_blocks_cols, compare_blocks_cols), add(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_rows))), add(add(zeros_diff_rows, mul(add(ones_diff_cols, mul(compare_blocks_cols, compare_blocks_cols)), add(zeros_diff_cols, zeros_diff_cols))), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(zeros_diff_rows, ones_diff_rows), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_cols)), zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(add(add(zeros_diff_rows, compare_blocks_cols), add(ones_diff_rows, zeros_diff_rows)), compare_blocks_rows), zeros_diff_cols), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, add(add(ones_diff_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_rows))))), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(zeros_diff_cols, zeros_diff_cols))
zeros_diff_rows
COND TREES:
and_(le(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, ones_diff_cols, max_col_clue)), le(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, ones_diff_cols, max_col_clue)))
or_(or_(le(_if_then_else(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(False, ones_diff_rows, compare_blocks_rows), _if_then_else(True, ones_diff_rows, max_row_clue)), _if_then_else(ge(ones_diff_rows, 4), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(False, 4, ones_diff_rows))), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2)))), or_(or_(True, ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(le(_if_then_else(or_(False, False), _if_then_else(False, ones_diff_rows, compare_blocks_rows), _if_then_else(True, ones_diff_rows, max_row_clue)), zeros_diff_rows), ge(max_col_clue, max_col_clue)))))
ge(compare_blocks_cols, _if_then_else(and_(False, True), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, compare_blocks_cols, ones_diff_cols)))
or_(or_(ge(max_row_clue, ones_diff_cols), or_(True, and_(False, True))), or_(True, True))
ge(_if_then_else(le(0, zeros_diff_cols), _if_then_else(False, _if_then_else(True, _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(False, zeros_diff_rows, 2))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, mul(zeros_diff_rows, ones_diff_cols))), add(add(ones_diff_rows, zeros_diff_cols), add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(zeros_diff_rows, zeros_diff_rows)), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(add(zeros_diff_cols, zeros_diff_cols), ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(compare_blocks_rows, mul(mul(ones_diff_rows, compare_blocks_rows), add(zeros_diff_cols, zeros_diff_rows))))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, zeros_diff_cols))))
mul(mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(add(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(add(mul(add(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, compare_blocks_rows)), ones_diff_cols), mul(compare_blocks_cols, ones_diff_cols)))))
COND TREES:
ge(_if_then_else(or_(True, False), _if_then_else(True, compare_blocks_cols, compare_blocks_cols), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(_if_then_else(False, _if_then_else(False, ones_diff_cols, compare_blocks_cols), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, _if_then_else(True, zeros_diff_rows, max_col_clue), max_row_clue))), zeros_diff_rows), _if_then_else(False, _if_then_else(True, zeros_diff_cols, compare_blocks_rows), 4), _if_then_else(and_(False, False), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, max_row_clue))))
ge(compare_blocks_rows, _if_then_else(le(3, max_row_clue), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 3), 4), _if_then_else(True, zeros_diff_cols, 4)))
ge(_if_then_else(and_(False, le(ones_diff_cols, zeros_diff_cols)), _if_then_else(or_(and_(True, True), le(0, 2)), _if_then_else(False, compare_blocks_rows, _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(True, max_row_clue, 2))), ones_diff_cols), 0), _if_then_else(le(2, _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(False, _if_then_else(False, 2, compare_blocks_rows), zeros_diff_cols), ones_diff_cols))
or_(ge(zeros_diff_cols, _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(True, 4, 1))), or_(le(_if_then_else(and_(True, False), _if_then_else(False, ones_diff_rows, ones_diff_cols), max_row_clue), _if_then_else(False, 2, zeros_diff_cols)), and_(ge(zeros_diff_rows, 3), le(0, compare_blocks_cols))))
ge(_if_then_else(False, zeros_diff_cols, zeros_diff_rows), compare_blocks_rows)
VAL TREES:
mul(add(add(zeros_diff_cols, ones_diff_rows), mul(add(zeros_diff_rows, ones_diff_rows), zeros_diff_rows)), add(add(mul(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))))
mul(add(mul(mul(ones_diff_cols, compare_blocks_cols), ones_diff_cols), add(add(ones_diff_cols, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_rows))), add(add(mul(compare_blocks_cols, mul(zeros_diff_rows, ones_diff_rows)), add(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, zeros_diff_cols))))
mul(mul(mul(mul(compare_blocks_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows)), add(add(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols))), add(add(mul(compare_blocks_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)), add(mul(mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)), zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_rows))))
mul(mul(mul(ones_diff_cols, mul(zeros_diff_cols, zeros_diff_cols)), add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols))), add(mul(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, mul(ones_diff_rows, zeros_diff_cols))))
mul(add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(add(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)), ones_diff_rows)), add(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(add(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, zeros_diff_rows), mul(compare_blocks_cols, mul(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))))))
mul(add(mul(mul(ones_diff_cols, compare_blocks_rows), ones_diff_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_cols, add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_cols)))))
COND TREES:
and_(False, le(_if_then_else(False, zeros_diff_cols, max_col_clue), _if_then_else(True, 1, ones_diff_rows)))
or_(or_(and_(False, False), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2)))), or_(or_(ge(_if_then_else(True, 0, 3), 1), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(or_(le(zeros_diff_rows, 0), or_(True, True)), ge(max_col_clue, max_col_clue)))))
ge(compare_blocks_cols, _if_then_else(le(max_row_clue, _if_then_else(False, compare_blocks_rows, max_col_clue)), _if_then_else(False, 1, 4), _if_then_else(False, compare_blocks_cols, ones_diff_cols)))
True
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(True, _if_then_else(and_(False, True), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(True, _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), zeros_diff_cols))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_rows))), add(add(zeros_diff_rows, zeros_diff_cols), add(add(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, ones_diff_rows)), ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, ones_diff_cols)), ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(mul(compare_blocks_rows, zeros_diff_rows), mul(add(ones_diff_rows, ones_diff_rows), ones_diff_rows))), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(mul(mul(mul(add(compare_blocks_rows, ones_diff_cols), zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(add(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_cols))))
COND TREES:
and_(le(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, ones_diff_cols, max_col_clue)), le(max_col_clue, compare_blocks_cols))
or_(ge(zeros_diff_rows, _if_then_else(True, ones_diff_cols, ones_diff_rows)), or_(or_(ge(_if_then_else(True, 0, 3), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(le(ones_diff_cols, zeros_diff_rows), ge(max_col_clue, max_col_clue)))))
ge(compare_blocks_cols, _if_then_else(False, _if_then_else(ge(2, 3), ones_diff_cols, 2), _if_then_else(False, compare_blocks_cols, ones_diff_cols)))
or_(or_(ge(_if_then_else(False, 4, ones_diff_rows), ones_diff_cols), and_(False, True)), ge(_if_then_else(True, 0, zeros_diff_cols), _if_then_else(True, ones_diff_rows, compare_blocks_rows)))
ge(_if_then_else(True, _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, max_col_clue)), _if_then_else(and_(False, True), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_rows))), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(add(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_cols))))
COND TREES:
and_(le(_if_then_else(False, compare_blocks_cols, 0), _if_then_else(False, ones_diff_cols, max_col_clue)), ge(zeros_diff_cols, 4))
or_(or_(and_(False, False), or_(ge(_if_then_else(True, max_row_clue, _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_cols, 4), _if_then_else(True, max_row_clue, 0))), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2)))), or_(ge(zeros_diff_cols, ones_diff_cols), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(le(ones_diff_cols, zeros_diff_rows), ge(max_col_clue, max_col_clue)))))
ge(compare_blocks_cols, _if_then_else(False, _if_then_else(False, 1, ones_diff_rows), _if_then_else(le(max_col_clue, zeros_diff_cols), ones_diff_cols, _if_then_else(False, 0, 0))))
or_(or_(ge(_if_then_else(False, 4, ones_diff_rows), ones_diff_cols), and_(False, and_(True, True))), ge(_if_then_else(True, 0, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, 4)))
ge(_if_then_else(True, _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(le(max_row_clue, ones_diff_cols), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(True, 1, compare_blocks_cols))), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, _if_then_else(True, 1, zeros_diff_cols)), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(mul(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_rows))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_rows))), add(add(ones_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(mul(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols))), add(ones_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(mul(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, ones_diff_rows))
COND TREES:
le(_if_then_else(ge(ones_diff_rows, 4), _if_then_else(False, ones_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(and_(True, False), max_col_clue, ones_diff_cols))
le(_if_then_else(or_(or_(ge(compare_blocks_cols, compare_blocks_cols), or_(False, True)), le(_if_then_else(True, 4, 0), _if_then_else(True, 3, compare_blocks_rows))), _if_then_else(or_(ge(4, 1), ge(3, 2)), _if_then_else(ge(max_col_clue, zeros_diff_cols), _if_then_else(and_(and_(False, True), False), _if_then_else(False, 4, _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(False, _if_then_else(True, compare_blocks_rows, zeros_diff_rows), max_col_clue)), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(ge(zeros_diff_cols, ones_diff_cols), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(True, 2, 1))), _if_then_else(le(_if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, compare_blocks_cols, 3)), _if_then_else(ge(max_row_clue, 1), _if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, ones_diff_cols, 0)), _if_then_else(or_(True, True), _if_then_else(False, 1, 3), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)))), _if_then_else(le(_if_then_else(and_(True, True), _if_then_else(True, 1, max_col_clue), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(max_row_clue, 2), _if_then_else(False, 1, 0), _if_then_else(False, 2, zeros_diff_rows))), _if_then_else(le(_if_then_else(True, compare_blocks_cols, 4), _if_then_else(False, 1, ones_diff_rows)), _if_then_else(ge(zeros_diff_cols, 3), _if_then_else(False, max_col_clue, 4), _if_then_else(True, 2, 4)), 1), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, 0), _if_then_else(or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(ge(zeros_diff_cols, ones_diff_cols), _if_then_else(False, _if_then_else(False, 3, zeros_diff_rows), zeros_diff_cols), ones_diff_cols)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2))), 3, 2)), _if_then_else(ge(max_row_clue, zeros_diff_rows), _if_then_else(True, 3, ones_diff_rows), _if_then_else(False, 0, 3)), _if_then_else(le(2, ones_diff_rows), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_rows)))))
le(_if_then_else(ge(max_row_clue, ones_diff_rows), _if_then_else(False, zeros_diff_cols, 0), _if_then_else(False, max_col_clue, ones_diff_rows)), _if_then_else(le(max_row_clue, _if_then_else(False, compare_blocks_rows, _if_then_else(or_(True, True), _if_then_else(False, 4, 1), _if_then_else(False, 0, 2)))), _if_then_else(False, 1, 4), _if_then_else(False, compare_blocks_cols, ones_diff_cols)))
ge(_if_then_else(ge(compare_blocks_cols, 4), _if_then_else(False, 0, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(max_row_clue, 0), _if_then_else(True, compare_blocks_rows, _if_then_else(False, zeros_diff_cols, 4)), _if_then_else(and_(True, False), compare_blocks_cols, _if_then_else(False, zeros_diff_rows, max_col_clue))))
or_(and_(and_(True, False), and_(False, True)), and_(False, True))
VAL TREES:
mul(mul(mul(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, add(compare_blocks_cols, zeros_diff_rows))), add(add(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_rows)))
add(mul(add(mul(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, add(ones_diff_cols, compare_blocks_rows)), mul(zeros_diff_cols, ones_diff_cols))), add(add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)))), add(mul(add(mul(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), add(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols))), mul(mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)))))
add(mul(add(add(zeros_diff_cols, mul(compare_blocks_rows, zeros_diff_cols)), compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(mul(add(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, zeros_diff_cols)), compare_blocks_rows)))
add(mul(add(mul(add(compare_blocks_rows, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_cols, zeros_diff_cols))), mul(mul(add(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(mul(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, compare_blocks_rows)))), mul(add(add(mul(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows))), mul(add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_rows)), add(add(zeros_diff_cols, compare_blocks_rows), add(ones_diff_cols, compare_blocks_cols)))))
mul(add(add(mul(add(compare_blocks_cols, ones_diff_rows), compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_rows, add(add(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, ones_diff_cols)))), mul(add(compare_blocks_cols, ones_diff_rows), add(mul(compare_blocks_cols, zeros_diff_cols), ones_diff_rows)))
add(add(add(ones_diff_rows, mul(add(mul(ones_diff_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), add(compare_blocks_cols, ones_diff_cols))), add(compare_blocks_rows, ones_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_cols)))
COND TREES:
and_(le(_if_then_else(False, compare_blocks_cols, 0), _if_then_else(False, ones_diff_cols, max_col_clue)), ge(zeros_diff_cols, 4))
or_(or_(and_(False, False), or_(ge(_if_then_else(True, max_row_clue, _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_cols, 4), _if_then_else(True, max_row_clue, 0))), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2)))), or_(ge(zeros_diff_cols, ones_diff_cols), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(le(ones_diff_cols, zeros_diff_rows), ge(max_col_clue, max_col_clue)))))
ge(compare_blocks_cols, _if_then_else(False, _if_then_else(False, 1, ones_diff_rows), _if_then_else(le(max_col_clue, zeros_diff_cols), ones_diff_cols, _if_then_else(False, 0, 0))))
or_(or_(ge(_if_then_else(False, 4, ones_diff_rows), ones_diff_cols), and_(False, and_(True, True))), ge(_if_then_else(True, 0, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, 4)))
ge(_if_then_else(True, _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(le(max_row_clue, ones_diff_cols), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(True, 1, compare_blocks_cols))), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, _if_then_else(True, 1, zeros_diff_cols)), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(mul(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_rows))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_rows))), add(add(ones_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(mul(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols))), add(ones_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(mul(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, ones_diff_rows))
COND TREES:
and_(le(_if_then_else(True, max_col_clue, 0), _if_then_else(and_(and_(False, True), ge(1, 1)), max_col_clue, max_col_clue)), ge(2, ones_diff_cols))
or_(or_(le(_if_then_else(or_(False, False), _if_then_else(False, ones_diff_rows, compare_blocks_rows), _if_then_else(True, ones_diff_rows, max_row_clue)), _if_then_else(ge(ones_diff_rows, 4), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(False, 4, ones_diff_rows))), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(or_(and_(True, True), ge(4, compare_blocks_cols)), ones_diff_rows, 2)))), or_(le(0, zeros_diff_rows), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(le(ones_diff_cols, zeros_diff_rows), False))))
or_(True, False)
or_(or_(ge(_if_then_else(False, 0, _if_then_else(True, zeros_diff_rows, 0)), 0), and_(False, True)), ge(_if_then_else(True, 0, zeros_diff_cols), _if_then_else(True, ones_diff_rows, 2)))
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, _if_then_else(False, 3, 2)), _if_then_else(False, _if_then_else(or_(and_(True, False), True), _if_then_else(True, max_col_clue, 1), _if_then_else(True, zeros_diff_rows, max_row_clue)), 3), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(True, ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), 0, _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(add(ones_diff_rows, ones_diff_cols), add(compare_blocks_cols, mul(zeros_diff_rows, ones_diff_cols))))
add(mul(compare_blocks_cols, ones_diff_cols), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, add(compare_blocks_rows, ones_diff_cols))))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(compare_blocks_cols, mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
ones_diff_cols
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(zeros_diff_cols, compare_blocks_rows)
COND TREES:
and_(le(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, max_row_clue, max_col_clue)), ge(max_row_clue, _if_then_else(True, 2, compare_blocks_cols)))
or_(or_(le(_if_then_else(or_(False, False), _if_then_else(False, ones_diff_rows, compare_blocks_rows), _if_then_else(True, ones_diff_rows, max_row_clue)), _if_then_else(ge(ones_diff_rows, 4), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(False, 4, ones_diff_rows))), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2)))), or_(or_(ge(_if_then_else(True, 0, 3), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(or_(ge(_if_then_else(True, 0, 3), _if_then_else(True, 3, 4)), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), ge(_if_then_else(True, 1, max_col_clue), max_col_clue)))))
ge(compare_blocks_cols, _if_then_else(and_(le(zeros_diff_cols, 2), True), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, compare_blocks_cols, ones_diff_cols)))
or_(or_(True, and_(or_(True, True), True)), ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_rows, 2)))
ge(_if_then_else(and_(and_(and_(False, False), or_(True, ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)))), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), 1)), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(le(_if_then_else(False, 1, zeros_diff_rows), 4), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, mul(ones_diff_rows, compare_blocks_rows)), add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_rows))), compare_blocks_cols)
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, mul(add(compare_blocks_cols, ones_diff_rows), add(compare_blocks_cols, zeros_diff_rows))), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(add(ones_diff_rows, zeros_diff_rows), add(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_rows))))
mul(mul(add(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows))), ones_diff_cols)
COND TREES:
and_(le(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, ones_diff_cols, max_col_clue)), le(ones_diff_cols, _if_then_else(True, 1, ones_diff_rows)))
or_(or_(and_(False, False), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2)))), or_(or_(ge(_if_then_else(True, 0, 3), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, compare_blocks_cols, zeros_diff_rows))), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(le(ones_diff_cols, zeros_diff_rows), ge(max_col_clue, max_col_clue)))))
ge(compare_blocks_cols, _if_then_else(False, _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_rows)))
or_(or_(ge(_if_then_else(False, 4, ones_diff_rows), ones_diff_cols), and_(False, True)), ge(_if_then_else(True, 0, zeros_diff_cols), _if_then_else(False, 4, compare_blocks_cols)))
ge(_if_then_else(True, _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(mul(ones_diff_rows, compare_blocks_rows), mul(mul(ones_diff_cols, zeros_diff_cols), ones_diff_rows))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_rows))), add(add(ones_diff_rows, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(mul(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), mul(mul(add(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), compare_blocks_rows), add(add(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_cols, zeros_diff_rows))), add(ones_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(mul(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, ones_diff_rows))
COND TREES:
and_(False, le(_if_then_else(False, zeros_diff_cols, max_col_clue), _if_then_else(True, 1, ones_diff_rows)))
or_(or_(and_(False, False), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2)))), or_(or_(ge(_if_then_else(True, 0, 3), 1), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(or_(le(zeros_diff_rows, 0), or_(True, True)), ge(max_col_clue, max_col_clue)))))
ge(compare_blocks_cols, _if_then_else(le(max_row_clue, _if_then_else(False, compare_blocks_rows, max_col_clue)), _if_then_else(False, 1, 4), _if_then_else(False, compare_blocks_cols, ones_diff_cols)))
True
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(True, _if_then_else(and_(False, True), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(True, _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), zeros_diff_cols))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_rows))), add(add(zeros_diff_rows, zeros_diff_cols), add(add(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, ones_diff_rows)), ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, ones_diff_cols)), ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(mul(compare_blocks_rows, zeros_diff_rows), mul(add(ones_diff_rows, ones_diff_rows), ones_diff_rows))), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(mul(mul(mul(add(compare_blocks_rows, ones_diff_cols), zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(add(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_cols))))
COND TREES:
and_(le(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, ones_diff_cols, max_col_clue)), le(ones_diff_cols, _if_then_else(True, 1, ones_diff_rows)))
or_(or_(and_(False, False), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2)))), or_(or_(ge(_if_then_else(True, 0, 3), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, compare_blocks_cols, zeros_diff_rows))), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(le(ones_diff_cols, zeros_diff_rows), ge(max_col_clue, max_col_clue)))))
ge(compare_blocks_cols, _if_then_else(False, _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_rows)))
or_(or_(ge(_if_then_else(False, 4, ones_diff_rows), ones_diff_cols), and_(False, True)), ge(_if_then_else(True, 0, zeros_diff_cols), _if_then_else(False, 4, compare_blocks_cols)))
ge(_if_then_else(True, _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(mul(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_rows))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_rows))), add(add(ones_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(mul(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols))), add(ones_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(mul(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, ones_diff_rows))
COND TREES:
and_(le(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, ones_diff_cols, max_col_clue)), le(max_col_clue, compare_blocks_cols))
or_(ge(zeros_diff_rows, _if_then_else(True, ones_diff_cols, ones_diff_rows)), or_(or_(ge(_if_then_else(True, 0, 3), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(le(ones_diff_cols, zeros_diff_rows), ge(max_col_clue, max_col_clue)))))
ge(compare_blocks_cols, _if_then_else(False, _if_then_else(ge(2, 3), ones_diff_cols, 2), _if_then_else(False, compare_blocks_cols, ones_diff_cols)))
or_(or_(ge(_if_then_else(False, 4, ones_diff_rows), ones_diff_cols), and_(False, True)), ge(_if_then_else(True, 0, zeros_diff_cols), _if_then_else(True, ones_diff_rows, compare_blocks_rows)))
ge(_if_then_else(True, _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, max_col_clue)), _if_then_else(and_(False, True), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_rows))), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(add(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_cols))))
COND TREES:
and_(le(_if_then_else(True, max_col_clue, 0), _if_then_else(and_(and_(False, True), ge(1, 1)), ones_diff_cols, compare_blocks_cols)), ge(2, 2))
or_(or_(le(_if_then_else(or_(False, False), _if_then_else(False, ones_diff_rows, compare_blocks_rows), _if_then_else(True, ones_diff_rows, max_row_clue)), _if_then_else(ge(ones_diff_rows, 4), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(False, 4, ones_diff_rows))), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(or_(and_(True, True), ge(4, compare_blocks_cols)), ones_diff_rows, 2)))), or_(or_(ge(_if_then_else(True, 0, 3), _if_then_else(le(max_row_clue, 1), _if_then_else(False, 3, 4), _if_then_else(False, 3, max_col_clue))), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(2, _if_then_else(True, 2, zeros_diff_rows)), and_(le(ones_diff_cols, zeros_diff_rows), False))))
or_(True, False)
or_(or_(ge(_if_then_else(False, compare_blocks_rows, _if_then_else(True, zeros_diff_rows, 0)), ones_diff_rows), and_(False, True)), ge(_if_then_else(True, 4, zeros_diff_cols), _if_then_else(True, ones_diff_rows, 2)))
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, _if_then_else(False, 3, 2)), _if_then_else(False, _if_then_else(or_(and_(True, False), True), _if_then_else(True, max_col_clue, 1), _if_then_else(True, zeros_diff_rows, max_row_clue)), 3), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(le(_if_then_else(or_(False, True), 1, zeros_diff_cols), 2), False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(add(ones_diff_rows, ones_diff_cols), add(compare_blocks_cols, mul(zeros_diff_rows, ones_diff_cols))))
add(mul(compare_blocks_cols, ones_diff_cols), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, add(compare_blocks_rows, ones_diff_cols))))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(compare_blocks_cols, mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
ones_diff_cols
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(zeros_diff_cols, compare_blocks_rows)
COND TREES:
le(_if_then_else(ge(ones_diff_rows, 1), _if_then_else(and_(or_(False, False), and_(True, True)), ones_diff_cols, max_col_clue), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(and_(True, False), _if_then_else(True, 1, _if_then_else(True, max_row_clue, 0)), _if_then_else(True, 2, compare_blocks_cols)))
le(_if_then_else(or_(or_(ge(compare_blocks_cols, compare_blocks_cols), or_(False, True)), le(_if_then_else(True, 4, 0), _if_then_else(True, 3, compare_blocks_rows))), _if_then_else(or_(ge(4, 1), ge(3, _if_then_else(False, compare_blocks_cols, compare_blocks_rows))), _if_then_else(ge(max_col_clue, zeros_diff_cols), _if_then_else(and_(and_(False, True), False), _if_then_else(False, 4, _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(False, _if_then_else(True, compare_blocks_rows, zeros_diff_rows), max_col_clue)), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(ge(zeros_diff_cols, ones_diff_cols), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(True, max_row_clue, max_row_clue))), _if_then_else(le(_if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, compare_blocks_cols, 3)), _if_then_else(ge(max_row_clue, 1), _if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, ones_diff_cols, 0)), _if_then_else(or_(True, True), _if_then_else(False, 1, 3), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)))), _if_then_else(le(_if_then_else(and_(True, True), _if_then_else(True, 1, max_col_clue), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(max_row_clue, 2), _if_then_else(False, 1, 0), _if_then_else(False, 2, zeros_diff_rows))), _if_then_else(ge(3, _if_then_else(True, ones_diff_cols, ones_diff_rows)), _if_then_else(ge(zeros_diff_cols, 3), _if_then_else(False, max_col_clue, 4), _if_then_else(True, 2, 4)), _if_then_else(ge(max_col_clue, 4), _if_then_else(True, max_col_clue, compare_blocks_cols), _if_then_else(True, 2, zeros_diff_rows))), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, 0), _if_then_else(or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(ge(zeros_diff_cols, ones_diff_cols), _if_then_else(False, _if_then_else(False, 3, zeros_diff_rows), zeros_diff_cols), ones_diff_cols)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2))), 3, 2)), _if_then_else(ge(max_row_clue, zeros_diff_rows), _if_then_else(True, 3, ones_diff_rows), _if_then_else(False, 0, 3)), _if_then_else(le(2, ones_diff_rows), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_rows)))))
le(_if_then_else(ge(_if_then_else(False, ones_diff_rows, zeros_diff_cols), ones_diff_rows), _if_then_else(False, zeros_diff_cols, 0), _if_then_else(False, max_col_clue, ones_diff_rows)), _if_then_else(le(max_col_clue, zeros_diff_cols), ones_diff_cols, _if_then_else(False, zeros_diff_cols, zeros_diff_cols)))
ge(_if_then_else(ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), 4), _if_then_else(False, 0, ones_diff_rows), _if_then_else(or_(ge(compare_blocks_rows, 3), ge(ones_diff_cols, zeros_diff_cols)), zeros_diff_rows, 4)), _if_then_else(and_(True, ge(0, max_row_clue)), _if_then_else(True, 0, _if_then_else(False, zeros_diff_cols, 4)), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)))
or_(or_(le(ones_diff_rows, 4), and_(and_(and_(False, True), ge(ones_diff_rows, zeros_diff_rows)), and_(True, True))), or_(and_(False, True), ge(compare_blocks_cols, max_col_clue)))
VAL TREES:
mul(mul(mul(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, compare_blocks_cols)), add(add(mul(compare_blocks_rows, compare_blocks_rows), compare_blocks_cols), mul(ones_diff_rows, zeros_diff_rows)))
add(mul(add(mul(add(zeros_diff_cols, zeros_diff_rows), add(mul(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, ones_diff_cols))), mul(mul(zeros_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_cols))), add(add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)))), add(mul(add(mul(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), add(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols))), mul(mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)))))
add(mul(add(add(mul(mul(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(compare_blocks_rows, zeros_diff_cols)), compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(mul(compare_blocks_cols, compare_blocks_rows), compare_blocks_rows)))
add(mul(add(mul(add(compare_blocks_rows, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols))), mul(mul(add(compare_blocks_rows, zeros_diff_rows), add(ones_diff_rows, compare_blocks_rows)), add(mul(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, compare_blocks_rows)))), mul(add(add(mul(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows))), mul(add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_rows)), add(add(zeros_diff_cols, compare_blocks_rows), add(ones_diff_cols, compare_blocks_cols)))))
mul(add(add(mul(add(compare_blocks_cols, ones_diff_rows), compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_rows, add(add(compare_blocks_rows, mul(zeros_diff_rows, ones_diff_rows)), add(compare_blocks_cols, ones_diff_cols)))), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, ones_diff_rows)))
add(add(add(ones_diff_rows, mul(compare_blocks_rows, add(compare_blocks_cols, ones_diff_cols))), ones_diff_rows), add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_cols)))
COND TREES:
and_(le(_if_then_else(True, max_col_clue, 0), _if_then_else(and_(and_(or_(or_(True, True), or_(True, True)), True), ge(1, 1)), ones_diff_cols, max_col_clue)), ge(2, _if_then_else(False, ones_diff_cols, max_col_clue)))
or_(or_(le(_if_then_else(or_(False, False), _if_then_else(False, ones_diff_rows, compare_blocks_rows), _if_then_else(True, ones_diff_rows, max_row_clue)), _if_then_else(ge(ones_diff_rows, 4), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(False, 4, ones_diff_rows))), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(or_(and_(True, True), ge(4, 2)), ones_diff_rows, 2)))), or_(ge(_if_then_else(True, 0, 3), _if_then_else(False, compare_blocks_rows, max_row_clue)), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(le(ones_diff_cols, zeros_diff_rows), False))))
le(compare_blocks_rows, compare_blocks_rows)
or_(or_(ge(1, 2), or_(True, True)), ge(_if_then_else(True, 0, zeros_diff_cols), 0))
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, _if_then_else(False, 3, 2)), _if_then_else(False, _if_then_else(or_(and_(True, False), True), _if_then_else(True, max_col_clue, 1), _if_then_else(True, zeros_diff_rows, max_row_clue)), 3), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), compare_blocks_rows), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(add(ones_diff_rows, ones_diff_cols), add(compare_blocks_cols, mul(zeros_diff_rows, ones_diff_cols))))
add(mul(compare_blocks_cols, ones_diff_cols), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, add(compare_blocks_rows, ones_diff_cols))))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(compare_blocks_cols, mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
ones_diff_cols
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(zeros_diff_cols, compare_blocks_rows)
COND TREES:
and_(le(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, ones_diff_cols, max_col_clue)), le(max_col_clue, compare_blocks_cols))
or_(ge(zeros_diff_rows, _if_then_else(True, ones_diff_cols, ones_diff_rows)), or_(or_(or_(ge(_if_then_else(True, 0, 3), _if_then_else(le(max_row_clue, 1), _if_then_else(False, 3, 4), _if_then_else(False, 3, max_col_clue))), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(le(ones_diff_cols, zeros_diff_rows), ge(max_col_clue, max_col_clue)))))
ge(compare_blocks_cols, _if_then_else(False, _if_then_else(ge(2, 3), ones_diff_cols, 2), _if_then_else(False, compare_blocks_cols, ones_diff_cols)))
or_(or_(ge(_if_then_else(False, 4, ones_diff_rows), ones_diff_cols), and_(False, True)), ge(_if_then_else(True, _if_then_else(True, ones_diff_rows, 2), zeros_diff_cols), _if_then_else(True, ones_diff_rows, compare_blocks_rows)))
ge(_if_then_else(True, _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, max_col_clue)), _if_then_else(and_(False, True), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_rows))), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(add(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_cols))))
COND TREES:
and_(le(compare_blocks_cols, zeros_diff_rows), and_(True, True))
or_(or_(le(_if_then_else(or_(False, False), _if_then_else(False, 1, compare_blocks_rows), _if_then_else(True, ones_diff_rows, max_row_clue)), _if_then_else(ge(ones_diff_rows, 4), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(False, 4, ones_diff_rows))), or_(ge(_if_then_else(True, 1, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2)))), or_(or_(ge(_if_then_else(True, 0, 3), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), le(_if_then_else(False, 3, 4), _if_then_else(False, zeros_diff_rows, compare_blocks_cols)))))
ge(zeros_diff_cols, _if_then_else(or_(True, le(_if_then_else(le(compare_blocks_cols, _if_then_else(False, 1, max_col_clue)), _if_then_else(True, zeros_diff_rows, 2), _if_then_else(ge(4, _if_then_else(or_(True, False), _if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, zeros_diff_rows))), max_row_clue, 1)), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, compare_blocks_cols, ones_diff_cols)))
or_(False, or_(True, True))
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(True, _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, _if_then_else(True, zeros_diff_rows, 1), ones_diff_rows)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_rows, _if_then_else(True, compare_blocks_cols, 4))), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(le(max_col_clue, max_col_clue), 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, _if_then_else(True, zeros_diff_rows, ones_diff_rows), zeros_diff_cols)), _if_then_else(or_(True, or_(False, True)), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(compare_blocks_rows, ones_diff_rows))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, zeros_diff_cols))))
mul(mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(add(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, ones_diff_cols)))))
COND TREES:
le(_if_then_else(ge(ones_diff_rows, 4), _if_then_else(False, ones_diff_cols, compare_blocks_cols), _if_then_else(False, _if_then_else(and_(False, False), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), zeros_diff_rows)), _if_then_else(and_(True, False), max_col_clue, ones_diff_cols))
le(_if_then_else(or_(or_(ge(compare_blocks_cols, compare_blocks_cols), or_(False, True)), le(_if_then_else(True, 4, 0), _if_then_else(True, 3, compare_blocks_rows))), _if_then_else(or_(ge(4, 1), ge(3, 2)), _if_then_else(ge(max_col_clue, zeros_diff_cols), _if_then_else(and_(and_(False, True), False), _if_then_else(False, 4, _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(False, _if_then_else(True, compare_blocks_rows, zeros_diff_rows), max_col_clue)), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(ge(zeros_diff_cols, ones_diff_cols), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(True, 2, 1))), _if_then_else(le(_if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, compare_blocks_cols, 3)), _if_then_else(ge(max_row_clue, 1), _if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, ones_diff_cols, 0)), _if_then_else(or_(True, True), _if_then_else(False, 1, 3), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)))), _if_then_else(le(_if_then_else(and_(True, True), _if_then_else(True, 1, max_col_clue), _if_then_else(False, 3, ones_diff_rows)), _if_then_else(ge(max_row_clue, 2), _if_then_else(False, 1, 0), _if_then_else(False, 2, zeros_diff_rows))), _if_then_else(le(_if_then_else(True, compare_blocks_cols, 4), _if_then_else(False, 1, ones_diff_rows)), _if_then_else(ge(zeros_diff_cols, 3), _if_then_else(False, max_col_clue, 4), _if_then_else(True, 2, 4)), 1), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, 0), _if_then_else(or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(ge(zeros_diff_cols, ones_diff_cols), _if_then_else(False, _if_then_else(False, 3, zeros_diff_rows), zeros_diff_cols), ones_diff_cols)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2))), 3, 2)), _if_then_else(ge(max_row_clue, zeros_diff_rows), _if_then_else(True, 3, ones_diff_rows), _if_then_else(False, 0, 3)), _if_then_else(le(2, ones_diff_rows), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_rows)))))
le(_if_then_else(ge(max_row_clue, ones_diff_rows), _if_then_else(False, zeros_diff_cols, 0), _if_then_else(False, max_col_clue, ones_diff_rows)), _if_then_else(le(max_row_clue, _if_then_else(False, compare_blocks_rows, _if_then_else(or_(True, True), _if_then_else(False, 4, 1), _if_then_else(True, compare_blocks_cols, 2)))), _if_then_else(False, 1, 4), _if_then_else(False, compare_blocks_cols, ones_diff_cols)))
ge(_if_then_else(ge(compare_blocks_cols, 4), _if_then_else(False, 0, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(max_row_clue, 0), _if_then_else(True, compare_blocks_rows, _if_then_else(False, zeros_diff_cols, 4)), _if_then_else(and_(True, False), compare_blocks_cols, _if_then_else(or_(and_(False, False), le(2, 3)), zeros_diff_rows, max_col_clue))))
or_(and_(le(ones_diff_cols, zeros_diff_rows), and_(True, True)), and_(False, True))
VAL TREES:
mul(mul(mul(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, add(compare_blocks_cols, zeros_diff_rows))), add(add(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_rows)))
add(mul(add(mul(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, add(ones_diff_cols, compare_blocks_rows)), mul(zeros_diff_cols, ones_diff_cols))), add(add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)))), add(mul(add(mul(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), add(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols))), mul(mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)))))
add(mul(add(add(zeros_diff_cols, mul(compare_blocks_rows, zeros_diff_cols)), compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(mul(add(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, zeros_diff_cols)), compare_blocks_rows)))
add(mul(add(mul(add(compare_blocks_rows, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_cols, zeros_diff_cols))), mul(mul(add(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(mul(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, compare_blocks_rows)))), mul(add(add(mul(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows))), mul(add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_rows)), add(add(zeros_diff_cols, compare_blocks_rows), add(ones_diff_cols, compare_blocks_cols)))))
mul(add(add(mul(add(compare_blocks_cols, ones_diff_rows), compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_rows, add(add(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, ones_diff_cols)))), mul(add(compare_blocks_cols, ones_diff_rows), add(mul(compare_blocks_cols, zeros_diff_cols), ones_diff_rows)))
add(add(add(ones_diff_rows, mul(add(mul(ones_diff_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), add(compare_blocks_cols, ones_diff_cols))), add(compare_blocks_rows, ones_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_cols)))
COND TREES:
and_(ge(2, 2), le(_if_then_else(False, zeros_diff_cols, max_col_clue), _if_then_else(and_(True, False), 1, ones_diff_rows)))
or_(or_(and_(False, False), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(le(max_row_clue, 2), _if_then_else(ge(2, _if_then_else(False, 3, _if_then_else(False, compare_blocks_rows, 0))), compare_blocks_cols, 4), _if_then_else(True, 2, 3))))), or_(or_(ge(_if_then_else(True, 0, 3), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(0, _if_then_else(True, 2, zeros_diff_rows)), and_(le(ones_diff_cols, zeros_diff_rows), ge(max_col_clue, max_col_clue)))))
ge(compare_blocks_cols, _if_then_else(False, _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, compare_blocks_cols, ones_diff_cols)))
or_(or_(ge(_if_then_else(False, 4, ones_diff_rows), ones_diff_cols), and_(False, ge(4, ones_diff_rows))), ge(_if_then_else(True, 0, zeros_diff_cols), _if_then_else(False, 4, compare_blocks_cols)))
ge(_if_then_else(True, _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, max_col_clue, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(mul(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_rows))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_rows))), add(add(ones_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(mul(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols))), add(ones_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(mul(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, ones_diff_rows))
COND TREES:
le(_if_then_else(le(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, ones_diff_cols, max_col_clue)), _if_then_else(False, 3, 1), _if_then_else(le(compare_blocks_rows, _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, 3), _if_then_else(False, 2, 0))), _if_then_else(True, _if_then_else(False, ones_diff_cols, max_col_clue), compare_blocks_cols), _if_then_else(False, max_col_clue, 0))), _if_then_else(False, _if_then_else(False, ones_diff_cols, ones_diff_cols), _if_then_else(False, compare_blocks_cols, 1)))
le(_if_then_else(ge(_if_then_else(ge(2, 3), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 2, compare_blocks_rows)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(False, 0, zeros_diff_rows))), _if_then_else(or_(or_(False, False), le(0, max_col_clue)), _if_then_else(le(ones_diff_cols, ones_diff_cols), _if_then_else(True, ones_diff_cols, _if_then_else(True, ones_diff_cols, compare_blocks_cols)), _if_then_else(False, 1, 2)), _if_then_else(or_(True, True), _if_then_else(False, 4, 0), _if_then_else(True, 0, max_col_clue))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, 0), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, max_col_clue)), _if_then_else(True, 2, compare_blocks_cols))), _if_then_else(ge(_if_then_else(False, _if_then_else(True, 1, compare_blocks_cols), _if_then_else(False, 2, 2)), _if_then_else(le(1, max_col_clue), _if_then_else(True, compare_blocks_cols, compare_blocks_cols), _if_then_else(True, compare_blocks_cols, zeros_diff_rows))), _if_then_else(le(_if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, _if_then_else(False, compare_blocks_rows, 3))), _if_then_else(ge(3, 3), _if_then_else(True, 1, max_col_clue), _if_then_else(False, 2, compare_blocks_cols)), _if_then_else(False, ones_diff_rows, 2)), _if_then_else(le(_if_then_else(True, 3, zeros_diff_cols), _if_then_else(False, max_col_clue, max_col_clue)), _if_then_else(le(max_row_clue, 1), _if_then_else(False, 3, 4), _if_then_else(False, _if_then_else(and_(True, False), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(True, _if_then_else(False, ones_diff_cols, 0), 3)), max_col_clue)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(True, ones_diff_cols, ones_diff_rows)))))
or_(and_(or_(and_(or_(True, False), and_(False, False)), False), False), False)
and_(or_(ge(compare_blocks_rows, 3), ge(ones_diff_cols, _if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, 1, ones_diff_cols)))), or_(False, False))
True
VAL TREES:
mul(mul(mul(compare_blocks_cols, add(zeros_diff_cols, mul(ones_diff_cols, ones_diff_rows))), mul(zeros_diff_rows, ones_diff_rows)), ones_diff_cols)
add(add(add(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), add(add(add(mul(compare_blocks_cols, compare_blocks_cols), add(add(compare_blocks_cols, zeros_diff_cols), zeros_diff_cols)), compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)))
add(mul(add(ones_diff_rows, ones_diff_rows), add(mul(compare_blocks_cols, compare_blocks_cols), ones_diff_cols)), mul(mul(add(ones_diff_cols, ones_diff_cols), compare_blocks_cols), add(zeros_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(add(add(mul(add(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_cols, zeros_diff_rows))), add(add(add(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols)))), add(add(add(add(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows))), mul(add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_rows)))))
mul(add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, add(ones_diff_cols, compare_blocks_cols))), add(add(compare_blocks_cols, compare_blocks_rows), mul(add(compare_blocks_rows, ones_diff_cols), ones_diff_rows)))
mul(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows)))
COND TREES:
le(_if_then_else(ge(ones_diff_rows, 4), _if_then_else(ge(zeros_diff_cols, 4), ones_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(and_(ge(zeros_diff_cols, max_col_clue), ge(4, zeros_diff_rows)), _if_then_else(True, 1, max_row_clue), _if_then_else(False, 2, compare_blocks_cols)))
le(_if_then_else(or_(or_(ge(compare_blocks_cols, compare_blocks_cols), or_(False, True)), le(_if_then_else(True, 4, 0), _if_then_else(True, 3, compare_blocks_rows))), _if_then_else(or_(ge(4, 1), ge(3, 2)), _if_then_else(ge(ones_diff_cols, zeros_diff_cols), _if_then_else(and_(and_(False, True), False), _if_then_else(False, 4, _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(False, _if_then_else(True, compare_blocks_rows, zeros_diff_rows), max_col_clue)), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(ge(zeros_diff_cols, ones_diff_cols), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(True, 2, 1))), _if_then_else(le(_if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, compare_blocks_cols, 3)), _if_then_else(ge(max_row_clue, 1), _if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, ones_diff_cols, 0)), _if_then_else(or_(True, True), _if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)))), _if_then_else(le(_if_then_else(and_(True, True), _if_then_else(True, 1, max_col_clue), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(max_row_clue, 2), _if_then_else(False, 1, 0), _if_then_else(False, 2, zeros_diff_rows))), _if_then_else(ge(_if_then_else(True, ones_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, ones_diff_rows)), _if_then_else(ge(zeros_diff_cols, 3), _if_then_else(False, max_col_clue, 4), _if_then_else(True, 2, 4)), _if_then_else(ge(max_col_clue, 4), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 2, zeros_diff_rows))), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, 0), _if_then_else(or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(ge(zeros_diff_cols, ones_diff_cols), _if_then_else(False, _if_then_else(False, 3, zeros_diff_rows), zeros_diff_cols), ones_diff_cols)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2))), 3, 2)), _if_then_else(ge(max_row_clue, zeros_diff_rows), _if_then_else(True, 3, ones_diff_rows), _if_then_else(False, 0, 3)), _if_then_else(le(2, ones_diff_rows), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_rows)))))
le(_if_then_else(ge(2, ones_diff_rows), _if_then_else(False, zeros_diff_cols, 0), _if_then_else(False, 0, ones_diff_rows)), _if_then_else(False, ones_diff_cols, _if_then_else(False, 0, 0)))
ge(_if_then_else(ge(compare_blocks_cols, 4), _if_then_else(False, 0, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(or_(False, False), _if_then_else(False, 4, _if_then_else(False, zeros_diff_cols, 4)), _if_then_else(and_(True, False), compare_blocks_cols, _if_then_else(False, _if_then_else(True, 0, zeros_diff_rows), max_col_clue))))
or_(and_(or_(le(compare_blocks_rows, zeros_diff_cols), or_(False, False)), and_(False, False)), or_(and_(False, le(_if_then_else(False, 3, zeros_diff_rows), 2)), ge(compare_blocks_cols, max_row_clue)))
VAL TREES:
mul(mul(mul(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, compare_blocks_cols)), add(add(ones_diff_cols, compare_blocks_cols), mul(mul(ones_diff_rows, ones_diff_cols), zeros_diff_rows)))
add(mul(add(mul(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), add(add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)))), add(mul(add(mul(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), add(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols))), mul(mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)))))
add(mul(add(add(zeros_diff_cols, mul(compare_blocks_rows, zeros_diff_cols)), compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(add(compare_blocks_rows, zeros_diff_rows), mul(mul(compare_blocks_cols, compare_blocks_rows), compare_blocks_rows)))
add(mul(add(mul(add(compare_blocks_rows, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, compare_blocks_rows)))), mul(add(add(mul(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows))), mul(add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_rows)), add(add(zeros_diff_cols, compare_blocks_rows), add(ones_diff_cols, compare_blocks_cols)))))
mul(add(add(mul(add(compare_blocks_cols, ones_diff_rows), compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_rows, add(add(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, ones_diff_cols)))), mul(add(mul(mul(ones_diff_rows, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows)), ones_diff_rows), add(ones_diff_cols, ones_diff_rows)))
mul(add(compare_blocks_cols, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))
COND TREES:
le(_if_then_else(ge(2, 2), _if_then_else(False, 3, 1), _if_then_else(le(compare_blocks_rows, _if_then_else(ge(compare_blocks_rows, max_row_clue), _if_then_else(False, max_col_clue, 3), _if_then_else(False, 2, 0))), _if_then_else(True, _if_then_else(False, ones_diff_cols, max_col_clue), compare_blocks_cols), _if_then_else(False, max_col_clue, 0))), _if_then_else(False, _if_then_else(False, ones_diff_cols, ones_diff_cols), _if_then_else(False, compare_blocks_cols, 1)))
le(_if_then_else(ge(_if_then_else(ge(2, 3), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 2, compare_blocks_rows)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(False, 1, 3), _if_then_else(False, 0, zeros_diff_rows))), _if_then_else(or_(or_(False, False), le(0, max_col_clue)), _if_then_else(le(ones_diff_cols, ones_diff_cols), _if_then_else(True, ones_diff_cols, _if_then_else(True, ones_diff_cols, compare_blocks_cols)), _if_then_else(False, 1, 2)), _if_then_else(or_(True, True), _if_then_else(False, 4, 0), _if_then_else(True, 0, max_col_clue))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, 0), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, max_col_clue)), _if_then_else(True, 2, compare_blocks_cols))), _if_then_else(ge(_if_then_else(False, _if_then_else(True, 1, compare_blocks_cols), _if_then_else(False, 2, 2)), _if_then_else(le(1, max_col_clue), _if_then_else(True, compare_blocks_cols, compare_blocks_cols), _if_then_else(True, compare_blocks_cols, zeros_diff_rows))), _if_then_else(le(_if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, _if_then_else(False, compare_blocks_rows, 3))), _if_then_else(ge(3, 3), _if_then_else(True, 1, max_col_clue), _if_then_else(False, 2, compare_blocks_cols)), _if_then_else(le(max_row_clue, 2), _if_then_else(ge(2, _if_then_else(False, 3, _if_then_else(False, compare_blocks_rows, 0))), compare_blocks_cols, 4), _if_then_else(True, 2, 3))), _if_then_else(le(_if_then_else(True, 3, zeros_diff_cols), _if_then_else(False, max_col_clue, max_col_clue)), _if_then_else(le(max_row_clue, 1), _if_then_else(False, 3, 4), _if_then_else(False, _if_then_else(and_(True, False), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(True, 4, 3)), max_col_clue)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(True, ones_diff_cols, ones_diff_rows)))))
or_(and_(or_(True, False), False), le(max_col_clue, zeros_diff_cols))
and_(ge(4, ones_diff_rows), ge(max_row_clue, 0))
ge(compare_blocks_rows, _if_then_else(le(_if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, ones_diff_cols, max_row_clue)), _if_then_else(False, 0, 3), _if_then_else(or_(True, True), max_col_clue, ones_diff_cols)))
VAL TREES:
mul(mul(mul(compare_blocks_cols, add(zeros_diff_cols, mul(ones_diff_cols, ones_diff_rows))), mul(zeros_diff_rows, ones_diff_rows)), ones_diff_cols)
add(add(add(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), add(add(add(mul(compare_blocks_cols, compare_blocks_cols), add(add(compare_blocks_cols, zeros_diff_cols), zeros_diff_cols)), compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)))
add(mul(add(ones_diff_rows, ones_diff_rows), add(mul(compare_blocks_cols, compare_blocks_cols), ones_diff_cols)), mul(mul(add(ones_diff_cols, ones_diff_cols), compare_blocks_cols), add(zeros_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(add(add(mul(add(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_cols, zeros_diff_rows))), add(add(add(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols)))), add(add(add(add(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows))), mul(add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_rows)))))
mul(add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, add(ones_diff_cols, compare_blocks_cols))), add(add(compare_blocks_cols, compare_blocks_rows), mul(add(compare_blocks_rows, ones_diff_cols), ones_diff_rows)))
mul(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows)))
COND TREES:
and_(le(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, ones_diff_cols, max_col_clue)), or_(True, True))
or_(or_(le(_if_then_else(or_(False, False), _if_then_else(False, ones_diff_rows, compare_blocks_rows), _if_then_else(True, ones_diff_rows, max_row_clue)), _if_then_else(ge(ones_diff_rows, 4), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(False, 4, ones_diff_rows))), or_(True, le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2)))), or_(or_(ge(_if_then_else(True, 0, 3), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(le(ones_diff_cols, zeros_diff_rows), False))))
ge(compare_blocks_cols, _if_then_else(or_(True, False), _if_then_else(False, 1, ones_diff_rows), _if_then_else(False, compare_blocks_cols, ones_diff_cols)))
or_(or_(ge(max_row_clue, ones_diff_cols), and_(False, True)), ge(0, _if_then_else(True, zeros_diff_rows, 0)))
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(True, _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, or_(False, True)), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), add(add(zeros_diff_cols, zeros_diff_cols), mul(add(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)), ones_diff_cols))))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, mul(mul(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)))))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(compare_blocks_rows, zeros_diff_rows))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(compare_blocks_rows, add(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, zeros_diff_cols))))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(mul(ones_diff_cols, zeros_diff_cols), zeros_diff_cols))))
mul(mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(add(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, ones_diff_cols)))))
COND TREES:
and_(le(_if_then_else(False, compare_blocks_cols, 0), _if_then_else(False, ones_diff_cols, max_col_clue)), ge(zeros_diff_cols, 4))
or_(or_(and_(False, False), or_(ge(_if_then_else(True, max_row_clue, _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_cols, 4), _if_then_else(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), max_row_clue, 0))), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2)))), or_(ge(zeros_diff_cols, ones_diff_cols), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(le(ones_diff_cols, zeros_diff_rows), ge(max_col_clue, max_col_clue)))))
ge(compare_blocks_cols, _if_then_else(False, _if_then_else(False, 1, ones_diff_cols), _if_then_else(le(max_col_clue, zeros_diff_cols), ones_diff_cols, _if_then_else(False, 0, 0))))
or_(or_(ge(_if_then_else(False, 4, ones_diff_rows), ones_diff_cols), and_(False, and_(True, True))), ge(_if_then_else(True, _if_then_else(True, 0, zeros_diff_cols), zeros_diff_cols), _if_then_else(False, zeros_diff_cols, 4)))
ge(_if_then_else(True, _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(le(max_row_clue, ones_diff_cols), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(True, 1, compare_blocks_cols))), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_cols, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, _if_then_else(True, 1, zeros_diff_cols)), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(mul(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_rows))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_rows))), add(add(ones_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(mul(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols))), add(ones_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(mul(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, ones_diff_rows))
COND TREES:
and_(le(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, ones_diff_cols, max_col_clue)), or_(True, True))
or_(or_(le(_if_then_else(or_(False, False), _if_then_else(False, ones_diff_rows, compare_blocks_rows), _if_then_else(True, ones_diff_rows, max_row_clue)), _if_then_else(ge(ones_diff_rows, 4), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(False, 4, ones_diff_rows))), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2)))), or_(or_(ge(_if_then_else(True, 0, 3), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(le(ones_diff_cols, zeros_diff_rows), False))))
ge(compare_blocks_cols, _if_then_else(or_(True, False), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, compare_blocks_cols, ones_diff_cols)))
or_(or_(ge(max_row_clue, ones_diff_cols), and_(False, True)), ge(_if_then_else(True, 0, zeros_diff_cols), _if_then_else(True, zeros_diff_rows, 0)))
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(True, _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, or_(False, True)), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(compare_blocks_rows, ones_diff_rows))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, zeros_diff_cols))))
mul(mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(add(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, ones_diff_cols)))))
COND TREES:
and_(le(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, ones_diff_cols, max_col_clue)), le(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(False, 1, 4)))
or_(or_(le(_if_then_else(or_(False, False), _if_then_else(False, ones_diff_rows, compare_blocks_rows), _if_then_else(True, ones_diff_rows, max_row_clue)), _if_then_else(ge(ones_diff_rows, 4), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(False, 4, ones_diff_rows))), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, _if_then_else(True, 0, max_row_clue)), _if_then_else(False, ones_diff_rows, 2)))), or_(or_(and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(le(ones_diff_cols, zeros_diff_rows), ge(max_col_clue, max_col_clue))), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(le(ones_diff_cols, zeros_diff_rows), ge(max_col_clue, max_col_clue)))))
ge(compare_blocks_cols, _if_then_else(and_(and_(True, True), le(2, 0)), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, compare_blocks_cols, ones_diff_cols)))
or_(or_(ge(max_row_clue, compare_blocks_cols), and_(False, True)), ge(_if_then_else(True, 0, zeros_diff_cols), _if_then_else(False, 4, ones_diff_rows)))
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(True, _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), 0), _if_then_else(and_(ge(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(compare_blocks_rows, ones_diff_rows))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, zeros_diff_cols))))
mul(mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(add(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, ones_diff_cols)))))
COND TREES:
and_(le(_if_then_else(True, 1, 0), _if_then_else(False, ones_diff_cols, max_col_clue)), le(_if_then_else(False, 0, 4), _if_then_else(True, 1, ones_diff_rows)))
or_(or_(le(_if_then_else(or_(False, False), _if_then_else(False, ones_diff_rows, compare_blocks_rows), _if_then_else(True, ones_diff_rows, max_row_clue)), _if_then_else(ge(ones_diff_rows, 4), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(False, 4, ones_diff_rows))), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2)))), or_(or_(ge(_if_then_else(True, 0, 3), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(ge(max_row_clue, compare_blocks_rows), _if_then_else(True, max_row_clue, compare_blocks_rows), max_col_clue))), and_(le(_if_then_else(False, max_row_clue, max_row_clue), _if_then_else(True, 2, zeros_diff_rows)), and_(le(ones_diff_cols, zeros_diff_rows), ge(max_col_clue, max_col_clue)))))
ge(compare_blocks_cols, _if_then_else(and_(False, True), _if_then_else(False, 1, _if_then_else(True, zeros_diff_rows, ones_diff_rows)), _if_then_else(False, ones_diff_cols, ones_diff_rows)))
or_(or_(ge(_if_then_else(False, 4, ones_diff_rows), ones_diff_cols), and_(False, True)), True)
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, 1, 3), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, mul(mul(zeros_diff_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), add(add(ones_diff_rows, ones_diff_cols), add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))))
add(add(compare_blocks_cols, add(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_rows))), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(ones_diff_cols, add(mul(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(add(ones_diff_rows, zeros_diff_rows), add(add(compare_blocks_cols, compare_blocks_rows), mul(compare_blocks_cols, compare_blocks_cols))))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(ones_diff_rows, mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_cols))), add(mul(add(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_cols))))
COND TREES:
and_(ge(2, _if_then_else(True, compare_blocks_cols, zeros_diff_rows)), ge(_if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(ge(_if_then_else(False, 1, 2), _if_then_else(True, 3, 2)), max_col_clue, max_row_clue)))
or_(or_(and_(False, False), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2)))), or_(or_(ge(_if_then_else(True, 0, 3), 1), or_(True, False)), and_(False, and_(or_(le(zeros_diff_rows, 0), ge(_if_then_else(True, 0, 3), _if_then_else(False, compare_blocks_rows, zeros_diff_cols))), ge(max_col_clue, max_col_clue)))))
ge(compare_blocks_cols, _if_then_else(le(max_row_clue, _if_then_else(False, _if_then_else(and_(False, True), _if_then_else(False, max_row_clue, 1), _if_then_else(False, compare_blocks_rows, 4)), _if_then_else(or_(True, True), _if_then_else(False, 4, 1), _if_then_else(False, 0, 2)))), _if_then_else(False, 1, 4), _if_then_else(False, compare_blocks_cols, ones_diff_cols)))
or_(True, ge(_if_then_else(True, 0, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, zeros_diff_cols)))
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(True, _if_then_else(and_(False, True), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(or_(False, False), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_rows))), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(add(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_cols))))
COND TREES:
le(_if_then_else(ge(2, 2), _if_then_else(False, 3, 1), _if_then_else(le(compare_blocks_rows, _if_then_else(ge(compare_blocks_rows, max_row_clue), _if_then_else(False, max_col_clue, 3), _if_then_else(False, 2, 0))), _if_then_else(True, _if_then_else(False, ones_diff_rows, max_col_clue), compare_blocks_cols), _if_then_else(False, max_col_clue, 0))), _if_then_else(False, _if_then_else(False, ones_diff_cols, ones_diff_cols), _if_then_else(False, compare_blocks_cols, 1)))
le(_if_then_else(ge(_if_then_else(ge(2, 3), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 2, compare_blocks_rows)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(False, 0, zeros_diff_rows))), _if_then_else(or_(or_(False, False), le(0, max_col_clue)), _if_then_else(le(ones_diff_cols, ones_diff_cols), _if_then_else(True, ones_diff_cols, _if_then_else(True, ones_diff_cols, compare_blocks_cols)), _if_then_else(False, 1, 2)), _if_then_else(or_(True, True), _if_then_else(False, 4, 0), _if_then_else(True, 0, max_col_clue))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, 0), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, max_col_clue)), _if_then_else(True, 2, compare_blocks_cols))), _if_then_else(ge(_if_then_else(False, _if_then_else(True, 1, compare_blocks_cols), _if_then_else(False, 2, 2)), _if_then_else(le(1, max_col_clue), _if_then_else(True, compare_blocks_cols, compare_blocks_cols), _if_then_else(True, compare_blocks_cols, zeros_diff_rows))), _if_then_else(le(_if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, _if_then_else(False, compare_blocks_rows, 3))), _if_then_else(ge(3, 3), _if_then_else(True, 1, max_col_clue), _if_then_else(False, 2, compare_blocks_cols)), _if_then_else(le(max_row_clue, 2), _if_then_else(ge(2, _if_then_else(False, 3, _if_then_else(False, compare_blocks_rows, 0))), compare_blocks_cols, 4), _if_then_else(True, 2, 3))), _if_then_else(le(_if_then_else(True, 3, zeros_diff_cols), _if_then_else(False, max_col_clue, max_col_clue)), _if_then_else(le(max_row_clue, 1), _if_then_else(False, 3, 4), _if_then_else(False, _if_then_else(and_(True, False), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(True, 4, 3)), max_col_clue)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(True, ones_diff_cols, ones_diff_rows)))))
or_(and_(or_(True, False), False), False)
and_(ge(4, ones_diff_rows), or_(False, False))
ge(compare_blocks_rows, _if_then_else(le(_if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, ones_diff_cols, max_row_clue)), _if_then_else(False, 0, 3), _if_then_else(or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), True), max_col_clue, ones_diff_cols)))
VAL TREES:
mul(mul(mul(compare_blocks_cols, add(zeros_diff_cols, mul(ones_diff_cols, ones_diff_rows))), mul(zeros_diff_rows, ones_diff_rows)), ones_diff_cols)
add(add(add(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), add(add(add(mul(compare_blocks_cols, compare_blocks_cols), add(add(compare_blocks_cols, zeros_diff_cols), zeros_diff_cols)), compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)))
add(mul(add(ones_diff_rows, ones_diff_rows), add(mul(compare_blocks_cols, compare_blocks_cols), ones_diff_cols)), mul(mul(add(ones_diff_cols, ones_diff_cols), compare_blocks_cols), add(zeros_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(add(add(mul(add(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_cols, zeros_diff_rows))), add(add(add(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols)))), add(add(add(add(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows))), mul(add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_rows)))))
mul(add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, add(ones_diff_cols, compare_blocks_cols))), add(add(compare_blocks_cols, compare_blocks_rows), mul(add(compare_blocks_rows, ones_diff_cols), ones_diff_rows)))
mul(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows)))
COND TREES:
and_(ge(_if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(ge(_if_then_else(True, ones_diff_cols, zeros_diff_cols), _if_then_else(True, max_col_clue, max_row_clue)), compare_blocks_cols, 0)), le(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, ones_diff_cols, max_col_clue)))
or_(or_(and_(False, False), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, 4, ones_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, max_col_clue, 2)))), or_(or_(ge(_if_then_else(True, 0, 3), 1), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(or_(le(zeros_diff_rows, 0), and_(False, False)), ge(max_col_clue, max_col_clue)))))
ge(compare_blocks_cols, _if_then_else(le(_if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(False, compare_blocks_rows, max_col_clue)), _if_then_else(and_(False, True), _if_then_else(False, 1, _if_then_else(and_(True, True), _if_then_else(True, 3, 3), _if_then_else(False, 0, 1))), _if_then_else(False, compare_blocks_cols, ones_diff_cols)), _if_then_else(False, compare_blocks_cols, ones_diff_cols)))
False
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(True, _if_then_else(and_(False, True), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(True, ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), zeros_diff_rows), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, _if_then_else(False, compare_blocks_rows, 4), zeros_diff_cols)))), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_cols)), add(add(ones_diff_rows, ones_diff_cols), add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(add(ones_diff_cols, mul(zeros_diff_rows, ones_diff_rows)), mul(ones_diff_cols, zeros_diff_rows))), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_cols))))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, mul(add(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, ones_diff_cols)))))
mul(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(ones_diff_cols, add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_cols))))
COND TREES:
ge(_if_then_else(or_(True, False), _if_then_else(True, compare_blocks_cols, compare_blocks_cols), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(_if_then_else(False, _if_then_else(False, ones_diff_cols, compare_blocks_cols), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, _if_then_else(True, zeros_diff_rows, max_col_clue), max_row_clue))), zeros_diff_rows), _if_then_else(False, _if_then_else(True, zeros_diff_cols, compare_blocks_rows), 4), _if_then_else(and_(False, False), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, max_row_clue))))
ge(compare_blocks_rows, _if_then_else(le(3, max_row_clue), _if_then_else(True, _if_then_else(ge(_if_then_else(True, 0, 3), 1), compare_blocks_cols, 3), 4), _if_then_else(True, zeros_diff_cols, 4)))
ge(_if_then_else(and_(False, le(ones_diff_cols, zeros_diff_cols)), _if_then_else(or_(and_(True, True), le(0, 2)), _if_then_else(False, compare_blocks_rows, _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(True, max_row_clue, 2))), ones_diff_cols), 0), _if_then_else(le(2, _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(False, _if_then_else(False, ones_diff_cols, compare_blocks_rows), zeros_diff_cols), ones_diff_cols))
or_(ge(zeros_diff_cols, _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(True, 4, 1))), or_(le(_if_then_else(and_(True, False), _if_then_else(False, ones_diff_rows, ones_diff_cols), max_row_clue), _if_then_else(False, 2, zeros_diff_cols)), and_(ge(zeros_diff_rows, 3), le(0, compare_blocks_cols))))
ge(_if_then_else(False, zeros_diff_cols, zeros_diff_rows), zeros_diff_rows)
VAL TREES:
mul(add(add(zeros_diff_cols, ones_diff_rows), mul(add(zeros_diff_rows, ones_diff_rows), zeros_diff_rows)), add(add(mul(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))))
mul(add(mul(mul(ones_diff_cols, compare_blocks_cols), ones_diff_cols), add(add(ones_diff_cols, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_rows))), add(add(compare_blocks_cols, add(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, zeros_diff_cols))))
mul(mul(mul(mul(compare_blocks_rows, add(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols))), add(zeros_diff_rows, zeros_diff_rows)), add(add(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols))), add(add(mul(compare_blocks_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)), add(mul(mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)), zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_rows))))
mul(mul(mul(ones_diff_cols, mul(zeros_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_cols))), add(mul(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, mul(ones_diff_rows, zeros_diff_cols))))
mul(add(mul(mul(mul(ones_diff_rows, compare_blocks_cols), zeros_diff_cols), mul(add(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)), ones_diff_rows)), add(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(add(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, zeros_diff_rows), mul(compare_blocks_cols, mul(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))))))
compare_blocks_rows
COND TREES:
and_(ge(2, _if_then_else(True, compare_blocks_cols, 0)), ge(_if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(ge(_if_then_else(False, 1, 2), _if_then_else(True, 3, 2)), max_col_clue, max_row_clue)))
or_(or_(and_(False, False), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2)))), or_(or_(False, or_(True, False)), and_(False, and_(or_(le(zeros_diff_rows, 0), ge(_if_then_else(True, 0, 3), _if_then_else(False, compare_blocks_rows, zeros_diff_cols))), ge(max_col_clue, max_col_clue)))))
ge(compare_blocks_cols, _if_then_else(le(max_row_clue, _if_then_else(False, _if_then_else(and_(False, True), _if_then_else(False, max_row_clue, 1), _if_then_else(False, compare_blocks_rows, 4)), _if_then_else(or_(True, True), _if_then_else(False, 4, 1), _if_then_else(False, 0, 2)))), _if_then_else(False, 1, 4), _if_then_else(False, compare_blocks_cols, 2)))
or_(True, True)
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(True, _if_then_else(and_(False, True), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(or_(False, False), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(ge(1, compare_blocks_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_rows))), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(add(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_cols))))
COND TREES:
le(_if_then_else(ge(2, 2), _if_then_else(False, 3, 1), _if_then_else(le(_if_then_else(True, max_col_clue, 0), _if_then_else(and_(and_(False, True), ge(1, 1)), max_col_clue, max_col_clue)), _if_then_else(True, _if_then_else(False, ones_diff_cols, max_col_clue), compare_blocks_cols), _if_then_else(False, max_col_clue, 0))), _if_then_else(False, _if_then_else(False, ones_diff_cols, ones_diff_cols), _if_then_else(False, compare_blocks_cols, 1)))
le(_if_then_else(ge(_if_then_else(ge(2, 3), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 2, compare_blocks_rows)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(False, 0, zeros_diff_rows))), _if_then_else(or_(or_(False, False), le(0, max_col_clue)), _if_then_else(le(ones_diff_cols, ones_diff_cols), _if_then_else(True, ones_diff_cols, _if_then_else(True, ones_diff_cols, compare_blocks_cols)), _if_then_else(False, 1, 2)), _if_then_else(or_(True, True), _if_then_else(False, 4, 0), _if_then_else(True, 0, max_col_clue))), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, 0), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, max_col_clue)), _if_then_else(True, 2, compare_blocks_cols))), _if_then_else(ge(_if_then_else(False, _if_then_else(True, 1, compare_blocks_cols), _if_then_else(False, 2, 2)), _if_then_else(le(1, max_col_clue), _if_then_else(True, compare_blocks_cols, compare_blocks_cols), _if_then_else(True, compare_blocks_cols, zeros_diff_rows))), _if_then_else(le(_if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, _if_then_else(False, compare_blocks_rows, 3))), _if_then_else(ge(3, 3), _if_then_else(True, 1, max_col_clue), _if_then_else(False, 2, compare_blocks_cols)), _if_then_else(ge(4, compare_blocks_cols), _if_then_else(ge(2, _if_then_else(False, 3, _if_then_else(False, compare_blocks_rows, 0))), compare_blocks_cols, 4), _if_then_else(True, 2, 3))), _if_then_else(le(_if_then_else(True, 3, zeros_diff_cols), _if_then_else(False, max_col_clue, max_col_clue)), _if_then_else(le(max_row_clue, 1), _if_then_else(False, 3, 4), _if_then_else(False, _if_then_else(and_(True, False), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(True, 4, 3)), max_col_clue)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(True, ones_diff_cols, ones_diff_rows)))))
or_(and_(or_(True, False), False), False)
and_(ge(_if_then_else(True, 0, zeros_diff_cols), _if_then_else(True, ones_diff_rows, 2)), or_(False, False))
ge(compare_blocks_rows, _if_then_else(le(_if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, ones_diff_cols, max_row_clue)), _if_then_else(False, 0, 3), _if_then_else(False, 0, ones_diff_cols)))
VAL TREES:
mul(mul(mul(compare_blocks_cols, add(zeros_diff_cols, mul(ones_diff_cols, ones_diff_rows))), mul(zeros_diff_rows, ones_diff_rows)), ones_diff_cols)
add(add(add(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), add(add(add(mul(compare_blocks_cols, compare_blocks_cols), add(add(compare_blocks_cols, zeros_diff_cols), zeros_diff_cols)), compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)))
add(mul(add(ones_diff_rows, ones_diff_rows), add(mul(compare_blocks_cols, compare_blocks_cols), ones_diff_cols)), mul(mul(add(ones_diff_cols, ones_diff_cols), compare_blocks_cols), add(zeros_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(add(add(mul(add(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_cols, zeros_diff_rows))), add(add(add(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols)))), add(add(add(add(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows))), mul(add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_rows)))))
mul(add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, add(ones_diff_cols, compare_blocks_cols))), add(add(compare_blocks_cols, compare_blocks_rows), mul(add(compare_blocks_rows, ones_diff_cols), ones_diff_rows)))
mul(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows)))
COND TREES:
and_(le(compare_blocks_rows, _if_then_else(ge(compare_blocks_rows, max_row_clue), _if_then_else(False, max_col_clue, 3), _if_then_else(False, 2, 0))), ge(2, 2))
or_(or_(le(_if_then_else(or_(False, False), _if_then_else(False, ones_diff_rows, compare_blocks_rows), _if_then_else(True, ones_diff_rows, max_row_clue)), _if_then_else(ge(ones_diff_rows, 4), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(False, 4, ones_diff_rows))), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(or_(and_(True, True), le(max_row_clue, 2)), ones_diff_rows, 2)))), or_(or_(ge(_if_then_else(True, 0, 3), _if_then_else(False, 3, 4)), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(le(ones_diff_cols, zeros_diff_rows), False))))
or_(True, False)
or_(or_(ge(_if_then_else(False, 0, _if_then_else(True, zeros_diff_rows, 0)), ones_diff_rows), and_(False, True)), ge(4, ones_diff_rows))
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, _if_then_else(False, 3, 2)), _if_then_else(False, _if_then_else(or_(and_(True, False), True), _if_then_else(True, max_col_clue, 1), _if_then_else(True, zeros_diff_rows, max_row_clue)), 3), _if_then_else(or_(True, True), max_col_clue, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), 0, _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(add(ones_diff_rows, ones_diff_cols), add(compare_blocks_cols, mul(zeros_diff_rows, ones_diff_cols))))
add(mul(compare_blocks_cols, ones_diff_cols), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, add(compare_blocks_rows, ones_diff_cols))))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(compare_blocks_cols, mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
ones_diff_cols
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(zeros_diff_cols, compare_blocks_rows)
COND TREES:
le(_if_then_else(ge(ones_diff_rows, 1), _if_then_else(and_(or_(False, False), and_(True, True)), ones_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(and_(True, False), _if_then_else(True, 1, _if_then_else(True, max_row_clue, 0)), _if_then_else(True, 2, compare_blocks_cols)))
le(_if_then_else(or_(or_(ge(compare_blocks_cols, compare_blocks_cols), or_(False, True)), le(_if_then_else(True, 4, 0), _if_then_else(True, 3, compare_blocks_rows))), _if_then_else(or_(False, True), _if_then_else(True, 4, 3), _if_then_else(True, ones_diff_cols, 2)), _if_then_else(le(_if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, compare_blocks_cols, 3)), _if_then_else(ge(max_row_clue, 1), _if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, ones_diff_cols, 0)), _if_then_else(or_(True, True), _if_then_else(False, 1, 3), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)))), _if_then_else(le(_if_then_else(and_(True, True), _if_then_else(True, 1, max_col_clue), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(max_row_clue, 2), _if_then_else(False, 1, 0), _if_then_else(False, 2, zeros_diff_rows))), _if_then_else(ge(3, _if_then_else(True, ones_diff_cols, ones_diff_rows)), _if_then_else(ge(zeros_diff_cols, 3), _if_then_else(False, max_col_clue, 4), _if_then_else(True, 2, 4)), _if_then_else(ge(max_col_clue, 4), _if_then_else(True, max_col_clue, compare_blocks_cols), _if_then_else(True, 2, zeros_diff_rows))), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, 0), _if_then_else(or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(ge(zeros_diff_cols, ones_diff_cols), _if_then_else(False, _if_then_else(False, 3, zeros_diff_rows), zeros_diff_cols), ones_diff_cols)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2))), 3, 2)), _if_then_else(ge(max_row_clue, zeros_diff_rows), _if_then_else(True, 3, ones_diff_rows), _if_then_else(False, 0, 3)), _if_then_else(le(2, ones_diff_rows), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_rows)))))
le(_if_then_else(ge(_if_then_else(False, ones_diff_rows, zeros_diff_cols), ones_diff_rows), ones_diff_cols, _if_then_else(False, max_col_clue, ones_diff_rows)), _if_then_else(le(max_col_clue, zeros_diff_cols), ones_diff_cols, _if_then_else(False, zeros_diff_cols, zeros_diff_cols)))
ge(_if_then_else(ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), 4), _if_then_else(False, 0, ones_diff_rows), _if_then_else(or_(ge(compare_blocks_rows, 3), ge(ones_diff_cols, zeros_diff_cols)), zeros_diff_rows, 4)), _if_then_else(and_(True, ge(0, max_row_clue)), _if_then_else(True, 4, _if_then_else(False, zeros_diff_cols, 4)), ones_diff_cols))
or_(or_(le(0, 4), and_(and_(and_(False, True), ge(ones_diff_rows, zeros_diff_rows)), and_(True, True))), or_(and_(False, le(_if_then_else(or_(False, True), 1, zeros_diff_cols), 2)), ge(compare_blocks_cols, max_col_clue)))
VAL TREES:
mul(mul(mul(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, compare_blocks_cols)), add(add(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_rows)))
add(mul(add(mul(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_cols))), add(add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)))), add(mul(add(mul(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), add(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols))), mul(mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)))))
add(mul(add(add(zeros_diff_cols, mul(compare_blocks_rows, zeros_diff_cols)), compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(mul(compare_blocks_cols, compare_blocks_rows), compare_blocks_rows)))
add(mul(add(mul(add(compare_blocks_rows, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols))), mul(mul(add(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(mul(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, compare_blocks_rows)))), mul(add(add(mul(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows))), mul(add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_rows)), add(add(zeros_diff_cols, compare_blocks_rows), add(ones_diff_cols, compare_blocks_cols)))))
mul(add(add(mul(add(compare_blocks_cols, ones_diff_rows), compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_rows, add(add(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, ones_diff_cols)))), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, ones_diff_rows)))
add(add(add(ones_diff_rows, mul(compare_blocks_rows, add(compare_blocks_cols, ones_diff_cols))), add(compare_blocks_rows, ones_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_cols)))
COND TREES:
le(_if_then_else(ge(_if_then_else(True, max_row_clue, compare_blocks_cols), 2), _if_then_else(False, 3, 1), _if_then_else(True, _if_then_else(False, 3, 0), ones_diff_rows)), _if_then_else(le(ones_diff_cols, 0), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, compare_blocks_cols, 1)))
le(_if_then_else(ge(_if_then_else(ge(2, 3), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, 2, compare_blocks_rows)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(False, _if_then_else(False, compare_blocks_cols, zeros_diff_rows), zeros_diff_rows))), _if_then_else(or_(or_(False, False), le(0, max_col_clue)), _if_then_else(le(ones_diff_cols, ones_diff_cols), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(False, 1, 2)), _if_then_else(or_(True, True), _if_then_else(False, 4, 0), _if_then_else(True, 0, max_col_clue))), _if_then_else(ge(_if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 4, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(False, max_col_clue, compare_blocks_rows)))), _if_then_else(ge(_if_then_else(and_(True, False), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(False, 2, 2)), _if_then_else(le(1, max_col_clue), _if_then_else(True, compare_blocks_cols, compare_blocks_cols), _if_then_else(True, compare_blocks_cols, zeros_diff_rows))), _if_then_else(le(_if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, 1)), _if_then_else(ge(3, 3), _if_then_else(True, 1, max_col_clue), _if_then_else(False, _if_then_else(or_(ge(4, 1), ge(3, 2)), _if_then_else(ge(max_col_clue, zeros_diff_cols), _if_then_else(and_(and_(False, True), False), _if_then_else(False, 4, _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(False, _if_then_else(True, compare_blocks_rows, zeros_diff_rows), max_col_clue)), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(ge(zeros_diff_cols, ones_diff_cols), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(True, max_row_clue, max_row_clue))), compare_blocks_cols)), _if_then_else(le(max_row_clue, 2), _if_then_else(True, compare_blocks_cols, 4), _if_then_else(True, 2, 3))), _if_then_else(le(_if_then_else(True, 3, zeros_diff_cols), _if_then_else(False, max_col_clue, max_col_clue)), _if_then_else(le(max_row_clue, 1), _if_then_else(False, 3, 4), _if_then_else(False, 3, max_col_clue)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(True, ones_diff_cols, ones_diff_rows)))))
or_(le(_if_then_else(False, 3, _if_then_else(le(1, max_row_clue), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(False, ones_diff_rows, 4))), _if_then_else(False, 3, _if_then_else(False, compare_blocks_rows, max_col_clue))), le(_if_then_else(and_(False, False), zeros_diff_rows, 4), _if_then_else(False, _if_then_else(False, zeros_diff_cols, 0), ones_diff_cols)))
ge(_if_then_else(or_(True, False), _if_then_else(False, 1, compare_blocks_cols), _if_then_else(False, max_col_clue, _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), _if_then_else(ge(zeros_diff_cols, compare_blocks_cols), _if_then_else(and_(True, False), 4, 4), _if_then_else(False, compare_blocks_rows, 0)))
ge(_if_then_else(and_(and_(False, False), False), _if_then_else(le(ones_diff_cols, compare_blocks_rows), _if_then_else(True, 1, compare_blocks_rows), 4), _if_then_else(True, max_col_clue, 4)), _if_then_else(or_(False, False), _if_then_else(False, _if_then_else(or_(True, True), _if_then_else(True, max_col_clue, 1), _if_then_else(ge(_if_then_else(True, 1, _if_then_else(le(ones_diff_cols, _if_then_else(True, 4, ones_diff_rows)), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, ones_diff_rows, ones_diff_cols))), _if_then_else(False, zeros_diff_cols, 3)), ones_diff_cols, max_row_clue)), 3), _if_then_else(False, max_col_clue, ones_diff_cols)))
VAL TREES:
mul(mul(mul(compare_blocks_cols, add(zeros_diff_cols, mul(ones_diff_cols, ones_diff_rows))), mul(zeros_diff_rows, ones_diff_rows)), ones_diff_cols)
add(add(add(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), add(add(add(mul(compare_blocks_cols, compare_blocks_cols), add(add(compare_blocks_cols, zeros_diff_cols), zeros_diff_cols)), compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)))
add(mul(add(ones_diff_rows, ones_diff_rows), add(mul(compare_blocks_cols, compare_blocks_cols), ones_diff_cols)), mul(mul(add(ones_diff_cols, ones_diff_cols), compare_blocks_cols), add(zeros_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(add(add(mul(add(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_cols, zeros_diff_rows))), add(add(add(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows)), mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols)))), add(add(add(add(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows))), mul(add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_rows)))))
mul(add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, add(ones_diff_cols, compare_blocks_cols))), add(add(compare_blocks_cols, compare_blocks_rows), mul(add(compare_blocks_rows, ones_diff_cols), ones_diff_rows)))
mul(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_rows)))
COND TREES:
le(_if_then_else(ge(ones_diff_rows, 4), _if_then_else(ge(zeros_diff_cols, 4), ones_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(and_(ge(zeros_diff_cols, max_col_clue), False), _if_then_else(True, 1, max_row_clue), _if_then_else(False, 2, compare_blocks_cols)))
le(_if_then_else(or_(or_(ge(compare_blocks_cols, compare_blocks_cols), or_(False, True)), le(_if_then_else(True, 4, 0), _if_then_else(True, 3, compare_blocks_rows))), _if_then_else(or_(ge(4, 1), ge(3, 2)), _if_then_else(ge(ones_diff_cols, zeros_diff_cols), _if_then_else(and_(and_(False, True), False), _if_then_else(False, 4, _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(False, _if_then_else(True, compare_blocks_rows, zeros_diff_rows), max_col_clue)), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(ge(zeros_diff_cols, ones_diff_cols), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(True, 2, 1))), _if_then_else(le(_if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, compare_blocks_cols, 3)), _if_then_else(ge(max_row_clue, 1), _if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, ones_diff_cols, 0)), _if_then_else(or_(True, True), _if_then_else(False, 1, 3), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)))), _if_then_else(le(_if_then_else(and_(True, True), _if_then_else(True, 1, max_col_clue), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(max_row_clue, 2), _if_then_else(False, 1, 0), _if_then_else(False, 2, zeros_diff_rows))), _if_then_else(ge(_if_then_else(True, ones_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, ones_diff_rows)), _if_then_else(ge(zeros_diff_cols, 3), _if_then_else(False, max_col_clue, 4), _if_then_else(True, 2, 4)), _if_then_else(ge(max_col_clue, 4), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 2, zeros_diff_rows))), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, 0), _if_then_else(or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(ge(zeros_diff_cols, ones_diff_cols), _if_then_else(False, _if_then_else(False, 3, zeros_diff_rows), zeros_diff_cols), ones_diff_cols)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2))), 3, 2)), _if_then_else(ge(max_row_clue, zeros_diff_rows), _if_then_else(True, 3, ones_diff_rows), _if_then_else(False, 0, 3)), _if_then_else(le(2, ones_diff_rows), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_rows)))))
le(_if_then_else(ge(_if_then_else(False, 1, ones_diff_cols), ones_diff_rows), _if_then_else(False, zeros_diff_cols, 0), _if_then_else(False, 0, ones_diff_rows)), _if_then_else(le(max_col_clue, zeros_diff_cols), ones_diff_cols, _if_then_else(False, 0, 0)))
ge(_if_then_else(ge(compare_blocks_cols, 4), _if_then_else(False, 0, ones_diff_rows), _if_then_else(False, zeros_diff_cols, 4)), _if_then_else(ge(max_row_clue, 0), _if_then_else(False, 4, _if_then_else(False, zeros_diff_cols, 4)), _if_then_else(and_(True, False), compare_blocks_cols, _if_then_else(False, _if_then_else(True, 0, zeros_diff_rows), max_col_clue))))
or_(and_(or_(le(compare_blocks_rows, zeros_diff_cols), or_(False, False)), and_(False, False)), or_(False, ge(compare_blocks_cols, max_row_clue)))
VAL TREES:
mul(mul(mul(zeros_diff_rows, add(mul(compare_blocks_rows, ones_diff_cols), add(ones_diff_rows, zeros_diff_rows))), add(zeros_diff_rows, compare_blocks_cols)), add(add(ones_diff_cols, compare_blocks_cols), mul(mul(ones_diff_rows, ones_diff_cols), zeros_diff_rows)))
add(mul(add(mul(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), add(add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)))), add(mul(add(mul(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), add(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols))), mul(mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(mul(compare_blocks_cols, ones_diff_cols), ones_diff_cols)))))
add(mul(add(add(zeros_diff_cols, mul(compare_blocks_rows, zeros_diff_cols)), compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(add(compare_blocks_rows, zeros_diff_rows), mul(mul(compare_blocks_cols, add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))), compare_blocks_rows)))
add(mul(add(mul(add(compare_blocks_rows, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, add(add(compare_blocks_cols, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_cols)))), add(mul(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, compare_blocks_rows)))), mul(add(add(mul(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows))), mul(add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_rows)), add(add(zeros_diff_cols, compare_blocks_rows), add(ones_diff_cols, compare_blocks_cols)))))
mul(add(add(mul(add(compare_blocks_cols, ones_diff_rows), compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_rows, add(add(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, ones_diff_cols)))), mul(add(mul(mul(ones_diff_rows, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows)), ones_diff_rows), mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows))))
mul(add(compare_blocks_cols, add(compare_blocks_cols, compare_blocks_cols)), add(zeros_diff_rows, zeros_diff_rows))
COND TREES:
and_(le(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, ones_diff_cols, max_col_clue)), le(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(ge(4, zeros_diff_rows), 1, 4)))
or_(or_(le(_if_then_else(or_(False, False), _if_then_else(False, ones_diff_rows, compare_blocks_rows), _if_then_else(True, ones_diff_rows, max_row_clue)), _if_then_else(ge(ones_diff_rows, 4), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(False, 4, ones_diff_rows))), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, _if_then_else(True, 0, max_row_clue)), _if_then_else(False, ones_diff_rows, 2)))), or_(or_(and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(le(ones_diff_cols, zeros_diff_rows), ge(max_col_clue, max_col_clue))), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(le(ones_diff_cols, zeros_diff_rows), ge(max_col_clue, max_col_clue)))))
ge(compare_blocks_cols, _if_then_else(and_(and_(True, True), le(2, 0)), 2, _if_then_else(False, compare_blocks_cols, ones_diff_cols)))
or_(or_(ge(max_row_clue, compare_blocks_cols), and_(False, True)), ge(_if_then_else(True, 0, zeros_diff_rows), _if_then_else(False, 4, ones_diff_rows)))
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(True, _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), 0), _if_then_else(and_(ge(_if_then_else(and_(False, le(_if_then_else(True, 1, zeros_diff_cols), 2)), zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
ones_diff_rows
add(add(add(compare_blocks_cols, compare_blocks_cols), add(add(ones_diff_rows, compare_blocks_rows), ones_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, mul(add(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_rows)))), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), zeros_diff_rows), add(compare_blocks_rows, ones_diff_rows))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), add(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_rows, compare_blocks_rows))), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, zeros_diff_cols))))
mul(mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows))), add(zeros_diff_rows, add(add(ones_diff_cols, ones_diff_rows), add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, ones_diff_cols)))))
COND TREES:
le(_if_then_else(ge(ones_diff_rows, 4), _if_then_else(False, ones_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(and_(True, False), max_col_clue, ones_diff_cols))
le(_if_then_else(or_(or_(ge(compare_blocks_cols, compare_blocks_cols), or_(False, True)), le(_if_then_else(True, 4, 0), _if_then_else(True, 3, compare_blocks_rows))), _if_then_else(or_(ge(4, 1), ge(3, 2)), _if_then_else(ge(max_col_clue, zeros_diff_cols), _if_then_else(and_(and_(False, True), False), _if_then_else(False, 4, _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(False, _if_then_else(True, compare_blocks_rows, zeros_diff_rows), max_col_clue)), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(ge(zeros_diff_cols, ones_diff_cols), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(True, 2, 1))), _if_then_else(le(_if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, compare_blocks_cols, 3)), _if_then_else(ge(max_row_clue, 1), _if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, ones_diff_cols, 0)), _if_then_else(or_(True, True), _if_then_else(False, 1, 3), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)))), _if_then_else(le(_if_then_else(and_(True, True), _if_then_else(True, 1, max_col_clue), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(max_row_clue, 2), _if_then_else(False, 1, 0), _if_then_else(False, 2, zeros_diff_rows))), _if_then_else(le(_if_then_else(True, compare_blocks_cols, 4), _if_then_else(False, 1, ones_diff_rows)), _if_then_else(ge(zeros_diff_cols, 3), _if_then_else(False, max_col_clue, 4), _if_then_else(True, 2, 4)), 1), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, 0), _if_then_else(or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(ge(zeros_diff_cols, ones_diff_cols), _if_then_else(False, _if_then_else(False, 3, zeros_diff_rows), zeros_diff_cols), ones_diff_cols)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2))), 3, 2)), _if_then_else(ge(max_row_clue, zeros_diff_rows), _if_then_else(True, 3, ones_diff_rows), _if_then_else(False, 0, 3)), _if_then_else(le(2, ones_diff_rows), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_rows)))))
le(_if_then_else(ge(max_row_clue, ones_diff_rows), _if_then_else(False, zeros_diff_cols, 0), _if_then_else(False, max_col_clue, ones_diff_rows)), _if_then_else(le(max_row_clue, _if_then_else(False, compare_blocks_rows, _if_then_else(or_(True, True), _if_then_else(False, 4, 1), _if_then_else(False, 0, 2)))), _if_then_else(False, 1, 4), _if_then_else(False, compare_blocks_cols, ones_diff_cols)))
ge(_if_then_else(ge(compare_blocks_cols, 4), _if_then_else(False, 0, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(max_row_clue, 0), _if_then_else(True, compare_blocks_rows, _if_then_else(False, zeros_diff_cols, 4)), _if_then_else(and_(True, False), compare_blocks_cols, _if_then_else(False, zeros_diff_rows, max_col_clue))))
or_(and_(and_(True, False), and_(False, True)), and_(False, True))
VAL TREES:
mul(mul(mul(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, add(compare_blocks_cols, zeros_diff_rows))), zeros_diff_rows)
add(mul(add(mul(add(zeros_diff_cols, zeros_diff_rows), add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows))), mul(mul(zeros_diff_rows, add(ones_diff_cols, compare_blocks_rows)), mul(zeros_diff_cols, ones_diff_cols))), add(add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)))), add(mul(add(mul(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), add(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols))), mul(mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)))))
add(mul(add(add(zeros_diff_cols, mul(compare_blocks_rows, zeros_diff_cols)), compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(mul(add(ones_diff_rows, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols)), compare_blocks_rows)))
add(mul(add(mul(add(compare_blocks_rows, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), zeros_diff_rows), mul(mul(add(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(mul(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, compare_blocks_rows)))), mul(add(add(mul(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows))), mul(add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_rows)), add(add(zeros_diff_cols, compare_blocks_rows), add(ones_diff_cols, compare_blocks_cols)))))
mul(add(add(mul(add(compare_blocks_cols, ones_diff_rows), compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_rows, add(mul(add(zeros_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, zeros_diff_rows)), add(compare_blocks_cols, ones_diff_cols)))), mul(add(compare_blocks_cols, ones_diff_rows), add(mul(compare_blocks_cols, zeros_diff_cols), ones_diff_rows)))
add(add(add(ones_diff_rows, mul(mul(add(zeros_diff_rows, compare_blocks_cols), mul(zeros_diff_cols, compare_blocks_rows)), add(compare_blocks_cols, ones_diff_cols))), add(compare_blocks_rows, ones_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_cols)))
COND TREES:
and_(le(_if_then_else(ge(1, max_col_clue), _if_then_else(True, max_row_clue, 1), _if_then_else(True, compare_blocks_cols, zeros_diff_rows)), _if_then_else(False, ones_diff_cols, max_col_clue)), and_(False, True))
or_(or_(le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(ge(ones_diff_rows, 4), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(False, 4, ones_diff_rows))), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2)))), or_(or_(ge(_if_then_else(True, 0, 3), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(and_(False, False), max_row_clue, max_row_clue), _if_then_else(True, 2, zeros_diff_rows)), and_(le(ones_diff_cols, zeros_diff_rows), ge(max_col_clue, max_col_clue)))))
ge(compare_blocks_cols, _if_then_else(and_(False, True), _if_then_else(False, 1, _if_then_else(True, zeros_diff_rows, ones_diff_rows)), _if_then_else(False, 1, ones_diff_cols)))
or_(or_(ge(_if_then_else(False, 4, ones_diff_rows), ones_diff_cols), and_(False, True)), ge(_if_then_else(True, 0, zeros_diff_cols), _if_then_else(True, _if_then_else(False, compare_blocks_rows, _if_then_else(False, ones_diff_rows, zeros_diff_rows)), zeros_diff_cols)))
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, _if_then_else(True, 4, compare_blocks_rows), 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0))), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_rows))), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(add(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_cols))))
COND TREES:
and_(False, le(_if_then_else(False, zeros_diff_cols, max_col_clue), _if_then_else(True, 1, ones_diff_rows)))
or_(or_(and_(False, False), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2)))), or_(or_(ge(ones_diff_cols, 1), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(or_(le(zeros_diff_rows, 0), or_(True, True)), ge(max_col_clue, max_col_clue)))))
ge(compare_blocks_cols, _if_then_else(le(max_row_clue, _if_then_else(False, _if_then_else(or_(True, False), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, compare_blocks_cols, ones_diff_cols)), max_col_clue)), _if_then_else(False, 1, 4), _if_then_else(False, compare_blocks_cols, ones_diff_cols)))
True
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, 4, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(True, _if_then_else(and_(False, True), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(True, _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), zeros_diff_cols))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_rows))), add(add(zeros_diff_rows, zeros_diff_cols), mul(mul(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows))))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, ones_diff_cols)), ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(add(ones_diff_cols, ones_diff_rows), add(mul(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols))), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, mul(mul(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_rows))), zeros_diff_cols), add(mul(compare_blocks_rows, zeros_diff_rows), mul(add(ones_diff_rows, ones_diff_rows), ones_diff_rows))), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(mul(ones_diff_cols, zeros_diff_rows), add(mul(add(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_cols))))
COND TREES:
and_(le(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, ones_diff_cols, max_col_clue)), or_(True, True))
or_(or_(le(_if_then_else(or_(False, False), _if_then_else(False, ones_diff_rows, compare_blocks_rows), _if_then_else(True, ones_diff_rows, max_row_clue)), _if_then_else(ge(ones_diff_rows, 4), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(False, 4, ones_diff_rows))), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2)))), or_(or_(ge(_if_then_else(True, 0, 3), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, _if_then_else(True, 0, 3), zeros_diff_rows))), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(le(ones_diff_cols, zeros_diff_rows), False))))
ge(compare_blocks_cols, compare_blocks_rows)
or_(or_(ge(max_row_clue, ones_diff_cols), and_(False, True)), ge(_if_then_else(True, 0, zeros_diff_cols), _if_then_else(True, zeros_diff_rows, 0)))
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(True, _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, compare_blocks_rows))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, or_(False, True)), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(mul(ones_diff_rows, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_cols)), add(add(add(compare_blocks_rows, ones_diff_rows), zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(compare_blocks_rows, ones_diff_cols), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(compare_blocks_rows, ones_diff_rows))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, add(ones_diff_cols, zeros_diff_rows)), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, zeros_diff_cols))))
mul(mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(add(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)))))
COND TREES:
and_(le(_if_then_else(True, _if_then_else(True, 1, ones_diff_rows), 0), _if_then_else(and_(and_(False, True), ge(1, 1)), ones_diff_cols, max_col_clue)), ge(ones_diff_rows, 4))
or_(or_(True, or_(le(_if_then_else(or_(False, False), _if_then_else(False, ones_diff_rows, compare_blocks_rows), _if_then_else(True, ones_diff_rows, max_row_clue)), _if_then_else(ge(ones_diff_rows, 4), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(False, 4, ones_diff_rows))), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(or_(and_(True, True), ge(4, compare_blocks_cols)), ones_diff_rows, 2)))), or_(or_(ge(_if_then_else(True, 0, 3), _if_then_else(le(max_row_clue, 1), _if_then_else(False, 3, 4), _if_then_else(False, 3, max_col_clue))), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(le(_if_then_else(True, 2, zeros_diff_rows), zeros_diff_rows), False))))
or_(False, False)
or_(or_(True, and_(False, True)), ge(_if_then_else(True, 0, zeros_diff_cols), _if_then_else(True, ones_diff_cols, 2)))
ge(_if_then_else(and_(and_(False, or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, _if_then_else(False, 3, 2)), _if_then_else(False, _if_then_else(or_(and_(True, False), True), _if_then_else(True, max_col_clue, 1), zeros_diff_rows), 3), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(ge(compare_blocks_cols, max_row_clue), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, add(add(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), mul(zeros_diff_cols, compare_blocks_cols)), add(add(ones_diff_rows, ones_diff_cols), add(compare_blocks_cols, mul(zeros_diff_rows, ones_diff_cols))))
add(mul(compare_blocks_cols, ones_diff_cols), add(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(ones_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, add(compare_blocks_rows, ones_diff_cols))))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(compare_blocks_cols, mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(ones_diff_rows, compare_blocks_rows)
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, add(compare_blocks_rows, zeros_diff_cols)))))
mul(add(mul(ones_diff_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_cols)), compare_blocks_rows)
COND TREES:
and_(le(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, ones_diff_cols, max_col_clue)), or_(True, True))
or_(or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2)))), or_(or_(ge(_if_then_else(True, 0, 3), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(le(ones_diff_cols, zeros_diff_rows), False))))
ge(compare_blocks_cols, _if_then_else(or_(True, False), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_cols)))
or_(or_(ge(max_row_clue, ones_diff_rows), and_(False, True)), ge(_if_then_else(True, 0, zeros_diff_cols), _if_then_else(True, zeros_diff_rows, 0)))
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, _if_then_else(True, zeros_diff_rows, max_row_clue), 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(True, _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, or_(False, True)), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(compare_blocks_rows, ones_diff_rows))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, zeros_diff_cols))))
mul(mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(add(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, ones_diff_cols)))))
COND TREES:
ge(_if_then_else(or_(True, False), _if_then_else(True, compare_blocks_cols, compare_blocks_cols), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(_if_then_else(False, _if_then_else(False, ones_diff_cols, compare_blocks_cols), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, _if_then_else(True, zeros_diff_rows, max_col_clue), max_row_clue))), zeros_diff_rows), _if_then_else(False, _if_then_else(True, zeros_diff_cols, compare_blocks_rows), 4), _if_then_else(and_(False, False), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, max_row_clue))))
or_(True, True)
ge(_if_then_else(and_(False, le(ones_diff_cols, zeros_diff_cols)), _if_then_else(or_(and_(True, True), le(max_col_clue, 2)), _if_then_else(False, compare_blocks_rows, _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(True, max_row_clue, 2))), ones_diff_cols), 0), _if_then_else(le(2, _if_then_else(True, ones_diff_rows, compare_blocks_rows)), max_row_clue, ones_diff_cols))
or_(ge(zeros_diff_cols, _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(True, 4, 1))), or_(le(_if_then_else(and_(True, False), _if_then_else(False, ones_diff_rows, ones_diff_cols), max_row_clue), _if_then_else(False, 2, zeros_diff_cols)), and_(True, le(0, compare_blocks_cols))))
ge(_if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, _if_then_else(True, max_row_clue, zeros_diff_cols)), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols))), compare_blocks_rows)
VAL TREES:
mul(add(add(zeros_diff_cols, ones_diff_rows), mul(add(zeros_diff_rows, ones_diff_rows), zeros_diff_rows)), add(add(mul(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))))
mul(add(mul(mul(ones_diff_cols, compare_blocks_cols), ones_diff_cols), add(add(ones_diff_cols, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_rows))), add(add(mul(compare_blocks_cols, mul(zeros_diff_rows, ones_diff_rows)), add(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, zeros_diff_cols))))
mul(mul(mul(mul(compare_blocks_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows)), add(add(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols))), add(add(mul(compare_blocks_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)), add(mul(mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)), zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_rows))))
mul(mul(mul(ones_diff_cols, mul(zeros_diff_cols, zeros_diff_cols)), add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols))), add(mul(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, mul(ones_diff_rows, zeros_diff_cols))))
mul(add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(add(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)), ones_diff_rows)), add(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(add(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, zeros_diff_rows), mul(compare_blocks_cols, mul(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))))))
mul(add(mul(mul(ones_diff_cols, compare_blocks_rows), ones_diff_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_cols, add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_cols)))))
COND TREES:
and_(le(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, ones_diff_cols, max_col_clue)), le(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(False, 1, zeros_diff_cols)))
or_(or_(le(_if_then_else(or_(False, False), _if_then_else(False, ones_diff_rows, compare_blocks_rows), _if_then_else(True, ones_diff_rows, max_row_clue)), _if_then_else(ge(ones_diff_rows, 4), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(False, 4, ones_diff_rows))), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, _if_then_else(True, zeros_diff_cols, 4))), le(_if_then_else(True, compare_blocks_cols, _if_then_else(True, 0, max_row_clue)), _if_then_else(False, ones_diff_rows, 2)))), or_(or_(and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(le(ones_diff_cols, zeros_diff_rows), ge(max_col_clue, max_col_clue))), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(le(ones_diff_cols, zeros_diff_rows), ge(ones_diff_cols, max_col_clue)))))
or_(ge(max_col_clue, 0), le(zeros_diff_rows, 2))
or_(or_(ge(max_row_clue, _if_then_else(True, 3, 2)), and_(False, True)), ge(_if_then_else(True, 0, zeros_diff_cols), _if_then_else(False, 4, ones_diff_rows)))
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(True, _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), 0), _if_then_else(and_(ge(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(True, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(compare_blocks_rows, ones_diff_rows))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, zeros_diff_cols))))
mul(mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(add(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, ones_diff_cols)))))
COND TREES:
and_(le(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, ones_diff_cols, max_col_clue)), le(_if_then_else(True, zeros_diff_cols, max_col_clue), _if_then_else(le(_if_then_else(False, zeros_diff_cols, max_col_clue), _if_then_else(True, 1, ones_diff_rows)), max_col_clue, _if_then_else(True, 1, zeros_diff_rows))))
or_(or_(le(_if_then_else(or_(False, False), _if_then_else(False, ones_diff_rows, compare_blocks_rows), _if_then_else(True, ones_diff_rows, max_row_clue)), _if_then_else(ge(ones_diff_rows, 4), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(False, _if_then_else(True, max_row_clue, compare_blocks_rows), ones_diff_rows))), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2)))), or_(or_(ge(_if_then_else(True, 0, 3), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(le(ones_diff_cols, zeros_diff_rows), ge(max_col_clue, max_col_clue)))))
ge(compare_blocks_cols, _if_then_else(and_(le(max_row_clue, _if_then_else(False, compare_blocks_rows, max_col_clue)), or_(True, False)), compare_blocks_rows, _if_then_else(False, compare_blocks_cols, ones_diff_cols)))
or_(or_(ge(max_row_clue, ones_diff_cols), and_(False, True)), ge(0, _if_then_else(True, ones_diff_rows, 2)))
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(True, _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(ge(zeros_diff_cols, _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, max_row_clue, 3), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(compare_blocks_rows, ones_diff_rows))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, zeros_diff_cols))))
mul(mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(add(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, ones_diff_cols)))))
COND TREES:
and_(False, ge(ones_diff_cols, ones_diff_cols))
or_(or_(and_(False, False), or_(ge(4, _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2)))), or_(or_(ge(_if_then_else(True, 0, 3), 1), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(or_(le(zeros_diff_rows, 0), or_(True, True)), ge(max_col_clue, max_col_clue)))))
ge(compare_blocks_cols, _if_then_else(le(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 1, 4), _if_then_else(False, compare_blocks_cols, ones_diff_cols)))
True
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(True, _if_then_else(and_(False, True), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(True, _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), zeros_diff_cols))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_rows))), add(add(zeros_diff_rows, zeros_diff_cols), add(add(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, ones_diff_rows)), ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, ones_diff_cols)), ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(mul(compare_blocks_rows, zeros_diff_rows), mul(add(ones_diff_rows, ones_diff_rows), ones_diff_rows))), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(mul(mul(mul(add(compare_blocks_rows, ones_diff_cols), zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(add(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_cols))))
COND TREES:
and_(False, ge(ones_diff_cols, ones_diff_cols))
or_(or_(and_(False, False), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2)))), or_(or_(ge(_if_then_else(True, 0, 3), 1), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, ones_diff_rows, max_row_clue)), and_(or_(le(zeros_diff_rows, 0), or_(True, True)), ge(max_col_clue, max_col_clue)))))
ge(compare_blocks_cols, _if_then_else(le(max_row_clue, _if_then_else(or_(True, False), compare_blocks_rows, max_col_clue)), _if_then_else(False, 1, 4), _if_then_else(False, compare_blocks_cols, ones_diff_cols)))
True
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(True, _if_then_else(and_(False, True), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(True, _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(mul(compare_blocks_cols, zeros_diff_cols), add(add(ones_diff_rows, ones_diff_cols), zeros_diff_cols))
add(add(add(compare_blocks_cols, ones_diff_rows), add(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_rows))), add(add(zeros_diff_rows, zeros_diff_cols), add(add(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, ones_diff_rows)), ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, ones_diff_cols)), ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(add(ones_diff_cols, ones_diff_rows), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols))), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(mul(compare_blocks_rows, zeros_diff_rows), mul(add(ones_diff_rows, mul(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_rows, zeros_diff_rows))), ones_diff_rows))), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
mul(mul(mul(ones_diff_rows, add(add(compare_blocks_cols, zeros_diff_rows), mul(compare_blocks_rows, ones_diff_cols))), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_rows)), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(mul(mul(mul(add(compare_blocks_rows, ones_diff_cols), zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(add(zeros_diff_rows, ones_diff_rows), ones_diff_rows), add(add(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_cols))))
COND TREES:
and_(le(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, ones_diff_cols, max_col_clue)), le(_if_then_else(True, zeros_diff_cols, max_col_clue), _if_then_else(le(_if_then_else(False, zeros_diff_cols, max_col_clue), _if_then_else(True, 1, ones_diff_rows)), max_col_clue, _if_then_else(True, 1, zeros_diff_rows))))
or_(or_(le(_if_then_else(or_(False, False), _if_then_else(False, ones_diff_rows, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), _if_then_else(ge(ones_diff_rows, 4), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(False, 4, ones_diff_rows))), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2)))), or_(or_(ge(_if_then_else(True, 0, 3), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(le(ones_diff_cols, zeros_diff_rows), ge(max_col_clue, max_col_clue)))))
ge(compare_blocks_cols, _if_then_else(and_(le(zeros_diff_cols, zeros_diff_rows), False), compare_blocks_rows, _if_then_else(False, compare_blocks_cols, ones_diff_cols)))
or_(or_(ge(max_row_clue, ones_diff_cols), and_(False, True)), ge(0, _if_then_else(True, ones_diff_rows, 2)))
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(True, _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(ge(zeros_diff_cols, _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, max_row_clue, 3), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(compare_blocks_rows, ones_diff_rows))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, zeros_diff_cols))))
mul(mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(add(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, ones_diff_cols)))))
COND TREES:
and_(and_(True, False), le(_if_then_else(False, zeros_diff_cols, max_col_clue), _if_then_else(True, _if_then_else(and_(False, True), _if_then_else(True, max_row_clue, 2), _if_then_else(False, ones_diff_cols, max_col_clue)), ones_diff_rows)))
or_(or_(and_(False, False), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2)))), or_(or_(ge(_if_then_else(True, 0, 3), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), ge(_if_then_else(False, max_row_clue, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(True, 1, max_col_clue), 2), and_(le(ones_diff_cols, zeros_diff_rows), ge(max_col_clue, max_col_clue)))))
ge(compare_blocks_cols, _if_then_else(False, _if_then_else(False, _if_then_else(False, ones_diff_cols, max_row_clue), zeros_diff_cols), _if_then_else(False, compare_blocks_cols, ones_diff_cols)))
or_(or_(ge(_if_then_else(False, 4, ones_diff_rows), ones_diff_cols), and_(False, True)), ge(_if_then_else(True, 0, _if_then_else(or_(False, True), _if_then_else(True, ones_diff_rows, 1), _if_then_else(False, 0, zeros_diff_rows))), _if_then_else(True, 4, _if_then_else(False, compare_blocks_cols, 1))))
ge(_if_then_else(True, _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, _if_then_else(or_(False, True), _if_then_else(False, max_row_clue, compare_blocks_rows), _if_then_else(True, ones_diff_rows, max_col_clue)), compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(and_(False, le(_if_then_else(False, zeros_diff_cols, 3), 2)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(mul(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_rows))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_rows))), add(add(ones_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(mul(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols))), add(ones_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(mul(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, ones_diff_rows))
COND TREES:
le(_if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(le(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, ones_diff_cols, max_col_clue)), _if_then_else(le(zeros_diff_cols, max_row_clue), 1, max_row_clue), _if_then_else(False, 2, _if_then_else(ge(ones_diff_rows, 4), _if_then_else(True, 3, 0), _if_then_else(False, ones_diff_cols, zeros_diff_rows)))))
le(_if_then_else(or_(or_(ge(compare_blocks_cols, compare_blocks_cols), or_(False, True)), le(_if_then_else(True, 4, 0), _if_then_else(True, 3, compare_blocks_rows))), _if_then_else(or_(ge(4, 1), ge(3, 2)), _if_then_else(ge(max_col_clue, zeros_diff_cols), _if_then_else(and_(and_(False, True), False), _if_then_else(False, 4, _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(False, _if_then_else(False, ones_diff_rows, ones_diff_rows), max_col_clue)), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(ge(zeros_diff_cols, ones_diff_cols), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(True, max_row_clue, max_row_clue))), _if_then_else(le(_if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, compare_blocks_cols, 3)), _if_then_else(ge(max_row_clue, 1), _if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, ones_diff_cols, 0)), _if_then_else(or_(True, True), _if_then_else(False, 1, 3), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)))), _if_then_else(le(_if_then_else(and_(True, True), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(max_row_clue, 2), _if_then_else(False, 1, 0), _if_then_else(or_(True, True), _if_then_else(False, 1, 3), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)))), _if_then_else(ge(_if_then_else(True, ones_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(False, max_col_clue, 4), _if_then_else(True, 2, 4)), _if_then_else(ge(max_col_clue, 4), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 2, zeros_diff_rows))), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, 0), _if_then_else(or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(ge(zeros_diff_cols, ones_diff_cols), _if_then_else(le(_if_then_else(False, 0, max_col_clue), _if_then_else(False, 4, 2)), _if_then_else(False, 3, zeros_diff_rows), zeros_diff_cols), ones_diff_cols)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2))), 3, 2)), _if_then_else(and_(ge(2, 0), le(0, zeros_diff_rows)), _if_then_else(ge(max_row_clue, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(True, ones_diff_cols, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, max_row_clue, 1), _if_then_else(False, compare_blocks_rows, 0))), _if_then_else(le(2, ones_diff_rows), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_rows)))))
le(_if_then_else(or_(ge(_if_then_else(True, 0, compare_blocks_rows), _if_then_else(True, 2, ones_diff_cols)), ge(ones_diff_rows, zeros_diff_rows)), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 4, 1)), _if_then_else(le(max_col_clue, zeros_diff_cols), ones_diff_cols, _if_then_else(False, zeros_diff_cols, zeros_diff_cols)))
ge(_if_then_else(False, 4, compare_blocks_rows), _if_then_else(or_(ge(compare_blocks_rows, 3), ge(ones_diff_cols, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(True, ones_diff_rows, zeros_diff_rows)), _if_then_else(and_(True, False), compare_blocks_cols, _if_then_else(True, 4, compare_blocks_cols))))
or_(or_(ge(compare_blocks_cols, max_row_clue), and_(le(0, zeros_diff_cols), and_(True, True))), or_(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), ge(_if_then_else(ge(0, max_row_clue), _if_then_else(False, 3, ones_diff_cols), _if_then_else(True, 2, max_col_clue)), max_row_clue)))
VAL TREES:
mul(mul(mul(zeros_diff_rows, ones_diff_cols), zeros_diff_rows), add(add(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_rows)))
add(mul(add(mul(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_cols))), add(add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)))), add(mul(add(mul(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), add(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols))), mul(mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)))))
add(mul(add(mul(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(mul(compare_blocks_cols, compare_blocks_rows), compare_blocks_rows)))
add(mul(add(mul(add(compare_blocks_rows, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols))), mul(mul(add(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), mul(zeros_diff_cols, compare_blocks_cols))), mul(add(add(mul(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows))), mul(add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_rows)), add(add(zeros_diff_cols, compare_blocks_rows), add(ones_diff_cols, compare_blocks_cols)))))
mul(add(add(mul(add(compare_blocks_cols, ones_diff_rows), compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_rows, add(add(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, ones_diff_cols)))), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, ones_diff_rows)))
add(add(add(mul(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, add(compare_blocks_cols, ones_diff_cols))), add(compare_blocks_rows, ones_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_cols)))
COND TREES:
ge(_if_then_else(ge(4, _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(True, compare_blocks_cols, compare_blocks_cols), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), zeros_diff_rows), _if_then_else(False, _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, 1, 3)), _if_then_else(and_(le(compare_blocks_cols, zeros_diff_rows), False), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, max_row_clue))))
ge(_if_then_else(False, 1, compare_blocks_rows), _if_then_else(le(0, ones_diff_cols), _if_then_else(True, max_row_clue, ones_diff_rows), _if_then_else(ge(_if_then_else(True, 2, 3), _if_then_else(True, zeros_diff_cols, zeros_diff_cols)), zeros_diff_cols, ones_diff_cols)))
ge(_if_then_else(and_(ge(0, ones_diff_cols), le(ones_diff_cols, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, ones_diff_cols), ones_diff_cols), _if_then_else(ge(2, 3), ones_diff_cols, _if_then_else(False, max_row_clue, 3))), _if_then_else(le(compare_blocks_rows, _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(False, _if_then_else(True, max_row_clue, zeros_diff_rows), zeros_diff_cols), ones_diff_cols))
or_(ge(_if_then_else(le(0, ones_diff_cols), _if_then_else(False, 0, zeros_diff_cols), _if_then_else(True, 2, 1)), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(True, 4, 1))), or_(le(_if_then_else(True, 3, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)), and_(or_(True, True), False)))
ge(_if_then_else(le(0, 0), _if_then_else(False, 4, 4), _if_then_else(True, zeros_diff_rows, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(True, max_col_clue, _if_then_else(and_(False, True), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(False, 2, compare_blocks_cols))), max_row_clue))
VAL TREES:
mul(add(add(zeros_diff_cols, ones_diff_rows), mul(add(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols))), add(add(mul(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))))
mul(add(mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), add(add(ones_diff_cols, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_rows))), add(add(mul(compare_blocks_cols, mul(zeros_diff_rows, ones_diff_rows)), add(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, zeros_diff_cols))))
mul(mul(mul(mul(compare_blocks_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows)), add(add(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols))), add(add(mul(compare_blocks_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)), add(mul(mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)), zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols))))
mul(mul(mul(ones_diff_cols, mul(zeros_diff_cols, zeros_diff_cols)), add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols))), add(mul(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, mul(ones_diff_rows, zeros_diff_cols))))
mul(add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(add(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)), ones_diff_rows)), add(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(add(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_cols))))
mul(add(mul(ones_diff_cols, ones_diff_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_cols, add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_cols)))))
COND TREES:
and_(True, and_(True, True))
or_(or_(le(_if_then_else(or_(False, False), _if_then_else(ge(zeros_diff_rows, ones_diff_rows), ones_diff_rows, _if_then_else(or_(True, False), 1, ones_diff_cols)), _if_then_else(True, ones_diff_rows, max_row_clue)), _if_then_else(ge(ones_diff_rows, 4), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(False, 4, ones_diff_rows))), or_(ge(_if_then_else(True, 1, zeros_diff_rows), _if_then_else(False, 1, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2)))), or_(or_(ge(_if_then_else(True, 0, 3), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), le(_if_then_else(False, 3, 4), _if_then_else(False, zeros_diff_rows, compare_blocks_cols)))))
ge(zeros_diff_cols, _if_then_else(or_(True, le(_if_then_else(le(compare_blocks_cols, _if_then_else(False, 1, max_col_clue)), _if_then_else(True, zeros_diff_rows, 2), _if_then_else(ge(4, _if_then_else(or_(True, False), _if_then_else(or_(ge(4, compare_blocks_rows), or_(False, False)), max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, zeros_diff_rows))), max_row_clue, 1)), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, compare_blocks_cols, ones_diff_cols)))
or_(or_(False, and_(False, True)), and_(False, False))
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(True, _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, _if_then_else(True, zeros_diff_rows, 1), ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, max_row_clue, 3), _if_then_else(False, compare_blocks_cols, 2)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(le(max_col_clue, max_col_clue), 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(True, compare_blocks_rows, 3), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, _if_then_else(True, zeros_diff_rows, ones_diff_rows), zeros_diff_cols)), _if_then_else(or_(True, or_(False, True)), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(compare_blocks_rows, ones_diff_rows))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, zeros_diff_cols))))
mul(mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(add(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, ones_diff_cols)))))
COND TREES:
and_(ge(2, _if_then_else(True, _if_then_else(ge(4, ones_diff_cols), _if_then_else(True, max_row_clue, 2), _if_then_else(False, ones_diff_cols, zeros_diff_rows)), 0)), and_(False, False))
or_(or_(and_(False, False), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2)))), or_(or_(ge(_if_then_else(True, 0, 3), 1), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(True, compare_blocks_cols, 4), _if_then_else(False, 1, ones_diff_rows)), and_(or_(le(zeros_diff_rows, 0), ge(_if_then_else(True, 0, 3), _if_then_else(False, compare_blocks_rows, zeros_diff_cols))), ge(max_col_clue, _if_then_else(and_(True, True), _if_then_else(True, ones_diff_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, max_col_clue)))))))
ge(compare_blocks_cols, ones_diff_rows)
or_(and_(False, True), ge(1, zeros_diff_cols))
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(True, _if_then_else(and_(False, True), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(True, zeros_diff_cols, zeros_diff_rows)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_rows))), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(add(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_cols))))
COND TREES:
ge(_if_then_else(ge(max_row_clue, 3), _if_then_else(True, compare_blocks_cols, compare_blocks_cols), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, zeros_diff_rows), _if_then_else(False, _if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, 1, 3)), _if_then_else(le(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, ones_diff_cols, max_col_clue)), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, max_row_clue))))
ge(_if_then_else(ge(zeros_diff_rows, ones_diff_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 1, ones_diff_cols)), _if_then_else(le(0, ones_diff_cols), _if_then_else(True, max_row_clue, ones_diff_rows), _if_then_else(False, zeros_diff_cols, 3)))
ge(_if_then_else(and_(False, le(ones_diff_cols, zeros_diff_cols)), _if_then_else(le(max_row_clue, _if_then_else(False, compare_blocks_rows, max_col_clue)), _if_then_else(True, max_row_clue, zeros_diff_rows), ones_diff_cols), _if_then_else(ge(2, 3), ones_diff_cols, _if_then_else(False, max_row_clue, 3))), _if_then_else(le(compare_blocks_rows, _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(False, _if_then_else(or_(or_(False, False), or_(True, True)), max_row_clue, zeros_diff_rows), zeros_diff_cols), ones_diff_cols))
or_(ge(_if_then_else(False, 4, ones_diff_rows), _if_then_else(True, 2, 2)), or_(le(_if_then_else(True, 3, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)), and_(or_(True, True), le(0, compare_blocks_cols))))
ge(_if_then_else(le(0, 0), _if_then_else(True, compare_blocks_rows, 3), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(False, compare_blocks_rows, _if_then_else(ge(max_row_clue, max_col_clue), _if_then_else(True, ones_diff_rows, 0), _if_then_else(False, 0, ones_diff_rows))))
VAL TREES:
mul(add(add(zeros_diff_cols, ones_diff_rows), mul(add(zeros_diff_rows, ones_diff_rows), add(ones_diff_rows, compare_blocks_cols))), add(add(mul(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))))
mul(add(mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), add(add(ones_diff_cols, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_rows))), add(add(mul(compare_blocks_cols, mul(zeros_diff_rows, ones_diff_rows)), add(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, zeros_diff_cols))))
mul(mul(mul(mul(compare_blocks_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows)), add(add(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols))), add(add(mul(compare_blocks_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)), add(mul(mul(add(ones_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_cols)), zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols))))
mul(mul(mul(ones_diff_cols, mul(zeros_diff_cols, zeros_diff_cols)), add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols))), add(mul(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_cols, mul(ones_diff_rows, zeros_diff_cols))))
mul(add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(add(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)), ones_diff_rows)), add(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(add(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_cols))))
mul(add(mul(ones_diff_cols, ones_diff_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_cols, add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_cols)))))
COND TREES:
le(_if_then_else(ge(_if_then_else(le(4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(True, _if_then_else(ge(0, 2), _if_then_else(False, 4, ones_diff_cols), _if_then_else(True, compare_blocks_cols, 2)), max_row_clue)), 4), _if_then_else(False, ones_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), _if_then_else(and_(True, False), _if_then_else(True, 1, max_row_clue), _if_then_else(False, 2, compare_blocks_cols)))
le(_if_then_else(or_(or_(ge(compare_blocks_cols, compare_blocks_cols), or_(False, True)), le(_if_then_else(True, 4, 0), _if_then_else(True, 3, compare_blocks_rows))), _if_then_else(or_(ge(4, 1), ge(3, 2)), _if_then_else(ge(max_col_clue, zeros_diff_cols), _if_then_else(and_(and_(False, True), False), _if_then_else(False, 4, ones_diff_rows), _if_then_else(False, _if_then_else(True, compare_blocks_rows, zeros_diff_rows), max_col_clue)), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(ge(zeros_diff_cols, ones_diff_cols), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(True, max_row_clue, max_row_clue))), _if_then_else(le(_if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, compare_blocks_cols, 3)), _if_then_else(ge(max_row_clue, 1), _if_then_else(False, _if_then_else(or_(True, True), _if_then_else(True, 1, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_cols)), ones_diff_cols), _if_then_else(False, ones_diff_cols, 0)), _if_then_else(or_(True, True), _if_then_else(False, 1, 3), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)))), _if_then_else(le(_if_then_else(and_(True, True), _if_then_else(True, 1, max_col_clue), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(max_row_clue, 2), _if_then_else(False, 1, 0), _if_then_else(False, 2, zeros_diff_rows))), _if_then_else(ge(_if_then_else(True, ones_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, ones_diff_rows)), _if_then_else(ge(zeros_diff_cols, 3), _if_then_else(False, max_col_clue, 4), _if_then_else(True, 2, 4)), _if_then_else(ge(max_col_clue, 4), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 2, zeros_diff_rows))), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, 0), _if_then_else(False, 3, 2)), _if_then_else(True, _if_then_else(True, 3, ones_diff_rows), _if_then_else(False, 0, 3)), _if_then_else(le(2, ones_diff_rows), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_rows)))))
le(_if_then_else(ge(max_row_clue, ones_diff_rows), _if_then_else(False, zeros_diff_cols, 0), _if_then_else(False, max_col_clue, ones_diff_rows)), _if_then_else(le(max_col_clue, zeros_diff_cols), _if_then_else(ge(_if_then_else(le(compare_blocks_rows, _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(False, _if_then_else(True, max_row_clue, zeros_diff_rows), compare_blocks_cols), ones_diff_cols), _if_then_else(and_(False, True), _if_then_else(False, max_col_clue, 4), _if_then_else(False, max_col_clue, compare_blocks_cols))), _if_then_else(or_(and_(True, True), le(0, 2)), _if_then_else(and_(True, False), _if_then_else(False, 3, compare_blocks_rows), _if_then_else(le(ones_diff_rows, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(False, compare_blocks_rows, 1))), _if_then_else(le(compare_blocks_cols, 3), _if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(True, ones_diff_rows, 4))), _if_then_else(le(_if_then_else(False, 2, ones_diff_cols), _if_then_else(and_(True, True), max_col_clue, 0)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_cols, zeros_diff_cols), _if_then_else(False, ones_diff_cols, 3)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(True, max_col_clue, max_row_clue)))), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)))
ge(_if_then_else(ge(compare_blocks_cols, 4), _if_then_else(False, 0, _if_then_else(True, 4, max_row_clue)), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(and_(True, ge(0, max_row_clue)), _if_then_else(True, 4, 0), _if_then_else(and_(True, False), compare_blocks_cols, _if_then_else(False, zeros_diff_rows, max_col_clue))))
or_(ge(_if_then_else(True, max_col_clue, 3), _if_then_else(False, 4, max_row_clue)), or_(and_(False, le(_if_then_else(True, 1, 2), 2)), ge(compare_blocks_cols, max_row_clue)))
VAL TREES:
mul(mul(mul(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, compare_blocks_cols)), add(add(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_rows)))
add(mul(add(mul(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_cols))), add(add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)))), add(mul(add(mul(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), add(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols))), mul(mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)))))
add(mul(add(add(zeros_diff_cols, mul(compare_blocks_rows, zeros_diff_cols)), compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(mul(compare_blocks_cols, compare_blocks_rows), compare_blocks_rows)))
add(mul(add(mul(add(compare_blocks_rows, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols))), mul(mul(add(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(mul(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, compare_blocks_rows)))), mul(add(add(mul(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows))), mul(add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_rows)), add(add(zeros_diff_cols, compare_blocks_rows), add(ones_diff_cols, compare_blocks_cols)))))
mul(add(add(mul(add(compare_blocks_cols, ones_diff_rows), compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_rows, add(add(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, ones_diff_cols)))), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, ones_diff_rows)))
add(add(add(ones_diff_rows, mul(compare_blocks_rows, add(compare_blocks_cols, ones_diff_cols))), add(compare_blocks_rows, ones_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_cols)))
COND TREES:
and_(le(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, ones_diff_cols, max_col_clue)), ge(max_row_clue, _if_then_else(ge(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, compare_blocks_cols))))
or_(or_(le(_if_then_else(or_(False, False), _if_then_else(False, ones_diff_rows, compare_blocks_rows), compare_blocks_rows), _if_then_else(ge(ones_diff_rows, 4), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(False, 4, ones_diff_rows))), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, ones_diff_rows, 2)))), or_(or_(ge(_if_then_else(True, 0, 3), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(le(0, zeros_diff_rows), ge(_if_then_else(True, 1, max_col_clue), max_col_clue)))))
ge(zeros_diff_cols, _if_then_else(and_(False, True), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 0, 4)))
ge(_if_then_else(False, compare_blocks_rows, zeros_diff_cols), zeros_diff_rows)
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, max_row_clue, 3), 0), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, zeros_diff_cols), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(le(_if_then_else(False, 1, zeros_diff_rows), 4), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_rows))), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(add(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_cols))))
COND TREES:
and_(le(_if_then_else(True, max_col_clue, 0), _if_then_else(le(zeros_diff_cols, max_row_clue), 1, max_row_clue)), ge(ones_diff_rows, 4))
or_(or_(True, or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(or_(ge(max_row_clue, compare_blocks_rows), ge(4, compare_blocks_cols)), ones_diff_rows, 2)))), or_(or_(ge(_if_then_else(True, 0, 3), _if_then_else(le(max_row_clue, 1), _if_then_else(False, 3, 4), _if_then_else(False, 3, max_col_clue))), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(le(ones_diff_cols, zeros_diff_rows), False))))
or_(True, False)
or_(or_(ge(_if_then_else(False, compare_blocks_rows, _if_then_else(False, zeros_diff_cols, 4)), ones_diff_rows), and_(False, True)), ge(_if_then_else(True, 0, zeros_diff_cols), _if_then_else(True, ones_diff_rows, 2)))
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, _if_then_else(False, 3, 2)), _if_then_else(False, _if_then_else(or_(and_(True, False), True), _if_then_else(True, max_col_clue, 1), _if_then_else(True, zeros_diff_rows, max_row_clue)), 3), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), and_(le(0, zeros_diff_cols), and_(True, True))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(ge(compare_blocks_cols, max_row_clue), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(add(ones_diff_rows, ones_diff_cols), add(compare_blocks_cols, mul(zeros_diff_rows, ones_diff_cols))))
add(mul(compare_blocks_cols, ones_diff_cols), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, add(compare_blocks_rows, ones_diff_cols))))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(compare_blocks_cols, mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
ones_diff_cols
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(zeros_diff_cols, compare_blocks_rows)
COND TREES:
le(_if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(and_(True, False), _if_then_else(and_(and_(False, True), ge(1, 1)), ones_diff_cols, max_col_clue), _if_then_else(False, 2, _if_then_else(ge(ones_diff_rows, 4), _if_then_else(True, 3, 0), _if_then_else(False, ones_diff_cols, zeros_diff_rows)))))
le(_if_then_else(or_(or_(ge(compare_blocks_cols, compare_blocks_cols), or_(False, True)), le(_if_then_else(True, 4, 0), _if_then_else(True, 3, compare_blocks_rows))), _if_then_else(or_(ge(4, 1), ge(3, 2)), _if_then_else(ge(max_col_clue, zeros_diff_cols), _if_then_else(and_(and_(False, True), False), _if_then_else(False, 4, _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(False, _if_then_else(False, ones_diff_rows, ones_diff_rows), max_col_clue)), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(ge(zeros_diff_cols, ones_diff_cols), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(True, max_row_clue, max_row_clue))), _if_then_else(le(_if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, compare_blocks_cols, 3)), _if_then_else(ge(max_row_clue, 1), _if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, ones_diff_cols, 0)), _if_then_else(or_(True, True), _if_then_else(False, 1, 3), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)))), _if_then_else(le(_if_then_else(and_(True, True), _if_then_else(True, 1, max_col_clue), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(max_row_clue, 2), _if_then_else(False, 1, 0), _if_then_else(or_(True, True), _if_then_else(False, 1, 3), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)))), _if_then_else(ge(_if_then_else(True, ones_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(False, max_col_clue, 4), _if_then_else(True, 2, 4)), _if_then_else(ge(max_col_clue, 4), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 2, zeros_diff_rows))), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, 0), _if_then_else(or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(ge(zeros_diff_cols, ones_diff_cols), _if_then_else(le(_if_then_else(False, 0, max_col_clue), _if_then_else(False, 4, 2)), _if_then_else(False, 3, zeros_diff_rows), zeros_diff_cols), ones_diff_cols)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2))), 3, 2)), _if_then_else(and_(ge(2, 0), le(0, zeros_diff_rows)), _if_then_else(and_(True, True), _if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(True, ones_diff_cols, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, max_row_clue, 1), _if_then_else(False, compare_blocks_rows, 0))), _if_then_else(le(2, ones_diff_rows), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_rows)))))
le(_if_then_else(or_(ge(_if_then_else(True, 0, compare_blocks_rows), _if_then_else(True, 2, ones_diff_cols)), ge(ones_diff_rows, zeros_diff_rows)), _if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, zeros_diff_rows, 0)), _if_then_else(le(max_col_clue, zeros_diff_cols), ones_diff_cols, _if_then_else(False, zeros_diff_cols, zeros_diff_cols)))
ge(_if_then_else(False, 4, compare_blocks_rows), _if_then_else(or_(ge(compare_blocks_rows, 3), ge(ones_diff_cols, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(True, ones_diff_rows, zeros_diff_rows)), _if_then_else(and_(True, False), compare_blocks_cols, _if_then_else(True, 4, compare_blocks_cols))))
or_(or_(ge(compare_blocks_cols, max_row_clue), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), or_(and_(False, le(_if_then_else(False, zeros_diff_cols, 3), 2)), ge(_if_then_else(ge(0, max_row_clue), _if_then_else(False, 3, ones_diff_cols), _if_then_else(True, 2, max_col_clue)), max_row_clue)))
VAL TREES:
mul(mul(mul(zeros_diff_rows, ones_diff_cols), zeros_diff_rows), add(ones_diff_rows, zeros_diff_rows))
add(mul(add(mul(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_cols))), add(add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)))), add(mul(add(mul(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), add(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols))), mul(mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)), mul(ones_diff_rows, ones_diff_rows))))
add(mul(add(mul(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(mul(compare_blocks_cols, compare_blocks_rows), mul(mul(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_rows)))))
add(mul(add(mul(add(compare_blocks_rows, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols))), mul(mul(add(compare_blocks_rows, zeros_diff_rows), mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_cols)), mul(zeros_diff_cols, compare_blocks_cols))), mul(add(add(mul(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows))), mul(add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_rows)), add(add(zeros_diff_cols, compare_blocks_rows), add(ones_diff_cols, compare_blocks_cols)))))
mul(add(add(mul(add(zeros_diff_rows, ones_diff_cols), compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_rows, add(add(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, ones_diff_cols)))), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, ones_diff_rows)))
add(add(add(mul(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, add(compare_blocks_cols, ones_diff_cols))), add(compare_blocks_rows, ones_diff_cols)), add(add(mul(ones_diff_cols, ones_diff_cols), zeros_diff_cols), mul(ones_diff_rows, zeros_diff_cols)))
COND TREES:
and_(le(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(and_(False, False), ones_diff_cols, max_col_clue)), le(_if_then_else(or_(False, False), zeros_diff_cols, max_col_clue), _if_then_else(True, 1, ones_diff_rows)))
or_(or_(and_(False, False), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2)))), or_(or_(ge(_if_then_else(True, 0, 3), _if_then_else(ge(compare_blocks_rows, ones_diff_rows), _if_then_else(True, 2, 2), _if_then_else(True, 2, compare_blocks_cols))), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(False, 4, ones_diff_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(le(ones_diff_cols, zeros_diff_rows), ge(max_col_clue, max_col_clue)))))
ge(compare_blocks_cols, _if_then_else(ge(_if_then_else(True, 4, ones_diff_rows), _if_then_else(False, ones_diff_rows, 3)), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, compare_blocks_cols, _if_then_else(ge(4, zeros_diff_cols), max_row_clue, 1))))
or_(or_(False, and_(False, and_(or_(True, True), or_(True, True)))), ge(_if_then_else(True, 0, zeros_diff_cols), _if_then_else(False, 4, compare_blocks_cols)))
ge(_if_then_else(True, _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(ge(compare_blocks_rows, 1), _if_then_else(True, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, 0, ones_diff_cols)), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(mul(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_rows))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_rows))), add(add(ones_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(mul(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols))), add(ones_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(mul(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, ones_diff_rows))
COND TREES:
and_(le(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, ones_diff_cols, max_col_clue)), ge(max_row_clue, _if_then_else(True, 2, compare_blocks_cols)))
or_(or_(le(ones_diff_cols, _if_then_else(ge(ones_diff_rows, 4), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(False, 4, ones_diff_rows))), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2)))), or_(or_(ge(_if_then_else(True, 0, 3), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(le(0, zeros_diff_rows), ge(_if_then_else(True, 1, max_col_clue), max_col_clue)))))
ge(compare_blocks_cols, _if_then_else(and_(False, or_(True, False)), _if_then_else(False, 0, _if_then_else(False, compare_blocks_cols, ones_diff_cols)), _if_then_else(False, compare_blocks_cols, ones_diff_cols)))
or_(or_(True, and_(False, True)), ge(_if_then_else(False, 0, ones_diff_rows), _if_then_else(True, ones_diff_rows, 2)))
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols))), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(le(_if_then_else(False, 1, zeros_diff_rows), 4), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_rows))), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(add(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_cols))))
COND TREES:
and_(le(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)), le(_if_then_else(True, zeros_diff_cols, max_col_clue), _if_then_else(ge(ones_diff_cols, ones_diff_cols), max_col_clue, _if_then_else(True, 1, zeros_diff_rows))))
or_(or_(le(_if_then_else(or_(False, False), _if_then_else(False, ones_diff_rows, compare_blocks_rows), _if_then_else(True, ones_diff_rows, max_row_clue)), _if_then_else(ge(ones_diff_rows, 4), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(False, 4, ones_diff_rows))), or_(ge(_if_then_else(True, max_row_clue, _if_then_else(le(3, zeros_diff_cols), _if_then_else(True, 3, compare_blocks_rows), _if_then_else(True, 1, compare_blocks_cols))), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2)))), or_(or_(ge(_if_then_else(True, 0, 3), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), and_(and_(False, True), False)), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(le(ones_diff_cols, zeros_diff_rows), ge(max_col_clue, max_col_clue)))))
ge(compare_blocks_cols, _if_then_else(and_(le(zeros_diff_cols, zeros_diff_rows), or_(or_(True, True), False)), compare_blocks_rows, _if_then_else(False, zeros_diff_cols, 0)))
or_(or_(ge(max_row_clue, ones_diff_cols), and_(False, True)), ge(0, _if_then_else(and_(True, False), compare_blocks_cols, _if_then_else(False, _if_then_else(True, compare_blocks_rows, 4), max_col_clue))))
ge(_if_then_else(and_(and_(le(_if_then_else(True, 1, zeros_diff_cols), 2), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(True, _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(ge(zeros_diff_cols, _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, max_row_clue, 3), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(compare_blocks_rows, ones_diff_rows))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, zeros_diff_cols))))
mul(mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(add(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, ones_diff_cols)))))
COND TREES:
le(_if_then_else(ge(ones_diff_rows, 4), _if_then_else(ge(zeros_diff_cols, 4), ones_diff_cols, compare_blocks_cols), _if_then_else(False, ones_diff_cols, max_col_clue)), _if_then_else(and_(ge(zeros_diff_cols, max_col_clue), ge(4, zeros_diff_rows)), _if_then_else(True, 1, max_row_clue), _if_then_else(False, 2, compare_blocks_cols)))
le(_if_then_else(or_(or_(ge(compare_blocks_cols, compare_blocks_cols), or_(False, True)), le(_if_then_else(True, 4, 0), _if_then_else(True, 3, compare_blocks_rows))), _if_then_else(or_(ge(4, 1), ge(3, 2)), _if_then_else(ge(ones_diff_cols, zeros_diff_cols), _if_then_else(ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows)), _if_then_else(False, 4, _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(False, _if_then_else(True, compare_blocks_rows, zeros_diff_rows), max_col_clue)), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(ge(zeros_diff_cols, ones_diff_cols), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(True, 2, 1))), _if_then_else(le(_if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, compare_blocks_cols, 3)), _if_then_else(ge(max_row_clue, 1), _if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, ones_diff_cols, 0)), _if_then_else(or_(True, True), _if_then_else(False, 1, 3), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)))), _if_then_else(le(_if_then_else(and_(True, True), _if_then_else(True, 1, max_col_clue), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(max_row_clue, 2), _if_then_else(False, 1, 0), _if_then_else(False, 2, zeros_diff_rows))), _if_then_else(ge(_if_then_else(True, ones_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, ones_diff_rows)), _if_then_else(ge(zeros_diff_cols, 3), _if_then_else(False, max_col_clue, 4), _if_then_else(True, 2, 4)), _if_then_else(ge(max_col_clue, 4), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 2, zeros_diff_rows))), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, 0), _if_then_else(or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(ge(zeros_diff_cols, ones_diff_cols), _if_then_else(False, _if_then_else(False, 3, zeros_diff_rows), zeros_diff_cols), ones_diff_cols)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2))), 3, 2)), _if_then_else(ge(max_row_clue, zeros_diff_rows), _if_then_else(True, 3, ones_diff_rows), _if_then_else(False, 0, 3)), _if_then_else(le(2, ones_diff_rows), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_rows)))))
le(_if_then_else(ge(2, ones_diff_rows), _if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(False, 0, ones_diff_rows)), _if_then_else(le(max_col_clue, zeros_diff_cols), ones_diff_cols, _if_then_else(False, 0, 0)))
ge(_if_then_else(ge(compare_blocks_cols, 4), _if_then_else(False, 0, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(ge(max_row_clue, 0), _if_then_else(False, 4, _if_then_else(False, zeros_diff_cols, 4)), _if_then_else(True, ones_diff_rows, 2)))
or_(and_(or_(le(compare_blocks_rows, zeros_diff_cols), or_(False, False)), and_(False, False)), or_(and_(False, and_(False, False)), ge(compare_blocks_cols, max_row_clue)))
VAL TREES:
mul(mul(mul(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, compare_blocks_cols)), add(add(ones_diff_cols, compare_blocks_cols), mul(mul(ones_diff_rows, ones_diff_cols), zeros_diff_rows)))
add(mul(add(mul(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), add(add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)))), add(mul(add(mul(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), add(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols))), mul(mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)))))
add(mul(add(add(zeros_diff_cols, mul(compare_blocks_rows, zeros_diff_cols)), compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(add(compare_blocks_rows, zeros_diff_rows), mul(mul(compare_blocks_cols, compare_blocks_rows), compare_blocks_rows)))
add(mul(add(mul(add(compare_blocks_rows, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols))), mul(mul(add(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, compare_blocks_rows)))), mul(add(add(mul(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows))), mul(add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_rows)), add(add(zeros_diff_cols, compare_blocks_rows), add(ones_diff_cols, compare_blocks_cols)))))
mul(add(add(mul(add(compare_blocks_cols, ones_diff_rows), compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_rows, add(add(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, ones_diff_cols)))), mul(add(mul(mul(ones_diff_rows, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows)), ones_diff_rows), add(ones_diff_cols, ones_diff_rows)))
mul(add(compare_blocks_cols, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))
COND TREES:
and_(ge(_if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(ge(_if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(False, max_col_clue, max_col_clue)), compare_blocks_cols, 0)), le(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, ones_diff_cols, max_col_clue)))
or_(or_(and_(False, False), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(True, ones_diff_rows, max_row_clue)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, max_col_clue, 2)))), or_(or_(ge(_if_then_else(True, 0, 3), 1), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(or_(le(zeros_diff_rows, 0), and_(False, False)), ge(max_col_clue, max_col_clue)))))
ge(compare_blocks_cols, _if_then_else(le(_if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(False, compare_blocks_rows, max_col_clue)), _if_then_else(and_(False, True), _if_then_else(False, 1, _if_then_else(and_(True, True), _if_then_else(True, 3, 3), _if_then_else(False, 0, 1))), _if_then_else(False, compare_blocks_cols, ones_diff_cols)), _if_then_else(le(2, 0), compare_blocks_cols, ones_diff_cols)))
False
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(True, _if_then_else(and_(False, True), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), zeros_diff_rows), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, _if_then_else(False, compare_blocks_rows, 4), zeros_diff_cols)))), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(compare_blocks_cols, mul(ones_diff_rows, compare_blocks_cols)), add(add(ones_diff_rows, ones_diff_cols), add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(add(ones_diff_cols, mul(compare_blocks_cols, ones_diff_rows)), mul(ones_diff_cols, zeros_diff_rows))), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_cols))))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, mul(add(zeros_diff_rows, ones_diff_cols), mul(mul(mul(compare_blocks_cols, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), ones_diff_cols)))))
mul(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_cols))), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, add(compare_blocks_rows, ones_diff_cols)))), add(mul(ones_diff_cols, add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_cols))))
COND TREES:
and_(le(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, ones_diff_cols, max_col_clue)), le(_if_then_else(True, max_col_clue, max_row_clue), _if_then_else(False, 1, 4)))
or_(or_(le(_if_then_else(or_(False, False), _if_then_else(False, ones_diff_rows, compare_blocks_rows), _if_then_else(False, 4, ones_diff_rows)), _if_then_else(ge(ones_diff_rows, 4), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(False, 4, ones_diff_rows))), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, _if_then_else(True, 0, max_row_clue)), _if_then_else(False, ones_diff_rows, 2)))), or_(or_(and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(le(ones_diff_cols, zeros_diff_rows), ge(max_col_clue, max_col_clue))), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(le(ones_diff_cols, zeros_diff_rows), ge(max_col_clue, max_col_clue)))))
ge(compare_blocks_cols, _if_then_else(and_(and_(True, True), False), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, compare_blocks_cols, ones_diff_cols)))
or_(or_(ge(max_row_clue, compare_blocks_cols), and_(False, True)), ge(_if_then_else(True, 0, zeros_diff_cols), _if_then_else(False, 4, ones_diff_rows)))
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(True, _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), 0), _if_then_else(and_(ge(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(compare_blocks_rows, ones_diff_rows))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, zeros_diff_cols))))
mul(mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(add(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, ones_diff_cols)))))
COND TREES:
and_(le(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, ones_diff_cols, max_col_clue)), ge(max_row_clue, _if_then_else(True, 2, compare_blocks_cols)))
or_(or_(le(ones_diff_cols, _if_then_else(ge(ones_diff_rows, 4), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(False, 4, ones_diff_rows))), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2)))), or_(or_(ge(_if_then_else(True, 0, 3), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(le(0, zeros_diff_rows), ge(_if_then_else(True, 1, max_col_clue), max_col_clue)))))
ge(compare_blocks_cols, _if_then_else(and_(False, or_(True, False)), _if_then_else(False, 0, _if_then_else(False, compare_blocks_cols, ones_diff_cols)), _if_then_else(False, compare_blocks_cols, ones_diff_cols)))
or_(or_(True, and_(False, True)), ge(_if_then_else(False, 0, ones_diff_rows), _if_then_else(True, ones_diff_rows, 2)))
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols))), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(le(_if_then_else(False, 1, zeros_diff_rows), 4), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_rows))), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(add(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_cols))))
COND TREES:
ge(_if_then_else(or_(True, False), _if_then_else(True, compare_blocks_cols, compare_blocks_cols), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(_if_then_else(False, _if_then_else(False, ones_diff_cols, compare_blocks_cols), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, _if_then_else(True, zeros_diff_rows, max_col_clue), max_row_clue))), zeros_diff_rows), _if_then_else(False, _if_then_else(True, zeros_diff_cols, compare_blocks_rows), 4), _if_then_else(and_(False, False), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, max_row_clue))))
ge(compare_blocks_rows, _if_then_else(le(3, max_row_clue), _if_then_else(True, _if_then_else(False, compare_blocks_cols, 3), 4), _if_then_else(True, zeros_diff_cols, 4)))
ge(_if_then_else(and_(False, le(ones_diff_cols, zeros_diff_cols)), _if_then_else(or_(and_(True, True), le(0, 2)), _if_then_else(False, compare_blocks_rows, _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(True, max_row_clue, 2))), ones_diff_cols), 0), _if_then_else(le(2, _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(False, _if_then_else(False, 2, compare_blocks_rows), zeros_diff_cols), ones_diff_cols))
or_(ge(zeros_diff_cols, _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(True, 4, 1))), or_(le(_if_then_else(and_(True, False), _if_then_else(False, ones_diff_rows, ones_diff_cols), max_row_clue), _if_then_else(False, 2, zeros_diff_cols)), and_(ge(zeros_diff_rows, 3), le(0, compare_blocks_cols))))
ge(_if_then_else(False, zeros_diff_cols, zeros_diff_rows), compare_blocks_rows)
VAL TREES:
mul(add(add(zeros_diff_cols, ones_diff_rows), mul(add(zeros_diff_rows, ones_diff_rows), zeros_diff_rows)), add(add(mul(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, zeros_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))))
mul(add(mul(mul(ones_diff_cols, compare_blocks_cols), ones_diff_cols), add(add(ones_diff_cols, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_rows))), add(add(mul(compare_blocks_cols, mul(zeros_diff_rows, zeros_diff_rows)), add(ones_diff_cols, ones_diff_cols)), add(mul(compare_blocks_rows, zeros_diff_rows), add(ones_diff_cols, zeros_diff_cols))))
mul(mul(mul(mul(compare_blocks_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows)), add(add(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols))), add(add(mul(compare_blocks_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)), add(mul(mul(add(ones_diff_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols)), zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_rows))))
mul(mul(mul(ones_diff_cols, mul(zeros_diff_cols, zeros_diff_cols)), add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols))), add(mul(mul(add(compare_blocks_rows, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)), zeros_diff_cols), mul(compare_blocks_cols, mul(ones_diff_rows, zeros_diff_cols))))
mul(add(mul(mul(compare_blocks_rows, mul(zeros_diff_rows, compare_blocks_cols)), mul(add(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)), ones_diff_rows)), add(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(add(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, zeros_diff_rows), mul(compare_blocks_cols, mul(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))))))
mul(add(mul(mul(ones_diff_cols, compare_blocks_rows), ones_diff_rows), add(ones_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_cols, add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_cols)))))
COND TREES:
le(_if_then_else(ge(ones_diff_rows, 1), _if_then_else(and_(or_(False, False), and_(True, True)), ones_diff_cols, compare_blocks_cols), _if_then_else(False, _if_then_else(False, zeros_diff_cols, 2), zeros_diff_rows)), _if_then_else(and_(True, False), _if_then_else(True, 1, _if_then_else(True, max_row_clue, 0)), _if_then_else(True, 2, compare_blocks_cols)))
le(_if_then_else(or_(or_(ge(compare_blocks_cols, compare_blocks_cols), or_(False, True)), le(_if_then_else(True, 4, 0), _if_then_else(True, 3, compare_blocks_rows))), _if_then_else(or_(ge(4, 1), ge(3, 2)), _if_then_else(ge(max_col_clue, zeros_diff_cols), _if_then_else(and_(and_(False, True), True), _if_then_else(False, 4, _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(False, _if_then_else(True, compare_blocks_rows, zeros_diff_rows), max_col_clue)), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(ge(zeros_diff_cols, ones_diff_cols), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(True, max_row_clue, max_row_clue))), _if_then_else(le(_if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, compare_blocks_cols, 3)), _if_then_else(ge(max_row_clue, 1), _if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, ones_diff_cols, 0)), _if_then_else(or_(True, True), _if_then_else(False, 1, 3), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)))), _if_then_else(le(_if_then_else(and_(True, True), _if_then_else(True, 1, max_col_clue), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(max_row_clue, 2), _if_then_else(False, 1, 0), _if_then_else(False, 2, zeros_diff_rows))), _if_then_else(ge(3, _if_then_else(True, ones_diff_cols, ones_diff_rows)), _if_then_else(ge(zeros_diff_cols, 3), _if_then_else(False, max_col_clue, 4), _if_then_else(True, 2, 4)), _if_then_else(ge(max_col_clue, 4), _if_then_else(True, max_col_clue, compare_blocks_cols), _if_then_else(True, 2, zeros_diff_rows))), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, 0), _if_then_else(or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(ge(zeros_diff_cols, ones_diff_cols), _if_then_else(False, _if_then_else(False, 3, zeros_diff_rows), zeros_diff_cols), ones_diff_cols)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2))), 3, 2)), _if_then_else(ge(max_row_clue, zeros_diff_rows), _if_then_else(True, 3, ones_diff_rows), _if_then_else(False, 0, 3)), _if_then_else(le(2, ones_diff_rows), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_rows)))))
le(_if_then_else(ge(_if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(True, compare_blocks_cols, max_row_clue)), _if_then_else(False, zeros_diff_cols, 0), _if_then_else(False, max_col_clue, ones_diff_rows)), _if_then_else(le(max_col_clue, zeros_diff_cols), ones_diff_cols, _if_then_else(False, zeros_diff_cols, zeros_diff_cols)))
ge(_if_then_else(ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), 4), _if_then_else(False, 0, ones_diff_rows), _if_then_else(or_(ge(compare_blocks_rows, 3), ge(ones_diff_cols, zeros_diff_cols)), zeros_diff_rows, 4)), _if_then_else(and_(True, ge(0, max_row_clue)), _if_then_else(True, 4, _if_then_else(False, zeros_diff_cols, 4)), _if_then_else(ge(_if_then_else(False, 2, ones_diff_rows), _if_then_else(False, max_row_clue, max_row_clue)), zeros_diff_cols, zeros_diff_cols)))
or_(or_(le(ones_diff_rows, 4), and_(and_(or_(True, True), and_(True, False)), and_(True, True))), or_(and_(False, le(_if_then_else(or_(False, True), 1, zeros_diff_cols), 2)), ge(compare_blocks_cols, max_col_clue)))
VAL TREES:
mul(mul(mul(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, compare_blocks_cols)), add(add(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_rows)))
add(mul(add(mul(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_cols))), add(add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)))), add(mul(add(mul(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), add(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols))), mul(mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)))))
add(mul(add(add(zeros_diff_cols, mul(compare_blocks_rows, zeros_diff_cols)), compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(mul(compare_blocks_cols, compare_blocks_rows), compare_blocks_rows)))
add(mul(add(mul(add(compare_blocks_rows, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols))), mul(mul(add(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), add(mul(ones_diff_cols, zeros_diff_rows), add(compare_blocks_cols, compare_blocks_rows)))), mul(add(add(mul(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows))), mul(add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_rows)), add(add(zeros_diff_cols, compare_blocks_rows), add(ones_diff_cols, compare_blocks_cols)))))
mul(add(add(mul(add(compare_blocks_cols, ones_diff_rows), compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_rows, add(add(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, ones_diff_cols)))), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, ones_diff_rows)))
add(add(add(ones_diff_rows, mul(compare_blocks_rows, add(compare_blocks_cols, ones_diff_cols))), add(compare_blocks_rows, ones_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_cols)))
COND TREES:
and_(le(_if_then_else(True, max_col_clue, 0), _if_then_else(and_(and_(False, True), ge(1, 1)), ones_diff_cols, max_col_clue)), ge(ones_diff_rows, 4))
or_(or_(True, or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(or_(and_(True, True), ge(4, compare_blocks_cols)), ones_diff_rows, 2)))), or_(or_(ge(_if_then_else(True, 0, 3), _if_then_else(le(max_row_clue, 1), _if_then_else(False, 3, 4), _if_then_else(False, 3, max_col_clue))), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(le(ones_diff_cols, zeros_diff_rows), False))))
or_(True, False)
or_(or_(ge(_if_then_else(False, compare_blocks_rows, _if_then_else(False, zeros_diff_cols, 4)), ones_diff_rows), and_(False, True)), ge(_if_then_else(True, 0, zeros_diff_cols), _if_then_else(True, ones_diff_rows, 2)))
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, _if_then_else(False, 3, 2)), _if_then_else(False, _if_then_else(or_(and_(True, False), True), _if_then_else(True, max_col_clue, 1), _if_then_else(True, zeros_diff_rows, max_row_clue)), 3), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(ge(compare_blocks_cols, max_row_clue), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(add(ones_diff_rows, ones_diff_cols), add(compare_blocks_cols, mul(zeros_diff_rows, add(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows))))))
add(mul(compare_blocks_cols, ones_diff_cols), add(add(zeros_diff_rows, zeros_diff_cols), add(add(mul(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_rows)), ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, add(compare_blocks_rows, ones_diff_cols))))), mul(add(mul(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows)), add(compare_blocks_cols, mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(zeros_diff_rows, compare_blocks_rows)
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(ones_diff_rows, zeros_diff_rows), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(mul(ones_diff_rows, mul(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_rows, ones_diff_rows))), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(zeros_diff_cols, compare_blocks_cols)
COND TREES:
and_(le(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, ones_diff_cols, max_col_clue)), le(ones_diff_cols, _if_then_else(True, 1, ones_diff_rows)))
or_(or_(and_(False, False), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2)))), or_(or_(ge(_if_then_else(True, 0, 3), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, compare_blocks_cols, zeros_diff_rows))), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(le(ones_diff_cols, zeros_diff_rows), ge(max_col_clue, max_col_clue)))))
ge(compare_blocks_cols, _if_then_else(False, _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_rows)))
or_(or_(ge(_if_then_else(False, 4, ones_diff_rows), ones_diff_cols), and_(False, True)), ge(_if_then_else(True, 0, zeros_diff_cols), _if_then_else(False, 4, compare_blocks_cols)))
ge(_if_then_else(True, _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(mul(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_rows))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_rows))), add(add(ones_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(mul(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(add(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols))), add(ones_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(mul(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, ones_diff_rows))
COND TREES:
or_(and_(and_(or_(le(zeros_diff_cols, zeros_diff_cols), and_(True, True)), True), le(_if_then_else(le(1, zeros_diff_cols), _if_then_else(False, 0, 1), _if_then_else(True, ones_diff_cols, 3)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_rows, ones_diff_cols)))), True)
ge(_if_then_else(or_(or_(False, True), and_(and_(False, False), le(ones_diff_cols, ones_diff_cols))), _if_then_else(False, 4, 3), _if_then_else(True, 4, 2)), _if_then_else(ge(zeros_diff_cols, ones_diff_cols), _if_then_else(False, _if_then_else(False, 3, zeros_diff_rows), zeros_diff_cols), _if_then_else(False, _if_then_else(False, 3, 0), compare_blocks_rows)))
or_(le(max_row_clue, _if_then_else(and_(False, False), _if_then_else(True, 4, 3), _if_then_else(True, compare_blocks_cols, ones_diff_cols))), or_(ge(compare_blocks_rows, 2), le(_if_then_else(False, max_row_clue, 1), _if_then_else(False, 3, 3))))
le(_if_then_else(or_(True, True), _if_then_else(True, max_row_clue, _if_then_else(False, 2, compare_blocks_cols)), _if_then_else(or_(False, ge(zeros_diff_cols, compare_blocks_cols)), 0, _if_then_else(False, max_row_clue, _if_then_else(False, zeros_diff_rows, compare_blocks_rows)))), _if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, ones_diff_rows, compare_blocks_cols)), _if_then_else(True, _if_then_else(False, max_row_clue, compare_blocks_cols), _if_then_else(True, 4, compare_blocks_cols))), _if_then_else(False, _if_then_else(True, max_col_clue, _if_then_else(False, 2, compare_blocks_rows)), 3), _if_then_else(False, _if_then_else(and_(False, False), _if_then_else(False, 1, ones_diff_cols), 1), _if_then_else(True, _if_then_else(False, max_row_clue, 4), max_row_clue))))
and_(and_(True, or_(False, or_(ge(max_row_clue, 1), ge(3, max_col_clue)))), le(compare_blocks_cols, zeros_diff_rows))
VAL TREES:
add(add(ones_diff_rows, add(compare_blocks_cols, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)))
mul(mul(add(ones_diff_rows, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_cols)), ones_diff_rows)
add(ones_diff_rows, add(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_rows)))
add(mul(mul(zeros_diff_rows, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), add(mul(mul(ones_diff_rows, mul(add(ones_diff_rows, compare_blocks_cols), compare_blocks_rows)), ones_diff_cols), add(ones_diff_cols, mul(zeros_diff_rows, zeros_diff_cols))))
add(add(mul(zeros_diff_rows, zeros_diff_rows), mul(mul(compare_blocks_cols, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_cols))), add(mul(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows)))
add(add(mul(ones_diff_cols, zeros_diff_rows), add(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))), mul(add(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols))))
COND TREES:
and_(ge(_if_then_else(False, max_row_clue, zeros_diff_cols), _if_then_else(ge(_if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(True, max_col_clue, max_row_clue)), compare_blocks_cols, 0)), le(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, ones_diff_cols, max_col_clue)))
or_(or_(and_(False, False), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, 4, ones_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, max_col_clue, 2)))), or_(or_(ge(_if_then_else(True, 0, 3), 1), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(or_(le(zeros_diff_rows, 0), and_(False, False)), ge(max_col_clue, max_col_clue)))))
ge(compare_blocks_cols, _if_then_else(le(_if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(False, compare_blocks_rows, max_col_clue)), _if_then_else(and_(False, True), _if_then_else(False, 1, _if_then_else(and_(True, True), _if_then_else(True, 3, 3), _if_then_else(False, 0, 1))), _if_then_else(False, compare_blocks_cols, ones_diff_cols)), _if_then_else(False, compare_blocks_cols, ones_diff_cols)))
False
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(True, _if_then_else(and_(False, True), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), zeros_diff_rows), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, _if_then_else(False, compare_blocks_rows, 4), zeros_diff_cols)))), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_cols)), add(add(ones_diff_rows, ones_diff_cols), add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(add(ones_diff_cols, mul(zeros_diff_rows, ones_diff_rows)), mul(ones_diff_cols, zeros_diff_rows))), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_cols))))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, mul(add(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, ones_diff_cols)))))
mul(mul(mul(zeros_diff_cols, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(ones_diff_cols, add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_cols))))
COND TREES:
and_(le(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, ones_diff_cols, max_col_clue)), ge(max_row_clue, _if_then_else(True, 2, compare_blocks_cols)))
or_(or_(le(ones_diff_cols, _if_then_else(ge(ones_diff_rows, 4), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(False, 4, ones_diff_rows))), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2)))), or_(or_(ge(_if_then_else(True, 0, 3), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(le(0, zeros_diff_rows), ge(_if_then_else(True, 1, max_col_clue), max_col_clue)))))
ge(compare_blocks_cols, _if_then_else(and_(False, or_(True, False)), _if_then_else(False, 0, _if_then_else(False, compare_blocks_cols, ones_diff_cols)), _if_then_else(False, compare_blocks_cols, ones_diff_cols)))
or_(or_(True, and_(False, True)), ge(_if_then_else(False, 0, ones_diff_rows), _if_then_else(True, ones_diff_rows, 2)))
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols))), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(le(_if_then_else(False, 1, zeros_diff_rows), 4), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_rows))), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(add(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_cols))))
COND TREES:
and_(False, and_(False, False))
or_(or_(le(_if_then_else(or_(False, False), _if_then_else(or_(ge(compare_blocks_cols, compare_blocks_cols), or_(False, True)), ones_diff_rows, _if_then_else(True, ones_diff_rows, max_row_clue)), _if_then_else(True, ones_diff_rows, max_row_clue)), _if_then_else(ge(ones_diff_rows, 4), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(False, 4, ones_diff_rows))), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2)))), or_(or_(and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(le(ones_diff_cols, zeros_diff_rows), ge(max_col_clue, max_col_clue))), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(le(ones_diff_cols, zeros_diff_rows), ge(max_col_clue, max_col_clue)))))
ge(compare_blocks_cols, _if_then_else(and_(False, True), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, compare_blocks_cols, ones_diff_cols)))
or_(or_(ge(max_row_clue, compare_blocks_cols), and_(False, True)), ge(_if_then_else(True, 0, zeros_diff_cols), _if_then_else(False, 4, ones_diff_cols)))
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(True, _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, max_row_clue, 0), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), max_row_clue)), _if_then_else(and_(ge(_if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, add(add(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols))), add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))))
add(add(add(compare_blocks_cols, compare_blocks_cols), compare_blocks_rows), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), ones_diff_rows), add(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(compare_blocks_rows, mul(zeros_diff_cols, ones_diff_rows))), add(compare_blocks_rows, ones_diff_rows))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), zeros_diff_cols), add(ones_diff_rows, add(compare_blocks_cols, zeros_diff_cols))))
mul(mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, ones_diff_cols)))))
COND TREES:
le(_if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(and_(True, le(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, ones_diff_cols, max_col_clue))), _if_then_else(le(zeros_diff_cols, max_row_clue), 1, max_row_clue), _if_then_else(False, 2, _if_then_else(ge(ones_diff_rows, 4), _if_then_else(True, 3, 0), _if_then_else(False, ones_diff_cols, zeros_diff_rows)))))
le(_if_then_else(or_(False, le(_if_then_else(True, 4, 0), _if_then_else(True, 3, compare_blocks_rows))), _if_then_else(or_(ge(4, 1), ge(3, 2)), _if_then_else(ge(max_col_clue, zeros_diff_cols), _if_then_else(and_(and_(False, True), False), _if_then_else(False, 4, _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(False, _if_then_else(False, ones_diff_rows, ones_diff_rows), max_col_clue)), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(ge(zeros_diff_cols, ones_diff_cols), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(True, max_row_clue, max_row_clue))), _if_then_else(le(_if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, compare_blocks_cols, 3)), _if_then_else(ge(max_row_clue, 1), _if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(False, ones_diff_cols, 0)), _if_then_else(or_(True, True), _if_then_else(False, 1, 3), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)))), _if_then_else(le(_if_then_else(and_(True, True), _if_then_else(True, 1, max_col_clue), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(ge(max_row_clue, 2), _if_then_else(False, 1, 0), _if_then_else(or_(True, True), _if_then_else(False, 1, 3), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)))), _if_then_else(ge(_if_then_else(True, ones_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(False, max_col_clue, 4), _if_then_else(True, 2, 4)), _if_then_else(ge(max_col_clue, 4), _if_then_else(True, zeros_diff_cols, zeros_diff_cols), _if_then_else(True, 2, zeros_diff_rows))), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, 0), _if_then_else(or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(ge(zeros_diff_cols, ones_diff_cols), _if_then_else(le(_if_then_else(False, 0, max_col_clue), _if_then_else(False, 4, 2)), _if_then_else(False, 3, zeros_diff_rows), zeros_diff_cols), ones_diff_cols)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2))), 3, 2)), _if_then_else(and_(ge(2, 0), le(0, zeros_diff_rows)), _if_then_else(ge(max_row_clue, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(True, ones_diff_cols, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, max_row_clue, 1), _if_then_else(False, compare_blocks_rows, 0))), _if_then_else(le(2, ones_diff_rows), _if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(False, ones_diff_cols, compare_blocks_rows)))))
le(_if_then_else(or_(ge(_if_then_else(or_(True, False), 0, compare_blocks_rows), _if_then_else(True, 2, ones_diff_cols)), ge(ones_diff_rows, zeros_diff_rows)), _if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 4, 1)), _if_then_else(le(max_col_clue, zeros_diff_cols), ones_diff_cols, _if_then_else(False, zeros_diff_cols, zeros_diff_cols)))
ge(_if_then_else(False, 4, compare_blocks_rows), _if_then_else(or_(ge(compare_blocks_rows, 3), ge(ones_diff_cols, ones_diff_rows)), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(True, ones_diff_rows, zeros_diff_rows)), _if_then_else(and_(True, False), compare_blocks_cols, _if_then_else(True, 4, compare_blocks_cols))))
or_(or_(ge(compare_blocks_cols, max_row_clue), and_(le(0, zeros_diff_cols), and_(True, True))), or_(and_(False, le(_if_then_else(False, zeros_diff_cols, 3), 2)), ge(_if_then_else(ge(3, max_row_clue), _if_then_else(False, 3, ones_diff_cols), _if_then_else(True, 2, max_col_clue)), max_row_clue)))
VAL TREES:
mul(mul(mul(zeros_diff_rows, ones_diff_cols), zeros_diff_rows), add(add(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_rows)))
add(mul(add(mul(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_cols))), add(add(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)))), add(mul(add(mul(ones_diff_rows, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), add(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols))), mul(mul(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols)))))
add(mul(add(mul(zeros_diff_rows, zeros_diff_cols), compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(add(zeros_diff_rows, zeros_diff_rows), mul(mul(compare_blocks_cols, compare_blocks_rows), compare_blocks_rows)))
add(mul(add(mul(add(compare_blocks_rows, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_cols))), mul(mul(add(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_cols)), mul(zeros_diff_cols, compare_blocks_cols))), mul(add(add(mul(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows))), mul(add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, compare_blocks_rows)), add(add(zeros_diff_cols, compare_blocks_rows), add(ones_diff_cols, compare_blocks_cols)))))
mul(add(add(mul(add(compare_blocks_cols, ones_diff_rows), compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_rows, add(add(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, ones_diff_cols)))), mul(add(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, ones_diff_rows)))
add(add(add(mul(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, add(compare_blocks_cols, ones_diff_cols))), add(compare_blocks_rows, ones_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_cols)))
COND TREES:
and_(le(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, ones_diff_cols, max_col_clue)), le(_if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, ones_diff_cols, max_col_clue)))
or_(or_(le(ones_diff_cols, _if_then_else(ge(ones_diff_rows, 4), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(False, 4, ones_diff_rows))), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_rows, 2)))), or_(or_(ge(_if_then_else(True, 0, 3), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(le(0, zeros_diff_rows), ge(_if_then_else(True, 1, max_col_clue), max_col_clue)))))
ge(compare_blocks_cols, _if_then_else(and_(False, or_(True, False)), _if_then_else(False, 0, _if_then_else(and_(False, True), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, 0, 4))), _if_then_else(False, compare_blocks_cols, ones_diff_cols)))
or_(or_(True, and_(False, True)), ge(_if_then_else(False, 0, ones_diff_rows), _if_then_else(True, ones_diff_rows, 2)))
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols))), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(le(_if_then_else(False, 1, zeros_diff_rows), 4), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(ge(max_row_clue, ones_diff_cols), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), add(add(add(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, zeros_diff_rows)), ones_diff_cols), add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(add(ones_diff_cols, ones_diff_cols), mul(mul(mul(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, zeros_diff_rows)), zeros_diff_rows))), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(mul(mul(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, zeros_diff_rows)), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(mul(mul(zeros_diff_rows, ones_diff_cols), mul(compare_blocks_rows, compare_blocks_cols)), compare_blocks_rows), zeros_diff_cols), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
add(add(zeros_diff_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows))
mul(mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(add(zeros_diff_rows, ones_diff_rows), zeros_diff_rows), add(add(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_cols))))
COND TREES:
and_(ge(max_row_clue, _if_then_else(True, 2, compare_blocks_cols)), ge(max_row_clue, _if_then_else(ge(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, compare_blocks_cols))))
or_(or_(le(_if_then_else(or_(False, False), _if_then_else(False, ones_diff_rows, compare_blocks_rows), compare_blocks_rows), _if_then_else(ge(ones_diff_rows, 4), _if_then_else(True, max_col_clue, zeros_diff_rows), _if_then_else(False, 4, ones_diff_rows))), or_(ge(_if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), le(_if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, ones_diff_rows, 2)))), or_(or_(ge(_if_then_else(True, 0, 3), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), and_(le(_if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_rows)), and_(le(0, zeros_diff_rows), ge(_if_then_else(True, 1, max_col_clue), max_col_clue)))))
ge(compare_blocks_cols, _if_then_else(False, compare_blocks_cols, ones_diff_cols))
ge(0, zeros_diff_rows)
ge(_if_then_else(and_(and_(and_(False, False), or_(True, True)), ge(_if_then_else(True, zeros_diff_rows, 1), _if_then_else(True, zeros_diff_rows, zeros_diff_rows))), _if_then_else(and_(le(0, zeros_diff_cols), and_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, ones_diff_cols, max_row_clue), _if_then_else(True, compare_blocks_rows, ones_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_cols, 2), _if_then_else(False, 0, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, max_col_clue, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(False, max_row_clue, 3), 0), _if_then_else(le(1, compare_blocks_rows), _if_then_else(True, 3, 2), _if_then_else(False, max_col_clue, 0)))), _if_then_else(and_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 2)), ge(_if_then_else(False, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, zeros_diff_cols))), _if_then_else(le(_if_then_else(False, 1, zeros_diff_rows), 4), _if_then_else(le(ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(False, max_row_clue, 3), _if_then_else(True, ones_diff_cols, 4))), _if_then_else(and_(le(compare_blocks_cols, ones_diff_cols), or_(False, True)), _if_then_else(ge(1, zeros_diff_rows), _if_then_else(True, 2, 3), _if_then_else(False, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(False, 2, zeros_diff_cols)))))
VAL TREES:
add(add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows)), add(add(ones_diff_rows, ones_diff_cols), add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))))
add(add(add(compare_blocks_cols, compare_blocks_cols), add(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_rows))), add(add(zeros_diff_rows, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(mul(mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), mul(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows))), add(mul(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), zeros_diff_cols), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_rows)))
mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(mul(zeros_diff_cols, ones_diff_cols), zeros_diff_cols)), add(mul(mul(compare_blocks_rows, zeros_diff_cols), mul(mul(mul(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_cols)), zeros_diff_rows)), add(ones_diff_rows, add(compare_blocks_cols, ones_diff_cols))))
mul(mul(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, compare_blocks_rows))), add(mul(add(zeros_diff_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_cols))))


INFO:root:hof: COND TREES:
ge(_if_then_else(ge(_if_then_else(ge(4, max_row_clue), _if_then_else(True, ones_diff_rows, 3), _if_then_else(True, 0, 4)), _if_then_else(le(0, max_col_clue), _if_then_else(False, 2, 3), _if_then_else(False, max_row_clue, compare_blocks_rows))), _if_then_else(le(_if_then_else(True, 4, 1), _if_then_else(False, 3, compare_blocks_cols)), _if_then_else(and_(False, True), _if_then_else(True, ones_diff_rows, 0), _if_then_else(False, zeros_diff_cols, max_row_clue)), _if_then_else(le(0, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 2), _if_then_else(True, compare_blocks_cols, 4))), _if_then_else(or_(ge(zeros_diff_rows, max_row_clue), le(ones_diff_rows, max_row_clue)), _if_then_else(le(compare_blocks_cols, 3), _if_then_else(False, 0, compare_blocks_cols), _if_then_else(False, 1, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(True, 2, ones_diff_rows), _if_then_else(True, 3, 0)))), _if_then_else(and_(or_(or_(False, False), or_(True, True)), ge(_if_then_else(True, compare_blocks_cols, 2), _if_then_else(True, ones_diff_rows, zeros_diff_cols))), _if_then_else(le(_if_then_else(False, ones_diff_rows, 4), _if_then_else(True, max_col_clue, max_row_clue)), _if_then_else(and_(True, False), _if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(True, 4, ones_diff_cols)), _if_then_else(le(max_col_clue, zeros_diff_rows), _if_then_else(True, 1, max_row_clue), _if_then_else(False, 1, 1))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, 0), _if_then_else(False, 1, ones_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, 0, ones_diff_rows), _if_then_else(False, max_row_clue, 1)), _if_then_else(le(max_row_clue, 0), _if_then_else(True, 0, max_col_clue), _if_then_else(True, 2, max_col_clue)))))
or_(and_(or_(ge(_if_then_else(True, max_col_clue, 0), _if_then_else(True, compare_blocks_rows, 4)), or_(ge(0, 1), or_(False, True))), le(_if_then_else(ge(2, zeros_diff_rows), _if_then_else(False, 1, 3), _if_then_else(True, zeros_diff_rows, 3)), _if_then_else(le(4, compare_blocks_cols), _if_then_else(True, ones_diff_rows, 1), _if_then_else(True, 1, 3)))), and_(and_(ge(_if_then_else(False, zeros_diff_cols, 3), _if_then_else(True, zeros_diff_rows, zeros_diff_cols)), le(_if_then_else(True, 1, max_col_clue), _if_then_else(False, ones_diff_cols, 1))), or_(or_(and_(False, False), or_(False, True)), or_(and_(True, True), le(zeros_diff_rows, compare_blocks_cols)))))
and_(le(_if_then_else(le(4, max_row_clue), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(False, max_row_clue, zeros_diff_rows)), _if_then_else(le(compare_blocks_cols, 3), _if_then_else(False, zeros_diff_cols, max_row_clue), _if_then_else(True, 1, ones_diff_cols))), le(_if_then_else(le(max_row_clue, ones_diff_cols), _if_then_else(True, 3, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, max_col_clue)), _if_then_else(le(compare_blocks_cols, ones_diff_rows), _if_then_else(False, 3, ones_diff_rows), _if_then_else(False, 1, ones_diff_cols))))
le(_if_then_else(ge(0, compare_blocks_cols), _if_then_else(True, 3, zeros_diff_rows), _if_then_else(True, _if_then_else(False, 3, 2), max_row_clue)), _if_then_else(ge(max_row_clue, _if_then_else(True, 3, 4)), _if_then_else(False, _if_then_else(True, zeros_diff_rows, ones_diff_cols), 4), _if_then_else(le(max_row_clue, ones_diff_cols), _if_then_else(True, ones_diff_cols, 0), 1)))
le(_if_then_else(or_(or_(or_(False, True), le(zeros_diff_rows, 4)), or_(or_(False, True), ge(3, 0))), _if_then_else(or_(or_(False, True), ge(compare_blocks_cols, max_col_clue)), _if_then_else(and_(True, True), _if_then_else(False, 4, zeros_diff_cols), _if_then_else(False, 0, 0)), _if_then_else(le(ones_diff_rows, zeros_diff_cols), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(False, 2, max_col_clue))), _if_then_else(and_(or_(False, True), and_(False, True)), _if_then_else(or_(True, False), _if_then_else(True, ones_diff_cols, max_col_clue), _if_then_else(True, 2, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(False, zeros_diff_cols, 4), _if_then_else(False, 2, 4)))), _if_then_else(ge(_if_then_else(ge(max_col_clue, compare_blocks_rows), _if_then_else(False, 4, ones_diff_cols), _if_then_else(False, compare_blocks_cols, compare_blocks_rows)), _if_then_else(le(compare_blocks_cols, 0), _if_then_else(False, 0, max_row_clue), _if_then_else(True, 4, 1))), _if_then_else(and_(or_(True, True), and_(True, True)), _if_then_else(ge(compare_blocks_rows, 2), _if_then_else(False, 2, 2), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(and_(True, False), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, zeros_diff_cols))), _if_then_else(or_(ge(4, ones_diff_rows), or_(True, False)), _if_then_else(or_(True, True), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, zeros_diff_rows, zeros_diff_rows)), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(False, compare_blocks_rows, 0)))))
VAL TREES:
add(mul(add(add(mul(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_rows))), add(mul(add(zeros_diff_rows, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(add(compare_blocks_cols, compare_blocks_rows), mul(compare_blocks_cols, ones_diff_cols)))), mul(add(mul(add(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_rows, compare_blocks_rows))), add(add(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), mul(mul(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_rows)))))
mul(add(add(add(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, ones_diff_rows)), add(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols))), mul(add(add(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, zeros_diff_cols)), mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols))))
mul(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_cols)))
add(mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_cols)), add(mul(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols))), add(add(add(ones_diff_rows, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_cols)), add(add(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_cols))))
mul(mul(mul(add(add(ones_diff_rows, ones_diff_rows), mul(compare_blocks_cols, zeros_diff_cols)), add(add(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(add(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols)))), add(add(mul(mul(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_rows)), add(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, zeros_diff_cols))), mul(mul(mul(compare_blocks_rows, ones_diff_cols), add(ones_diff_rows, compare_blocks_rows)), add(add(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols)))))
add(add(mul(add(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_rows, zeros_diff_cols))), mul(add(add(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_rows, compare_blocks_cols)), add(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_rows))))


INFO:root:stats: {'fitness': <deap.tools.support.Statistics object at 0x000002502C9E6A20>, 'size': <deap.tools.support.Statistics object at 0x000002502C9E6A58>}

