INFO:root:

*******STARTING!!!******


INFO:root:

*******Configuration******


INFO:root:# NUM_ROWS = 20


INFO:root:NUM_ROWS = 5


INFO:root:# NUM_COLS = 20


INFO:root:NUM_COLS = 5


INFO:root:empty_in_split = '\xa0'


INFO:root:


INFO:root:pickle_unsolved_file_path = 'data/%dx%d_nonograms.pkl' % (NUM_ROWS, NUM_COLS)


INFO:root:pickle_solved_file_path = 'data/%dx%d_nonograms_solved.pkl' % (NUM_ROWS, NUM_COLS)


INFO:root:should_ran_in_parallel = True


INFO:root:


INFO:root:NUM_COND_TREES = 5


INFO:root:NUM_VAL_TREES = NUM_COND_TREES + 1


INFO:root:prob_crossover_global = 0.7  # global probability for cx


INFO:root:prob_crossover_individual_cond = 0.8  # probability to cx a specific cond tree in an individual


INFO:root:prob_crossover_individual_val = 0.8  # probability to cx a specific cond tree in an individual


INFO:root:prob_mutate_global = 0.2


INFO:root:prob_mutate_individual_cond = 0.5


INFO:root:prob_mutate_individual_val = 0.5


INFO:root:


INFO:root:points_correct_box = 5


INFO:root:points_incorrect_box = 0


INFO:root:# points_incorrect_box = -2


INFO:root:pop_size = 100


INFO:root:hof_size = 1


INFO:root:# num_gen = 40


INFO:root:num_gen = 5


INFO:root:train_size = 5


INFO:root:

*******DONE!!!******


INFO:root:run time: 81 sec

INFO:root:max possible fitness for the nonograms ran: 69

INFO:root:log:    	      	            fitness            	            size           
   	      	-------------------------------	---------------------------
gen	nevals	avg  	max	min	std    	avg	max	min	std
0  	100   	43.71	54 	36 	3.51652	2  	2  	2  	0  
1  	73    	45.7 	54 	36 	4.06325	2  	2  	2  	0  
2  	83    	46.68	54 	38 	4.03455	2  	2  	2  	0  
3  	78    	48.66	54 	36 	4.01801	2  	2  	2  	0  
4  	81    	49.4 	54 	38 	3.78682	2  	2  	2  	0  
5  	72    	50.58	54 	41 	3.17232	2  	2  	2  	0  

INFO:root:pop: COND TREES:
and_(le(_if_then_else(or_(ge(_if_then_else(True, 2, 1), _if_then_else(and_(False, ge(compare_blocks_cols, zeros_diff_rows)), _if_then_else(True, compare_blocks_cols, _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), 2)), or_(or_(False, True), or_(or_(False, False), True))), ones_diff_cols, zeros_diff_cols), _if_then_else(or_(False, True), compare_blocks_rows, 0)), le(_if_then_else(False, zeros_diff_cols, 3), _if_then_else(True, ones_diff_rows, ones_diff_cols)))
or_(and_(le(_if_then_else(False, ARG7, ARG6), _if_then_else(True, ARG7, 0)), le(_if_then_else(False, ARG6, 2), _if_then_else(ge(_if_then_else(le(_if_then_else(False, 4, zeros_diff_cols), _if_then_else(True, ones_diff_rows, ARG7)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(True, ones_diff_rows, compare_blocks_cols)), _if_then_else(le(2, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, 2), _if_then_else(True, ones_diff_cols, 0))), _if_then_else(le(_if_then_else(True, 4, 3), _if_then_else(True, 0, 4)), _if_then_else(le(ARG7, 4), _if_then_else(True, zeros_diff_cols, ARG7), _if_then_else(False, 0, ARG7)), _if_then_else(le(ones_diff_cols, ARG7), _if_then_else(True, 0, 4), _if_then_else(True, zeros_diff_cols, 4)))), _if_then_else(or_(ge(_if_then_else(True, 3, ARG6), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), and_(and_(False, False), and_(False, False))), _if_then_else(and_(and_(False, False), or_(True, False)), _if_then_else(or_(False, False), _if_then_else(False, 1, 0), _if_then_else(True, 3, 1)), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, ARG6, zeros_diff_rows))), _if_then_else(or_(le(zeros_diff_cols, 3), and_(False, True)), _if_then_else(or_(False, False), _if_then_else(True, 2, ARG6), _if_then_else(False, compare_blocks_rows, compare_blocks_rows)), _if_then_else(le(ones_diff_cols, compare_blocks_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, 0)))), _if_then_else(and_(and_(ge(0, 3), ge(compare_blocks_rows, ARG6)), le(_if_then_else(False, 4, 0), _if_then_else(True, zeros_diff_rows, 0))), _if_then_else(ge(_if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, 1))), _if_then_else(and_(ge(ones_diff_rows, 0), and_(True, True)), _if_then_else(ge(3, compare_blocks_cols), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(False, 0, 1)), _if_then_else(le(zeros_diff_rows, 4), zeros_diff_cols, _if_then_else(True, compare_blocks_rows, 0))))))), le(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, ones_diff_cols), _if_then_else(False, ARG7, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, 2))))
and_(ge(_if_then_else(and_(False, True), _if_then_else(False, ARG7, ARG7), _if_then_else(True, 2, 2)), _if_then_else(and_(False, False), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, 1, 2))), ge(_if_then_else(and_(True, True), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)), _if_then_else(le(1, 3), _if_then_else(False, 1, 0), _if_then_else(False, ones_diff_rows, zeros_diff_rows))))
or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(False, 3, zeros_diff_rows)), and_(and_(False, True), le(ARG7, compare_blocks_rows)))
or_(and_(or_(False, False), ge(compare_blocks_cols, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), and_(or_(le(2, zeros_diff_rows), le(compare_blocks_rows, 1)), or_(True, True)))
VAL TREES:
mul(add(ones_diff_cols, add(ones_diff_rows, ones_diff_cols)), add(add(mul(zeros_diff_rows, compare_blocks_cols), ones_diff_rows), ones_diff_cols))
mul(add(mul(ones_diff_rows, zeros_diff_cols), compare_blocks_cols), mul(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, mul(mul(compare_blocks_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_cols)))))
mul(mul(add(ones_diff_cols, compare_blocks_cols), add(add(add(compare_blocks_cols, zeros_diff_rows), add(mul(zeros_diff_rows, compare_blocks_cols), add(add(mul(add(add(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols)), zeros_diff_cols), mul(ones_diff_cols, add(compare_blocks_rows, compare_blocks_cols))), add(mul(ones_diff_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_rows))), compare_blocks_cols))), zeros_diff_cols)), add(compare_blocks_rows, compare_blocks_cols))
mul(add(mul(zeros_diff_rows, ones_diff_rows), mul(mul(mul(ones_diff_rows, compare_blocks_rows), zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows))), mul(add(ones_diff_rows, mul(mul(add(mul(add(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_cols)), add(mul(ones_diff_cols, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_rows))), mul(mul(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_rows, zeros_diff_rows)), add(add(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, ones_diff_rows), add(compare_blocks_rows, ones_diff_cols))), mul(add(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows)), mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, compare_blocks_rows)))))), compare_blocks_rows))
mul(mul(mul(add(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, add(mul(add(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, compare_blocks_cols))))), ones_diff_cols), add(add(compare_blocks_cols, add(compare_blocks_rows, compare_blocks_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(zeros_diff_rows, compare_blocks_cols))))
mul(add(add(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), ones_diff_cols), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, mul(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows)))), mul(add(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(ones_diff_cols, zeros_diff_cols))))
COND TREES:
or_(ge(_if_then_else(or_(True, False), ARG7, _if_then_else(False, compare_blocks_rows, compare_blocks_rows)), _if_then_else(False, 4, compare_blocks_cols)), and_(ge(zeros_diff_cols, 1), or_(False, True)))
or_(ge(_if_then_else(False, 1, 4), _if_then_else(True, zeros_diff_rows, 3)), True)
and_(and_(and_(False, False), le(compare_blocks_cols, _if_then_else(True, _if_then_else(True, _if_then_else(True, 4, compare_blocks_cols), ARG7), 4))), ge(_if_then_else(or_(False, True), _if_then_else(False, 4, _if_then_else(False, ARG7, 0)), 2), _if_then_else(True, zeros_diff_rows, 3)))
ge(_if_then_else(le(_if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(le(zeros_diff_rows, 4), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(False, ARG7, compare_blocks_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, ARG7, ARG7))), zeros_diff_cols)
and_(le(ARG7, _if_then_else(ge(ones_diff_cols, compare_blocks_cols), 4, compare_blocks_rows)), and_(le(compare_blocks_rows, 1), and_(True, True)))
VAL TREES:
add(mul(mul(compare_blocks_cols, compare_blocks_cols), mul(mul(add(ones_diff_rows, compare_blocks_cols), ones_diff_rows), add(zeros_diff_rows, ones_diff_cols))), mul(mul(ones_diff_rows, ones_diff_cols), add(mul(ones_diff_cols, ones_diff_rows), add(mul(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_cols)))))
mul(mul(add(ones_diff_rows, mul(zeros_diff_cols, mul(zeros_diff_rows, zeros_diff_rows))), mul(ones_diff_cols, add(compare_blocks_cols, ones_diff_rows))), add(add(ones_diff_rows, mul(zeros_diff_cols, compare_blocks_cols)), add(zeros_diff_cols, compare_blocks_cols)))
mul(mul(add(mul(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols))), mul(mul(mul(ones_diff_cols, add(mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_cols)), add(mul(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows))), mul(add(add(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, ones_diff_rows)), add(add(zeros_diff_cols, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_rows))))), mul(ones_diff_rows, compare_blocks_cols)), add(zeros_diff_rows, mul(compare_blocks_rows, zeros_diff_cols)))), mul(add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(mul(zeros_diff_cols, zeros_diff_rows), add(add(zeros_diff_cols, mul(compare_blocks_rows, add(add(ones_diff_rows, ones_diff_rows), ones_diff_rows))), mul(zeros_diff_rows, compare_blocks_rows)))), add(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, ones_diff_rows)))))
add(add(add(ones_diff_rows, mul(mul(zeros_diff_rows, zeros_diff_cols), zeros_diff_cols)), mul(mul(add(zeros_diff_cols, compare_blocks_cols), zeros_diff_cols), compare_blocks_rows)), mul(add(zeros_diff_cols, add(ones_diff_cols, zeros_diff_rows)), mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows))))
add(mul(add(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows))), mul(add(add(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), mul(add(mul(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), mul(add(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_cols, compare_blocks_cols))), mul(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(mul(mul(add(add(mul(add(ones_diff_cols, ones_diff_cols), add(zeros_diff_rows, ones_diff_rows)), ones_diff_cols), ones_diff_cols), zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)), compare_blocks_cols)
COND TREES:
or_(ge(_if_then_else(or_(True, False), ARG7, _if_then_else(False, compare_blocks_rows, compare_blocks_rows)), _if_then_else(False, 4, compare_blocks_cols)), and_(ge(zeros_diff_cols, 1), or_(False, True)))
or_(ge(_if_then_else(False, 1, 4), _if_then_else(True, zeros_diff_rows, 3)), True)
and_(and_(and_(False, False), le(compare_blocks_cols, _if_then_else(True, _if_then_else(True, _if_then_else(True, 4, compare_blocks_cols), ARG7), 4))), ge(_if_then_else(or_(False, True), _if_then_else(False, 4, _if_then_else(False, ARG7, 0)), 2), _if_then_else(True, 4, 3)))
ge(_if_then_else(le(_if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(le(zeros_diff_rows, 4), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(False, ARG6, compare_blocks_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, ARG7, ARG7))), zeros_diff_cols)
and_(le(ARG7, _if_then_else(ge(ones_diff_cols, compare_blocks_cols), 4, compare_blocks_rows)), and_(le(1, 1), and_(True, True)))
VAL TREES:
add(mul(mul(compare_blocks_cols, compare_blocks_cols), mul(mul(add(ones_diff_rows, compare_blocks_cols), ones_diff_rows), add(ones_diff_cols, ones_diff_cols))), mul(mul(ones_diff_rows, ones_diff_cols), add(mul(ones_diff_cols, ones_diff_rows), add(mul(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_cols)))))
mul(mul(add(ones_diff_rows, mul(zeros_diff_cols, mul(zeros_diff_rows, zeros_diff_rows))), mul(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_rows, mul(zeros_diff_cols, compare_blocks_cols)), add(zeros_diff_cols, compare_blocks_cols)))
mul(mul(add(mul(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols))), mul(mul(mul(ones_diff_cols, add(mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_cols)), add(mul(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows))), mul(add(add(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, ones_diff_rows)), add(add(zeros_diff_cols, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_rows))))), mul(ones_diff_rows, compare_blocks_cols)), add(zeros_diff_rows, mul(compare_blocks_rows, zeros_diff_cols)))), mul(add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), add(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, ones_diff_rows)))))
add(add(add(ones_diff_rows, mul(mul(zeros_diff_rows, ones_diff_cols), zeros_diff_cols)), mul(mul(add(zeros_diff_cols, compare_blocks_cols), zeros_diff_cols), compare_blocks_rows)), mul(add(zeros_diff_cols, add(ones_diff_cols, zeros_diff_rows)), mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows))))
add(mul(add(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows))), mul(add(add(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), mul(add(mul(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), mul(add(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_cols, compare_blocks_cols))), mul(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(mul(mul(add(add(mul(add(ones_diff_cols, ones_diff_cols), add(zeros_diff_rows, ones_diff_rows)), mul(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))), ones_diff_cols), zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)), compare_blocks_cols)
COND TREES:
or_(ge(_if_then_else(or_(True, False), ARG7, _if_then_else(False, compare_blocks_rows, compare_blocks_rows)), _if_then_else(False, ARG6, ARG7)), and_(False, or_(False, True)))
or_(ge(_if_then_else(False, 1, 4), _if_then_else(True, zeros_diff_rows, 3)), or_(or_(True, True), ge(zeros_diff_cols, ARG6)))
and_(and_(and_(False, False), le(compare_blocks_cols, _if_then_else(True, _if_then_else(True, ARG6, ARG7), 4))), ge(_if_then_else(or_(False, True), _if_then_else(False, 4, zeros_diff_rows), 2), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(_if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(le(zeros_diff_rows, 4), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(False, ARG7, compare_blocks_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, ARG7, ARG7))), _if_then_else(and_(le(ARG7, compare_blocks_cols), ge(compare_blocks_rows, 2)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 0)), _if_then_else(or_(False, False), _if_then_else(True, 0, ARG7), _if_then_else(False, 2, ones_diff_cols))))
and_(le(_if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, 4, compare_blocks_rows)), and_(le(compare_blocks_rows, compare_blocks_rows), and_(True, True)))
VAL TREES:
add(mul(mul(compare_blocks_cols, compare_blocks_cols), mul(mul(add(ones_diff_rows, compare_blocks_cols), ones_diff_rows), add(ones_diff_cols, ones_diff_cols))), mul(mul(ones_diff_rows, ones_diff_cols), add(mul(ones_diff_cols, ones_diff_rows), add(mul(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_cols)))))
mul(mul(add(ones_diff_rows, mul(zeros_diff_cols, mul(zeros_diff_rows, zeros_diff_rows))), mul(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_rows, mul(zeros_diff_cols, compare_blocks_cols)), add(zeros_diff_cols, compare_blocks_cols)))
mul(mul(add(mul(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols))), mul(mul(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), add(zeros_diff_rows, mul(compare_blocks_rows, zeros_diff_cols)))), mul(add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), add(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, ones_diff_rows)))))
add(add(add(ones_diff_rows, mul(mul(zeros_diff_rows, ones_diff_cols), zeros_diff_cols)), mul(mul(add(zeros_diff_cols, compare_blocks_cols), zeros_diff_cols), compare_blocks_rows)), mul(add(zeros_diff_cols, add(ones_diff_cols, zeros_diff_rows)), mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows))))
add(mul(add(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows))), mul(add(add(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), mul(add(mul(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), mul(add(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_cols, compare_blocks_cols))), mul(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(mul(mul(add(ones_diff_rows, ones_diff_cols), zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)), compare_blocks_cols)
COND TREES:
and_(le(_if_then_else(or_(ge(_if_then_else(True, 2, 1), _if_then_else(and_(False, ge(compare_blocks_cols, zeros_diff_rows)), _if_then_else(True, compare_blocks_cols, _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), 2)), or_(or_(and_(True, True), le(ARG6, 2)), or_(or_(False, False), True))), ones_diff_cols, zeros_diff_cols), _if_then_else(or_(False, True), compare_blocks_rows, 0)), le(_if_then_else(False, zeros_diff_cols, 3), _if_then_else(True, ones_diff_rows, ones_diff_cols)))
or_(and_(le(_if_then_else(False, ARG7, ARG6), _if_then_else(True, ARG7, 0)), le(_if_then_else(False, ARG6, 2), _if_then_else(ge(_if_then_else(le(_if_then_else(False, 4, zeros_diff_cols), _if_then_else(True, ones_diff_rows, ARG7)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(True, ones_diff_rows, compare_blocks_cols)), _if_then_else(le(2, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, 2), _if_then_else(True, ones_diff_cols, 0))), _if_then_else(le(_if_then_else(True, 4, 3), _if_then_else(True, 0, 4)), _if_then_else(le(ARG7, 4), _if_then_else(True, zeros_diff_cols, ARG7), _if_then_else(False, 0, ARG7)), _if_then_else(le(ones_diff_cols, ARG7), _if_then_else(True, 0, 4), _if_then_else(True, zeros_diff_cols, 4)))), _if_then_else(or_(ge(_if_then_else(True, 3, ARG6), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), True), _if_then_else(and_(and_(False, False), or_(True, False)), _if_then_else(or_(False, False), _if_then_else(False, 1, 0), _if_then_else(True, 3, 1)), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, ARG6, zeros_diff_rows))), _if_then_else(or_(le(zeros_diff_cols, 3), and_(False, True)), _if_then_else(or_(False, False), _if_then_else(True, 2, ARG6), _if_then_else(False, compare_blocks_rows, compare_blocks_rows)), _if_then_else(le(ones_diff_cols, compare_blocks_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, 0)))), _if_then_else(and_(and_(ge(0, 3), ge(compare_blocks_rows, ARG6)), le(_if_then_else(False, 4, 0), _if_then_else(True, zeros_diff_rows, 0))), _if_then_else(ge(_if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, 1))), _if_then_else(and_(ge(ones_diff_rows, 0), and_(True, True)), _if_then_else(ge(3, compare_blocks_cols), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(False, 0, 1)), _if_then_else(le(zeros_diff_rows, 4), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, 0))))))), le(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, ones_diff_cols), _if_then_else(False, ARG7, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, 2))))
and_(ge(_if_then_else(and_(False, True), _if_then_else(False, ARG7, ARG7), _if_then_else(True, 2, 2)), _if_then_else(and_(False, False), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, 1, 2))), ge(_if_then_else(and_(True, True), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)), _if_then_else(le(1, 1), _if_then_else(False, 1, 0), _if_then_else(False, ones_diff_rows, zeros_diff_rows))))
or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(False, 3, zeros_diff_rows)), and_(and_(False, True), le(ARG7, compare_blocks_rows)))
or_(and_(or_(False, False), ge(compare_blocks_cols, _if_then_else(False, ARG6, ones_diff_cols))), and_(or_(le(2, zeros_diff_rows), False), or_(True, True)))
VAL TREES:
mul(add(zeros_diff_rows, add(ones_diff_rows, ones_diff_cols)), add(add(mul(zeros_diff_rows, compare_blocks_cols), ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)))
mul(add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, mul(mul(compare_blocks_cols, ones_diff_cols), ones_diff_rows))))
mul(mul(add(ones_diff_cols, ones_diff_cols), add(add(add(compare_blocks_cols, zeros_diff_rows), add(mul(zeros_diff_rows, compare_blocks_cols), add(ones_diff_cols, compare_blocks_cols))), zeros_diff_cols)), add(add(zeros_diff_cols, mul(compare_blocks_rows, add(add(ones_diff_rows, ones_diff_rows), ones_diff_rows))), mul(zeros_diff_rows, compare_blocks_rows)))
mul(add(mul(zeros_diff_rows, ones_diff_rows), mul(compare_blocks_rows, compare_blocks_cols)), mul(add(ones_diff_rows, ones_diff_cols), compare_blocks_rows))
mul(mul(mul(add(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), ones_diff_cols), add(add(compare_blocks_cols, add(compare_blocks_rows, compare_blocks_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(zeros_diff_rows, compare_blocks_cols))))
mul(add(add(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), ones_diff_cols), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(add(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(ones_diff_cols, zeros_diff_cols))))
COND TREES:
and_(or_(False, True), False)
le(_if_then_else(ge(_if_then_else(or_(False, False), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(False, 0, zeros_diff_rows)), _if_then_else(le(1, compare_blocks_cols), _if_then_else(False, 1, compare_blocks_rows), _if_then_else(True, ARG7, compare_blocks_cols))), _if_then_else(or_(or_(True, and_(and_(False, False), and_(False, False))), and_(True, False)), _if_then_else(and_(True, False), _if_then_else(False, 3, 0), _if_then_else(True, 2, compare_blocks_cols)), _if_then_else(or_(True, False), _if_then_else(False, 4, 4), _if_then_else(False, 1, 1))), _if_then_else(le(_if_then_else(True, ARG6, 1), _if_then_else(True, compare_blocks_cols, 2)), _if_then_else(True, _if_then_else(False, ARG6, 4), _if_then_else(False, compare_blocks_rows, ones_diff_rows)), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(True, ARG6, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, ARG6)))), _if_then_else(or_(le(_if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(True, ARG6, 2)), and_(and_(False, True), or_(True, False))), _if_then_else(and_(or_(True, False), le(compare_blocks_rows, compare_blocks_rows)), _if_then_else(ge(zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(True, ones_diff_rows, 4)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, ARG7), _if_then_else(False, 0, ones_diff_rows))), _if_then_else(ge(_if_then_else(False, ARG6, zeros_diff_cols), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(and_(False, False), _if_then_else(True, ones_diff_cols, ARG6), _if_then_else(False, 2, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_cols), _if_then_else(False, 1, 2)))))
and_(or_(or_(False, ge(_if_then_else(le(2, zeros_diff_rows), _if_then_else(True, ones_diff_rows, 3), _if_then_else(True, 0, ARG7)), _if_then_else(le(0, compare_blocks_rows), _if_then_else(True, 4, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)))), ge(3, compare_blocks_rows)), True)
le(_if_then_else(ge(_if_then_else(le(compare_blocks_rows, 4), _if_then_else(False, 1, ones_diff_rows), _if_then_else(False, ones_diff_rows, 2)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(True, 1, compare_blocks_cols))), _if_then_else(and_(ge(0, zeros_diff_cols), ge(ARG7, 4)), _if_then_else(le(compare_blocks_rows, ones_diff_cols), _if_then_else(False, zeros_diff_cols, compare_blocks_rows), _if_then_else(True, ones_diff_rows, 2)), _if_then_else(and_(False, False), _if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(True, 2, 1))), _if_then_else(le(_if_then_else(True, ARG6, zeros_diff_cols), _if_then_else(True, 4, ARG6)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_rows, 1), _if_then_else(False, _if_then_else(True, ARG7, zeros_diff_rows), 4)), _if_then_else(ge(0, compare_blocks_rows), _if_then_else(True, ARG6, 1), _if_then_else(or_(or_(False, True), le(3, ARG6)), zeros_diff_cols, ones_diff_rows)))), _if_then_else(or_(or_(or_(False, True), ge(zeros_diff_cols, zeros_diff_rows)), or_(ge(4, ARG7), le(compare_blocks_rows, ones_diff_rows))), _if_then_else(ge(_if_then_else(True, ARG7, zeros_diff_cols), _if_then_else(False, 4, ARG7)), _if_then_else(ge(ones_diff_cols, zeros_diff_cols), _if_then_else(False, ARG6, 1), _if_then_else(False, ones_diff_cols, 3)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(True, compare_blocks_cols, ones_diff_rows))), _if_then_else(and_(or_(False, True), or_(ge(_if_then_else(ge(zeros_diff_rows, ones_diff_cols), _if_then_else(True, 1, 1), _if_then_else(True, ARG7, ones_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_cols, 4), _if_then_else(False, zeros_diff_rows, ones_diff_rows))), True)), _if_then_else(or_(True, False), _if_then_else(False, 2, ones_diff_rows), _if_then_else(True, ARG6, ARG7)), _if_then_else(le(zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_cols)))))
le(ARG6, _if_then_else(ge(ones_diff_cols, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(False, ones_diff_cols, ones_diff_cols)))
VAL TREES:
add(mul(add(add(mul(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_rows))), add(add(mul(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)), add(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)))), add(mul(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols))), add(add(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_rows)), mul(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_cols))), mul(mul(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, mul(ones_diff_cols, mul(mul(compare_blocks_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_cols)))))))
mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows))), add(mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_rows))))
add(mul(add(mul(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_rows)), add(mul(ones_diff_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols))), add(mul(add(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)), mul(mul(zeros_diff_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_cols)))), mul(mul(add(mul(compare_blocks_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows))), add(mul(mul(compare_blocks_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_cols)))))
mul(mul(mul(mul(add(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), ones_diff_cols), add(ones_diff_cols, zeros_diff_rows)), add(add(zeros_diff_rows, compare_blocks_cols), add(add(compare_blocks_cols, ones_diff_cols), add(zeros_diff_cols, add(ones_diff_cols, compare_blocks_rows)))))
add(add(mul(mul(mul(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), add(mul(zeros_diff_rows, ones_diff_rows), mul(zeros_diff_rows, ones_diff_rows))), add(mul(add(ones_diff_cols, mul(ones_diff_rows, ones_diff_rows)), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)))), mul(add(add(add(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, zeros_diff_cols))), mul(add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)))))
COND TREES:
and_(le(_if_then_else(or_(ge(_if_then_else(True, 2, 1), _if_then_else(and_(False, ge(compare_blocks_cols, zeros_diff_rows)), _if_then_else(True, compare_blocks_cols, _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), 2)), or_(or_(False, True), or_(or_(False, False), True))), ones_diff_cols, zeros_diff_cols), _if_then_else(or_(False, True), compare_blocks_rows, 0)), le(_if_then_else(False, zeros_diff_cols, 3), _if_then_else(True, ones_diff_rows, ones_diff_cols)))
or_(and_(le(_if_then_else(False, ARG7, ARG6), _if_then_else(True, ARG7, 0)), le(_if_then_else(False, ARG6, 2), _if_then_else(ge(_if_then_else(le(_if_then_else(False, 4, zeros_diff_cols), _if_then_else(True, ones_diff_rows, ARG7)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(True, ones_diff_rows, compare_blocks_cols)), _if_then_else(le(2, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, 2), _if_then_else(True, ones_diff_cols, 0))), _if_then_else(le(_if_then_else(True, 4, 3), _if_then_else(True, 0, 4)), _if_then_else(le(ARG7, 4), _if_then_else(True, zeros_diff_cols, ARG7), _if_then_else(False, 0, ARG7)), _if_then_else(le(ones_diff_cols, ARG7), _if_then_else(True, 0, 4), _if_then_else(True, zeros_diff_cols, 4)))), _if_then_else(or_(ge(_if_then_else(True, 3, ARG6), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), and_(and_(False, False), and_(False, False))), _if_then_else(and_(and_(False, False), or_(True, False)), _if_then_else(or_(False, False), _if_then_else(False, 1, 0), _if_then_else(True, 3, 1)), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, ARG6, zeros_diff_rows))), _if_then_else(or_(le(zeros_diff_cols, 3), and_(False, True)), _if_then_else(or_(False, False), _if_then_else(True, 2, ARG6), _if_then_else(False, compare_blocks_rows, compare_blocks_rows)), _if_then_else(le(ones_diff_cols, compare_blocks_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, 0)))), _if_then_else(and_(and_(ge(0, 3), ge(compare_blocks_rows, ARG6)), le(_if_then_else(False, 4, 0), _if_then_else(True, zeros_diff_rows, 0))), _if_then_else(ge(_if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, 1))), _if_then_else(and_(ge(ones_diff_rows, 0), and_(True, True)), _if_then_else(ge(3, compare_blocks_cols), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(False, 0, 1)), _if_then_else(le(zeros_diff_rows, 4), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, 0))))))), le(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, ones_diff_cols), _if_then_else(False, ARG7, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, 2))))
and_(ge(_if_then_else(and_(False, True), _if_then_else(False, ARG7, ARG7), _if_then_else(True, 2, 2)), _if_then_else(and_(False, False), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, 1, 2))), ge(_if_then_else(and_(True, True), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)), _if_then_else(le(1, 3), _if_then_else(False, 1, 0), _if_then_else(False, ones_diff_rows, zeros_diff_rows))))
or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(False, 3, zeros_diff_rows)), and_(and_(False, True), le(ARG7, compare_blocks_rows)))
or_(and_(or_(False, False), ge(compare_blocks_cols, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), and_(or_(le(2, zeros_diff_rows), False), or_(True, True)))
VAL TREES:
mul(add(zeros_diff_rows, add(ones_diff_rows, ones_diff_cols)), add(add(mul(compare_blocks_cols, compare_blocks_cols), ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)))
mul(add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, mul(mul(compare_blocks_cols, ones_diff_cols), ones_diff_rows))))
mul(mul(add(ones_diff_cols, ones_diff_cols), add(add(add(compare_blocks_cols, zeros_diff_rows), add(mul(zeros_diff_rows, compare_blocks_cols), add(ones_diff_cols, compare_blocks_cols))), zeros_diff_cols)), add(add(zeros_diff_cols, mul(compare_blocks_rows, add(add(ones_diff_rows, ones_diff_rows), ones_diff_rows))), mul(zeros_diff_rows, compare_blocks_rows)))
mul(add(add(add(ones_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows)), mul(compare_blocks_rows, compare_blocks_cols)), mul(add(ones_diff_rows, ones_diff_cols), compare_blocks_rows))
mul(mul(mul(add(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_rows)), add(compare_blocks_cols, ones_diff_rows)), ones_diff_cols), add(add(compare_blocks_cols, add(compare_blocks_rows, compare_blocks_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(zeros_diff_rows, compare_blocks_cols))))
mul(add(add(mul(ones_diff_cols, add(mul(add(zeros_diff_cols, compare_blocks_cols), ones_diff_cols), compare_blocks_rows)), mul(ones_diff_rows, ones_diff_rows)), ones_diff_cols), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(add(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(ones_diff_cols, zeros_diff_cols))))
COND TREES:
or_(ge(_if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(False, _if_then_else(False, _if_then_else(ge(_if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(True, 2, zeros_diff_cols), _if_then_else(False, 1, zeros_diff_rows)), _if_then_else(ge(2, zeros_diff_cols), _if_then_else(True, zeros_diff_rows, 1), _if_then_else(False, zeros_diff_cols, ARG7))), 0), compare_blocks_rows)), and_(ge(ones_diff_cols, ARG7), or_(or_(True, False), True)))
and_(ge(_if_then_else(True, 2, zeros_diff_rows), _if_then_else(True, _if_then_else(True, 1, zeros_diff_rows), ones_diff_rows)), ge(_if_then_else(ge(4, zeros_diff_cols), ARG7, _if_then_else(True, zeros_diff_cols, 4)), 3))
and_(or_(and_(ge(zeros_diff_rows, 0), False), or_(False, False)), le(_if_then_else(ge(zeros_diff_rows, ones_diff_cols), ones_diff_rows, 2), _if_then_else(False, ARG6, _if_then_else(False, _if_then_else(False, 4, _if_then_else(ge(_if_then_else(True, 3, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), _if_then_else(ge(ARG6, 2), _if_then_else(False, ARG6, 0), _if_then_else(False, 3, zeros_diff_cols)), _if_then_else(le(zeros_diff_rows, ones_diff_cols), _if_then_else(True, 4, 2), _if_then_else(False, ones_diff_cols, 3)))), _if_then_else(False, ones_diff_rows, 4)))))
and_(or_(and_(le(compare_blocks_rows, compare_blocks_rows), and_(True, True)), True), ge(_if_then_else(True, compare_blocks_rows, ARG6), _if_then_else(le(3, ones_diff_rows), zeros_diff_cols, _if_then_else(True, 2, 2))))
and_(ge(_if_then_else(False, 3, ARG7), _if_then_else(False, 0, 0)), and_(and_(False, True), or_(True, False)))
VAL TREES:
add(ones_diff_cols, mul(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, zeros_diff_rows)))
mul(add(add(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), add(add(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_cols)))
mul(mul(mul(add(ones_diff_cols, add(mul(zeros_diff_rows, ones_diff_cols), compare_blocks_rows)), add(zeros_diff_cols, ones_diff_rows)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, ones_diff_cols))), add(mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), add(ones_diff_cols, compare_blocks_cols))))
mul(mul(zeros_diff_rows, ones_diff_rows), mul(mul(mul(ones_diff_rows, compare_blocks_rows), zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows)))
add(add(compare_blocks_rows, compare_blocks_cols), add(add(mul(zeros_diff_cols, zeros_diff_cols), ones_diff_rows), add(zeros_diff_cols, compare_blocks_cols)))
mul(add(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)), zeros_diff_rows)
COND TREES:
ge(_if_then_else(ge(4, 3), _if_then_else(True, zeros_diff_cols, ARG7), _if_then_else(True, ARG7, zeros_diff_rows)), _if_then_else(or_(False, True), _if_then_else(True, 3, 2), _if_then_else(True, 3, 4)))
le(_if_then_else(le(_if_then_else(le(ARG6, zeros_diff_cols), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, 0, ARG7)), _if_then_else(le(0, compare_blocks_rows), _if_then_else(False, 2, ones_diff_rows), _if_then_else(True, ARG6, 3))), _if_then_else(or_(ge(compare_blocks_rows, zeros_diff_rows), ge(1, 4)), _if_then_else(and_(True, True), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(True, ARG7, 0)), _if_then_else(le(3, 2), _if_then_else(True, zeros_diff_cols, 2), _if_then_else(False, ARG7, zeros_diff_cols))), _if_then_else(or_(ge(zeros_diff_rows, ARG7), le(ones_diff_rows, 4)), _if_then_else(ge(ARG7, 3), _if_then_else(False, 3, ARG7), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(or_(False, False), _if_then_else(False, 1, 3), _if_then_else(True, ARG7, zeros_diff_cols)))), _if_then_else(le(_if_then_else(or_(False, False), _if_then_else(True, zeros_diff_cols, ARG6), _if_then_else(False, ARG6, 3)), _if_then_else(ge(4, zeros_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, 0))), _if_then_else(or_(and_(False, False), le(ones_diff_rows, 1)), _if_then_else(ge(1, 1), _if_then_else(True, ARG6, ones_diff_rows), _if_then_else(True, zeros_diff_rows, ARG6)), _if_then_else(ge(1, 0), _if_then_else(False, compare_blocks_rows, 4), _if_then_else(True, 4, compare_blocks_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(False, 4, zeros_diff_cols)), _if_then_else(ge(0, ARG7), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(ge(_if_then_else(False, zeros_diff_rows, 0), _if_then_else(le(ARG7, ones_diff_cols), ones_diff_cols, 2)), compare_blocks_rows, 0)), _if_then_else(or_(True, False), _if_then_else(True, ARG7, ARG7), _if_then_else(False, 0, ones_diff_rows)))))
and_(ge(_if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, _if_then_else(False, ones_diff_cols, 2), 3)), False)
ge(_if_then_else(and_(False, or_(True, False)), _if_then_else(or_(True, False), ARG7, _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(ge(_if_then_else(and_(True, False), ones_diff_rows, zeros_diff_rows), _if_then_else(ge(3, 0), zeros_diff_cols, ones_diff_cols)), 1, ones_diff_cols)), _if_then_else(le(_if_then_else(False, compare_blocks_cols, _if_then_else(False, zeros_diff_rows, ones_diff_cols)), ARG6), ones_diff_rows, _if_then_else(True, _if_then_else(True, zeros_diff_cols, 4), ARG7)))
and_(le(_if_then_else(le(0, compare_blocks_rows), _if_then_else(False, 3, ones_diff_rows), _if_then_else(True, 3, 4)), _if_then_else(ge(1, compare_blocks_rows), _if_then_else(False, 3, ones_diff_rows), _if_then_else(False, ones_diff_rows, 1))), ge(_if_then_else(le(ARG7, ones_diff_cols), _if_then_else(True, 2, ARG7), 2), _if_then_else(ge(ARG7, 3), _if_then_else(True, compare_blocks_cols, 3), _if_then_else(True, compare_blocks_cols, 4))))
VAL TREES:
add(mul(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_rows, compare_blocks_cols)), mul(mul(compare_blocks_cols, mul(zeros_diff_rows, zeros_diff_rows)), add(ones_diff_rows, compare_blocks_cols)))
add(add(add(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_cols)))
add(mul(add(zeros_diff_cols, mul(ones_diff_rows, compare_blocks_rows)), add(compare_blocks_rows, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_rows), add(mul(compare_blocks_rows, ones_diff_cols), ones_diff_rows)))
mul(add(add(add(ones_diff_cols, zeros_diff_rows), compare_blocks_cols), mul(mul(zeros_diff_rows, zeros_diff_cols), zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_cols, mul(ones_diff_rows, ones_diff_cols))))
mul(mul(mul(mul(add(ones_diff_rows, ones_diff_cols), mul(ones_diff_cols, ones_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols))), add(mul(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(add(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)))), mul(add(mul(add(ones_diff_rows, ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols)), mul(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_cols))), add(mul(add(ones_diff_cols, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows)), add(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)))))
add(mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_rows)), add(add(zeros_diff_rows, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_cols))), mul(add(add(zeros_diff_rows, ones_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)), mul(add(ones_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_cols))))
COND TREES:
ge(_if_then_else(ge(4, 3), _if_then_else(True, zeros_diff_cols, ARG7), _if_then_else(True, ARG7, zeros_diff_rows)), _if_then_else(or_(False, True), _if_then_else(True, 3, 2), _if_then_else(True, 3, 4)))
le(_if_then_else(le(_if_then_else(le(ARG6, zeros_diff_cols), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, 0, ARG7)), _if_then_else(le(0, compare_blocks_rows), _if_then_else(False, 2, ones_diff_rows), _if_then_else(True, ARG6, 3))), _if_then_else(or_(ge(compare_blocks_rows, zeros_diff_rows), ge(1, 4)), _if_then_else(and_(True, True), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(True, ARG7, 0)), _if_then_else(le(3, 2), _if_then_else(True, zeros_diff_cols, 2), _if_then_else(False, ARG7, zeros_diff_cols))), _if_then_else(or_(ge(zeros_diff_rows, ARG7), le(ones_diff_rows, 4)), _if_then_else(ge(ARG7, 3), _if_then_else(False, 3, ARG7), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(or_(False, False), _if_then_else(False, 1, 3), _if_then_else(True, ARG7, zeros_diff_cols)))), _if_then_else(le(_if_then_else(or_(False, False), _if_then_else(True, zeros_diff_cols, ARG6), _if_then_else(False, ARG6, 3)), _if_then_else(ge(4, zeros_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, 0))), _if_then_else(or_(and_(False, False), le(ones_diff_rows, 1)), _if_then_else(ge(1, 1), _if_then_else(True, ARG6, ones_diff_rows), _if_then_else(True, zeros_diff_rows, ARG6)), _if_then_else(ge(1, 0), _if_then_else(False, compare_blocks_rows, 4), _if_then_else(True, 4, compare_blocks_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(False, 4, zeros_diff_cols)), _if_then_else(ge(0, ARG7), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(ge(_if_then_else(False, zeros_diff_rows, 0), _if_then_else(le(ARG7, ones_diff_cols), ones_diff_cols, 2)), compare_blocks_rows, 0)), _if_then_else(or_(True, False), _if_then_else(True, ARG7, ARG7), _if_then_else(False, 0, ones_diff_rows)))))
and_(ge(_if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, _if_then_else(False, ones_diff_cols, 2), 3)), False)
ge(_if_then_else(and_(False, or_(True, False)), _if_then_else(or_(True, False), ARG7, _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(ge(_if_then_else(and_(True, False), ones_diff_rows, zeros_diff_rows), _if_then_else(ge(3, 0), zeros_diff_cols, ones_diff_cols)), 1, ones_diff_cols)), _if_then_else(le(_if_then_else(False, compare_blocks_cols, _if_then_else(False, zeros_diff_rows, ones_diff_cols)), ARG6), ones_diff_rows, _if_then_else(True, _if_then_else(True, zeros_diff_cols, 4), ARG7)))
and_(le(_if_then_else(le(0, compare_blocks_rows), _if_then_else(False, 3, ones_diff_rows), _if_then_else(True, 3, 4)), _if_then_else(ge(1, compare_blocks_rows), _if_then_else(False, 3, ones_diff_rows), _if_then_else(False, ones_diff_rows, 1))), ge(_if_then_else(le(ARG7, ones_diff_cols), _if_then_else(True, 2, ARG7), 2), _if_then_else(ge(ARG7, 3), _if_then_else(True, compare_blocks_cols, 3), _if_then_else(True, compare_blocks_cols, 4))))
VAL TREES:
add(mul(mul(ones_diff_rows, compare_blocks_cols), compare_blocks_cols), mul(mul(compare_blocks_cols, mul(zeros_diff_rows, zeros_diff_rows)), add(ones_diff_rows, compare_blocks_cols)))
add(add(ones_diff_rows, add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_cols)))
add(mul(add(zeros_diff_cols, mul(ones_diff_rows, compare_blocks_rows)), add(compare_blocks_rows, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_rows), add(mul(compare_blocks_rows, ones_diff_cols), ones_diff_rows)))
mul(add(add(add(ones_diff_rows, mul(mul(ones_diff_rows, ones_diff_cols), zeros_diff_cols)), compare_blocks_cols), mul(mul(zeros_diff_rows, zeros_diff_cols), zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_cols, mul(ones_diff_rows, ones_diff_cols))))
mul(mul(mul(mul(add(ones_diff_rows, ones_diff_cols), mul(ones_diff_cols, ones_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols))), add(mul(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(add(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)))), mul(add(mul(add(ones_diff_rows, ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols)), mul(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_cols))), add(mul(add(ones_diff_cols, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows)), add(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)))))
add(mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_rows)), add(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, add(ones_diff_rows, compare_blocks_cols)))), mul(add(add(zeros_diff_rows, ones_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)), mul(add(ones_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_cols))))
COND TREES:
or_(ge(_if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(False, _if_then_else(False, _if_then_else(ge(_if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(True, 2, zeros_diff_cols), _if_then_else(False, 1, zeros_diff_rows)), _if_then_else(ge(2, zeros_diff_cols), _if_then_else(True, zeros_diff_rows, 1), _if_then_else(False, zeros_diff_cols, ARG7))), 0), compare_blocks_rows)), and_(ge(ones_diff_cols, ARG7), or_(or_(True, False), True)))
and_(ge(_if_then_else(True, 2, zeros_diff_rows), _if_then_else(True, _if_then_else(True, 1, zeros_diff_rows), ones_diff_rows)), ge(_if_then_else(ge(4, zeros_diff_cols), ARG7, _if_then_else(True, zeros_diff_cols, 4)), 3))
and_(or_(and_(ge(zeros_diff_rows, 0), False), or_(False, False)), le(_if_then_else(ge(zeros_diff_rows, ones_diff_cols), ones_diff_rows, 2), _if_then_else(False, ARG6, _if_then_else(False, _if_then_else(False, 4, _if_then_else(ge(_if_then_else(True, 3, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), _if_then_else(ge(ARG6, 2), _if_then_else(False, ARG6, 0), _if_then_else(False, 3, zeros_diff_cols)), _if_then_else(le(zeros_diff_rows, ones_diff_cols), _if_then_else(True, 4, 2), _if_then_else(False, ones_diff_cols, 3)))), _if_then_else(False, ones_diff_rows, 4)))))
and_(or_(and_(le(compare_blocks_rows, compare_blocks_rows), and_(True, True)), True), ge(_if_then_else(True, compare_blocks_rows, ARG6), _if_then_else(le(3, ones_diff_rows), zeros_diff_cols, _if_then_else(True, 2, 2))))
and_(ge(_if_then_else(False, 3, ARG7), _if_then_else(False, 0, 0)), and_(and_(False, True), or_(True, False)))
VAL TREES:
add(ones_diff_cols, mul(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, compare_blocks_cols)))
mul(add(add(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), add(add(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_cols)))
mul(mul(mul(add(ones_diff_cols, add(mul(zeros_diff_rows, ones_diff_cols), compare_blocks_rows)), add(zeros_diff_cols, ones_diff_rows)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, ones_diff_cols))), add(mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), add(ones_diff_cols, compare_blocks_cols))))
mul(add(add(ones_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows)), mul(mul(mul(ones_diff_rows, compare_blocks_rows), zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows)))
add(add(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_rows)), add(add(mul(zeros_diff_cols, zeros_diff_cols), ones_diff_rows), add(zeros_diff_cols, compare_blocks_cols)))
mul(add(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)), add(mul(add(zeros_diff_cols, compare_blocks_cols), ones_diff_cols), compare_blocks_rows))
COND TREES:
and_(or_(and_(True, True), and_(True, True)), or_(or_(False, False), and_(True, False)))
le(_if_then_else(ge(_if_then_else(or_(False, False), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(False, 0, zeros_diff_rows)), _if_then_else(le(1, compare_blocks_cols), _if_then_else(False, 1, compare_blocks_rows), _if_then_else(True, ARG7, compare_blocks_cols))), _if_then_else(or_(or_(True, True), and_(True, False)), _if_then_else(and_(True, False), _if_then_else(False, 3, 0), _if_then_else(True, 2, compare_blocks_cols)), _if_then_else(or_(True, False), _if_then_else(False, ARG7, 4), _if_then_else(False, 1, 1))), _if_then_else(le(_if_then_else(True, ARG6, 1), _if_then_else(True, compare_blocks_cols, 2)), _if_then_else(ge(1, ones_diff_cols), _if_then_else(False, ARG6, 4), _if_then_else(False, compare_blocks_rows, ones_diff_rows)), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(True, ARG6, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, ARG6)))), _if_then_else(or_(le(_if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(True, ARG6, 2)), and_(and_(False, True), or_(True, False))), _if_then_else(and_(or_(True, False), le(compare_blocks_rows, compare_blocks_rows)), _if_then_else(ge(zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(True, ones_diff_rows, 4)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, ARG7), _if_then_else(False, 0, ones_diff_rows))), _if_then_else(ge(_if_then_else(False, ARG6, zeros_diff_cols), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(and_(False, False), _if_then_else(True, ones_diff_cols, ARG6), _if_then_else(False, 2, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_cols), _if_then_else(False, 1, 2)))))
and_(or_(or_(ge(3, _if_then_else(True, compare_blocks_cols, ones_diff_cols)), True), ge(1, ones_diff_cols)), le(_if_then_else(or_(True, False), zeros_diff_cols, 3), _if_then_else(True, zeros_diff_rows, 2)))
le(_if_then_else(ge(_if_then_else(le(compare_blocks_rows, 4), _if_then_else(False, 1, ones_diff_rows), _if_then_else(False, ones_diff_rows, 2)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(True, 1, compare_blocks_cols))), _if_then_else(and_(ge(0, zeros_diff_cols), ge(ARG7, 4)), _if_then_else(le(compare_blocks_rows, ones_diff_cols), _if_then_else(False, zeros_diff_cols, compare_blocks_rows), _if_then_else(True, ones_diff_rows, 2)), _if_then_else(and_(False, False), _if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(True, 2, 1))), _if_then_else(le(_if_then_else(True, ARG6, zeros_diff_cols), _if_then_else(True, 4, ARG6)), _if_then_else(or_(False, True), _if_then_else(False, _if_then_else(ge(3, 0), zeros_diff_cols, ones_diff_cols), 1), _if_then_else(False, 0, 4)), _if_then_else(ge(0, compare_blocks_rows), _if_then_else(True, ARG6, 1), _if_then_else(True, zeros_diff_cols, ones_diff_rows)))), _if_then_else(or_(or_(or_(False, True), ge(zeros_diff_cols, zeros_diff_rows)), or_(ge(4, ARG7), le(compare_blocks_rows, ones_diff_rows))), _if_then_else(ge(_if_then_else(True, ARG7, zeros_diff_cols), _if_then_else(False, 4, ARG7)), _if_then_else(ge(ones_diff_cols, zeros_diff_cols), _if_then_else(False, ARG6, 1), _if_then_else(False, ones_diff_cols, 3)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(True, compare_blocks_cols, ones_diff_rows))), _if_then_else(and_(or_(False, True), or_(True, True)), _if_then_else(or_(True, False), _if_then_else(False, 2, ones_diff_rows), _if_then_else(True, ARG6, ARG7)), _if_then_else(le(zeros_diff_rows, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_cols)))))
le(_if_then_else(le(zeros_diff_rows, 3), _if_then_else(True, 3, 3), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(ge(1, ones_diff_rows), _if_then_else(True, ARG6, 2), _if_then_else(False, ones_diff_cols, ones_diff_cols)))
VAL TREES:
add(mul(add(add(mul(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_rows))), add(add(mul(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)), add(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)))), add(mul(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols))), add(add(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_rows)), mul(compare_blocks_rows, mul(ones_diff_rows, compare_blocks_rows)))))
add(add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_cols))), mul(mul(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_cols))))
mul(add(add(compare_blocks_rows, add(compare_blocks_rows, ones_diff_cols)), add(add(mul(mul(mul(mul(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), add(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, ones_diff_rows)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows)))), add(mul(mul(mul(compare_blocks_rows, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_rows, compare_blocks_rows))), mul(add(mul(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, compare_blocks_cols)), mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_rows))))), ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows))), add(mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_rows))))
add(mul(add(mul(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_rows)), add(mul(ones_diff_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols))), add(mul(add(add(mul(mul(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_rows, zeros_diff_rows)), add(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols))), zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)), mul(mul(zeros_diff_cols, zeros_diff_rows), add(ones_diff_cols, mul(zeros_diff_rows, zeros_diff_cols))))), mul(mul(add(mul(compare_blocks_rows, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows))), add(mul(mul(compare_blocks_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_cols)))))
mul(mul(add(add(mul(compare_blocks_cols, ones_diff_cols), zeros_diff_cols), compare_blocks_rows), add(ones_diff_cols, zeros_diff_rows)), add(add(zeros_diff_rows, compare_blocks_cols), add(add(compare_blocks_cols, ones_diff_cols), add(zeros_diff_cols, add(ones_diff_cols, compare_blocks_rows)))))
add(add(mul(mul(mul(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), add(mul(zeros_diff_rows, ones_diff_rows), mul(zeros_diff_rows, ones_diff_rows))), add(mul(add(ones_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)))), mul(add(add(add(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, zeros_diff_cols))), add(add(zeros_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows))))
COND TREES:
and_(le(_if_then_else(or_(ge(_if_then_else(True, 2, 1), _if_then_else(and_(False, ge(compare_blocks_cols, zeros_diff_rows)), _if_then_else(True, compare_blocks_cols, _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), 2)), or_(or_(False, True), or_(or_(False, False), True))), ones_diff_cols, _if_then_else(ge(_if_then_else(False, zeros_diff_rows, zeros_diff_cols), _if_then_else(True, _if_then_else(le(zeros_diff_rows, ARG7), _if_then_else(False, 3, ones_diff_rows), ARG6), _if_then_else(False, 1, _if_then_else(False, zeros_diff_rows, compare_blocks_cols)))), _if_then_else(or_(ge(1, _if_then_else(False, 2, 3)), True), _if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(and_(False, True), compare_blocks_rows, _if_then_else(ge(ones_diff_cols, 0), compare_blocks_rows, _if_then_else(False, compare_blocks_cols, 3)))), _if_then_else(or_(False, True), _if_then_else(le(ones_diff_cols, ARG6), compare_blocks_cols, 4), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_rows, ARG7), 2)))), _if_then_else(or_(False, True), compare_blocks_rows, 0)), le(_if_then_else(False, zeros_diff_cols, 3), _if_then_else(True, ones_diff_rows, ones_diff_cols)))
or_(and_(le(_if_then_else(False, ARG7, ARG6), _if_then_else(True, ARG7, 0)), le(_if_then_else(False, ARG6, 2), _if_then_else(ge(_if_then_else(le(_if_then_else(False, 4, zeros_diff_cols), _if_then_else(True, ones_diff_rows, ARG7)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(True, ones_diff_rows, compare_blocks_cols)), _if_then_else(le(2, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, 2), _if_then_else(True, ones_diff_cols, 0))), _if_then_else(le(_if_then_else(True, 4, 3), _if_then_else(True, 0, 4)), _if_then_else(le(ARG7, 4), _if_then_else(True, zeros_diff_cols, ARG7), _if_then_else(False, 0, ARG7)), _if_then_else(le(ones_diff_cols, ARG7), _if_then_else(True, 0, 4), _if_then_else(True, zeros_diff_cols, 4)))), _if_then_else(or_(ge(_if_then_else(True, 3, ARG6), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), and_(and_(False, False), and_(False, False))), _if_then_else(and_(and_(False, False), or_(True, False)), _if_then_else(or_(False, False), _if_then_else(False, 1, 0), _if_then_else(True, 3, 1)), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, ARG6, zeros_diff_rows))), _if_then_else(or_(le(zeros_diff_cols, 3), and_(False, True)), _if_then_else(or_(False, False), _if_then_else(True, 2, ARG6), _if_then_else(False, compare_blocks_rows, compare_blocks_rows)), _if_then_else(le(ones_diff_cols, compare_blocks_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, 0)))), _if_then_else(and_(and_(ge(0, 3), ge(compare_blocks_rows, ARG6)), le(_if_then_else(False, 4, 0), _if_then_else(True, zeros_diff_rows, 0))), _if_then_else(ge(_if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, 1))), _if_then_else(and_(ge(ones_diff_rows, 0), and_(True, True)), _if_then_else(ge(3, compare_blocks_cols), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(False, 0, 1)), _if_then_else(le(zeros_diff_rows, 4), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, 0))))))), le(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, ones_diff_cols), _if_then_else(False, ARG7, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, 2))))
and_(ge(_if_then_else(and_(False, True), _if_then_else(False, ARG7, ARG7), _if_then_else(True, 2, 2)), _if_then_else(and_(False, False), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, 1, 2))), ge(_if_then_else(and_(True, True), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)), _if_then_else(le(1, 3), _if_then_else(False, 1, 0), _if_then_else(False, ones_diff_rows, zeros_diff_rows))))
or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(False, 3, zeros_diff_rows)), and_(and_(False, True), le(ARG7, compare_blocks_rows)))
or_(and_(or_(and_(ge(_if_then_else(False, _if_then_else(True, ARG6, zeros_diff_cols), _if_then_else(False, ones_diff_rows, zeros_diff_rows)), _if_then_else(True, zeros_diff_rows, _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), le(_if_then_else(True, 1, 3), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_cols, 4), ones_diff_rows))), False), ge(compare_blocks_cols, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), and_(or_(le(2, zeros_diff_rows), False), or_(True, True)))
VAL TREES:
mul(add(zeros_diff_rows, add(ones_diff_rows, ones_diff_cols)), add(add(mul(zeros_diff_rows, compare_blocks_cols), ones_diff_rows), ones_diff_cols))
mul(add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, mul(mul(compare_blocks_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_cols)))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), add(add(add(compare_blocks_cols, zeros_diff_rows), add(mul(zeros_diff_rows, compare_blocks_cols), add(ones_diff_cols, compare_blocks_cols))), zeros_diff_cols)), add(add(zeros_diff_cols, mul(compare_blocks_rows, add(add(ones_diff_rows, ones_diff_rows), ones_diff_rows))), mul(zeros_diff_rows, compare_blocks_rows)))
mul(add(mul(zeros_diff_rows, ones_diff_rows), mul(mul(mul(ones_diff_rows, compare_blocks_rows), zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows))), mul(add(ones_diff_rows, ones_diff_cols), compare_blocks_rows))
mul(mul(mul(add(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)), ones_diff_cols), add(add(compare_blocks_cols, add(compare_blocks_rows, compare_blocks_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(zeros_diff_rows, compare_blocks_cols))))
mul(add(add(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), ones_diff_cols), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(add(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(ones_diff_cols, zeros_diff_cols))))
COND TREES:
and_(le(_if_then_else(or_(ge(_if_then_else(True, 2, 1), _if_then_else(and_(False, ge(compare_blocks_cols, zeros_diff_rows)), _if_then_else(True, compare_blocks_cols, _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), 2)), or_(or_(False, True), or_(or_(False, False), True))), ones_diff_cols, _if_then_else(ge(_if_then_else(False, zeros_diff_rows, zeros_diff_cols), _if_then_else(True, _if_then_else(le(zeros_diff_rows, ARG7), _if_then_else(False, 3, ones_diff_rows), ARG6), _if_then_else(False, 1, _if_then_else(False, zeros_diff_rows, compare_blocks_cols)))), _if_then_else(or_(ge(1, _if_then_else(False, 2, 3)), True), _if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(and_(False, True), compare_blocks_rows, _if_then_else(ge(ones_diff_cols, 0), compare_blocks_rows, _if_then_else(False, compare_blocks_cols, 3)))), _if_then_else(or_(False, True), _if_then_else(le(ones_diff_cols, ARG6), compare_blocks_cols, 4), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_rows, ARG7), 2)))), _if_then_else(or_(False, True), compare_blocks_rows, 0)), le(_if_then_else(False, zeros_diff_cols, 3), _if_then_else(True, ones_diff_rows, ones_diff_cols)))
or_(and_(le(_if_then_else(False, ARG7, ARG6), _if_then_else(True, ARG7, 0)), le(_if_then_else(False, ARG6, 2), _if_then_else(ge(_if_then_else(le(_if_then_else(False, 4, zeros_diff_cols), _if_then_else(True, ones_diff_rows, ARG7)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(True, ones_diff_rows, compare_blocks_cols)), _if_then_else(le(2, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, 2), _if_then_else(True, ones_diff_cols, 0))), _if_then_else(le(_if_then_else(True, 4, 3), _if_then_else(True, 0, 4)), _if_then_else(le(ARG7, 4), _if_then_else(True, zeros_diff_cols, ARG7), _if_then_else(False, 0, ARG7)), _if_then_else(le(ones_diff_cols, ARG7), _if_then_else(True, 0, 4), _if_then_else(True, zeros_diff_cols, 4)))), _if_then_else(or_(ge(_if_then_else(True, 3, ARG6), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), and_(and_(False, False), and_(False, False))), _if_then_else(and_(and_(False, False), or_(True, False)), _if_then_else(or_(False, False), _if_then_else(False, 1, 0), _if_then_else(True, 3, 1)), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, ARG6, zeros_diff_rows))), _if_then_else(or_(le(zeros_diff_cols, 3), and_(False, True)), _if_then_else(or_(False, False), _if_then_else(True, 2, ARG6), _if_then_else(False, compare_blocks_rows, compare_blocks_rows)), _if_then_else(le(ones_diff_cols, compare_blocks_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, 0)))), _if_then_else(and_(and_(ge(0, 3), ge(compare_blocks_rows, ARG6)), le(_if_then_else(False, 4, 0), _if_then_else(True, zeros_diff_rows, 0))), _if_then_else(ge(_if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, 1))), _if_then_else(and_(ge(ones_diff_rows, 0), and_(True, True)), _if_then_else(ge(3, compare_blocks_cols), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(False, 0, 1)), _if_then_else(le(zeros_diff_rows, 4), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, 0))))))), le(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, ones_diff_cols), _if_then_else(False, ARG7, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, 2))))
and_(ge(_if_then_else(and_(False, True), _if_then_else(False, ARG7, ARG7), _if_then_else(True, 2, 2)), _if_then_else(and_(False, False), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, 1, 2))), ge(_if_then_else(and_(True, True), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)), _if_then_else(le(1, 3), _if_then_else(False, 1, 0), _if_then_else(False, ones_diff_rows, zeros_diff_rows))))
or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(False, 3, zeros_diff_rows)), and_(and_(False, True), le(ARG7, compare_blocks_rows)))
or_(and_(or_(and_(ge(_if_then_else(False, _if_then_else(True, ARG6, zeros_diff_cols), _if_then_else(False, ones_diff_rows, zeros_diff_rows)), _if_then_else(True, zeros_diff_rows, _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), le(_if_then_else(True, 1, 3), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_cols, 4), ones_diff_rows))), False), ge(compare_blocks_cols, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), and_(or_(le(2, zeros_diff_rows), False), or_(True, True)))
VAL TREES:
mul(add(zeros_diff_rows, add(mul(mul(add(add(mul(compare_blocks_rows, zeros_diff_rows), ones_diff_cols), mul(add(ones_diff_rows, ones_diff_cols), zeros_diff_cols)), mul(mul(compare_blocks_rows, zeros_diff_rows), compare_blocks_cols)), mul(add(zeros_diff_rows, ones_diff_cols), add(mul(zeros_diff_cols, zeros_diff_rows), ones_diff_rows))), ones_diff_cols)), add(add(mul(zeros_diff_rows, compare_blocks_cols), ones_diff_rows), ones_diff_cols))
mul(add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, mul(mul(compare_blocks_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_cols)))))
mul(mul(add(mul(add(add(add(ones_diff_cols, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_cols)), add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_rows, zeros_diff_cols))), add(mul(add(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, zeros_diff_rows)), add(mul(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)))), compare_blocks_cols), add(add(add(compare_blocks_cols, zeros_diff_rows), add(mul(zeros_diff_rows, compare_blocks_cols), add(ones_diff_cols, compare_blocks_cols))), zeros_diff_cols)), add(add(zeros_diff_cols, mul(compare_blocks_rows, add(add(ones_diff_rows, ones_diff_rows), ones_diff_rows))), mul(zeros_diff_rows, compare_blocks_rows)))
mul(add(mul(zeros_diff_rows, ones_diff_rows), mul(mul(mul(ones_diff_rows, compare_blocks_rows), zeros_diff_cols), mul(add(add(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_rows)), add(mul(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_cols, zeros_diff_rows))), ones_diff_rows))), mul(add(ones_diff_rows, ones_diff_cols), compare_blocks_rows))
mul(mul(mul(mul(mul(mul(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols)), add(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows))), add(compare_blocks_cols, compare_blocks_rows)), ones_diff_cols), add(add(compare_blocks_cols, add(compare_blocks_rows, compare_blocks_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(zeros_diff_rows, compare_blocks_cols))))
mul(add(add(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), ones_diff_cols), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(add(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(ones_diff_cols, zeros_diff_cols))))
COND TREES:
ge(_if_then_else(and_(True, and_(False, True)), compare_blocks_cols, _if_then_else(False, ARG7, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, _if_then_else(le(2, _if_then_else(ge(0, 0), _if_then_else(False, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, 2, 0))), zeros_diff_rows, ARG7), ones_diff_rows), _if_then_else(le(2, 2), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, 2), 4), _if_then_else(or_(False, True), 3, ARG6))))
and_(or_(ge(zeros_diff_cols, ones_diff_rows), ge(_if_then_else(or_(True, False), _if_then_else(True, ARG7, _if_then_else(le(ARG6, compare_blocks_rows), _if_then_else(False, 4, ARG7), 3)), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(ge(2, compare_blocks_rows), _if_then_else(True, _if_then_else(True, ones_diff_rows, zeros_diff_rows), _if_then_else(False, _if_then_else(False, 3, compare_blocks_rows), compare_blocks_rows)), _if_then_else(False, 2, zeros_diff_cols)))), and_(or_(True, False), and_(True, False)))
ge(_if_then_else(and_(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(False, ones_diff_rows, 4), _if_then_else(True, compare_blocks_cols, ARG6)), _if_then_else(ge(ones_diff_rows, 3), _if_then_else(False, ARG6, compare_blocks_cols), _if_then_else(True, 2, 2))), ge(_if_then_else(and_(True, False), 0, _if_then_else(False, compare_blocks_cols, ones_diff_rows)), _if_then_else(le(2, ARG6), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(True, 4, ones_diff_rows)))), _if_then_else(False, _if_then_else(False, ones_diff_cols, _if_then_else(False, 2, ones_diff_rows)), zeros_diff_cols), _if_then_else(False, _if_then_else(True, 0, compare_blocks_cols), zeros_diff_cols)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(True, ARG6, 2)))
or_(le(_if_then_else(True, ARG6, zeros_diff_cols), _if_then_else(le(zeros_diff_rows, ones_diff_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), 2)), ge(_if_then_else(and_(True, False), ones_diff_rows, zeros_diff_rows), compare_blocks_rows))
le(_if_then_else(le(_if_then_else(True, ARG6, ARG6), compare_blocks_rows), _if_then_else(True, _if_then_else(False, 4, compare_blocks_cols), 3), _if_then_else(False, zeros_diff_cols, compare_blocks_cols)), _if_then_else(and_(and_(False, False), True), _if_then_else(or_(False, True), 3, zeros_diff_rows), _if_then_else(False, 2, 1)))
VAL TREES:
add(add(add(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_cols)), add(add(ones_diff_rows, add(ones_diff_cols, ones_diff_cols)), mul(zeros_diff_rows, zeros_diff_cols)))
add(add(add(zeros_diff_rows, zeros_diff_rows), add(mul(ones_diff_cols, mul(ones_diff_cols, compare_blocks_cols)), zeros_diff_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, mul(add(ones_diff_rows, ones_diff_cols), ones_diff_cols))))
add(mul(add(add(add(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, ones_diff_rows)), add(add(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_rows))), add(add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, zeros_diff_rows)))), add(mul(mul(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))))
add(add(mul(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_cols)), add(add(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_cols))), add(mul(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)))), add(mul(add(add(compare_blocks_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_cols))), add(mul(add(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)))))
add(mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))), add(add(mul(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), add(add(zeros_diff_cols, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_rows))))
mul(add(mul(mul(zeros_diff_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(add(mul(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, zeros_diff_rows)), add(mul(zeros_diff_cols, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows))))
COND TREES:
ge(_if_then_else(and_(True, and_(False, True)), compare_blocks_cols, _if_then_else(False, ARG7, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, _if_then_else(le(_if_then_else(or_(False, False), _if_then_else(True, ARG6, zeros_diff_rows), _if_then_else(False, ones_diff_cols, 1)), _if_then_else(ge(0, 0), _if_then_else(False, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, _if_then_else(or_(False, False), _if_then_else(True, ARG6, zeros_diff_rows), _if_then_else(False, ones_diff_cols, 1)), 0))), zeros_diff_rows, ARG7), ones_diff_rows), _if_then_else(le(2, 2), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, 2), 4), _if_then_else(or_(False, True), 3, ARG6))))
and_(or_(ge(zeros_diff_cols, ones_diff_rows), ge(_if_then_else(or_(True, False), _if_then_else(True, ARG7, _if_then_else(le(ARG6, compare_blocks_rows), _if_then_else(False, 4, ARG7), 3)), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(ge(2, compare_blocks_rows), _if_then_else(True, _if_then_else(True, ones_diff_rows, zeros_diff_rows), _if_then_else(False, _if_then_else(False, 3, compare_blocks_rows), compare_blocks_rows)), _if_then_else(False, 2, zeros_diff_cols)))), and_(or_(True, False), and_(True, False)))
ge(_if_then_else(and_(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(False, ones_diff_rows, 4), _if_then_else(True, compare_blocks_cols, ARG6)), _if_then_else(ge(ones_diff_rows, 3), _if_then_else(False, ARG6, compare_blocks_cols), _if_then_else(True, 2, 2))), ge(_if_then_else(and_(True, False), 0, _if_then_else(False, compare_blocks_cols, ones_diff_rows)), _if_then_else(le(2, ARG6), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(True, 4, ones_diff_rows)))), _if_then_else(False, _if_then_else(False, ones_diff_cols, _if_then_else(False, 2, ones_diff_rows)), zeros_diff_cols), _if_then_else(False, _if_then_else(True, 0, compare_blocks_cols), zeros_diff_cols)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(True, ARG6, 2)))
or_(le(_if_then_else(True, ARG6, zeros_diff_cols), _if_then_else(le(zeros_diff_rows, ones_diff_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), 2)), ge(_if_then_else(and_(True, False), ones_diff_rows, zeros_diff_rows), compare_blocks_rows))
le(_if_then_else(le(_if_then_else(True, ARG6, ARG6), compare_blocks_rows), _if_then_else(False, _if_then_else(False, 4, compare_blocks_cols), 3), _if_then_else(False, zeros_diff_cols, compare_blocks_cols)), _if_then_else(and_(and_(False, False), True), _if_then_else(or_(False, False), 3, zeros_diff_rows), _if_then_else(False, 2, 1)))
VAL TREES:
add(add(add(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_cols)), add(add(ones_diff_rows, add(ones_diff_cols, ones_diff_cols)), mul(zeros_diff_rows, zeros_diff_cols)))
add(add(add(zeros_diff_rows, zeros_diff_rows), add(mul(ones_diff_cols, mul(ones_diff_cols, compare_blocks_cols)), zeros_diff_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, mul(add(ones_diff_rows, ones_diff_cols), ones_diff_cols))))
add(mul(add(add(add(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, ones_diff_rows)), add(add(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_rows))), add(add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, zeros_diff_rows)))), add(mul(mul(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))))
add(add(mul(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_cols)), add(add(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_cols))), add(mul(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)))), add(mul(add(add(compare_blocks_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_cols))), add(mul(add(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)))))
add(mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))), add(add(mul(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), add(add(zeros_diff_cols, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_rows))))
mul(add(mul(mul(zeros_diff_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(add(mul(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, zeros_diff_rows)), add(mul(zeros_diff_cols, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows))))
COND TREES:
or_(ge(_if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(False, ARG6, compare_blocks_rows)), and_(or_(or_(True, False), True), or_(or_(True, False), True)))
and_(ge(_if_then_else(True, ones_diff_rows, zeros_diff_rows), _if_then_else(True, _if_then_else(True, 1, zeros_diff_rows), ones_diff_rows)), ge(_if_then_else(ge(4, zeros_diff_cols), ARG7, _if_then_else(True, zeros_diff_cols, 4)), _if_then_else(True, 1, _if_then_else(True, zeros_diff_rows, 0))))
and_(or_(and_(ge(_if_then_else(False, 3, ARG7), 0), False), or_(False, False)), le(_if_then_else(ge(zeros_diff_rows, ones_diff_cols), ones_diff_rows, 2), _if_then_else(False, ARG6, _if_then_else(False, _if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(False, ones_diff_rows, 4)))))
and_(or_(and_(le(compare_blocks_rows, compare_blocks_rows), and_(True, True)), or_(True, True)), ge(_if_then_else(True, _if_then_else(ge(3, 0), zeros_diff_cols, ones_diff_cols), ARG6), _if_then_else(le(3, ones_diff_rows), zeros_diff_cols, _if_then_else(True, 2, 2))))
and_(ge(_if_then_else(False, 3, ARG7), _if_then_else(True, 0, _if_then_else(False, 0, ARG6))), and_(and_(False, True), or_(True, False)))
VAL TREES:
add(add(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_cols)))
mul(add(ones_diff_rows, mul(ones_diff_rows, zeros_diff_cols)), add(add(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_cols)))
mul(mul(mul(add(ones_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, ones_diff_cols))), add(mul(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), add(ones_diff_cols, compare_blocks_cols))))
mul(add(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(mul(add(ones_diff_rows, ones_diff_cols), compare_blocks_rows), zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows)))
add(add(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)))
mul(add(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), add(ones_diff_cols, add(compare_blocks_cols, zeros_diff_rows)))
COND TREES:
or_(ge(_if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(False, _if_then_else(False, _if_then_else(ge(_if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(True, 2, zeros_diff_cols), _if_then_else(False, 1, zeros_diff_rows)), _if_then_else(ge(2, zeros_diff_cols), _if_then_else(True, zeros_diff_rows, 1), _if_then_else(False, zeros_diff_cols, ARG7))), 0), compare_blocks_rows)), and_(ge(ones_diff_cols, ARG7), ge(ones_diff_cols, ARG7)))
and_(ge(_if_then_else(True, 2, zeros_diff_rows), _if_then_else(True, _if_then_else(True, 1, zeros_diff_rows), ones_diff_rows)), ge(_if_then_else(ge(4, zeros_diff_cols), ARG7, _if_then_else(True, zeros_diff_cols, 4)), _if_then_else(True, 1, _if_then_else(True, zeros_diff_rows, 0))))
and_(or_(and_(ge(_if_then_else(False, 3, ARG7), 0), False), or_(False, False)), le(_if_then_else(ge(zeros_diff_rows, ones_diff_cols), ones_diff_rows, 2), _if_then_else(False, ARG6, _if_then_else(False, _if_then_else(False, 4, _if_then_else(ge(_if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), _if_then_else(ge(ARG6, 2), _if_then_else(False, ARG6, 0), _if_then_else(False, 3, zeros_diff_cols)), _if_then_else(le(zeros_diff_rows, ones_diff_cols), _if_then_else(True, 4, 2), _if_then_else(False, ones_diff_cols, 3)))), _if_then_else(False, 4, 4)))))
and_(or_(and_(False, and_(True, True)), or_(True, True)), ge(_if_then_else(True, compare_blocks_rows, ARG6), _if_then_else(le(3, ones_diff_rows), zeros_diff_cols, _if_then_else(True, 2, 2))))
and_(ge(_if_then_else(False, 3, ARG7), 0), and_(and_(False, True), or_(True, False)))
VAL TREES:
add(ones_diff_cols, mul(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, mul(mul(add(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_cols, ones_diff_cols)), add(mul(zeros_diff_rows, mul(ones_diff_cols, compare_blocks_rows)), mul(mul(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))))))
mul(add(add(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), zeros_diff_cols)
mul(mul(mul(add(ones_diff_cols, add(mul(ones_diff_rows, compare_blocks_cols), compare_blocks_rows)), add(zeros_diff_cols, ones_diff_rows)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, ones_diff_cols))), add(mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), add(ones_diff_cols, compare_blocks_cols))))
mul(add(add(ones_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows)), mul(mul(mul(ones_diff_rows, compare_blocks_rows), zeros_diff_cols), mul(ones_diff_rows, zeros_diff_rows)))
add(add(add(zeros_diff_rows, mul(add(add(compare_blocks_cols, add(add(zeros_diff_cols, zeros_diff_cols), compare_blocks_rows)), add(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_rows, compare_blocks_cols), add(mul(compare_blocks_rows, zeros_diff_cols), zeros_diff_cols)))), add(compare_blocks_cols, zeros_diff_rows)), add(add(mul(zeros_diff_cols, zeros_diff_cols), ones_diff_rows), add(zeros_diff_cols, compare_blocks_cols)))
mul(add(zeros_diff_rows, add(ones_diff_rows, ones_diff_cols)), mul(add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_rows)), add(mul(ones_diff_cols, ones_diff_cols), add(compare_blocks_cols, compare_blocks_cols))), add(mul(mul(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_cols, compare_blocks_rows)))))
COND TREES:
or_(ge(ARG6, _if_then_else(False, ARG6, ARG7)), and_(ge(zeros_diff_cols, 1), or_(False, True)))
or_(ge(_if_then_else(False, 1, 4), _if_then_else(True, 1, zeros_diff_rows)), True)
and_(and_(and_(False, False), le(compare_blocks_cols, _if_then_else(True, _if_then_else(True, ARG6, ARG7), ones_diff_rows))), ge(_if_then_else(or_(le(ARG7, _if_then_else(True, ones_diff_cols, 0)), le(ones_diff_rows, _if_then_else(True, zeros_diff_rows, 2))), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_rows, _if_then_else(False, ones_diff_rows, ones_diff_cols)), _if_then_else(False, ARG6, zeros_diff_rows)), _if_then_else(ge(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 3, ARG7), _if_then_else(or_(True, True), compare_blocks_cols, compare_blocks_cols))), _if_then_else(True, zeros_diff_rows, 3)))
ge(_if_then_else(le(_if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(le(zeros_diff_rows, 4), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(False, ARG7, compare_blocks_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, ARG7, ARG7))), _if_then_else(and_(le(ARG6, compare_blocks_cols), ge(compare_blocks_rows, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 0)), _if_then_else(le(_if_then_else(True, ARG7, zeros_diff_cols), _if_then_else(le(zeros_diff_rows, ones_diff_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), 2)), _if_then_else(True, 0, ARG7), _if_then_else(False, 2, ones_diff_cols))))
and_(le(_if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, 4, compare_blocks_rows)), and_(le(compare_blocks_rows, 1), and_(True, and_(ge(_if_then_else(ge(_if_then_else(False, ARG6, ones_diff_cols), _if_then_else(False, zeros_diff_cols, ones_diff_cols)), _if_then_else(and_(False, False), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, 3, 0)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, ARG6), _if_then_else(True, 0, 4))), _if_then_else(or_(and_(False, False), le(3, ones_diff_cols)), _if_then_else(ge(ARG7, ARG6), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(True, 0, zeros_diff_cols)), _if_then_else(le(compare_blocks_cols, zeros_diff_rows), _if_then_else(True, ARG7, ARG6), _if_then_else(False, ones_diff_cols, 3)))), and_(ge(_if_then_else(or_(False, True), _if_then_else(True, zeros_diff_rows, 1), _if_then_else(False, compare_blocks_cols, 3)), _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, 4, 2))), ge(_if_then_else(or_(False, False), _if_then_else(True, compare_blocks_rows, ARG6), _if_then_else(True, ARG7, compare_blocks_rows)), _if_then_else(and_(False, False), _if_then_else(True, 0, 1), _if_then_else(False, 4, ones_diff_cols))))))))
VAL TREES:
add(mul(mul(compare_blocks_cols, compare_blocks_cols), mul(mul(add(ones_diff_rows, compare_blocks_cols), ones_diff_rows), add(add(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_cols)), ones_diff_cols))), mul(ones_diff_rows, ones_diff_cols))
mul(mul(add(ones_diff_rows, mul(zeros_diff_cols, mul(zeros_diff_rows, zeros_diff_rows))), ones_diff_rows), add(add(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)))
mul(mul(add(mul(add(add(compare_blocks_cols, compare_blocks_rows), compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols))), mul(mul(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_cols)))), mul(add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), add(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, ones_diff_rows)))))
add(add(add(ones_diff_rows, ones_diff_rows), mul(mul(add(zeros_diff_cols, compare_blocks_cols), zeros_diff_cols), compare_blocks_rows)), mul(add(zeros_diff_cols, add(ones_diff_cols, zeros_diff_rows)), mul(ones_diff_rows, compare_blocks_rows)))
add(mul(add(mul(add(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows))), mul(add(add(add(zeros_diff_cols, compare_blocks_cols), compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), mul(add(mul(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), mul(add(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_cols, compare_blocks_cols))), mul(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(mul(add(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)), add(zeros_diff_rows, ones_diff_rows)), add(add(ones_diff_rows, add(compare_blocks_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, zeros_diff_rows), compare_blocks_cols)))
COND TREES:
or_(ge(_if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(False, _if_then_else(or_(True, False), ARG7, _if_then_else(or_(False, True), compare_blocks_rows, compare_blocks_rows)), compare_blocks_rows)), and_(ge(ones_diff_cols, ARG7), or_(or_(True, False), True)))
and_(ge(_if_then_else(True, ones_diff_rows, zeros_diff_rows), _if_then_else(True, _if_then_else(True, zeros_diff_rows, 3), ones_diff_rows)), ge(_if_then_else(ge(4, zeros_diff_cols), ARG7, _if_then_else(True, zeros_diff_cols, 4)), _if_then_else(True, 1, _if_then_else(True, zeros_diff_rows, 0))))
and_(or_(and_(ge(_if_then_else(False, 3, ARG7), 0), False), or_(False, False)), le(_if_then_else(ge(zeros_diff_rows, ones_diff_cols), ones_diff_rows, 2), _if_then_else(False, ARG6, _if_then_else(False, _if_then_else(False, 4, zeros_diff_rows), _if_then_else(False, ones_diff_rows, 4)))))
and_(or_(and_(le(compare_blocks_rows, compare_blocks_rows), and_(True, True)), or_(True, True)), ge(_if_then_else(True, _if_then_else(ge(3, 0), zeros_diff_cols, ones_diff_cols), ARG6), _if_then_else(le(3, 2), zeros_diff_cols, _if_then_else(True, 2, 2))))
and_(ge(_if_then_else(False, compare_blocks_rows, ARG7), _if_then_else(True, 0, 0)), and_(and_(False, True), or_(True, False)))
VAL TREES:
add(add(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_cols)))
mul(add(ones_diff_rows, mul(ones_diff_rows, zeros_diff_cols)), add(add(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_cols)))
mul(mul(mul(add(ones_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, ones_diff_cols))), add(mul(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), add(ones_diff_cols, compare_blocks_cols))))
mul(add(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(mul(add(ones_diff_rows, ones_diff_cols), compare_blocks_rows), zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows)))
add(add(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)))
mul(add(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), add(ones_diff_cols, add(compare_blocks_cols, zeros_diff_rows)))
COND TREES:
or_(ge(_if_then_else(or_(True, False), ARG7, _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(False, ARG6, ARG7)), and_(ge(zeros_diff_cols, 1), or_(False, True)))
or_(ge(_if_then_else(False, 1, 4), _if_then_else(True, zeros_diff_rows, 3)), or_(or_(True, True), ge(_if_then_else(or_(True, False), _if_then_else(True, ARG7, _if_then_else(le(ARG6, compare_blocks_rows), _if_then_else(False, 4, ARG7), 3)), _if_then_else(False, compare_blocks_cols, 4)), ARG6)))
and_(and_(and_(False, False), le(compare_blocks_cols, _if_then_else(True, _if_then_else(True, 2, 2), 4))), ge(_if_then_else(or_(False, True), _if_then_else(False, 4, 4), 2), _if_then_else(True, zeros_diff_rows, 3)))
ge(_if_then_else(le(_if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(le(zeros_diff_rows, 4), ones_diff_cols, _if_then_else(False, ARG7, compare_blocks_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, ARG7, ARG7))), _if_then_else(and_(le(ARG6, compare_blocks_cols), ge(compare_blocks_rows, 2)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 0)), _if_then_else(or_(False, False), _if_then_else(True, 0, ARG7), _if_then_else(False, 2, ones_diff_cols))))
and_(le(_if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, 4, compare_blocks_rows)), and_(le(compare_blocks_rows, 1), and_(True, True)))
VAL TREES:
add(mul(mul(add(mul(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_cols)), compare_blocks_cols), mul(mul(add(ones_diff_rows, compare_blocks_cols), ones_diff_rows), add(ones_diff_cols, ones_diff_cols))), mul(mul(ones_diff_rows, ones_diff_cols), add(mul(ones_diff_cols, ones_diff_rows), zeros_diff_cols)))
mul(mul(add(ones_diff_rows, mul(zeros_diff_cols, mul(zeros_diff_rows, zeros_diff_rows))), mul(add(zeros_diff_rows, compare_blocks_cols), compare_blocks_cols)), zeros_diff_rows)
mul(mul(add(mul(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_cols))), mul(mul(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)))), mul(add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(mul(zeros_diff_cols, zeros_diff_rows), add(add(zeros_diff_cols, mul(compare_blocks_rows, add(add(ones_diff_rows, ones_diff_rows), ones_diff_rows))), mul(zeros_diff_rows, compare_blocks_rows)))), add(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, ones_diff_rows)))))
add(add(add(ones_diff_rows, mul(mul(zeros_diff_rows, ones_diff_cols), add(mul(mul(add(zeros_diff_cols, compare_blocks_cols), zeros_diff_cols), compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_cols)))), mul(mul(add(zeros_diff_cols, compare_blocks_cols), zeros_diff_cols), compare_blocks_rows)), mul(add(zeros_diff_cols, add(ones_diff_cols, zeros_diff_rows)), mul(ones_diff_rows, compare_blocks_rows)))
add(mul(add(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows))), mul(add(add(zeros_diff_cols, compare_blocks_cols), compare_blocks_cols), mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), mul(add(mul(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), mul(add(zeros_diff_cols, mul(zeros_diff_cols, compare_blocks_cols)), mul(zeros_diff_cols, compare_blocks_cols))), mul(add(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(mul(mul(add(ones_diff_rows, ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(zeros_diff_rows, ones_diff_rows)), add(add(ones_diff_rows, compare_blocks_rows), mul(mul(ones_diff_rows, zeros_diff_rows), compare_blocks_cols)))
COND TREES:
or_(ge(_if_then_else(or_(True, False), ARG7, _if_then_else(False, compare_blocks_rows, compare_blocks_rows)), _if_then_else(False, ARG6, ARG7)), and_(False, or_(False, True)))
or_(ge(_if_then_else(False, 1, 4), _if_then_else(True, zeros_diff_rows, 3)), or_(or_(True, True), ge(zeros_diff_cols, ARG6)))
and_(and_(and_(False, False), le(compare_blocks_cols, _if_then_else(True, _if_then_else(True, ARG6, ARG7), 4))), ge(_if_then_else(or_(False, True), _if_then_else(False, 4, 4), 2), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(_if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(le(zeros_diff_rows, 4), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(False, ARG7, compare_blocks_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, ARG7, ARG7))), _if_then_else(and_(le(ARG6, compare_blocks_cols), ge(compare_blocks_rows, 2)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 0)), _if_then_else(or_(False, False), _if_then_else(True, 0, ARG7), _if_then_else(False, 2, ones_diff_cols))))
and_(le(_if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, 4, compare_blocks_rows)), and_(le(compare_blocks_rows, 1), and_(True, True)))
VAL TREES:
add(mul(mul(compare_blocks_cols, compare_blocks_cols), mul(mul(add(ones_diff_rows, compare_blocks_cols), ones_diff_rows), add(ones_diff_cols, ones_diff_cols))), mul(mul(ones_diff_rows, ones_diff_cols), add(mul(ones_diff_cols, ones_diff_rows), add(mul(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_cols)))))
mul(mul(add(ones_diff_rows, mul(zeros_diff_cols, mul(add(add(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)), zeros_diff_rows))), mul(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_rows, mul(zeros_diff_cols, compare_blocks_cols)), add(zeros_diff_cols, compare_blocks_cols)))
mul(mul(add(mul(add(ones_diff_rows, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols))), mul(mul(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), add(zeros_diff_rows, mul(compare_blocks_rows, zeros_diff_cols)))), mul(add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), add(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, ones_diff_rows)))))
add(add(add(ones_diff_rows, mul(mul(zeros_diff_rows, ones_diff_cols), zeros_diff_cols)), mul(zeros_diff_rows, ones_diff_rows)), mul(add(zeros_diff_cols, add(ones_diff_cols, zeros_diff_rows)), mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows))))
add(mul(add(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows))), mul(add(add(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(ones_diff_rows, add(ones_diff_rows, ones_diff_cols)))), mul(add(mul(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), mul(add(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_cols, compare_blocks_cols))), mul(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(mul(mul(add(ones_diff_rows, ones_diff_cols), zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)), compare_blocks_cols)
COND TREES:
and_(or_(and_(True, True), le(ARG6, 2)), False)
le(_if_then_else(ge(_if_then_else(or_(False, False), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(False, 0, zeros_diff_rows)), _if_then_else(le(1, compare_blocks_cols), _if_then_else(False, 1, compare_blocks_rows), _if_then_else(and_(False, False), ARG7, compare_blocks_cols))), _if_then_else(or_(or_(True, True), and_(True, False)), _if_then_else(and_(True, False), _if_then_else(False, 3, 0), _if_then_else(True, 2, compare_blocks_cols)), _if_then_else(or_(True, False), _if_then_else(False, 4, 4), _if_then_else(False, 1, 1))), _if_then_else(le(_if_then_else(True, ARG6, 1), _if_then_else(True, compare_blocks_cols, 2)), _if_then_else(ge(1, ones_diff_cols), _if_then_else(False, ARG6, 4), _if_then_else(False, compare_blocks_rows, ones_diff_rows)), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(True, ARG6, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, ARG6)))), _if_then_else(or_(le(_if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(True, ARG6, 2)), and_(and_(False, True), or_(True, False))), _if_then_else(and_(or_(True, False), le(compare_blocks_rows, compare_blocks_rows)), _if_then_else(ge(zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(True, ones_diff_rows, 4)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, ARG7), _if_then_else(False, 0, ones_diff_rows))), _if_then_else(ge(_if_then_else(False, ARG6, zeros_diff_cols), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(and_(False, False), _if_then_else(True, ones_diff_cols, ARG6), _if_then_else(False, 2, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_cols), _if_then_else(False, 1, 2)))))
and_(or_(or_(False, ge(_if_then_else(le(2, zeros_diff_rows), _if_then_else(True, ones_diff_rows, 3), _if_then_else(True, 0, ARG7)), _if_then_else(le(0, compare_blocks_rows), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), 4, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)))), ge(1, compare_blocks_rows)), True)
le(_if_then_else(ge(_if_then_else(le(compare_blocks_rows, 4), _if_then_else(False, 1, ones_diff_rows), _if_then_else(False, ones_diff_rows, 2)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(True, 1, compare_blocks_cols))), _if_then_else(and_(ge(0, zeros_diff_cols), ge(ARG7, 4)), _if_then_else(le(compare_blocks_rows, ones_diff_cols), _if_then_else(False, zeros_diff_cols, compare_blocks_rows), _if_then_else(True, ones_diff_rows, 2)), _if_then_else(and_(False, False), ones_diff_rows, _if_then_else(True, 2, 1))), _if_then_else(le(_if_then_else(True, ARG6, zeros_diff_cols), _if_then_else(True, 4, ARG6)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_rows, 1), _if_then_else(False, _if_then_else(True, ARG7, zeros_diff_rows), 4)), _if_then_else(ge(0, compare_blocks_rows), _if_then_else(True, ARG6, 1), _if_then_else(True, zeros_diff_cols, ones_diff_rows)))), _if_then_else(or_(or_(or_(False, True), ge(zeros_diff_cols, zeros_diff_rows)), or_(ge(4, ARG7), le(compare_blocks_rows, ones_diff_rows))), _if_then_else(ge(_if_then_else(True, ARG7, zeros_diff_cols), _if_then_else(False, 4, ARG7)), _if_then_else(ge(ones_diff_cols, zeros_diff_cols), _if_then_else(False, ARG6, 1), _if_then_else(False, ones_diff_cols, 3)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(True, compare_blocks_cols, ones_diff_rows))), _if_then_else(and_(or_(False, True), or_(ge(_if_then_else(ge(zeros_diff_rows, ones_diff_cols), _if_then_else(True, 1, 1), _if_then_else(True, ARG7, ones_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_cols, 4), _if_then_else(False, zeros_diff_rows, ones_diff_rows))), True)), _if_then_else(or_(True, False), _if_then_else(False, 2, ones_diff_rows), _if_then_else(True, ARG6, ARG7)), _if_then_else(le(zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_cols)))))
le(ARG6, _if_then_else(ge(ones_diff_cols, compare_blocks_cols), _if_then_else(True, ARG6, 2), _if_then_else(or_(True, True), ones_diff_cols, ones_diff_cols)))
VAL TREES:
add(mul(add(add(mul(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_rows))), add(add(mul(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)), add(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)))), add(mul(mul(add(compare_blocks_cols, add(compare_blocks_rows, ones_diff_cols)), add(ones_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols))), add(add(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_rows)), mul(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(mul(compare_blocks_cols, zeros_diff_cols), add(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_cols))), mul(mul(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_cols))))
mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, add(compare_blocks_cols, compare_blocks_cols)))), add(mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_rows))))
add(mul(add(mul(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_rows)), add(mul(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, compare_blocks_cols))), add(mul(add(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)), mul(mul(zeros_diff_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_cols)))), mul(mul(add(mul(compare_blocks_rows, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows))), add(mul(mul(compare_blocks_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_cols)))))
mul(mul(add(add(ones_diff_cols, zeros_diff_rows), compare_blocks_rows), add(ones_diff_cols, zeros_diff_rows)), add(add(zeros_diff_rows, compare_blocks_cols), add(add(compare_blocks_cols, ones_diff_cols), add(zeros_diff_cols, add(ones_diff_cols, compare_blocks_rows)))))
add(add(mul(mul(mul(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), add(mul(zeros_diff_rows, ones_diff_rows), mul(zeros_diff_rows, ones_diff_rows))), add(mul(compare_blocks_cols, mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)))), mul(add(add(add(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, zeros_diff_cols))), mul(add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)))))
COND TREES:
and_(le(_if_then_else(or_(ge(_if_then_else(True, 2, 1), _if_then_else(and_(False, ge(compare_blocks_cols, zeros_diff_rows)), _if_then_else(True, compare_blocks_cols, _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), 2)), or_(or_(False, True), or_(or_(False, False), True))), ones_diff_cols, zeros_diff_cols), _if_then_else(or_(False, True), compare_blocks_rows, 0)), le(_if_then_else(False, zeros_diff_cols, 3), _if_then_else(True, ones_diff_rows, ones_diff_cols)))
or_(and_(le(_if_then_else(False, ARG7, ARG6), _if_then_else(True, ARG7, 0)), le(_if_then_else(False, ARG6, 2), _if_then_else(ge(_if_then_else(le(_if_then_else(False, 4, zeros_diff_cols), _if_then_else(True, ones_diff_rows, ARG7)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(True, ones_diff_rows, compare_blocks_cols)), _if_then_else(le(2, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, 2), _if_then_else(True, ones_diff_cols, 0))), _if_then_else(le(_if_then_else(True, 4, 3), _if_then_else(True, 0, 4)), _if_then_else(le(ARG7, 4), _if_then_else(True, zeros_diff_cols, ARG7), _if_then_else(False, 0, ARG7)), _if_then_else(le(ones_diff_cols, ARG7), _if_then_else(True, 0, 4), _if_then_else(True, zeros_diff_cols, 4)))), _if_then_else(or_(ge(_if_then_else(True, 3, ARG6), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), and_(and_(False, False), and_(False, False))), _if_then_else(and_(and_(False, False), or_(True, False)), _if_then_else(or_(False, False), _if_then_else(False, 1, 0), _if_then_else(True, 3, 1)), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, ARG6, zeros_diff_rows))), _if_then_else(or_(le(zeros_diff_cols, 3), and_(False, True)), _if_then_else(or_(False, False), _if_then_else(True, 2, ARG6), _if_then_else(False, compare_blocks_rows, compare_blocks_rows)), _if_then_else(le(ones_diff_cols, compare_blocks_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, 0)))), _if_then_else(and_(and_(ge(0, 3), ge(compare_blocks_rows, ARG6)), le(_if_then_else(False, 4, 0), _if_then_else(True, zeros_diff_rows, 0))), _if_then_else(ge(_if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, 1))), _if_then_else(and_(ge(ones_diff_rows, 0), and_(True, True)), _if_then_else(ge(3, compare_blocks_cols), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(False, 0, 1)), _if_then_else(le(zeros_diff_rows, 4), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, 0))))))), le(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, ones_diff_cols), _if_then_else(False, ARG7, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, 2))))
and_(ge(_if_then_else(and_(False, True), _if_then_else(False, ARG7, ARG7), _if_then_else(True, 2, 2)), _if_then_else(and_(False, False), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, 1, 2))), ge(_if_then_else(and_(True, True), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)), _if_then_else(le(1, 3), _if_then_else(False, 1, 0), _if_then_else(False, ones_diff_rows, zeros_diff_rows))))
or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(False, 3, zeros_diff_rows)), and_(and_(False, True), le(ARG7, compare_blocks_rows)))
or_(and_(or_(False, False), ge(compare_blocks_cols, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), and_(or_(le(2, zeros_diff_rows), False), or_(True, True)))
VAL TREES:
mul(add(zeros_diff_rows, add(ones_diff_rows, ones_diff_cols)), add(add(mul(zeros_diff_rows, compare_blocks_cols), ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)))
mul(add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, mul(mul(compare_blocks_cols, ones_diff_cols), ones_diff_rows))))
mul(mul(add(ones_diff_cols, ones_diff_cols), add(add(add(compare_blocks_cols, zeros_diff_rows), add(mul(zeros_diff_rows, compare_blocks_cols), add(ones_diff_cols, compare_blocks_cols))), zeros_diff_cols)), add(add(zeros_diff_cols, mul(compare_blocks_rows, add(add(ones_diff_rows, ones_diff_rows), ones_diff_rows))), mul(zeros_diff_rows, compare_blocks_rows)))
mul(add(mul(zeros_diff_rows, ones_diff_rows), mul(compare_blocks_rows, compare_blocks_cols)), mul(add(ones_diff_rows, ones_diff_cols), compare_blocks_rows))
mul(mul(mul(add(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), ones_diff_cols), add(add(compare_blocks_cols, add(compare_blocks_rows, compare_blocks_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(zeros_diff_rows, compare_blocks_cols))))
mul(add(add(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), ones_diff_cols), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(add(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(ones_diff_cols, zeros_diff_cols))))
COND TREES:
and_(or_(and_(True, True), le(ARG6, 2)), or_(or_(False, False), and_(True, False)))
le(_if_then_else(ge(_if_then_else(or_(False, False), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(False, 0, zeros_diff_rows)), _if_then_else(le(1, compare_blocks_cols), _if_then_else(False, 1, compare_blocks_rows), _if_then_else(True, ARG7, compare_blocks_cols))), _if_then_else(or_(or_(True, True), and_(True, False)), _if_then_else(and_(True, False), _if_then_else(False, 3, 0), _if_then_else(True, 2, compare_blocks_cols)), _if_then_else(or_(True, False), _if_then_else(False, ARG7, 4), _if_then_else(False, 1, 1))), _if_then_else(le(_if_then_else(True, ARG6, 1), _if_then_else(True, compare_blocks_cols, 2)), _if_then_else(ge(1, ones_diff_cols), _if_then_else(False, ARG6, 4), _if_then_else(False, compare_blocks_rows, ones_diff_rows)), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(True, ARG6, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, ARG6)))), _if_then_else(or_(le(_if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(True, ARG6, 2)), and_(and_(False, True), or_(True, False))), _if_then_else(and_(or_(True, False), le(compare_blocks_rows, compare_blocks_rows)), _if_then_else(ge(zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(True, ones_diff_rows, 4)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, ARG7), _if_then_else(False, 0, ones_diff_rows))), _if_then_else(ge(_if_then_else(False, ARG6, zeros_diff_cols), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(and_(False, False), _if_then_else(True, ones_diff_cols, ARG6), _if_then_else(False, 2, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_cols), _if_then_else(False, 1, 2)))))
and_(or_(or_(False, True), ge(1, ones_diff_cols)), le(_if_then_else(True, zeros_diff_cols, 3), _if_then_else(True, zeros_diff_rows, 2)))
le(_if_then_else(ge(_if_then_else(le(compare_blocks_rows, 4), _if_then_else(False, 1, ones_diff_rows), _if_then_else(False, ones_diff_rows, 2)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(True, 1, compare_blocks_cols))), _if_then_else(and_(ge(0, zeros_diff_cols), ge(ARG7, 4)), _if_then_else(le(compare_blocks_rows, ones_diff_cols), _if_then_else(False, zeros_diff_cols, compare_blocks_rows), _if_then_else(True, ones_diff_rows, 2)), _if_then_else(and_(False, False), _if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(True, 2, 1))), _if_then_else(le(_if_then_else(True, ARG6, zeros_diff_cols), _if_then_else(True, 4, ARG6)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_rows, 1), _if_then_else(False, 0, 4)), _if_then_else(ge(0, compare_blocks_rows), _if_then_else(True, ARG6, 1), _if_then_else(True, zeros_diff_cols, ones_diff_rows)))), _if_then_else(or_(or_(or_(False, True), ge(zeros_diff_cols, zeros_diff_rows)), or_(ge(4, ARG7), le(compare_blocks_rows, ones_diff_rows))), _if_then_else(ge(_if_then_else(True, ARG7, zeros_diff_cols), _if_then_else(False, 4, ARG7)), _if_then_else(ge(ones_diff_cols, zeros_diff_cols), _if_then_else(False, ARG6, 1), _if_then_else(False, ones_diff_cols, 3)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(True, compare_blocks_cols, ones_diff_rows))), _if_then_else(and_(or_(False, True), or_(True, True)), _if_then_else(or_(True, False), _if_then_else(False, 2, ones_diff_rows), _if_then_else(True, ARG6, ARG7)), _if_then_else(le(zeros_diff_rows, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_cols)))))
le(_if_then_else(le(zeros_diff_rows, 3), _if_then_else(True, 3, 3), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), _if_then_else(True, ARG6, 2), _if_then_else(False, ones_diff_cols, ones_diff_cols)))
VAL TREES:
add(mul(compare_blocks_cols, add(add(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_cols, ones_diff_rows)), add(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)))), add(mul(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols))), add(add(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_rows)), mul(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(add(mul(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(add(mul(add(add(zeros_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_cols))), compare_blocks_cols), add(compare_blocks_cols, ones_diff_cols))), mul(mul(ones_diff_rows, add(ones_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_cols))))
mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows))), add(mul(add(compare_blocks_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(add(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), compare_blocks_cols), mul(ones_diff_cols, zeros_diff_rows))))
add(mul(add(mul(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_rows)), add(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_rows, compare_blocks_cols))), add(mul(add(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)), mul(mul(zeros_diff_cols, zeros_diff_rows), mul(add(zeros_diff_cols, add(ones_diff_cols, zeros_diff_rows)), mul(ones_diff_rows, compare_blocks_rows))))), mul(mul(add(mul(compare_blocks_rows, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows))), add(mul(mul(compare_blocks_rows, ones_diff_cols), add(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_cols)))))
mul(mul(add(add(mul(compare_blocks_cols, ones_diff_cols), zeros_diff_cols), compare_blocks_rows), add(ones_diff_cols, zeros_diff_rows)), add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, add(zeros_diff_cols, add(mul(add(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(mul(mul(mul(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, ones_diff_rows)), add(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))), zeros_diff_rows))), compare_blocks_rows)))))
add(add(mul(mul(mul(compare_blocks_cols, add(ones_diff_rows, ones_diff_cols)), add(compare_blocks_cols, ones_diff_rows)), add(mul(zeros_diff_rows, ones_diff_rows), mul(zeros_diff_rows, ones_diff_rows))), add(mul(add(ones_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(zeros_diff_rows, add(zeros_diff_rows, ones_diff_rows)))), mul(add(add(add(compare_blocks_cols, compare_blocks_rows), mul(add(add(add(add(compare_blocks_cols, zeros_diff_cols), zeros_diff_cols), add(compare_blocks_rows, ones_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols))), ones_diff_cols)), add(add(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, zeros_diff_cols))), mul(add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)))))
COND TREES:
or_(ge(_if_then_else(or_(True, False), ARG7, _if_then_else(or_(False, True), compare_blocks_rows, compare_blocks_rows)), _if_then_else(False, ARG6, ARG7)), and_(ge(zeros_diff_cols, 1), or_(False, True)))
or_(ge(_if_then_else(False, 1, 4), _if_then_else(True, zeros_diff_rows, 3)), True)
and_(and_(and_(False, False), le(compare_blocks_cols, _if_then_else(True, _if_then_else(True, ARG6, ARG7), ones_diff_rows))), ge(_if_then_else(or_(le(ARG7, _if_then_else(True, ones_diff_cols, 0)), le(ones_diff_rows, _if_then_else(True, zeros_diff_rows, 2))), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_rows, _if_then_else(False, ones_diff_rows, ones_diff_cols)), _if_then_else(False, ARG6, zeros_diff_rows)), _if_then_else(ge(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 3, ARG7), _if_then_else(or_(True, True), compare_blocks_cols, compare_blocks_cols))), _if_then_else(True, zeros_diff_rows, 3)))
ge(_if_then_else(le(_if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(le(zeros_diff_rows, 4), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(False, ARG7, compare_blocks_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, ARG7, ARG7))), _if_then_else(and_(le(ARG6, compare_blocks_cols), ge(compare_blocks_rows, 2)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 0)), _if_then_else(le(_if_then_else(True, ARG7, zeros_diff_cols), _if_then_else(le(zeros_diff_rows, ones_diff_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), 2)), _if_then_else(True, 0, ARG7), _if_then_else(False, 2, ones_diff_cols))))
and_(le(_if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, 4, compare_blocks_rows)), and_(le(compare_blocks_rows, 1), and_(True, and_(ge(_if_then_else(ge(_if_then_else(False, ARG6, ones_diff_cols), _if_then_else(False, zeros_diff_cols, ones_diff_cols)), _if_then_else(and_(False, False), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, compare_blocks_rows, 0)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, ARG6), _if_then_else(True, 0, 4))), _if_then_else(or_(and_(False, False), le(3, ones_diff_cols)), _if_then_else(ge(ARG7, ARG6), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(True, 0, zeros_diff_cols)), _if_then_else(le(compare_blocks_cols, zeros_diff_rows), _if_then_else(True, ARG7, ARG6), _if_then_else(False, ones_diff_cols, 3)))), and_(ge(_if_then_else(or_(False, True), _if_then_else(True, zeros_diff_rows, 1), _if_then_else(False, compare_blocks_cols, 3)), _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, 4, 2))), ge(_if_then_else(or_(False, False), _if_then_else(True, compare_blocks_rows, ARG6), _if_then_else(True, ARG7, compare_blocks_rows)), _if_then_else(and_(False, False), _if_then_else(True, 0, 1), _if_then_else(False, 4, ones_diff_cols))))))))
VAL TREES:
add(mul(mul(add(add(mul(ones_diff_rows, compare_blocks_cols), ones_diff_cols), mul(add(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_rows))), compare_blocks_cols), mul(mul(add(ones_diff_rows, compare_blocks_cols), ones_diff_rows), add(add(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_cols)), ones_diff_cols))), mul(ones_diff_rows, ones_diff_cols))
mul(mul(add(ones_diff_rows, mul(zeros_diff_cols, mul(zeros_diff_rows, zeros_diff_rows))), ones_diff_rows), add(add(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)))
mul(mul(add(mul(add(add(compare_blocks_cols, compare_blocks_rows), compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols))), mul(mul(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_cols)))), mul(add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), add(compare_blocks_cols, mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, ones_diff_rows)))))
add(add(add(ones_diff_rows, ones_diff_rows), mul(mul(add(zeros_diff_cols, compare_blocks_cols), zeros_diff_cols), compare_blocks_rows)), add(ones_diff_cols, ones_diff_cols))
add(mul(add(mul(add(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, add(compare_blocks_cols, ones_diff_cols))), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows))), mul(add(add(add(zeros_diff_cols, compare_blocks_cols), compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), mul(add(mul(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), mul(add(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_cols, compare_blocks_cols))), mul(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(mul(add(add(ones_diff_rows, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols)), add(zeros_diff_rows, ones_diff_rows)), add(add(ones_diff_rows, add(compare_blocks_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, zeros_diff_rows), compare_blocks_cols)))
COND TREES:
or_(le(_if_then_else(or_(and_(True, True), le(1, 1)), _if_then_else(ge(4, 1), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, ARG7)), _if_then_else(or_(False, True), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, compare_blocks_cols, compare_blocks_rows))), _if_then_else(ge(_if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(ge(3, ARG6), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, 0, compare_blocks_rows), _if_then_else(True, 0, ARG7)))), ge(_if_then_else(le(_if_then_else(True, ARG7, 4), _if_then_else(False, 2, ARG6)), _if_then_else(ge(_if_then_else(and_(and_(False, False), and_(le(compare_blocks_cols, zeros_diff_rows), True)), _if_then_else(and_(False, False), _if_then_else(False, _if_then_else(True, ARG6, compare_blocks_rows), ones_diff_cols), _if_then_else(False, _if_then_else(False, compare_blocks_rows, ARG7), 3)), _if_then_else(or_(True, False), _if_then_else(or_(False, True), 1, 2), _if_then_else(False, _if_then_else(False, 1, 1), ones_diff_rows))), ARG7), _if_then_else(False, 0, 0), _if_then_else(True, 3, 1)), _if_then_else(or_(False, True), _if_then_else(True, 4, ARG7), _if_then_else(True, 2, ones_diff_cols))), _if_then_else(and_(and_(True, False), and_(True, False)), _if_then_else(le(compare_blocks_rows, ARG6), _if_then_else(True, compare_blocks_cols, ARG7), _if_then_else(False, ARG7, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(le(_if_then_else(False, zeros_diff_rows, ones_diff_cols), _if_then_else(False, 2, ARG6)), _if_then_else(le(3, 2), _if_then_else(True, _if_then_else(True, compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 1, compare_blocks_cols)), _if_then_else(True, ARG6, 0)), _if_then_else(or_(or_(True, False), False), _if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(le(_if_then_else(True, compare_blocks_rows, 2), 0), zeros_diff_cols, zeros_diff_rows))), _if_then_else(False, compare_blocks_cols, 3)))))
le(_if_then_else(or_(True, True), _if_then_else(or_(and_(False, True), le(4, 4)), _if_then_else(or_(True, True), _if_then_else(le(zeros_diff_cols, ARG6), compare_blocks_cols, 2), _if_then_else(ge(1, ones_diff_cols), _if_then_else(True, 4, _if_then_else(le(_if_then_else(or_(and_(False, True), or_(True, True)), _if_then_else(or_(True, False), _if_then_else(False, 4, ones_diff_cols), _if_then_else(True, zeros_diff_cols, zeros_diff_cols)), _if_then_else(and_(False, False), _if_then_else(True, 1, zeros_diff_cols), _if_then_else(False, 2, ones_diff_cols))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, ARG6), _if_then_else(True, 4, zeros_diff_cols)), _if_then_else(ge(ones_diff_cols, 4), _if_then_else(False, ARG6, ARG6), _if_then_else(False, 1, zeros_diff_cols)), _if_then_else(le(4, zeros_diff_cols), _if_then_else(True, 2, 4), _if_then_else(True, compare_blocks_rows, zeros_diff_rows)))), 0, ones_diff_rows)), ones_diff_cols)), _if_then_else(and_(False, False), _if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(le(ARG7, ones_diff_cols), ones_diff_cols, _if_then_else(False, 1, ARG7)))), _if_then_else(False, compare_blocks_rows, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(False, 1, compare_blocks_rows), _if_then_else(True, ARG7, compare_blocks_cols)))
or_(and_(le(_if_then_else(and_(and_(False, or_(True, True)), le(ones_diff_rows, ARG6)), _if_then_else(ge(ones_diff_cols, _if_then_else(True, 2, ARG6)), _if_then_else(False, 1, 0), _if_then_else(True, _if_then_else(True, 2, 4), 2)), _if_then_else(le(_if_then_else(True, compare_blocks_rows, _if_then_else(False, ARG7, compare_blocks_rows)), compare_blocks_cols), _if_then_else(or_(False, False), 1, _if_then_else(False, 2, ARG6)), _if_then_else(True, ones_diff_rows, ARG6))), 1), ge(compare_blocks_rows, 1)), or_(le(_if_then_else(False, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, 1, _if_then_else(le(_if_then_else(ge(zeros_diff_rows, 4), _if_then_else(False, compare_blocks_cols, 0), _if_then_else(True, compare_blocks_cols, ARG6)), _if_then_else(or_(False, True), _if_then_else(True, 1, ones_diff_rows), _if_then_else(False, ARG7, compare_blocks_rows))), _if_then_else(and_(le(zeros_diff_rows, zeros_diff_cols), ge(zeros_diff_rows, 3)), _if_then_else(le(4, ARG6), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(True, ones_diff_rows, compare_blocks_cols)), _if_then_else(ge(1, ARG7), _if_then_else(True, ARG7, zeros_diff_rows), _if_then_else(False, 1, 3))), _if_then_else(and_(le(ones_diff_cols, 2), le(2, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, 2, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(True, 0, compare_blocks_cols), _if_then_else(False, ones_diff_rows, 3)))))), or_(and_(False, True), True)))
or_(True, and_(ge(_if_then_else(le(ARG7, 0), _if_then_else(True, 0, zeros_diff_cols), zeros_diff_rows), _if_then_else(True, ones_diff_rows, ones_diff_rows)), le(_if_then_else(True, zeros_diff_cols, 0), _if_then_else(True, _if_then_else(le(ARG6, ARG6), 1, ones_diff_rows), 0))))
or_(and_(ge(ARG6, compare_blocks_rows), or_(False, True)), and_(or_(True, True), le(_if_then_else(ge(_if_then_else(ge(_if_then_else(False, 1, zeros_diff_cols), _if_then_else(False, 1, zeros_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, 0, 2), _if_then_else(False, 3, 4)), _if_then_else(ge(zeros_diff_rows, zeros_diff_cols), _if_then_else(False, ones_diff_rows, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, ARG7))), _if_then_else(le(_if_then_else(True, compare_blocks_rows, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(and_(False, True), _if_then_else(False, ones_diff_rows, 3), _if_then_else(True, compare_blocks_cols, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, 2, ARG6), _if_then_else(True, 2, compare_blocks_cols)))), _if_then_else(ge(_if_then_else(or_(False, False), _if_then_else(True, ones_diff_cols, 4), _if_then_else(False, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(ones_diff_cols, 4), _if_then_else(False, 2, 3), _if_then_else(True, 0, 2))), _if_then_else(and_(and_(True, False), ge(1, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(True, 0, 2)), _if_then_else(le(2, ARG7), _if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(False, 4, 2))), _if_then_else(le(_if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, 1, zeros_diff_rows)), _if_then_else(le(1, zeros_diff_cols), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(True, ARG7, zeros_diff_rows)), _if_then_else(le(3, 0), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, 0, 1)))), _if_then_else(and_(ge(_if_then_else(True, ARG6, ARG6), _if_then_else(False, 0, ARG7)), and_(le(compare_blocks_rows, zeros_diff_cols), ge(3, ones_diff_rows))), _if_then_else(and_(and_(False, False), or_(True, False)), _if_then_else(ge(3, compare_blocks_cols), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, ones_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, ARG7, 3), _if_then_else(False, 1, ones_diff_cols))), _if_then_else(or_(le(1, compare_blocks_rows), and_(False, False)), _if_then_else(ge(ones_diff_rows, ones_diff_cols), _if_then_else(True, ARG6, 4), _if_then_else(True, 3, 1)), _if_then_else(or_(True, False), _if_then_else(True, 3, compare_blocks_cols), _if_then_else(False, ones_diff_cols, compare_blocks_cols))))), compare_blocks_rows)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_rows), mul(ones_diff_rows, ones_diff_cols)), mul(mul(mul(ones_diff_cols, ones_diff_rows), ones_diff_rows), mul(compare_blocks_cols, ones_diff_cols)))
mul(mul(mul(mul(add(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_rows, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_cols), zeros_diff_cols))), mul(mul(add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_cols))), mul(mul(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_rows)))))
mul(mul(add(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols))), mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols)), add(add(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols))))
add(mul(ones_diff_rows, mul(zeros_diff_cols, mul(compare_blocks_cols, zeros_diff_cols))), add(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_cols)))
mul(add(zeros_diff_rows, mul(compare_blocks_cols, ones_diff_rows)), add(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_cols)))
mul(mul(mul(add(ones_diff_rows, zeros_diff_rows), compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)), mul(ones_diff_rows, add(zeros_diff_rows, ones_diff_rows)))
COND TREES:
or_(ge(_if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(False, _if_then_else(False, _if_then_else(ge(_if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(True, 2, zeros_diff_cols), _if_then_else(False, 1, zeros_diff_rows)), _if_then_else(ge(2, zeros_diff_cols), _if_then_else(True, zeros_diff_rows, 1), _if_then_else(False, zeros_diff_cols, ARG7))), 0), compare_blocks_rows)), and_(ge(ones_diff_cols, ARG7), or_(or_(True, False), True)))
and_(ge(_if_then_else(True, 2, zeros_diff_rows), _if_then_else(True, _if_then_else(True, 1, zeros_diff_rows), ones_diff_rows)), ge(_if_then_else(ge(4, zeros_diff_cols), ARG7, _if_then_else(True, zeros_diff_cols, 4)), _if_then_else(True, 1, _if_then_else(True, zeros_diff_rows, 0))))
and_(or_(and_(ge(_if_then_else(False, 3, ARG7), 0), False), or_(False, False)), le(_if_then_else(ge(zeros_diff_rows, ones_diff_cols), ones_diff_rows, 2), _if_then_else(False, ARG6, _if_then_else(False, _if_then_else(False, 4, _if_then_else(ge(_if_then_else(True, 3, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), _if_then_else(ge(ARG6, 2), _if_then_else(False, ARG6, 0), _if_then_else(False, 3, zeros_diff_cols)), _if_then_else(le(zeros_diff_rows, ones_diff_cols), _if_then_else(True, 4, 2), _if_then_else(False, ones_diff_cols, 3)))), _if_then_else(False, ones_diff_rows, 4)))))
and_(or_(and_(le(compare_blocks_rows, compare_blocks_rows), and_(True, True)), or_(True, True)), ge(_if_then_else(True, compare_blocks_rows, ARG6), _if_then_else(le(3, ones_diff_rows), zeros_diff_cols, _if_then_else(True, 2, 2))))
and_(ge(_if_then_else(False, 3, ARG7), _if_then_else(False, 0, 0)), and_(and_(False, True), or_(True, False)))
VAL TREES:
add(add(mul(add(add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, ones_diff_cols)), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(ones_diff_rows, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_rows))), zeros_diff_cols), mul(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows)))
mul(add(add(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), mul(ones_diff_rows, ones_diff_rows))
mul(mul(mul(add(ones_diff_cols, add(mul(ones_diff_rows, compare_blocks_cols), compare_blocks_rows)), add(zeros_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, ones_diff_cols))), add(mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), add(ones_diff_cols, compare_blocks_cols))))
mul(add(add(ones_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows)), mul(mul(mul(ones_diff_rows, compare_blocks_rows), zeros_diff_cols), mul(add(ones_diff_cols, zeros_diff_rows), zeros_diff_rows)))
add(add(add(mul(ones_diff_rows, zeros_diff_cols), ones_diff_cols), add(compare_blocks_cols, add(mul(mul(ones_diff_rows, ones_diff_cols), mul(compare_blocks_cols, ones_diff_rows)), mul(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_cols))))), add(add(mul(zeros_diff_cols, zeros_diff_cols), ones_diff_rows), add(zeros_diff_cols, compare_blocks_cols)))
mul(add(zeros_diff_rows, add(add(compare_blocks_rows, ones_diff_rows), ones_diff_cols)), add(mul(add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_cols)), add(add(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_rows))), ones_diff_cols), compare_blocks_rows))
COND TREES:
or_(ge(_if_then_else(or_(True, False), ARG7, _if_then_else(False, compare_blocks_rows, compare_blocks_rows)), _if_then_else(False, ARG6, ARG7)), and_(False, or_(False, True)))
or_(ge(_if_then_else(False, 1, 4), _if_then_else(True, zeros_diff_rows, 3)), or_(or_(True, True), ge(zeros_diff_cols, ARG6)))
and_(and_(and_(False, False), le(compare_blocks_cols, _if_then_else(True, _if_then_else(True, ARG6, ARG7), 4))), ge(_if_then_else(or_(False, True), _if_then_else(False, 4, 4), 2), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(_if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(le(zeros_diff_rows, 4), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(False, ARG7, compare_blocks_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, ARG7, ARG7))), _if_then_else(and_(le(ARG6, compare_blocks_cols), ge(compare_blocks_rows, 2)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 0)), _if_then_else(or_(False, False), _if_then_else(True, 0, ARG7), _if_then_else(False, 2, ones_diff_cols))))
and_(le(_if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, 4, compare_blocks_rows)), and_(le(compare_blocks_rows, 1), and_(True, True)))
VAL TREES:
add(mul(mul(compare_blocks_cols, compare_blocks_cols), mul(mul(add(ones_diff_rows, compare_blocks_cols), ones_diff_rows), add(ones_diff_cols, ones_diff_cols))), mul(mul(ones_diff_rows, ones_diff_cols), add(mul(ones_diff_cols, ones_diff_rows), add(mul(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_cols)))))
mul(mul(add(ones_diff_rows, mul(zeros_diff_cols, mul(zeros_diff_rows, zeros_diff_rows))), mul(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_rows, mul(zeros_diff_cols, compare_blocks_cols)), add(zeros_diff_cols, compare_blocks_cols)))
mul(mul(add(mul(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols))), mul(mul(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), add(zeros_diff_rows, mul(compare_blocks_rows, zeros_diff_cols)))), mul(add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), add(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, ones_diff_rows)))))
add(add(add(ones_diff_rows, mul(mul(zeros_diff_rows, ones_diff_cols), zeros_diff_cols)), mul(mul(add(zeros_diff_cols, compare_blocks_cols), zeros_diff_cols), compare_blocks_rows)), mul(add(zeros_diff_cols, add(ones_diff_cols, zeros_diff_rows)), mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows))))
add(mul(add(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows))), mul(add(add(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), mul(add(mul(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), mul(add(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_cols, compare_blocks_cols))), mul(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(mul(mul(add(ones_diff_rows, ones_diff_cols), zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)), compare_blocks_cols)
COND TREES:
or_(ge(_if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(False, ARG6, compare_blocks_rows)), and_(ge(ones_diff_cols, ARG7), or_(or_(True, False), True)))
and_(ge(_if_then_else(True, ones_diff_rows, zeros_diff_rows), _if_then_else(True, _if_then_else(True, 1, zeros_diff_rows), ones_diff_rows)), ge(_if_then_else(ge(4, zeros_diff_cols), ARG7, _if_then_else(True, zeros_diff_cols, 4)), _if_then_else(True, 1, _if_then_else(True, zeros_diff_rows, 0))))
and_(or_(and_(ge(_if_then_else(False, 3, ARG7), 0), False), or_(False, False)), le(_if_then_else(ge(zeros_diff_rows, ones_diff_cols), ones_diff_rows, 2), _if_then_else(False, ARG6, _if_then_else(False, _if_then_else(False, 4, zeros_diff_rows), _if_then_else(False, ones_diff_rows, 4)))))
and_(or_(and_(le(compare_blocks_rows, compare_blocks_rows), and_(True, True)), or_(True, True)), ge(_if_then_else(True, _if_then_else(ge(3, 0), zeros_diff_cols, ones_diff_cols), ARG6), _if_then_else(le(3, ones_diff_rows), zeros_diff_cols, _if_then_else(True, 2, 2))))
and_(ge(_if_then_else(False, 3, ARG7), _if_then_else(True, 0, 0)), and_(and_(False, True), or_(True, False)))
VAL TREES:
add(add(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_cols)))
mul(add(ones_diff_rows, mul(ones_diff_rows, zeros_diff_cols)), add(add(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_cols)))
mul(mul(mul(add(ones_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, ones_diff_cols))), add(mul(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), add(ones_diff_cols, compare_blocks_cols))))
mul(add(add(ones_diff_rows, ones_diff_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(mul(add(ones_diff_rows, ones_diff_cols), compare_blocks_rows), zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows)))
add(add(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)))
mul(add(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), add(ones_diff_cols, add(compare_blocks_cols, zeros_diff_rows)))
COND TREES:
and_(le(_if_then_else(le(_if_then_else(and_(False, True), _if_then_else(True, 2, ARG7), _if_then_else(False, 1, 1)), _if_then_else(ge(3, 1), _if_then_else(False, 2, ARG7), _if_then_else(True, 2, ARG7))), ones_diff_cols, zeros_diff_cols), _if_then_else(or_(False, True), compare_blocks_rows, 0)), le(_if_then_else(False, zeros_diff_cols, 3), _if_then_else(True, ones_diff_rows, ones_diff_cols)))
or_(and_(le(_if_then_else(False, ARG7, ARG6), _if_then_else(True, ARG7, 0)), le(_if_then_else(False, ARG6, 2), _if_then_else(False, compare_blocks_cols, compare_blocks_cols))), le(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, ones_diff_cols), _if_then_else(False, ARG7, _if_then_else(and_(or_(True, True), and_(True, False)), _if_then_else(ge(3, 3), _if_then_else(False, ARG6, compare_blocks_rows), _if_then_else(and_(True, False), ones_diff_rows, 4)), _if_then_else(le(2, 3), _if_then_else(ge(compare_blocks_cols, compare_blocks_cols), 1, 3), _if_then_else(True, 3, 2))))), _if_then_else(or_(True, True), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, 2))))
and_(ge(_if_then_else(and_(False, True), _if_then_else(False, ARG7, ARG7), _if_then_else(True, 2, 2)), _if_then_else(and_(False, False), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, 1, 2))), ge(_if_then_else(and_(True, True), _if_then_else(False, 2, _if_then_else(or_(le(compare_blocks_cols, ARG6), and_(False, True)), _if_then_else(and_(True, False), _if_then_else(False, 2, 3), _if_then_else(True, ARG7, ARG6)), _if_then_else(ge(zeros_diff_cols, zeros_diff_cols), _if_then_else(True, ARG6, compare_blocks_rows), _if_then_else(False, 3, 0)))), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)), _if_then_else(le(1, 3), _if_then_else(False, 1, 0), _if_then_else(False, ones_diff_rows, zeros_diff_rows))))
or_(and_(le(_if_then_else(or_(True, False), _if_then_else(True, 1, 0), _if_then_else(True, 3, 2)), _if_then_else(ge(3, ARG7), _if_then_else(True, 0, 1), _if_then_else(True, ones_diff_cols, compare_blocks_rows))), and_(and_(ge(4, 2), or_(True, True)), and_(or_(True, True), le(compare_blocks_cols, 1)))), and_(and_(False, True), le(ARG7, compare_blocks_rows)))
or_(and_(or_(False, False), ge(compare_blocks_cols, _if_then_else(False, compare_blocks_rows, _if_then_else(le(_if_then_else(False, zeros_diff_rows, ARG6), _if_then_else(False, ones_diff_cols, _if_then_else(False, 4, compare_blocks_cols))), _if_then_else(ge(_if_then_else(le(ones_diff_rows, compare_blocks_rows), ones_diff_cols, 0), 3), _if_then_else(or_(True, and_(True, False)), ones_diff_rows, _if_then_else(and_(True, True), _if_then_else(True, ARG6, 1), compare_blocks_rows)), _if_then_else(True, 2, 4)), _if_then_else(le(_if_then_else(True, ones_diff_rows, ones_diff_rows), 2), _if_then_else(True, 3, zeros_diff_rows), _if_then_else(True, 0, compare_blocks_cols)))))), and_(or_(le(2, zeros_diff_rows), False), or_(True, True)))
VAL TREES:
mul(add(ones_diff_rows, mul(zeros_diff_cols, zeros_diff_cols)), add(add(mul(zeros_diff_rows, compare_blocks_cols), ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)))
mul(add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, mul(mul(ones_diff_rows, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))))
mul(mul(add(ones_diff_cols, ones_diff_cols), add(add(add(compare_blocks_cols, zeros_diff_rows), ones_diff_cols), zeros_diff_cols)), add(add(zeros_diff_cols, mul(compare_blocks_rows, add(add(zeros_diff_rows, ones_diff_rows), ones_diff_rows))), mul(zeros_diff_rows, compare_blocks_rows)))
mul(add(mul(zeros_diff_rows, ones_diff_rows), mul(compare_blocks_rows, compare_blocks_cols)), add(mul(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_rows)))
mul(mul(mul(add(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), ones_diff_cols), add(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_rows)), mul(compare_blocks_cols, mul(zeros_diff_rows, compare_blocks_cols))))
mul(add(add(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), ones_diff_cols), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols))))
COND TREES:
and_(le(_if_then_else(or_(ge(_if_then_else(True, 2, 1), _if_then_else(and_(False, ge(compare_blocks_cols, zeros_diff_rows)), _if_then_else(True, compare_blocks_cols, _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), 2)), or_(or_(False, True), or_(or_(False, False), True))), ones_diff_cols, _if_then_else(ge(_if_then_else(False, zeros_diff_rows, zeros_diff_cols), _if_then_else(True, _if_then_else(le(zeros_diff_rows, ARG7), _if_then_else(False, 3, ones_diff_rows), ARG6), _if_then_else(False, 1, _if_then_else(False, zeros_diff_rows, compare_blocks_cols)))), _if_then_else(or_(ge(1, _if_then_else(False, 2, 3)), True), _if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(and_(False, True), compare_blocks_rows, _if_then_else(ge(ones_diff_cols, 0), compare_blocks_rows, _if_then_else(False, compare_blocks_cols, 3)))), _if_then_else(or_(False, True), _if_then_else(le(ones_diff_cols, ARG6), compare_blocks_cols, 4), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_rows, ARG7), 2)))), _if_then_else(or_(False, True), compare_blocks_rows, 0)), le(_if_then_else(False, zeros_diff_cols, 3), _if_then_else(True, ones_diff_rows, ones_diff_cols)))
or_(and_(le(_if_then_else(False, ARG7, ARG6), _if_then_else(True, ARG7, 0)), le(_if_then_else(False, ARG6, 2), _if_then_else(ge(_if_then_else(le(_if_then_else(False, 4, zeros_diff_cols), _if_then_else(True, ones_diff_rows, ARG7)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(True, ones_diff_rows, compare_blocks_cols)), _if_then_else(le(2, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, 2), _if_then_else(True, ones_diff_cols, 0))), _if_then_else(le(_if_then_else(True, 4, 3), _if_then_else(True, 0, 4)), _if_then_else(le(ARG7, 4), _if_then_else(True, zeros_diff_cols, ARG7), _if_then_else(False, 0, ARG7)), _if_then_else(le(ones_diff_cols, ARG7), _if_then_else(True, 0, 4), _if_then_else(True, zeros_diff_cols, 4)))), _if_then_else(or_(ge(_if_then_else(True, 3, ARG6), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), and_(and_(False, False), and_(False, False))), _if_then_else(and_(and_(False, False), or_(True, False)), _if_then_else(or_(False, False), _if_then_else(False, 1, 0), _if_then_else(True, 3, 1)), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, ARG6, zeros_diff_rows))), _if_then_else(or_(le(zeros_diff_cols, 3), and_(False, True)), _if_then_else(or_(False, False), _if_then_else(True, 2, ARG6), _if_then_else(False, compare_blocks_rows, compare_blocks_rows)), _if_then_else(le(ones_diff_cols, compare_blocks_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, 0)))), _if_then_else(and_(and_(ge(0, 3), ge(compare_blocks_rows, ARG6)), le(_if_then_else(False, 4, 0), _if_then_else(True, zeros_diff_rows, 0))), _if_then_else(ge(_if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, 1))), _if_then_else(and_(ge(ones_diff_rows, 0), and_(True, True)), _if_then_else(ge(3, compare_blocks_cols), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(False, 0, 1)), _if_then_else(le(zeros_diff_rows, 4), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, 0))))))), le(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, ones_diff_cols), _if_then_else(False, ARG7, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, 2))))
and_(ge(_if_then_else(and_(False, True), _if_then_else(False, ARG7, ARG7), _if_then_else(True, 2, 2)), _if_then_else(and_(False, False), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, 1, 2))), ge(_if_then_else(and_(True, True), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)), _if_then_else(le(1, 3), _if_then_else(False, 1, 0), _if_then_else(False, ones_diff_rows, zeros_diff_rows))))
or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(False, 3, zeros_diff_rows)), and_(and_(False, True), le(ARG7, compare_blocks_rows)))
or_(and_(or_(and_(ge(_if_then_else(False, _if_then_else(True, ARG6, zeros_diff_cols), _if_then_else(False, ones_diff_rows, zeros_diff_rows)), _if_then_else(True, zeros_diff_rows, _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), le(_if_then_else(True, 1, 3), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_cols, 4), ones_diff_rows))), False), ge(compare_blocks_cols, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), and_(or_(le(2, zeros_diff_rows), False), or_(True, True)))
VAL TREES:
mul(add(zeros_diff_rows, add(ones_diff_rows, ones_diff_cols)), add(add(mul(zeros_diff_rows, compare_blocks_cols), ones_diff_rows), ones_diff_cols))
mul(add(add(add(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_rows, zeros_diff_rows)), mul(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_cols))), add(add(mul(ones_diff_rows, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), add(ones_diff_cols, ones_diff_rows)))), mul(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, mul(mul(compare_blocks_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_cols)))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), add(add(add(compare_blocks_cols, zeros_diff_rows), add(mul(zeros_diff_rows, compare_blocks_cols), add(ones_diff_cols, compare_blocks_cols))), zeros_diff_cols)), add(add(zeros_diff_cols, mul(compare_blocks_rows, add(add(ones_diff_rows, ones_diff_rows), ones_diff_rows))), mul(zeros_diff_rows, compare_blocks_rows)))
mul(add(mul(zeros_diff_rows, ones_diff_rows), mul(mul(mul(add(add(add(zeros_diff_cols, compare_blocks_rows), add(ones_diff_rows, compare_blocks_rows)), mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_cols))), compare_blocks_rows), zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows))), mul(add(ones_diff_rows, ones_diff_cols), compare_blocks_rows))
mul(mul(add(add(mul(ones_diff_rows, compare_blocks_cols), add(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_cols, compare_blocks_rows), mul(zeros_diff_rows, compare_blocks_rows))), ones_diff_cols), add(add(compare_blocks_cols, add(compare_blocks_rows, compare_blocks_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(zeros_diff_rows, compare_blocks_cols))))
mul(add(add(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), ones_diff_cols), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(add(add(add(add(mul(ones_diff_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_cols)), mul(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows))), ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(ones_diff_cols, zeros_diff_cols))))
COND TREES:
and_(or_(and_(True, True), le(ARG6, ones_diff_cols)), or_(or_(False, False), and_(True, False)))
le(_if_then_else(ge(_if_then_else(or_(False, False), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(False, 0, zeros_diff_rows)), _if_then_else(le(1, compare_blocks_cols), _if_then_else(False, 1, compare_blocks_rows), _if_then_else(True, ARG7, compare_blocks_cols))), _if_then_else(or_(or_(True, True), and_(True, False)), _if_then_else(and_(True, False), _if_then_else(False, 3, 0), _if_then_else(True, 2, compare_blocks_cols)), _if_then_else(or_(True, False), _if_then_else(False, ARG7, 4), _if_then_else(False, 1, 1))), _if_then_else(le(_if_then_else(True, ARG6, 1), _if_then_else(True, compare_blocks_cols, 2)), _if_then_else(ge(1, ones_diff_cols), _if_then_else(False, ARG6, 4), _if_then_else(False, compare_blocks_rows, ones_diff_rows)), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(True, ARG6, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, ARG6)))), _if_then_else(or_(le(_if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(True, ARG6, 2)), and_(and_(False, True), or_(True, False))), _if_then_else(and_(or_(True, False), le(compare_blocks_rows, compare_blocks_rows)), _if_then_else(ge(zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(True, ones_diff_rows, 4)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, ARG7), _if_then_else(False, 0, ones_diff_rows))), _if_then_else(ge(_if_then_else(False, ARG6, zeros_diff_cols), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(and_(False, False), _if_then_else(True, ones_diff_cols, ARG6), _if_then_else(False, 2, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_cols), _if_then_else(False, 1, 2)))))
and_(or_(or_(False, True), ge(1, ones_diff_cols)), le(_if_then_else(True, zeros_diff_cols, 3), _if_then_else(True, zeros_diff_rows, 2)))
le(_if_then_else(ge(_if_then_else(le(compare_blocks_rows, 4), _if_then_else(False, 1, ones_diff_rows), _if_then_else(False, ones_diff_rows, 2)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(True, 1, compare_blocks_cols))), _if_then_else(and_(ge(0, zeros_diff_cols), ge(ARG7, 4)), _if_then_else(le(compare_blocks_rows, ones_diff_cols), _if_then_else(False, zeros_diff_cols, compare_blocks_rows), _if_then_else(True, ones_diff_rows, 2)), _if_then_else(and_(False, False), _if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(True, 2, 1))), _if_then_else(le(_if_then_else(True, ARG6, zeros_diff_cols), _if_then_else(True, 4, ARG6)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_rows, 1), _if_then_else(False, 0, 4)), _if_then_else(ge(0, compare_blocks_rows), _if_then_else(True, ARG6, 1), _if_then_else(True, zeros_diff_cols, ones_diff_rows)))), _if_then_else(or_(or_(or_(False, True), ge(zeros_diff_cols, zeros_diff_rows)), or_(ge(4, ARG7), le(compare_blocks_rows, ones_diff_rows))), _if_then_else(ge(_if_then_else(True, ARG7, zeros_diff_cols), _if_then_else(False, 4, ARG7)), _if_then_else(ge(ones_diff_cols, zeros_diff_cols), _if_then_else(False, ARG6, 1), _if_then_else(False, ones_diff_cols, 3)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(True, compare_blocks_cols, ones_diff_rows))), _if_then_else(and_(False, or_(True, True)), _if_then_else(or_(True, False), _if_then_else(False, 2, ones_diff_rows), _if_then_else(True, ARG6, ARG7)), _if_then_else(le(zeros_diff_rows, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_cols)))))
le(_if_then_else(le(zeros_diff_rows, 3), _if_then_else(True, 3, 3), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), _if_then_else(True, ARG6, 2), _if_then_else(False, ones_diff_cols, ones_diff_cols)))
VAL TREES:
add(mul(add(add(mul(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))), add(add(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_cols, ones_diff_rows)), add(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)))), add(mul(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols))), add(add(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_rows)), mul(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(add(compare_blocks_cols, compare_blocks_cols), zeros_diff_cols)), mul(mul(ones_diff_rows, add(ones_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, mul(ones_diff_rows, zeros_diff_cols)))))
mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows))), zeros_diff_rows)
add(mul(add(mul(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_rows)), add(mul(ones_diff_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols))), add(mul(add(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)), mul(add(add(ones_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows)), add(ones_diff_cols, ones_diff_cols)))), mul(mul(add(mul(compare_blocks_rows, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(zeros_diff_rows, add(zeros_diff_rows, compare_blocks_rows))), add(mul(mul(compare_blocks_rows, ones_diff_cols), add(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_cols)))))
mul(mul(add(add(mul(compare_blocks_cols, ones_diff_cols), zeros_diff_cols), compare_blocks_rows), add(ones_diff_cols, zeros_diff_rows)), add(add(zeros_diff_rows, compare_blocks_cols), add(add(compare_blocks_cols, ones_diff_cols), add(zeros_diff_cols, add(mul(add(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_rows))), compare_blocks_rows)))))
add(add(mul(mul(mul(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), add(mul(zeros_diff_rows, ones_diff_rows), mul(zeros_diff_rows, ones_diff_rows))), add(mul(add(ones_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols)), add(zeros_diff_rows, compare_blocks_cols))), mul(add(add(add(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, zeros_diff_cols))), mul(add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))))
COND TREES:
and_(or_(and_(True, True), le(ARG6, ones_diff_cols)), or_(or_(False, False), and_(True, False)))
le(_if_then_else(ge(_if_then_else(or_(False, False), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(False, 0, zeros_diff_rows)), _if_then_else(le(1, compare_blocks_cols), _if_then_else(False, 1, compare_blocks_rows), _if_then_else(True, ARG7, compare_blocks_cols))), _if_then_else(or_(or_(True, True), and_(True, False)), _if_then_else(and_(True, False), _if_then_else(False, 3, 0), _if_then_else(True, 2, compare_blocks_cols)), _if_then_else(or_(True, False), _if_then_else(False, ARG7, 4), _if_then_else(False, 1, 1))), _if_then_else(le(_if_then_else(True, ARG6, 1), _if_then_else(True, compare_blocks_cols, 2)), _if_then_else(ge(1, ones_diff_cols), _if_then_else(False, ARG6, 4), _if_then_else(False, compare_blocks_rows, ones_diff_rows)), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(True, ARG6, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, ARG6)))), _if_then_else(or_(le(_if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(True, ARG6, 2)), and_(and_(False, True), or_(True, False))), _if_then_else(and_(or_(True, False), le(compare_blocks_rows, compare_blocks_rows)), _if_then_else(ge(zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(True, ones_diff_rows, 4)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, ARG7), _if_then_else(False, 0, ones_diff_rows))), _if_then_else(ge(_if_then_else(False, ARG6, zeros_diff_cols), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(and_(False, False), _if_then_else(True, ones_diff_cols, ARG6), _if_then_else(False, 2, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_cols), _if_then_else(False, 1, 2)))))
and_(or_(or_(False, True), ge(1, ones_diff_cols)), le(_if_then_else(True, zeros_diff_cols, 3), _if_then_else(True, zeros_diff_rows, 2)))
le(_if_then_else(ge(_if_then_else(le(compare_blocks_rows, 4), _if_then_else(False, 1, ones_diff_rows), _if_then_else(False, ones_diff_rows, 2)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(True, 1, compare_blocks_cols))), _if_then_else(and_(ge(0, zeros_diff_cols), ge(ARG7, 4)), _if_then_else(le(compare_blocks_rows, ones_diff_cols), _if_then_else(False, zeros_diff_cols, compare_blocks_rows), _if_then_else(True, ones_diff_rows, 2)), _if_then_else(and_(False, False), _if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(True, 2, 1))), _if_then_else(le(_if_then_else(True, ARG6, zeros_diff_cols), _if_then_else(True, 4, ARG6)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_rows, 1), _if_then_else(False, 0, 4)), _if_then_else(ge(0, compare_blocks_rows), _if_then_else(True, ARG6, 1), _if_then_else(True, zeros_diff_cols, ones_diff_rows)))), _if_then_else(or_(or_(or_(False, True), ge(zeros_diff_cols, zeros_diff_rows)), or_(ge(4, ARG7), le(compare_blocks_rows, ones_diff_rows))), _if_then_else(ge(_if_then_else(True, ARG7, zeros_diff_cols), _if_then_else(False, 4, ARG7)), _if_then_else(ge(ones_diff_cols, zeros_diff_cols), _if_then_else(False, ARG6, 1), _if_then_else(False, ones_diff_cols, 3)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(True, compare_blocks_cols, ones_diff_rows))), _if_then_else(and_(False, or_(True, True)), _if_then_else(or_(True, False), _if_then_else(False, 2, ones_diff_rows), _if_then_else(True, ARG6, ARG7)), _if_then_else(le(zeros_diff_rows, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_cols)))))
le(_if_then_else(le(zeros_diff_rows, 3), _if_then_else(True, 3, 3), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), _if_then_else(True, ARG6, 2), _if_then_else(False, ones_diff_cols, ones_diff_cols)))
VAL TREES:
add(mul(add(add(mul(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))), add(add(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_cols, ones_diff_rows)), add(mul(compare_blocks_cols, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_cols)))), add(mul(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols))), add(add(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_rows)), mul(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_cols))), mul(mul(ones_diff_rows, add(ones_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, mul(ones_diff_rows, add(compare_blocks_cols, ones_diff_cols))))))
mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows))), zeros_diff_rows)
add(mul(add(mul(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_rows)), add(mul(ones_diff_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols))), add(mul(add(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)), mul(add(add(ones_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows)), add(ones_diff_cols, ones_diff_cols)))), mul(mul(add(mul(compare_blocks_rows, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_rows, ones_diff_cols), add(add(zeros_diff_rows, ones_diff_cols), compare_blocks_rows))), add(mul(mul(compare_blocks_rows, ones_diff_cols), add(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_cols)))))
mul(mul(add(add(mul(compare_blocks_cols, ones_diff_cols), zeros_diff_cols), compare_blocks_rows), add(ones_diff_cols, zeros_diff_rows)), add(add(zeros_diff_rows, compare_blocks_cols), add(add(compare_blocks_cols, ones_diff_cols), add(zeros_diff_cols, add(mul(add(mul(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows))), compare_blocks_rows)))))
add(add(mul(mul(mul(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), add(mul(zeros_diff_rows, ones_diff_rows), mul(zeros_diff_rows, ones_diff_rows))), add(mul(add(ones_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(zeros_diff_rows, add(zeros_diff_rows, ones_diff_rows)))), mul(add(add(add(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, zeros_diff_cols))), mul(add(mul(zeros_diff_rows, add(zeros_diff_rows, ones_diff_rows)), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))))
COND TREES:
or_(ge(_if_then_else(or_(True, False), ARG7, _if_then_else(False, compare_blocks_rows, compare_blocks_rows)), _if_then_else(False, ARG6, ARG7)), and_(False, or_(False, True)))
or_(ge(_if_then_else(False, 1, 4), _if_then_else(True, zeros_diff_rows, 3)), or_(or_(True, True), ge(zeros_diff_cols, ARG6)))
and_(and_(and_(False, False), le(compare_blocks_cols, _if_then_else(True, _if_then_else(True, ARG6, ARG7), 4))), ge(_if_then_else(or_(False, True), _if_then_else(False, 4, 4), 2), _if_then_else(False, zeros_diff_rows, 2)))
ge(_if_then_else(le(_if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(le(zeros_diff_rows, 4), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(False, ARG7, compare_blocks_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, ARG7, ARG7))), _if_then_else(and_(le(ARG6, compare_blocks_cols), ge(compare_blocks_rows, 2)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 0)), _if_then_else(or_(False, False), _if_then_else(True, 0, ARG7), _if_then_else(False, 2, ones_diff_cols))))
and_(le(_if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, 4, compare_blocks_rows)), and_(le(compare_blocks_rows, 1), and_(True, True)))
VAL TREES:
add(mul(mul(compare_blocks_cols, compare_blocks_cols), mul(mul(add(ones_diff_rows, compare_blocks_cols), ones_diff_rows), add(ones_diff_cols, ones_diff_cols))), mul(mul(ones_diff_rows, ones_diff_cols), add(mul(ones_diff_cols, ones_diff_rows), add(mul(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_cols)))))
mul(mul(add(ones_diff_rows, mul(zeros_diff_cols, mul(zeros_diff_rows, zeros_diff_rows))), mul(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_rows, mul(zeros_diff_cols, compare_blocks_cols)), add(zeros_diff_cols, compare_blocks_cols)))
mul(mul(add(mul(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols))), mul(mul(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), add(zeros_diff_rows, mul(compare_blocks_rows, zeros_diff_cols)))), mul(add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), add(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, ones_diff_rows)))))
add(add(add(ones_diff_rows, mul(mul(zeros_diff_rows, ones_diff_cols), zeros_diff_cols)), mul(mul(add(zeros_diff_cols, compare_blocks_cols), zeros_diff_cols), compare_blocks_rows)), mul(add(zeros_diff_cols, add(ones_diff_cols, zeros_diff_rows)), mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows))))
add(mul(add(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows))), mul(add(add(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), mul(add(mul(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), mul(add(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_cols, compare_blocks_cols))), mul(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(mul(mul(add(ones_diff_rows, ones_diff_cols), zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)), compare_blocks_cols)
COND TREES:
ge(_if_then_else(ge(4, 3), _if_then_else(True, zeros_diff_cols, ARG7), _if_then_else(True, ARG7, zeros_diff_rows)), _if_then_else(or_(False, True), _if_then_else(True, 3, 2), _if_then_else(True, 3, 4)))
le(_if_then_else(le(_if_then_else(le(ARG6, zeros_diff_cols), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, 0, ARG7)), _if_then_else(le(0, compare_blocks_rows), _if_then_else(False, 2, ones_diff_rows), _if_then_else(True, ARG6, 3))), _if_then_else(or_(ge(compare_blocks_rows, zeros_diff_rows), ge(1, 4)), _if_then_else(and_(True, True), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(True, ARG7, 0)), _if_then_else(le(3, 2), _if_then_else(True, zeros_diff_cols, 2), _if_then_else(False, ARG7, zeros_diff_cols))), _if_then_else(or_(ge(zeros_diff_rows, ARG7), le(ones_diff_rows, 4)), _if_then_else(ge(ARG7, 3), _if_then_else(False, 3, ARG7), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(or_(False, False), _if_then_else(False, 1, 3), _if_then_else(True, ARG7, zeros_diff_cols)))), _if_then_else(le(_if_then_else(or_(False, False), _if_then_else(True, zeros_diff_cols, ARG6), _if_then_else(False, ARG6, 3)), _if_then_else(ge(4, zeros_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, 0))), _if_then_else(or_(and_(False, False), le(ones_diff_rows, 1)), _if_then_else(ge(1, 1), _if_then_else(True, ARG6, ones_diff_rows), _if_then_else(True, zeros_diff_rows, ARG6)), _if_then_else(ge(1, 0), _if_then_else(False, compare_blocks_rows, 4), _if_then_else(True, 4, compare_blocks_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(False, 4, zeros_diff_cols)), _if_then_else(ge(0, ARG7), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(ge(_if_then_else(False, zeros_diff_rows, 0), _if_then_else(le(ARG7, ones_diff_cols), ones_diff_cols, 2)), compare_blocks_rows, 0)), _if_then_else(or_(True, False), _if_then_else(True, ARG7, ARG7), _if_then_else(False, 0, ones_diff_rows)))))
and_(ge(_if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, _if_then_else(False, ones_diff_cols, 2), 3)), False)
ge(_if_then_else(and_(False, or_(True, False)), _if_then_else(or_(True, False), ARG7, _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(ge(_if_then_else(and_(True, False), ones_diff_rows, zeros_diff_rows), _if_then_else(ge(3, 0), zeros_diff_cols, ones_diff_cols)), 1, ones_diff_cols)), _if_then_else(le(_if_then_else(False, compare_blocks_cols, _if_then_else(False, zeros_diff_rows, ones_diff_cols)), ARG6), ones_diff_rows, _if_then_else(True, _if_then_else(True, zeros_diff_cols, 4), ARG7)))
and_(le(_if_then_else(le(0, compare_blocks_rows), _if_then_else(False, 3, ones_diff_rows), _if_then_else(True, 3, 4)), _if_then_else(ge(1, compare_blocks_rows), _if_then_else(False, 3, ones_diff_rows), _if_then_else(False, ones_diff_rows, 1))), ge(_if_then_else(le(ARG7, ones_diff_cols), _if_then_else(True, 2, ARG7), 2), _if_then_else(ge(ARG7, 3), _if_then_else(True, compare_blocks_cols, 3), _if_then_else(True, compare_blocks_cols, 4))))
VAL TREES:
add(mul(mul(ones_diff_rows, compare_blocks_cols), compare_blocks_cols), mul(mul(compare_blocks_cols, add(add(add(ones_diff_cols, add(compare_blocks_cols, zeros_diff_rows)), mul(compare_blocks_cols, zeros_diff_cols)), add(add(ones_diff_cols, compare_blocks_rows), mul(zeros_diff_cols, add(ones_diff_cols, ones_diff_rows))))), add(ones_diff_rows, compare_blocks_cols)))
add(add(ones_diff_rows, add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, add(add(add(add(mul(zeros_diff_cols, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), add(mul(compare_blocks_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_rows))), add(mul(mul(ones_diff_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)), add(add(compare_blocks_rows, compare_blocks_cols), mul(ones_diff_rows, ones_diff_cols)))), add(mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_rows, zeros_diff_rows))), add(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, compare_blocks_rows))))))))
add(add(add(mul(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_cols, ones_diff_rows)), mul(mul(ones_diff_rows, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_rows))), add(add(add(compare_blocks_rows, compare_blocks_cols), add(zeros_diff_rows, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_rows, ones_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)), mul(add(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_cols, zeros_diff_cols))), mul(add(mul(ones_diff_cols, compare_blocks_rows), mul(compare_blocks_cols, ones_diff_cols)), add(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_rows, ones_diff_rows))))), add(add(ones_diff_rows, ones_diff_rows), add(mul(compare_blocks_rows, ones_diff_cols), ones_diff_rows)))
mul(add(add(add(add(zeros_diff_rows, zeros_diff_rows), mul(zeros_diff_rows, add(zeros_diff_rows, add(zeros_diff_cols, ones_diff_cols)))), mul(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_rows))), mul(mul(zeros_diff_rows, zeros_diff_cols), zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_cols, mul(ones_diff_rows, ones_diff_cols))))
mul(mul(mul(mul(add(ones_diff_rows, ones_diff_cols), mul(ones_diff_cols, ones_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols))), add(mul(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(add(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)))), mul(add(mul(add(ones_diff_rows, ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols)), mul(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_cols))), add(mul(add(ones_diff_cols, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows)), add(add(ones_diff_cols, compare_blocks_cols), mul(mul(mul(mul(mul(mul(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(mul(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_cols, ones_diff_cols))), mul(add(mul(ones_diff_cols, ones_diff_cols), add(zeros_diff_rows, ones_diff_cols)), add(add(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, ones_diff_rows)))), mul(add(mul(mul(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows)), add(add(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, ones_diff_cols))), add(add(mul(compare_blocks_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_cols, zeros_diff_cols))))), compare_blocks_rows)))))
mul(mul(mul(compare_blocks_rows, ones_diff_cols), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_cols)))
COND TREES:
or_(ge(_if_then_else(or_(True, False), ARG7, _if_then_else(False, compare_blocks_rows, compare_blocks_rows)), _if_then_else(False, 4, compare_blocks_cols)), and_(ge(zeros_diff_cols, 1), or_(False, True)))
or_(ge(_if_then_else(False, 1, 4), _if_then_else(True, zeros_diff_rows, 3)), True)
and_(and_(and_(False, False), le(compare_blocks_cols, _if_then_else(True, _if_then_else(True, _if_then_else(True, 4, compare_blocks_cols), ARG7), 4))), ge(_if_then_else(or_(False, True), _if_then_else(False, 4, _if_then_else(False, ARG7, 0)), 2), _if_then_else(True, zeros_diff_rows, 3)))
ge(_if_then_else(le(_if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(le(zeros_diff_rows, 4), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(False, ARG7, compare_blocks_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, ARG7, ARG7))), zeros_diff_cols)
and_(le(ARG7, _if_then_else(ge(ones_diff_cols, compare_blocks_cols), 4, compare_blocks_rows)), and_(le(compare_blocks_rows, 1), and_(True, True)))
VAL TREES:
add(mul(mul(compare_blocks_cols, compare_blocks_cols), mul(mul(add(ones_diff_rows, compare_blocks_cols), ones_diff_rows), add(ones_diff_cols, ones_diff_cols))), mul(mul(ones_diff_rows, ones_diff_cols), add(mul(ones_diff_cols, ones_diff_rows), add(mul(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_cols)))))
mul(mul(add(ones_diff_rows, mul(zeros_diff_cols, mul(zeros_diff_rows, zeros_diff_rows))), mul(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_rows, mul(zeros_diff_cols, compare_blocks_cols)), add(zeros_diff_cols, compare_blocks_cols)))
mul(mul(add(mul(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols))), mul(mul(mul(ones_diff_cols, add(mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_cols)), add(mul(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows))), mul(add(add(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, ones_diff_rows)), add(add(zeros_diff_cols, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_rows))))), mul(ones_diff_rows, compare_blocks_cols)), add(zeros_diff_rows, mul(compare_blocks_rows, zeros_diff_cols)))), mul(add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), add(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, ones_diff_rows)))))
add(add(add(ones_diff_rows, mul(mul(zeros_diff_rows, ones_diff_cols), zeros_diff_cols)), mul(mul(add(zeros_diff_cols, compare_blocks_cols), zeros_diff_cols), compare_blocks_rows)), mul(add(zeros_diff_cols, add(ones_diff_cols, zeros_diff_rows)), mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows))))
add(mul(add(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows))), mul(add(add(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), mul(add(mul(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), mul(add(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_cols, compare_blocks_cols))), mul(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(mul(mul(add(add(mul(add(ones_diff_cols, ones_diff_cols), add(zeros_diff_rows, ones_diff_rows)), mul(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))), ones_diff_cols), zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)), compare_blocks_cols)
COND TREES:
and_(le(_if_then_else(or_(ge(_if_then_else(True, 2, 1), _if_then_else(and_(False, ge(compare_blocks_cols, zeros_diff_rows)), _if_then_else(True, compare_blocks_cols, _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), 2)), or_(or_(False, True), or_(or_(False, False), True))), ones_diff_cols, zeros_diff_cols), _if_then_else(or_(False, True), compare_blocks_rows, 0)), le(_if_then_else(False, zeros_diff_cols, 3), _if_then_else(True, ones_diff_rows, ones_diff_cols)))
or_(and_(le(_if_then_else(False, ARG7, ARG6), _if_then_else(True, ARG7, 0)), le(_if_then_else(False, ARG6, 2), _if_then_else(ge(_if_then_else(le(_if_then_else(False, 4, zeros_diff_cols), _if_then_else(True, ones_diff_rows, ARG7)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(True, ones_diff_rows, compare_blocks_cols)), _if_then_else(le(2, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, 2), _if_then_else(True, ones_diff_cols, 0))), _if_then_else(le(_if_then_else(True, 4, 3), _if_then_else(True, 0, 4)), _if_then_else(le(ARG7, 4), _if_then_else(True, zeros_diff_cols, ARG7), _if_then_else(False, 0, ARG7)), _if_then_else(le(ones_diff_cols, ARG7), _if_then_else(True, 0, 4), _if_then_else(True, zeros_diff_cols, 4)))), _if_then_else(or_(ge(_if_then_else(True, 3, ARG6), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), and_(and_(False, False), and_(False, False))), _if_then_else(and_(and_(False, False), or_(True, False)), _if_then_else(or_(False, False), _if_then_else(False, 1, 0), _if_then_else(True, 3, 1)), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, ARG6, zeros_diff_rows))), _if_then_else(or_(le(zeros_diff_cols, 3), and_(False, True)), _if_then_else(or_(False, False), _if_then_else(True, 2, ARG6), _if_then_else(False, compare_blocks_rows, compare_blocks_rows)), _if_then_else(le(ones_diff_cols, compare_blocks_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, 0)))), _if_then_else(and_(and_(ge(0, 3), ge(compare_blocks_rows, ARG6)), le(_if_then_else(False, 4, 0), _if_then_else(True, zeros_diff_rows, 0))), _if_then_else(ge(_if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, 1))), _if_then_else(and_(ge(ones_diff_rows, 0), and_(True, True)), _if_then_else(ge(3, compare_blocks_cols), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(False, 0, 1)), _if_then_else(le(zeros_diff_rows, 4), zeros_diff_cols, _if_then_else(True, compare_blocks_rows, 0))))))), le(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, ones_diff_cols), _if_then_else(False, ARG7, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, 2))))
and_(ge(_if_then_else(and_(False, True), _if_then_else(False, ARG7, ARG7), _if_then_else(True, 2, 2)), _if_then_else(and_(False, False), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, 1, 2))), ge(_if_then_else(and_(True, True), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)), _if_then_else(le(1, 3), _if_then_else(False, 1, 0), _if_then_else(False, ones_diff_rows, zeros_diff_rows))))
or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(False, 3, zeros_diff_rows)), and_(and_(False, True), le(ARG7, compare_blocks_rows)))
or_(and_(or_(False, False), ge(compare_blocks_cols, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), and_(or_(le(2, zeros_diff_rows), le(compare_blocks_rows, 1)), or_(True, True)))
VAL TREES:
mul(add(zeros_diff_rows, add(ones_diff_rows, ones_diff_cols)), add(add(mul(zeros_diff_rows, compare_blocks_cols), ones_diff_rows), ones_diff_cols))
mul(add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, mul(mul(compare_blocks_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_cols)))))
mul(mul(add(ones_diff_cols, compare_blocks_cols), add(add(add(compare_blocks_cols, zeros_diff_rows), add(mul(zeros_diff_rows, compare_blocks_cols), add(add(mul(add(add(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols)), zeros_diff_cols), mul(ones_diff_cols, add(compare_blocks_rows, compare_blocks_cols))), add(mul(ones_diff_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_rows))), compare_blocks_cols))), zeros_diff_cols)), add(add(zeros_diff_cols, mul(compare_blocks_rows, add(add(ones_diff_rows, ones_diff_rows), ones_diff_rows))), mul(zeros_diff_rows, compare_blocks_rows)))
mul(add(mul(zeros_diff_rows, ones_diff_rows), mul(mul(mul(ones_diff_rows, compare_blocks_rows), zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows))), mul(add(ones_diff_rows, mul(mul(add(mul(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_cols)), add(mul(ones_diff_cols, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_rows))), mul(mul(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_rows, zeros_diff_rows)), add(add(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, ones_diff_rows), add(compare_blocks_rows, ones_diff_cols))), mul(add(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows)), mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, compare_blocks_rows)))))), compare_blocks_rows))
mul(mul(mul(add(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, add(mul(add(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, compare_blocks_cols))))), ones_diff_cols), add(add(compare_blocks_cols, add(compare_blocks_rows, compare_blocks_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(zeros_diff_rows, compare_blocks_cols))))
mul(add(add(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), ones_diff_cols), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(add(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(ones_diff_cols, zeros_diff_cols))))
COND TREES:
ge(_if_then_else(ge(4, 3), _if_then_else(True, zeros_diff_cols, ARG7), _if_then_else(True, ARG7, zeros_diff_rows)), _if_then_else(or_(False, True), _if_then_else(True, 3, 2), _if_then_else(True, _if_then_else(True, zeros_diff_cols, ARG7), 4)))
le(_if_then_else(le(_if_then_else(le(ARG6, zeros_diff_cols), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, 0, ARG7)), _if_then_else(le(0, compare_blocks_rows), _if_then_else(False, 2, ones_diff_rows), _if_then_else(True, ARG6, 3))), _if_then_else(False, 0, ARG7), _if_then_else(or_(ge(zeros_diff_rows, ARG7), le(ones_diff_rows, 4)), _if_then_else(ge(ARG7, 3), _if_then_else(False, 3, ARG7), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(or_(False, False), _if_then_else(False, 1, 3), _if_then_else(True, ARG7, zeros_diff_cols)))), _if_then_else(le(_if_then_else(or_(False, False), _if_then_else(True, zeros_diff_cols, ARG6), _if_then_else(False, ARG6, 3)), _if_then_else(ge(4, zeros_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, 0))), _if_then_else(or_(and_(False, False), le(ones_diff_rows, 1)), _if_then_else(ge(1, 1), _if_then_else(True, ARG6, ones_diff_rows), _if_then_else(True, zeros_diff_rows, ARG6)), _if_then_else(ge(1, 0), _if_then_else(False, compare_blocks_rows, 4), _if_then_else(True, 4, compare_blocks_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(False, 4, zeros_diff_cols)), _if_then_else(ge(0, ARG7), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(ge(_if_then_else(False, zeros_diff_rows, 0), _if_then_else(le(ARG7, ones_diff_cols), ones_diff_cols, 2)), compare_blocks_rows, 0)), _if_then_else(or_(True, False), _if_then_else(True, ARG7, ARG7), _if_then_else(False, 0, ones_diff_rows)))))
and_(ge(_if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, _if_then_else(False, ones_diff_cols, 2), 3)), False)
ge(_if_then_else(and_(False, or_(True, False)), _if_then_else(or_(True, False), ARG7, _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(ge(_if_then_else(and_(True, False), ones_diff_rows, zeros_diff_rows), _if_then_else(ge(3, 0), zeros_diff_cols, ones_diff_cols)), 1, ones_diff_cols)), _if_then_else(le(_if_then_else(False, compare_blocks_cols, _if_then_else(False, zeros_diff_rows, ones_diff_cols)), ARG6), ones_diff_rows, _if_then_else(True, _if_then_else(True, zeros_diff_cols, 4), ARG7)))
and_(le(_if_then_else(le(0, compare_blocks_rows), _if_then_else(False, 3, ones_diff_rows), _if_then_else(True, 3, 4)), _if_then_else(ge(1, compare_blocks_rows), _if_then_else(False, 3, ones_diff_rows), _if_then_else(False, ones_diff_rows, 1))), ge(_if_then_else(le(ARG7, ones_diff_cols), _if_then_else(True, 2, ARG7), 2), _if_then_else(ge(ARG7, 3), _if_then_else(True, 3, 4), _if_then_else(True, compare_blocks_cols, 4))))
VAL TREES:
add(mul(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_rows, compare_blocks_cols)), mul(mul(compare_blocks_cols, mul(zeros_diff_rows, zeros_diff_rows)), add(ones_diff_rows, compare_blocks_cols)))
add(add(add(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_cols)))
add(mul(add(zeros_diff_cols, mul(ones_diff_rows, compare_blocks_rows)), add(compare_blocks_rows, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_rows), add(mul(compare_blocks_rows, ones_diff_cols), ones_diff_rows)))
mul(add(add(add(ones_diff_cols, zeros_diff_rows), compare_blocks_cols), mul(mul(zeros_diff_rows, zeros_diff_cols), zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_cols, mul(ones_diff_rows, ones_diff_cols))))
mul(mul(mul(mul(add(ones_diff_rows, ones_diff_cols), mul(ones_diff_cols, ones_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols))), add(mul(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(add(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)))), mul(add(mul(add(ones_diff_rows, ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols)), mul(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_cols))), add(mul(add(ones_diff_cols, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows)), add(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)))))
add(mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_rows)), add(add(zeros_diff_rows, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_cols))), mul(add(add(zeros_diff_rows, ones_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)), mul(add(ones_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_cols))))
COND TREES:
ge(_if_then_else(ge(4, 3), 3, _if_then_else(True, ARG7, zeros_diff_rows)), _if_then_else(or_(False, True), _if_then_else(True, 3, 2), _if_then_else(True, 3, 4)))
le(_if_then_else(le(_if_then_else(le(ARG6, zeros_diff_cols), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(or_(ge(compare_blocks_rows, zeros_diff_rows), ge(1, 4)), _if_then_else(and_(True, True), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(True, ARG7, 0)), _if_then_else(le(3, 2), _if_then_else(True, zeros_diff_cols, 2), _if_then_else(False, ARG7, zeros_diff_cols)))), _if_then_else(le(0, compare_blocks_rows), _if_then_else(False, 2, ones_diff_rows), _if_then_else(True, ARG6, 3))), _if_then_else(or_(ge(compare_blocks_rows, zeros_diff_rows), ge(1, 4)), _if_then_else(and_(True, True), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(True, ARG7, 0)), _if_then_else(le(3, 2), _if_then_else(True, zeros_diff_cols, 2), _if_then_else(False, ARG7, zeros_diff_cols))), _if_then_else(or_(ge(zeros_diff_rows, ARG7), le(ones_diff_rows, 4)), _if_then_else(ge(ARG7, 3), _if_then_else(False, 3, ARG7), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(or_(False, False), _if_then_else(False, 1, 3), _if_then_else(True, ARG7, zeros_diff_cols)))), _if_then_else(le(_if_then_else(or_(False, False), _if_then_else(True, zeros_diff_cols, ARG6), _if_then_else(False, ARG6, 3)), _if_then_else(ge(4, zeros_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, 0))), _if_then_else(or_(and_(False, False), le(ones_diff_rows, 1)), _if_then_else(ge(1, 1), _if_then_else(True, ARG6, ones_diff_rows), _if_then_else(True, zeros_diff_rows, ARG6)), _if_then_else(ge(1, 0), _if_then_else(False, compare_blocks_rows, 4), _if_then_else(True, 4, compare_blocks_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(False, 4, zeros_diff_cols)), _if_then_else(ge(0, ARG7), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(ge(_if_then_else(False, zeros_diff_rows, 0), _if_then_else(le(ARG7, ones_diff_cols), ones_diff_cols, 2)), compare_blocks_rows, 0)), _if_then_else(or_(True, False), _if_then_else(True, ARG7, ARG7), _if_then_else(False, 0, ones_diff_rows)))))
and_(ge(_if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, _if_then_else(False, ones_diff_cols, 2), 3)), False)
ge(_if_then_else(and_(False, or_(True, False)), _if_then_else(or_(True, False), ARG7, _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(ge(_if_then_else(and_(True, False), ones_diff_rows, zeros_diff_rows), _if_then_else(ge(3, 0), zeros_diff_cols, ones_diff_cols)), 1, ones_diff_cols)), _if_then_else(le(_if_then_else(False, compare_blocks_cols, _if_then_else(False, zeros_diff_rows, ones_diff_cols)), ARG6), ones_diff_rows, _if_then_else(True, _if_then_else(True, zeros_diff_cols, 4), ARG7)))
and_(le(_if_then_else(le(0, compare_blocks_rows), _if_then_else(False, 3, ones_diff_rows), _if_then_else(True, compare_blocks_cols, 3)), _if_then_else(ge(1, compare_blocks_rows), _if_then_else(False, 3, ones_diff_rows), _if_then_else(False, ones_diff_rows, 1))), ge(_if_then_else(le(ARG7, ones_diff_cols), _if_then_else(True, 2, ARG7), 2), _if_then_else(ge(ARG7, 3), _if_then_else(True, compare_blocks_cols, 3), _if_then_else(True, compare_blocks_cols, 4))))
VAL TREES:
add(mul(mul(ones_diff_rows, compare_blocks_cols), compare_blocks_cols), mul(mul(compare_blocks_cols, mul(zeros_diff_rows, zeros_diff_rows)), add(ones_diff_rows, compare_blocks_cols)))
add(add(ones_diff_rows, add(compare_blocks_cols, compare_blocks_rows)), add(add(mul(add(ones_diff_cols, mul(ones_diff_rows, compare_blocks_cols)), add(ones_diff_rows, compare_blocks_cols)), mul(add(zeros_diff_rows, add(compare_blocks_cols, zeros_diff_rows)), add(zeros_diff_rows, compare_blocks_rows))), mul(ones_diff_cols, compare_blocks_cols)))
add(mul(add(zeros_diff_cols, mul(ones_diff_rows, compare_blocks_rows)), add(compare_blocks_rows, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_rows), add(mul(compare_blocks_rows, ones_diff_cols), ones_diff_rows)))
mul(add(add(add(ones_diff_rows, mul(mul(ones_diff_rows, ones_diff_cols), zeros_diff_cols)), compare_blocks_cols), mul(mul(zeros_diff_rows, zeros_diff_cols), zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_cols, mul(ones_diff_rows, ones_diff_cols))))
mul(mul(mul(mul(add(ones_diff_rows, ones_diff_cols), mul(ones_diff_cols, ones_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols))), add(mul(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(add(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)))), mul(add(add(add(mul(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_rows)), mul(add(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols))), mul(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_cols))), add(mul(add(ones_diff_cols, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows)), add(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)))))
add(mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_rows)), add(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, add(ones_diff_rows, compare_blocks_cols)))), mul(add(add(mul(mul(mul(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_cols), add(ones_diff_rows, compare_blocks_rows))), ones_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)), mul(add(ones_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_cols))))
COND TREES:
le(_if_then_else(ge(_if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(False, 2, zeros_diff_rows)), _if_then_else(ge(zeros_diff_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, ARG6), _if_then_else(True, 2, 0)), _if_then_else(and_(False, True), _if_then_else(False, ARG7, ARG7), _if_then_else(False, 1, zeros_diff_rows))), _if_then_else(False, _if_then_else(or_(False, True), _if_then_else(True, 2, 3), _if_then_else(True, 4, 4)), _if_then_else(and_(True, True), _if_then_else(False, 3, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, 4))))
ge(_if_then_else(or_(or_(ge(ARG7, compare_blocks_cols), ge(ones_diff_cols, ARG6)), and_(le(ARG6, compare_blocks_rows), and_(False, True))), _if_then_else(le(_if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(False, 2, zeros_diff_cols)), _if_then_else(le(2, ARG7), _if_then_else(True, ARG6, 1), _if_then_else(True, ARG7, zeros_diff_rows)), _if_then_else(ge(ARG6, 1), _if_then_else(False, ARG6, ones_diff_cols), _if_then_else(False, 1, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, ARG6, 4), _if_then_else(False, 2, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(True, 1, ARG7)), _if_then_else(or_(True, False), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(False, 3, ones_diff_cols)))), _if_then_else(le(_if_then_else(or_(False, True), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(True, ARG7, ones_diff_cols)), _if_then_else(ge(compare_blocks_cols, ones_diff_cols), _if_then_else(True, 0, zeros_diff_cols), _if_then_else(False, 1, compare_blocks_cols))), _if_then_else(ge(_if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, 2)), _if_then_else(le(ARG6, 0), _if_then_else(False, 4, ARG7), _if_then_else(False, 0, ARG6)), _if_then_else(le(1, compare_blocks_cols), _if_then_else(True, 2, 3), _if_then_else(False, 2, ARG7))), _if_then_else(and_(and_(True, True), ge(1, ARG7)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_cols, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, ARG6)), _if_then_else(and_(True, False), _if_then_else(True, 4, ones_diff_rows), _if_then_else(False, zeros_diff_cols, compare_blocks_cols)))))
or_(and_(or_(False, True), and_(True, False)), ge(_if_then_else(False, 1, 1), _if_then_else(False, zeros_diff_rows, 4)))
and_(le(_if_then_else(False, ARG7, 3), _if_then_else(False, compare_blocks_cols, 0)), and_(True, ge(1, ARG7)))
le(_if_then_else(or_(True, True), _if_then_else(False, _if_then_else(or_(False, True), 1, ARG7), ARG7), _if_then_else(True, 2, compare_blocks_cols)), _if_then_else(ge(_if_then_else(False, ARG6, compare_blocks_cols), compare_blocks_rows), _if_then_else(True, 1, 1), _if_then_else(False, compare_blocks_rows, 1)))
VAL TREES:
add(add(mul(zeros_diff_cols, add(ones_diff_rows, ones_diff_cols)), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)))
add(add(add(ones_diff_rows, add(add(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))), add(mul(add(ones_diff_cols, mul(mul(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_rows)), add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_cols, zeros_diff_cols)))), add(ones_diff_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_cols, ones_diff_rows)))), add(add(mul(mul(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_cols)), add(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, ones_diff_cols))), mul(add(add(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_cols)), add(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_cols, compare_blocks_cols)))))
add(mul(add(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_cols)))
mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, mul(mul(mul(mul(mul(add(mul(mul(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, ones_diff_rows)), add(add(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols))), add(mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_rows)))), mul(ones_diff_cols, zeros_diff_cols)), add(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, compare_blocks_cols))), add(mul(mul(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, zeros_diff_cols)))), mul(mul(add(add(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_rows))), mul(add(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_cols, zeros_diff_rows)), add(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_cols))))))))
mul(add(add(mul(mul(mul(add(add(zeros_diff_rows, ones_diff_rows), mul(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_cols, ones_diff_rows), add(compare_blocks_cols, zeros_diff_rows))), add(mul(mul(compare_blocks_cols, zeros_diff_rows), add(compare_blocks_cols, ones_diff_rows)), add(add(compare_blocks_cols, ones_diff_cols), add(zeros_diff_rows, ones_diff_cols)))), add(add(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_cols)), add(mul(ones_diff_rows, add(add(add(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), add(mul(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_rows)))), add(zeros_diff_cols, ones_diff_cols))), mul(add(mul(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows)), mul(add(zeros_diff_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows))))), add(mul(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_rows))), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)))
mul(add(mul(mul(mul(compare_blocks_rows, compare_blocks_cols), add(zeros_diff_cols, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows))), add(mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, zeros_diff_rows)), add(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows)))), mul(mul(add(mul(ones_diff_rows, ones_diff_rows), add(ones_diff_cols, compare_blocks_rows)), add(add(mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)), compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows))), add(add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_rows, compare_blocks_rows)))))
COND TREES:
and_(or_(and_(True, True), and_(True, True)), or_(or_(False, False), and_(True, False)))
le(_if_then_else(ge(_if_then_else(or_(False, False), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(False, 0, zeros_diff_rows)), _if_then_else(le(1, compare_blocks_cols), _if_then_else(False, 1, compare_blocks_rows), _if_then_else(True, ARG7, compare_blocks_cols))), _if_then_else(or_(or_(True, True), and_(True, False)), _if_then_else(and_(True, False), _if_then_else(False, 3, 0), _if_then_else(True, 2, compare_blocks_cols)), _if_then_else(or_(True, False), _if_then_else(False, ARG7, 4), _if_then_else(False, 1, 1))), _if_then_else(le(_if_then_else(True, ARG6, 1), _if_then_else(True, compare_blocks_cols, 2)), _if_then_else(ge(1, ones_diff_cols), _if_then_else(False, ARG6, 4), _if_then_else(False, compare_blocks_rows, ones_diff_rows)), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(True, ARG6, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, ARG6)))), _if_then_else(or_(le(_if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(True, ARG6, 2)), and_(and_(False, True), or_(True, False))), _if_then_else(and_(or_(True, False), le(compare_blocks_rows, compare_blocks_rows)), _if_then_else(ge(zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(True, ones_diff_rows, 4)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, ARG7), _if_then_else(False, 0, ones_diff_rows))), _if_then_else(ge(_if_then_else(False, ARG6, zeros_diff_cols), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(and_(False, False), _if_then_else(True, ones_diff_cols, ARG6), _if_then_else(False, 2, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_cols), _if_then_else(False, 1, 2)))))
and_(or_(or_(ge(3, _if_then_else(True, compare_blocks_cols, ones_diff_cols)), True), ge(1, ones_diff_cols)), le(_if_then_else(or_(True, False), zeros_diff_cols, 3), _if_then_else(True, zeros_diff_rows, 2)))
le(_if_then_else(ge(_if_then_else(le(compare_blocks_rows, 4), _if_then_else(False, 1, ones_diff_rows), _if_then_else(False, ones_diff_rows, 2)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(True, 1, compare_blocks_cols))), _if_then_else(and_(ge(0, zeros_diff_cols), ge(ARG7, 4)), _if_then_else(le(compare_blocks_rows, ones_diff_cols), _if_then_else(False, zeros_diff_cols, compare_blocks_rows), _if_then_else(True, ones_diff_rows, 2)), _if_then_else(and_(False, False), _if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(True, 2, 1))), _if_then_else(le(_if_then_else(True, ARG6, zeros_diff_cols), _if_then_else(True, 4, ARG6)), _if_then_else(or_(False, True), _if_then_else(False, _if_then_else(ge(3, 0), zeros_diff_cols, ones_diff_cols), 1), _if_then_else(False, 0, 4)), _if_then_else(ge(0, compare_blocks_rows), _if_then_else(True, ARG6, 1), _if_then_else(True, zeros_diff_cols, ones_diff_rows)))), _if_then_else(or_(or_(or_(False, True), ge(zeros_diff_cols, zeros_diff_rows)), or_(ge(4, ARG7), le(compare_blocks_rows, ones_diff_rows))), _if_then_else(ge(_if_then_else(True, ARG7, zeros_diff_cols), _if_then_else(False, 4, ARG7)), _if_then_else(ge(ones_diff_cols, zeros_diff_cols), _if_then_else(False, ARG6, 1), _if_then_else(False, ones_diff_cols, 3)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(True, compare_blocks_cols, ones_diff_rows))), _if_then_else(and_(or_(False, True), or_(True, True)), _if_then_else(or_(True, False), _if_then_else(False, 2, ones_diff_rows), _if_then_else(True, ARG6, ARG7)), _if_then_else(le(zeros_diff_rows, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_cols)))))
le(_if_then_else(le(zeros_diff_rows, 3), _if_then_else(True, 3, 3), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(ge(1, ones_diff_rows), _if_then_else(True, ARG6, 2), _if_then_else(False, ones_diff_cols, ones_diff_cols)))
VAL TREES:
add(mul(add(add(mul(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_rows))), add(add(mul(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)), add(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)))), add(mul(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols))), add(add(zeros_diff_rows, add(compare_blocks_cols, zeros_diff_rows)), mul(compare_blocks_rows, mul(ones_diff_rows, compare_blocks_rows)))))
add(add(add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), mul(zeros_diff_cols, compare_blocks_cols)), add(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_cols))), mul(mul(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_cols))))
mul(add(add(compare_blocks_rows, add(compare_blocks_rows, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows))), add(mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(ones_diff_rows, mul(ones_diff_cols, zeros_diff_rows))))
add(mul(add(mul(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_rows)), add(mul(ones_diff_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols))), add(mul(add(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)), mul(mul(zeros_diff_cols, zeros_diff_rows), add(ones_diff_cols, mul(zeros_diff_rows, zeros_diff_cols))))), mul(mul(add(mul(compare_blocks_rows, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows))), add(mul(mul(ones_diff_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_cols)))))
mul(mul(add(add(mul(compare_blocks_cols, ones_diff_cols), zeros_diff_cols), compare_blocks_rows), add(mul(compare_blocks_cols, ones_diff_cols), zeros_diff_cols)), add(add(zeros_diff_rows, compare_blocks_cols), add(add(compare_blocks_cols, ones_diff_cols), add(zeros_diff_cols, add(ones_diff_cols, compare_blocks_rows)))))
add(add(mul(mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), add(mul(zeros_diff_rows, ones_diff_rows), mul(zeros_diff_rows, ones_diff_rows))), add(mul(add(ones_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)))), mul(add(add(add(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, zeros_diff_cols))), add(add(zeros_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows))))
COND TREES:
or_(ge(_if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(False, _if_then_else(False, _if_then_else(ge(_if_then_else(False, 3, 0), _if_then_else(True, zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(True, 2, zeros_diff_cols), _if_then_else(False, 1, zeros_diff_rows)), _if_then_else(ge(2, zeros_diff_cols), _if_then_else(True, zeros_diff_rows, 1), _if_then_else(False, zeros_diff_cols, ARG7))), 0), compare_blocks_rows)), and_(ge(ones_diff_cols, ARG7), or_(or_(True, False), True)))
and_(ge(_if_then_else(True, 2, zeros_diff_rows), _if_then_else(True, _if_then_else(True, 1, zeros_diff_rows), ones_diff_rows)), ge(_if_then_else(ge(4, zeros_diff_cols), zeros_diff_cols, _if_then_else(True, zeros_diff_cols, 4)), _if_then_else(True, 1, _if_then_else(True, zeros_diff_rows, 0))))
and_(or_(and_(ge(_if_then_else(False, 3, ARG7), 0), False), or_(False, False)), le(_if_then_else(ge(zeros_diff_rows, ones_diff_cols), ones_diff_rows, 2), _if_then_else(False, ARG6, zeros_diff_cols)))
and_(or_(and_(le(compare_blocks_rows, compare_blocks_rows), and_(True, True)), or_(True, True)), ge(_if_then_else(True, compare_blocks_rows, ARG6), _if_then_else(le(3, ones_diff_rows), zeros_diff_cols, _if_then_else(True, 2, 2))))
and_(ge(_if_then_else(False, 3, ARG7), _if_then_else(False, 0, 0)), and_(and_(False, True), or_(True, False)))
VAL TREES:
add(ones_diff_cols, mul(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows)))
mul(add(add(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), zeros_diff_cols)
mul(mul(mul(add(ones_diff_cols, add(mul(ones_diff_rows, compare_blocks_cols), compare_blocks_rows)), add(zeros_diff_cols, ones_diff_rows)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, ones_diff_cols))), add(mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), add(ones_diff_cols, compare_blocks_cols))))
mul(add(add(ones_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows)), mul(mul(mul(ones_diff_rows, compare_blocks_rows), zeros_diff_cols), mul(ones_diff_rows, zeros_diff_rows)))
add(add(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_rows)), add(add(mul(zeros_diff_cols, zeros_diff_cols), ones_diff_rows), add(zeros_diff_cols, compare_blocks_cols)))
mul(add(zeros_diff_rows, add(ones_diff_rows, ones_diff_cols)), add(mul(add(zeros_diff_cols, compare_blocks_cols), ones_diff_cols), compare_blocks_rows))
COND TREES:
ge(_if_then_else(and_(True, and_(False, True)), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, ARG7, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, _if_then_else(le(_if_then_else(or_(False, False), _if_then_else(True, ARG6, zeros_diff_rows), _if_then_else(False, ones_diff_cols, 1)), _if_then_else(ge(0, 0), _if_then_else(False, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, 2, 0))), zeros_diff_rows, ARG7), ones_diff_rows), _if_then_else(le(2, 2), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, 2), 4), _if_then_else(or_(False, True), 3, ARG6))))
and_(or_(ge(zeros_diff_cols, ones_diff_rows), ge(ARG7, _if_then_else(ge(2, compare_blocks_rows), _if_then_else(True, _if_then_else(True, ones_diff_rows, zeros_diff_rows), _if_then_else(False, _if_then_else(False, 3, compare_blocks_rows), compare_blocks_rows)), _if_then_else(False, 2, zeros_diff_cols)))), and_(or_(True, False), and_(True, False)))
ge(_if_then_else(and_(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(False, ones_diff_rows, 4), _if_then_else(True, compare_blocks_cols, ARG6)), _if_then_else(ge(ones_diff_rows, 3), _if_then_else(False, ARG6, compare_blocks_cols), _if_then_else(True, ARG6, _if_then_else(False, 4, 1)))), ge(_if_then_else(and_(True, False), _if_then_else(False, compare_blocks_cols, _if_then_else(False, _if_then_else(False, 4, _if_then_else(ge(_if_then_else(True, 3, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), _if_then_else(ge(ARG6, 2), _if_then_else(False, ARG6, 0), _if_then_else(False, 3, zeros_diff_cols)), _if_then_else(le(zeros_diff_rows, ones_diff_cols), _if_then_else(True, 4, 2), _if_then_else(False, ones_diff_cols, 3)))), _if_then_else(False, ones_diff_rows, 4))), _if_then_else(False, compare_blocks_cols, ones_diff_rows)), _if_then_else(le(2, ARG6), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(True, 4, ones_diff_rows)))), _if_then_else(False, _if_then_else(False, ones_diff_cols, _if_then_else(False, 2, ones_diff_rows)), zeros_diff_cols), _if_then_else(False, _if_then_else(True, 0, compare_blocks_cols), zeros_diff_cols)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(True, ARG6, 2)))
or_(le(_if_then_else(True, ARG7, zeros_diff_cols), _if_then_else(le(zeros_diff_rows, ones_diff_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), 2)), ge(_if_then_else(and_(True, False), ones_diff_rows, zeros_diff_rows), compare_blocks_rows))
le(_if_then_else(le(_if_then_else(True, ARG6, ARG6), compare_blocks_rows), _if_then_else(True, _if_then_else(False, 4, compare_blocks_cols), 3), _if_then_else(False, ARG7, compare_blocks_cols)), _if_then_else(and_(and_(False, False), True), _if_then_else(or_(False, False), 3, zeros_diff_rows), _if_then_else(False, 2, 1)))
VAL TREES:
add(add(add(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_cols)), add(add(ones_diff_rows, add(ones_diff_cols, ones_diff_cols)), mul(zeros_diff_rows, zeros_diff_cols)))
add(add(add(zeros_diff_rows, zeros_diff_rows), add(mul(ones_diff_cols, mul(ones_diff_cols, compare_blocks_cols)), zeros_diff_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, mul(add(ones_diff_rows, ones_diff_cols), ones_diff_cols))))
add(mul(add(add(add(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, ones_diff_rows)), add(add(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_rows))), add(add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, zeros_diff_rows)))), add(mul(mul(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))))
add(add(mul(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_cols)), add(add(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_cols))), add(mul(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)))), add(mul(add(add(compare_blocks_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_cols))), add(mul(add(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)))))
add(mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))), add(add(mul(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), add(add(zeros_diff_cols, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_rows))))
mul(add(mul(mul(zeros_diff_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(add(mul(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, zeros_diff_rows)), add(mul(zeros_diff_cols, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows))))
COND TREES:
or_(le(_if_then_else(or_(and_(True, True), le(1, 1)), _if_then_else(ge(4, 1), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, ARG7)), _if_then_else(or_(False, True), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, compare_blocks_cols, compare_blocks_rows))), _if_then_else(ge(_if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(ge(3, ARG6), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, 0, compare_blocks_rows), _if_then_else(True, 0, ARG7)))), ge(_if_then_else(le(_if_then_else(True, ARG7, 4), _if_then_else(False, 2, ARG6)), _if_then_else(ge(3, ARG7), _if_then_else(False, 0, 0), _if_then_else(True, 3, 1)), _if_then_else(or_(False, True), _if_then_else(True, 4, ARG7), _if_then_else(True, 2, ones_diff_cols))), _if_then_else(and_(and_(True, False), and_(True, ge(_if_then_else(or_(True, False), ARG7, _if_then_else(or_(False, True), compare_blocks_rows, compare_blocks_rows)), _if_then_else(False, ARG6, ARG7)))), _if_then_else(le(compare_blocks_rows, ARG6), _if_then_else(True, compare_blocks_cols, ARG7), _if_then_else(False, ARG7, zeros_diff_cols)), _if_then_else(and_(True, False), compare_blocks_rows, _if_then_else(False, compare_blocks_cols, 3)))))
le(_if_then_else(or_(True, True), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(False, 1, compare_blocks_rows), _if_then_else(True, ARG7, compare_blocks_cols)))
or_(and_(le(1, 1), ge(compare_blocks_rows, 1)), or_(le(_if_then_else(False, zeros_diff_cols, 1), _if_then_else(False, 1, zeros_diff_rows)), or_(and_(False, True), True)))
or_(or_(or_(False, True), le(3, ARG6)), ge(_if_then_else(False, zeros_diff_cols, _if_then_else(True, ones_diff_cols, ones_diff_cols)), _if_then_else(False, ARG6, 0)))
or_(and_(ge(ARG6, ARG6), True), and_(or_(True, True), le(zeros_diff_cols, compare_blocks_rows)))
VAL TREES:
add(mul(ones_diff_rows, zeros_diff_cols), mul(mul(mul(ones_diff_cols, ones_diff_rows), ones_diff_rows), mul(compare_blocks_cols, add(add(ones_diff_rows, zeros_diff_cols), zeros_diff_cols))))
mul(mul(mul(mul(add(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_rows, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows)))), mul(mul(mul(add(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_cols))), mul(mul(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_rows)))))
mul(mul(add(mul(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols))), mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols)), add(add(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols))))
add(mul(compare_blocks_cols, mul(zeros_diff_cols, mul(compare_blocks_cols, zeros_diff_cols))), add(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_cols)))
mul(add(mul(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, ones_diff_rows)), add(add(add(zeros_diff_rows, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows)), add(compare_blocks_cols, ones_diff_cols)))
mul(zeros_diff_rows, mul(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_rows, ones_diff_rows)))
COND TREES:
or_(False, and_(ge(zeros_diff_cols, 1), or_(False, True)))
or_(ge(_if_then_else(False, 1, 4), _if_then_else(True, ARG6, 3)), True)
and_(and_(and_(False, False), le(compare_blocks_cols, _if_then_else(True, _if_then_else(True, ARG6, ARG7), ones_diff_rows))), ge(_if_then_else(or_(False, True), _if_then_else(False, 4, 4), 2), _if_then_else(True, zeros_diff_rows, 3)))
ge(_if_then_else(le(_if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(le(zeros_diff_rows, 4), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(False, ARG7, compare_blocks_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, ARG7, ARG7))), _if_then_else(and_(le(ARG6, compare_blocks_cols), ge(compare_blocks_rows, 2)), _if_then_else(or_(False, False), 4, _if_then_else(False, zeros_diff_rows, 0)), _if_then_else(le(_if_then_else(True, ARG7, zeros_diff_cols), _if_then_else(le(zeros_diff_rows, ones_diff_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), 2)), _if_then_else(True, 0, ARG7), _if_then_else(False, 2, ones_diff_cols))))
and_(le(_if_then_else(False, 0, zeros_diff_rows), _if_then_else(or_(False, True), 4, compare_blocks_rows)), and_(le(compare_blocks_rows, 1), and_(True, ge(3, 0))))
VAL TREES:
add(mul(mul(compare_blocks_cols, compare_blocks_cols), mul(mul(add(ones_diff_rows, compare_blocks_cols), ones_diff_rows), add(zeros_diff_cols, ones_diff_cols))), mul(mul(ones_diff_rows, ones_diff_cols), add(mul(ones_diff_cols, ones_diff_rows), zeros_diff_cols)))
mul(mul(add(ones_diff_rows, mul(zeros_diff_cols, mul(zeros_diff_rows, zeros_diff_rows))), mul(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)))
mul(mul(add(mul(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols))), mul(mul(mul(ones_diff_cols, compare_blocks_cols), mul(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols)), add(add(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols))), compare_blocks_cols)), add(mul(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_cols)))), mul(add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), add(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, ones_diff_rows)))))
add(add(add(ones_diff_rows, mul(mul(zeros_diff_rows, ones_diff_cols), zeros_diff_cols)), mul(mul(add(zeros_diff_cols, compare_blocks_cols), zeros_diff_cols), compare_blocks_rows)), mul(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_rows)))
add(mul(add(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows))), mul(add(add(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), mul(add(mul(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), mul(add(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_cols, compare_blocks_cols))), mul(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(mul(mul(add(ones_diff_rows, ones_diff_cols), zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)), add(add(ones_diff_rows, zeros_diff_rows), mul(mul(zeros_diff_rows, zeros_diff_rows), compare_blocks_cols)))
COND TREES:
or_(le(_if_then_else(or_(and_(True, True), le(1, 1)), _if_then_else(ge(4, 1), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, ARG7)), _if_then_else(or_(False, True), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, compare_blocks_cols, compare_blocks_rows))), _if_then_else(ge(_if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(ge(3, ARG6), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, 0, compare_blocks_rows), _if_then_else(True, 0, ARG7)))), ge(_if_then_else(le(_if_then_else(True, ARG7, 4), _if_then_else(False, 2, ARG6)), _if_then_else(ge(3, ARG7), _if_then_else(False, 0, 0), _if_then_else(True, 3, 1)), _if_then_else(or_(False, True), _if_then_else(True, 4, ARG7), _if_then_else(True, 2, ones_diff_cols))), _if_then_else(and_(and_(True, False), and_(True, False)), _if_then_else(le(compare_blocks_rows, ARG6), _if_then_else(True, compare_blocks_cols, ARG7), _if_then_else(False, ARG7, zeros_diff_cols)), _if_then_else(and_(True, False), compare_blocks_rows, _if_then_else(False, compare_blocks_cols, 3)))))
le(_if_then_else(or_(True, True), _if_then_else(False, zeros_diff_rows, ARG6), _if_then_else(False, compare_blocks_rows, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(False, 1, compare_blocks_rows), _if_then_else(True, ARG7, compare_blocks_cols)))
or_(and_(le(1, 1), ge(compare_blocks_rows, 1)), or_(le(_if_then_else(False, zeros_diff_cols, 1), _if_then_else(False, 1, zeros_diff_rows)), or_(and_(False, True), True)))
or_(or_(or_(False, True), le(3, ARG6)), ge(_if_then_else(False, zeros_diff_cols, 4), _if_then_else(False, ARG6, 0)))
or_(and_(ge(ARG6, ARG6), or_(False, True)), and_(or_(True, True), le(zeros_diff_cols, compare_blocks_rows)))
VAL TREES:
add(mul(ones_diff_rows, zeros_diff_cols), mul(mul(mul(ones_diff_cols, ones_diff_rows), ones_diff_rows), mul(compare_blocks_cols, add(add(ones_diff_rows, zeros_diff_cols), zeros_diff_cols))))
mul(mul(mul(mul(add(zeros_diff_cols, compare_blocks_rows), add(ones_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_rows, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows)))), mul(mul(mul(add(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_cols))), mul(mul(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_rows)))))
mul(mul(add(mul(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols))), mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols)), add(add(compare_blocks_cols, zeros_diff_rows), add(mul(zeros_diff_rows, compare_blocks_cols), add(ones_diff_cols, compare_blocks_cols)))))
add(mul(compare_blocks_cols, mul(zeros_diff_cols, ones_diff_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_cols)))
mul(add(mul(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, ones_diff_rows)), add(add(compare_blocks_cols, mul(ones_diff_rows, compare_blocks_rows)), add(compare_blocks_cols, ones_diff_cols)))
mul(zeros_diff_rows, mul(ones_diff_cols, add(zeros_diff_rows, ones_diff_rows)))
COND TREES:
and_(le(_if_then_else(or_(or_(True, False), True), ones_diff_cols, zeros_diff_cols), _if_then_else(or_(False, True), compare_blocks_rows, 0)), le(_if_then_else(False, zeros_diff_cols, 3), _if_then_else(True, ones_diff_rows, ones_diff_cols)))
or_(and_(le(_if_then_else(False, ARG7, ARG6), _if_then_else(True, ARG7, 0)), le(_if_then_else(False, ARG6, 2), _if_then_else(True, _if_then_else(or_(ge(_if_then_else(True, 3, ARG6), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), and_(and_(False, False), and_(False, False))), _if_then_else(and_(and_(False, False), or_(True, False)), _if_then_else(or_(False, False), _if_then_else(False, 1, 0), _if_then_else(True, 3, 1)), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, ARG6, zeros_diff_rows))), _if_then_else(or_(le(zeros_diff_cols, 3), and_(False, True)), _if_then_else(or_(False, False), _if_then_else(True, 2, ARG6), _if_then_else(False, compare_blocks_rows, compare_blocks_rows)), _if_then_else(le(ones_diff_cols, compare_blocks_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, 0)))), _if_then_else(and_(and_(ge(0, 3), ge(compare_blocks_rows, ARG6)), le(_if_then_else(False, 4, 0), _if_then_else(True, zeros_diff_rows, 0))), _if_then_else(ge(_if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, 1))), _if_then_else(and_(ge(ones_diff_rows, 0), and_(True, True)), _if_then_else(ge(3, compare_blocks_cols), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(False, 0, 1)), _if_then_else(le(zeros_diff_rows, 4), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, 0))))))), le(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, ones_diff_cols), _if_then_else(False, ARG7, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, 2))))
and_(ge(_if_then_else(and_(False, True), _if_then_else(False, ARG7, ARG7), _if_then_else(True, 2, 2)), _if_then_else(and_(False, False), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, 1, 2))), ge(_if_then_else(and_(True, True), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)), _if_then_else(le(1, 3), _if_then_else(False, 1, _if_then_else(False, ones_diff_rows, 4)), _if_then_else(False, ones_diff_rows, zeros_diff_rows))))
or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), 3), and_(and_(False, True), le(ARG7, compare_blocks_rows)))
or_(and_(or_(False, False), ge(compare_blocks_cols, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), and_(or_(and_(False, True), False), or_(True, True)))
VAL TREES:
mul(add(zeros_diff_rows, add(ones_diff_rows, ones_diff_cols)), add(add(mul(zeros_diff_rows, compare_blocks_cols), ones_diff_rows), ones_diff_cols))
mul(add(mul(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, mul(mul(compare_blocks_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_cols)))))
mul(mul(add(ones_diff_cols, compare_blocks_cols), add(add(add(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)), zeros_diff_cols)), add(add(zeros_diff_cols, mul(compare_blocks_rows, add(add(ones_diff_rows, ones_diff_rows), ones_diff_rows))), mul(zeros_diff_rows, compare_blocks_rows)))
mul(add(mul(zeros_diff_rows, ones_diff_rows), mul(mul(mul(ones_diff_rows, compare_blocks_rows), zeros_diff_cols), mul(ones_diff_rows, mul(compare_blocks_cols, zeros_diff_cols)))), mul(add(ones_diff_rows, ones_diff_cols), compare_blocks_rows))
mul(mul(mul(add(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), ones_diff_cols), add(add(compare_blocks_cols, add(compare_blocks_rows, compare_blocks_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(zeros_diff_rows, add(zeros_diff_rows, ones_diff_rows)))))
mul(add(add(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), add(compare_blocks_rows, ones_diff_rows)), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(add(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(ones_diff_cols, zeros_diff_cols))))
COND TREES:
or_(ge(_if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(False, _if_then_else(False, _if_then_else(ge(_if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(True, 2, zeros_diff_cols), _if_then_else(False, 1, zeros_diff_rows)), _if_then_else(ge(2, zeros_diff_cols), _if_then_else(True, zeros_diff_rows, 1), _if_then_else(False, zeros_diff_cols, ARG7))), 0), compare_blocks_rows)), and_(ge(ones_diff_cols, ARG7), or_(or_(True, False), True)))
and_(ge(_if_then_else(True, 2, zeros_diff_rows), _if_then_else(True, _if_then_else(True, 1, zeros_diff_rows), ones_diff_rows)), ge(_if_then_else(ge(4, zeros_diff_cols), ARG7, _if_then_else(True, zeros_diff_cols, 4)), _if_then_else(True, 1, _if_then_else(True, zeros_diff_rows, 0))))
and_(or_(and_(ge(_if_then_else(False, 3, ARG7), 0), False), or_(False, False)), le(_if_then_else(ge(zeros_diff_rows, ones_diff_cols), ones_diff_rows, 2), _if_then_else(False, ARG6, _if_then_else(False, _if_then_else(False, 4, _if_then_else(ge(_if_then_else(True, 3, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), _if_then_else(ge(ARG6, 2), _if_then_else(False, ARG6, 0), _if_then_else(False, 3, zeros_diff_cols)), _if_then_else(or_(and_(and_(and_(True, True), and_(False, True)), or_(and_(True, True), le(ARG6, 1))), le(_if_then_else(or_(True, True), _if_then_else(True, 1, ones_diff_rows), _if_then_else(False, 2, ARG7)), _if_then_else(or_(False, True), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, 3, 3)))), _if_then_else(True, 4, 2), _if_then_else(False, ones_diff_cols, 3)))), _if_then_else(False, ones_diff_rows, 4)))))
and_(or_(and_(le(compare_blocks_rows, compare_blocks_rows), and_(True, True)), or_(True, True)), ge(_if_then_else(True, compare_blocks_rows, _if_then_else(or_(ge(ones_diff_rows, 0), or_(False, False)), _if_then_else(and_(True, True), _if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(True, compare_blocks_cols, 0)), _if_then_else(and_(False, False), _if_then_else(False, 1, compare_blocks_cols), _if_then_else(True, ARG6, compare_blocks_rows)))), _if_then_else(le(3, ones_diff_rows), zeros_diff_cols, _if_then_else(True, 2, 2))))
and_(ge(_if_then_else(False, 3, ARG7), _if_then_else(False, 0, 0)), and_(and_(False, True), or_(True, False)))
VAL TREES:
add(ones_diff_cols, mul(compare_blocks_rows, add(zeros_diff_cols, ones_diff_rows)))
mul(add(compare_blocks_cols, mul(ones_diff_rows, zeros_diff_cols)), zeros_diff_cols)
mul(mul(mul(add(ones_diff_cols, add(mul(ones_diff_rows, compare_blocks_cols), compare_blocks_rows)), add(zeros_diff_cols, ones_diff_rows)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, ones_diff_cols))), add(mul(add(compare_blocks_cols, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), add(ones_diff_cols, compare_blocks_cols))))
mul(add(add(ones_diff_rows, compare_blocks_rows), add(mul(add(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)), ones_diff_rows)), mul(mul(mul(ones_diff_rows, compare_blocks_rows), zeros_diff_cols), mul(ones_diff_rows, zeros_diff_rows)))
add(add(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_rows)), add(add(mul(zeros_diff_cols, zeros_diff_cols), ones_diff_rows), add(add(mul(compare_blocks_cols, ones_diff_cols), zeros_diff_cols), compare_blocks_rows)))
mul(add(zeros_diff_rows, add(ones_diff_rows, ones_diff_cols)), add(mul(add(zeros_diff_cols, compare_blocks_cols), ones_diff_cols), compare_blocks_rows))
COND TREES:
and_(or_(or_(le(_if_then_else(True, 1, 3), _if_then_else(False, compare_blocks_cols, 0)), and_(le(0, compare_blocks_cols), and_(True, False))), and_(True, True)), or_(or_(False, False), and_(True, False)))
le(_if_then_else(ge(_if_then_else(or_(False, False), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(False, 0, zeros_diff_rows)), _if_then_else(le(1, compare_blocks_cols), _if_then_else(False, 1, compare_blocks_rows), _if_then_else(True, ARG7, compare_blocks_cols))), _if_then_else(or_(or_(True, True), and_(True, False)), _if_then_else(and_(True, False), _if_then_else(False, 3, 0), _if_then_else(True, 2, compare_blocks_cols)), _if_then_else(or_(True, False), _if_then_else(False, ARG7, 4), _if_then_else(False, 1, 1))), _if_then_else(le(_if_then_else(True, ARG6, 1), _if_then_else(True, compare_blocks_cols, 2)), _if_then_else(ge(1, ones_diff_cols), _if_then_else(False, ARG6, 4), _if_then_else(False, compare_blocks_rows, ones_diff_rows)), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(True, ARG6, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, ARG6)))), _if_then_else(or_(le(_if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(True, ARG6, 2)), and_(and_(False, True), or_(True, False))), _if_then_else(and_(or_(True, False), le(compare_blocks_rows, compare_blocks_rows)), _if_then_else(ge(zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(True, ones_diff_rows, 4)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, ARG7), _if_then_else(False, 0, ones_diff_rows))), _if_then_else(and_(ge(ones_diff_rows, zeros_diff_cols), le(compare_blocks_rows, 3)), _if_then_else(or_(True, True), _if_then_else(False, ARG6, ones_diff_cols), _if_then_else(True, 3, ARG6)), _if_then_else(ge(4, ones_diff_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_cols), _if_then_else(False, ones_diff_rows, ARG6)))))
and_(or_(or_(le(_if_then_else(ge(_if_then_else(True, ones_diff_cols, compare_blocks_cols), _if_then_else(False, ones_diff_cols, ARG6)), _if_then_else(and_(True, False), _if_then_else(False, 1, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, ARG7)), _if_then_else(ge(ones_diff_rows, 0), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(True, ones_diff_rows, compare_blocks_cols))), _if_then_else(or_(and_(True, False), or_(True, False)), _if_then_else(le(ARG7, 0), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(False, 2, ones_diff_cols)), _if_then_else(ge(4, ARG6), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, zeros_diff_rows, 3)))), True), ge(1, ones_diff_cols)), le(_if_then_else(or_(True, False), zeros_diff_cols, 3), _if_then_else(True, zeros_diff_rows, 2)))
le(_if_then_else(ge(_if_then_else(le(compare_blocks_rows, 4), _if_then_else(False, 1, ones_diff_rows), _if_then_else(False, ones_diff_rows, 2)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(True, 1, compare_blocks_cols))), _if_then_else(and_(ge(0, zeros_diff_cols), ge(ARG7, 4)), _if_then_else(le(compare_blocks_rows, ones_diff_cols), _if_then_else(False, zeros_diff_cols, compare_blocks_rows), _if_then_else(True, ones_diff_rows, 2)), _if_then_else(and_(False, False), _if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(True, 2, 1))), _if_then_else(le(_if_then_else(ge(_if_then_else(or_(True, False), _if_then_else(False, 2, 2), _if_then_else(True, _if_then_else(False, zeros_diff_cols, _if_then_else(False, ARG7, ARG6)), compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, 0, 2), _if_then_else(True, 4, compare_blocks_cols))), ARG6, zeros_diff_cols), _if_then_else(True, 4, ARG6)), _if_then_else(or_(False, True), _if_then_else(False, _if_then_else(ge(3, 0), zeros_diff_cols, ones_diff_cols), 1), _if_then_else(False, 0, 4)), _if_then_else(ge(0, compare_blocks_rows), _if_then_else(True, ARG6, 1), _if_then_else(True, zeros_diff_cols, ones_diff_rows)))), _if_then_else(or_(or_(or_(False, True), ge(zeros_diff_cols, zeros_diff_rows)), or_(ge(4, ARG7), le(compare_blocks_rows, ones_diff_rows))), _if_then_else(ge(_if_then_else(True, ARG7, zeros_diff_cols), _if_then_else(False, 4, ARG7)), _if_then_else(ge(ones_diff_cols, zeros_diff_cols), _if_then_else(False, ARG6, 1), _if_then_else(False, ones_diff_cols, 3)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(True, compare_blocks_cols, ones_diff_rows))), _if_then_else(and_(or_(False, True), or_(True, True)), _if_then_else(or_(True, False), _if_then_else(False, 2, ones_diff_rows), _if_then_else(True, ARG6, ARG7)), _if_then_else(le(zeros_diff_rows, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_cols)))))
le(_if_then_else(le(zeros_diff_rows, 3), _if_then_else(True, 3, 3), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(ge(1, ones_diff_rows), _if_then_else(True, ARG6, 2), _if_then_else(False, ones_diff_cols, ones_diff_cols)))
VAL TREES:
add(mul(add(add(mul(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_rows))), add(add(mul(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)), add(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)))), add(mul(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols))), add(add(zeros_diff_rows, add(compare_blocks_cols, zeros_diff_rows)), mul(compare_blocks_rows, mul(ones_diff_rows, mul(ones_diff_cols, ones_diff_rows))))))
add(add(add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), mul(zeros_diff_cols, compare_blocks_cols)), add(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_cols))), mul(mul(mul(add(compare_blocks_cols, ones_diff_cols), compare_blocks_cols), add(ones_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_cols))))
mul(add(add(compare_blocks_rows, add(compare_blocks_rows, ones_diff_cols)), add(mul(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_cols, ones_diff_rows))), add(mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(ones_diff_rows, mul(ones_diff_cols, zeros_diff_rows))))
add(mul(add(mul(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_rows)), add(mul(ones_diff_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols))), add(zeros_diff_rows, mul(mul(zeros_diff_cols, zeros_diff_rows), add(ones_diff_cols, mul(zeros_diff_rows, zeros_diff_cols))))), mul(mul(add(mul(compare_blocks_rows, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows))), add(mul(mul(ones_diff_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_cols)))))
mul(mul(add(zeros_diff_cols, compare_blocks_cols), add(mul(compare_blocks_cols, ones_diff_cols), zeros_diff_cols)), add(add(zeros_diff_rows, compare_blocks_cols), add(add(compare_blocks_cols, ones_diff_cols), add(zeros_diff_cols, add(ones_diff_cols, compare_blocks_rows)))))
add(add(mul(mul(mul(add(ones_diff_cols, compare_blocks_rows), compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), add(mul(zeros_diff_rows, ones_diff_rows), mul(zeros_diff_rows, ones_diff_rows))), add(mul(add(ones_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)))), mul(add(add(add(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, zeros_diff_cols))), add(add(zeros_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_rows))))
COND TREES:
or_(le(_if_then_else(or_(and_(True, True), le(1, 1)), _if_then_else(ge(4, 1), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, ARG7)), _if_then_else(or_(False, True), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, _if_then_else(False, 3, 0), compare_blocks_rows))), _if_then_else(ge(_if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(ge(3, ARG6), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, 0, compare_blocks_rows), _if_then_else(True, 0, ARG7)))), ge(_if_then_else(le(_if_then_else(True, ARG7, 4), _if_then_else(False, 2, ARG6)), _if_then_else(ge(3, ARG7), _if_then_else(False, 0, 0), _if_then_else(True, 3, 1)), _if_then_else(or_(False, True), _if_then_else(True, 4, ARG7), _if_then_else(True, 2, ones_diff_cols))), _if_then_else(and_(and_(True, False), and_(True, False)), _if_then_else(le(compare_blocks_rows, ARG6), _if_then_else(True, compare_blocks_cols, ARG7), _if_then_else(False, ARG7, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, compare_blocks_cols, 3)))))
le(_if_then_else(or_(True, True), _if_then_else(False, zeros_diff_rows, ARG6), _if_then_else(False, compare_blocks_rows, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(False, _if_then_else(or_(le(_if_then_else(True, ones_diff_rows, 1), _if_then_else(False, 3, ARG6)), or_(or_(False, False), or_(False, True))), _if_then_else(or_(ge(zeros_diff_rows, ARG7), and_(True, False)), _if_then_else(le(ARG6, 0), _if_then_else(False, ARG6, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 4, 0))), _if_then_else(ge(_if_then_else(True, 3, zeros_diff_rows), _if_then_else(True, 0, compare_blocks_cols)), _if_then_else(ge(ARG6, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, zeros_diff_rows), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, 2, ones_diff_cols), _if_then_else(False, compare_blocks_cols, compare_blocks_rows)))), compare_blocks_rows), _if_then_else(True, ARG7, compare_blocks_cols)))
or_(and_(le(1, 1), ge(zeros_diff_cols, 1)), or_(le(_if_then_else(False, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows)), or_(and_(False, True), False)))
or_(or_(or_(False, le(_if_then_else(True, ARG7, zeros_diff_cols), _if_then_else(le(zeros_diff_rows, ones_diff_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), 2))), le(3, ARG6)), ge(_if_then_else(False, zeros_diff_cols, 4), _if_then_else(False, ARG6, 0)))
or_(and_(and_(or_(le(ARG7, 1), ge(3, 1)), or_(or_(False, True), or_(True, True))), or_(False, True)), and_(or_(True, True), le(ARG7, compare_blocks_rows)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_rows), mul(ones_diff_rows, ones_diff_cols)), mul(mul(mul(ones_diff_cols, ones_diff_rows), ones_diff_rows), mul(compare_blocks_cols, add(add(ones_diff_rows, zeros_diff_cols), zeros_diff_cols))))
mul(mul(mul(mul(add(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_rows, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows)))), mul(mul(add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_cols, mul(add(add(add(mul(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_rows)), add(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_rows)), add(add(zeros_diff_cols, compare_blocks_rows), zeros_diff_cols))), mul(mul(mul(add(compare_blocks_rows, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_cols)), add(add(compare_blocks_cols, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_cols))), mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows)), mul(mul(zeros_diff_cols, ones_diff_rows), add(ones_diff_cols, zeros_diff_rows)))))))), mul(mul(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_rows)))))
mul(mul(ones_diff_rows, add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols))), mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols)), add(add(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols))))
add(mul(add(ones_diff_cols, zeros_diff_rows), add(add(mul(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_rows)), add(add(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_rows))), add(mul(mul(ones_diff_rows, ones_diff_cols), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_cols, compare_blocks_rows))))), add(mul(compare_blocks_rows, compare_blocks_rows), mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows))))
mul(add(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_rows)), add(mul(mul(mul(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_cols)), mul(add(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_cols))), mul(add(add(compare_blocks_cols, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_cols)), mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_rows)))))
mul(compare_blocks_rows, mul(add(compare_blocks_rows, ones_diff_rows), add(ones_diff_rows, ones_diff_rows)))
COND TREES:
or_(ge(_if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(False, _if_then_else(False, _if_then_else(ge(_if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(True, 2, zeros_diff_cols), _if_then_else(False, 1, zeros_diff_rows)), _if_then_else(ge(2, zeros_diff_cols), _if_then_else(True, zeros_diff_rows, 1), _if_then_else(False, zeros_diff_cols, ARG7))), 0), compare_blocks_rows)), and_(ge(ones_diff_cols, ARG7), or_(or_(True, False), True)))
and_(ge(_if_then_else(True, 2, zeros_diff_rows), _if_then_else(True, _if_then_else(True, 1, zeros_diff_rows), ones_diff_rows)), ge(_if_then_else(ge(4, zeros_diff_cols), ARG7, _if_then_else(True, zeros_diff_cols, 4)), _if_then_else(True, 1, _if_then_else(True, zeros_diff_rows, 0))))
and_(or_(and_(ge(_if_then_else(False, 3, ARG7), 0), False), or_(False, False)), le(_if_then_else(ge(zeros_diff_rows, ones_diff_cols), ones_diff_rows, 2), _if_then_else(False, ARG6, _if_then_else(False, _if_then_else(False, 4, _if_then_else(ge(_if_then_else(True, 3, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), _if_then_else(ge(ARG6, 2), _if_then_else(False, ARG6, 0), _if_then_else(False, 3, zeros_diff_cols)), _if_then_else(le(zeros_diff_rows, ones_diff_cols), _if_then_else(True, 4, 2), _if_then_else(False, ones_diff_cols, 3)))), _if_then_else(False, ones_diff_rows, 4)))))
and_(or_(and_(le(compare_blocks_rows, compare_blocks_rows), and_(True, True)), or_(True, True)), ge(_if_then_else(True, compare_blocks_rows, ARG6), _if_then_else(le(3, ones_diff_rows), zeros_diff_cols, _if_then_else(True, 2, 2))))
and_(ge(_if_then_else(False, 3, ARG7), _if_then_else(False, 0, 0)), and_(and_(False, True), or_(True, False)))
VAL TREES:
add(ones_diff_cols, mul(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows)))
mul(add(add(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, mul(zeros_diff_rows, ones_diff_rows))), zeros_diff_cols)
mul(mul(mul(add(ones_diff_cols, add(mul(ones_diff_rows, compare_blocks_cols), compare_blocks_rows)), add(zeros_diff_cols, mul(ones_diff_cols, zeros_diff_rows))), mul(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, ones_diff_cols))), add(mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), add(ones_diff_cols, compare_blocks_cols))))
mul(add(add(ones_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows)), mul(mul(mul(ones_diff_rows, compare_blocks_rows), zeros_diff_cols), mul(ones_diff_rows, zeros_diff_rows)))
add(add(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)), add(add(mul(zeros_diff_cols, zeros_diff_cols), ones_diff_rows), add(zeros_diff_cols, compare_blocks_cols)))
mul(add(zeros_diff_rows, add(zeros_diff_rows, ones_diff_cols)), add(mul(add(zeros_diff_cols, compare_blocks_cols), ones_diff_cols), compare_blocks_rows))
COND TREES:
and_(le(_if_then_else(or_(ge(_if_then_else(True, 2, 1), _if_then_else(and_(False, ge(compare_blocks_cols, zeros_diff_rows)), _if_then_else(True, compare_blocks_cols, _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), 2)), or_(or_(False, True), or_(or_(False, False), True))), ones_diff_cols, zeros_diff_cols), _if_then_else(or_(False, True), compare_blocks_rows, 0)), le(_if_then_else(False, zeros_diff_cols, 3), _if_then_else(True, ones_diff_rows, ones_diff_cols)))
or_(and_(le(_if_then_else(False, ARG7, ARG6), _if_then_else(True, ARG7, 0)), le(_if_then_else(False, ARG6, 2), _if_then_else(ge(_if_then_else(le(_if_then_else(False, 4, zeros_diff_cols), _if_then_else(True, ones_diff_rows, ARG7)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(True, ones_diff_rows, compare_blocks_cols)), _if_then_else(le(2, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, 2), _if_then_else(True, ones_diff_cols, 0))), _if_then_else(le(_if_then_else(True, 4, 3), _if_then_else(True, 0, 4)), _if_then_else(le(ARG7, 4), _if_then_else(True, zeros_diff_cols, ARG7), _if_then_else(False, 0, ARG7)), _if_then_else(le(ones_diff_cols, ARG7), _if_then_else(True, 0, 4), _if_then_else(True, zeros_diff_cols, 4)))), _if_then_else(or_(ge(_if_then_else(True, 3, ARG6), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), and_(and_(False, False), and_(False, False))), _if_then_else(and_(and_(False, False), or_(True, False)), _if_then_else(or_(False, False), _if_then_else(False, 1, 0), _if_then_else(True, 3, 1)), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, ARG6, zeros_diff_rows))), _if_then_else(or_(le(zeros_diff_cols, 3), and_(False, True)), _if_then_else(or_(False, False), _if_then_else(True, 2, ARG6), _if_then_else(False, compare_blocks_rows, compare_blocks_rows)), _if_then_else(le(ones_diff_cols, compare_blocks_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, 0)))), _if_then_else(and_(and_(ge(0, 3), ge(compare_blocks_rows, ARG6)), le(_if_then_else(False, 4, 0), _if_then_else(True, zeros_diff_rows, 0))), _if_then_else(ge(_if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, 1))), _if_then_else(and_(ge(ones_diff_rows, 0), and_(True, True)), _if_then_else(ge(3, compare_blocks_cols), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(False, 0, 1)), _if_then_else(le(zeros_diff_rows, 4), zeros_diff_cols, _if_then_else(True, compare_blocks_rows, 0))))))), le(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, ones_diff_cols), _if_then_else(False, ARG7, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, 2))))
and_(ge(_if_then_else(and_(False, True), _if_then_else(False, ARG7, ARG7), _if_then_else(True, 2, 2)), _if_then_else(and_(False, False), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, 1, 2))), ge(_if_then_else(and_(True, True), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)), _if_then_else(le(1, 3), _if_then_else(False, 1, 0), _if_then_else(False, ones_diff_rows, zeros_diff_rows))))
or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(False, 3, zeros_diff_rows)), and_(and_(False, True), le(ARG7, compare_blocks_rows)))
or_(and_(or_(False, False), ge(compare_blocks_cols, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), and_(or_(le(2, zeros_diff_rows), le(compare_blocks_rows, 1)), or_(True, True)))
VAL TREES:
mul(add(ones_diff_rows, add(ones_diff_cols, ones_diff_cols)), add(add(mul(zeros_diff_rows, compare_blocks_cols), ones_diff_rows), ones_diff_cols))
mul(add(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, mul(mul(compare_blocks_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_cols)))))
mul(mul(add(ones_diff_cols, compare_blocks_cols), add(add(add(compare_blocks_cols, zeros_diff_rows), add(mul(zeros_diff_rows, compare_blocks_cols), add(add(mul(add(add(add(zeros_diff_cols, add(compare_blocks_cols, ones_diff_cols)), add(compare_blocks_rows, ones_diff_cols)), zeros_diff_cols), mul(ones_diff_cols, add(compare_blocks_rows, compare_blocks_cols))), add(mul(ones_diff_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_rows))), compare_blocks_cols))), zeros_diff_cols)), add(add(zeros_diff_cols, mul(compare_blocks_rows, add(add(ones_diff_rows, ones_diff_rows), ones_diff_rows))), mul(zeros_diff_rows, compare_blocks_rows)))
mul(add(mul(zeros_diff_rows, ones_diff_rows), mul(mul(mul(ones_diff_rows, compare_blocks_rows), zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows))), mul(add(ones_diff_rows, mul(mul(add(mul(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_cols)), add(mul(ones_diff_cols, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_rows))), mul(mul(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_rows, zeros_diff_rows)), add(add(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, ones_diff_rows), add(compare_blocks_rows, ones_diff_cols))), mul(add(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows)), mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, compare_blocks_rows)))))), ones_diff_cols))
mul(mul(mul(add(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, add(mul(add(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, compare_blocks_cols))))), compare_blocks_cols), add(add(compare_blocks_cols, add(compare_blocks_rows, compare_blocks_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(zeros_diff_rows, compare_blocks_cols))))
mul(add(add(zeros_diff_rows, mul(ones_diff_rows, ones_diff_rows)), ones_diff_cols), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(add(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(ones_diff_cols, zeros_diff_cols))))
COND TREES:
ge(_if_then_else(and_(True, and_(False, True)), compare_blocks_cols, _if_then_else(False, ARG7, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, _if_then_else(le(_if_then_else(or_(False, False), _if_then_else(True, ARG6, zeros_diff_rows), _if_then_else(False, ones_diff_cols, 1)), _if_then_else(ge(0, 0), _if_then_else(False, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, 2, 0))), zeros_diff_rows, ARG7), ones_diff_rows), _if_then_else(le(2, 2), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, 2), 4), _if_then_else(or_(False, True), 3, ARG6))))
and_(or_(ge(zeros_diff_cols, ones_diff_rows), ge(_if_then_else(or_(True, False), _if_then_else(True, ARG7, _if_then_else(le(ARG6, compare_blocks_rows), _if_then_else(False, 4, ARG7), 3)), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(ge(2, compare_blocks_rows), _if_then_else(True, _if_then_else(True, ones_diff_rows, zeros_diff_rows), _if_then_else(False, _if_then_else(False, 3, compare_blocks_rows), compare_blocks_rows)), _if_then_else(False, 2, zeros_diff_cols)))), and_(or_(True, False), and_(True, False)))
ge(_if_then_else(and_(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(False, ones_diff_rows, 4), _if_then_else(True, compare_blocks_cols, ARG6)), _if_then_else(ge(ones_diff_rows, 3), _if_then_else(False, ARG6, compare_blocks_cols), _if_then_else(True, 2, 2))), ge(_if_then_else(and_(True, False), 0, _if_then_else(False, compare_blocks_cols, ones_diff_rows)), _if_then_else(le(2, ARG6), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(True, 4, ones_diff_rows)))), _if_then_else(False, _if_then_else(False, ones_diff_cols, _if_then_else(False, 2, ones_diff_rows)), zeros_diff_cols), _if_then_else(False, _if_then_else(True, 0, compare_blocks_cols), zeros_diff_cols)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(True, ARG6, 2)))
or_(le(_if_then_else(True, ARG6, zeros_diff_cols), _if_then_else(le(zeros_diff_rows, ones_diff_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), 2)), ge(_if_then_else(and_(True, False), ones_diff_rows, zeros_diff_rows), compare_blocks_rows))
le(_if_then_else(le(_if_then_else(True, ARG6, ARG6), compare_blocks_rows), _if_then_else(True, _if_then_else(False, 4, compare_blocks_cols), 3), _if_then_else(False, zeros_diff_cols, compare_blocks_cols)), _if_then_else(and_(and_(False, False), True), _if_then_else(or_(False, False), 3, zeros_diff_rows), _if_then_else(False, 2, 1)))
VAL TREES:
add(add(add(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_cols)), add(add(zeros_diff_rows, add(ones_diff_rows, ones_diff_cols)), mul(zeros_diff_rows, zeros_diff_cols)))
add(add(add(zeros_diff_rows, zeros_diff_rows), add(mul(ones_diff_cols, mul(ones_diff_cols, zeros_diff_cols)), zeros_diff_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, mul(add(ones_diff_rows, ones_diff_cols), ones_diff_cols))))
add(mul(add(add(add(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, ones_diff_rows)), add(add(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_rows))), add(add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, zeros_diff_rows)))), add(mul(mul(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_rows, ones_diff_rows), compare_blocks_cols), add(add(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))))
add(add(mul(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_cols)), add(add(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_cols))), add(mul(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)))), add(mul(add(add(compare_blocks_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_cols))), add(mul(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)))))
add(mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows))), add(add(mul(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), add(add(zeros_diff_cols, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_rows))))
mul(add(mul(mul(mul(ones_diff_cols, zeros_diff_rows), compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(add(mul(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, zeros_diff_rows)), add(mul(zeros_diff_cols, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows))))
COND TREES:
and_(or_(or_(False, False), and_(True, False)), le(_if_then_else(False, zeros_diff_cols, 2), _if_then_else(True, ones_diff_rows, ones_diff_cols)))
or_(and_(le(_if_then_else(False, ARG7, ARG6), _if_then_else(True, ARG7, 0)), le(_if_then_else(False, ARG6, 2), _if_then_else(False, compare_blocks_cols, compare_blocks_cols))), le(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, ones_diff_cols), _if_then_else(False, ARG7, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, 2))))
and_(ge(_if_then_else(and_(False, True), _if_then_else(False, ARG7, ARG7), zeros_diff_rows), _if_then_else(and_(False, False), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, 1, 2))), ge(_if_then_else(or_(or_(False, True), ge(1, ones_diff_cols)), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)), _if_then_else(le(1, 3), _if_then_else(or_(or_(False, True), ge(1, ones_diff_cols)), 1, 0), _if_then_else(False, ones_diff_rows, zeros_diff_rows))))
or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(False, ones_diff_rows, zeros_diff_rows)), and_(and_(False, True), le(ARG7, compare_blocks_rows)))
or_(and_(or_(False, False), ge(compare_blocks_cols, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), ge(1, ones_diff_rows))
VAL TREES:
mul(add(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)), add(add(mul(zeros_diff_rows, compare_blocks_cols), ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)))
mul(add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, mul(mul(compare_blocks_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))))
mul(mul(add(ones_diff_cols, ones_diff_cols), add(add(add(compare_blocks_cols, zeros_diff_rows), compare_blocks_rows), zeros_diff_cols)), add(add(zeros_diff_cols, mul(compare_blocks_rows, add(add(ones_diff_rows, ones_diff_rows), ones_diff_rows))), mul(zeros_diff_rows, compare_blocks_rows)))
mul(add(mul(zeros_diff_rows, ones_diff_rows), mul(compare_blocks_rows, compare_blocks_cols)), add(mul(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_rows)))
mul(mul(mul(add(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), ones_diff_cols), add(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(zeros_diff_rows, compare_blocks_cols))))
mul(add(add(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), ones_diff_cols), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_cols))))
COND TREES:
and_(or_(and_(True, True), le(ARG6, 3)), False)
le(_if_then_else(ge(_if_then_else(or_(False, False), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(False, 0, zeros_diff_rows)), _if_then_else(le(1, compare_blocks_cols), _if_then_else(False, 1, compare_blocks_rows), _if_then_else(True, ARG7, compare_blocks_cols))), _if_then_else(or_(or_(True, True), and_(True, False)), _if_then_else(and_(True, False), _if_then_else(False, 3, 0), _if_then_else(True, 2, compare_blocks_cols)), _if_then_else(or_(True, False), _if_then_else(False, ARG7, 4), ones_diff_rows)), _if_then_else(le(_if_then_else(True, ARG6, 1), _if_then_else(True, compare_blocks_cols, 2)), _if_then_else(ge(1, ones_diff_cols), _if_then_else(False, ARG6, 4), _if_then_else(False, compare_blocks_rows, ones_diff_rows)), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(True, ARG6, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, ARG6)))), _if_then_else(or_(le(_if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(True, ARG6, _if_then_else(False, ARG6, ARG6))), and_(and_(False, True), or_(True, False))), _if_then_else(and_(or_(True, False), le(compare_blocks_rows, compare_blocks_rows)), _if_then_else(ge(zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(True, ones_diff_rows, 4)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, ARG7), _if_then_else(False, 0, ones_diff_rows))), _if_then_else(ge(_if_then_else(False, ARG6, zeros_diff_cols), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(and_(False, False), _if_then_else(True, ones_diff_cols, ARG6), _if_then_else(False, 2, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_cols), _if_then_else(False, 1, 2)))))
and_(False, True)
le(_if_then_else(ge(_if_then_else(le(compare_blocks_rows, 4), _if_then_else(False, 1, ones_diff_rows), _if_then_else(False, ones_diff_rows, 2)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(True, 1, compare_blocks_cols))), _if_then_else(and_(ge(0, zeros_diff_cols), ge(ARG7, 4)), _if_then_else(le(compare_blocks_rows, ones_diff_cols), _if_then_else(False, zeros_diff_cols, compare_blocks_rows), _if_then_else(True, ones_diff_rows, 2)), _if_then_else(and_(False, False), _if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(True, 2, 1))), _if_then_else(le(_if_then_else(True, ARG6, zeros_diff_cols), _if_then_else(True, 4, ARG6)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_rows, 1), _if_then_else(False, 0, 4)), zeros_diff_cols)), _if_then_else(or_(or_(or_(False, True), ge(zeros_diff_cols, zeros_diff_rows)), or_(ge(4, ARG7), le(compare_blocks_rows, ones_diff_rows))), _if_then_else(ge(_if_then_else(True, ARG7, zeros_diff_cols), _if_then_else(False, 4, ARG7)), _if_then_else(ge(ones_diff_cols, zeros_diff_cols), _if_then_else(False, ARG6, 1), _if_then_else(False, ones_diff_cols, 3)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(True, compare_blocks_cols, ones_diff_rows))), _if_then_else(and_(or_(False, True), or_(True, True)), _if_then_else(or_(True, False), _if_then_else(False, 2, ones_diff_rows), _if_then_else(True, ARG6, ARG7)), _if_then_else(le(zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_cols)))))
le(_if_then_else(le(zeros_diff_rows, 3), _if_then_else(True, 3, 4), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), _if_then_else(True, ARG6, 2), _if_then_else(False, ones_diff_cols, ones_diff_cols)))
VAL TREES:
add(mul(add(add(mul(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_cols)), mul(add(add(mul(zeros_diff_cols, compare_blocks_cols), mul(add(zeros_diff_rows, compare_blocks_rows), ones_diff_rows)), mul(add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_rows)), add(zeros_diff_rows, compare_blocks_rows))), add(compare_blocks_cols, compare_blocks_rows))), add(add(mul(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)), add(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)))), add(mul(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols))), add(add(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_rows)), mul(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)))))
add(mul(add(mul(ones_diff_rows, ones_diff_cols), add(zeros_diff_cols, zeros_diff_cols)), add(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_cols))), mul(mul(mul(compare_blocks_cols, mul(mul(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_cols)))), add(ones_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_cols))))
mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows))), add(mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(add(compare_blocks_cols, mul(mul(ones_diff_rows, compare_blocks_rows), zeros_diff_cols)), mul(ones_diff_cols, zeros_diff_rows))))
add(mul(add(mul(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_rows)), add(mul(ones_diff_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols))), add(mul(add(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)), mul(mul(zeros_diff_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_cols)))), mul(mul(add(mul(compare_blocks_rows, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(mul(add(mul(zeros_diff_cols, ones_diff_cols), mul(add(mul(mul(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_rows), mul(compare_blocks_cols, ones_diff_cols))), add(add(mul(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), mul(add(ones_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))))), mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows))), add(zeros_diff_rows, compare_blocks_rows))), add(mul(mul(compare_blocks_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_cols)))))
mul(mul(mul(mul(add(add(mul(zeros_diff_rows, compare_blocks_rows), compare_blocks_cols), zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), add(mul(zeros_diff_rows, zeros_diff_rows), add(compare_blocks_cols, compare_blocks_cols))), add(ones_diff_cols, zeros_diff_rows)), add(add(zeros_diff_rows, compare_blocks_cols), add(add(compare_blocks_cols, ones_diff_cols), add(zeros_diff_cols, add(ones_diff_cols, compare_blocks_rows)))))
add(add(mul(mul(mul(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), add(mul(zeros_diff_rows, ones_diff_rows), mul(zeros_diff_rows, ones_diff_rows))), add(mul(add(ones_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)))), mul(add(add(add(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, compare_blocks_rows), mul(mul(add(ones_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_rows)), add(mul(ones_diff_cols, zeros_diff_cols), mul(ones_diff_rows, compare_blocks_cols))))), mul(add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)))))
COND TREES:
and_(False, le(_if_then_else(False, zeros_diff_cols, 3), _if_then_else(True, ones_diff_rows, ones_diff_cols)))
or_(and_(le(_if_then_else(False, ARG7, ARG6), _if_then_else(True, ARG7, 0)), le(_if_then_else(False, ARG6, 2), _if_then_else(False, compare_blocks_cols, compare_blocks_cols))), le(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, ones_diff_cols), zeros_diff_rows), _if_then_else(ge(_if_then_else(False, 1, 4), _if_then_else(True, zeros_diff_rows, 3)), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, 2))))
and_(ge(_if_then_else(and_(False, True), _if_then_else(False, ARG7, ARG7), _if_then_else(True, 2, 2)), _if_then_else(and_(False, False), _if_then_else(True, 2, 1), _if_then_else(True, 1, 2))), ge(_if_then_else(and_(True, True), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, ARG7)), _if_then_else(le(1, 3), _if_then_else(False, 1, 0), _if_then_else(False, ones_diff_rows, zeros_diff_rows))))
or_(ge(_if_then_else(True, _if_then_else(ge(_if_then_else(False, ARG7, compare_blocks_rows), ones_diff_cols), _if_then_else(False, 1, 3), _if_then_else(False, ARG6, 4)), _if_then_else(False, zeros_diff_cols, 4)), _if_then_else(False, 3, zeros_diff_rows)), and_(and_(False, True), le(ARG7, compare_blocks_rows)))
or_(and_(or_(False, False), ge(compare_blocks_cols, _if_then_else(False, compare_blocks_rows, 1))), and_(or_(True, False), or_(True, True)))
VAL TREES:
mul(add(mul(mul(mul(zeros_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))), ones_diff_cols), add(add(mul(zeros_diff_rows, compare_blocks_cols), ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)))
mul(add(compare_blocks_cols, add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_rows)))
mul(mul(add(ones_diff_cols, ones_diff_cols), add(add(add(compare_blocks_cols, zeros_diff_rows), compare_blocks_rows), zeros_diff_cols)), add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, mul(zeros_diff_cols, compare_blocks_cols))))
mul(add(mul(zeros_diff_rows, ones_diff_rows), mul(compare_blocks_rows, compare_blocks_cols)), add(mul(zeros_diff_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(mul(mul(add(add(mul(mul(ones_diff_cols, ones_diff_cols), add(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_rows, zeros_diff_rows), add(zeros_diff_rows, compare_blocks_rows))), compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), add(mul(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_rows))), add(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(zeros_diff_rows, compare_blocks_cols))))
mul(add(add(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(compare_blocks_cols, mul(ones_diff_cols, zeros_diff_cols))))
COND TREES:
or_(le(_if_then_else(or_(and_(True, True), le(1, 1)), _if_then_else(ge(4, 1), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, ARG7)), _if_then_else(or_(False, True), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, compare_blocks_cols, compare_blocks_rows))), _if_then_else(ge(_if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(ge(3, ARG6), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, 0, compare_blocks_rows), _if_then_else(True, 0, ARG7)))), ge(_if_then_else(le(_if_then_else(True, ARG7, 4), _if_then_else(False, 2, ARG6)), _if_then_else(ge(3, ARG7), _if_then_else(False, 0, 0), _if_then_else(True, 3, 1)), _if_then_else(or_(False, True), _if_then_else(True, 4, ARG7), _if_then_else(True, 2, ones_diff_cols))), _if_then_else(and_(and_(True, False), and_(True, le(_if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(or_(False, True), compare_blocks_rows, 0)))), _if_then_else(le(compare_blocks_rows, ARG6), _if_then_else(True, compare_blocks_cols, ARG7), _if_then_else(False, ARG7, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, compare_blocks_cols, 3)))))
le(_if_then_else(or_(True, True), _if_then_else(False, _if_then_else(False, ARG7, zeros_diff_rows), ARG6), _if_then_else(False, compare_blocks_rows, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(False, 1, compare_blocks_rows), _if_then_else(True, ARG7, compare_blocks_cols)))
or_(and_(le(1, 1), ge(compare_blocks_rows, ones_diff_cols)), or_(le(_if_then_else(False, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows)), or_(and_(False, True), True)))
or_(or_(or_(False, True), le(3, ARG6)), ge(ones_diff_cols, _if_then_else(False, ARG6, 0)))
or_(and_(ge(ARG6, compare_blocks_rows), or_(False, True)), and_(or_(True, True), le(zeros_diff_cols, compare_blocks_rows)))
VAL TREES:
add(mul(ones_diff_rows, zeros_diff_cols), mul(mul(mul(ones_diff_cols, ones_diff_rows), ones_diff_rows), mul(compare_blocks_cols, add(add(ones_diff_rows, zeros_diff_cols), zeros_diff_cols))))
mul(mul(mul(mul(add(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_rows, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows)))), mul(mul(mul(add(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_cols))), mul(mul(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_rows)))))
mul(mul(add(mul(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols))), mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols)), add(add(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols))))
add(mul(compare_blocks_cols, mul(zeros_diff_cols, mul(compare_blocks_cols, zeros_diff_cols))), add(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_cols)))
mul(add(mul(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, ones_diff_rows)), add(add(add(zeros_diff_rows, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows)), add(compare_blocks_cols, ones_diff_cols)))
mul(zeros_diff_rows, mul(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_rows, ones_diff_rows)))
COND TREES:
or_(ge(_if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(False, _if_then_else(False, _if_then_else(ge(_if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(True, 2, zeros_diff_cols), _if_then_else(False, 1, zeros_diff_rows)), _if_then_else(ge(2, zeros_diff_cols), _if_then_else(True, zeros_diff_rows, 1), 1)), 0), compare_blocks_rows)), and_(ge(ones_diff_cols, ARG7), or_(or_(True, False), True)))
and_(ge(_if_then_else(True, 2, zeros_diff_rows), _if_then_else(True, _if_then_else(le(3, compare_blocks_rows), 1, zeros_diff_rows), ones_diff_rows)), ge(_if_then_else(ge(4, zeros_diff_cols), ARG7, _if_then_else(True, zeros_diff_cols, 4)), _if_then_else(True, 1, _if_then_else(True, zeros_diff_rows, 0))))
and_(or_(and_(ge(_if_then_else(False, 3, ARG7), 0), False), or_(False, False)), le(_if_then_else(ge(zeros_diff_rows, ones_diff_cols), ones_diff_rows, 2), _if_then_else(False, ARG6, _if_then_else(False, _if_then_else(False, 4, _if_then_else(ge(_if_then_else(True, 3, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), _if_then_else(ge(ARG6, 2), _if_then_else(False, ARG6, 0), _if_then_else(False, 3, zeros_diff_cols)), _if_then_else(True, _if_then_else(True, 4, 2), _if_then_else(False, ones_diff_cols, 3)))), _if_then_else(False, ones_diff_rows, 4)))))
and_(or_(and_(le(compare_blocks_rows, compare_blocks_rows), and_(True, True)), or_(True, True)), ge(_if_then_else(True, compare_blocks_rows, ARG6), _if_then_else(le(3, ones_diff_rows), zeros_diff_cols, _if_then_else(True, 2, 2))))
and_(ge(_if_then_else(False, 3, compare_blocks_rows), _if_then_else(False, 0, 0)), and_(and_(False, True), or_(True, False)))
VAL TREES:
add(ones_diff_cols, mul(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows)))
mul(add(add(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), zeros_diff_cols)
mul(mul(mul(add(ones_diff_cols, add(mul(ones_diff_rows, compare_blocks_cols), compare_blocks_rows)), add(zeros_diff_cols, ones_diff_rows)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, ones_diff_cols))), add(mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), add(ones_diff_cols, compare_blocks_cols))))
mul(add(add(ones_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows)), mul(mul(mul(ones_diff_rows, compare_blocks_rows), zeros_diff_cols), mul(ones_diff_rows, zeros_diff_rows)))
add(add(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_rows)), add(add(mul(zeros_diff_cols, zeros_diff_cols), ones_diff_rows), add(zeros_diff_cols, compare_blocks_cols)))
mul(add(zeros_diff_rows, add(ones_diff_rows, ones_diff_cols)), add(mul(add(zeros_diff_cols, compare_blocks_cols), ones_diff_cols), compare_blocks_rows))
COND TREES:
or_(ge(_if_then_else(or_(True, False), ARG7, _if_then_else(False, 2, compare_blocks_rows)), _if_then_else(False, ARG6, ARG7)), and_(ge(zeros_diff_cols, _if_then_else(False, zeros_diff_cols, ARG7)), or_(False, True)))
or_(ge(_if_then_else(and_(and_(ge(4, compare_blocks_cols), and_(False, True)), ge(_if_then_else(True, zeros_diff_cols, 0), _if_then_else(False, 0, zeros_diff_rows))), _if_then_else(or_(and_(False, False), le(2, 3)), _if_then_else(le(1, ARG7), _if_then_else(True, compare_blocks_rows, 1), _if_then_else(True, 3, ones_diff_cols)), _if_then_else(le(2, 2), _if_then_else(True, ARG7, 2), _if_then_else(True, 3, ones_diff_cols))), _if_then_else(or_(or_(False, True), le(zeros_diff_cols, ARG6)), _if_then_else(ge(ARG6, ones_diff_rows), _if_then_else(False, ARG7, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols)), _if_then_else(True, _if_then_else(False, ARG7, 0), _if_then_else(False, ARG7, ones_diff_cols)))), _if_then_else(True, zeros_diff_rows, 3)), or_(or_(True, True), ge(zeros_diff_cols, ARG6)))
and_(and_(and_(False, False), le(compare_blocks_cols, _if_then_else(True, _if_then_else(True, ARG6, _if_then_else(ge(_if_then_else(le(3, 2), _if_then_else(False, ARG7, _if_then_else(True, compare_blocks_cols, ARG7)), _if_then_else(False, ones_diff_rows, ones_diff_rows)), _if_then_else(ge(ARG7, _if_then_else(le(zeros_diff_rows, ones_diff_cols), 0, _if_then_else(True, compare_blocks_rows, 2))), _if_then_else(True, ARG6, 0), _if_then_else(False, ones_diff_cols, 0))), 4, 1)), 4))), ge(_if_then_else(or_(False, True), _if_then_else(False, 4, 4), 2), _if_then_else(True, zeros_diff_rows, 3)))
ge(_if_then_else(le(_if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(le(zeros_diff_rows, 4), ones_diff_cols, _if_then_else(False, ARG7, compare_blocks_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, ARG7, ARG7))), _if_then_else(and_(le(ARG6, compare_blocks_cols), ge(compare_blocks_rows, 2)), _if_then_else(or_(or_(False, True), False), _if_then_else(True, ones_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 0)), _if_then_else(or_(False, False), _if_then_else(True, 0, ARG7), _if_then_else(False, 2, ones_diff_cols))))
and_(le(_if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, 4, ARG7)), and_(le(compare_blocks_rows, 1), and_(True, True)))
VAL TREES:
add(mul(mul(add(mul(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_cols)), compare_blocks_cols), mul(mul(add(ones_diff_rows, compare_blocks_cols), ones_diff_rows), add(ones_diff_cols, ones_diff_cols))), mul(mul(ones_diff_rows, ones_diff_cols), add(mul(ones_diff_cols, ones_diff_rows), zeros_diff_cols)))
mul(mul(add(ones_diff_rows, mul(zeros_diff_cols, mul(zeros_diff_rows, zeros_diff_rows))), mul(add(zeros_diff_rows, compare_blocks_cols), compare_blocks_cols)), add(add(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)))
mul(mul(add(mul(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols))), mul(mul(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)))), mul(add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(mul(zeros_diff_cols, zeros_diff_rows), add(add(zeros_diff_cols, mul(compare_blocks_rows, add(add(ones_diff_rows, ones_diff_rows), ones_diff_rows))), mul(zeros_diff_rows, compare_blocks_rows)))), add(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, ones_diff_rows)))))
add(add(add(ones_diff_rows, mul(mul(zeros_diff_rows, ones_diff_cols), add(mul(zeros_diff_rows, ones_diff_rows), mul(compare_blocks_rows, compare_blocks_cols)))), mul(mul(add(zeros_diff_cols, compare_blocks_cols), zeros_diff_cols), compare_blocks_rows)), mul(add(zeros_diff_cols, add(ones_diff_cols, zeros_diff_rows)), mul(ones_diff_rows, compare_blocks_rows)))
add(mul(add(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows))), mul(add(add(zeros_diff_cols, compare_blocks_cols), compare_blocks_cols), mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), mul(add(mul(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), mul(add(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_cols, compare_blocks_cols))), mul(add(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(mul(mul(add(ones_diff_rows, ones_diff_cols), add(compare_blocks_cols, compare_blocks_rows)), add(zeros_diff_rows, ones_diff_rows)), add(add(ones_diff_rows, compare_blocks_rows), mul(mul(ones_diff_rows, zeros_diff_rows), compare_blocks_cols)))
COND TREES:
or_(ge(_if_then_else(or_(True, False), ARG7, _if_then_else(or_(False, True), compare_blocks_rows, compare_blocks_rows)), _if_then_else(False, ARG6, ARG7)), and_(ge(zeros_diff_cols, 1), or_(ge(_if_then_else(and_(True, False), _if_then_else(False, ones_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, 3)), _if_then_else(ge(_if_then_else(True, ones_diff_rows, ARG7), _if_then_else(True, ones_diff_cols, 0)), _if_then_else(False, compare_blocks_rows, _if_then_else(False, 2, 4)), _if_then_else(True, zeros_diff_cols, zeros_diff_rows))), True)))
or_(ge(_if_then_else(False, _if_then_else(or_(or_(True, False), ge(4, ARG6)), _if_then_else(or_(False, False), _if_then_else(False, 1, 1), _if_then_else(or_(True, False), _if_then_else(False, 1, 4), 0)), _if_then_else(and_(False, and_(False, False)), _if_then_else(True, _if_then_else(False, _if_then_else(True, ARG7, 4), zeros_diff_rows), ones_diff_cols), _if_then_else(False, compare_blocks_cols, zeros_diff_rows))), 4), _if_then_else(True, zeros_diff_rows, 3)), True)
and_(and_(and_(False, False), le(compare_blocks_cols, _if_then_else(True, _if_then_else(True, ARG6, ARG7), ones_diff_rows))), ge(_if_then_else(or_(le(ARG7, _if_then_else(True, ones_diff_cols, 0)), le(ones_diff_rows, _if_then_else(True, zeros_diff_rows, 2))), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_rows, _if_then_else(False, ones_diff_rows, ones_diff_cols)), _if_then_else(False, ARG6, zeros_diff_rows)), _if_then_else(ge(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, 3, ARG7), _if_then_else(or_(True, and_(or_(ge(_if_then_else(ge(0, 3), _if_then_else(True, 4, zeros_diff_cols), _if_then_else(True, zeros_diff_rows, 0)), _if_then_else(le(ones_diff_rows, 2), _if_then_else(False, 4, 4), _if_then_else(True, ones_diff_cols, ARG6))), le(_if_then_else(or_(False, False), _if_then_else(True, 0, ones_diff_cols), _if_then_else(True, ARG6, ones_diff_cols)), _if_then_else(le(compare_blocks_cols, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(True, zeros_diff_rows, ones_diff_cols)))), and_(and_(ge(_if_then_else(True, zeros_diff_rows, 2), _if_then_else(True, 1, 0)), ge(_if_then_else(False, ones_diff_rows, compare_blocks_cols), _if_then_else(True, 3, ARG7))), and_(ge(_if_then_else(False, ones_diff_rows, ones_diff_rows), _if_then_else(True, 0, compare_blocks_rows)), le(_if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, 0)))))), compare_blocks_cols, compare_blocks_cols))), _if_then_else(True, zeros_diff_rows, 3)))
ge(_if_then_else(le(_if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(le(zeros_diff_rows, 4), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(False, ARG7, compare_blocks_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, ARG7, ARG7))), _if_then_else(and_(le(ARG6, compare_blocks_cols), ge(compare_blocks_rows, 2)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 0)), _if_then_else(le(_if_then_else(True, ARG7, zeros_diff_cols), _if_then_else(le(zeros_diff_rows, ones_diff_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), 2)), _if_then_else(True, 0, ARG7), _if_then_else(False, 2, ones_diff_cols))))
and_(le(_if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, 4, compare_blocks_rows)), and_(le(compare_blocks_rows, 1), and_(True, and_(ge(_if_then_else(ge(_if_then_else(False, ARG6, ones_diff_cols), _if_then_else(False, zeros_diff_cols, ones_diff_cols)), _if_then_else(and_(False, False), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, compare_blocks_rows, 0)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, ARG6), _if_then_else(True, 0, 4))), _if_then_else(or_(and_(False, False), le(3, ones_diff_cols)), _if_then_else(ge(ARG7, ARG6), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(True, 0, zeros_diff_cols)), _if_then_else(le(compare_blocks_cols, zeros_diff_rows), _if_then_else(True, ARG7, ARG6), _if_then_else(False, ones_diff_cols, 3)))), and_(ge(_if_then_else(or_(False, True), _if_then_else(True, zeros_diff_rows, 1), _if_then_else(False, compare_blocks_cols, 3)), _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, 4, 2))), ge(_if_then_else(or_(False, False), _if_then_else(True, compare_blocks_rows, ARG6), _if_then_else(True, ARG7, compare_blocks_rows)), _if_then_else(and_(False, False), _if_then_else(True, 0, 1), _if_then_else(False, 4, ones_diff_cols))))))))
VAL TREES:
add(mul(mul(compare_blocks_cols, compare_blocks_cols), mul(mul(add(ones_diff_rows, compare_blocks_cols), ones_diff_rows), add(add(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_cols)), ones_diff_cols))), mul(ones_diff_rows, add(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols))))
mul(mul(add(ones_diff_rows, mul(zeros_diff_cols, mul(zeros_diff_rows, zeros_diff_rows))), ones_diff_rows), add(add(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)))
mul(mul(add(mul(add(add(compare_blocks_cols, compare_blocks_rows), compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols))), mul(mul(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_cols)))), mul(add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(mul(zeros_diff_cols, zeros_diff_rows), add(zeros_diff_rows, compare_blocks_cols))), add(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, ones_diff_rows)))))
add(add(add(ones_diff_rows, ones_diff_rows), mul(mul(add(zeros_diff_cols, compare_blocks_cols), zeros_diff_cols), compare_blocks_rows)), mul(add(zeros_diff_cols, add(ones_diff_cols, zeros_diff_rows)), mul(ones_diff_rows, compare_blocks_rows)))
add(mul(add(mul(add(ones_diff_rows, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows))), mul(add(add(add(zeros_diff_cols, compare_blocks_cols), compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), mul(add(mul(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), mul(add(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_cols, compare_blocks_cols))), mul(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(mul(add(add(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)), add(zeros_diff_rows, ones_diff_rows)), add(add(ones_diff_rows, add(compare_blocks_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, zeros_diff_rows), compare_blocks_cols)))
COND TREES:
and_(or_(or_(False, False), and_(True, False)), le(_if_then_else(False, zeros_diff_cols, 3), _if_then_else(True, ones_diff_rows, ones_diff_cols)))
or_(and_(le(_if_then_else(False, ARG7, ARG6), _if_then_else(True, ARG7, 0)), le(_if_then_else(False, ARG6, _if_then_else(False, ARG6, ARG6)), _if_then_else(False, compare_blocks_cols, compare_blocks_cols))), le(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, ones_diff_cols), _if_then_else(False, ARG7, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, 2))))
and_(ge(_if_then_else(and_(False, True), _if_then_else(False, ARG7, ARG7), zeros_diff_rows), _if_then_else(and_(False, False), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, 1, 2))), ge(_if_then_else(or_(or_(False, True), ge(1, ones_diff_cols)), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)), _if_then_else(le(1, 3), _if_then_else(False, 1, 0), _if_then_else(False, ones_diff_rows, zeros_diff_rows))))
or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(False, ones_diff_rows, zeros_diff_rows)), and_(and_(False, True), le(ARG7, compare_blocks_rows)))
or_(and_(or_(False, False), ge(compare_blocks_cols, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), ge(1, ones_diff_rows))
VAL TREES:
mul(ones_diff_cols, add(add(mul(zeros_diff_rows, compare_blocks_cols), ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)))
mul(add(mul(add(add(mul(mul(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_cols, ones_diff_rows)), add(add(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_rows))), mul(add(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_cols, ones_diff_cols)), add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_rows, ones_diff_cols)))), zeros_diff_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, mul(mul(compare_blocks_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))))
mul(mul(add(ones_diff_cols, ones_diff_cols), add(add(add(compare_blocks_cols, zeros_diff_rows), compare_blocks_rows), zeros_diff_cols)), add(add(zeros_diff_cols, mul(compare_blocks_rows, add(add(mul(add(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_rows))), ones_diff_rows))), mul(compare_blocks_rows, compare_blocks_rows)))
mul(add(mul(zeros_diff_rows, ones_diff_rows), mul(compare_blocks_rows, compare_blocks_cols)), add(mul(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_rows)))
mul(mul(add(add(add(mul(add(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)), mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols))), add(add(mul(ones_diff_cols, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows)), add(add(ones_diff_rows, zeros_diff_cols), add(ones_diff_rows, zeros_diff_cols)))), add(add(add(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_cols, zeros_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols))), mul(mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)), add(add(compare_blocks_cols, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows))))), ones_diff_cols), add(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(zeros_diff_rows, compare_blocks_cols))))
mul(add(add(mul(mul(mul(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_rows, compare_blocks_rows)), add(add(zeros_diff_rows, compare_blocks_rows), mul(zeros_diff_rows, zeros_diff_cols))), mul(ones_diff_rows, ones_diff_rows)), ones_diff_cols), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_cols))))
COND TREES:
or_(le(_if_then_else(or_(and_(True, True), le(1, 1)), _if_then_else(ge(4, 1), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, ARG7)), _if_then_else(or_(False, True), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, compare_blocks_cols, compare_blocks_rows))), _if_then_else(ge(_if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(ge(3, ARG6), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, compare_blocks_rows, compare_blocks_cols)), zeros_diff_rows)), ge(_if_then_else(le(_if_then_else(True, ARG7, 4), _if_then_else(False, 2, ARG6)), _if_then_else(ge(_if_then_else(and_(and_(False, False), and_(le(compare_blocks_cols, zeros_diff_rows), True)), _if_then_else(and_(False, False), _if_then_else(False, _if_then_else(True, ARG6, compare_blocks_rows), ones_diff_cols), _if_then_else(False, _if_then_else(False, compare_blocks_rows, ARG7), 3)), _if_then_else(or_(True, False), _if_then_else(or_(False, True), 1, 2), _if_then_else(False, _if_then_else(False, 1, 1), ones_diff_rows))), ARG7), _if_then_else(False, 0, 0), _if_then_else(True, 3, 1)), _if_then_else(or_(False, True), _if_then_else(True, 4, ARG7), _if_then_else(True, 2, ones_diff_cols))), _if_then_else(and_(and_(True, False), and_(True, False)), _if_then_else(le(compare_blocks_rows, ARG6), _if_then_else(True, compare_blocks_cols, ARG7), _if_then_else(False, ARG7, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, compare_blocks_cols, 3)))))
le(2, _if_then_else(and_(True, True), _if_then_else(False, 1, compare_blocks_rows), _if_then_else(True, ARG7, compare_blocks_cols)))
or_(and_(le(1, 1), ge(compare_blocks_rows, 1)), or_(le(_if_then_else(False, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, 1, _if_then_else(le(_if_then_else(ge(zeros_diff_rows, 4), _if_then_else(False, compare_blocks_cols, 0), 4), _if_then_else(or_(False, True), _if_then_else(True, 1, ones_diff_rows), _if_then_else(False, ARG7, compare_blocks_rows))), _if_then_else(and_(True, ge(zeros_diff_rows, 3)), _if_then_else(le(4, ARG6), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(True, ones_diff_rows, compare_blocks_cols)), _if_then_else(ge(1, ARG7), _if_then_else(True, ARG7, zeros_diff_rows), _if_then_else(False, 1, 3))), _if_then_else(and_(le(ones_diff_cols, 2), le(2, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, 2, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(True, 0, compare_blocks_cols), _if_then_else(False, ones_diff_rows, 3)))))), or_(and_(False, True), True)))
or_(or_(or_(False, True), le(3, ARG6)), and_(ge(_if_then_else(le(ARG7, 0), _if_then_else(True, 0, zeros_diff_cols), zeros_diff_rows), _if_then_else(True, _if_then_else(True, ARG6, compare_blocks_cols), ones_diff_rows)), le(_if_then_else(True, zeros_diff_cols, 0), _if_then_else(True, _if_then_else(le(ARG6, ARG6), 1, ones_diff_rows), 0))))
or_(and_(ge(ARG6, compare_blocks_rows), or_(False, True)), and_(False, le(zeros_diff_cols, compare_blocks_rows)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_rows), mul(ones_diff_rows, ones_diff_cols)), mul(mul(mul(ones_diff_cols, ones_diff_rows), ones_diff_rows), mul(compare_blocks_cols, add(add(ones_diff_rows, zeros_diff_cols), zeros_diff_cols))))
mul(mul(mul(mul(add(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_rows, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows)))), mul(mul(add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_cols))), mul(mul(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_rows)))))
mul(mul(add(mul(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols))), mul(mul(add(compare_blocks_cols, add(add(add(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_rows, zeros_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_rows)))), add(compare_blocks_rows, compare_blocks_cols)), add(add(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols))))
add(mul(add(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, mul(compare_blocks_cols, zeros_diff_cols))), add(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_cols)))
mul(add(mul(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, ones_diff_rows)), add(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_cols)))
mul(mul(mul(add(ones_diff_rows, zeros_diff_rows), compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)), mul(add(mul(mul(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_cols)), mul(add(zeros_diff_rows, compare_blocks_rows), add(ones_diff_rows, ones_diff_rows))), ones_diff_rows), add(zeros_diff_rows, ones_diff_rows)))
COND TREES:
and_(le(_if_then_else(or_(ge(_if_then_else(True, 2, 1), _if_then_else(and_(False, ge(compare_blocks_cols, zeros_diff_rows)), _if_then_else(True, compare_blocks_cols, _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), 2)), or_(or_(False, True), or_(or_(False, False), True))), ones_diff_cols, _if_then_else(ge(_if_then_else(False, zeros_diff_rows, zeros_diff_cols), _if_then_else(True, _if_then_else(le(zeros_diff_rows, ARG7), _if_then_else(False, 3, ones_diff_rows), ARG6), _if_then_else(False, 1, _if_then_else(False, zeros_diff_rows, compare_blocks_cols)))), _if_then_else(or_(ge(1, _if_then_else(False, 2, 3)), True), _if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(and_(False, True), compare_blocks_rows, _if_then_else(ge(ones_diff_cols, 0), compare_blocks_rows, _if_then_else(False, compare_blocks_cols, 3)))), _if_then_else(or_(False, True), _if_then_else(le(ones_diff_cols, ARG6), compare_blocks_cols, 4), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_rows, ARG7), 2)))), _if_then_else(or_(False, True), compare_blocks_rows, 0)), le(_if_then_else(False, zeros_diff_cols, 3), _if_then_else(True, ones_diff_rows, ones_diff_cols)))
or_(and_(le(_if_then_else(False, ARG7, ARG6), _if_then_else(True, ARG7, 0)), le(_if_then_else(False, ARG6, 2), _if_then_else(ge(_if_then_else(le(_if_then_else(False, 4, zeros_diff_cols), _if_then_else(True, ones_diff_rows, ARG7)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(True, ones_diff_rows, compare_blocks_cols)), _if_then_else(le(2, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, 2), _if_then_else(True, ones_diff_cols, 0))), _if_then_else(le(_if_then_else(True, 4, 3), _if_then_else(True, 0, 4)), _if_then_else(le(ARG7, 4), _if_then_else(True, zeros_diff_cols, ARG7), _if_then_else(False, 0, ARG7)), _if_then_else(le(ones_diff_cols, ARG7), _if_then_else(True, 0, 4), _if_then_else(True, zeros_diff_cols, 4)))), _if_then_else(or_(ge(_if_then_else(True, 3, ARG6), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), and_(and_(False, False), and_(False, False))), _if_then_else(and_(and_(False, False), or_(True, False)), _if_then_else(or_(False, False), _if_then_else(False, 1, 0), _if_then_else(True, 3, 1)), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, ARG6, zeros_diff_rows))), _if_then_else(or_(le(zeros_diff_cols, 3), and_(False, True)), _if_then_else(or_(False, False), _if_then_else(True, 2, ARG6), _if_then_else(False, compare_blocks_rows, compare_blocks_rows)), _if_then_else(le(ones_diff_cols, compare_blocks_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, 0)))), _if_then_else(and_(and_(ge(0, 3), ge(compare_blocks_rows, ARG6)), le(_if_then_else(False, 4, 0), _if_then_else(True, zeros_diff_rows, 0))), _if_then_else(ge(_if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, 1))), _if_then_else(and_(ge(ones_diff_rows, 0), and_(True, True)), _if_then_else(ge(3, compare_blocks_cols), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(False, 0, 1)), _if_then_else(le(zeros_diff_rows, 4), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, 0))))))), le(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, ones_diff_cols), _if_then_else(False, ARG7, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, 2))))
and_(ge(_if_then_else(and_(False, True), _if_then_else(False, ARG7, ARG7), _if_then_else(True, 2, 2)), _if_then_else(and_(False, False), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, 1, 2))), ge(_if_then_else(and_(True, True), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)), _if_then_else(le(1, 3), _if_then_else(False, 1, 0), _if_then_else(False, ones_diff_rows, zeros_diff_rows))))
or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(False, 3, zeros_diff_rows)), and_(and_(False, True), le(ARG7, compare_blocks_rows)))
or_(and_(or_(and_(ge(_if_then_else(False, _if_then_else(True, ARG6, zeros_diff_cols), _if_then_else(False, ones_diff_rows, zeros_diff_rows)), _if_then_else(True, zeros_diff_rows, _if_then_else(False, zeros_diff_cols, zeros_diff_cols))), le(_if_then_else(True, 1, 3), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_cols, 4), ones_diff_rows))), False), ge(compare_blocks_cols, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), and_(or_(le(2, zeros_diff_rows), False), or_(True, True)))
VAL TREES:
mul(add(zeros_diff_rows, add(ones_diff_rows, ones_diff_cols)), add(add(mul(zeros_diff_rows, compare_blocks_cols), ones_diff_rows), ones_diff_cols))
mul(add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, mul(mul(compare_blocks_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_cols)))))
mul(mul(add(compare_blocks_rows, compare_blocks_cols), add(add(add(compare_blocks_cols, zeros_diff_rows), add(mul(zeros_diff_rows, compare_blocks_cols), add(ones_diff_cols, compare_blocks_cols))), zeros_diff_cols)), add(add(zeros_diff_cols, mul(compare_blocks_rows, add(add(ones_diff_rows, ones_diff_rows), ones_diff_rows))), mul(zeros_diff_rows, compare_blocks_rows)))
mul(add(mul(zeros_diff_rows, ones_diff_rows), mul(mul(mul(ones_diff_rows, compare_blocks_rows), zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows))), mul(add(ones_diff_rows, ones_diff_cols), compare_blocks_rows))
mul(mul(mul(add(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)), ones_diff_cols), add(add(compare_blocks_cols, add(compare_blocks_rows, compare_blocks_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(zeros_diff_rows, compare_blocks_cols))))
mul(add(add(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), ones_diff_cols), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(add(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(ones_diff_cols, zeros_diff_cols))))
COND TREES:
ge(_if_then_else(ge(4, 3), _if_then_else(True, zeros_diff_cols, ARG7), _if_then_else(True, compare_blocks_rows, zeros_diff_rows)), _if_then_else(or_(False, True), _if_then_else(True, 3, 2), _if_then_else(True, 3, 4)))
le(_if_then_else(le(_if_then_else(le(ARG6, zeros_diff_cols), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, 0, ARG7)), _if_then_else(le(0, compare_blocks_rows), _if_then_else(False, 2, ones_diff_rows), _if_then_else(True, ARG6, 3))), _if_then_else(or_(ge(compare_blocks_rows, zeros_diff_rows), ge(1, 4)), _if_then_else(and_(True, True), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(True, ARG7, 0)), _if_then_else(le(3, 2), _if_then_else(True, zeros_diff_cols, 2), _if_then_else(False, ARG7, zeros_diff_cols))), _if_then_else(or_(ge(zeros_diff_rows, ARG7), le(ones_diff_rows, 4)), _if_then_else(ge(ARG7, 3), _if_then_else(False, 3, ARG7), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(or_(False, False), _if_then_else(False, 1, 3), _if_then_else(True, ARG7, zeros_diff_cols)))), _if_then_else(le(_if_then_else(or_(False, False), _if_then_else(True, zeros_diff_cols, ARG6), _if_then_else(False, ARG6, 3)), _if_then_else(ge(4, zeros_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, 0))), _if_then_else(or_(and_(False, False), le(ones_diff_rows, 1)), _if_then_else(ge(1, 1), _if_then_else(True, ARG6, ones_diff_rows), _if_then_else(True, zeros_diff_rows, ARG6)), _if_then_else(ge(1, 0), _if_then_else(False, compare_blocks_rows, 4), _if_then_else(True, 4, compare_blocks_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(False, 4, zeros_diff_cols)), _if_then_else(ge(0, ARG7), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(ge(_if_then_else(False, zeros_diff_rows, 0), _if_then_else(le(ARG7, ones_diff_cols), ones_diff_cols, 2)), compare_blocks_rows, 0)), _if_then_else(or_(True, False), _if_then_else(True, ARG7, ARG7), _if_then_else(False, 0, ones_diff_rows)))))
and_(True, False)
ge(_if_then_else(and_(False, or_(True, False)), _if_then_else(or_(True, False), ARG7, _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(ge(_if_then_else(and_(True, le(ARG7, compare_blocks_rows)), ones_diff_rows, zeros_diff_rows), _if_then_else(ge(3, 0), zeros_diff_cols, ones_diff_cols)), 1, ones_diff_cols)), _if_then_else(le(_if_then_else(False, compare_blocks_cols, _if_then_else(False, zeros_diff_rows, ones_diff_cols)), ARG6), ones_diff_rows, _if_then_else(True, _if_then_else(True, zeros_diff_cols, 4), ARG7)))
and_(le(_if_then_else(le(0, compare_blocks_rows), _if_then_else(False, 3, ones_diff_rows), _if_then_else(True, 3, 4)), _if_then_else(ge(1, compare_blocks_rows), _if_then_else(False, 3, ones_diff_rows), _if_then_else(False, ones_diff_rows, 1))), ge(_if_then_else(le(ARG7, ones_diff_cols), _if_then_else(True, 2, ARG7), 2), _if_then_else(ge(ARG7, 3), _if_then_else(True, compare_blocks_cols, 3), ones_diff_cols)))
VAL TREES:
add(mul(mul(ones_diff_rows, compare_blocks_cols), compare_blocks_cols), mul(mul(compare_blocks_cols, mul(zeros_diff_rows, zeros_diff_rows)), add(ones_diff_rows, compare_blocks_cols)))
add(add(ones_diff_rows, add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_cols)))
add(mul(add(zeros_diff_cols, mul(ones_diff_rows, compare_blocks_rows)), add(compare_blocks_rows, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_rows), add(mul(compare_blocks_rows, ones_diff_cols), ones_diff_rows)))
mul(add(add(add(ones_diff_rows, mul(mul(ones_diff_rows, ones_diff_cols), zeros_diff_cols)), compare_blocks_cols), mul(mul(zeros_diff_rows, zeros_diff_cols), zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_cols, mul(ones_diff_rows, ones_diff_cols))))
mul(mul(mul(mul(add(ones_diff_rows, ones_diff_cols), mul(ones_diff_cols, ones_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols))), add(mul(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(add(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)))), mul(add(mul(add(ones_diff_rows, ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols)), mul(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_cols))), add(mul(add(ones_diff_cols, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows)), add(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)))))
add(mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_rows)), add(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, add(ones_diff_rows, compare_blocks_cols)))), mul(add(add(zeros_diff_rows, ones_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)), mul(add(ones_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_cols))))
COND TREES:
and_(le(_if_then_else(or_(ge(_if_then_else(True, 2, 1), _if_then_else(and_(False, ge(compare_blocks_cols, zeros_diff_rows)), _if_then_else(True, compare_blocks_cols, _if_then_else(False, zeros_diff_cols, ARG7)), 2)), or_(or_(False, True), or_(or_(False, False), True))), ones_diff_cols, zeros_diff_cols), _if_then_else(or_(False, True), compare_blocks_rows, 0)), le(_if_then_else(False, zeros_diff_cols, 3), _if_then_else(True, ones_diff_rows, ones_diff_cols)))
or_(and_(le(_if_then_else(False, ARG7, ARG6), _if_then_else(True, ARG7, 0)), le(_if_then_else(False, ARG6, 2), _if_then_else(ge(_if_then_else(le(_if_then_else(False, 4, zeros_diff_cols), _if_then_else(True, ones_diff_rows, ARG7)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(True, ones_diff_rows, compare_blocks_cols)), _if_then_else(le(2, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, 2), _if_then_else(True, ones_diff_cols, 0))), _if_then_else(le(_if_then_else(True, 4, 3), _if_then_else(True, 0, 4)), _if_then_else(le(ARG7, 4), _if_then_else(True, zeros_diff_cols, ARG7), _if_then_else(False, 0, ARG7)), _if_then_else(le(ones_diff_cols, ARG7), _if_then_else(True, 0, 4), _if_then_else(True, zeros_diff_cols, 4)))), _if_then_else(or_(ge(_if_then_else(True, 3, ARG6), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), and_(and_(False, False), and_(False, False))), _if_then_else(and_(and_(False, False), or_(True, False)), _if_then_else(or_(False, False), _if_then_else(False, 1, 0), _if_then_else(True, 3, 1)), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, ARG6, zeros_diff_rows))), _if_then_else(or_(le(zeros_diff_cols, 3), and_(False, True)), _if_then_else(or_(False, False), _if_then_else(True, 2, ARG6), _if_then_else(False, compare_blocks_rows, compare_blocks_rows)), _if_then_else(le(ones_diff_cols, compare_blocks_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, 0)))), _if_then_else(and_(and_(ge(0, 3), ge(compare_blocks_rows, ARG6)), le(_if_then_else(False, 4, 0), _if_then_else(True, zeros_diff_rows, 0))), _if_then_else(ge(_if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, 1))), _if_then_else(and_(ge(ones_diff_rows, 0), and_(True, True)), _if_then_else(ge(3, compare_blocks_cols), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(False, 0, 1)), _if_then_else(le(zeros_diff_rows, 4), zeros_diff_cols, _if_then_else(True, compare_blocks_rows, 0))))))), le(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, ones_diff_cols), _if_then_else(False, ARG7, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, 2))))
and_(ge(_if_then_else(and_(False, True), _if_then_else(False, ARG7, ARG7), _if_then_else(ge(_if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, _if_then_else(False, ones_diff_cols, 2), 3)), 2, 2)), _if_then_else(and_(False, False), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, 1, 2))), ge(_if_then_else(and_(True, True), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)), _if_then_else(le(1, 3), _if_then_else(False, 1, 0), _if_then_else(False, ones_diff_rows, zeros_diff_rows))))
or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(False, 3, zeros_diff_rows)), and_(and_(False, True), False))
or_(and_(or_(False, False), ge(compare_blocks_cols, _if_then_else(False, compare_blocks_rows, _if_then_else(True, compare_blocks_cols, 4)))), and_(or_(le(2, zeros_diff_rows), le(compare_blocks_rows, 1)), or_(True, True)))
VAL TREES:
mul(add(zeros_diff_rows, add(ones_diff_rows, ones_diff_cols)), add(add(mul(zeros_diff_rows, compare_blocks_cols), ones_diff_rows), ones_diff_cols))
mul(add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, mul(mul(compare_blocks_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_cols)))))
mul(mul(add(ones_diff_cols, compare_blocks_cols), add(add(add(compare_blocks_cols, zeros_diff_rows), add(mul(zeros_diff_rows, compare_blocks_cols), add(add(mul(add(add(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols)), zeros_diff_cols), mul(ones_diff_cols, add(compare_blocks_rows, compare_blocks_cols))), add(mul(ones_diff_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_rows))), compare_blocks_cols))), zeros_diff_cols)), add(add(zeros_diff_cols, mul(compare_blocks_rows, add(add(ones_diff_rows, ones_diff_rows), ones_diff_rows))), mul(zeros_diff_rows, compare_blocks_rows)))
mul(add(mul(zeros_diff_rows, ones_diff_rows), mul(mul(mul(ones_diff_rows, compare_blocks_rows), zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows))), mul(add(ones_diff_rows, mul(mul(add(mul(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_cols)), add(mul(ones_diff_cols, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_rows))), mul(mul(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_rows, zeros_diff_rows)), add(add(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, ones_diff_rows), add(compare_blocks_rows, ones_diff_cols))), mul(add(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows)), mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, compare_blocks_rows)))))), compare_blocks_rows))
mul(mul(mul(add(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, add(mul(add(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, compare_blocks_cols))))), ones_diff_cols), add(add(compare_blocks_cols, add(compare_blocks_rows, compare_blocks_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(zeros_diff_rows, compare_blocks_cols))))
mul(add(add(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), ones_diff_cols), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(add(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(ones_diff_cols, zeros_diff_cols))))
COND TREES:
or_(le(_if_then_else(or_(and_(True, True), le(1, 1)), _if_then_else(ge(4, 1), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, ARG7)), _if_then_else(or_(False, True), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, 2, compare_blocks_rows))), _if_then_else(ge(_if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(ge(3, ARG6), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, 0, compare_blocks_rows), _if_then_else(True, 0, ARG7)))), ge(_if_then_else(le(_if_then_else(True, ARG7, 4), _if_then_else(False, 2, ARG6)), _if_then_else(ge(3, ARG7), _if_then_else(False, 0, 0), _if_then_else(True, 3, 1)), _if_then_else(or_(False, True), _if_then_else(True, 4, ARG7), _if_then_else(True, 2, ones_diff_cols))), _if_then_else(and_(and_(True, False), and_(True, False)), _if_then_else(le(compare_blocks_rows, ARG6), _if_then_else(True, compare_blocks_cols, ARG7), _if_then_else(False, ARG7, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, compare_blocks_cols, 3)))))
le(_if_then_else(or_(True, True), _if_then_else(False, zeros_diff_rows, ARG6), _if_then_else(False, compare_blocks_rows, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(False, 1, compare_blocks_rows), _if_then_else(True, ARG7, compare_blocks_cols)))
or_(and_(ge(1, ones_diff_cols), ge(compare_blocks_rows, 1)), or_(le(_if_then_else(False, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows)), or_(and_(False, True), True)))
or_(or_(or_(False, True), le(3, ARG6)), ge(_if_then_else(False, zeros_diff_cols, 4), _if_then_else(False, ARG6, 0)))
or_(and_(ge(ARG6, 2), or_(False, True)), and_(or_(True, True), le(zeros_diff_cols, compare_blocks_rows)))
VAL TREES:
add(mul(ones_diff_rows, zeros_diff_cols), mul(mul(mul(ones_diff_cols, ones_diff_rows), ones_diff_rows), mul(compare_blocks_cols, add(add(ones_diff_rows, zeros_diff_cols), zeros_diff_cols))))
mul(mul(mul(mul(add(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_rows, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows)))), mul(mul(mul(add(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_cols))), mul(mul(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_rows)))))
mul(mul(add(mul(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols))), mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols)), add(add(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols))))
add(mul(compare_blocks_cols, mul(zeros_diff_cols, mul(compare_blocks_cols, zeros_diff_cols))), add(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_cols)))
mul(add(mul(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, ones_diff_rows)), add(add(add(zeros_diff_rows, ones_diff_rows), mul(ones_diff_rows, compare_blocks_rows)), add(compare_blocks_cols, ones_diff_cols)))
mul(zeros_diff_rows, mul(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_rows, ones_diff_rows)))
COND TREES:
and_(or_(and_(True, True), le(ARG6, compare_blocks_cols)), False)
le(_if_then_else(ge(_if_then_else(or_(False, False), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(False, 0, zeros_diff_rows)), _if_then_else(le(1, compare_blocks_cols), _if_then_else(False, 1, compare_blocks_rows), _if_then_else(True, ARG7, compare_blocks_cols))), _if_then_else(or_(or_(True, True), and_(True, False)), _if_then_else(and_(True, False), _if_then_else(False, 3, 0), _if_then_else(True, 2, compare_blocks_cols)), _if_then_else(or_(True, False), _if_then_else(False, ARG7, 4), _if_then_else(False, 1, 1))), _if_then_else(le(_if_then_else(True, ARG6, 1), _if_then_else(True, compare_blocks_cols, 2)), _if_then_else(ge(1, ones_diff_cols), _if_then_else(False, ARG6, 4), _if_then_else(False, compare_blocks_rows, ones_diff_rows)), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(True, ARG6, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, ARG6)))), _if_then_else(or_(le(_if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(True, ARG6, 2)), and_(and_(False, True), or_(True, False))), _if_then_else(and_(or_(True, False), le(compare_blocks_rows, compare_blocks_rows)), _if_then_else(ge(zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(True, ones_diff_rows, 4)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, ARG7), _if_then_else(False, 0, ones_diff_rows))), _if_then_else(ge(_if_then_else(False, ARG6, zeros_diff_cols), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(and_(False, False), _if_then_else(True, ones_diff_cols, ARG6), _if_then_else(False, 2, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_cols), _if_then_else(False, 1, 2)))))
and_(or_(or_(False, True), le(1, 1)), True)
le(_if_then_else(ge(_if_then_else(le(compare_blocks_rows, 4), _if_then_else(False, 1, ones_diff_rows), _if_then_else(False, ones_diff_rows, 2)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(True, 1, compare_blocks_cols))), _if_then_else(and_(ge(0, zeros_diff_cols), ge(ARG7, 4)), _if_then_else(le(compare_blocks_rows, ones_diff_cols), _if_then_else(False, zeros_diff_cols, compare_blocks_rows), _if_then_else(True, ones_diff_rows, 2)), _if_then_else(and_(False, False), _if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(True, 2, 1))), _if_then_else(le(_if_then_else(True, ARG6, zeros_diff_cols), _if_then_else(True, 4, ARG6)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_rows, 1), _if_then_else(False, 0, 4)), _if_then_else(ge(0, compare_blocks_rows), _if_then_else(True, ARG6, 1), _if_then_else(True, zeros_diff_cols, ones_diff_rows)))), _if_then_else(or_(or_(or_(False, True), ge(zeros_diff_cols, zeros_diff_rows)), or_(ge(4, ARG7), le(compare_blocks_rows, ones_diff_rows))), _if_then_else(ge(_if_then_else(True, ARG7, zeros_diff_cols), _if_then_else(False, 4, ARG7)), _if_then_else(ge(ones_diff_cols, zeros_diff_cols), _if_then_else(False, ARG6, 1), _if_then_else(False, ones_diff_cols, 3)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(True, compare_blocks_cols, ones_diff_rows))), _if_then_else(and_(or_(False, True), or_(True, True)), _if_then_else(or_(True, False), _if_then_else(False, 2, ones_diff_rows), _if_then_else(True, ARG6, ARG7)), _if_then_else(le(zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_cols)))))
le(_if_then_else(le(zeros_diff_rows, 3), _if_then_else(True, 3, 4), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), _if_then_else(True, ARG6, compare_blocks_rows), _if_then_else(False, ones_diff_cols, ones_diff_cols)))
VAL TREES:
add(mul(add(add(mul(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_rows))), add(add(mul(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)), add(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)))), add(mul(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols))), add(add(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_rows)), mul(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_cols))), mul(mul(mul(compare_blocks_cols, mul(mul(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_cols)))), add(ones_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_cols))))
mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows))), add(mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(add(compare_blocks_cols, mul(mul(ones_diff_rows, compare_blocks_rows), zeros_diff_cols)), mul(ones_diff_cols, zeros_diff_rows))))
add(mul(add(mul(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_rows)), add(mul(ones_diff_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols))), add(mul(add(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)), mul(mul(zeros_diff_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_cols)))), mul(mul(add(mul(compare_blocks_rows, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(mul(add(mul(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows))), add(zeros_diff_rows, compare_blocks_rows))), add(mul(mul(compare_blocks_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_cols)))))
mul(mul(add(add(mul(compare_blocks_cols, ones_diff_cols), zeros_diff_cols), compare_blocks_rows), add(ones_diff_cols, zeros_diff_rows)), add(add(zeros_diff_rows, compare_blocks_cols), add(add(compare_blocks_cols, ones_diff_cols), add(zeros_diff_cols, add(ones_diff_cols, compare_blocks_rows)))))
add(add(mul(mul(mul(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), add(mul(zeros_diff_rows, ones_diff_rows), mul(zeros_diff_rows, ones_diff_rows))), add(mul(add(ones_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)))), mul(add(add(add(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, zeros_diff_cols))), mul(add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)))))
COND TREES:
and_(le(_if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(or_(False, True), _if_then_else(False, 0, 1), 0)), le(_if_then_else(False, zeros_diff_cols, 3), _if_then_else(True, ones_diff_rows, ones_diff_cols)))
or_(and_(le(_if_then_else(False, _if_then_else(False, compare_blocks_cols, 4), ARG6), _if_then_else(True, ARG7, 0)), le(_if_then_else(False, ARG6, 2), _if_then_else(False, compare_blocks_cols, compare_blocks_cols))), le(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, ones_diff_cols), _if_then_else(False, ARG7, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, 2))))
and_(ge(_if_then_else(and_(False, True), _if_then_else(False, ARG7, ARG7), _if_then_else(True, 2, 2)), _if_then_else(and_(False, False), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, 1, 2))), ge(_if_then_else(and_(True, True), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)), _if_then_else(le(1, 3), _if_then_else(False, 1, 0), _if_then_else(False, ones_diff_rows, zeros_diff_rows))))
or_(ge(_if_then_else(or_(False, False), zeros_diff_rows, ones_diff_cols), _if_then_else(False, 3, zeros_diff_rows)), and_(and_(False, True), le(ARG7, compare_blocks_rows)))
or_(and_(or_(False, False), ge(compare_blocks_cols, 1)), and_(or_(le(2, zeros_diff_rows), False), or_(True, True)))
VAL TREES:
mul(add(ones_diff_rows, mul(zeros_diff_cols, zeros_diff_cols)), add(add(mul(zeros_diff_rows, compare_blocks_cols), ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)))
mul(add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, mul(mul(ones_diff_rows, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)))))
mul(mul(add(ones_diff_cols, ones_diff_cols), add(add(add(compare_blocks_cols, zeros_diff_rows), ones_diff_cols), zeros_diff_cols)), add(add(zeros_diff_cols, mul(compare_blocks_rows, add(add(zeros_diff_rows, ones_diff_rows), ones_diff_rows))), mul(zeros_diff_rows, compare_blocks_rows)))
mul(add(mul(zeros_diff_rows, ones_diff_rows), mul(compare_blocks_rows, compare_blocks_cols)), add(mul(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, zeros_diff_rows)))
mul(mul(mul(add(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), ones_diff_cols), add(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_rows)), mul(compare_blocks_cols, mul(zeros_diff_rows, compare_blocks_cols))))
mul(add(add(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), ones_diff_cols), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols))))
COND TREES:
or_(ge(_if_then_else(or_(True, False), ARG7, _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(False, ARG6, ARG7)), and_(ge(zeros_diff_cols, 1), or_(le(_if_then_else(or_(True, True), _if_then_else(False, compare_blocks_rows, 2), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(True, compare_blocks_rows, 2), compare_blocks_rows)), True)))
or_(ge(_if_then_else(ge(_if_then_else(le(1, ARG6), ARG7, _if_then_else(True, ones_diff_cols, ones_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, compare_blocks_rows, ones_diff_cols))), 1, 4), _if_then_else(True, zeros_diff_rows, 3)), or_(or_(True, True), ge(zeros_diff_cols, ARG6)))
and_(and_(and_(False, False), le(compare_blocks_cols, _if_then_else(True, _if_then_else(True, _if_then_else(ge(_if_then_else(False, 4, ones_diff_rows), _if_then_else(True, compare_blocks_cols, ARG7)), _if_then_else(le(zeros_diff_rows, 3), _if_then_else(False, ARG6, compare_blocks_rows), _if_then_else(False, 4, ARG6)), _if_then_else(le(2, 4), _if_then_else(True, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, ones_diff_rows))), _if_then_else(False, 4, 1)), 4))), ge(_if_then_else(or_(False, True), _if_then_else(False, 4, 4), 2), _if_then_else(True, zeros_diff_rows, 3)))
ge(_if_then_else(le(_if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(le(zeros_diff_rows, 4), ones_diff_cols, _if_then_else(False, ARG7, compare_blocks_rows)), _if_then_else(and_(le(_if_then_else(True, ARG6, ARG7), _if_then_else(True, 1, compare_blocks_cols)), or_(le(zeros_diff_rows, ARG6), or_(True, False))), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, ARG7, ARG7))), _if_then_else(and_(le(ARG6, compare_blocks_cols), ge(compare_blocks_rows, 2)), _if_then_else(True, _if_then_else(True, ones_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 0)), _if_then_else(or_(False, False), _if_then_else(True, 0, ARG7), _if_then_else(False, 2, ones_diff_cols))))
and_(le(_if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, 4, compare_blocks_rows)), and_(le(compare_blocks_rows, _if_then_else(False, compare_blocks_rows, ones_diff_cols)), and_(True, True)))
VAL TREES:
add(mul(mul(add(mul(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_cols)), compare_blocks_cols), mul(mul(add(ones_diff_rows, compare_blocks_cols), ones_diff_rows), add(ones_diff_cols, mul(ones_diff_rows, zeros_diff_cols)))), mul(mul(ones_diff_rows, ones_diff_cols), add(mul(ones_diff_cols, ones_diff_rows), zeros_diff_cols)))
mul(mul(add(ones_diff_rows, mul(zeros_diff_cols, mul(zeros_diff_rows, zeros_diff_rows))), mul(add(zeros_diff_rows, compare_blocks_cols), compare_blocks_cols)), add(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_cols)))
mul(mul(add(mul(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols))), mul(mul(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)))), mul(add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(mul(zeros_diff_cols, zeros_diff_rows), add(add(zeros_diff_cols, mul(compare_blocks_rows, add(add(ones_diff_rows, ones_diff_rows), ones_diff_rows))), mul(zeros_diff_rows, compare_blocks_rows)))), add(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, ones_diff_rows)))))
add(add(add(ones_diff_rows, mul(mul(zeros_diff_rows, ones_diff_cols), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols)))), mul(mul(add(zeros_diff_cols, compare_blocks_cols), zeros_diff_cols), compare_blocks_rows)), mul(add(zeros_diff_cols, add(ones_diff_cols, zeros_diff_rows)), mul(ones_diff_rows, compare_blocks_rows)))
add(mul(add(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows))), mul(add(mul(zeros_diff_cols, compare_blocks_cols), compare_blocks_cols), mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), mul(add(mul(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), mul(add(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_cols, compare_blocks_cols))), mul(add(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(mul(mul(compare_blocks_rows, add(compare_blocks_cols, compare_blocks_rows)), add(zeros_diff_rows, ones_diff_rows)), add(add(ones_diff_rows, compare_blocks_rows), mul(mul(ones_diff_rows, zeros_diff_rows), compare_blocks_cols)))
COND TREES:
or_(ge(_if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(False, _if_then_else(False, _if_then_else(ge(_if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(True, 2, zeros_diff_cols), _if_then_else(False, 1, zeros_diff_rows)), _if_then_else(ge(2, zeros_diff_cols), _if_then_else(True, zeros_diff_rows, 1), _if_then_else(False, zeros_diff_cols, ARG7))), 0), compare_blocks_rows)), and_(ge(ones_diff_cols, ARG7), or_(or_(True, False), True)))
and_(ge(_if_then_else(True, 2, zeros_diff_rows), _if_then_else(True, _if_then_else(True, 1, zeros_diff_rows), ones_diff_rows)), ge(_if_then_else(ge(4, zeros_diff_cols), ARG7, _if_then_else(True, zeros_diff_cols, 4)), _if_then_else(True, 1, _if_then_else(True, zeros_diff_rows, 0))))
and_(or_(and_(ge(_if_then_else(False, 3, ARG7), 0), False), or_(False, False)), le(_if_then_else(ge(zeros_diff_rows, ones_diff_cols), ones_diff_rows, 2), _if_then_else(False, ARG6, _if_then_else(False, _if_then_else(False, 4, _if_then_else(ge(_if_then_else(True, 3, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), _if_then_else(ge(ARG6, 2), _if_then_else(False, ARG6, 0), _if_then_else(False, 3, zeros_diff_cols)), _if_then_else(le(zeros_diff_rows, ones_diff_cols), _if_then_else(True, 4, 2), _if_then_else(False, ones_diff_cols, 3)))), _if_then_else(False, ones_diff_rows, 4)))))
and_(or_(and_(le(compare_blocks_rows, compare_blocks_rows), and_(True, True)), or_(True, True)), ge(_if_then_else(True, compare_blocks_rows, ARG6), _if_then_else(le(3, ones_diff_rows), zeros_diff_cols, _if_then_else(True, 2, 2))))
and_(ge(_if_then_else(False, 3, ARG7), _if_then_else(False, 0, 0)), and_(and_(False, True), or_(True, False)))
VAL TREES:
add(ones_diff_cols, mul(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows)))
mul(add(add(compare_blocks_cols, ones_diff_cols), mul(mul(mul(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_rows)), zeros_diff_cols)), zeros_diff_cols)
mul(mul(mul(add(ones_diff_cols, add(mul(ones_diff_rows, compare_blocks_cols), compare_blocks_rows)), add(zeros_diff_cols, ones_diff_rows)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, ones_diff_cols))), add(mul(add(ones_diff_rows, zeros_diff_rows), add(zeros_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), add(ones_diff_cols, compare_blocks_cols))))
mul(add(add(ones_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows)), mul(mul(mul(ones_diff_rows, compare_blocks_rows), zeros_diff_cols), mul(ones_diff_rows, ones_diff_cols)))
add(add(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_rows)), add(zeros_diff_cols, add(zeros_diff_cols, compare_blocks_cols)))
mul(add(zeros_diff_rows, add(ones_diff_rows, ones_diff_cols)), add(mul(add(zeros_diff_cols, compare_blocks_cols), mul(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_rows, add(add(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_rows)), mul(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_rows)))))), compare_blocks_rows))
COND TREES:
or_(le(_if_then_else(or_(and_(True, True), le(1, 1)), _if_then_else(ge(4, 1), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, ARG7)), _if_then_else(or_(False, True), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, compare_blocks_cols, compare_blocks_rows))), _if_then_else(ge(_if_then_else(True, 3, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(ge(3, ARG6), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, 0, compare_blocks_rows), _if_then_else(True, 0, ARG7)))), ge(_if_then_else(le(_if_then_else(True, ARG7, 4), _if_then_else(False, 2, ARG6)), _if_then_else(ge(3, ARG7), _if_then_else(False, 0, 0), _if_then_else(True, 3, 1)), _if_then_else(or_(False, True), _if_then_else(True, 4, ARG7), _if_then_else(True, 2, ones_diff_cols))), _if_then_else(and_(and_(True, False), and_(True, False)), _if_then_else(le(compare_blocks_rows, ARG6), _if_then_else(True, compare_blocks_cols, ARG7), _if_then_else(False, ARG7, zeros_diff_cols)), _if_then_else(and_(ge(3, ARG6), False), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, compare_blocks_cols, 3)))))
le(_if_then_else(or_(True, True), _if_then_else(False, zeros_diff_rows, ARG6), _if_then_else(False, compare_blocks_rows, compare_blocks_rows)), _if_then_else(and_(True, ge(zeros_diff_rows, ones_diff_cols)), _if_then_else(False, 1, compare_blocks_rows), _if_then_else(True, ARG7, compare_blocks_cols)))
or_(and_(le(1, 1), ge(compare_blocks_rows, _if_then_else(False, zeros_diff_cols, compare_blocks_rows))), or_(le(_if_then_else(False, zeros_diff_cols, compare_blocks_rows), zeros_diff_cols), or_(and_(False, True), True)))
or_(le(_if_then_else(True, ARG6, zeros_diff_cols), _if_then_else(True, 4, ARG6)), ge(_if_then_else(False, zeros_diff_cols, 4), _if_then_else(False, ARG6, 0)))
or_(and_(ge(ARG6, compare_blocks_rows), or_(False, True)), and_(or_(le(zeros_diff_rows, 3), True), le(zeros_diff_cols, compare_blocks_rows)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_rows), mul(ones_diff_rows, ones_diff_cols)), mul(mul(mul(ones_diff_cols, ones_diff_rows), ones_diff_rows), mul(compare_blocks_cols, add(add(ones_diff_rows, zeros_diff_cols), zeros_diff_cols))))
mul(mul(mul(mul(add(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_rows, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_cols), mul(mul(add(mul(compare_blocks_cols, add(compare_blocks_cols, ones_diff_cols)), mul(ones_diff_cols, add(add(compare_blocks_cols, compare_blocks_cols), compare_blocks_cols))), ones_diff_rows), ones_diff_rows)))), mul(mul(add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_cols))), mul(mul(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_rows)))))
mul(mul(add(mul(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols))), mul(mul(mul(add(add(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(ones_diff_cols, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_cols))), add(compare_blocks_rows, compare_blocks_cols)), add(add(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols))))
add(mul(add(zeros_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, mul(compare_blocks_cols, zeros_diff_cols))), add(mul(compare_blocks_rows, compare_blocks_rows), add(add(add(add(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, ones_diff_cols)), mul(add(ones_diff_cols, zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols))), compare_blocks_cols)))
mul(add(mul(ones_diff_rows, add(mul(zeros_diff_cols, zeros_diff_cols), ones_diff_rows)), mul(compare_blocks_cols, ones_diff_rows)), add(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_cols)))
mul(mul(mul(add(ones_diff_rows, zeros_diff_rows), compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)), ones_diff_cols)
COND TREES:
or_(ge(_if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(False, _if_then_else(False, ones_diff_cols, 0), compare_blocks_rows)), and_(ge(ones_diff_cols, ARG7), or_(ge(_if_then_else(or_(ge(_if_then_else(False, ARG7, ones_diff_rows), _if_then_else(True, 3, zeros_diff_rows)), and_(and_(False, True), ge(compare_blocks_rows, 1))), _if_then_else(ge(_if_then_else(True, 3, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, ARG6)), _if_then_else(le(compare_blocks_rows, 0), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(False, ARG7, ARG7)), _if_then_else(ge(ones_diff_cols, ones_diff_cols), _if_then_else(True, 2, 2), _if_then_else(True, 3, ones_diff_rows))), _if_then_else(and_(ge(4, ones_diff_rows), le(2, ARG6)), _if_then_else(ge(1, ARG6), _if_then_else(False, 1, 3), _if_then_else(True, zeros_diff_rows, ARG7)), _if_then_else(and_(False, False), _if_then_else(False, 1, 4), _if_then_else(and_(or_(and_(False, False), or_(True, True)), le(_if_then_else(False, 1, ARG6), _if_then_else(True, compare_blocks_cols, 2))), _if_then_else(and_(ge(3, ARG7), and_(True, False)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, ones_diff_cols), _if_then_else(False, compare_blocks_cols, 2)), _if_then_else(ge(zeros_diff_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(True, 0, ones_diff_cols))), _if_then_else(and_(and_(False, True), ge(ones_diff_rows, compare_blocks_cols)), _if_then_else(ge(0, 0), _if_then_else(False, ARG7, ones_diff_cols), _if_then_else(True, ones_diff_cols, ARG6)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_cols, 3), _if_then_else(True, 4, ones_diff_rows))))))), _if_then_else(ge(_if_then_else(le(compare_blocks_cols, ones_diff_rows), _if_then_else(False, 4, _if_then_else(or_(False, False), _if_then_else(True, 0, compare_blocks_rows), _if_then_else(True, 0, ARG7))), _if_then_else(True, zeros_diff_cols, ARG6)), _if_then_else(le(ones_diff_cols, 2), _if_then_else(True, zeros_diff_rows, 1), _if_then_else(False, 1, 1))), _if_then_else(and_(ge(ARG6, zeros_diff_cols), or_(True, False)), _if_then_else(or_(True, False), _if_then_else(True, 3, 4), _if_then_else(True, compare_blocks_rows, 3)), _if_then_else(and_(False, True), _if_then_else(True, 3, 1), _if_then_else(True, ARG7, 1))), _if_then_else(or_(le(3, ones_diff_cols), ge(compare_blocks_cols, ARG6)), _if_then_else(le(4, 3), _if_then_else(False, ARG6, zeros_diff_rows), _if_then_else(False, 1, ones_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, ARG6))))), True)))
and_(ge(_if_then_else(True, 2, zeros_diff_rows), _if_then_else(True, _if_then_else(True, 1, zeros_diff_rows), ones_diff_rows)), ge(_if_then_else(ge(4, zeros_diff_cols), ARG7, _if_then_else(True, zeros_diff_cols, 4)), _if_then_else(or_(le(0, 4), or_(False, True)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(ge(_if_then_else(or_(False, False), ones_diff_rows, zeros_diff_cols), _if_then_else(or_(False, True), compare_blocks_rows, 2)), _if_then_else(and_(True, True), _if_then_else(False, 1, _if_then_else(False, 0, 1)), _if_then_else(and_(False, True), _if_then_else(True, 1, _if_then_else(or_(True, True), _if_then_else(or_(and_(False, True), le(4, 4)), _if_then_else(or_(True, True), _if_then_else(le(zeros_diff_cols, ARG6), compare_blocks_cols, 2), _if_then_else(True, _if_then_else(True, 4, _if_then_else(True, 0, ones_diff_rows)), ones_diff_cols)), _if_then_else(True, _if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(le(ARG7, ones_diff_cols), ones_diff_cols, _if_then_else(False, 1, ARG7)))), _if_then_else(False, compare_blocks_rows, compare_blocks_rows))), compare_blocks_rows)), _if_then_else(le(zeros_diff_cols, _if_then_else(True, 4, zeros_diff_cols)), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(False, _if_then_else(False, compare_blocks_rows, ARG7), 1)))), _if_then_else(le(compare_blocks_rows, 1), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_cols)))))
and_(or_(and_(ge(_if_then_else(False, 3, _if_then_else(and_(le(_if_then_else(True, compare_blocks_rows, 1), zeros_diff_rows), or_(or_(True, False), ge(compare_blocks_cols, 2))), _if_then_else(ge(0, compare_blocks_cols), _if_then_else(le(_if_then_else(ge(_if_then_else(True, 3, zeros_diff_cols), _if_then_else(False, ARG7, 1)), _if_then_else(ge(0, compare_blocks_cols), _if_then_else(False, 0, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, ones_diff_rows)), _if_then_else(ge(zeros_diff_cols, 0), _if_then_else(False, ones_diff_cols, 2), _if_then_else(True, ARG6, ARG6))), _if_then_else(le(_if_then_else(False, 1, 1), _if_then_else(True, 1, ARG6)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, zeros_diff_cols), _if_then_else(False, ARG7, ARG6)), _if_then_else(and_(False, False), _if_then_else(True, 2, 0), _if_then_else(True, 3, 3)))), _if_then_else(or_(False, True), ARG6, 2), 2), _if_then_else(False, ARG7, 0)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(True, compare_blocks_rows, ARG6)))), 0), False), or_(False, False)), le(_if_then_else(ge(zeros_diff_rows, ones_diff_cols), ones_diff_rows, 2), _if_then_else(False, ARG6, _if_then_else(False, _if_then_else(False, _if_then_else(True, compare_blocks_cols, ARG6), zeros_diff_rows), _if_then_else(False, ones_diff_rows, 4)))))
and_(or_(and_(le(compare_blocks_rows, compare_blocks_rows), and_(True, True)), or_(True, True)), ge(_if_then_else(True, compare_blocks_rows, ARG6), _if_then_else(le(3, ones_diff_rows), zeros_diff_cols, _if_then_else(True, 2, 2))))
and_(or_(or_(ge(_if_then_else(and_(True, False), _if_then_else(True, ARG7, ARG7), _if_then_else(False, 2, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(True, 3, 4), _if_then_else(False, zeros_diff_rows, zeros_diff_cols))), le(_if_then_else(or_(False, False), _if_then_else(False, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, ones_diff_rows, 2)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_cols, 0), _if_then_else(True, zeros_diff_rows, ARG6)))), ge(_if_then_else(le(_if_then_else(True, 2, 2), _if_then_else(False, compare_blocks_rows, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(and_(or_(le(_if_then_else(True, 1, zeros_diff_rows), 2), False), or_(True, True)), _if_then_else(and_(le(4, zeros_diff_cols), or_(True, False)), _if_then_else(le(compare_blocks_rows, 2), compare_blocks_cols, _if_then_else(True, _if_then_else(True, ARG6, 0), zeros_diff_rows)), _if_then_else(and_(False, and_(False, True)), compare_blocks_rows, compare_blocks_cols)), _if_then_else(and_(False, and_(False, or_(False, False))), _if_then_else(and_(True, True), ARG6, 3), _if_then_else(True, ARG6, ones_diff_rows)))), _if_then_else(and_(True, False), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(True, zeros_diff_rows, ARG7))), _if_then_else(or_(le(compare_blocks_rows, ARG7), or_(True, False)), _if_then_else(ge(ones_diff_cols, 3), _if_then_else(False, 3, 3), _if_then_else(False, ones_diff_cols, 3)), _if_then_else(or_(False, False), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(False, ones_diff_rows, ARG6))))), and_(and_(False, True), or_(True, False)))
VAL TREES:
add(add(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_cols)))
mul(add(add(compare_blocks_cols, add(compare_blocks_cols, zeros_diff_cols)), zeros_diff_rows), add(add(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_cols)))
mul(mul(mul(add(ones_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, ones_diff_cols))), add(mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), add(ones_diff_cols, compare_blocks_cols))))
mul(add(add(ones_diff_rows, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(mul(add(ones_diff_rows, ones_diff_cols), compare_blocks_rows), zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows)))
add(add(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_rows)), add(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, compare_blocks_cols)))
mul(add(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), add(mul(add(zeros_diff_cols, compare_blocks_cols), ones_diff_cols), add(compare_blocks_cols, add(ones_diff_rows, ones_diff_cols))))
COND TREES:
or_(ge(_if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(False, _if_then_else(False, ones_diff_cols, 0), compare_blocks_rows)), and_(ge(ones_diff_cols, ARG7), or_(ge(_if_then_else(or_(ge(_if_then_else(False, ARG7, ones_diff_rows), _if_then_else(True, 3, zeros_diff_rows)), and_(and_(False, True), ge(compare_blocks_rows, 1))), _if_then_else(ge(_if_then_else(True, 3, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, ARG6)), _if_then_else(le(compare_blocks_rows, 0), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(False, ARG7, ARG7)), _if_then_else(ge(ones_diff_cols, ones_diff_cols), _if_then_else(True, 2, 2), _if_then_else(True, 3, ones_diff_rows))), _if_then_else(and_(ge(4, ones_diff_rows), le(2, ARG6)), _if_then_else(ge(1, ARG6), _if_then_else(False, 1, 3), _if_then_else(True, zeros_diff_rows, ARG7)), _if_then_else(and_(False, False), _if_then_else(False, 1, 4), _if_then_else(True, 2, ones_diff_rows)))), _if_then_else(ge(_if_then_else(le(compare_blocks_cols, ones_diff_rows), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, ARG6)), _if_then_else(le(ones_diff_cols, 2), _if_then_else(True, zeros_diff_rows, 1), _if_then_else(False, 1, 1))), _if_then_else(and_(ge(ARG6, zeros_diff_cols), or_(True, False)), _if_then_else(or_(True, False), _if_then_else(True, 3, 4), _if_then_else(True, compare_blocks_rows, 3)), _if_then_else(and_(False, True), _if_then_else(True, 3, 1), _if_then_else(True, ARG7, 1))), _if_then_else(or_(le(3, ones_diff_cols), ge(compare_blocks_cols, ARG6)), _if_then_else(le(4, 3), _if_then_else(False, ARG6, zeros_diff_rows), _if_then_else(False, 1, ones_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, ARG6, ARG7), _if_then_else(True, compare_blocks_rows, ARG6))))), True)))
and_(ge(_if_then_else(True, 2, zeros_diff_rows), _if_then_else(True, _if_then_else(True, 1, zeros_diff_rows), ones_diff_rows)), ge(_if_then_else(ge(4, zeros_diff_cols), ARG7, _if_then_else(True, zeros_diff_cols, 4)), _if_then_else(or_(le(0, 4), or_(False, True)), _if_then_else(and_(or_(or_(True, True), ge(zeros_diff_cols, ARG6)), False), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(le(compare_blocks_rows, 1), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_cols)))))
and_(or_(and_(ge(_if_then_else(False, 3, _if_then_else(and_(le(_if_then_else(True, compare_blocks_rows, 1), zeros_diff_rows), or_(or_(True, False), ge(compare_blocks_cols, 2))), _if_then_else(ge(0, compare_blocks_cols), _if_then_else(False, _if_then_else(or_(False, True), ARG6, 2), 2), 4), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(True, compare_blocks_rows, ARG6)))), 0), False), or_(False, False)), le(_if_then_else(ge(zeros_diff_rows, ones_diff_cols), ones_diff_rows, 2), _if_then_else(False, ARG6, _if_then_else(False, _if_then_else(False, 4, zeros_diff_rows), _if_then_else(False, ones_diff_rows, 4)))))
and_(or_(and_(le(compare_blocks_rows, compare_blocks_rows), and_(True, True)), or_(True, True)), ge(_if_then_else(True, compare_blocks_rows, ARG6), _if_then_else(le(3, ones_diff_rows), _if_then_else(and_(le(ARG6, compare_blocks_cols), ge(compare_blocks_rows, 2)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 0)), _if_then_else(or_(False, False), _if_then_else(True, 0, ARG7), _if_then_else(False, 2, ones_diff_cols))), _if_then_else(True, 2, 2))))
and_(or_(or_(ge(_if_then_else(and_(True, False), _if_then_else(True, ARG7, ARG7), _if_then_else(False, 2, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(True, 3, 4), _if_then_else(False, zeros_diff_rows, zeros_diff_cols))), le(_if_then_else(or_(False, False), _if_then_else(False, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, ones_diff_rows, 2)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_cols, 0), _if_then_else(True, zeros_diff_rows, ARG6)))), ge(_if_then_else(le(_if_then_else(True, 2, 2), _if_then_else(False, compare_blocks_rows, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(True, 3, ARG7)), _if_then_else(and_(True, False), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(True, zeros_diff_rows, ARG7))), _if_then_else(or_(le(compare_blocks_rows, _if_then_else(False, 0, zeros_diff_rows)), or_(True, False)), _if_then_else(ge(ones_diff_cols, 3), _if_then_else(False, 3, 3), _if_then_else(False, ones_diff_cols, 3)), _if_then_else(or_(False, False), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(False, ones_diff_rows, ARG6))))), and_(and_(False, True), or_(True, False)))
VAL TREES:
add(add(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_cols)), mul(mul(mul(mul(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_rows)), add(mul(compare_blocks_rows, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_rows))), add(add(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_rows)), add(add(compare_blocks_cols, ones_diff_cols), add(zeros_diff_rows, ones_diff_cols)))), add(zeros_diff_cols, compare_blocks_cols)))
mul(add(add(compare_blocks_cols, add(compare_blocks_cols, zeros_diff_cols)), mul(ones_diff_rows, zeros_diff_cols)), add(add(zeros_diff_cols, compare_blocks_cols), add(mul(ones_diff_rows, zeros_diff_cols), ones_diff_cols)))
mul(mul(mul(add(ones_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, add(add(mul(compare_blocks_rows, compare_blocks_rows), add(ones_diff_rows, ones_diff_cols)), mul(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)))))), add(mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), add(ones_diff_cols, compare_blocks_cols))))
mul(add(add(ones_diff_rows, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(mul(add(mul(add(zeros_diff_cols, zeros_diff_rows), mul(compare_blocks_rows, mul(compare_blocks_rows, compare_blocks_rows))), add(add(mul(compare_blocks_rows, zeros_diff_rows), zeros_diff_cols), mul(compare_blocks_cols, ones_diff_cols))), compare_blocks_rows), zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows)))
add(add(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_rows)), add(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, compare_blocks_cols)))
mul(add(add(zeros_diff_rows, ones_diff_cols), zeros_diff_rows), add(mul(add(zeros_diff_cols, compare_blocks_cols), ones_diff_cols), add(compare_blocks_cols, zeros_diff_rows)))
COND TREES:
and_(or_(and_(True, True), le(ARG6, 2)), False)
le(_if_then_else(ge(_if_then_else(or_(False, False), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(False, 0, zeros_diff_rows)), _if_then_else(le(1, compare_blocks_cols), _if_then_else(False, 1, compare_blocks_rows), _if_then_else(True, ARG7, compare_blocks_cols))), _if_then_else(or_(or_(True, True), and_(True, False)), _if_then_else(and_(True, False), _if_then_else(False, 3, 0), _if_then_else(True, 2, compare_blocks_cols)), _if_then_else(or_(True, False), _if_then_else(False, 4, 4), _if_then_else(False, 1, 1))), _if_then_else(le(_if_then_else(True, ARG6, 1), _if_then_else(True, compare_blocks_cols, 2)), _if_then_else(True, _if_then_else(False, ARG6, 4), _if_then_else(False, compare_blocks_rows, ones_diff_rows)), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(True, ARG6, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, ARG6)))), _if_then_else(or_(le(_if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(True, ARG6, 2)), and_(and_(False, True), or_(True, False))), _if_then_else(and_(or_(True, False), le(compare_blocks_rows, compare_blocks_rows)), _if_then_else(ge(zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(True, ones_diff_rows, 4)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, ARG7), _if_then_else(False, 0, ones_diff_rows))), _if_then_else(ge(_if_then_else(False, ARG6, zeros_diff_cols), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(and_(False, False), _if_then_else(True, ones_diff_cols, ARG6), _if_then_else(False, 2, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_cols), _if_then_else(False, 1, 2)))))
and_(or_(or_(False, ge(_if_then_else(le(2, zeros_diff_rows), _if_then_else(True, ones_diff_rows, 3), _if_then_else(True, 0, ARG7)), _if_then_else(le(0, compare_blocks_rows), _if_then_else(True, 4, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)))), ge(1, compare_blocks_rows)), True)
le(_if_then_else(ge(_if_then_else(le(compare_blocks_rows, 4), _if_then_else(False, 1, ones_diff_rows), _if_then_else(False, ones_diff_rows, 2)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(True, 1, compare_blocks_cols))), _if_then_else(and_(ge(0, zeros_diff_cols), ge(ARG7, 4)), _if_then_else(le(compare_blocks_rows, ones_diff_cols), _if_then_else(False, zeros_diff_cols, compare_blocks_rows), _if_then_else(True, ones_diff_rows, 2)), _if_then_else(and_(False, False), _if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(True, 2, 1))), _if_then_else(le(_if_then_else(True, ARG6, zeros_diff_cols), _if_then_else(True, 4, ARG6)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_rows, 1), _if_then_else(False, _if_then_else(True, ARG7, zeros_diff_rows), 4)), _if_then_else(ge(0, compare_blocks_rows), _if_then_else(True, ARG6, 1), _if_then_else(or_(or_(False, True), le(3, ARG6)), zeros_diff_cols, ones_diff_rows)))), _if_then_else(or_(or_(or_(False, True), ge(zeros_diff_cols, zeros_diff_rows)), or_(ge(4, ARG7), le(compare_blocks_rows, ones_diff_rows))), _if_then_else(ge(_if_then_else(True, ARG7, zeros_diff_cols), _if_then_else(False, 4, ARG7)), _if_then_else(ge(ones_diff_cols, zeros_diff_cols), _if_then_else(False, ARG6, 1), _if_then_else(False, ones_diff_cols, 3)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(True, compare_blocks_cols, ones_diff_rows))), _if_then_else(and_(or_(False, True), or_(ge(_if_then_else(ge(zeros_diff_rows, ones_diff_cols), _if_then_else(True, 1, 1), _if_then_else(True, ARG7, ones_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_cols, 4), _if_then_else(False, zeros_diff_rows, ones_diff_rows))), True)), _if_then_else(or_(True, False), _if_then_else(False, 2, ones_diff_rows), _if_then_else(True, ARG6, ARG7)), _if_then_else(le(zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_cols)))))
le(ARG6, _if_then_else(ge(ones_diff_cols, compare_blocks_cols), _if_then_else(True, ARG6, 2), _if_then_else(False, ones_diff_cols, ones_diff_cols)))
VAL TREES:
add(mul(add(add(mul(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_rows))), add(add(mul(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)), add(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)))), add(mul(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols))), add(add(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_rows)), mul(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_cols))), mul(mul(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(ones_diff_rows, zeros_diff_cols))))
mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows))), add(mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_rows))))
add(mul(add(mul(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_rows)), add(mul(ones_diff_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols))), add(mul(add(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)), mul(mul(zeros_diff_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_cols)))), mul(mul(add(mul(compare_blocks_rows, ones_diff_cols), add(ones_diff_cols, ones_diff_rows)), mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows))), add(mul(mul(compare_blocks_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_cols)))))
mul(mul(mul(mul(add(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), ones_diff_cols), add(ones_diff_cols, zeros_diff_rows)), add(add(zeros_diff_rows, compare_blocks_cols), add(add(compare_blocks_cols, add(zeros_diff_cols, compare_blocks_rows)), add(zeros_diff_cols, add(ones_diff_cols, compare_blocks_rows)))))
add(add(mul(mul(mul(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), add(mul(zeros_diff_rows, ones_diff_rows), mul(zeros_diff_rows, ones_diff_rows))), add(mul(add(ones_diff_cols, mul(ones_diff_rows, ones_diff_rows)), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)))), mul(add(add(add(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, zeros_diff_cols))), mul(add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)))))
COND TREES:
and_(or_(and_(True, True), le(ARG6, 2)), or_(or_(False, ge(zeros_diff_cols, 1)), and_(True, False)))
le(_if_then_else(ge(_if_then_else(or_(False, False), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(False, 0, zeros_diff_rows)), _if_then_else(le(1, compare_blocks_cols), _if_then_else(False, 1, compare_blocks_rows), _if_then_else(True, ARG7, compare_blocks_cols))), _if_then_else(or_(or_(True, True), and_(True, False)), _if_then_else(and_(True, False), _if_then_else(False, 3, 0), _if_then_else(True, 2, compare_blocks_cols)), _if_then_else(or_(True, False), _if_then_else(False, ARG7, 4), _if_then_else(False, 1, 1))), _if_then_else(le(_if_then_else(True, ARG6, 1), _if_then_else(True, compare_blocks_cols, 2)), _if_then_else(ge(1, ones_diff_cols), _if_then_else(False, ARG6, 4), _if_then_else(False, compare_blocks_rows, ones_diff_rows)), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(True, ARG6, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, ARG6)))), _if_then_else(or_(le(_if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(True, ARG6, 2)), and_(and_(False, True), or_(True, False))), _if_then_else(and_(or_(True, False), le(compare_blocks_rows, compare_blocks_rows)), _if_then_else(ge(zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(True, ones_diff_rows, 4)), _if_then_else(and_(True, ge(compare_blocks_rows, 3)), _if_then_else(False, compare_blocks_rows, ARG7), _if_then_else(False, 0, ones_diff_rows))), _if_then_else(ge(_if_then_else(False, ARG6, zeros_diff_cols), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(and_(False, False), _if_then_else(True, ones_diff_cols, ARG6), _if_then_else(False, 2, zeros_diff_cols)), _if_then_else(le(_if_then_else(le(4, _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(or_(False, False), zeros_diff_cols, 0), _if_then_else(le(0, 4), ARG7, 3)), _if_then_else(or_(False, True), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_cols, 3), ones_diff_cols), _if_then_else(and_(False, False), ARG7, 1))), _if_then_else(True, ones_diff_rows, compare_blocks_cols), _if_then_else(False, 1, 2)))))
and_(or_(or_(False, True), ge(1, ones_diff_cols)), le(_if_then_else(True, zeros_diff_cols, _if_then_else(ge(_if_then_else(True, zeros_diff_cols, ARG6), _if_then_else(False, ARG6, 0)), _if_then_else(or_(True, le(ARG7, ones_diff_cols)), _if_then_else(True, ARG6, ones_diff_rows), _if_then_else(False, 3, 2)), _if_then_else(le(zeros_diff_rows, _if_then_else(True, compare_blocks_cols, compare_blocks_cols)), _if_then_else(True, ones_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3)))), _if_then_else(True, zeros_diff_rows, 3)))
le(_if_then_else(ge(_if_then_else(le(compare_blocks_rows, 4), _if_then_else(False, 1, ones_diff_rows), _if_then_else(False, ones_diff_rows, 2)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(True, 1, compare_blocks_cols))), _if_then_else(and_(ge(0, zeros_diff_cols), ge(ARG7, 4)), _if_then_else(le(compare_blocks_rows, ones_diff_cols), _if_then_else(False, zeros_diff_cols, compare_blocks_rows), _if_then_else(True, ones_diff_cols, 2)), _if_then_else(and_(False, False), _if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(True, 2, 1))), _if_then_else(le(_if_then_else(True, _if_then_else(and_(le(4, 3), le(compare_blocks_cols, 3)), _if_then_else(and_(True, False), _if_then_else(True, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, ones_diff_cols, zeros_diff_rows)), _if_then_else(le(ones_diff_rows, ARG6), _if_then_else(True, 2, ones_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows))), zeros_diff_cols), _if_then_else(True, 4, ARG6)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_rows, 1), _if_then_else(False, 0, 4)), _if_then_else(ge(0, compare_blocks_rows), _if_then_else(True, ARG6, 1), _if_then_else(True, zeros_diff_cols, ones_diff_rows)))), _if_then_else(or_(or_(or_(False, True), ge(zeros_diff_cols, zeros_diff_rows)), or_(ge(4, ARG7), le(compare_blocks_rows, ones_diff_rows))), _if_then_else(ge(_if_then_else(True, ARG7, zeros_diff_cols), _if_then_else(False, 4, ARG7)), _if_then_else(ge(ones_diff_cols, zeros_diff_cols), _if_then_else(False, ARG6, 1), _if_then_else(False, ones_diff_cols, 3)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(True, compare_blocks_cols, ones_diff_rows))), _if_then_else(and_(or_(False, True), or_(True, True)), _if_then_else(or_(True, False), _if_then_else(False, 2, ones_diff_rows), _if_then_else(True, ARG6, ARG7)), _if_then_else(le(zeros_diff_rows, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_cols)))))
le(_if_then_else(le(zeros_diff_rows, 3), _if_then_else(True, 3, 3), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), _if_then_else(True, ARG6, 2), _if_then_else(False, ones_diff_cols, ones_diff_cols)))
VAL TREES:
add(mul(add(add(mul(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_cols)), mul(zeros_diff_rows, add(compare_blocks_cols, compare_blocks_rows))), add(add(mul(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)), add(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)))), add(mul(add(add(add(add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(mul(compare_blocks_rows, compare_blocks_cols), mul(ones_diff_rows, ones_diff_cols))), mul(mul(add(compare_blocks_cols, compare_blocks_cols), mul(zeros_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_rows)))), mul(add(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_cols))), mul(add(add(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols)), add(mul(compare_blocks_rows, compare_blocks_cols), add(zeros_diff_cols, ones_diff_cols))))), add(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols))), add(add(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_rows)), mul(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_cols))), mul(mul(mul(compare_blocks_cols, compare_blocks_cols), add(zeros_diff_cols, mul(ones_diff_cols, mul(mul(compare_blocks_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_cols))))), mul(mul(ones_diff_rows, mul(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_rows))), add(zeros_diff_rows, zeros_diff_cols))))
mul(add(add(add(ones_diff_rows, zeros_diff_cols), mul(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows))), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows))), add(ones_diff_cols, ones_diff_cols))
add(mul(add(mul(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_rows)), add(mul(ones_diff_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols))), add(mul(add(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)), mul(mul(zeros_diff_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_cols)))), ones_diff_rows)
mul(mul(add(add(mul(compare_blocks_cols, mul(zeros_diff_rows, ones_diff_rows)), add(add(ones_diff_cols, mul(ones_diff_cols, ones_diff_cols)), mul(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_rows)))), compare_blocks_rows), add(ones_diff_cols, zeros_diff_rows)), add(add(zeros_diff_rows, compare_blocks_cols), add(add(compare_blocks_cols, ones_diff_cols), add(zeros_diff_cols, add(ones_diff_cols, compare_blocks_rows)))))
add(add(mul(mul(mul(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), add(mul(mul(ones_diff_cols, zeros_diff_rows), add(mul(compare_blocks_cols, zeros_diff_cols), zeros_diff_rows)), add(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_rows)))), add(mul(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)))), mul(add(add(add(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, zeros_diff_cols))), mul(add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)))))
COND TREES:
and_(or_(and_(False, True), le(ARG6, 2)), or_(or_(False, False), and_(True, False)))
le(_if_then_else(ge(_if_then_else(or_(False, False), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(False, 0, zeros_diff_rows)), _if_then_else(le(1, compare_blocks_cols), _if_then_else(False, 1, compare_blocks_rows), _if_then_else(True, ARG7, compare_blocks_cols))), _if_then_else(or_(or_(True, True), and_(True, False)), _if_then_else(and_(True, False), _if_then_else(False, 3, 0), _if_then_else(True, 2, compare_blocks_cols)), _if_then_else(False, _if_then_else(False, ARG7, 4), _if_then_else(False, 1, 1))), _if_then_else(le(_if_then_else(True, ARG6, 1), _if_then_else(True, compare_blocks_cols, 2)), _if_then_else(ge(1, ones_diff_cols), _if_then_else(False, ARG6, 4), _if_then_else(False, compare_blocks_rows, ones_diff_rows)), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(True, ARG6, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, ARG6)))), _if_then_else(or_(le(_if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(True, ARG6, 2)), and_(and_(False, True), or_(True, False))), _if_then_else(and_(or_(True, False), le(compare_blocks_rows, compare_blocks_rows)), _if_then_else(ge(zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(True, ones_diff_rows, 4)), _if_then_else(and_(True, ge(compare_blocks_rows, 3)), _if_then_else(False, compare_blocks_rows, ARG7), _if_then_else(False, 0, ones_diff_rows))), _if_then_else(ge(_if_then_else(False, ARG6, zeros_diff_cols), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(and_(False, False), _if_then_else(True, ones_diff_cols, ARG6), _if_then_else(False, 2, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_cols), _if_then_else(False, 1, 2)))))
and_(or_(or_(ge(_if_then_else(and_(le(_if_then_else(False, 2, ones_diff_rows), _if_then_else(False, 2, ARG7)), ge(_if_then_else(True, compare_blocks_cols, 2), _if_then_else(True, ones_diff_rows, zeros_diff_cols))), _if_then_else(le(_if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, 1, ones_diff_cols)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(True, 1, ARG7), _if_then_else(True, ARG6, ones_diff_cols)), _if_then_else(and_(True, True), _if_then_else(True, 3, 1), _if_then_else(False, ARG7, compare_blocks_cols))), _if_then_else(or_(or_(False, True), or_(True, False)), _if_then_else(ge(zeros_diff_cols, 4), _if_then_else(False, ones_diff_rows, ARG7), _if_then_else(False, 4, 1)), _if_then_else(or_(False, False), _if_then_else(True, 0, 3), _if_then_else(False, compare_blocks_cols, ARG6)))), _if_then_else(and_(and_(or_(True, False), ge(1, compare_blocks_rows)), or_(and_(False, False), and_(False, False))), _if_then_else(le(_if_then_else(True, compare_blocks_cols, 2), _if_then_else(True, 4, 0)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_cols), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(False, 4, 2), _if_then_else(True, zeros_diff_rows, ones_diff_cols))), _if_then_else(le(_if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(False, compare_blocks_cols, 2)), _if_then_else(le(zeros_diff_rows, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, ones_diff_rows))))), True), ge(1, ones_diff_cols)), le(_if_then_else(True, zeros_diff_cols, 3), _if_then_else(False, zeros_diff_rows, 2)))
le(_if_then_else(ge(_if_then_else(le(compare_blocks_rows, 4), _if_then_else(False, 1, ones_diff_rows), _if_then_else(False, ones_diff_rows, 2)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(True, 1, compare_blocks_cols))), _if_then_else(and_(ge(0, zeros_diff_cols), ge(ARG7, 4)), _if_then_else(le(_if_then_else(True, _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, 4)), ones_diff_cols), _if_then_else(False, zeros_diff_cols, compare_blocks_rows), _if_then_else(True, ones_diff_rows, 2)), _if_then_else(and_(le(_if_then_else(le(_if_then_else(True, ARG7, 0), _if_then_else(False, 1, 0)), _if_then_else(True, compare_blocks_cols, 3), _if_then_else(True, 0, 2)), _if_then_else(ge(3, ones_diff_rows), _if_then_else(and_(False, True), compare_blocks_cols, _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(False, ARG7, ones_diff_cols))), False), _if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(True, 2, 1))), _if_then_else(le(_if_then_else(True, ARG6, zeros_diff_cols), _if_then_else(True, 4, ARG6)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_rows, 1), _if_then_else(False, 0, 4)), _if_then_else(ge(0, compare_blocks_rows), _if_then_else(True, ARG6, 1), _if_then_else(True, zeros_diff_cols, ones_diff_rows)))), _if_then_else(or_(or_(or_(False, True), ge(zeros_diff_cols, zeros_diff_rows)), or_(ge(4, ARG7), le(compare_blocks_rows, ones_diff_rows))), _if_then_else(ge(_if_then_else(True, ARG7, zeros_diff_cols), _if_then_else(False, 4, ARG7)), _if_then_else(ge(ones_diff_cols, zeros_diff_cols), _if_then_else(False, ARG6, 1), _if_then_else(False, ones_diff_cols, 3)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(True, compare_blocks_cols, ones_diff_rows))), _if_then_else(and_(or_(False, True), or_(True, True)), _if_then_else(or_(True, False), _if_then_else(False, 2, ones_diff_rows), _if_then_else(True, ARG6, ARG7)), _if_then_else(le(zeros_diff_rows, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_cols)))))
ge(_if_then_else(and_(True, False), _if_then_else(False, 2, 2), _if_then_else(False, 2, 0)), _if_then_else(le(ARG7, 4), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(True, 4, ones_diff_cols)))
VAL TREES:
add(mul(add(add(mul(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_rows))), add(add(mul(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)), add(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)))), add(mul(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols))), add(add(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_rows)), mul(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_cols))), mul(mul(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_cols))))
mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows))), add(mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_rows))))
add(mul(add(mul(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_rows)), add(mul(ones_diff_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols))), add(mul(add(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)), mul(mul(zeros_diff_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_cols)))), mul(mul(add(mul(compare_blocks_rows, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows))), add(mul(mul(compare_blocks_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_cols)))))
mul(mul(add(add(mul(compare_blocks_cols, ones_diff_cols), zeros_diff_cols), compare_blocks_rows), add(ones_diff_cols, zeros_diff_rows)), add(add(zeros_diff_rows, compare_blocks_cols), add(add(compare_blocks_cols, ones_diff_cols), add(zeros_diff_cols, add(ones_diff_cols, compare_blocks_rows)))))
add(add(mul(mul(mul(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), add(mul(zeros_diff_rows, ones_diff_rows), mul(zeros_diff_rows, ones_diff_rows))), add(mul(add(ones_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)))), mul(add(add(add(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, zeros_diff_cols))), mul(add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)))))
COND TREES:
ge(_if_then_else(ge(4, 3), _if_then_else(True, zeros_diff_cols, ARG7), _if_then_else(True, ARG7, zeros_diff_rows)), _if_then_else(or_(False, True), _if_then_else(True, 3, 2), _if_then_else(True, 3, 4)))
le(_if_then_else(le(_if_then_else(le(ARG6, zeros_diff_cols), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, 0, ARG7)), _if_then_else(le(0, compare_blocks_rows), _if_then_else(False, 2, ones_diff_rows), _if_then_else(True, ARG6, 3))), _if_then_else(or_(ge(compare_blocks_rows, zeros_diff_rows), ge(1, 4)), _if_then_else(and_(True, True), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(True, ARG7, 0)), _if_then_else(le(3, 2), _if_then_else(True, zeros_diff_cols, 2), _if_then_else(False, ARG7, zeros_diff_cols))), _if_then_else(or_(ge(zeros_diff_rows, ARG7), le(ones_diff_rows, 4)), _if_then_else(ge(ARG7, 3), _if_then_else(False, 3, ARG7), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(or_(False, False), _if_then_else(False, 1, 3), _if_then_else(True, ARG7, zeros_diff_cols)))), _if_then_else(le(_if_then_else(or_(False, False), _if_then_else(True, zeros_diff_cols, ARG6), _if_then_else(False, ARG6, 3)), _if_then_else(ge(4, zeros_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, 0))), _if_then_else(or_(and_(False, False), le(ones_diff_rows, 1)), _if_then_else(ge(1, 1), _if_then_else(True, ARG6, ones_diff_rows), _if_then_else(True, zeros_diff_rows, ARG6)), _if_then_else(ge(1, 0), _if_then_else(False, compare_blocks_rows, 4), _if_then_else(True, 4, compare_blocks_cols))), _if_then_else(ge(_if_then_else(or_(True, False), ones_diff_cols, zeros_diff_cols), _if_then_else(False, 4, zeros_diff_cols)), _if_then_else(ge(0, ARG7), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(ge(_if_then_else(False, zeros_diff_rows, 0), _if_then_else(le(ARG7, ones_diff_cols), ones_diff_cols, 2)), compare_blocks_rows, 0)), _if_then_else(or_(True, False), _if_then_else(True, ARG7, ARG7), _if_then_else(False, 0, ones_diff_rows)))))
and_(ge(_if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, _if_then_else(False, ones_diff_cols, 2), 3)), True)
ge(_if_then_else(and_(False, or_(True, False)), _if_then_else(or_(le(ARG7, 0), False), ARG7, _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(ge(_if_then_else(and_(True, False), ones_diff_rows, zeros_diff_rows), _if_then_else(ge(3, 0), zeros_diff_cols, ones_diff_cols)), 1, ones_diff_cols)), _if_then_else(le(_if_then_else(False, compare_blocks_cols, _if_then_else(False, zeros_diff_rows, ones_diff_cols)), ARG6), ones_diff_rows, _if_then_else(True, _if_then_else(True, zeros_diff_cols, 4), ARG7)))
and_(le(_if_then_else(le(0, compare_blocks_rows), _if_then_else(False, 3, ones_diff_rows), _if_then_else(True, 3, 4)), _if_then_else(ge(1, compare_blocks_rows), _if_then_else(False, 3, ones_diff_rows), _if_then_else(False, ones_diff_rows, 1))), ge(_if_then_else(le(ARG7, ones_diff_cols), _if_then_else(True, 2, ARG7), 2), _if_then_else(ge(ARG7, 3), _if_then_else(True, compare_blocks_cols, 3), _if_then_else(True, compare_blocks_cols, 4))))
VAL TREES:
add(mul(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_rows, compare_blocks_cols)), mul(mul(compare_blocks_cols, mul(zeros_diff_rows, zeros_diff_rows)), add(ones_diff_rows, compare_blocks_cols)))
add(add(add(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_cols)))
add(mul(add(zeros_diff_cols, mul(ones_diff_rows, compare_blocks_rows)), add(compare_blocks_rows, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_rows), add(mul(compare_blocks_rows, ones_diff_cols), ones_diff_rows)))
mul(add(add(add(ones_diff_cols, zeros_diff_rows), compare_blocks_cols), mul(mul(zeros_diff_rows, zeros_diff_cols), zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_cols, mul(ones_diff_rows, ones_diff_cols))))
mul(mul(mul(mul(add(ones_diff_rows, ones_diff_cols), mul(ones_diff_cols, ones_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols))), add(mul(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(add(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)))), mul(add(mul(add(ones_diff_rows, ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols)), mul(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_cols))), add(mul(add(ones_diff_cols, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows)), add(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)))))
add(mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_rows)), add(add(zeros_diff_rows, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_cols))), mul(add(add(zeros_diff_rows, ones_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)), mul(add(ones_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_cols))))
COND TREES:
or_(ge(_if_then_else(or_(True, False), ARG7, _if_then_else(False, compare_blocks_rows, compare_blocks_rows)), _if_then_else(False, 4, compare_blocks_cols)), and_(ge(zeros_diff_cols, 1), or_(False, True)))
or_(ge(_if_then_else(False, 1, 4), _if_then_else(True, zeros_diff_rows, 3)), True)
and_(and_(and_(False, False), le(compare_blocks_cols, _if_then_else(True, _if_then_else(True, _if_then_else(True, 4, compare_blocks_cols), ARG7), 4))), ge(_if_then_else(or_(False, True), _if_then_else(False, 4, _if_then_else(False, ARG7, 0)), 2), _if_then_else(True, zeros_diff_rows, 3)))
ge(_if_then_else(le(_if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(le(zeros_diff_rows, 4), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(False, ARG7, compare_blocks_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, ARG7, ARG7))), zeros_diff_cols)
and_(le(ARG7, _if_then_else(ge(ones_diff_cols, compare_blocks_cols), 4, compare_blocks_rows)), and_(le(compare_blocks_rows, 1), and_(True, True)))
VAL TREES:
add(mul(mul(compare_blocks_cols, compare_blocks_cols), mul(mul(add(ones_diff_rows, compare_blocks_cols), ones_diff_rows), add(ones_diff_cols, ones_diff_cols))), mul(mul(ones_diff_rows, ones_diff_cols), add(mul(ones_diff_cols, ones_diff_rows), add(mul(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_cols)))))
mul(mul(add(ones_diff_rows, mul(zeros_diff_cols, mul(zeros_diff_rows, zeros_diff_rows))), mul(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_rows, mul(zeros_diff_cols, add(mul(add(compare_blocks_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols))))), add(zeros_diff_cols, compare_blocks_cols)))
mul(mul(add(mul(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols))), mul(mul(mul(ones_diff_cols, add(mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_cols)), add(mul(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows))), mul(add(add(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, ones_diff_rows)), add(add(zeros_diff_cols, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_rows))))), mul(ones_diff_rows, compare_blocks_cols)), add(zeros_diff_rows, mul(compare_blocks_rows, zeros_diff_cols)))), mul(add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), add(mul(add(mul(mul(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_rows, ones_diff_rows)), mul(add(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, ones_diff_cols))), add(add(mul(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_cols, ones_diff_rows)), add(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)))), add(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows)), add(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_cols))), mul(mul(mul(ones_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_cols)), add(mul(ones_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))))), mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, ones_diff_rows)))))
add(add(add(ones_diff_rows, mul(mul(zeros_diff_rows, ones_diff_cols), zeros_diff_cols)), mul(mul(add(zeros_diff_cols, compare_blocks_cols), zeros_diff_cols), compare_blocks_rows)), mul(add(zeros_diff_cols, add(ones_diff_cols, zeros_diff_rows)), mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows))))
add(mul(add(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, mul(mul(add(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_rows, ones_diff_rows)), mul(mul(compare_blocks_rows, add(zeros_diff_cols, ones_diff_rows)), mul(compare_blocks_cols, ones_diff_cols))))), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows))), mul(add(add(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), mul(add(mul(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), mul(add(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_cols, compare_blocks_cols))), mul(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(mul(mul(add(add(mul(add(ones_diff_cols, ones_diff_cols), add(zeros_diff_rows, ones_diff_rows)), mul(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))), ones_diff_cols), zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)), compare_blocks_cols)
COND TREES:
and_(le(_if_then_else(or_(ge(_if_then_else(True, 2, 1), _if_then_else(and_(False, ge(compare_blocks_cols, zeros_diff_rows)), _if_then_else(True, compare_blocks_cols, _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), 2)), or_(or_(False, True), or_(or_(False, False), True))), ones_diff_cols, zeros_diff_cols), _if_then_else(or_(False, True), compare_blocks_rows, 0)), le(_if_then_else(False, zeros_diff_cols, 3), _if_then_else(True, ones_diff_rows, ones_diff_cols)))
or_(and_(le(_if_then_else(False, ARG7, ARG6), _if_then_else(True, ARG7, 0)), le(_if_then_else(False, ARG6, 2), _if_then_else(ge(_if_then_else(le(_if_then_else(False, 4, zeros_diff_cols), _if_then_else(True, ones_diff_rows, ARG7)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(True, ones_diff_rows, compare_blocks_cols)), _if_then_else(le(2, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, 2), _if_then_else(True, ones_diff_cols, 0))), _if_then_else(le(_if_then_else(True, 4, 3), _if_then_else(True, 0, 4)), _if_then_else(le(ARG7, 4), _if_then_else(True, zeros_diff_cols, ARG7), _if_then_else(False, 0, ARG7)), _if_then_else(le(ones_diff_cols, ARG7), _if_then_else(True, 0, 4), _if_then_else(True, zeros_diff_cols, 4)))), _if_then_else(or_(ge(_if_then_else(True, 3, ARG6), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), and_(and_(False, False), and_(False, False))), _if_then_else(and_(and_(False, False), or_(True, False)), _if_then_else(or_(False, False), _if_then_else(False, 1, 0), _if_then_else(True, 3, 1)), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, ARG6, zeros_diff_rows))), _if_then_else(or_(le(zeros_diff_cols, 3), and_(False, True)), _if_then_else(or_(False, False), _if_then_else(True, 2, ARG6), _if_then_else(False, compare_blocks_rows, compare_blocks_rows)), _if_then_else(le(ones_diff_cols, compare_blocks_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, 0)))), _if_then_else(and_(and_(ge(0, 3), ge(compare_blocks_rows, ARG6)), le(_if_then_else(False, 4, 0), _if_then_else(True, zeros_diff_rows, 0))), _if_then_else(ge(_if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, 1))), _if_then_else(and_(ge(ones_diff_rows, 0), and_(True, True)), _if_then_else(ge(3, compare_blocks_cols), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(False, 0, 1)), _if_then_else(le(zeros_diff_rows, 4), zeros_diff_cols, _if_then_else(True, compare_blocks_rows, 0))))))), le(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, ones_diff_cols), _if_then_else(False, ARG7, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, 2))))
and_(ge(_if_then_else(and_(False, True), _if_then_else(False, ARG7, ARG7), _if_then_else(True, 2, 2)), _if_then_else(and_(False, False), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, 1, 2))), ge(_if_then_else(and_(True, True), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)), _if_then_else(le(1, 3), _if_then_else(False, 1, 0), _if_then_else(False, ones_diff_rows, zeros_diff_rows))))
or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(False, 3, zeros_diff_rows)), and_(and_(False, True), le(ARG7, compare_blocks_rows)))
or_(and_(or_(False, False), ge(compare_blocks_cols, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), and_(or_(le(2, zeros_diff_rows), le(compare_blocks_rows, 1)), or_(True, True)))
VAL TREES:
mul(add(zeros_diff_rows, add(ones_diff_rows, ones_diff_cols)), add(add(mul(zeros_diff_rows, compare_blocks_cols), ones_diff_rows), ones_diff_cols))
mul(add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, mul(mul(compare_blocks_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_cols)))))
mul(mul(add(ones_diff_cols, compare_blocks_cols), add(add(add(compare_blocks_cols, zeros_diff_rows), add(mul(zeros_diff_rows, compare_blocks_cols), add(add(mul(add(add(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_rows, ones_diff_cols)), zeros_diff_cols), mul(ones_diff_cols, add(compare_blocks_rows, compare_blocks_cols))), add(mul(ones_diff_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_rows))), compare_blocks_cols))), zeros_diff_cols)), add(add(zeros_diff_cols, mul(compare_blocks_rows, add(add(ones_diff_rows, ones_diff_rows), ones_diff_rows))), mul(zeros_diff_rows, compare_blocks_rows)))
mul(add(mul(zeros_diff_rows, ones_diff_rows), mul(mul(mul(ones_diff_rows, compare_blocks_rows), zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows))), mul(add(ones_diff_rows, mul(mul(add(mul(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_cols)), add(mul(ones_diff_cols, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_rows))), mul(mul(mul(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_rows, zeros_diff_rows)), add(add(zeros_diff_rows, zeros_diff_cols), add(zeros_diff_rows, zeros_diff_cols)))), mul(mul(add(mul(ones_diff_rows, zeros_diff_rows), add(compare_blocks_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, ones_diff_rows), add(compare_blocks_rows, ones_diff_cols))), mul(add(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows)), mul(mul(ones_diff_rows, ones_diff_cols), mul(zeros_diff_rows, compare_blocks_rows)))))), compare_blocks_rows))
mul(mul(mul(add(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, add(mul(add(compare_blocks_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_cols)), add(add(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, compare_blocks_cols))))), ones_diff_cols), add(add(compare_blocks_cols, add(compare_blocks_rows, compare_blocks_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(zeros_diff_rows, compare_blocks_cols))))
mul(add(add(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), ones_diff_cols), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(add(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(ones_diff_cols, zeros_diff_cols))))
COND TREES:
ge(_if_then_else(and_(True, and_(False, True)), _if_then_else(False, 3, 0), _if_then_else(False, ARG7, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, _if_then_else(le(_if_then_else(or_(False, False), _if_then_else(True, ARG6, zeros_diff_rows), _if_then_else(False, ones_diff_cols, 1)), _if_then_else(ge(0, 0), _if_then_else(False, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, 2, 0))), zeros_diff_rows, ARG7), ones_diff_rows), _if_then_else(le(2, 2), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, 2), 4), _if_then_else(or_(False, True), 3, ARG6))))
and_(or_(ge(zeros_diff_cols, ones_diff_rows), ge(zeros_diff_cols, _if_then_else(ge(2, compare_blocks_rows), _if_then_else(True, _if_then_else(True, ones_diff_rows, zeros_diff_rows), _if_then_else(False, _if_then_else(False, 3, compare_blocks_rows), compare_blocks_rows)), _if_then_else(False, 2, zeros_diff_cols)))), and_(or_(True, False), and_(True, False)))
ge(_if_then_else(and_(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(False, ones_diff_rows, 4), _if_then_else(True, compare_blocks_cols, ARG6)), _if_then_else(ge(ones_diff_rows, 3), _if_then_else(False, ARG6, compare_blocks_cols), _if_then_else(True, ARG6, _if_then_else(False, 4, 1)))), ge(_if_then_else(and_(True, False), _if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, ones_diff_rows)), _if_then_else(le(2, ARG6), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(True, 4, ones_diff_rows)))), _if_then_else(False, _if_then_else(False, ones_diff_cols, _if_then_else(False, 2, ones_diff_rows)), zeros_diff_cols), _if_then_else(False, _if_then_else(True, 0, compare_blocks_cols), zeros_diff_cols)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(True, ARG6, 2)))
or_(le(_if_then_else(True, ARG7, zeros_diff_cols), _if_then_else(le(zeros_diff_rows, _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), 2)), ge(_if_then_else(and_(True, False), ones_diff_rows, zeros_diff_rows), compare_blocks_rows))
le(_if_then_else(le(_if_then_else(True, ARG6, ARG6), compare_blocks_rows), _if_then_else(True, _if_then_else(False, 4, compare_blocks_cols), 3), _if_then_else(False, ARG7, compare_blocks_cols)), _if_then_else(and_(and_(False, False), True), _if_then_else(or_(False, False), 3, zeros_diff_rows), _if_then_else(False, 2, 1)))
VAL TREES:
add(add(add(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_cols)), add(add(ones_diff_rows, add(ones_diff_cols, ones_diff_cols)), mul(zeros_diff_rows, zeros_diff_cols)))
add(add(add(zeros_diff_rows, zeros_diff_rows), add(mul(ones_diff_cols, mul(ones_diff_cols, compare_blocks_cols)), zeros_diff_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, mul(add(ones_diff_rows, ones_diff_cols), ones_diff_cols))))
add(mul(add(add(add(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, ones_diff_rows)), add(add(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_rows))), add(add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, zeros_diff_rows)))), add(mul(mul(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))))
add(add(mul(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_cols)), add(add(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_cols))), add(mul(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)))), add(mul(add(add(compare_blocks_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_cols))), add(mul(add(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)))))
add(mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))), add(add(mul(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), add(add(zeros_diff_cols, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_rows))))
mul(add(mul(mul(zeros_diff_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(add(mul(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, zeros_diff_rows)), add(mul(zeros_diff_cols, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows))))
COND TREES:
or_(ge(_if_then_else(or_(True, False), ARG7, _if_then_else(False, compare_blocks_rows, compare_blocks_rows)), _if_then_else(False, 4, compare_blocks_cols)), and_(ge(zeros_diff_cols, 1), or_(False, True)))
or_(ge(_if_then_else(False, 1, 4), _if_then_else(True, zeros_diff_rows, 3)), True)
and_(and_(and_(False, False), le(compare_blocks_cols, _if_then_else(True, _if_then_else(True, _if_then_else(True, 4, compare_blocks_cols), ARG7), 4))), ge(_if_then_else(or_(False, True), _if_then_else(False, 4, _if_then_else(False, ARG7, 0)), 2), _if_then_else(True, zeros_diff_rows, 3)))
ge(_if_then_else(le(_if_then_else(True, zeros_diff_rows, compare_blocks_rows), ones_diff_cols), _if_then_else(le(zeros_diff_rows, 4), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(False, ARG7, compare_blocks_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, ARG7, ARG7))), zeros_diff_cols)
and_(le(ARG7, _if_then_else(ge(ones_diff_cols, compare_blocks_cols), 4, compare_blocks_rows)), and_(le(compare_blocks_rows, 1), and_(True, True)))
VAL TREES:
add(mul(mul(compare_blocks_cols, compare_blocks_cols), mul(mul(add(ones_diff_rows, compare_blocks_cols), ones_diff_rows), add(ones_diff_cols, ones_diff_cols))), mul(mul(ones_diff_rows, ones_diff_cols), add(mul(ones_diff_cols, ones_diff_rows), add(mul(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_cols)))))
mul(mul(add(ones_diff_rows, mul(zeros_diff_cols, mul(zeros_diff_rows, zeros_diff_rows))), mul(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_rows, mul(zeros_diff_cols, compare_blocks_cols)), add(zeros_diff_cols, compare_blocks_cols)))
mul(mul(add(mul(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols))), mul(mul(mul(ones_diff_cols, add(mul(add(mul(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_cols)), add(mul(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows))), mul(add(add(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, ones_diff_rows)), add(add(zeros_diff_cols, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_rows))))), mul(ones_diff_rows, compare_blocks_cols)), add(zeros_diff_rows, mul(compare_blocks_rows, zeros_diff_cols)))), mul(add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), add(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, ones_diff_rows)))))
add(add(add(ones_diff_rows, mul(mul(zeros_diff_rows, ones_diff_cols), zeros_diff_cols)), mul(mul(add(zeros_diff_cols, compare_blocks_cols), zeros_diff_cols), compare_blocks_rows)), mul(add(zeros_diff_cols, add(ones_diff_cols, zeros_diff_rows)), mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows))))
add(mul(add(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows))), mul(add(add(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), mul(add(mul(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), mul(add(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_cols, compare_blocks_cols))), mul(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(mul(mul(add(add(mul(add(ones_diff_cols, ones_diff_cols), add(zeros_diff_rows, ones_diff_rows)), mul(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))), ones_diff_cols), zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)), compare_blocks_cols)
COND TREES:
ge(_if_then_else(ge(4, 3), _if_then_else(True, zeros_diff_cols, ARG7), _if_then_else(True, ARG7, zeros_diff_rows)), _if_then_else(or_(False, True), _if_then_else(True, 3, 2), _if_then_else(True, 3, 4)))
le(_if_then_else(le(_if_then_else(le(ARG6, zeros_diff_cols), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, 0, ARG7)), _if_then_else(le(0, compare_blocks_rows), _if_then_else(False, 2, ones_diff_rows), _if_then_else(True, ARG6, 3))), _if_then_else(or_(ge(compare_blocks_rows, zeros_diff_rows), ge(1, 4)), _if_then_else(and_(True, True), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(True, ARG7, 0)), _if_then_else(le(3, 2), _if_then_else(True, zeros_diff_cols, 2), _if_then_else(False, ARG7, zeros_diff_cols))), _if_then_else(or_(ge(zeros_diff_rows, ARG7), le(ones_diff_rows, 4)), _if_then_else(ge(ARG7, 3), _if_then_else(False, 3, ARG7), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(or_(False, False), _if_then_else(False, 1, 3), _if_then_else(True, ARG7, zeros_diff_cols)))), _if_then_else(le(_if_then_else(or_(False, False), _if_then_else(True, zeros_diff_cols, ARG6), _if_then_else(False, ARG6, 3)), _if_then_else(ge(4, zeros_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, 0))), _if_then_else(or_(and_(False, False), le(ones_diff_rows, 1)), _if_then_else(ge(1, 1), _if_then_else(True, ARG6, ones_diff_rows), _if_then_else(True, zeros_diff_rows, ARG6)), _if_then_else(ge(1, 0), _if_then_else(False, _if_then_else(le(_if_then_else(and_(or_(True, False), ge(zeros_diff_rows, ones_diff_rows)), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_rows, ARG7), _if_then_else(False, ARG6, ones_diff_cols)), _if_then_else(ge(3, 3), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, 0, 2))), _if_then_else(ge(_if_then_else(False, ones_diff_cols, ones_diff_cols), _if_then_else(True, 4, compare_blocks_rows)), _if_then_else(ge(zeros_diff_rows, zeros_diff_rows), _if_then_else(False, ARG7, 1), _if_then_else(True, 1, ones_diff_cols)), _if_then_else(ge(zeros_diff_rows, 1), _if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, 2, zeros_diff_rows)))), _if_then_else(ge(_if_then_else(le(compare_blocks_rows, 1), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, ones_diff_cols, 4)), _if_then_else(or_(True, False), _if_then_else(False, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, zeros_diff_cols, 0))), _if_then_else(or_(ge(ones_diff_cols, ones_diff_cols), ge(1, 3)), _if_then_else(or_(True, True), _if_then_else(False, compare_blocks_cols, ARG7), _if_then_else(True, 1, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, compare_blocks_rows), _if_then_else(True, ones_diff_rows, ARG6))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, ARG7), _if_then_else(True, zeros_diff_rows, ones_diff_cols)), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(False, ones_diff_rows, 2)), _if_then_else(ge(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, ARG7, 1), _if_then_else(True, zeros_diff_cols, 0)))), _if_then_else(ge(_if_then_else(ge(0, zeros_diff_cols), _if_then_else(True, ARG6, ones_diff_rows), _if_then_else(True, ARG7, 1)), _if_then_else(or_(True, True), _if_then_else(False, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_cols))), _if_then_else(and_(and_(False, False), and_(True, True)), _if_then_else(ge(ARG6, 4), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(True, 0, 0), _if_then_else(False, compare_blocks_rows, 2))), _if_then_else(ge(_if_then_else(True, compare_blocks_cols, 4), _if_then_else(False, ARG7, ARG6)), _if_then_else(ge(ones_diff_rows, 3), _if_then_else(True, zeros_diff_rows, zeros_diff_cols), _if_then_else(False, ARG7, ARG6)), _if_then_else(le(zeros_diff_cols, ARG7), _if_then_else(False, 0, 2), _if_then_else(False, 1, ones_diff_cols))))), 4), _if_then_else(True, 4, compare_blocks_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(False, 4, zeros_diff_cols)), _if_then_else(ge(0, ARG7), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(ge(_if_then_else(False, zeros_diff_rows, 0), _if_then_else(le(ARG7, ones_diff_cols), ones_diff_cols, 2)), compare_blocks_rows, 0)), _if_then_else(or_(True, False), _if_then_else(True, ARG7, ARG7), _if_then_else(False, 0, ones_diff_rows)))))
and_(ge(_if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, _if_then_else(False, ones_diff_cols, 2), 3)), False)
ge(_if_then_else(and_(False, or_(True, False)), _if_then_else(or_(True, False), ARG7, _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(ge(_if_then_else(and_(True, False), ones_diff_rows, zeros_diff_rows), _if_then_else(ge(3, 0), zeros_diff_cols, ones_diff_cols)), 1, ones_diff_cols)), _if_then_else(le(_if_then_else(False, compare_blocks_cols, _if_then_else(or_(le(_if_then_else(le(4, ones_diff_rows), _if_then_else(False, ARG7, 2), _if_then_else(False, ARG6, ARG6)), _if_then_else(ge(zeros_diff_rows, ARG6), _if_then_else(True, ones_diff_cols, ARG7), _if_then_else(True, ones_diff_cols, 2))), and_(le(_if_then_else(False, 0, compare_blocks_rows), _if_then_else(True, ones_diff_cols, 1)), ge(_if_then_else(True, ARG6, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, ARG7)))), _if_then_else(and_(and_(le(compare_blocks_rows, 1), or_(False, True)), le(_if_then_else(False, 3, ones_diff_rows), _if_then_else(False, 0, compare_blocks_cols))), _if_then_else(ge(_if_then_else(False, 0, ones_diff_cols), _if_then_else(False, 2, 1)), _if_then_else(or_(True, True), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, 2, ARG7)), _if_then_else(le(ARG7, zeros_diff_cols), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, 3, 2))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, ARG7), _if_then_else(False, zeros_diff_rows, ones_diff_cols)), _if_then_else(le(zeros_diff_cols, 1), _if_then_else(True, ARG6, compare_blocks_rows), _if_then_else(True, ones_diff_cols, ARG6)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(True, 0, 1)))), _if_then_else(and_(ge(_if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(True, 0, 3)), le(_if_then_else(False, ARG7, 0), _if_then_else(True, compare_blocks_cols, zeros_diff_cols))), _if_then_else(le(_if_then_else(True, zeros_diff_cols, ones_diff_cols), _if_then_else(True, ARG6, 4)), _if_then_else(ge(ARG7, 0), _if_then_else(False, zeros_diff_rows, 2), _if_then_else(True, ones_diff_rows, ones_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(False, ones_diff_cols, zeros_diff_cols))), _if_then_else(or_(and_(False, False), le(ones_diff_rows, ones_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, 2, 1), _if_then_else(True, 2, ones_diff_rows)), _if_then_else(ge(compare_blocks_rows, ones_diff_rows), _if_then_else(False, 1, compare_blocks_rows), _if_then_else(True, 0, ones_diff_rows)))))), ARG6), ones_diff_rows, _if_then_else(True, _if_then_else(True, zeros_diff_cols, 4), ARG7)))
and_(le(_if_then_else(le(0, compare_blocks_rows), _if_then_else(False, 3, ones_diff_rows), _if_then_else(True, 3, 4)), _if_then_else(ge(1, compare_blocks_rows), _if_then_else(le(_if_then_else(and_(and_(False, False), False), _if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, 2, 3)), _if_then_else(and_(ge(_if_then_else(False, ones_diff_cols, ARG6), ARG6), False), _if_then_else(True, _if_then_else(False, ones_diff_rows, zeros_diff_rows), 3), _if_then_else(False, _if_then_else(le(compare_blocks_rows, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, 0), zeros_diff_rows), 0))), 3, ones_diff_rows), _if_then_else(False, ones_diff_rows, 1))), ge(_if_then_else(le(ARG7, ones_diff_cols), _if_then_else(True, 2, ARG7), 2), _if_then_else(ge(ARG7, 3), _if_then_else(True, compare_blocks_cols, 3), _if_then_else(True, compare_blocks_cols, 4))))
VAL TREES:
add(mul(mul(ones_diff_rows, compare_blocks_cols), compare_blocks_cols), mul(mul(compare_blocks_cols, mul(zeros_diff_rows, zeros_diff_rows)), add(ones_diff_rows, compare_blocks_cols)))
add(add(ones_diff_rows, add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_cols)))
add(mul(add(zeros_diff_cols, mul(ones_diff_rows, compare_blocks_rows)), add(compare_blocks_rows, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_rows), add(mul(compare_blocks_rows, ones_diff_cols), ones_diff_rows)))
mul(add(add(add(ones_diff_rows, mul(mul(ones_diff_rows, ones_diff_cols), zeros_diff_cols)), compare_blocks_cols), mul(mul(zeros_diff_rows, zeros_diff_cols), zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_cols, mul(ones_diff_rows, ones_diff_cols))))
mul(mul(mul(mul(add(ones_diff_rows, ones_diff_cols), mul(ones_diff_cols, ones_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols))), add(mul(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(add(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)))), mul(add(mul(add(ones_diff_rows, ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols)), mul(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_cols))), add(mul(add(ones_diff_cols, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows)), add(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)))))
add(mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_rows)), add(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, add(ones_diff_rows, compare_blocks_cols)))), mul(add(add(zeros_diff_rows, ones_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)), mul(add(ones_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_cols))))
COND TREES:
and_(le(_if_then_else(or_(or_(True, False), True), ones_diff_cols, zeros_diff_cols), _if_then_else(or_(False, True), compare_blocks_rows, 0)), le(_if_then_else(False, zeros_diff_cols, 3), _if_then_else(True, ones_diff_rows, ones_diff_cols)))
or_(and_(le(_if_then_else(False, ARG7, ARG6), _if_then_else(True, ARG7, 0)), le(_if_then_else(False, ARG6, 2), _if_then_else(True, _if_then_else(or_(ge(_if_then_else(True, 3, ARG6), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), and_(and_(False, False), and_(False, False))), _if_then_else(and_(and_(False, False), or_(True, False)), _if_then_else(or_(False, False), _if_then_else(False, 1, 0), _if_then_else(True, 3, 1)), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, ARG6, zeros_diff_rows))), _if_then_else(or_(le(zeros_diff_cols, 3), and_(False, True)), _if_then_else(or_(False, False), _if_then_else(True, 2, ARG6), _if_then_else(False, compare_blocks_rows, compare_blocks_rows)), _if_then_else(le(ones_diff_cols, compare_blocks_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, 0)))), _if_then_else(and_(and_(ge(0, 3), ge(compare_blocks_rows, ARG6)), le(_if_then_else(False, 4, 0), _if_then_else(True, zeros_diff_rows, 0))), _if_then_else(ge(_if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, 1))), _if_then_else(and_(ge(ones_diff_rows, 0), and_(True, True)), _if_then_else(ge(3, compare_blocks_cols), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(False, 0, 1)), _if_then_else(le(zeros_diff_rows, 4), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, 0))))))), le(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, ones_diff_cols), _if_then_else(False, ARG7, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, 2))))
and_(ge(_if_then_else(and_(False, True), _if_then_else(False, ARG7, ARG7), _if_then_else(True, 2, 2)), _if_then_else(and_(False, False), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, 1, 2))), ge(_if_then_else(and_(True, True), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)), _if_then_else(le(1, 3), _if_then_else(False, 1, _if_then_else(False, ones_diff_rows, 4)), _if_then_else(False, ones_diff_rows, zeros_diff_rows))))
or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), 3), and_(and_(False, True), le(ARG7, compare_blocks_rows)))
or_(and_(or_(False, False), ge(compare_blocks_cols, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), and_(or_(and_(False, True), False), or_(True, True)))
VAL TREES:
mul(add(zeros_diff_rows, add(ones_diff_rows, ones_diff_cols)), add(add(mul(zeros_diff_rows, compare_blocks_cols), ones_diff_rows), ones_diff_cols))
mul(add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, mul(mul(compare_blocks_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_cols)))))
mul(mul(add(ones_diff_cols, compare_blocks_cols), add(add(add(compare_blocks_cols, zeros_diff_rows), add(mul(zeros_diff_rows, compare_blocks_cols), add(ones_diff_cols, compare_blocks_cols))), zeros_diff_cols)), add(add(zeros_diff_cols, mul(compare_blocks_rows, add(add(ones_diff_rows, ones_diff_rows), ones_diff_rows))), mul(zeros_diff_rows, compare_blocks_rows)))
mul(add(mul(zeros_diff_rows, ones_diff_rows), mul(mul(mul(ones_diff_rows, compare_blocks_rows), zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows))), mul(add(ones_diff_rows, ones_diff_cols), compare_blocks_rows))
mul(mul(mul(add(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), ones_diff_cols), add(add(compare_blocks_cols, add(compare_blocks_rows, compare_blocks_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(zeros_diff_rows, compare_blocks_cols))))
mul(add(add(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), ones_diff_cols), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(add(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(ones_diff_cols, zeros_diff_cols))))
COND TREES:
and_(le(_if_then_else(or_(or_(True, False), True), ones_diff_cols, zeros_diff_cols), _if_then_else(or_(False, True), compare_blocks_rows, 0)), le(_if_then_else(False, zeros_diff_cols, 3), _if_then_else(True, ones_diff_rows, ones_diff_cols)))
or_(and_(le(_if_then_else(False, ARG7, ARG6), _if_then_else(True, ARG7, 0)), le(_if_then_else(False, ARG6, 2), _if_then_else(True, _if_then_else(or_(ge(_if_then_else(True, 3, ARG6), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), and_(and_(False, False), and_(False, False))), _if_then_else(and_(and_(False, False), or_(True, False)), _if_then_else(or_(False, False), _if_then_else(False, 1, 0), _if_then_else(True, 3, 1)), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, ARG6, zeros_diff_rows))), _if_then_else(or_(le(zeros_diff_cols, 3), and_(False, True)), _if_then_else(or_(False, False), _if_then_else(True, 2, ARG6), _if_then_else(False, compare_blocks_rows, compare_blocks_rows)), _if_then_else(le(ones_diff_cols, compare_blocks_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, 0)))), _if_then_else(and_(and_(ge(0, 3), ge(compare_blocks_rows, ARG6)), le(_if_then_else(False, 4, 0), _if_then_else(True, zeros_diff_rows, 0))), _if_then_else(ge(_if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, 1))), _if_then_else(and_(ge(ones_diff_rows, 0), and_(True, True)), _if_then_else(ge(3, compare_blocks_cols), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(False, 0, 1)), _if_then_else(le(zeros_diff_rows, 4), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, 0))))))), le(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, ones_diff_cols), _if_then_else(False, ARG7, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, 2))))
and_(ge(_if_then_else(and_(False, True), _if_then_else(False, ARG7, ARG7), _if_then_else(True, 2, 2)), _if_then_else(and_(False, False), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, 1, 2))), ge(_if_then_else(and_(True, True), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)), _if_then_else(le(1, 3), _if_then_else(False, 1, _if_then_else(False, ones_diff_rows, 4)), _if_then_else(False, ones_diff_rows, zeros_diff_rows))))
or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), 3), and_(and_(False, True), le(ARG7, compare_blocks_rows)))
or_(and_(or_(False, False), ge(compare_blocks_cols, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), and_(or_(and_(False, True), False), or_(True, True)))
VAL TREES:
mul(add(zeros_diff_rows, add(ones_diff_rows, ones_diff_cols)), add(add(mul(zeros_diff_rows, compare_blocks_cols), ones_diff_rows), ones_diff_cols))
mul(add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, mul(mul(compare_blocks_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_cols)))))
mul(mul(add(ones_diff_cols, compare_blocks_cols), add(add(add(compare_blocks_cols, zeros_diff_rows), add(mul(zeros_diff_rows, compare_blocks_cols), add(ones_diff_cols, compare_blocks_cols))), zeros_diff_cols)), add(add(zeros_diff_cols, mul(compare_blocks_rows, add(add(ones_diff_rows, ones_diff_rows), ones_diff_rows))), mul(zeros_diff_rows, compare_blocks_rows)))
mul(add(mul(zeros_diff_rows, ones_diff_rows), mul(mul(mul(ones_diff_rows, compare_blocks_rows), zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows))), mul(add(ones_diff_rows, ones_diff_cols), compare_blocks_rows))
mul(mul(mul(add(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), ones_diff_cols), add(add(compare_blocks_cols, add(compare_blocks_rows, compare_blocks_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(zeros_diff_rows, compare_blocks_cols))))
mul(add(add(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), ones_diff_cols), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(add(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(ones_diff_cols, zeros_diff_cols))))
COND TREES:
ge(_if_then_else(and_(True, and_(False, True)), compare_blocks_cols, _if_then_else(False, ARG7, zeros_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, _if_then_else(le(_if_then_else(or_(False, False), _if_then_else(True, ARG6, zeros_diff_rows), _if_then_else(False, ones_diff_cols, 1)), _if_then_else(ge(0, 0), _if_then_else(False, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, 2, 0))), zeros_diff_rows, ARG7), ones_diff_rows), _if_then_else(le(2, 2), _if_then_else(and_(False, False), _if_then_else(False, zeros_diff_cols, 2), 4), _if_then_else(or_(False, True), 3, ARG6))))
and_(or_(ge(zeros_diff_cols, ones_diff_rows), ge(_if_then_else(or_(True, False), _if_then_else(True, ARG7, _if_then_else(le(ARG6, compare_blocks_rows), _if_then_else(False, 4, ARG7), 3)), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(ge(2, compare_blocks_rows), _if_then_else(True, _if_then_else(True, ones_diff_rows, zeros_diff_rows), _if_then_else(False, _if_then_else(False, 3, compare_blocks_rows), compare_blocks_rows)), _if_then_else(False, 2, zeros_diff_cols)))), and_(or_(True, False), and_(True, False)))
ge(_if_then_else(and_(le(_if_then_else(le(compare_blocks_cols, 1), _if_then_else(False, ones_diff_rows, 4), _if_then_else(True, compare_blocks_cols, ARG6)), _if_then_else(ge(ones_diff_rows, 3), _if_then_else(False, ARG6, compare_blocks_cols), _if_then_else(True, 2, 2))), ge(_if_then_else(and_(True, False), 0, _if_then_else(False, compare_blocks_cols, ones_diff_rows)), _if_then_else(le(2, ARG6), _if_then_else(False, ones_diff_cols, compare_blocks_rows), _if_then_else(True, 4, ones_diff_rows)))), _if_then_else(False, _if_then_else(False, ones_diff_cols, _if_then_else(False, 2, ones_diff_rows)), zeros_diff_cols), _if_then_else(False, _if_then_else(True, 0, compare_blocks_cols), zeros_diff_cols)), _if_then_else(and_(False, False), _if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(True, ARG6, 2)))
or_(le(_if_then_else(True, ARG6, zeros_diff_cols), _if_then_else(le(zeros_diff_rows, ones_diff_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), 2)), ge(_if_then_else(and_(True, False), ones_diff_rows, zeros_diff_rows), compare_blocks_rows))
le(_if_then_else(le(_if_then_else(True, ARG6, ARG6), compare_blocks_rows), _if_then_else(True, _if_then_else(False, 4, compare_blocks_cols), 3), _if_then_else(False, zeros_diff_cols, compare_blocks_cols)), _if_then_else(and_(and_(False, False), True), _if_then_else(or_(False, False), 3, zeros_diff_rows), _if_then_else(False, 2, 1)))
VAL TREES:
add(add(add(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_cols)), add(add(ones_diff_rows, add(ones_diff_cols, ones_diff_cols)), mul(zeros_diff_rows, zeros_diff_cols)))
add(add(add(zeros_diff_rows, zeros_diff_rows), add(mul(ones_diff_cols, mul(ones_diff_cols, compare_blocks_cols)), zeros_diff_cols)), mul(mul(ones_diff_cols, ones_diff_rows), mul(zeros_diff_cols, mul(add(ones_diff_rows, ones_diff_cols), ones_diff_cols))))
add(mul(add(add(add(zeros_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, ones_diff_rows)), add(add(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_rows))), add(add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, zeros_diff_rows)))), add(mul(mul(add(compare_blocks_rows, compare_blocks_cols), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_cols))), mul(add(mul(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)))))
add(add(mul(add(add(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_cols)), add(add(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_cols))), add(mul(mul(compare_blocks_rows, compare_blocks_rows), mul(ones_diff_cols, zeros_diff_rows)), mul(add(ones_diff_cols, zeros_diff_rows), add(ones_diff_rows, ones_diff_rows)))), add(mul(add(add(compare_blocks_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_cols))), add(mul(add(ones_diff_cols, ones_diff_rows), mul(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, ones_diff_rows)))))
add(mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))), add(add(mul(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), add(add(zeros_diff_cols, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_rows))))
mul(add(mul(mul(zeros_diff_rows, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols))), mul(add(mul(zeros_diff_cols, ones_diff_rows), add(compare_blocks_rows, zeros_diff_rows)), add(mul(zeros_diff_cols, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows))))
COND TREES:
or_(ge(_if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(False, _if_then_else(False, _if_then_else(ge(_if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, zeros_diff_cols, 2)), _if_then_else(or_(True, False), _if_then_else(True, 2, zeros_diff_cols), _if_then_else(False, 1, zeros_diff_rows)), _if_then_else(ge(2, zeros_diff_cols), _if_then_else(True, zeros_diff_rows, 1), _if_then_else(False, zeros_diff_cols, ARG7))), 0), compare_blocks_rows)), and_(ge(ones_diff_cols, ARG7), or_(or_(True, False), True)))
and_(ge(_if_then_else(True, 2, zeros_diff_rows), _if_then_else(True, _if_then_else(True, 1, zeros_diff_rows), ones_diff_rows)), ge(_if_then_else(ge(4, zeros_diff_cols), ARG7, _if_then_else(True, zeros_diff_cols, 4)), _if_then_else(True, 1, _if_then_else(True, zeros_diff_rows, 0))))
and_(or_(and_(ge(_if_then_else(False, 3, ARG7), 0), False), or_(False, False)), le(_if_then_else(ge(zeros_diff_rows, ones_diff_cols), ones_diff_rows, 2), _if_then_else(False, ARG6, _if_then_else(False, _if_then_else(False, 4, _if_then_else(ge(_if_then_else(True, 3, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)), _if_then_else(ge(ARG6, 2), _if_then_else(False, ARG6, 0), _if_then_else(False, 3, zeros_diff_cols)), _if_then_else(le(zeros_diff_rows, ones_diff_cols), _if_then_else(True, 4, 2), _if_then_else(False, ones_diff_cols, 3)))), _if_then_else(False, ones_diff_rows, 4)))))
and_(or_(and_(le(compare_blocks_rows, compare_blocks_rows), and_(True, True)), or_(True, True)), ge(_if_then_else(True, compare_blocks_rows, ARG6), _if_then_else(le(3, ones_diff_rows), zeros_diff_cols, _if_then_else(True, 2, 2))))
and_(ge(_if_then_else(False, 3, ARG7), _if_then_else(False, 0, 0)), and_(and_(False, True), or_(True, False)))
VAL TREES:
add(ones_diff_cols, mul(mul(ones_diff_cols, ones_diff_rows), add(zeros_diff_cols, ones_diff_rows)))
mul(add(add(compare_blocks_cols, ones_diff_cols), mul(ones_diff_rows, zeros_diff_cols)), zeros_diff_cols)
mul(mul(mul(add(ones_diff_cols, add(mul(ones_diff_rows, compare_blocks_cols), compare_blocks_rows)), add(zeros_diff_cols, ones_diff_rows)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, ones_diff_cols))), add(mul(mul(ones_diff_cols, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), add(ones_diff_cols, compare_blocks_cols))))
mul(add(add(ones_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows)), mul(mul(mul(ones_diff_rows, compare_blocks_rows), zeros_diff_cols), mul(ones_diff_rows, zeros_diff_rows)))
add(add(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_rows)), add(add(mul(zeros_diff_cols, zeros_diff_cols), ones_diff_rows), add(zeros_diff_cols, compare_blocks_cols)))
mul(add(zeros_diff_rows, add(ones_diff_rows, ones_diff_cols)), add(mul(add(zeros_diff_cols, compare_blocks_cols), ones_diff_cols), compare_blocks_rows))
COND TREES:
or_(le(_if_then_else(or_(and_(True, True), le(1, 1)), _if_then_else(ge(4, 1), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, ARG7)), _if_then_else(or_(False, True), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, compare_blocks_cols, compare_blocks_rows))), _if_then_else(ge(_if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(ge(3, ARG6), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, 0, compare_blocks_rows), _if_then_else(True, 0, ARG7)))), ge(_if_then_else(le(_if_then_else(True, ARG7, 4), _if_then_else(False, 2, ARG6)), _if_then_else(ge(3, ARG7), _if_then_else(False, 0, 0), _if_then_else(True, 3, 1)), _if_then_else(or_(False, True), _if_then_else(True, 4, ARG7), _if_then_else(True, 2, ones_diff_cols))), _if_then_else(and_(and_(True, False), and_(True, False)), _if_then_else(le(compare_blocks_rows, ARG6), _if_then_else(True, compare_blocks_cols, ARG7), _if_then_else(False, ARG7, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, compare_blocks_cols, 3)))))
le(_if_then_else(or_(True, True), _if_then_else(False, zeros_diff_rows, ARG6), _if_then_else(False, compare_blocks_rows, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(False, 1, compare_blocks_rows), _if_then_else(True, ARG7, compare_blocks_cols)))
or_(and_(le(1, 1), ge(compare_blocks_rows, 1)), or_(le(_if_then_else(False, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows)), or_(and_(False, True), True)))
or_(or_(or_(False, True), le(3, ARG6)), ge(_if_then_else(False, zeros_diff_cols, 4), _if_then_else(False, ARG6, 0)))
or_(and_(ge(ARG6, compare_blocks_rows), or_(False, True)), and_(or_(True, True), le(zeros_diff_cols, compare_blocks_rows)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_rows), mul(ones_diff_rows, ones_diff_cols)), mul(mul(mul(ones_diff_cols, ones_diff_rows), ones_diff_rows), mul(compare_blocks_cols, add(add(ones_diff_rows, zeros_diff_cols), zeros_diff_cols))))
mul(mul(mul(mul(add(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_rows, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows)))), mul(mul(add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_cols))), mul(mul(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_rows)))))
mul(mul(add(mul(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols))), mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols)), add(add(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols))))
add(mul(add(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, mul(compare_blocks_cols, zeros_diff_cols))), add(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_cols)))
mul(add(mul(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, ones_diff_rows)), add(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_cols)))
mul(mul(mul(add(ones_diff_rows, zeros_diff_rows), compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_rows, ones_diff_rows), add(zeros_diff_rows, ones_diff_rows)))
COND TREES:
and_(or_(and_(True, True), le(ARG6, ones_diff_cols)), or_(or_(False, False), and_(True, False)))
le(_if_then_else(ge(_if_then_else(or_(False, False), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(False, 0, zeros_diff_rows)), _if_then_else(le(1, compare_blocks_cols), _if_then_else(False, 1, compare_blocks_rows), _if_then_else(True, ARG7, compare_blocks_cols))), _if_then_else(or_(or_(True, True), and_(True, False)), _if_then_else(and_(True, False), _if_then_else(False, 3, 0), _if_then_else(True, 2, compare_blocks_cols)), _if_then_else(or_(True, False), _if_then_else(False, ARG7, 4), _if_then_else(False, 1, 1))), _if_then_else(le(_if_then_else(True, ARG6, 1), _if_then_else(True, compare_blocks_cols, 2)), _if_then_else(ge(1, ones_diff_cols), _if_then_else(False, ARG6, 4), _if_then_else(False, compare_blocks_rows, ones_diff_rows)), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(True, ARG6, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, ARG6)))), _if_then_else(or_(le(_if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(True, ARG6, 2)), and_(and_(False, True), or_(True, False))), _if_then_else(and_(or_(True, False), le(compare_blocks_rows, compare_blocks_rows)), _if_then_else(ge(zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(True, ones_diff_rows, 4)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, ARG7), _if_then_else(False, 0, ones_diff_rows))), _if_then_else(ge(_if_then_else(False, ARG6, zeros_diff_cols), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(and_(False, False), _if_then_else(True, ones_diff_cols, ARG6), _if_then_else(False, 2, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_cols), _if_then_else(False, 1, 2)))))
and_(or_(or_(False, True), ge(1, ones_diff_cols)), le(_if_then_else(True, zeros_diff_cols, 3), _if_then_else(True, zeros_diff_rows, 2)))
le(_if_then_else(ge(_if_then_else(le(compare_blocks_rows, 4), _if_then_else(False, 1, ones_diff_rows), _if_then_else(False, ones_diff_rows, 2)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(True, 1, compare_blocks_cols))), _if_then_else(and_(ge(0, zeros_diff_cols), ge(ARG7, 4)), _if_then_else(le(compare_blocks_rows, ones_diff_cols), _if_then_else(False, zeros_diff_cols, compare_blocks_rows), _if_then_else(True, ones_diff_rows, 2)), _if_then_else(and_(False, False), _if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(True, 2, 1))), _if_then_else(le(_if_then_else(True, ARG6, zeros_diff_cols), _if_then_else(True, 4, ARG6)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_rows, 1), _if_then_else(False, 0, 4)), _if_then_else(ge(0, compare_blocks_rows), _if_then_else(True, ARG6, 1), _if_then_else(True, zeros_diff_cols, ones_diff_rows)))), _if_then_else(or_(or_(or_(False, True), ge(zeros_diff_cols, zeros_diff_rows)), or_(ge(4, ARG7), le(compare_blocks_rows, ones_diff_rows))), _if_then_else(ge(_if_then_else(True, ARG7, zeros_diff_cols), _if_then_else(False, 4, ARG7)), _if_then_else(ge(ones_diff_cols, zeros_diff_cols), _if_then_else(False, ARG6, 1), _if_then_else(False, ones_diff_cols, 3)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(True, compare_blocks_cols, ones_diff_rows))), _if_then_else(and_(False, or_(True, True)), _if_then_else(or_(True, False), _if_then_else(False, 2, ones_diff_rows), _if_then_else(True, ARG6, ARG7)), _if_then_else(le(zeros_diff_rows, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_cols)))))
le(_if_then_else(le(zeros_diff_rows, 3), _if_then_else(True, 3, 3), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), _if_then_else(True, ARG6, 2), _if_then_else(False, ones_diff_cols, ones_diff_cols)))
VAL TREES:
add(mul(add(add(mul(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))), add(add(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_cols, ones_diff_rows)), add(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)))), add(mul(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols))), add(add(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_rows)), mul(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_rows, mul(add(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows)), mul(mul(compare_blocks_cols, add(mul(ones_diff_rows, compare_blocks_rows), zeros_diff_cols)), add(mul(mul(ones_diff_cols, zeros_diff_cols), compare_blocks_cols), compare_blocks_cols))))))))
add(add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_cols))), mul(mul(ones_diff_rows, add(ones_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, mul(ones_diff_rows, zeros_diff_cols)))))
mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows))), add(mul(add(ones_diff_rows, ones_diff_cols), add(compare_blocks_rows, compare_blocks_cols)), add(add(zeros_diff_cols, compare_blocks_cols), add(add(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_cols, compare_blocks_rows)))))
add(mul(add(mul(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_rows)), add(mul(ones_diff_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols))), add(mul(add(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)), mul(add(add(ones_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows)), add(ones_diff_cols, ones_diff_cols)))), mul(mul(add(mul(compare_blocks_rows, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows))), add(mul(mul(compare_blocks_rows, ones_diff_cols), add(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_cols)))))
mul(mul(add(add(mul(compare_blocks_cols, ones_diff_cols), zeros_diff_cols), add(mul(add(add(mul(zeros_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, zeros_diff_rows)), add(mul(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_rows))), add(add(add(zeros_diff_cols, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)), add(mul(ones_diff_rows, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols)))), add(add(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows)), mul(mul(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_rows))), add(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, zeros_diff_rows)), mul(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols)))))), add(ones_diff_cols, zeros_diff_rows)), add(add(zeros_diff_rows, compare_blocks_cols), add(add(compare_blocks_cols, ones_diff_cols), add(zeros_diff_cols, add(mul(add(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows))), compare_blocks_rows)))))
add(add(mul(mul(mul(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), add(mul(zeros_diff_rows, ones_diff_rows), mul(zeros_diff_rows, ones_diff_rows))), add(mul(add(ones_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(zeros_diff_rows, add(zeros_diff_rows, ones_diff_rows)))), mul(add(add(add(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, zeros_diff_cols))), mul(add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))))
COND TREES:
or_(ge(_if_then_else(or_(True, False), ARG7, _if_then_else(or_(False, True), compare_blocks_rows, compare_blocks_rows)), _if_then_else(False, ARG6, ARG7)), and_(ge(zeros_diff_cols, 1), or_(False, True)))
or_(ge(_if_then_else(False, 1, 4), _if_then_else(True, zeros_diff_rows, 3)), True)
and_(and_(and_(False, False), le(compare_blocks_cols, _if_then_else(True, _if_then_else(True, ARG6, ARG7), ones_diff_rows))), ge(_if_then_else(or_(False, True), _if_then_else(False, 4, 4), 2), _if_then_else(True, zeros_diff_rows, 3)))
ge(_if_then_else(le(_if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(le(zeros_diff_rows, 4), _if_then_else(True, zeros_diff_rows, 3), _if_then_else(False, ARG7, compare_blocks_rows)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, ARG7, ARG7))), _if_then_else(and_(le(ARG6, compare_blocks_cols), ge(compare_blocks_rows, 2)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 0)), _if_then_else(le(_if_then_else(True, ARG7, zeros_diff_cols), _if_then_else(le(zeros_diff_rows, ones_diff_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), 2)), _if_then_else(True, 0, ARG7), _if_then_else(False, 2, ones_diff_cols))))
and_(le(_if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, 4, compare_blocks_rows)), and_(le(compare_blocks_rows, 1), and_(True, ge(3, 0))))
VAL TREES:
add(mul(mul(compare_blocks_cols, compare_blocks_cols), mul(mul(add(ones_diff_rows, compare_blocks_cols), ones_diff_rows), add(zeros_diff_cols, ones_diff_cols))), mul(mul(ones_diff_rows, ones_diff_cols), add(mul(ones_diff_cols, ones_diff_rows), zeros_diff_cols)))
mul(mul(add(ones_diff_rows, mul(zeros_diff_cols, mul(zeros_diff_rows, zeros_diff_rows))), mul(ones_diff_cols, compare_blocks_cols)), add(add(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, compare_blocks_cols)))
mul(mul(add(mul(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols))), mul(mul(mul(ones_diff_cols, compare_blocks_cols), mul(mul(mul(add(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols)), add(add(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols))), compare_blocks_cols)), add(mul(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_cols)))), mul(add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(mul(zeros_diff_cols, zeros_diff_rows), add(compare_blocks_rows, compare_blocks_cols))), add(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, ones_diff_rows)))))
add(add(add(ones_diff_rows, mul(mul(zeros_diff_rows, ones_diff_cols), zeros_diff_cols)), mul(mul(add(zeros_diff_cols, compare_blocks_cols), zeros_diff_cols), compare_blocks_rows)), mul(add(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_rows)))
add(mul(add(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows))), mul(add(add(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), mul(add(mul(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), mul(add(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_cols, compare_blocks_cols))), mul(add(mul(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_cols)), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(mul(mul(add(ones_diff_rows, ones_diff_cols), zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)), add(add(ones_diff_rows, zeros_diff_rows), mul(mul(zeros_diff_rows, zeros_diff_rows), compare_blocks_cols)))
COND TREES:
and_(or_(and_(ge(_if_then_else(ge(compare_blocks_cols, ARG7), _if_then_else(False, 2, 3), _if_then_else(False, ARG6, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, 1, 0), _if_then_else(False, ones_diff_cols, ones_diff_rows))), True), le(ARG6, 2)), or_(or_(False, False), or_(and_(and_(False, False), le(ARG7, ones_diff_rows)), le(_if_then_else(True, ones_diff_rows, ones_diff_rows), _if_then_else(False, ARG6, 2)))))
le(_if_then_else(ge(_if_then_else(or_(False, False), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(False, 0, zeros_diff_rows)), _if_then_else(le(1, compare_blocks_cols), _if_then_else(False, 1, compare_blocks_rows), _if_then_else(True, ARG7, compare_blocks_cols))), _if_then_else(or_(or_(True, True), and_(True, False)), _if_then_else(and_(True, False), _if_then_else(False, 3, 0), _if_then_else(True, 2, compare_blocks_cols)), _if_then_else(or_(True, False), _if_then_else(False, ARG7, 4), _if_then_else(False, 1, 1))), _if_then_else(le(_if_then_else(True, ARG6, 1), _if_then_else(True, compare_blocks_cols, 2)), _if_then_else(ge(1, ones_diff_cols), _if_then_else(False, ARG6, 4), _if_then_else(False, compare_blocks_rows, ones_diff_rows)), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(True, ARG6, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, ARG6)))), _if_then_else(or_(le(_if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(True, ARG6, 2)), and_(and_(False, True), or_(True, False))), _if_then_else(and_(or_(True, False), le(compare_blocks_rows, compare_blocks_rows)), _if_then_else(ge(zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(True, ones_diff_rows, 4)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, ARG7), _if_then_else(False, 0, ones_diff_rows))), _if_then_else(ge(_if_then_else(False, ARG6, _if_then_else(le(_if_then_else(ge(_if_then_else(False, 1, ones_diff_rows), _if_then_else(True, ARG7, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(False, 4, 0)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, ARG7), _if_then_else(and_(and_(True, True), and_(True, False)), _if_then_else(le(3, ARG7), _if_then_else(True, ones_diff_rows, ones_diff_rows), _if_then_else(True, ones_diff_cols, ones_diff_cols)), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(True, ARG7, 3), _if_then_else(True, zeros_diff_rows, ARG7))))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 1, ARG7)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_rows, zeros_diff_cols), _if_then_else(False, ARG7, compare_blocks_cols)), _if_then_else(and_(False, False), _if_then_else(False, 2, zeros_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)))), _if_then_else(le(_if_then_else(or_(True, False), _if_then_else(True, zeros_diff_cols, ARG6), _if_then_else(True, compare_blocks_rows, 3)), _if_then_else(le(2, 1), _if_then_else(False, 3, ones_diff_rows), _if_then_else(False, 0, 1))), _if_then_else(le(_if_then_else(False, compare_blocks_rows, ARG6), _if_then_else(True, 1, ones_diff_rows)), _if_then_else(and_(False, True), _if_then_else(False, ones_diff_cols, 2), _if_then_else(True, zeros_diff_rows, 1)), _if_then_else(le(zeros_diff_rows, 4), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(True, 3, ARG6))), _if_then_else(ge(_if_then_else(False, ones_diff_cols, 3), _if_then_else(False, 4, ones_diff_rows)), _if_then_else(le(zeros_diff_cols, 0), _if_then_else(True, ones_diff_cols, 3), _if_then_else(True, 3, ones_diff_cols)), _if_then_else(and_(True, False), _if_then_else(True, 2, 1), _if_then_else(False, zeros_diff_cols, ARG6)))), _if_then_else(and_(le(_if_then_else(True, 1, 0), _if_then_else(True, 3, 4)), or_(le(4, compare_blocks_rows), and_(False, True))), _if_then_else(or_(or_(True, True), and_(False, False)), _if_then_else(or_(True, False), _if_then_else(True, compare_blocks_cols, ARG6), _if_then_else(False, ones_diff_cols, zeros_diff_cols)), _if_then_else(and_(False, True), _if_then_else(True, 3, ARG7), _if_then_else(False, ones_diff_rows, ARG7))), _if_then_else(and_(or_(True, False), or_(False, False)), _if_then_else(ge(ARG7, compare_blocks_rows), _if_then_else(True, ARG6, 3), _if_then_else(True, 0, 0)), _if_then_else(and_(False, False), _if_then_else(False, 2, ones_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_rows)))))), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(and_(False, False), _if_then_else(True, ones_diff_cols, ARG6), _if_then_else(False, 2, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_cols), _if_then_else(False, 1, 2)))))
and_(or_(or_(False, True), ge(_if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(True, 4, 2), _if_then_else(True, compare_blocks_rows, 0)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, zeros_diff_cols))), _if_then_else(ge(_if_then_else(True, _if_then_else(or_(le(ARG6, ARG6), ge(0, 0)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, ones_diff_cols), _if_then_else(False, ARG6, ARG6)), _if_then_else(le(1, ones_diff_rows), _if_then_else(False, 2, 4), _if_then_else(False, compare_blocks_cols, ARG7))), ARG6), _if_then_else(True, ones_diff_rows, 4)), _if_then_else(or_(True, False), _if_then_else(True, compare_blocks_cols, 2), _if_then_else(True, 2, ARG7)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_cols, zeros_diff_rows), _if_then_else(False, 2, ARG6))), _if_then_else(ge(_if_then_else(False, zeros_diff_rows, 4), _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(or_(False, True), _if_then_else(False, 4, 1), _if_then_else(True, ones_diff_rows, 3)), _if_then_else(or_(True, False), _if_then_else(True, ones_diff_rows, 2), _if_then_else(False, ones_diff_cols, compare_blocks_cols)))), ones_diff_cols)), le(_if_then_else(True, zeros_diff_cols, 3), _if_then_else(True, zeros_diff_rows, 2)))
le(_if_then_else(ge(_if_then_else(le(compare_blocks_rows, 4), _if_then_else(False, 1, ones_diff_rows), _if_then_else(False, ones_diff_rows, 2)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(True, 1, compare_blocks_cols))), _if_then_else(and_(ge(_if_then_else(ge(ones_diff_cols, ARG7), _if_then_else(False, 1, ARG6), _if_then_else(and_(and_(ge(_if_then_else(True, zeros_diff_cols, 1), _if_then_else(True, compare_blocks_cols, zeros_diff_cols)), or_(ge(zeros_diff_cols, ones_diff_cols), ge(zeros_diff_rows, compare_blocks_rows))), and_(ge(_if_then_else(True, zeros_diff_cols, 0), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), ge(_if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, 4, 2)))), compare_blocks_rows, 1)), _if_then_else(and_(True, False), _if_then_else(True, compare_blocks_rows, 3), _if_then_else(False, 0, zeros_diff_rows))), ge(ARG7, 4)), _if_then_else(le(compare_blocks_rows, ones_diff_cols), _if_then_else(False, zeros_diff_cols, compare_blocks_rows), _if_then_else(True, ones_diff_rows, 2)), _if_then_else(and_(False, False), _if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(True, 2, 1))), _if_then_else(le(_if_then_else(True, ARG6, zeros_diff_cols), _if_then_else(True, 4, ARG6)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_rows, 1), _if_then_else(False, 0, 4)), _if_then_else(ge(0, compare_blocks_rows), _if_then_else(True, ARG6, 1), _if_then_else(True, zeros_diff_cols, ones_diff_rows)))), _if_then_else(or_(or_(or_(False, True), ge(zeros_diff_cols, zeros_diff_rows)), or_(ge(4, ARG7), le(compare_blocks_rows, ones_diff_rows))), _if_then_else(ge(_if_then_else(True, ARG7, zeros_diff_cols), _if_then_else(False, 4, ARG7)), _if_then_else(ge(ones_diff_cols, zeros_diff_cols), _if_then_else(False, ARG6, 1), _if_then_else(False, ones_diff_cols, 3)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(True, compare_blocks_cols, ones_diff_rows))), _if_then_else(and_(or_(False, True), or_(True, True)), _if_then_else(or_(True, False), _if_then_else(False, 2, ones_diff_rows), _if_then_else(True, ARG6, ARG7)), _if_then_else(le(zeros_diff_rows, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_cols)))))
le(_if_then_else(le(zeros_diff_rows, 3), _if_then_else(True, 3, _if_then_else(or_(or_(le(ones_diff_rows, compare_blocks_cols), or_(True, True)), and_(ge(ARG6, zeros_diff_cols), le(3, compare_blocks_rows))), _if_then_else(ge(_if_then_else(False, compare_blocks_cols, ARG6), _if_then_else(True, 2, ones_diff_cols)), _if_then_else(le(2, ARG6), _if_then_else(False, 2, 3), _if_then_else(True, ARG6, ARG6)), _if_then_else(ge(0, 2), _if_then_else(False, zeros_diff_cols, compare_blocks_rows), _if_then_else(True, 2, zeros_diff_cols))), _if_then_else(ge(_if_then_else(False, 1, 4), _if_then_else(True, 1, zeros_diff_rows)), _if_then_else(le(zeros_diff_cols, ones_diff_rows), _if_then_else(True, ones_diff_rows, ARG6), _if_then_else(True, ARG6, 4)), _if_then_else(le(compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 4, ARG6), _if_then_else(False, ones_diff_cols, zeros_diff_cols))))), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), _if_then_else(True, ARG6, 2), _if_then_else(False, ones_diff_cols, ones_diff_cols)))
VAL TREES:
add(mul(add(add(mul(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))), add(add(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_cols, ones_diff_rows)), add(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)))), add(mul(mul(add(compare_blocks_cols, zeros_diff_rows), add(ones_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols))), add(add(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_rows)), mul(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_cols))), mul(mul(ones_diff_rows, add(ones_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, mul(ones_diff_rows, zeros_diff_cols)))))
mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows))), zeros_diff_rows)
add(mul(add(mul(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_rows)), add(mul(ones_diff_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols))), add(mul(add(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)), mul(add(add(ones_diff_rows, compare_blocks_rows), add(zeros_diff_rows, ones_diff_rows)), add(ones_diff_cols, ones_diff_cols)))), mul(mul(add(mul(compare_blocks_rows, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows))), add(mul(mul(compare_blocks_rows, ones_diff_cols), add(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_cols)))))
mul(mul(add(add(mul(compare_blocks_cols, ones_diff_cols), zeros_diff_cols), compare_blocks_rows), add(ones_diff_cols, zeros_diff_rows)), add(add(zeros_diff_rows, compare_blocks_cols), add(add(compare_blocks_cols, ones_diff_cols), add(zeros_diff_cols, add(mul(add(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows))), compare_blocks_rows)))))
add(add(mul(mul(mul(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), add(mul(zeros_diff_rows, ones_diff_rows), mul(zeros_diff_rows, ones_diff_rows))), add(mul(add(ones_diff_cols, compare_blocks_rows), mul(zeros_diff_rows, ones_diff_cols)), mul(zeros_diff_rows, add(zeros_diff_rows, ones_diff_rows)))), mul(add(add(add(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, zeros_diff_cols))), mul(add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_cols, zeros_diff_cols), ones_diff_rows))))
COND TREES:
or_(ge(_if_then_else(or_(True, False), ARG7, _if_then_else(False, ones_diff_cols, compare_blocks_rows)), _if_then_else(False, ARG6, ARG7)), and_(ge(zeros_diff_cols, 1), or_(le(_if_then_else(or_(True, True), _if_then_else(False, compare_blocks_rows, 2), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(False, 0, 1))), True)))
or_(ge(_if_then_else(ge(_if_then_else(le(1, ARG6), _if_then_else(False, compare_blocks_cols, 4), _if_then_else(True, ones_diff_cols, ones_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, compare_blocks_rows, ones_diff_cols))), 1, 4), _if_then_else(True, zeros_diff_rows, 3)), or_(or_(True, True), ge(zeros_diff_cols, ARG6)))
and_(and_(and_(False, False), le(compare_blocks_cols, _if_then_else(True, _if_then_else(True, _if_then_else(ge(_if_then_else(False, 4, ones_diff_rows), _if_then_else(True, compare_blocks_cols, ARG7)), _if_then_else(le(zeros_diff_rows, 3), _if_then_else(False, ARG6, compare_blocks_rows), _if_then_else(False, 4, ARG6)), _if_then_else(le(2, 4), _if_then_else(True, compare_blocks_cols, 3), _if_then_else(False, ones_diff_cols, ones_diff_rows))), _if_then_else(False, 4, 1)), 4))), ge(_if_then_else(or_(False, True), _if_then_else(False, 4, 4), 2), _if_then_else(True, zeros_diff_rows, 3)))
ge(_if_then_else(le(_if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, 1)), _if_then_else(le(zeros_diff_rows, 4), ones_diff_cols, _if_then_else(False, ARG7, compare_blocks_rows)), _if_then_else(and_(le(_if_then_else(True, ARG6, ARG7), _if_then_else(True, 1, compare_blocks_cols)), or_(le(zeros_diff_rows, ARG6), or_(True, False))), _if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, ARG7, ARG7))), _if_then_else(and_(le(ARG6, compare_blocks_cols), ge(compare_blocks_rows, 2)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_cols, ones_diff_cols), _if_then_else(False, zeros_diff_rows, 0)), _if_then_else(or_(False, False), _if_then_else(True, 0, ARG7), _if_then_else(False, 2, ones_diff_cols))))
and_(le(_if_then_else(False, 0, zeros_diff_rows), _if_then_else(True, 4, compare_blocks_rows)), and_(le(compare_blocks_rows, 1), and_(True, True)))
VAL TREES:
add(mul(mul(add(mul(zeros_diff_cols, ones_diff_cols), mul(ones_diff_rows, ones_diff_cols)), compare_blocks_cols), mul(mul(add(ones_diff_rows, compare_blocks_cols), ones_diff_rows), add(ones_diff_cols, mul(ones_diff_rows, zeros_diff_cols)))), mul(mul(ones_diff_rows, ones_diff_cols), add(mul(ones_diff_cols, ones_diff_rows), zeros_diff_cols)))
mul(mul(add(ones_diff_rows, mul(zeros_diff_cols, mul(zeros_diff_rows, zeros_diff_rows))), mul(add(zeros_diff_rows, compare_blocks_cols), compare_blocks_cols)), add(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_cols)))
mul(mul(add(mul(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_cols, zeros_diff_cols)), add(add(zeros_diff_cols, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols))), mul(mul(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_rows, zeros_diff_cols)))), mul(add(add(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows)), add(mul(zeros_diff_cols, zeros_diff_rows), add(add(zeros_diff_cols, mul(compare_blocks_rows, add(add(ones_diff_rows, ones_diff_rows), ones_diff_rows))), mul(zeros_diff_rows, compare_blocks_rows)))), add(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, ones_diff_rows)))))
add(add(add(ones_diff_rows, mul(mul(zeros_diff_rows, ones_diff_cols), add(mul(zeros_diff_rows, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols)))), mul(mul(add(zeros_diff_cols, compare_blocks_cols), zeros_diff_cols), compare_blocks_rows)), mul(add(zeros_diff_cols, add(ones_diff_cols, zeros_diff_rows)), mul(ones_diff_rows, compare_blocks_rows)))
add(mul(add(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(compare_blocks_rows, zeros_diff_rows))), mul(add(mul(zeros_diff_cols, compare_blocks_cols), compare_blocks_cols), mul(mul(zeros_diff_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_cols)))), mul(add(mul(add(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), mul(add(zeros_diff_cols, ones_diff_rows), mul(zeros_diff_cols, compare_blocks_cols))), mul(add(mul(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_rows, compare_blocks_cols)), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(mul(mul(compare_blocks_rows, add(compare_blocks_cols, compare_blocks_rows)), add(zeros_diff_rows, ones_diff_rows)), add(add(ones_diff_rows, compare_blocks_rows), mul(mul(ones_diff_rows, zeros_diff_rows), compare_blocks_cols)))
COND TREES:
or_(ge(_if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(False, _if_then_else(False, ones_diff_cols, 0), compare_blocks_rows)), and_(ge(ones_diff_cols, ARG7), or_(ge(_if_then_else(or_(ge(_if_then_else(False, ARG7, ones_diff_rows), _if_then_else(True, 3, zeros_diff_rows)), and_(and_(False, True), ge(compare_blocks_rows, 1))), _if_then_else(ge(_if_then_else(True, 3, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, ARG6)), _if_then_else(le(compare_blocks_rows, 0), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(False, ARG7, ARG7)), _if_then_else(ge(ones_diff_cols, ones_diff_cols), _if_then_else(True, 2, 2), _if_then_else(True, 3, ones_diff_rows))), _if_then_else(and_(ge(4, ones_diff_rows), le(2, ARG6)), _if_then_else(ge(1, ARG6), _if_then_else(False, 1, 3), _if_then_else(True, zeros_diff_rows, ARG7)), _if_then_else(and_(False, False), _if_then_else(False, 1, 4), _if_then_else(and_(or_(and_(False, False), or_(True, True)), le(_if_then_else(False, 1, ARG6), _if_then_else(True, compare_blocks_cols, 2))), _if_then_else(and_(ge(3, ARG7), and_(True, False)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, ones_diff_cols), _if_then_else(False, compare_blocks_cols, 2)), _if_then_else(ge(zeros_diff_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, ones_diff_rows), _if_then_else(True, 0, ones_diff_cols))), _if_then_else(and_(and_(False, True), ge(ones_diff_rows, compare_blocks_cols)), _if_then_else(ge(0, 0), _if_then_else(False, ARG7, ones_diff_cols), _if_then_else(True, ones_diff_cols, ARG6)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_cols, 3), _if_then_else(True, 4, ones_diff_rows))))))), _if_then_else(ge(_if_then_else(le(compare_blocks_cols, ones_diff_rows), _if_then_else(False, 4, _if_then_else(or_(False, False), _if_then_else(True, 0, compare_blocks_rows), _if_then_else(True, 0, ARG7))), _if_then_else(True, zeros_diff_cols, ARG6)), _if_then_else(le(ones_diff_cols, 2), _if_then_else(True, zeros_diff_rows, 1), _if_then_else(False, 1, 1))), _if_then_else(and_(ge(ARG6, zeros_diff_cols), or_(True, False)), _if_then_else(or_(True, False), _if_then_else(True, 3, 4), _if_then_else(True, compare_blocks_rows, 3)), _if_then_else(and_(False, True), _if_then_else(True, 3, 1), _if_then_else(True, ARG7, 1))), _if_then_else(or_(le(3, ones_diff_cols), ge(compare_blocks_cols, ARG6)), _if_then_else(le(4, 3), _if_then_else(False, ARG6, zeros_diff_rows), _if_then_else(False, 1, ones_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, 4, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, ARG6))))), True)))
and_(ge(_if_then_else(True, 2, zeros_diff_rows), _if_then_else(True, _if_then_else(True, 1, zeros_diff_rows), ones_diff_rows)), ge(_if_then_else(ge(4, zeros_diff_cols), ARG7, _if_then_else(True, zeros_diff_cols, 4)), _if_then_else(or_(le(0, 4), or_(False, True)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(ge(_if_then_else(or_(False, False), ones_diff_rows, zeros_diff_cols), _if_then_else(or_(False, True), compare_blocks_rows, 2)), _if_then_else(and_(True, True), _if_then_else(False, 1, _if_then_else(False, 0, 1)), _if_then_else(and_(False, True), _if_then_else(True, 1, _if_then_else(or_(True, True), _if_then_else(or_(and_(False, True), le(4, 4)), _if_then_else(or_(True, True), _if_then_else(le(zeros_diff_cols, ARG6), compare_blocks_cols, 2), _if_then_else(True, _if_then_else(True, 4, _if_then_else(True, 0, ones_diff_rows)), ones_diff_cols)), _if_then_else(True, _if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(le(ARG7, ones_diff_cols), ones_diff_cols, _if_then_else(False, 1, ARG7)))), _if_then_else(False, compare_blocks_rows, compare_blocks_rows))), compare_blocks_rows)), _if_then_else(le(zeros_diff_cols, _if_then_else(True, 4, zeros_diff_cols)), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(False, _if_then_else(False, compare_blocks_rows, ARG7), 1)))), _if_then_else(le(compare_blocks_rows, 1), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_cols)))))
and_(or_(and_(ge(_if_then_else(False, 3, _if_then_else(and_(le(_if_then_else(True, compare_blocks_rows, 1), zeros_diff_rows), or_(or_(True, False), ge(compare_blocks_cols, 2))), _if_then_else(ge(0, compare_blocks_cols), _if_then_else(le(_if_then_else(ge(_if_then_else(True, 3, zeros_diff_cols), _if_then_else(False, ARG7, 1)), _if_then_else(ge(0, compare_blocks_cols), _if_then_else(False, 0, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, ones_diff_rows)), _if_then_else(ge(zeros_diff_cols, 0), _if_then_else(False, ones_diff_cols, 2), _if_then_else(True, ARG6, ARG6))), _if_then_else(le(_if_then_else(False, 1, 1), _if_then_else(True, 1, ARG6)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, zeros_diff_cols), _if_then_else(False, ARG7, ARG6)), _if_then_else(and_(False, False), _if_then_else(True, 2, 0), _if_then_else(True, 3, 3)))), _if_then_else(or_(False, True), ARG6, 2), 2), _if_then_else(False, ARG7, 0)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(True, compare_blocks_rows, ARG6)))), 0), False), or_(False, False)), le(_if_then_else(ge(zeros_diff_rows, ones_diff_cols), ones_diff_rows, 2), _if_then_else(False, ARG6, _if_then_else(False, _if_then_else(False, _if_then_else(True, compare_blocks_cols, ARG6), zeros_diff_rows), _if_then_else(False, ones_diff_rows, 4)))))
and_(or_(and_(le(compare_blocks_rows, compare_blocks_rows), and_(True, True)), or_(True, True)), ge(_if_then_else(True, compare_blocks_rows, ARG6), _if_then_else(le(3, ones_diff_rows), zeros_diff_cols, _if_then_else(True, 2, 2))))
and_(or_(or_(ge(_if_then_else(and_(True, False), _if_then_else(True, ARG7, ARG7), _if_then_else(False, 2, zeros_diff_cols)), _if_then_else(and_(True, True), _if_then_else(True, 3, 4), _if_then_else(False, zeros_diff_rows, zeros_diff_cols))), le(_if_then_else(or_(False, False), _if_then_else(False, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, ones_diff_rows, 2)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_cols, 0), _if_then_else(True, zeros_diff_rows, ARG6)))), ge(_if_then_else(le(_if_then_else(True, 2, 2), _if_then_else(False, compare_blocks_rows, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(and_(or_(le(_if_then_else(True, 1, zeros_diff_rows), 2), False), or_(True, True)), _if_then_else(and_(le(4, zeros_diff_cols), or_(True, False)), _if_then_else(le(compare_blocks_rows, 2), compare_blocks_cols, _if_then_else(True, _if_then_else(True, ARG6, 0), zeros_diff_rows)), _if_then_else(and_(False, and_(False, True)), compare_blocks_rows, compare_blocks_cols)), _if_then_else(and_(False, and_(False, or_(False, False))), _if_then_else(and_(True, True), ARG6, 3), _if_then_else(True, ARG6, ones_diff_rows)))), _if_then_else(and_(True, False), _if_then_else(True, compare_blocks_cols, 0), _if_then_else(True, zeros_diff_rows, ARG7))), _if_then_else(or_(le(compare_blocks_rows, ARG7), or_(True, False)), _if_then_else(ge(ones_diff_cols, 3), _if_then_else(False, 3, 3), _if_then_else(False, ones_diff_cols, 3)), _if_then_else(or_(False, False), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(False, ones_diff_rows, ARG6))))), and_(and_(False, True), or_(True, False)))
VAL TREES:
add(add(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_cols, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_cols)))
mul(add(add(compare_blocks_cols, add(compare_blocks_cols, zeros_diff_cols)), mul(ones_diff_rows, zeros_diff_cols)), add(add(zeros_diff_cols, compare_blocks_cols), add(zeros_diff_rows, ones_diff_cols)))
mul(mul(mul(add(ones_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_rows)), mul(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, ones_diff_cols))), add(mul(mul(ones_diff_cols, compare_blocks_cols), add(zeros_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), add(ones_diff_cols, compare_blocks_cols))))
mul(add(add(ones_diff_rows, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), mul(mul(mul(add(ones_diff_rows, ones_diff_cols), compare_blocks_rows), zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows)))
add(add(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_rows)), add(add(zeros_diff_cols, ones_diff_rows), add(zeros_diff_cols, compare_blocks_cols)))
mul(add(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), add(mul(add(zeros_diff_cols, compare_blocks_cols), ones_diff_cols), add(compare_blocks_cols, zeros_diff_rows)))
COND TREES:
and_(or_(and_(True, True), le(ARG6, 2)), or_(or_(False, ge(zeros_diff_cols, 1)), and_(True, False)))
le(_if_then_else(ge(_if_then_else(or_(False, False), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(False, 0, zeros_diff_rows)), _if_then_else(le(1, compare_blocks_cols), _if_then_else(False, 1, compare_blocks_rows), _if_then_else(True, ARG7, compare_blocks_cols))), _if_then_else(or_(or_(True, True), and_(True, False)), _if_then_else(and_(True, False), _if_then_else(False, 3, 0), _if_then_else(True, 2, compare_blocks_cols)), _if_then_else(or_(True, False), _if_then_else(False, ARG7, 4), _if_then_else(False, 1, 1))), _if_then_else(le(_if_then_else(True, ARG6, 1), _if_then_else(True, compare_blocks_cols, 2)), _if_then_else(ge(1, ones_diff_cols), _if_then_else(False, ARG6, 4), _if_then_else(False, compare_blocks_rows, ones_diff_rows)), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(True, ARG6, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, ARG6)))), _if_then_else(or_(le(_if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(True, ARG6, 2)), and_(and_(False, True), or_(True, False))), _if_then_else(and_(or_(True, False), le(compare_blocks_rows, compare_blocks_rows)), _if_then_else(ge(zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(True, ones_diff_rows, 4)), _if_then_else(and_(True, ge(compare_blocks_rows, 3)), _if_then_else(False, compare_blocks_rows, ARG7), _if_then_else(False, 0, ones_diff_rows))), _if_then_else(ge(_if_then_else(False, ARG6, zeros_diff_cols), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(and_(False, False), _if_then_else(True, ones_diff_cols, ARG6), _if_then_else(False, 2, zeros_diff_cols)), _if_then_else(le(_if_then_else(le(4, _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(or_(False, False), zeros_diff_cols, 0), _if_then_else(le(0, 4), ARG7, 3)), _if_then_else(or_(False, True), _if_then_else(and_(False, False), _if_then_else(False, ones_diff_cols, 3), ones_diff_cols), _if_then_else(and_(False, False), ARG7, 1))), _if_then_else(True, ones_diff_rows, compare_blocks_cols), _if_then_else(False, 1, 2)))))
and_(or_(or_(False, True), ge(1, ones_diff_cols)), le(_if_then_else(True, zeros_diff_cols, _if_then_else(ge(_if_then_else(True, zeros_diff_cols, ARG6), _if_then_else(False, ARG6, 0)), _if_then_else(or_(True, le(ARG7, ones_diff_cols)), _if_then_else(True, ARG6, ones_diff_rows), _if_then_else(False, 3, 2)), _if_then_else(le(zeros_diff_rows, _if_then_else(True, compare_blocks_cols, compare_blocks_cols)), _if_then_else(True, ones_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, 3)))), _if_then_else(True, zeros_diff_rows, 3)))
le(_if_then_else(ge(_if_then_else(le(compare_blocks_rows, 4), _if_then_else(False, 1, ones_diff_rows), _if_then_else(False, ones_diff_rows, 2)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(True, 1, compare_blocks_cols))), _if_then_else(and_(ge(0, zeros_diff_cols), ge(ARG7, 4)), _if_then_else(le(compare_blocks_rows, ones_diff_cols), _if_then_else(False, zeros_diff_cols, compare_blocks_rows), _if_then_else(True, ones_diff_cols, 2)), _if_then_else(and_(False, False), _if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(True, 2, 1))), _if_then_else(le(_if_then_else(True, _if_then_else(and_(le(4, 3), le(compare_blocks_cols, 3)), _if_then_else(and_(True, False), _if_then_else(True, compare_blocks_rows, zeros_diff_rows), _if_then_else(False, ones_diff_cols, zeros_diff_rows)), _if_then_else(le(ones_diff_rows, ARG6), _if_then_else(True, 2, ones_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows))), zeros_diff_cols), _if_then_else(True, 4, ARG6)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_rows, 1), _if_then_else(False, 0, 4)), _if_then_else(ge(0, compare_blocks_rows), _if_then_else(True, ARG6, 1), _if_then_else(True, zeros_diff_cols, ones_diff_rows)))), _if_then_else(or_(or_(or_(False, True), ge(zeros_diff_cols, zeros_diff_rows)), or_(ge(4, ARG7), le(compare_blocks_rows, ones_diff_rows))), _if_then_else(ge(_if_then_else(True, ARG7, zeros_diff_cols), _if_then_else(False, 4, ARG7)), _if_then_else(ge(ones_diff_cols, zeros_diff_cols), _if_then_else(False, ARG6, 1), _if_then_else(False, ones_diff_cols, 3)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(True, compare_blocks_cols, ones_diff_rows))), _if_then_else(and_(or_(False, True), or_(True, True)), _if_then_else(or_(True, False), _if_then_else(False, 2, ones_diff_rows), _if_then_else(True, ARG6, ARG7)), _if_then_else(le(zeros_diff_rows, 0), _if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_cols)))))
le(_if_then_else(le(zeros_diff_rows, 3), _if_then_else(True, 3, 3), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), _if_then_else(True, ARG6, 2), _if_then_else(False, ones_diff_cols, ones_diff_cols)))
VAL TREES:
add(mul(add(add(mul(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_cols)), mul(zeros_diff_rows, add(compare_blocks_cols, compare_blocks_rows))), add(add(mul(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)), add(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)))), add(mul(add(add(add(add(mul(ones_diff_rows, zeros_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(mul(compare_blocks_rows, compare_blocks_cols), mul(ones_diff_rows, ones_diff_cols))), mul(mul(add(compare_blocks_cols, compare_blocks_cols), mul(zeros_diff_cols, ones_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, compare_blocks_rows)))), mul(add(mul(add(compare_blocks_cols, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_cols))), mul(add(add(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_cols, zeros_diff_cols)), add(mul(compare_blocks_rows, compare_blocks_cols), add(zeros_diff_cols, ones_diff_cols))))), add(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols))), add(add(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_rows)), mul(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_cols))), mul(mul(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, mul(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_rows))), add(zeros_diff_rows, zeros_diff_cols))))
mul(add(add(add(ones_diff_rows, zeros_diff_cols), mul(mul(compare_blocks_rows, compare_blocks_cols), add(ones_diff_cols, zeros_diff_rows))), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows))), add(ones_diff_cols, ones_diff_cols))
add(mul(add(mul(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_rows)), add(mul(ones_diff_cols, ones_diff_rows), add(ones_diff_cols, compare_blocks_cols))), add(mul(add(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)), mul(mul(zeros_diff_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_cols)))), ones_diff_rows)
mul(mul(add(add(mul(compare_blocks_cols, mul(zeros_diff_rows, ones_diff_rows)), add(add(add(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), mul(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_rows)))), compare_blocks_rows), add(ones_diff_cols, zeros_diff_rows)), add(add(zeros_diff_rows, compare_blocks_cols), add(add(compare_blocks_cols, ones_diff_cols), add(zeros_diff_cols, add(ones_diff_cols, compare_blocks_rows)))))
add(add(mul(mul(mul(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), add(mul(mul(ones_diff_cols, zeros_diff_rows), add(mul(compare_blocks_cols, zeros_diff_cols), zeros_diff_rows)), add(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, ones_diff_rows)))), add(mul(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)))), mul(add(add(add(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, zeros_diff_cols))), mul(add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)))))
COND TREES:
and_(le(_if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(or_(False, True), compare_blocks_rows, 0)), le(_if_then_else(False, zeros_diff_cols, 3), _if_then_else(True, zeros_diff_cols, ones_diff_cols)))
or_(and_(le(_if_then_else(False, ARG7, ARG6), _if_then_else(True, ARG7, 0)), le(_if_then_else(False, ARG6, 2), _if_then_else(False, compare_blocks_cols, compare_blocks_cols))), le(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, ones_diff_cols), _if_then_else(False, ARG7, zeros_diff_rows)), _if_then_else(ge(_if_then_else(False, 1, 4), _if_then_else(True, zeros_diff_rows, 3)), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, 2))))
and_(ge(_if_then_else(and_(False, True), _if_then_else(False, ARG7, ARG7), _if_then_else(True, 2, 2)), _if_then_else(and_(False, False), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, 1, 2))), ge(_if_then_else(and_(True, True), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, ARG7)), _if_then_else(le(1, 3), _if_then_else(False, 1, 0), _if_then_else(False, ones_diff_rows, zeros_diff_rows))))
or_(ge(_if_then_else(True, _if_then_else(ge(_if_then_else(False, ARG7, compare_blocks_rows), ones_diff_cols), _if_then_else(False, 1, 3), _if_then_else(False, ARG6, 4)), ones_diff_cols), _if_then_else(False, 3, zeros_diff_rows)), True)
or_(and_(or_(False, False), and_(False, le(zeros_diff_cols, compare_blocks_rows))), and_(or_(True, False), or_(True, True)))
VAL TREES:
mul(add(mul(mul(mul(zeros_diff_rows, ones_diff_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(mul(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))), ones_diff_cols), add(add(mul(zeros_diff_rows, compare_blocks_cols), ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)))
mul(add(compare_blocks_cols, add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, ones_diff_rows)))
mul(mul(add(ones_diff_cols, ones_diff_cols), add(add(add(compare_blocks_cols, zeros_diff_rows), compare_blocks_rows), zeros_diff_cols)), add(add(zeros_diff_cols, zeros_diff_cols), mul(zeros_diff_rows, mul(zeros_diff_cols, compare_blocks_cols))))
mul(add(mul(zeros_diff_rows, ones_diff_rows), mul(compare_blocks_rows, compare_blocks_cols)), add(mul(zeros_diff_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_rows)))
mul(mul(mul(add(add(mul(mul(ones_diff_cols, ones_diff_cols), add(compare_blocks_rows, ones_diff_cols)), mul(add(ones_diff_rows, zeros_diff_rows), add(zeros_diff_rows, compare_blocks_rows))), compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), add(mul(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_rows))), add(add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(zeros_diff_rows, compare_blocks_cols))))
mul(add(add(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows))), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(compare_blocks_cols, mul(ones_diff_cols, zeros_diff_cols))))
COND TREES:
or_(le(_if_then_else(or_(and_(True, True), le(1, 1)), _if_then_else(ge(4, 1), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, ARG7)), _if_then_else(or_(False, True), _if_then_else(False, 1, ones_diff_cols), _if_then_else(True, compare_blocks_cols, compare_blocks_rows))), _if_then_else(ge(_if_then_else(False, 3, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, zeros_diff_rows)), _if_then_else(ge(3, ARG6), _if_then_else(False, 1, ones_diff_cols), _if_then_else(False, compare_blocks_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, 0, compare_blocks_rows), _if_then_else(True, 0, ARG7)))), ge(_if_then_else(le(_if_then_else(True, ARG7, 4), _if_then_else(False, 2, ARG6)), _if_then_else(ge(_if_then_else(and_(and_(False, False), and_(le(compare_blocks_cols, zeros_diff_rows), True)), _if_then_else(and_(False, False), _if_then_else(False, _if_then_else(True, ARG6, compare_blocks_rows), ones_diff_cols), _if_then_else(False, _if_then_else(False, compare_blocks_rows, ARG7), 3)), _if_then_else(or_(True, False), _if_then_else(or_(False, True), 1, 2), _if_then_else(False, _if_then_else(False, 1, 1), ones_diff_rows))), ARG7), _if_then_else(False, 0, 0), _if_then_else(True, 3, 1)), _if_then_else(or_(False, True), _if_then_else(True, 4, ARG7), _if_then_else(True, 2, ones_diff_cols))), _if_then_else(and_(and_(True, False), and_(True, False)), _if_then_else(le(compare_blocks_rows, ARG6), _if_then_else(True, compare_blocks_cols, ARG7), _if_then_else(False, ARG7, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(False, compare_blocks_cols, 3)))))
le(_if_then_else(or_(True, True), _if_then_else(or_(and_(False, True), le(4, 4)), _if_then_else(or_(True, True), _if_then_else(le(zeros_diff_cols, ARG6), compare_blocks_cols, 2), _if_then_else(True, _if_then_else(True, 4, _if_then_else(True, 0, ones_diff_rows)), ones_diff_cols)), _if_then_else(True, _if_then_else(True, ARG6, compare_blocks_cols), _if_then_else(le(ARG7, ones_diff_cols), ones_diff_cols, _if_then_else(False, 1, ARG7)))), _if_then_else(False, compare_blocks_rows, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(False, 1, compare_blocks_rows), _if_then_else(True, ARG7, compare_blocks_cols)))
or_(and_(le(1, 1), ge(compare_blocks_rows, 1)), or_(le(_if_then_else(False, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, 1, _if_then_else(le(_if_then_else(ge(zeros_diff_rows, 4), _if_then_else(False, compare_blocks_cols, 0), _if_then_else(True, compare_blocks_cols, ARG6)), _if_then_else(or_(False, True), _if_then_else(True, 1, ones_diff_rows), _if_then_else(False, ARG7, compare_blocks_rows))), _if_then_else(and_(True, ge(zeros_diff_rows, 3)), _if_then_else(le(4, ARG6), _if_then_else(True, 2, compare_blocks_cols), _if_then_else(True, ones_diff_rows, compare_blocks_cols)), _if_then_else(ge(1, ARG7), _if_then_else(True, ARG7, zeros_diff_rows), _if_then_else(False, 1, 3))), _if_then_else(and_(le(ones_diff_cols, 2), le(2, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(True, 2, ones_diff_cols), _if_then_else(False, ones_diff_cols, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(True, 0, compare_blocks_cols), _if_then_else(False, ones_diff_rows, 3)))))), or_(and_(False, True), True)))
or_(or_(or_(False, and_(and_(False, True), le(ARG7, compare_blocks_rows))), le(3, ARG6)), and_(ge(_if_then_else(le(ARG7, 0), _if_then_else(True, 0, zeros_diff_cols), zeros_diff_rows), _if_then_else(True, _if_then_else(True, ARG6, compare_blocks_cols), ones_diff_rows)), le(_if_then_else(True, zeros_diff_cols, 0), _if_then_else(True, _if_then_else(le(ARG6, ARG6), 1, ones_diff_rows), 0))))
or_(and_(ge(ARG6, compare_blocks_rows), or_(False, True)), ge(compare_blocks_cols, _if_then_else(False, compare_blocks_rows, 1)))
VAL TREES:
add(mul(mul(ones_diff_rows, zeros_diff_rows), mul(ones_diff_rows, ones_diff_cols)), mul(mul(mul(ones_diff_cols, ones_diff_rows), ones_diff_rows), mul(compare_blocks_cols, add(add(ones_diff_rows, zeros_diff_cols), zeros_diff_cols))))
mul(mul(mul(mul(add(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))), add(mul(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_rows, ones_diff_rows)), add(add(zeros_diff_rows, zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows)))), mul(mul(add(mul(compare_blocks_cols, zeros_diff_rows), mul(zeros_diff_rows, ones_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_cols))), mul(mul(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, zeros_diff_rows), add(compare_blocks_rows, ones_diff_rows)))))
mul(mul(add(mul(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols))), mul(mul(add(compare_blocks_cols, add(add(add(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_rows, zeros_diff_rows)), mul(mul(zeros_diff_cols, compare_blocks_rows), add(compare_blocks_rows, zeros_diff_rows)))), add(compare_blocks_rows, compare_blocks_cols)), add(add(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols))))
add(mul(add(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, mul(compare_blocks_cols, zeros_diff_cols))), add(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, compare_blocks_cols)))
mul(add(mul(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, ones_diff_rows)), add(add(zeros_diff_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_cols)))
mul(mul(mul(add(ones_diff_rows, zeros_diff_rows), compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols)), mul(add(mul(mul(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_cols)), mul(add(zeros_diff_rows, compare_blocks_rows), add(ones_diff_rows, ones_diff_rows))), ones_diff_rows), add(zeros_diff_rows, ones_diff_rows)))
COND TREES:
ge(_if_then_else(ge(4, 3), _if_then_else(True, zeros_diff_cols, ARG7), _if_then_else(True, ARG7, zeros_diff_rows)), _if_then_else(or_(False, True), _if_then_else(False, 3, _if_then_else(and_(ge(ones_diff_cols, compare_blocks_cols), and_(and_(False, True), False)), _if_then_else(and_(or_(False, False), True), _if_then_else(False, _if_then_else(True, ARG7, ones_diff_rows), _if_then_else(True, ones_diff_cols, 4)), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), _if_then_else(ge(zeros_diff_rows, ARG7), _if_then_else(False, 1, 4), _if_then_else(True, _if_then_else(False, _if_then_else(True, zeros_diff_rows, 3), _if_then_else(True, compare_blocks_rows, ARG7)), 4)))), _if_then_else(True, 3, 4)))
le(_if_then_else(le(_if_then_else(le(ARG6, zeros_diff_cols), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, 0, ARG7)), _if_then_else(le(0, compare_blocks_rows), _if_then_else(False, 2, ones_diff_rows), _if_then_else(True, ARG6, 3))), _if_then_else(or_(ge(compare_blocks_rows, zeros_diff_rows), ge(1, 4)), _if_then_else(and_(True, True), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(True, ARG7, 0)), _if_then_else(le(3, 2), _if_then_else(True, zeros_diff_cols, 2), _if_then_else(False, ARG7, zeros_diff_cols))), _if_then_else(or_(ge(zeros_diff_rows, ARG7), le(ones_diff_rows, 4)), _if_then_else(ge(ARG7, 3), _if_then_else(False, 3, _if_then_else(le(_if_then_else(True, ARG6, 3), _if_then_else(True, 1, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_rows, zeros_diff_cols), _if_then_else(True, compare_blocks_cols, 3)), _if_then_else(and_(True, False), _if_then_else(True, ARG7, ones_diff_cols), _if_then_else(True, 4, compare_blocks_rows)))), _if_then_else(False, zeros_diff_rows, 4)), _if_then_else(or_(False, False), _if_then_else(False, 1, 3), _if_then_else(True, ARG7, zeros_diff_cols)))), _if_then_else(le(_if_then_else(or_(False, False), _if_then_else(True, zeros_diff_cols, ARG6), _if_then_else(False, ARG6, 3)), _if_then_else(ge(4, zeros_diff_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, 0))), _if_then_else(or_(and_(False, False), le(ones_diff_rows, 1)), _if_then_else(ge(1, 1), _if_then_else(True, ARG6, ones_diff_rows), _if_then_else(True, zeros_diff_rows, ARG6)), _if_then_else(False, _if_then_else(False, compare_blocks_rows, 4), _if_then_else(True, 4, compare_blocks_cols))), _if_then_else(ge(_if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(False, 4, zeros_diff_cols)), _if_then_else(ge(0, ARG7), _if_then_else(False, 3, zeros_diff_rows), _if_then_else(ge(_if_then_else(False, zeros_diff_rows, 0), _if_then_else(le(ARG7, ones_diff_cols), ones_diff_cols, 2)), compare_blocks_rows, 0)), _if_then_else(or_(True, False), _if_then_else(True, ARG7, ARG7), _if_then_else(False, 0, ones_diff_rows)))))
and_(ge(_if_then_else(le(_if_then_else(False, ARG6, ARG6), _if_then_else(True, 0, _if_then_else(True, _if_then_else(True, compare_blocks_cols, 3), zeros_diff_rows))), _if_then_else(and_(and_(le(1, compare_blocks_rows), False), False), _if_then_else(or_(False, or_(True, True)), 3, ones_diff_rows), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), _if_then_else(and_(and_(True, False), False), _if_then_else(True, ones_diff_rows, _if_then_else(False, 1, zeros_diff_cols)), _if_then_else(True, _if_then_else(ge(ARG6, 1), _if_then_else(True, 1, ones_diff_rows), 1), _if_then_else(or_(True, False), 1, compare_blocks_rows)))), _if_then_else(False, _if_then_else(False, _if_then_else(le(2, zeros_diff_rows), _if_then_else(True, ones_diff_rows, 3), _if_then_else(True, 0, ARG7)), 2), 3)), False)
ge(_if_then_else(and_(False, or_(True, False)), _if_then_else(or_(True, False), ARG7, _if_then_else(False, zeros_diff_rows, 1)), _if_then_else(le(_if_then_else(True, ARG6, zeros_diff_cols), _if_then_else(True, 4, ARG6)), 1, ones_diff_cols)), _if_then_else(le(_if_then_else(False, compare_blocks_cols, _if_then_else(False, zeros_diff_rows, ones_diff_cols)), ARG6), ones_diff_rows, _if_then_else(True, _if_then_else(True, zeros_diff_cols, 4), ARG7)))
and_(le(_if_then_else(le(0, compare_blocks_rows), _if_then_else(False, 3, ones_diff_rows), _if_then_else(True, 3, 4)), _if_then_else(True, _if_then_else(False, 3, ones_diff_rows), _if_then_else(False, ones_diff_rows, 1))), ge(_if_then_else(le(ARG7, ones_diff_cols), _if_then_else(True, _if_then_else(and_(ge(3, 0), or_(True, False)), _if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(False, zeros_diff_cols, ARG6), _if_then_else(False, ARG6, ARG6)), _if_then_else(le(ARG6, ARG7), _if_then_else(False, compare_blocks_rows, ARG6), _if_then_else(True, ARG6, 4))), ARG7), 2), _if_then_else(ge(ARG7, 3), _if_then_else(True, compare_blocks_cols, 3), _if_then_else(True, compare_blocks_cols, 4))))
VAL TREES:
add(mul(mul(ones_diff_rows, compare_blocks_cols), mul(compare_blocks_rows, compare_blocks_cols)), mul(mul(compare_blocks_cols, mul(zeros_diff_rows, zeros_diff_rows)), add(ones_diff_rows, compare_blocks_cols)))
add(add(add(ones_diff_rows, compare_blocks_cols), add(compare_blocks_cols, compare_blocks_rows)), add(mul(zeros_diff_cols, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_cols)))
add(mul(add(zeros_diff_cols, mul(ones_diff_rows, compare_blocks_rows)), add(compare_blocks_rows, zeros_diff_rows)), add(add(ones_diff_rows, ones_diff_rows), add(mul(compare_blocks_rows, ones_diff_cols), ones_diff_rows)))
mul(add(add(add(ones_diff_cols, zeros_diff_rows), compare_blocks_cols), mul(mul(zeros_diff_rows, zeros_diff_cols), zeros_diff_rows)), mul(mul(zeros_diff_rows, ones_diff_rows), add(zeros_diff_cols, mul(ones_diff_rows, ones_diff_cols))))
mul(mul(mul(mul(add(ones_diff_rows, ones_diff_cols), mul(ones_diff_cols, ones_diff_cols)), add(add(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols))), add(mul(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, zeros_diff_rows)), add(add(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, ones_diff_cols)))), mul(add(mul(add(ones_diff_rows, ones_diff_rows), mul(ones_diff_cols, compare_blocks_cols)), mul(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_cols))), add(mul(add(ones_diff_cols, zeros_diff_rows), mul(ones_diff_cols, ones_diff_rows)), add(add(ones_diff_cols, compare_blocks_cols), mul(zeros_diff_rows, compare_blocks_rows)))))
add(mul(add(add(compare_blocks_rows, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_rows)), add(add(zeros_diff_rows, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_cols))), mul(add(add(zeros_diff_rows, ones_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)), mul(add(ones_diff_rows, zeros_diff_cols), add(ones_diff_cols, zeros_diff_cols))))
COND TREES:
and_(or_(and_(True, True), le(ARG6, 2)), True)
le(_if_then_else(ge(_if_then_else(or_(False, False), _if_then_else(True, ARG6, ones_diff_cols), _if_then_else(False, 0, zeros_diff_rows)), _if_then_else(le(1, compare_blocks_cols), _if_then_else(False, 1, compare_blocks_rows), _if_then_else(and_(False, False), ARG7, compare_blocks_cols))), _if_then_else(or_(or_(True, True), and_(True, False)), _if_then_else(and_(True, False), _if_then_else(False, 3, 0), _if_then_else(True, 2, compare_blocks_cols)), _if_then_else(or_(True, False), _if_then_else(False, 4, 4), _if_then_else(False, 1, 1))), _if_then_else(le(_if_then_else(True, ARG6, 1), _if_then_else(True, compare_blocks_cols, 2)), _if_then_else(ge(1, ones_diff_cols), _if_then_else(False, ARG6, 4), _if_then_else(False, compare_blocks_rows, ones_diff_rows)), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(True, ARG6, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, ARG6)))), _if_then_else(or_(le(_if_then_else(False, compare_blocks_cols, ones_diff_rows), _if_then_else(True, ARG6, 2)), and_(and_(False, True), or_(True, False))), _if_then_else(and_(or_(True, False), le(compare_blocks_rows, compare_blocks_rows)), _if_then_else(ge(zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(True, ones_diff_rows, 4)), _if_then_else(and_(True, False), _if_then_else(False, compare_blocks_rows, ARG7), _if_then_else(False, 0, ones_diff_rows))), _if_then_else(ge(_if_then_else(False, ARG6, zeros_diff_cols), _if_then_else(False, ones_diff_rows, compare_blocks_rows)), _if_then_else(and_(ge(1, 0), False), _if_then_else(True, ones_diff_cols, ARG6), _if_then_else(False, 2, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_rows, compare_blocks_cols), _if_then_else(False, 1, 2)))))
and_(or_(or_(False, ge(ones_diff_cols, _if_then_else(le(0, compare_blocks_rows), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), 4, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, zeros_diff_cols)))), ge(1, compare_blocks_rows)), True)
le(_if_then_else(ge(_if_then_else(le(compare_blocks_rows, 4), _if_then_else(False, 1, ones_diff_rows), _if_then_else(False, ones_diff_rows, 2)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(True, 1, compare_blocks_cols))), _if_then_else(and_(ge(0, zeros_diff_cols), ge(ARG7, 4)), _if_then_else(le(compare_blocks_rows, ones_diff_cols), _if_then_else(False, zeros_diff_cols, compare_blocks_rows), _if_then_else(True, ones_diff_rows, 2)), _if_then_else(and_(False, False), ones_diff_rows, _if_then_else(True, 2, 1))), _if_then_else(ge(_if_then_else(and_(True, False), ones_diff_rows, zeros_diff_rows), _if_then_else(ge(3, 0), zeros_diff_cols, ones_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_rows, 1), _if_then_else(False, _if_then_else(True, ARG7, zeros_diff_rows), 4)), _if_then_else(ge(0, compare_blocks_rows), _if_then_else(True, ARG6, 1), _if_then_else(True, zeros_diff_cols, ones_diff_rows)))), _if_then_else(or_(or_(or_(False, True), ge(zeros_diff_cols, zeros_diff_rows)), or_(ge(4, ARG7), le(compare_blocks_rows, ones_diff_rows))), _if_then_else(ge(_if_then_else(True, ARG7, zeros_diff_cols), _if_then_else(False, 4, ARG7)), _if_then_else(ge(ones_diff_cols, zeros_diff_cols), _if_then_else(False, ARG6, 1), _if_then_else(False, ones_diff_cols, 3)), _if_then_else(or_(False, True), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(True, compare_blocks_cols, ones_diff_rows))), _if_then_else(and_(or_(False, True), or_(ge(_if_then_else(ge(zeros_diff_rows, ones_diff_cols), _if_then_else(True, 1, 1), _if_then_else(True, ARG7, ones_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_cols, 4), _if_then_else(False, zeros_diff_rows, ones_diff_rows))), True)), _if_then_else(or_(True, False), _if_then_else(False, 2, ones_diff_rows), _if_then_else(True, ARG6, ARG7)), _if_then_else(le(zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, compare_blocks_cols)))))
le(ARG6, _if_then_else(ge(ones_diff_cols, compare_blocks_cols), _if_then_else(ge(1, compare_blocks_rows), ARG6, 2), _if_then_else(or_(True, True), ones_diff_cols, ones_diff_cols)))
VAL TREES:
add(mul(add(add(mul(ones_diff_rows, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_rows))), add(add(mul(compare_blocks_rows, ones_diff_rows), mul(compare_blocks_rows, ones_diff_rows)), add(mul(compare_blocks_cols, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)))), add(mul(mul(add(compare_blocks_cols, add(compare_blocks_rows, ones_diff_cols)), add(ones_diff_cols, compare_blocks_rows)), add(mul(zeros_diff_cols, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols))), add(add(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, zeros_diff_rows)), mul(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)))))
add(add(mul(compare_blocks_cols, zeros_diff_cols), add(add(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_cols))), mul(mul(mul(compare_blocks_cols, compare_blocks_cols), add(ones_diff_rows, zeros_diff_cols)), mul(mul(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_cols))))
mul(add(add(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), mul(zeros_diff_cols, add(compare_blocks_cols, compare_blocks_cols)))), add(mul(add(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, ones_diff_cols)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_rows))))
add(mul(add(mul(add(ones_diff_rows, zeros_diff_cols), mul(compare_blocks_rows, compare_blocks_rows)), add(mul(ones_diff_cols, compare_blocks_rows), add(ones_diff_cols, compare_blocks_cols))), add(mul(add(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, compare_blocks_cols)), mul(mul(zeros_diff_cols, zeros_diff_rows), add(ones_diff_cols, ones_diff_cols)))), mul(mul(add(mul(compare_blocks_rows, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, compare_blocks_rows))), add(mul(mul(compare_blocks_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols)), add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_cols)))))
mul(mul(add(add(ones_diff_cols, zeros_diff_rows), compare_blocks_rows), add(ones_diff_cols, zeros_diff_rows)), add(add(zeros_diff_rows, compare_blocks_cols), add(add(compare_blocks_cols, ones_diff_cols), add(zeros_diff_cols, add(ones_diff_cols, compare_blocks_rows)))))
add(add(mul(mul(mul(compare_blocks_cols, compare_blocks_rows), add(compare_blocks_cols, ones_diff_rows)), add(mul(zeros_diff_rows, ones_diff_rows), mul(zeros_diff_rows, ones_diff_rows))), add(mul(compare_blocks_cols, mul(zeros_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, ones_diff_rows)))), mul(add(add(add(zeros_diff_cols, compare_blocks_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, zeros_diff_cols))), mul(add(add(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(zeros_diff_cols, zeros_diff_cols), add(compare_blocks_cols, zeros_diff_cols)))))
COND TREES:
and_(le(_if_then_else(or_(or_(True, False), True), ones_diff_cols, zeros_diff_cols), _if_then_else(or_(False, True), compare_blocks_rows, 0)), le(_if_then_else(False, zeros_diff_cols, 3), _if_then_else(True, ones_diff_rows, ones_diff_cols)))
or_(and_(le(_if_then_else(False, ARG7, ARG6), _if_then_else(True, ARG7, 0)), le(_if_then_else(False, ARG6, 2), _if_then_else(True, _if_then_else(or_(ge(_if_then_else(True, 3, ARG6), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), and_(and_(False, False), and_(False, False))), _if_then_else(and_(and_(False, False), or_(True, False)), _if_then_else(or_(False, False), _if_then_else(False, 1, 0), _if_then_else(True, 3, 1)), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, ARG6, zeros_diff_rows))), _if_then_else(or_(le(zeros_diff_cols, 3), and_(False, True)), _if_then_else(or_(False, False), _if_then_else(True, 2, ARG6), _if_then_else(False, compare_blocks_rows, compare_blocks_rows)), _if_then_else(le(ones_diff_cols, compare_blocks_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, 0)))), _if_then_else(and_(and_(ge(0, 3), ge(compare_blocks_rows, ARG6)), le(_if_then_else(False, 4, 0), _if_then_else(True, zeros_diff_rows, 0))), _if_then_else(ge(_if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, 1))), _if_then_else(and_(ge(ones_diff_rows, 0), and_(True, True)), _if_then_else(ge(3, compare_blocks_cols), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(False, 0, 1)), _if_then_else(le(zeros_diff_rows, 4), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, 0))))))), le(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, ones_diff_cols), _if_then_else(False, ARG7, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, 2))))
and_(ge(_if_then_else(and_(False, True), _if_then_else(False, ARG7, ARG7), _if_then_else(True, 2, 2)), _if_then_else(and_(False, False), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, 1, 2))), ge(_if_then_else(and_(True, True), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)), _if_then_else(le(1, 3), _if_then_else(False, 1, _if_then_else(False, ones_diff_rows, 4)), _if_then_else(False, ones_diff_rows, zeros_diff_rows))))
or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), 3), and_(and_(False, True), le(ARG7, compare_blocks_rows)))
or_(and_(or_(False, False), ge(compare_blocks_cols, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), and_(or_(and_(False, True), False), or_(True, True)))
VAL TREES:
mul(add(zeros_diff_rows, add(ones_diff_rows, ones_diff_cols)), add(add(mul(zeros_diff_rows, compare_blocks_cols), ones_diff_rows), ones_diff_cols))
mul(add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, mul(mul(compare_blocks_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_cols)))))
mul(mul(add(ones_diff_cols, compare_blocks_cols), add(add(add(compare_blocks_cols, zeros_diff_rows), add(mul(zeros_diff_rows, compare_blocks_cols), add(ones_diff_cols, compare_blocks_cols))), zeros_diff_cols)), add(add(zeros_diff_cols, mul(compare_blocks_rows, add(add(ones_diff_rows, ones_diff_rows), ones_diff_rows))), mul(zeros_diff_rows, compare_blocks_rows)))
mul(add(mul(zeros_diff_rows, ones_diff_rows), mul(mul(mul(ones_diff_rows, compare_blocks_rows), zeros_diff_cols), mul(ones_diff_rows, ones_diff_rows))), mul(add(ones_diff_rows, ones_diff_cols), compare_blocks_rows))
mul(mul(mul(add(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), ones_diff_cols), add(add(compare_blocks_cols, add(compare_blocks_rows, compare_blocks_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(zeros_diff_rows, compare_blocks_cols))))
mul(add(add(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), ones_diff_cols), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(add(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(ones_diff_cols, zeros_diff_cols))))
COND TREES:
and_(le(_if_then_else(or_(ge(_if_then_else(True, 2, 1), _if_then_else(and_(False, ge(compare_blocks_cols, zeros_diff_rows)), _if_then_else(True, compare_blocks_cols, _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), 2)), or_(or_(False, True), or_(or_(False, False), True))), ones_diff_cols, zeros_diff_cols), _if_then_else(or_(False, True), compare_blocks_rows, 0)), le(_if_then_else(False, zeros_diff_cols, 3), _if_then_else(True, ones_diff_rows, ones_diff_cols)))
or_(and_(le(_if_then_else(False, ARG7, ARG6), _if_then_else(True, ARG7, 0)), le(_if_then_else(False, ARG6, 2), _if_then_else(ge(_if_then_else(le(_if_then_else(False, 4, zeros_diff_cols), _if_then_else(True, ones_diff_rows, ARG7)), _if_then_else(ge(compare_blocks_rows, ones_diff_cols), _if_then_else(True, 1, zeros_diff_rows), _if_then_else(True, ones_diff_rows, compare_blocks_cols)), _if_then_else(le(2, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, 2), _if_then_else(True, ones_diff_cols, 0))), _if_then_else(le(_if_then_else(True, 4, 3), _if_then_else(True, 0, 4)), _if_then_else(le(ARG7, 4), _if_then_else(True, zeros_diff_cols, ARG7), _if_then_else(False, 0, ARG7)), _if_then_else(le(ones_diff_cols, ARG7), _if_then_else(True, 0, 4), _if_then_else(True, zeros_diff_cols, 4)))), _if_then_else(or_(ge(_if_then_else(True, 3, ARG6), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)), and_(and_(False, False), and_(False, False))), _if_then_else(and_(and_(False, False), or_(True, False)), _if_then_else(or_(False, False), _if_then_else(False, 1, 0), _if_then_else(True, 3, 1)), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(False, 1, zeros_diff_rows), _if_then_else(False, ARG6, zeros_diff_rows))), _if_then_else(or_(le(zeros_diff_cols, 3), and_(False, True)), _if_then_else(or_(False, False), _if_then_else(True, 2, ARG6), _if_then_else(False, compare_blocks_rows, compare_blocks_rows)), _if_then_else(le(ones_diff_cols, compare_blocks_rows), _if_then_else(True, 1, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, 0)))), _if_then_else(and_(and_(ge(0, 3), ge(compare_blocks_rows, ARG6)), le(_if_then_else(False, 4, 0), _if_then_else(True, zeros_diff_rows, 0))), _if_then_else(ge(_if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, ones_diff_rows, compare_blocks_rows)), _if_then_else(or_(True, False), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, 1))), _if_then_else(and_(ge(ones_diff_rows, 0), and_(True, True)), _if_then_else(ge(3, compare_blocks_cols), _if_then_else(False, 4, compare_blocks_rows), _if_then_else(False, 0, 1)), _if_then_else(le(zeros_diff_rows, 4), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, 0))))))), le(_if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, ones_diff_cols), _if_then_else(False, ARG7, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, 2))))
and_(ge(_if_then_else(and_(False, True), _if_then_else(False, ARG7, ARG7), _if_then_else(True, 2, 2)), _if_then_else(and_(False, False), _if_then_else(True, 2, ones_diff_cols), _if_then_else(True, 1, 2))), ge(_if_then_else(and_(True, True), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)), _if_then_else(le(1, 3), _if_then_else(False, 1, 0), _if_then_else(False, ones_diff_rows, zeros_diff_rows))))
or_(ge(_if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(False, 3, zeros_diff_rows)), and_(and_(False, True), le(ARG7, compare_blocks_rows)))
or_(and_(or_(False, False), ge(compare_blocks_cols, _if_then_else(False, compare_blocks_rows, ones_diff_cols))), and_(or_(le(2, zeros_diff_rows), False), or_(True, True)))
VAL TREES:
mul(add(zeros_diff_rows, add(ones_diff_rows, ones_diff_cols)), add(add(mul(zeros_diff_rows, compare_blocks_cols), ones_diff_rows), add(ones_diff_rows, compare_blocks_cols)))
mul(add(mul(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, ones_diff_rows)), mul(add(compare_blocks_cols, compare_blocks_cols), mul(ones_diff_cols, mul(mul(compare_blocks_cols, ones_diff_cols), ones_diff_rows))))
mul(mul(add(ones_diff_cols, ones_diff_cols), add(add(add(compare_blocks_cols, zeros_diff_rows), add(mul(zeros_diff_rows, compare_blocks_cols), add(ones_diff_cols, compare_blocks_cols))), zeros_diff_cols)), add(add(zeros_diff_cols, mul(compare_blocks_rows, add(add(ones_diff_rows, ones_diff_rows), ones_diff_rows))), mul(zeros_diff_rows, compare_blocks_rows)))
mul(add(mul(zeros_diff_rows, ones_diff_rows), mul(compare_blocks_rows, compare_blocks_cols)), mul(add(ones_diff_rows, ones_diff_cols), compare_blocks_rows))
mul(mul(mul(add(compare_blocks_rows, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows)), ones_diff_cols), add(add(compare_blocks_cols, add(compare_blocks_rows, compare_blocks_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(zeros_diff_rows, compare_blocks_cols))))
mul(add(add(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_rows)), ones_diff_cols), mul(mul(mul(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, ones_diff_rows)), mul(add(add(zeros_diff_rows, ones_diff_cols), add(ones_diff_rows, ones_diff_cols)), mul(ones_diff_cols, zeros_diff_cols))))


INFO:root:hof: COND TREES:
le(_if_then_else(ge(_if_then_else(True, compare_blocks_cols, ones_diff_rows), _if_then_else(False, 2, zeros_diff_rows)), _if_then_else(ge(zeros_diff_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, ARG6), _if_then_else(True, 2, 0)), _if_then_else(and_(False, False), _if_then_else(False, ARG7, ARG7), _if_then_else(False, 1, zeros_diff_rows))), _if_then_else(le(_if_then_else(False, compare_blocks_cols, 4), _if_then_else(True, 1, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(True, 2, 3), _if_then_else(True, 4, 4)), _if_then_else(and_(True, True), _if_then_else(False, 3, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, 4))))
ge(_if_then_else(or_(or_(ge(ARG7, compare_blocks_cols), ge(ones_diff_cols, ARG6)), and_(le(ARG6, compare_blocks_rows), and_(False, True))), _if_then_else(le(_if_then_else(False, ARG7, compare_blocks_cols), _if_then_else(False, 2, zeros_diff_cols)), _if_then_else(le(2, ARG7), _if_then_else(True, ARG6, 1), _if_then_else(True, ARG7, zeros_diff_rows)), _if_then_else(ge(ARG6, 1), _if_then_else(False, ARG6, ones_diff_cols), _if_then_else(False, 1, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, ARG6, 4), _if_then_else(False, 2, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(True, 1, ARG7)), _if_then_else(or_(True, False), _if_then_else(True, 4, zeros_diff_rows), _if_then_else(False, 3, ones_diff_cols)))), _if_then_else(le(_if_then_else(or_(False, True), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(True, ARG7, ones_diff_cols)), _if_then_else(ge(compare_blocks_cols, ones_diff_cols), _if_then_else(True, 0, zeros_diff_cols), _if_then_else(False, 1, compare_blocks_cols))), _if_then_else(ge(_if_then_else(True, ARG7, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, 2)), _if_then_else(le(ARG6, 0), _if_then_else(False, 4, ARG7), _if_then_else(False, 0, ARG6)), _if_then_else(le(1, compare_blocks_cols), _if_then_else(True, 2, 3), _if_then_else(False, 2, ARG7))), _if_then_else(and_(and_(True, True), ge(1, ARG7)), _if_then_else(or_(True, True), _if_then_else(False, ones_diff_cols, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, ARG6)), _if_then_else(and_(True, False), _if_then_else(True, 4, ones_diff_rows), _if_then_else(False, zeros_diff_cols, compare_blocks_cols)))))
or_(and_(or_(False, True), and_(True, False)), ge(_if_then_else(False, 1, 1), _if_then_else(True, zeros_diff_rows, 4)))
and_(le(_if_then_else(False, ARG7, 3), _if_then_else(False, compare_blocks_cols, 0)), and_(le(3, compare_blocks_rows), ge(1, ARG7)))
le(_if_then_else(or_(True, True), _if_then_else(False, _if_then_else(or_(False, False), 1, ARG7), ARG7), _if_then_else(True, 2, compare_blocks_cols)), _if_then_else(ge(ARG6, compare_blocks_rows), _if_then_else(True, 1, 1), _if_then_else(False, compare_blocks_rows, 1)))
VAL TREES:
add(add(mul(zeros_diff_cols, add(ones_diff_rows, ones_diff_cols)), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(compare_blocks_cols, ones_diff_rows), add(ones_diff_cols, ones_diff_cols)))
add(add(add(mul(mul(compare_blocks_cols, ones_diff_cols), add(zeros_diff_cols, zeros_diff_rows)), add(add(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))), add(mul(add(ones_diff_cols, ones_diff_cols), add(ones_diff_rows, zeros_diff_rows)), mul(add(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_cols, ones_diff_rows)))), add(add(mul(mul(compare_blocks_rows, zeros_diff_rows), mul(compare_blocks_rows, compare_blocks_cols)), add(add(compare_blocks_rows, ones_diff_cols), add(compare_blocks_cols, ones_diff_cols))), mul(add(add(ones_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, zeros_diff_cols)), add(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_cols, compare_blocks_cols)))))
mul(mul(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, ones_diff_rows)), add(mul(compare_blocks_rows, add(add(ones_diff_rows, ones_diff_rows), ones_diff_rows)), mul(zeros_diff_rows, zeros_diff_rows)))
mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_rows)), add(add(ones_diff_cols, ones_diff_cols), mul(ones_diff_cols, zeros_diff_cols)))
mul(add(add(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_rows, zeros_diff_cols)), add(add(ones_diff_cols, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_cols)))
mul(add(mul(mul(mul(compare_blocks_rows, compare_blocks_cols), add(zeros_diff_cols, ones_diff_rows)), add(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows))), add(mul(mul(compare_blocks_cols, zeros_diff_rows), add(ones_diff_rows, zeros_diff_rows)), add(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows)))), mul(mul(add(mul(ones_diff_rows, ones_diff_rows), add(ones_diff_cols, compare_blocks_rows)), add(add(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, ones_diff_rows))), add(add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, ones_diff_cols)), mul(mul(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_rows, compare_blocks_rows)))))


INFO:root:stats: {'fitness': <deap.tools.support.Statistics object at 0x00000161D2616C50>, 'size': <deap.tools.support.Statistics object at 0x00000161D2616C88>}

