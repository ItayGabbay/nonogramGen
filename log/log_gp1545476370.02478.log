INFO:root:

*******STARTING!!!******


INFO:root:

*******Configuration******


INFO:root:# NUM_ROWS = 20


INFO:root:NUM_ROWS = 5


INFO:root:# NUM_COLS = 20


INFO:root:NUM_COLS = 5


INFO:root:empty_in_split = '\xa0'


INFO:root:convert_to_sat = True


INFO:root:pickle_unsolved_file_path = 'data/%dx%d_nonograms.pkl' % (NUM_ROWS, NUM_COLS)


INFO:root:pickle_solved_file_path = 'data/%dx%d_nonograms_solved.pkl' % (NUM_ROWS, NUM_COLS)


INFO:root:pickle_row_options_path = 'data/%dx%d_row_options.pkl' % (NUM_ROWS, NUM_ROWS)


INFO:root:should_run_in_parallel = True


INFO:root:print_individual_fitness = True


INFO:root:


INFO:root:NUM_COND_TREES = 5


INFO:root:NUM_VAL_TREES = NUM_COND_TREES + 1


INFO:root:prob_crossover_global = 0.7  # global probability for cx


INFO:root:prob_crossover_individual_cond = 0.8  # probability to cx a specific cond tree in an individual


INFO:root:prob_crossover_individual_val = 0.8  # probability to cx a specific cond tree in an individual


INFO:root:prob_mutate_global = 0.3


INFO:root:prob_mutate_individual_cond = 0.7


INFO:root:prob_mutate_individual_val = 0.7


INFO:root:


INFO:root:points_correct_box = 5


INFO:root:points_incorrect_box = 0


INFO:root:# points_incorrect_box = -2


INFO:root:pop_size = 50


INFO:root:hof_size = 1


INFO:root:# num_gen = 40


INFO:root:num_gen = 10


INFO:root:train_size = 5


INFO:root:

*******DONE!!!******


INFO:root:run time: 133 sec

INFO:root:max possible fitness for the nonograms ran: %d

INFO:root:log:    	      	                fitness                	                  size                  
   	      	---------------------------------------	----------------------------------------
gen	nevals	avg  	max	min	size	std    	avg 	max	min	size	std     
0  	50    	59   	59 	59 	50  	0      	6   	8  	5  	50  	0.748331
1  	43    	52.5 	61 	44 	50  	5.24309	6.5 	9  	5  	50  	0.984886
2  	39    	53.92	61 	44 	50  	4.78682	6.88	9  	5  	50  	1.16    
3  	43    	53.04	61 	44 	50  	4.50759	7.1 	11 	5  	50  	1.44568 
4  	44    	52.74	61 	44 	50  	4.87775	7.34	11 	6  	50  	1.30553 
5  	34    	54.46	61 	44 	50  	5.32995	7.2 	10 	5  	50  	1.31149 
6  	40    	54.88	61 	44 	50  	4.99856	7.82	12 	6  	50  	1.43792 
7  	38    	54.7 	61 	45 	50  	4.7634 	8.16	14 	6  	50  	1.56665 
8  	35    	55.06	61 	45 	50  	4.75987	8.26	11 	6  	50  	1.27765 
9  	44    	54.66	61 	44 	50  	5.19465	8.64	12 	6  	50  	1.5331  
10 	42    	55.56	61 	46 	50  	4.36422	8.72	11 	7  	50  	1.18389 

INFO:root:pop: COND TREES:
and_(or_(ge(_if_then_else(and_(True, True), _if_then_else(False, 4, max_col_clue), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(True, ones_diff_cols, 0))), and_(True, le(_if_then_else(False, ones_diff_cols, 2), _if_then_else(True, _if_then_else(or_(and_(ge(ones_diff_cols, compare_blocks_rows), ge(zeros_diff_rows, zeros_diff_rows)), ge(_if_then_else(False, ones_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, max_col_clue))), _if_then_else(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, 2, ones_diff_rows)), _if_then_else(ge(compare_blocks_rows, 80), _if_then_else(True, 2, 0), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(le(2, 0), _if_then_else(False, -14, ones_diff_cols), _if_then_else(False, max_col_clue, 1))), _if_then_else(or_(le(0, 3), le(compare_blocks_cols, zeros_diff_cols)), zeros_diff_cols, _if_then_else(True, 3, zeros_diff_rows))), compare_blocks_rows)))), False)
and_(ge(max_col_clue, _if_then_else(ge(max_col_clue, _if_then_else(False, 0, 4)), 0, 4)), or_(or_(False, True), or_(False, False)))
or_(True, or_(ge(zeros_diff_cols, zeros_diff_cols), ge(_if_then_else(ge(_if_then_else(False, 1, 0), _if_then_else(le(zeros_diff_rows, compare_blocks_rows), ones_diff_cols, zeros_diff_rows)), _if_then_else(le(zeros_diff_cols, max_col_clue), _if_then_else(True, max_row_clue, ones_diff_cols), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(ge(3, 2), zeros_diff_cols, _if_then_else(True, max_col_clue, 2))), zeros_diff_cols)))
ge(3, _if_then_else(False, _if_then_else(le(-76, 3), _if_then_else(or_(False, True), compare_blocks_cols, _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(or_(or_(False, False), False), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, max_row_clue, 2))), _if_then_else(and_(ge(max_col_clue, ones_diff_cols), and_(False, False)), _if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, 3, max_col_clue))))
le(_if_then_else(and_(False, True), _if_then_else(or_(or_(and_(ge(max_col_clue, _if_then_else(False, compare_blocks_rows, 87)), or_(le(0, 1), and_(False, False))), and_(and_(or_(True, True), or_(False, False)), le(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, 2, 2)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_cols, 65), _if_then_else(False, 2, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(True, 55, max_row_clue), _if_then_else(True, 1, ones_diff_rows)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, 1), _if_then_else(False, compare_blocks_cols, 44))), _if_then_else(and_(or_(False, False), le(1, zeros_diff_cols)), _if_then_else(ge(73, ones_diff_rows), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, -34, compare_blocks_cols)), _if_then_else(le(_if_then_else(True, 4, zeros_diff_rows), 4), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(True, ones_diff_rows, 3))))), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), 3), _if_then_else(False, _if_then_else(True, 4, zeros_diff_rows), compare_blocks_cols))
VAL TREES:
add(add(mul(-100, zeros_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, 59), mul(2, zeros_diff_cols)))
add(mul(mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), mul(mul(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows)))), add(mul(add(add(ones_diff_cols, ones_diff_cols), add(-83, zeros_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(75, zeros_diff_cols))), add(add(mul(ones_diff_cols, ones_diff_rows), mul(39, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows))
add(mul(compare_blocks_cols, mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_cols, ones_diff_cols)), ones_diff_rows)), mul(zeros_diff_rows, ones_diff_rows))
mul(add(add(zeros_diff_rows, ones_diff_rows), compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols))
mul(mul(zeros_diff_cols, zeros_diff_rows), add(17, compare_blocks_cols))
COND TREES:
and_(or_(ge(_if_then_else(and_(True, True), _if_then_else(False, 4, max_col_clue), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(True, ones_diff_cols, 0))), and_(True, le(_if_then_else(False, ones_diff_cols, 2), _if_then_else(True, _if_then_else(or_(and_(ge(ones_diff_cols, compare_blocks_rows), ge(zeros_diff_rows, zeros_diff_rows)), ge(_if_then_else(False, ones_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, max_col_clue))), _if_then_else(ge(_if_then_else(True, 3, max_row_clue), _if_then_else(False, 2, ones_diff_rows)), _if_then_else(True, _if_then_else(True, 2, 0), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(le(2, 0), _if_then_else(True, -14, ones_diff_cols), _if_then_else(False, max_col_clue, 1))), _if_then_else(or_(le(0, 3), le(compare_blocks_cols, zeros_diff_cols)), _if_then_else(ge(zeros_diff_cols, 1), _if_then_else(False, ones_diff_rows, 4), _if_then_else(True, ones_diff_rows, 0)), _if_then_else(le(_if_then_else(ge(ones_diff_cols, 2), _if_then_else(and_(False, True), 4, ones_diff_rows), _if_then_else(and_(False, True), 1, max_col_clue)), 2), _if_then_else(False, zeros_diff_rows, 7), _if_then_else(True, max_col_clue, 4)))), compare_blocks_rows)))), False)
and_(ge(max_col_clue, _if_then_else(True, 0, 4)), or_(or_(ge(compare_blocks_cols, 3), True), or_(False, False)))
or_(True, or_(ge(zeros_diff_cols, zeros_diff_cols), and_(or_(ge(_if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, max_row_clue)), and_(or_(False, False), ge(ones_diff_cols, 1))), le(_if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(True, -57, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(False, max_row_clue, max_row_clue), _if_then_else(False, max_row_clue, 0))))))
ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, _if_then_else(False, _if_then_else(or_(False, True), _if_then_else(False, 2, ones_diff_rows), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(False, _if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, max_row_clue, 2))), max_row_clue))
le(_if_then_else(and_(False, True), _if_then_else(or_(or_(and_(ge(_if_then_else(False, 4, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, 87)), or_(le(0, 1), and_(False, False))), and_(and_(or_(True, True), or_(False, False)), le(_if_then_else(False, _if_then_else(False, 4, compare_blocks_rows), compare_blocks_cols), _if_then_else(True, 2, 2)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_cols, 65), _if_then_else(False, 2, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(and_(False, False), 55, max_row_clue), _if_then_else(True, 1, ones_diff_rows)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, 1), _if_then_else(False, compare_blocks_cols, 44))), _if_then_else(and_(or_(False, False), le(1, zeros_diff_cols)), _if_then_else(ge(73, ones_diff_rows), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, -34, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(True, ones_diff_rows, 3))))), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), 3), _if_then_else(False, _if_then_else(True, 4, zeros_diff_rows), compare_blocks_cols))
VAL TREES:
add(add(mul(-100, zeros_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, 59), mul(2, zeros_diff_cols)))
add(mul(mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), mul(mul(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows)))), add(mul(add(add(ones_diff_cols, ones_diff_cols), add(-83, zeros_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(75, zeros_diff_cols))), add(add(mul(ones_diff_cols, ones_diff_rows), mul(39, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows))
add(mul(compare_blocks_cols, mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_cols, ones_diff_cols)), ones_diff_rows)), mul(zeros_diff_rows, ones_diff_rows))
mul(add(add(zeros_diff_rows, ones_diff_rows), compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols))
mul(mul(zeros_diff_cols, zeros_diff_rows), add(17, compare_blocks_cols))
COND TREES:
and_(or_(ge(_if_then_else(and_(ge(compare_blocks_rows, 80), True), _if_then_else(False, 4, max_col_clue), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(True, ones_diff_cols, 0))), and_(True, le(_if_then_else(False, ones_diff_cols, 2), _if_then_else(True, _if_then_else(or_(and_(ge(ones_diff_cols, compare_blocks_rows), ge(zeros_diff_rows, zeros_diff_rows)), ge(_if_then_else(False, ones_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, max_col_clue))), _if_then_else(ge(_if_then_else(True, 3, max_row_clue), _if_then_else(False, 2, ones_diff_rows)), _if_then_else(ge(compare_blocks_rows, 80), _if_then_else(True, 2, 0), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(le(2, 0), _if_then_else(False, -14, ones_diff_cols), _if_then_else(False, max_col_clue, 1))), _if_then_else(or_(le(0, 3), le(compare_blocks_cols, zeros_diff_cols)), _if_then_else(ge(zeros_diff_cols, 1), _if_then_else(False, ones_diff_rows, 4), _if_then_else(True, ones_diff_rows, 0)), _if_then_else(le(ones_diff_cols, 2), _if_then_else(False, zeros_diff_rows, 7), _if_then_else(True, max_col_clue, 4)))), compare_blocks_rows)))), False)
and_(ge(max_col_clue, _if_then_else(True, 0, 4)), or_(or_(False, True), or_(False, False)))
or_(True, or_(ge(zeros_diff_cols, zeros_diff_cols), ge(3, 3)))
ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, _if_then_else(False, _if_then_else(or_(ge(max_col_clue, ones_diff_cols), True), _if_then_else(False, 2, ones_diff_rows), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, _if_then_else(and_(ge(max_col_clue, ones_diff_cols), and_(False, False)), _if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, 3, max_col_clue)), 2))), _if_then_else(and_(ge(max_col_clue, ones_diff_cols), and_(False, False)), _if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, 3, max_col_clue))))
le(_if_then_else(and_(False, True), _if_then_else(or_(or_(and_(ge(_if_then_else(False, 4, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, 87)), or_(le(0, 1), True)), and_(and_(or_(True, True), or_(False, False)), le(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, 2, 2)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_cols, 65), _if_then_else(False, 2, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(True, 55, max_row_clue), _if_then_else(True, 1, ones_diff_rows)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, 1), _if_then_else(False, compare_blocks_cols, 44))), _if_then_else(and_(or_(False, False), le(1, zeros_diff_cols)), _if_then_else(ge(73, ones_diff_rows), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, -34, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(True, ones_diff_rows, 3))))), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), 3), _if_then_else(False, _if_then_else(True, 4, zeros_diff_rows), compare_blocks_cols))
VAL TREES:
add(add(mul(-100, zeros_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, 59), mul(2, zeros_diff_cols)))
add(mul(mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), mul(mul(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows)))), add(mul(add(add(ones_diff_cols, ones_diff_cols), add(-83, zeros_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(75, zeros_diff_cols))), add(add(mul(ones_diff_cols, ones_diff_rows), mul(39, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows))
add(mul(compare_blocks_cols, mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_cols, ones_diff_cols)), ones_diff_rows)), mul(zeros_diff_rows, ones_diff_rows))
mul(add(add(zeros_diff_rows, ones_diff_rows), compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols))
mul(mul(zeros_diff_cols, zeros_diff_rows), add(17, compare_blocks_cols))
COND TREES:
and_(or_(ge(_if_then_else(and_(True, True), _if_then_else(False, 4, max_col_clue), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(True, ones_diff_cols, 0))), and_(True, le(_if_then_else(False, ones_diff_cols, 2), _if_then_else(True, _if_then_else(True, _if_then_else(ge(_if_then_else(True, 3, max_row_clue), _if_then_else(False, 2, ones_diff_rows)), _if_then_else(ge(compare_blocks_rows, 80), _if_then_else(True, 2, 0), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(le(2, 0), _if_then_else(False, -14, ones_diff_cols), _if_then_else(False, max_col_clue, 1))), _if_then_else(or_(le(0, 3), le(compare_blocks_cols, zeros_diff_cols)), _if_then_else(ge(zeros_diff_cols, 1), _if_then_else(False, ones_diff_rows, 4), _if_then_else(True, ones_diff_rows, 0)), _if_then_else(le(ones_diff_cols, 2), _if_then_else(False, zeros_diff_rows, 7), _if_then_else(True, max_col_clue, 4)))), compare_blocks_rows)))), False)
and_(ge(max_col_clue, _if_then_else(True, 0, 4)), or_(or_(False, True), or_(False, False)))
or_(True, or_(ge(zeros_diff_cols, zeros_diff_cols), ge(3, 0)))
ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, _if_then_else(False, _if_then_else(or_(False, True), _if_then_else(False, 2, ones_diff_rows), _if_then_else(True, max_row_clue, 2)), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, max_row_clue, 2))), _if_then_else(and_(False, and_(False, False)), _if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, 3, max_col_clue))))
le(_if_then_else(and_(False, True), _if_then_else(or_(or_(and_(ge(_if_then_else(False, 4, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, 87)), or_(le(0, 1), and_(False, False))), and_(and_(or_(True, True), or_(False, False)), le(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, 2, 2)))), ge(_if_then_else(ge(_if_then_else(False, 4, compare_blocks_rows), _if_then_else(False, 2, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(True, 55, max_row_clue), _if_then_else(True, 1, ones_diff_rows)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, 1), _if_then_else(False, compare_blocks_cols, 44))), _if_then_else(and_(or_(False, False), le(1, zeros_diff_cols)), _if_then_else(ge(73, ones_diff_rows), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, -34, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(True, ones_diff_rows, 3))))), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), 3), _if_then_else(False, _if_then_else(True, 4, zeros_diff_rows), compare_blocks_cols))
VAL TREES:
add(add(mul(-100, zeros_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, 59), mul(2, zeros_diff_cols)))
add(mul(mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), mul(mul(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows)))), add(mul(add(add(ones_diff_cols, ones_diff_cols), add(mul(ones_diff_cols, 42), mul(zeros_diff_rows, -51))), mul(add(compare_blocks_rows, zeros_diff_cols), add(75, zeros_diff_cols))), add(add(mul(ones_diff_cols, ones_diff_rows), mul(39, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(mul(ones_diff_rows, compare_blocks_rows), add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, ones_diff_rows)), compare_blocks_rows))
add(mul(compare_blocks_cols, mul(mul(mul(compare_blocks_rows, ones_diff_cols), add(add(compare_blocks_cols, 69), mul(compare_blocks_cols, ones_diff_rows))), ones_diff_rows)), mul(zeros_diff_rows, ones_diff_rows))
mul(add(zeros_diff_rows, compare_blocks_cols), add(ones_diff_rows, -17))
mul(add(add(add(-78, -86), mul(-99, 88)), mul(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows))), add(add(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_cols, zeros_diff_cols))))
COND TREES:
le(zeros_diff_cols, _if_then_else(le(ones_diff_cols, 2), compare_blocks_cols, 0))
le(_if_then_else(or_(False, ge(-55, 1)), _if_then_else(le(_if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(False, 3, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, max_row_clue, max_col_clue)), max_row_clue), _if_then_else(le(_if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, 0, zeros_diff_cols)), _if_then_else(le(1, 4), _if_then_else(True, max_row_clue, max_col_clue), _if_then_else(False, 4, 2)), _if_then_else(and_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(True, zeros_diff_rows, compare_blocks_rows)))), _if_then_else(or_(and_(ge(compare_blocks_rows, 3), le(zeros_diff_cols, compare_blocks_rows)), or_(le(0, max_col_clue), ge(0, 73))), _if_then_else(le(_if_then_else(True, 4, max_row_clue), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(and_(False, True), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, -81), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, max_col_clue, -24))), _if_then_else(or_(ge(zeros_diff_rows, ones_diff_rows), or_(True, False)), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), -55), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(False, ones_diff_rows, max_col_clue)))))
and_(and_(le(_if_then_else(or_(True, True), _if_then_else(True, 1, 3), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(True, max_col_clue, 4), _if_then_else(False, 0, zeros_diff_cols))), or_(ge(_if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 14, 4)), or_(or_(True, False), and_(ge(3, 0), False)))), le(_if_then_else(or_(le(3, 2), ge(zeros_diff_rows, 1)), _if_then_else(or_(True, False), _if_then_else(False, 0, 3), _if_then_else(False, 3, 2)), _if_then_else(True, _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, max_col_clue, zeros_diff_rows))), _if_then_else(ge(_if_then_else(False, 1, 0), _if_then_else(le(zeros_diff_rows, compare_blocks_rows), ones_diff_cols, zeros_diff_rows)), _if_then_else(le(zeros_diff_cols, max_col_clue), _if_then_else(True, max_row_clue, ones_diff_cols), _if_then_else(False, 0, zeros_diff_rows)), _if_then_else(ge(3, 2), zeros_diff_cols, _if_then_else(True, max_col_clue, 2)))))
or_(ge(2, compare_blocks_rows), ge(3, compare_blocks_cols))
ge(_if_then_else(or_(and_(True, False), False), ones_diff_rows, zeros_diff_cols), _if_then_else(and_(False, le(4, 1)), 3, 1))
VAL TREES:
add(mul(add(add(add(add(add(ones_diff_rows, compare_blocks_cols), add(80, zeros_diff_cols)), zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))), add(mul(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(16, compare_blocks_cols))), mul(mul(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, -68), mul(compare_blocks_cols, ones_diff_cols)))))
add(mul(add(add(mul(ones_diff_cols, 84), mul(ones_diff_cols, zeros_diff_rows)), mul(add(add(mul(add(ones_diff_cols, 86), zeros_diff_cols), mul(mul(zeros_diff_rows, mul(ones_diff_cols, add(2, ones_diff_cols))), zeros_diff_rows)), compare_blocks_rows), mul(zeros_diff_cols, -29))), mul(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_rows)), add(add(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))), add(add(mul(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, -7)), add(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))), mul(mul(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, 81)), add(mul(zeros_diff_cols, zeros_diff_cols), mul(71, ones_diff_rows)))))
mul(add(compare_blocks_cols, add(mul(mul(zeros_diff_cols, compare_blocks_rows), add(ones_diff_cols, ones_diff_rows)), mul(add(zeros_diff_rows, zeros_diff_rows), add(zeros_diff_rows, 17)))), add(mul(zeros_diff_rows, 13), -10))
add(add(mul(zeros_diff_cols, zeros_diff_cols), add(-97, ones_diff_cols)), mul(mul(mul(36, ones_diff_cols), mul(compare_blocks_cols, ones_diff_cols)), add(ones_diff_cols, compare_blocks_rows)))
add(mul(add(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols))), add(mul(add(-95, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), add(add(zeros_diff_rows, 53), add(zeros_diff_cols, ones_diff_rows)))), add(add(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows)), mul(add(ones_diff_cols, 7), add(compare_blocks_rows, compare_blocks_rows))), mul(add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_rows, add(mul(mul(add(mul(compare_blocks_rows, ones_diff_cols), mul(zeros_diff_cols, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_cols), mul(compare_blocks_rows, compare_blocks_rows))), add(add(mul(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, zeros_diff_cols)), mul(add(zeros_diff_rows, ones_diff_cols), add(compare_blocks_cols, ones_diff_cols)))), mul(add(mul(mul(-25, compare_blocks_cols), add(zeros_diff_rows, compare_blocks_cols)), mul(add(zeros_diff_rows, ones_diff_rows), mul(zeros_diff_rows, zeros_diff_cols))), add(add(add(ones_diff_rows, compare_blocks_cols), mul(-62, compare_blocks_cols)), mul(add(85, ones_diff_rows), mul(-21, ones_diff_rows)))))), mul(compare_blocks_cols, zeros_diff_cols)))))
mul(mul(mul(add(-4, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), mul(-26, compare_blocks_rows))), mul(add(mul(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols))))
COND TREES:
le(_if_then_else(True, zeros_diff_cols, ones_diff_rows), max_row_clue)
le(_if_then_else(or_(or_(and_(False, False), ge(zeros_diff_rows, compare_blocks_cols)), or_(and_(True, True), le(0, compare_blocks_cols))), _if_then_else(le(_if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(False, 3, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, max_row_clue, max_col_clue)), max_row_clue), _if_then_else(le(_if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, 0, zeros_diff_cols)), _if_then_else(le(1, 4), _if_then_else(False, max_row_clue, max_col_clue), _if_then_else(False, 4, 2)), _if_then_else(and_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(True, zeros_diff_rows, compare_blocks_rows)))), _if_then_else(or_(ge(4, 1), or_(le(0, max_col_clue), ge(0, 73))), _if_then_else(le(_if_then_else(True, 4, max_row_clue), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(and_(False, True), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_rows)), _if_then_else(le(1, -81), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, max_col_clue, -24))), _if_then_else(or_(ge(zeros_diff_rows, ones_diff_rows), or_(True, False)), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, ones_diff_rows, 4)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(False, ones_diff_rows, max_col_clue)))))
and_(and_(le(_if_then_else(or_(True, True), _if_then_else(True, 1, 3), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(True, _if_then_else(True, max_col_clue, 4), _if_then_else(False, 0, zeros_diff_cols))), or_(ge(_if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 14, 4)), or_(or_(True, False), and_(True, True)))), le(_if_then_else(or_(le(3, 2), ge(zeros_diff_rows, 1)), _if_then_else(or_(True, False), _if_then_else(False, 0, _if_then_else(True, 3, max_col_clue)), _if_then_else(False, 3, 2)), _if_then_else(le(0, ones_diff_cols), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, max_col_clue, zeros_diff_rows))), _if_then_else(ge(_if_then_else(False, 1, 0), _if_then_else(le(zeros_diff_rows, compare_blocks_rows), ones_diff_cols, zeros_diff_rows)), _if_then_else(le(zeros_diff_cols, max_col_clue), _if_then_else(True, 0, ones_diff_cols), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), ones_diff_rows)))
or_(True, ge(compare_blocks_cols, 3))
ge(_if_then_else(True, 4, zeros_diff_cols), _if_then_else(or_(False, False), 3, 1))
VAL TREES:
add(mul(add(add(add(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))), add(mul(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(16, compare_blocks_cols))), mul(mul(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, -68), mul(compare_blocks_cols, ones_diff_cols)))))
add(mul(add(add(mul(ones_diff_cols, 84), mul(ones_diff_cols, zeros_diff_rows)), mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, -29))), mul(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_rows)), add(add(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))), add(add(mul(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, -7)), add(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))), mul(mul(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, 81)), add(mul(zeros_diff_cols, zeros_diff_cols), mul(71, ones_diff_rows)))))
mul(add(compare_blocks_cols, ones_diff_rows), add(mul(zeros_diff_rows, 13), -10))
add(add(mul(zeros_diff_cols, zeros_diff_cols), add(-97, ones_diff_cols)), mul(mul(compare_blocks_cols, 26), add(ones_diff_cols, compare_blocks_rows)))
add(mul(add(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols))), add(mul(add(-95, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), add(add(zeros_diff_rows, 53), add(zeros_diff_cols, ones_diff_rows)))), add(add(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows)), mul(add(ones_diff_cols, 7), add(compare_blocks_rows, compare_blocks_rows))), mul(add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))))
mul(mul(mul(add(-4, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), mul(-26, compare_blocks_rows))), mul(add(mul(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols))))
COND TREES:
le(zeros_diff_cols, max_row_clue)
le(_if_then_else(or_(or_(and_(False, False), ge(zeros_diff_rows, compare_blocks_cols)), or_(and_(True, True), le(0, compare_blocks_cols))), _if_then_else(le(_if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(False, 3, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, max_row_clue, max_col_clue)), max_row_clue), _if_then_else(le(_if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, 0, zeros_diff_cols)), _if_then_else(le(1, 4), _if_then_else(False, max_row_clue, max_col_clue), _if_then_else(False, 4, 2)), _if_then_else(and_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(True, zeros_diff_rows, compare_blocks_rows)))), _if_then_else(or_(and_(ge(compare_blocks_rows, 3), le(zeros_diff_cols, compare_blocks_rows)), or_(le(0, max_col_clue), ge(0, 73))), _if_then_else(le(_if_then_else(True, 4, max_row_clue), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(and_(and_(True, True), True), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_rows)), _if_then_else(le(1, -81), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, max_col_clue, -24))), _if_then_else(or_(ge(zeros_diff_rows, ones_diff_rows), or_(True, False)), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, ones_diff_rows, 4)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(False, ones_diff_rows, max_col_clue)))))
and_(and_(le(_if_then_else(or_(True, True), _if_then_else(True, 1, 3), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(True, _if_then_else(True, max_col_clue, 4), _if_then_else(False, 0, zeros_diff_cols))), or_(ge(_if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 14, 4)), or_(or_(True, False), and_(True, True)))), le(_if_then_else(or_(le(3, 2), ge(zeros_diff_rows, 1)), _if_then_else(True, _if_then_else(False, 0, 3), _if_then_else(False, 3, 2)), _if_then_else(le(0, ones_diff_cols), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, max_col_clue, zeros_diff_rows))), _if_then_else(ge(_if_then_else(False, 1, 0), _if_then_else(le(zeros_diff_rows, compare_blocks_rows), ones_diff_cols, zeros_diff_rows)), _if_then_else(le(zeros_diff_cols, max_col_clue), _if_then_else(True, max_row_clue, ones_diff_cols), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(ge(3, 2), zeros_diff_cols, _if_then_else(True, max_col_clue, 2)))))
or_(True, ge(3, zeros_diff_cols))
ge(_if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(and_(False, le(-52, 1)), 3, 1))
VAL TREES:
add(mul(add(add(add(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))), add(mul(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(16, compare_blocks_cols))), mul(mul(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, -68), mul(compare_blocks_cols, ones_diff_cols)))))
add(mul(add(add(mul(ones_diff_cols, 84), mul(ones_diff_cols, zeros_diff_rows)), mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, -29))), mul(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_rows)), add(add(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))), add(add(mul(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, -7)), add(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))), mul(mul(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, 81)), add(mul(zeros_diff_cols, zeros_diff_cols), mul(71, ones_diff_rows)))))
mul(add(compare_blocks_cols, ones_diff_rows), add(mul(zeros_diff_rows, 13), -10))
add(add(mul(zeros_diff_cols, zeros_diff_cols), add(-97, ones_diff_cols)), mul(mul(compare_blocks_cols, 26), add(ones_diff_cols, compare_blocks_rows)))
add(mul(add(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols))), add(mul(add(-95, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), add(add(zeros_diff_rows, 53), add(zeros_diff_cols, ones_diff_rows)))), add(add(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows)), mul(add(ones_diff_cols, 7), add(compare_blocks_rows, compare_blocks_rows))), mul(add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))))
mul(mul(mul(add(-4, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), mul(-26, compare_blocks_rows))), mul(add(mul(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols))))
COND TREES:
le(zeros_diff_cols, zeros_diff_cols)
le(_if_then_else(or_(or_(and_(False, False), ge(zeros_diff_rows, compare_blocks_cols)), or_(and_(True, True), le(0, compare_blocks_cols))), _if_then_else(le(_if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(False, 3, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, max_row_clue, max_col_clue)), max_row_clue), _if_then_else(le(_if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, 0, zeros_diff_cols)), _if_then_else(le(1, 4), _if_then_else(False, max_row_clue, max_col_clue), _if_then_else(False, 4, 2)), _if_then_else(and_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(True, _if_then_else(False, _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, max_row_clue, max_col_clue)), compare_blocks_rows)))), _if_then_else(or_(and_(ge(compare_blocks_rows, 3), le(zeros_diff_cols, compare_blocks_rows)), or_(le(0, max_col_clue), ge(0, 73))), _if_then_else(le(_if_then_else(True, 4, max_row_clue), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(and_(False, True), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_rows)), _if_then_else(le(1, -81), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, max_col_clue, -24))), _if_then_else(or_(ge(zeros_diff_rows, ones_diff_rows), or_(True, False)), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, ones_diff_rows, 4)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(False, ones_diff_rows, max_col_clue)))))
and_(and_(le(_if_then_else(or_(True, True), _if_then_else(True, 1, 3), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(True, _if_then_else(True, max_col_clue, 4), _if_then_else(False, 0, zeros_diff_cols))), or_(ge(_if_then_else(or_(True, False), compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 14, 4)), or_(or_(True, False), and_(True, True)))), le(_if_then_else(or_(le(3, 2), ge(zeros_diff_rows, 1)), _if_then_else(or_(True, False), _if_then_else(False, 0, 3), _if_then_else(False, 3, 2)), _if_then_else(le(0, ones_diff_cols), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, max_col_clue, zeros_diff_rows))), _if_then_else(ge(_if_then_else(False, 1, 0), _if_then_else(le(zeros_diff_rows, compare_blocks_rows), ones_diff_cols, zeros_diff_rows)), _if_then_else(le(zeros_diff_cols, max_col_clue), _if_then_else(True, max_row_clue, ones_diff_cols), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(ge(3, 2), zeros_diff_cols, _if_then_else(True, max_col_clue, 2)))))
or_(True, ge(4, compare_blocks_cols))
ge(_if_then_else(True, ones_diff_rows, zeros_diff_cols), 3)
VAL TREES:
add(mul(add(add(add(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))), add(mul(add(add(mul(add(zeros_diff_rows, zeros_diff_cols), add(compare_blocks_rows, ones_diff_rows)), ones_diff_rows), add(ones_diff_rows, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(16, compare_blocks_cols))), mul(mul(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, -68), mul(compare_blocks_cols, ones_diff_cols)))))
add(mul(add(add(mul(ones_diff_cols, 84), mul(ones_diff_cols, zeros_diff_rows)), mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, -29))), mul(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_rows)), add(add(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))), add(add(mul(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, -7)), add(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))), mul(mul(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, 81)), add(mul(zeros_diff_cols, zeros_diff_cols), mul(71, ones_diff_rows)))))
mul(add(mul(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, add(zeros_diff_rows, mul(ones_diff_rows, ones_diff_cols)))), add(mul(zeros_diff_rows, 13), -10))
add(add(mul(zeros_diff_cols, zeros_diff_cols), add(-97, ones_diff_cols)), mul(add(mul(zeros_diff_cols, compare_blocks_rows), mul(-89, compare_blocks_cols)), add(add(ones_diff_rows, zeros_diff_rows), add(zeros_diff_cols, compare_blocks_cols))))
add(mul(add(add(ones_diff_cols, compare_blocks_rows), add(91, ones_diff_cols)), add(mul(add(-95, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), add(add(zeros_diff_rows, 53), add(zeros_diff_cols, ones_diff_rows)))), add(add(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows)), mul(add(ones_diff_cols, 7), add(compare_blocks_rows, compare_blocks_rows))), mul(add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))))
mul(mul(mul(add(-4, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), mul(-26, compare_blocks_rows))), mul(add(mul(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols))))
COND TREES:
and_(or_(ge(_if_then_else(and_(True, True), _if_then_else(False, 4, max_col_clue), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(True, ones_diff_cols, 0))), and_(True, le(_if_then_else(False, ones_diff_cols, 2), _if_then_else(True, _if_then_else(or_(and_(ge(ones_diff_cols, compare_blocks_rows), ge(zeros_diff_rows, zeros_diff_rows)), ge(_if_then_else(False, ones_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, max_col_clue))), _if_then_else(ge(_if_then_else(True, 3, max_row_clue), _if_then_else(True, 2, ones_diff_rows)), _if_then_else(ge(compare_blocks_rows, 80), _if_then_else(True, 2, 0), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(le(2, 0), _if_then_else(False, -14, ones_diff_cols), _if_then_else(False, max_col_clue, 1))), _if_then_else(or_(le(0, 3), le(compare_blocks_cols, zeros_diff_cols)), _if_then_else(ge(zeros_diff_cols, 1), _if_then_else(False, ones_diff_rows, 4), _if_then_else(True, ones_diff_rows, 0)), _if_then_else(le(ones_diff_cols, 2), _if_then_else(False, zeros_diff_rows, 7), _if_then_else(True, max_col_clue, 4)))), compare_blocks_rows)))), False)
and_(ge(max_col_clue, _if_then_else(True, 0, 4)), or_(or_(False, or_(or_(False, True), or_(False, False))), or_(False, False)))
or_(or_(ge(zeros_diff_cols, zeros_diff_cols), ge(3, 0)), or_(False, ge(3, 0)))
ge(_if_then_else(False, 3, 3), _if_then_else(False, _if_then_else(False, _if_then_else(or_(False, True), _if_then_else(False, 2, ones_diff_rows), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, max_row_clue, 2))), _if_then_else(False, _if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, 3, max_col_clue))))
le(_if_then_else(and_(False, True), _if_then_else(or_(or_(and_(ge(_if_then_else(False, 4, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, 87)), or_(le(0, 1), and_(False, False))), and_(and_(False, or_(False, False)), le(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, 2, 2)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_cols, 65), _if_then_else(False, 2, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(True, 55, max_row_clue), _if_then_else(True, 1, ones_diff_rows)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, 1), _if_then_else(False, compare_blocks_cols, 3))), _if_then_else(and_(or_(False, False), le(1, zeros_diff_cols)), _if_then_else(ge(73, ones_diff_rows), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, -34, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(True, ones_diff_rows, 3))))), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), 3), _if_then_else(False, _if_then_else(True, 4, zeros_diff_rows), compare_blocks_cols))
VAL TREES:
add(add(mul(-100, zeros_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, 59), mul(2, zeros_diff_cols)))
add(mul(mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), mul(mul(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows)))), add(mul(add(add(ones_diff_cols, ones_diff_cols), add(-83, zeros_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(75, zeros_diff_cols))), add(add(mul(ones_diff_cols, ones_diff_rows), mul(39, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows))
add(mul(compare_blocks_cols, mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_cols, ones_diff_cols)), ones_diff_rows)), mul(zeros_diff_rows, ones_diff_rows))
mul(add(add(zeros_diff_rows, ones_diff_rows), compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols))
mul(mul(zeros_diff_cols, zeros_diff_rows), add(17, compare_blocks_cols))
COND TREES:
and_(or_(ge(_if_then_else(and_(True, True), _if_then_else(False, 4, max_col_clue), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(True, ones_diff_cols, 0))), and_(or_(le(2, _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_rows, 2), _if_then_else(False, 4, max_col_clue))), or_(True, False)), le(_if_then_else(False, ones_diff_cols, 2), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)))), or_(le(_if_then_else(or_(False, True), _if_then_else(True, 2, 0), _if_then_else(True, max_col_clue, 0)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, zeros_diff_cols), _if_then_else(False, ones_diff_cols, compare_blocks_rows))), and_(or_(or_(True, True), and_(True, True)), True)))
and_(ge(max_col_clue, 4), False)
or_(and_(True, ge(zeros_diff_cols, zeros_diff_cols)), le(ones_diff_rows, 31))
ge(_if_then_else(ge(max_col_clue, max_row_clue), _if_then_else(True, 0, compare_blocks_cols), _if_then_else(or_(False, False), _if_then_else(and_(ge(max_col_clue, ones_diff_cols), and_(False, False)), ones_diff_cols, 0), compare_blocks_cols)), _if_then_else(False, 1, 0))
le(_if_then_else(le(_if_then_else(True, 1, compare_blocks_rows), _if_then_else(False, 0, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(False, max_row_clue, 2), _if_then_else(True, 3, 0)), _if_then_else(le(44, -99), 1, _if_then_else(False, compare_blocks_cols, 3))), compare_blocks_cols)
VAL TREES:
add(add(mul(-100, zeros_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, 59), mul(2, zeros_diff_cols)))
add(mul(mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), mul(mul(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows)))), add(mul(add(add(ones_diff_cols, ones_diff_cols), add(-83, zeros_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(75, zeros_diff_cols))), add(add(mul(mul(mul(mul(zeros_diff_rows, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols)), mul(add(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))), ones_diff_rows), mul(39, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows))
add(mul(compare_blocks_cols, mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_cols, ones_diff_cols)), ones_diff_rows)), mul(zeros_diff_rows, mul(mul(mul(mul(mul(zeros_diff_cols, ones_diff_cols), add(compare_blocks_rows, zeros_diff_cols)), mul(add(ones_diff_cols, 15), mul(ones_diff_cols, zeros_diff_rows))), add(mul(mul(ones_diff_cols, zeros_diff_rows), mul(ones_diff_rows, ones_diff_cols)), add(add(compare_blocks_rows, ones_diff_rows), add(compare_blocks_rows, zeros_diff_cols)))), mul(mul(mul(mul(compare_blocks_cols, ones_diff_cols), mul(ones_diff_cols, ones_diff_cols)), add(add(24, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows))), mul(mul(mul(compare_blocks_rows, zeros_diff_rows), mul(37, zeros_diff_rows)), mul(add(compare_blocks_cols, ones_diff_cols), mul(compare_blocks_rows, 45)))))))
add(mul(zeros_diff_rows, add(-18, 14)), mul(add(zeros_diff_rows, ones_diff_rows), compare_blocks_cols))
mul(mul(zeros_diff_cols, zeros_diff_rows), add(17, compare_blocks_cols))
COND TREES:
and_(ge(_if_then_else(True, _if_then_else(True, 3, ones_diff_cols), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)), _if_then_else(le(0, 1), _if_then_else(le(ones_diff_cols, compare_blocks_cols), _if_then_else(False, 4, max_row_clue), _if_then_else(False, zeros_diff_rows, 0)), _if_then_else(True, zeros_diff_cols, ones_diff_rows))), le(3, _if_then_else(or_(True, True), _if_then_else(False, max_col_clue, 8), max_row_clue)))
or_(False, and_(ge(0, 1), and_(True, False)))
le(_if_then_else(and_(le(_if_then_else(or_(le(3, 2), ge(zeros_diff_rows, 1)), _if_then_else(or_(True, False), _if_then_else(False, 0, _if_then_else(True, 3, max_col_clue)), _if_then_else(False, 3, 2)), _if_then_else(le(0, ones_diff_cols), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, max_col_clue, zeros_diff_rows))), _if_then_else(ge(_if_then_else(or_(True, True), _if_then_else(False, ones_diff_cols, 3), _if_then_else(False, -81, zeros_diff_cols)), _if_then_else(le(zeros_diff_rows, compare_blocks_rows), ones_diff_cols, zeros_diff_rows)), _if_then_else(le(zeros_diff_cols, max_col_clue), _if_then_else(True, 0, ones_diff_cols), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(ge(3, 2), zeros_diff_cols, _if_then_else(True, max_col_clue, 2)))), ge(compare_blocks_rows, 31)), _if_then_else(True, ones_diff_cols, ones_diff_rows), _if_then_else(True, 3, max_col_clue)), _if_then_else(ge(3, ones_diff_rows), _if_then_else(True, 0, 1), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)))
or_(True, le(_if_then_else(and_(and_(or_(True, True), or_(True, False)), and_(and_(False, False), or_(False, False))), _if_then_else(ge(_if_then_else(False, 2, 1), _if_then_else(True, ones_diff_cols, 3)), _if_then_else(ge(2, 2), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, 2, 1)), _if_then_else(ge(-16, ones_diff_cols), _if_then_else(True, compare_blocks_rows, 0), _if_then_else(False, 1, zeros_diff_cols))), _if_then_else(ge(_if_then_else(False, 3, 4), _if_then_else(True, max_row_clue, max_row_clue)), _if_then_else(le(compare_blocks_rows, zeros_diff_cols), _if_then_else(False, max_col_clue, 0), _if_then_else(True, ones_diff_cols, zeros_diff_cols)), _if_then_else(le(max_row_clue, 4), _if_then_else(False, ones_diff_cols, zeros_diff_cols), _if_then_else(False, 1, ones_diff_rows)))), _if_then_else(and_(ge(_if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, 3, compare_blocks_cols)), ge(_if_then_else(True, 1, compare_blocks_rows), _if_then_else(False, ones_diff_rows, max_col_clue))), _if_then_else(ge(_if_then_else(False, compare_blocks_cols, max_col_clue), _if_then_else(False, compare_blocks_rows, ones_diff_rows)), _if_then_else(and_(True, False), _if_then_else(False, max_col_clue, 13), _if_then_else(False, 3, ones_diff_cols)), _if_then_else(ge(max_row_clue, 4), _if_then_else(True, 2, zeros_diff_cols), _if_then_else(False, ones_diff_cols, max_row_clue))), _if_then_else(and_(le(1, 0), or_(True, False)), _if_then_else(and_(True, True), _if_then_else(True, max_row_clue, 3), _if_then_else(True, zeros_diff_rows, 2)), _if_then_else(and_(False, True), _if_then_else(False, max_col_clue, zeros_diff_cols), _if_then_else(True, 3, ones_diff_rows))))))
and_(ge(_if_then_else(and_(True, False), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(False, 0, _if_then_else(True, 4, zeros_diff_rows))), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, -52, 4))), or_(or_(and_(False, True), False), ge(_if_then_else(True, 2, 1), _if_then_else(True, 2, 3))))
VAL TREES:
add(add(compare_blocks_rows, ones_diff_rows), mul(add(mul(mul(add(mul(add(ones_diff_rows, ones_diff_cols), add(ones_diff_rows, -50)), add(mul(ones_diff_cols, compare_blocks_rows), add(zeros_diff_cols, 17))), add(mul(add(11, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_cols)), add(add(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_rows)))), add(add(mul(mul(ones_diff_cols, ones_diff_rows), add(compare_blocks_rows, zeros_diff_cols)), add(add(compare_blocks_rows, 43), mul(-94, -25))), mul(mul(mul(-16, 70), mul(ones_diff_rows, ones_diff_cols)), add(add(zeros_diff_cols, ones_diff_cols), mul(ones_diff_cols, ones_diff_rows))))), ones_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(add(add(ones_diff_cols, add(add(zeros_diff_rows, mul(ones_diff_rows, add(compare_blocks_rows, zeros_diff_cols))), add(add(mul(mul(59, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_rows)), mul(compare_blocks_rows, compare_blocks_cols)), zeros_diff_cols))), add(ones_diff_cols, ones_diff_cols)), add(add(zeros_diff_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows))), mul(mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(zeros_diff_cols, ones_diff_cols))))
mul(add(zeros_diff_cols, zeros_diff_cols), mul(ones_diff_cols, ones_diff_cols))
add(mul(mul(mul(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, add(mul(zeros_diff_cols, ones_diff_cols), mul(-83, zeros_diff_cols)))), add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, compare_blocks_rows))), add(add(add(-98, ones_diff_cols), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols))))
add(add(add(ones_diff_rows, compare_blocks_rows), add(zeros_diff_rows, 31)), mul(mul(-78, compare_blocks_rows), mul(add(add(add(-57, compare_blocks_cols), add(61, compare_blocks_rows)), mul(add(compare_blocks_rows, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_cols))), zeros_diff_cols)))
mul(add(zeros_diff_cols, compare_blocks_cols), add(mul(zeros_diff_rows, compare_blocks_cols), mul(97, ones_diff_cols)))
COND TREES:
le(_if_then_else(ge(zeros_diff_cols, compare_blocks_cols), zeros_diff_cols, ones_diff_rows), max_row_clue)
le(_if_then_else(or_(or_(and_(False, False), ge(zeros_diff_rows, compare_blocks_cols)), or_(and_(True, True), le(0, compare_blocks_cols))), _if_then_else(le(_if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(False, 3, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, max_row_clue, max_col_clue)), max_row_clue), _if_then_else(le(_if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, 0, zeros_diff_cols)), _if_then_else(le(1, 4), _if_then_else(False, max_row_clue, max_col_clue), _if_then_else(False, 4, 2)), _if_then_else(and_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(True, zeros_diff_rows, compare_blocks_rows)))), _if_then_else(or_(ge(4, 1), or_(le(0, max_col_clue), ge(0, 73))), _if_then_else(le(_if_then_else(True, 4, max_row_clue), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(and_(False, True), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_rows)), _if_then_else(le(1, -81), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, max_col_clue, -24))), _if_then_else(or_(ge(zeros_diff_rows, ones_diff_rows), or_(True, False)), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, ones_diff_rows, 4)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(False, ones_diff_rows, max_col_clue)))))
and_(and_(le(_if_then_else(or_(True, True), _if_then_else(True, 1, 3), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(True, _if_then_else(True, max_col_clue, 4), _if_then_else(False, 0, zeros_diff_cols))), or_(ge(_if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 14, 4)), or_(or_(True, False), and_(True, True)))), le(_if_then_else(or_(le(3, 2), ge(zeros_diff_rows, 1)), _if_then_else(or_(True, False), _if_then_else(False, 0, _if_then_else(True, 3, max_col_clue)), _if_then_else(False, 3, 2)), _if_then_else(le(0, ones_diff_cols), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, max_col_clue, zeros_diff_rows))), _if_then_else(ge(_if_then_else(False, 1, 0), _if_then_else(le(zeros_diff_rows, compare_blocks_rows), ones_diff_cols, zeros_diff_rows)), _if_then_else(le(zeros_diff_cols, max_col_clue), _if_then_else(True, 0, ones_diff_cols), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), ones_diff_rows)))
or_(True, ge(compare_blocks_cols, 3))
ge(_if_then_else(True, 4, zeros_diff_cols), _if_then_else(or_(False, False), 3, 1))
VAL TREES:
add(mul(add(add(add(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))), add(mul(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(16, compare_blocks_cols))), mul(mul(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, -68), mul(compare_blocks_cols, ones_diff_cols)))))
add(mul(add(add(mul(ones_diff_cols, 84), mul(ones_diff_cols, zeros_diff_rows)), mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, -29))), mul(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_rows)), add(add(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))), add(add(mul(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, -7)), add(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))), mul(mul(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, 81)), add(mul(zeros_diff_cols, zeros_diff_cols), mul(71, ones_diff_rows)))))
mul(add(compare_blocks_cols, ones_diff_rows), add(mul(zeros_diff_rows, 13), -10))
add(add(mul(zeros_diff_cols, zeros_diff_cols), add(-97, ones_diff_cols)), mul(mul(compare_blocks_cols, 26), add(ones_diff_cols, compare_blocks_rows)))
add(mul(add(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols))), add(mul(add(-95, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), add(add(zeros_diff_rows, 53), add(zeros_diff_cols, ones_diff_rows)))), add(add(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows)), mul(add(ones_diff_cols, 7), add(compare_blocks_rows, compare_blocks_rows))), mul(add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))))
mul(mul(mul(add(-4, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), mul(-26, compare_blocks_rows))), mul(add(mul(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols))))
COND TREES:
and_(or_(ge(_if_then_else(and_(True, True), _if_then_else(False, 4, max_col_clue), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(True, ones_diff_cols, 0))), and_(or_(le(2, _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_rows, 2), _if_then_else(False, 4, max_col_clue))), or_(True, False)), le(_if_then_else(False, ones_diff_cols, 2), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)))), or_(le(_if_then_else(or_(False, True), _if_then_else(True, 2, 0), _if_then_else(True, max_col_clue, 0)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, zeros_diff_cols), _if_then_else(False, ones_diff_cols, compare_blocks_rows))), and_(or_(or_(True, True), and_(True, True)), ge(_if_then_else(True, 3, 4), _if_then_else(True, 4, ones_diff_cols)))))
and_(ge(max_col_clue, 4), False)
or_(and_(ge(3, ones_diff_rows), False), le(ones_diff_rows, ones_diff_cols))
ge(_if_then_else(ge(max_col_clue, max_row_clue), _if_then_else(True, 0, compare_blocks_cols), _if_then_else(or_(False, False), _if_then_else(False, ones_diff_cols, 0), compare_blocks_cols)), _if_then_else(le(compare_blocks_cols, 3), 1, 0))
le(_if_then_else(le(_if_then_else(True, 1, compare_blocks_rows), _if_then_else(False, 0, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(False, max_row_clue, 2), _if_then_else(True, 3, 0)), _if_then_else(le(3, -99), _if_then_else(True, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, 3))), compare_blocks_cols)
VAL TREES:
add(add(mul(-100, zeros_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, 59), mul(2, zeros_diff_cols)))
add(mul(mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), mul(mul(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows)))), add(mul(add(add(ones_diff_cols, ones_diff_cols), add(-83, zeros_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(75, zeros_diff_cols))), add(add(mul(ones_diff_cols, ones_diff_rows), mul(39, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows))
add(mul(compare_blocks_cols, mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_cols, ones_diff_cols)), ones_diff_rows)), mul(zeros_diff_rows, ones_diff_rows))
mul(add(add(zeros_diff_rows, ones_diff_rows), compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols))
mul(mul(zeros_diff_cols, zeros_diff_rows), add(17, compare_blocks_cols))
COND TREES:
and_(or_(ge(_if_then_else(and_(True, True), _if_then_else(False, 4, max_col_clue), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(True, ones_diff_cols, 0))), and_(True, le(_if_then_else(False, ones_diff_cols, 2), _if_then_else(True, _if_then_else(or_(and_(ge(ones_diff_cols, compare_blocks_rows), ge(zeros_diff_rows, zeros_diff_rows)), ge(_if_then_else(False, ones_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, max_col_clue))), _if_then_else(ge(_if_then_else(True, 3, max_row_clue), _if_then_else(False, 2, ones_diff_rows)), _if_then_else(ge(compare_blocks_rows, 80), _if_then_else(True, 2, 0), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(le(2, 0), _if_then_else(False, -14, ones_diff_cols), _if_then_else(False, max_col_clue, 1))), _if_then_else(or_(le(0, 3), le(compare_blocks_cols, zeros_diff_cols)), _if_then_else(ge(zeros_diff_cols, 1), _if_then_else(False, ones_diff_rows, 4), _if_then_else(True, ones_diff_rows, 0)), _if_then_else(le(ones_diff_cols, 2), _if_then_else(False, zeros_diff_rows, 7), _if_then_else(True, max_col_clue, 4)))), compare_blocks_rows)))), False)
and_(ge(max_col_clue, _if_then_else(True, 0, 4)), or_(or_(False, True), or_(False, False)))
or_(True, or_(ge(zeros_diff_cols, zeros_diff_cols), ge(3, 0)))
ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, _if_then_else(False, _if_then_else(or_(False, True), _if_then_else(False, 2, ones_diff_rows), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, max_row_clue, 2))), _if_then_else(and_(ge(max_col_clue, ones_diff_cols), and_(False, False)), _if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, 3, max_col_clue))))
le(_if_then_else(and_(False, True), _if_then_else(or_(or_(and_(ge(_if_then_else(False, 4, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, 87)), or_(le(0, 1), and_(False, False))), and_(and_(or_(True, True), or_(False, False)), le(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, 2, 2)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_cols, 65), _if_then_else(False, 2, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(True, 55, max_row_clue), _if_then_else(True, 1, ones_diff_rows)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, 1), _if_then_else(False, compare_blocks_cols, 44))), _if_then_else(and_(or_(False, False), le(1, zeros_diff_cols)), _if_then_else(ge(73, ones_diff_rows), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, -34, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(True, ones_diff_rows, 3))))), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), 3), _if_then_else(False, _if_then_else(True, 4, zeros_diff_rows), compare_blocks_cols))
VAL TREES:
add(add(mul(-100, zeros_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, 59), mul(2, zeros_diff_cols)))
add(mul(mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), mul(mul(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows)))), add(mul(add(add(ones_diff_cols, ones_diff_cols), add(-83, zeros_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(75, zeros_diff_cols))), add(add(mul(ones_diff_cols, ones_diff_rows), mul(39, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, mul(add(compare_blocks_rows, compare_blocks_cols), mul(add(mul(-56, compare_blocks_rows), 98), compare_blocks_cols)))))))
mul(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, add(add(zeros_diff_cols, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_rows))))
add(add(add(compare_blocks_cols, compare_blocks_rows), add(zeros_diff_cols, zeros_diff_rows)), mul(zeros_diff_rows, ones_diff_rows))
mul(add(add(zeros_diff_rows, ones_diff_rows), compare_blocks_rows), mul(zeros_diff_cols, add(add(mul(add(compare_blocks_rows, compare_blocks_rows), add(compare_blocks_cols, ones_diff_cols)), mul(mul(ones_diff_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols))), add(add(mul(zeros_diff_rows, compare_blocks_rows), mul(compare_blocks_rows, ones_diff_rows)), add(mul(compare_blocks_rows, ones_diff_rows), mul(ones_diff_cols, compare_blocks_rows))))))
mul(add(add(mul(-95, ones_diff_rows), add(51, zeros_diff_cols)), add(mul(compare_blocks_cols, zeros_diff_cols), add(ones_diff_cols, ones_diff_cols))), add(17, compare_blocks_cols))
COND TREES:
le(zeros_diff_cols, _if_then_else(False, compare_blocks_cols, zeros_diff_cols))
le(_if_then_else(or_(False, ge(-55, 1)), _if_then_else(le(_if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(False, 3, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, max_row_clue, max_col_clue)), max_row_clue), _if_then_else(le(_if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, 0, zeros_diff_cols)), _if_then_else(le(1, 4), _if_then_else(True, max_row_clue, max_col_clue), _if_then_else(False, 4, 2)), _if_then_else(and_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(True, zeros_diff_rows, compare_blocks_rows)))), _if_then_else(or_(and_(ge(compare_blocks_rows, 3), le(zeros_diff_cols, compare_blocks_rows)), or_(le(0, 3), ge(0, 73))), _if_then_else(le(_if_then_else(True, 4, max_row_clue), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(and_(False, True), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, -81), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, max_col_clue, -24))), _if_then_else(or_(ge(zeros_diff_rows, ones_diff_rows), or_(True, False)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), -55), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(False, ones_diff_rows, max_col_clue)))))
and_(and_(le(_if_then_else(or_(True, True), _if_then_else(True, 1, 3), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(True, max_col_clue, 4), _if_then_else(False, 0, zeros_diff_cols))), or_(ge(_if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 14, 4)), or_(or_(True, False), and_(True, False)))), le(_if_then_else(or_(le(3, 2), ge(zeros_diff_rows, 1)), _if_then_else(or_(True, False), _if_then_else(False, 0, 3), _if_then_else(False, 3, 2)), _if_then_else(True, _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, max_col_clue, zeros_diff_rows))), _if_then_else(or_(ge(zeros_diff_cols, zeros_diff_cols), ge(3, ones_diff_rows)), _if_then_else(le(zeros_diff_cols, max_col_clue), _if_then_else(True, max_row_clue, ones_diff_cols), _if_then_else(False, 0, zeros_diff_rows)), _if_then_else(ge(3, 2), zeros_diff_cols, _if_then_else(True, max_col_clue, 2)))))
or_(ge(compare_blocks_cols, compare_blocks_rows), False)
ge(_if_then_else(or_(and_(True, False), False), ones_diff_rows, zeros_diff_cols), _if_then_else(and_(False, le(3, 1)), 3, 1))
VAL TREES:
add(mul(add(add(add(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, add(mul(14, compare_blocks_rows), add(76, zeros_diff_cols))), mul(compare_blocks_cols, zeros_diff_cols)))), add(mul(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(16, compare_blocks_cols))), mul(mul(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, -68), mul(compare_blocks_cols, ones_diff_cols)))))
add(mul(add(add(mul(ones_diff_cols, mul(add(mul(ones_diff_cols, ones_diff_cols), compare_blocks_rows), mul(mul(ones_diff_rows, ones_diff_rows), mul(ones_diff_cols, zeros_diff_cols)))), mul(ones_diff_cols, zeros_diff_rows)), mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, -29))), mul(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_rows)), add(add(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))), add(add(mul(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, -7)), add(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))), mul(mul(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, 81)), add(mul(zeros_diff_cols, zeros_diff_cols), mul(71, ones_diff_rows)))))
mul(add(compare_blocks_cols, ones_diff_rows), add(add(add(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, zeros_diff_rows)), -10))
add(add(mul(zeros_diff_cols, mul(mul(ones_diff_rows, zeros_diff_rows), mul(ones_diff_rows, ones_diff_cols))), add(-97, ones_diff_cols)), mul(mul(compare_blocks_cols, 26), add(ones_diff_cols, compare_blocks_rows)))
add(mul(add(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols))), add(mul(add(-95, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), add(add(zeros_diff_rows, 53), add(mul(28, -51), add(compare_blocks_cols, ones_diff_cols))))), add(add(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows)), mul(add(ones_diff_cols, 7), add(compare_blocks_rows, compare_blocks_rows))), mul(add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))))
mul(mul(mul(add(-4, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), mul(-26, compare_blocks_rows))), mul(add(mul(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols))))
COND TREES:
le(max_col_clue, max_row_clue)
le(_if_then_else(or_(or_(and_(False, False), ge(zeros_diff_rows, compare_blocks_cols)), or_(and_(True, True), le(0, compare_blocks_cols))), _if_then_else(le(_if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(False, 3, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, max_row_clue, max_col_clue)), max_row_clue), _if_then_else(le(_if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, 0, zeros_diff_cols)), _if_then_else(le(1, 4), _if_then_else(False, max_row_clue, max_col_clue), _if_then_else(False, 4, 2)), _if_then_else(and_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(True, zeros_diff_rows, compare_blocks_rows)))), _if_then_else(or_(and_(ge(compare_blocks_rows, 3), le(zeros_diff_cols, compare_blocks_rows)), or_(le(0, max_col_clue), ge(0, 73))), _if_then_else(le(_if_then_else(True, 4, max_row_clue), _if_then_else(True, max_col_clue, compare_blocks_cols)), _if_then_else(and_(False, True), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_rows)), _if_then_else(le(1, -81), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, max_col_clue, -24))), _if_then_else(or_(ge(zeros_diff_rows, ones_diff_rows), or_(True, False)), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, ones_diff_rows, 4)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(False, ones_diff_rows, max_col_clue)))))
and_(and_(le(_if_then_else(or_(True, True), _if_then_else(True, 1, 3), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(True, _if_then_else(True, max_col_clue, 4), _if_then_else(False, 0, zeros_diff_cols))), or_(ge(_if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 14, 4)), or_(ge(3, compare_blocks_rows), and_(True, True)))), le(_if_then_else(or_(le(3, 2), ge(zeros_diff_rows, 1)), _if_then_else(or_(True, False), _if_then_else(False, 0, 3), _if_then_else(False, 3, 2)), _if_then_else(le(0, ones_diff_cols), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, max_col_clue, zeros_diff_rows))), _if_then_else(ge(_if_then_else(False, 1, 0), _if_then_else(le(zeros_diff_rows, compare_blocks_rows), ones_diff_cols, zeros_diff_rows)), _if_then_else(le(zeros_diff_cols, max_col_clue), _if_then_else(True, max_row_clue, ones_diff_cols), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(ge(3, 2), zeros_diff_cols, _if_then_else(True, max_col_clue, 2)))))
or_(True, ge(3, 4))
ge(_if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(and_(False, le(-52, 1)), 4, 1))
VAL TREES:
add(mul(add(add(add(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))), add(mul(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(16, compare_blocks_cols))), mul(mul(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, -68), mul(compare_blocks_cols, ones_diff_cols)))))
add(mul(add(add(mul(ones_diff_cols, 84), mul(ones_diff_cols, zeros_diff_rows)), mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, -29))), mul(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_rows)), add(add(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))), add(add(mul(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, -7)), add(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))), mul(mul(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, 81)), add(mul(zeros_diff_cols, zeros_diff_cols), mul(71, ones_diff_rows)))))
mul(add(compare_blocks_cols, ones_diff_rows), add(mul(zeros_diff_rows, 13), -10))
add(add(mul(zeros_diff_cols, zeros_diff_cols), add(-97, ones_diff_cols)), mul(mul(compare_blocks_cols, 26), add(ones_diff_cols, compare_blocks_rows)))
add(mul(add(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols))), add(mul(add(-95, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), add(add(zeros_diff_rows, 53), add(zeros_diff_cols, ones_diff_rows)))), add(add(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows)), mul(add(ones_diff_cols, 7), add(compare_blocks_rows, compare_blocks_rows))), mul(add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))))
mul(mul(mul(add(-4, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), mul(-26, compare_blocks_rows))), mul(add(mul(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols))))
COND TREES:
le(zeros_diff_cols, zeros_diff_cols)
le(_if_then_else(or_(or_(and_(False, False), ge(zeros_diff_rows, compare_blocks_cols)), or_(and_(True, True), le(0, compare_blocks_cols))), _if_then_else(ge(4, 1), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, max_row_clue, max_col_clue)), max_row_clue), _if_then_else(le(_if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, 0, zeros_diff_cols)), _if_then_else(le(1, 4), _if_then_else(False, max_row_clue, max_col_clue), _if_then_else(False, 4, 2)), _if_then_else(and_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(True, zeros_diff_rows, compare_blocks_rows)))), _if_then_else(or_(and_(ge(compare_blocks_rows, 3), le(zeros_diff_cols, compare_blocks_rows)), or_(le(0, max_col_clue), ge(0, 73))), _if_then_else(le(_if_then_else(True, 4, max_row_clue), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(and_(False, True), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_rows)), _if_then_else(le(1, -81), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, max_col_clue, -24))), _if_then_else(or_(ge(zeros_diff_rows, ones_diff_rows), or_(True, False)), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, ones_diff_rows, 4)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(False, ones_diff_rows, max_col_clue)))))
and_(and_(le(_if_then_else(or_(True, True), _if_then_else(True, 1, 3), _if_then_else(True, 3, ones_diff_rows)), zeros_diff_rows), or_(ge(_if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 14, 4)), or_(or_(True, False), and_(True, False)))), le(_if_then_else(or_(le(3, 2), ge(zeros_diff_rows, 1)), _if_then_else(or_(True, False), _if_then_else(False, 0, 3), _if_then_else(False, 3, 2)), _if_then_else(le(0, ones_diff_cols), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, max_col_clue, zeros_diff_rows))), _if_then_else(ge(_if_then_else(False, 1, 0), _if_then_else(le(zeros_diff_rows, compare_blocks_rows), ones_diff_cols, zeros_diff_rows)), _if_then_else(le(zeros_diff_cols, max_col_clue), _if_then_else(True, max_row_clue, ones_diff_cols), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(ge(3, 2), zeros_diff_cols, _if_then_else(True, max_col_clue, 2)))))
or_(True, ge(zeros_diff_cols, compare_blocks_cols))
ge(_if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(and_(False, le(4, zeros_diff_cols)), 3, 1))
VAL TREES:
add(mul(add(add(add(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))), add(mul(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(16, compare_blocks_cols))), mul(mul(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, -68), mul(compare_blocks_cols, ones_diff_cols)))))
add(mul(add(add(mul(ones_diff_cols, 84), mul(ones_diff_cols, zeros_diff_rows)), mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, -29))), mul(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_rows)), add(add(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))), add(add(mul(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, -7)), add(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))), mul(mul(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, 81)), add(mul(zeros_diff_cols, zeros_diff_cols), mul(71, ones_diff_rows)))))
mul(add(compare_blocks_cols, ones_diff_rows), add(mul(zeros_diff_rows, 13), -10))
add(add(mul(zeros_diff_cols, zeros_diff_cols), add(-97, ones_diff_cols)), mul(mul(compare_blocks_cols, add(add(add(add(mul(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_rows))), mul(mul(add(compare_blocks_rows, ones_diff_cols), add(ones_diff_rows, compare_blocks_rows)), mul(mul(66, ones_diff_rows), mul(-18, compare_blocks_rows)))), mul(add(mul(add(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols)), mul(add(ones_diff_rows, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_cols))), add(add(mul(-79, zeros_diff_rows), add(compare_blocks_rows, ones_diff_rows)), add(add(-90, 8), mul(compare_blocks_cols, zeros_diff_rows)))))), add(ones_diff_cols, compare_blocks_rows)))
add(mul(add(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols))), add(mul(add(-95, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), add(add(zeros_diff_rows, 53), add(zeros_diff_cols, ones_diff_rows)))), add(add(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows)), mul(add(ones_diff_cols, 7), add(compare_blocks_rows, compare_blocks_rows))), mul(add(mul(compare_blocks_rows, mul(add(mul(add(83, zeros_diff_cols), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, 45))), mul(add(mul(zeros_diff_cols, 9), add(compare_blocks_rows, ones_diff_cols)), add(mul(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_cols, zeros_diff_rows))))), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))))
mul(mul(mul(add(-4, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), mul(-26, compare_blocks_rows))), mul(add(mul(zeros_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)), mul(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols))))
COND TREES:
le(_if_then_else(True, zeros_diff_cols, ones_diff_rows), max_row_clue)
le(_if_then_else(or_(or_(and_(False, False), ge(zeros_diff_rows, compare_blocks_cols)), or_(and_(True, True), le(0, compare_blocks_cols))), _if_then_else(le(_if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(False, 3, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, max_row_clue, max_col_clue)), max_row_clue), _if_then_else(le(_if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, 0, zeros_diff_cols)), _if_then_else(le(1, 4), _if_then_else(False, max_row_clue, max_col_clue), _if_then_else(False, 4, 2)), _if_then_else(and_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(True, zeros_diff_rows, compare_blocks_rows)))), _if_then_else(or_(le(_if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(False, 3, compare_blocks_cols)), or_(le(0, max_col_clue), ge(0, 73))), _if_then_else(le(_if_then_else(True, 4, max_row_clue), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(and_(False, True), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_rows)), _if_then_else(le(1, -81), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, max_col_clue, -24))), _if_then_else(or_(ge(zeros_diff_rows, ones_diff_rows), or_(True, False)), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, ones_diff_rows, 4)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(False, ones_diff_rows, max_col_clue)))))
and_(and_(le(_if_then_else(or_(True, True), _if_then_else(True, 1, 3), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(True, _if_then_else(True, max_col_clue, 4), _if_then_else(False, 0, zeros_diff_cols))), or_(ge(_if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 14, 4)), or_(or_(True, False), and_(True, True)))), le(_if_then_else(or_(le(3, 2), ge(zeros_diff_rows, 1)), _if_then_else(or_(True, False), _if_then_else(False, 0, _if_then_else(True, 3, max_col_clue)), _if_then_else(False, 3, 2)), _if_then_else(le(0, ones_diff_cols), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, max_col_clue, zeros_diff_rows))), _if_then_else(ge(_if_then_else(False, 1, 0), _if_then_else(le(zeros_diff_rows, compare_blocks_rows), ones_diff_cols, zeros_diff_rows)), _if_then_else(le(zeros_diff_cols, max_col_clue), _if_then_else(True, 0, ones_diff_cols), _if_then_else(False, compare_blocks_cols, _if_then_else(True, _if_then_else(True, max_col_clue, 4), _if_then_else(False, 0, zeros_diff_cols)))), ones_diff_rows)))
or_(True, ge(compare_blocks_cols, 3))
ge(_if_then_else(True, 4, zeros_diff_cols), _if_then_else(or_(False, False), 3, 1))
VAL TREES:
add(mul(add(add(add(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))), add(mul(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(16, compare_blocks_cols))), mul(mul(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, -68), mul(compare_blocks_cols, ones_diff_cols)))))
add(mul(add(add(mul(ones_diff_cols, 84), mul(ones_diff_cols, zeros_diff_rows)), mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, -29))), mul(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_rows)), add(add(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))), add(add(mul(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, -7)), add(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))), mul(mul(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, 81)), add(mul(zeros_diff_cols, zeros_diff_cols), mul(71, ones_diff_rows)))))
mul(add(compare_blocks_cols, ones_diff_rows), add(mul(zeros_diff_rows, 13), -10))
add(add(mul(zeros_diff_cols, zeros_diff_cols), add(-97, ones_diff_cols)), mul(mul(compare_blocks_cols, 26), add(ones_diff_cols, compare_blocks_rows)))
add(mul(add(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols))), add(mul(add(-95, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), add(add(zeros_diff_rows, 53), add(zeros_diff_cols, ones_diff_rows)))), add(add(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows)), mul(add(ones_diff_cols, 7), add(compare_blocks_rows, compare_blocks_rows))), mul(add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))))
mul(mul(mul(add(-4, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), mul(-26, compare_blocks_rows))), mul(add(mul(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols))))
COND TREES:
and_(or_(ge(_if_then_else(and_(True, True), _if_then_else(False, 4, max_col_clue), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(True, ones_diff_cols, 0))), and_(True, le(_if_then_else(False, ones_diff_cols, 2), _if_then_else(True, _if_then_else(or_(and_(ge(ones_diff_cols, compare_blocks_rows), ge(zeros_diff_rows, zeros_diff_rows)), ge(_if_then_else(False, ones_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, max_col_clue))), _if_then_else(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, 2, ones_diff_rows)), _if_then_else(ge(compare_blocks_rows, 80), _if_then_else(True, 2, 0), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(le(2, 0), _if_then_else(False, -14, ones_diff_cols), _if_then_else(False, max_col_clue, 1))), _if_then_else(or_(le(0, 3), le(compare_blocks_cols, zeros_diff_cols)), _if_then_else(ge(zeros_diff_cols, 1), _if_then_else(False, ones_diff_rows, 4), _if_then_else(True, ones_diff_rows, 0)), _if_then_else(le(ones_diff_cols, 2), _if_then_else(False, zeros_diff_rows, 7), _if_then_else(True, max_col_clue, 4)))), compare_blocks_rows)))), False)
and_(ge(max_col_clue, _if_then_else(True, 0, 4)), True)
or_(True, True)
ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, _if_then_else(False, _if_then_else(or_(False, True), _if_then_else(False, 2, ones_diff_rows), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, max_row_clue, 2))), _if_then_else(and_(ge(max_col_clue, ones_diff_cols), and_(False, False)), _if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, 3, max_col_clue))))
le(_if_then_else(and_(False, True), _if_then_else(or_(or_(and_(ge(_if_then_else(False, 4, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, 87)), or_(le(0, 1), and_(False, False))), and_(and_(or_(True, True), or_(False, False)), le(_if_then_else(or_(True, True), max_col_clue, compare_blocks_cols), _if_then_else(True, 2, 2)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_cols, 65), _if_then_else(False, 2, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(True, 55, max_row_clue), _if_then_else(True, 1, ones_diff_rows)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, 1), _if_then_else(False, compare_blocks_cols, 44))), _if_then_else(and_(or_(False, False), le(1, zeros_diff_cols)), _if_then_else(ge(73, ones_diff_rows), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, -34, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(True, ones_diff_rows, 3))))), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), 3), _if_then_else(False, _if_then_else(True, 4, zeros_diff_rows), compare_blocks_cols))
VAL TREES:
add(add(mul(-100, zeros_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, 59), mul(2, zeros_diff_cols)))
add(mul(mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), mul(mul(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows)))), add(mul(add(add(ones_diff_cols, ones_diff_cols), add(-83, zeros_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(75, zeros_diff_cols))), add(add(mul(ones_diff_cols, ones_diff_rows), mul(39, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows))
add(mul(compare_blocks_cols, mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_cols, ones_diff_cols)), ones_diff_rows)), mul(zeros_diff_rows, ones_diff_rows))
mul(add(add(zeros_diff_rows, ones_diff_rows), compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols))
mul(mul(zeros_diff_cols, zeros_diff_rows), add(17, compare_blocks_cols))
COND TREES:
and_(or_(ge(_if_then_else(and_(True, True), _if_then_else(False, 4, max_col_clue), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(True, ones_diff_cols, 0))), and_(True, le(_if_then_else(False, ones_diff_cols, 2), _if_then_else(True, _if_then_else(or_(and_(ge(ones_diff_cols, compare_blocks_rows), ge(zeros_diff_rows, zeros_diff_rows)), ge(_if_then_else(False, ones_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, max_col_clue))), _if_then_else(ge(_if_then_else(True, 3, max_row_clue), _if_then_else(False, 2, ones_diff_rows)), _if_then_else(ge(compare_blocks_rows, 80), _if_then_else(True, 2, 0), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(le(2, 0), _if_then_else(False, -14, ones_diff_cols), _if_then_else(False, max_col_clue, 1))), _if_then_else(or_(le(0, 3), le(compare_blocks_cols, zeros_diff_cols)), zeros_diff_cols, _if_then_else(True, 3, zeros_diff_rows))), compare_blocks_rows)))), False)
and_(ge(max_col_clue, _if_then_else(ge(max_col_clue, _if_then_else(ge(compare_blocks_cols, 3), 0, 4)), 0, 4)), or_(or_(False, True), or_(False, False)))
or_(True, or_(ge(zeros_diff_cols, zeros_diff_cols), ge(_if_then_else(ge(_if_then_else(False, 1, 0), _if_then_else(le(zeros_diff_rows, compare_blocks_rows), ones_diff_cols, zeros_diff_rows)), _if_then_else(le(zeros_diff_cols, max_col_clue), _if_then_else(True, max_row_clue, ones_diff_cols), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(ge(3, 2), zeros_diff_cols, _if_then_else(True, max_col_clue, 2))), zeros_diff_cols)))
ge(3, _if_then_else(False, _if_then_else(le(-76, 3), _if_then_else(or_(False, True), compare_blocks_cols, _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, max_row_clue, 2))), _if_then_else(and_(ge(max_col_clue, ones_diff_cols), and_(False, False)), _if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, 3, max_col_clue))))
le(_if_then_else(and_(False, True), _if_then_else(or_(or_(and_(ge(_if_then_else(False, 4, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, 87)), or_(le(0, 1), and_(False, False))), and_(and_(or_(True, True), or_(False, False)), le(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, 2, 2)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_cols, 65), _if_then_else(False, 2, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(True, 55, max_row_clue), _if_then_else(True, 1, ones_diff_rows)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, 1), _if_then_else(False, compare_blocks_cols, 44))), _if_then_else(and_(or_(False, False), le(1, zeros_diff_cols)), _if_then_else(ge(73, ones_diff_rows), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, -34, compare_blocks_cols)), _if_then_else(le(_if_then_else(True, 4, zeros_diff_rows), 4), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(True, ones_diff_rows, 3))))), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), 3), _if_then_else(False, _if_then_else(True, 4, zeros_diff_rows), compare_blocks_cols))
VAL TREES:
add(add(mul(-100, zeros_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, 59), mul(2, zeros_diff_cols)))
add(mul(mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), mul(mul(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows)))), add(mul(add(add(ones_diff_cols, ones_diff_cols), add(-83, zeros_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(75, zeros_diff_cols))), add(add(mul(ones_diff_cols, ones_diff_rows), mul(39, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows))
add(mul(compare_blocks_cols, mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_cols, ones_diff_cols)), ones_diff_rows)), mul(zeros_diff_rows, ones_diff_rows))
mul(add(add(zeros_diff_rows, ones_diff_rows), compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols))
mul(mul(zeros_diff_cols, zeros_diff_rows), add(17, compare_blocks_cols))
COND TREES:
le(_if_then_else(ge(zeros_diff_cols, 1), zeros_diff_cols, ones_diff_rows), max_row_clue)
le(_if_then_else(or_(or_(and_(False, and_(ge(_if_then_else(False, -50, ones_diff_rows), _if_then_else(False, 0, zeros_diff_cols)), and_(ge(1, ones_diff_rows), ge(ones_diff_rows, compare_blocks_rows)))), ge(zeros_diff_rows, compare_blocks_cols)), or_(and_(True, True), le(0, compare_blocks_cols))), _if_then_else(le(_if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(False, 3, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, max_row_clue, max_col_clue)), max_row_clue), max_col_clue), _if_then_else(or_(and_(ge(compare_blocks_rows, 3), le(zeros_diff_cols, compare_blocks_rows)), or_(le(0, max_col_clue), ge(0, 73))), _if_then_else(le(_if_then_else(True, 4, max_row_clue), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(and_(False, True), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(True, 4, compare_blocks_rows)), _if_then_else(le(1, -81), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, max_col_clue, -24))), _if_then_else(or_(ge(zeros_diff_rows, ones_diff_rows), or_(True, False)), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, ones_diff_rows, 4)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(False, ones_diff_rows, max_col_clue)))))
and_(and_(le(_if_then_else(or_(True, True), _if_then_else(True, 1, 3), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(True, _if_then_else(True, max_col_clue, 4), _if_then_else(False, 0, zeros_diff_cols))), or_(ge(_if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 14, 4)), or_(or_(True, False), and_(True, True)))), le(_if_then_else(or_(le(3, 2), ge(_if_then_else(le(_if_then_else(ge(_if_then_else(False, ones_diff_cols, 4), _if_then_else(True, zeros_diff_cols, compare_blocks_cols)), _if_then_else(le(2, zeros_diff_cols), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(max_row_clue, 0), _if_then_else(True, 3, max_row_clue), _if_then_else(True, compare_blocks_rows, 2))), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(False, 4, max_col_clue), _if_then_else(False, zeros_diff_rows, max_col_clue)), _if_then_else(and_(True, False), _if_then_else(False, max_col_clue, 4), _if_then_else(False, zeros_diff_rows, compare_blocks_cols)))), _if_then_else(le(_if_then_else(or_(False, False), _if_then_else(True, 1, 3), _if_then_else(True, 2, 4)), _if_then_else(or_(False, False), _if_then_else(True, 7, max_row_clue), _if_then_else(False, 1, 3))), _if_then_else(or_(or_(False, False), and_(True, True)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, 2), _if_then_else(False, max_col_clue, 2)), _if_then_else(and_(True, True), _if_then_else(True, -96, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, 4))), _if_then_else(or_(le(compare_blocks_rows, compare_blocks_cols), or_(True, False)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, 0), _if_then_else(False, max_col_clue, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, 2), _if_then_else(True, compare_blocks_rows, 0)))), _if_then_else(le(_if_then_else(le(ones_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, -25)), _if_then_else(or_(True, False), _if_then_else(False, ones_diff_cols, max_col_clue), _if_then_else(True, ones_diff_cols, 2))), _if_then_else(or_(ge(ones_diff_cols, 0), le(max_row_clue, 3)), _if_then_else(le(1, 0), _if_then_else(False, 1, 2), _if_then_else(True, compare_blocks_rows, 1)), _if_then_else(le(4, zeros_diff_cols), _if_then_else(False, max_row_clue, 0), _if_then_else(False, compare_blocks_cols, 2))), _if_then_else(ge(_if_then_else(False, max_col_clue, 4), _if_then_else(True, 2, compare_blocks_rows)), _if_then_else(or_(False, False), _if_then_else(True, 52, 0), _if_then_else(True, zeros_diff_cols, 2)), _if_then_else(and_(False, False), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(False, zeros_diff_cols, 3))))), 1)), _if_then_else(or_(True, False), _if_then_else(False, 0, _if_then_else(True, 3, max_col_clue)), _if_then_else(False, 3, 2)), _if_then_else(le(0, ones_diff_cols), ones_diff_rows, _if_then_else(False, max_col_clue, zeros_diff_rows))), _if_then_else(ge(_if_then_else(False, 1, 0), _if_then_else(le(zeros_diff_rows, compare_blocks_rows), ones_diff_cols, 3)), _if_then_else(le(zeros_diff_cols, max_col_clue), _if_then_else(True, 0, ones_diff_cols), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(ge(3, 2), zeros_diff_cols, _if_then_else(True, max_col_clue, 2)))))
le(_if_then_else(False, 1, 4), _if_then_else(False, 2, max_row_clue))
ge(_if_then_else(True, 4, zeros_diff_cols), _if_then_else(and_(False, le(-52, 1)), 3, _if_then_else(True, _if_then_else(or_(ge(_if_then_else(False, zeros_diff_rows, 4), _if_then_else(False, -34, 4)), and_(ge(-62, ones_diff_rows), and_(True, True))), _if_then_else(le(_if_then_else(False, 3, max_col_clue), _if_then_else(True, 0, 2)), _if_then_else(and_(False, True), _if_then_else(True, ones_diff_cols, zeros_diff_cols), _if_then_else(False, max_row_clue, max_col_clue)), _if_then_else(ge(ones_diff_rows, 1), _if_then_else(False, 4, 3), _if_then_else(False, 2, zeros_diff_rows))), _if_then_else(or_(ge(compare_blocks_rows, 2), ge(4, 0)), _if_then_else(and_(True, True), _if_then_else(True, 4, 0), _if_then_else(False, 4, zeros_diff_cols)), _if_then_else(or_(True, True), _if_then_else(True, 4, 1), _if_then_else(True, 3, compare_blocks_cols)))), zeros_diff_cols)))
VAL TREES:
add(mul(add(add(add(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))), add(mul(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(16, compare_blocks_cols))), mul(mul(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, -68), mul(compare_blocks_cols, ones_diff_cols)))))
add(mul(add(add(mul(ones_diff_cols, 84), mul(ones_diff_cols, zeros_diff_rows)), mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, -29))), mul(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_rows)), add(add(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))), add(add(mul(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, -7)), add(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))), mul(mul(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, 81)), add(mul(zeros_diff_cols, zeros_diff_cols), mul(71, ones_diff_rows)))))
mul(add(compare_blocks_cols, ones_diff_rows), add(mul(zeros_diff_rows, 13), -10))
add(add(mul(zeros_diff_cols, zeros_diff_cols), add(-97, ones_diff_cols)), mul(mul(compare_blocks_cols, 26), add(ones_diff_cols, compare_blocks_rows)))
add(mul(add(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols))), add(mul(add(-95, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), add(add(zeros_diff_rows, 53), add(zeros_diff_cols, ones_diff_rows)))), add(add(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows)), mul(add(ones_diff_cols, 7), add(compare_blocks_rows, compare_blocks_rows))), mul(add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))))
mul(mul(mul(add(-4, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), mul(-26, compare_blocks_rows))), mul(add(mul(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols))))
COND TREES:
le(max_col_clue, _if_then_else(True, _if_then_else(False, ones_diff_rows, 4), _if_then_else(True, ones_diff_rows, 0)))
le(_if_then_else(or_(or_(and_(False, False), ge(zeros_diff_rows, compare_blocks_cols)), or_(and_(True, True), le(0, compare_blocks_cols))), _if_then_else(le(_if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(False, 3, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, max_row_clue, max_col_clue)), max_row_clue), _if_then_else(le(_if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, 0, zeros_diff_cols)), _if_then_else(le(1, 4), _if_then_else(False, max_row_clue, max_col_clue), _if_then_else(False, 4, 2)), _if_then_else(and_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(True, zeros_diff_rows, compare_blocks_rows)))), _if_then_else(or_(and_(ge(compare_blocks_rows, 3), le(zeros_diff_cols, compare_blocks_rows)), or_(le(0, max_col_clue), ge(0, 73))), _if_then_else(le(_if_then_else(True, 4, max_row_clue), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(and_(False, True), _if_then_else(False, 2, zeros_diff_rows), _if_then_else(False, 2, zeros_diff_rows)), _if_then_else(le(1, -81), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, max_col_clue, -24))), _if_then_else(or_(ge(zeros_diff_rows, ones_diff_rows), or_(True, False)), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, ones_diff_rows, 4)), _if_then_else(True, _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(False, ones_diff_rows, max_col_clue)))))
and_(and_(le(_if_then_else(or_(True, True), _if_then_else(True, 1, 3), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(True, _if_then_else(True, 0, 4), _if_then_else(False, 0, zeros_diff_cols))), or_(ge(_if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 14, 4)), or_(or_(True, False), and_(True, False)))), le(_if_then_else(or_(le(3, 2), ge(zeros_diff_rows, 1)), _if_then_else(or_(True, False), _if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, 3, 2)), _if_then_else(le(0, ones_diff_cols), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, max_col_clue, zeros_diff_rows))), 3))
or_(or_(False, True), ge(zeros_diff_cols, _if_then_else(ge(3, 3), 2, ones_diff_rows)))
ge(zeros_diff_cols, _if_then_else(and_(False, le(4, 1)), 3, 1))
VAL TREES:
add(mul(add(add(add(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))), add(mul(add(add(mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(-54, ones_diff_rows)), add(add(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows))), add(add(mul(zeros_diff_rows, ones_diff_cols), mul(compare_blocks_cols, -81)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_cols)))), add(ones_diff_rows, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(16, compare_blocks_cols))), mul(mul(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, -68), mul(compare_blocks_cols, ones_diff_cols)))))
add(mul(add(add(mul(ones_diff_cols, 84), mul(ones_diff_cols, zeros_diff_rows)), mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, -29))), mul(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_rows)), add(add(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))), add(add(mul(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, -7)), add(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))), mul(mul(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, 81)), add(mul(zeros_diff_cols, mul(add(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_cols))), mul(add(add(compare_blocks_cols, zeros_diff_cols), mul(79, zeros_diff_rows)), mul(add(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols))))), mul(71, ones_diff_rows)))))
mul(add(compare_blocks_cols, ones_diff_rows), mul(add(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_rows, ones_diff_cols)))
add(add(mul(zeros_diff_cols, zeros_diff_cols), add(-97, ones_diff_cols)), mul(mul(compare_blocks_cols, 26), add(ones_diff_cols, compare_blocks_rows)))
add(mul(add(mul(mul(zeros_diff_cols, 4), add(zeros_diff_rows, ones_diff_rows)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols))), add(mul(add(-95, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), add(add(zeros_diff_rows, 53), add(zeros_diff_cols, ones_diff_rows)))), add(add(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows)), mul(add(ones_diff_cols, 7), add(compare_blocks_rows, compare_blocks_rows))), mul(add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))))
mul(mul(mul(add(-4, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), mul(-26, compare_blocks_rows))), mul(add(mul(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols))))
COND TREES:
and_(or_(ge(_if_then_else(and_(True, True), _if_then_else(False, 4, max_col_clue), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(True, ones_diff_cols, 0))), and_(True, le(_if_then_else(False, ones_diff_cols, 2), _if_then_else(True, _if_then_else(or_(and_(ge(ones_diff_cols, compare_blocks_rows), ge(zeros_diff_rows, zeros_diff_rows)), ge(_if_then_else(False, ones_diff_cols, zeros_diff_rows), compare_blocks_rows)), _if_then_else(ge(_if_then_else(True, 3, max_row_clue), _if_then_else(False, 2, ones_diff_rows)), _if_then_else(ge(compare_blocks_rows, 80), _if_then_else(True, 2, 0), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(le(2, 0), _if_then_else(False, -14, ones_diff_cols), _if_then_else(False, max_col_clue, 1))), _if_then_else(or_(le(0, 3), le(compare_blocks_cols, zeros_diff_cols)), _if_then_else(ge(zeros_diff_cols, 1), _if_then_else(False, ones_diff_rows, max_row_clue), _if_then_else(True, ones_diff_rows, 0)), _if_then_else(le(ones_diff_cols, 2), _if_then_else(False, zeros_diff_rows, 7), _if_then_else(True, max_col_clue, 4)))), compare_blocks_rows)))), False)
and_(ge(max_col_clue, ones_diff_cols), or_(or_(False, True), or_(False, False)))
or_(True, and_(ge(_if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 14, 4)), False))
ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, _if_then_else(False, _if_then_else(or_(True, True), _if_then_else(False, 2, ones_diff_rows), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, max_row_clue, 2))), _if_then_else(and_(ge(max_col_clue, ones_diff_cols), and_(False, False)), _if_then_else(False, ones_diff_rows, 3), _if_then_else(True, 3, max_col_clue))))
le(_if_then_else(and_(False, True), _if_then_else(or_(or_(and_(ge(_if_then_else(False, 4, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, 87)), or_(le(0, 1), and_(False, False))), and_(and_(or_(True, True), or_(False, False)), le(_if_then_else(False, max_col_clue, 1), _if_then_else(True, 2, 2)))), ge(_if_then_else(False, _if_then_else(and_(True, True), _if_then_else(True, 55, max_row_clue), _if_then_else(True, 1, ones_diff_rows)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, 1), _if_then_else(False, compare_blocks_cols, 44))), _if_then_else(and_(or_(False, False), le(1, zeros_diff_cols)), _if_then_else(ge(73, ones_diff_rows), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, -34, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(True, ones_diff_rows, 3))))), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), 3), _if_then_else(False, _if_then_else(True, 4, zeros_diff_rows), compare_blocks_cols))
VAL TREES:
add(add(mul(-100, zeros_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, 59), mul(2, zeros_diff_cols)))
add(mul(mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), mul(mul(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows)))), add(mul(add(add(ones_diff_cols, ones_diff_cols), add(-83, zeros_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(75, zeros_diff_cols))), add(add(mul(ones_diff_cols, ones_diff_rows), mul(39, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows))
add(mul(compare_blocks_cols, mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_cols, ones_diff_cols)), ones_diff_rows)), mul(zeros_diff_rows, ones_diff_rows))
mul(add(add(zeros_diff_rows, ones_diff_rows), compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols))
mul(mul(zeros_diff_cols, zeros_diff_rows), add(17, compare_blocks_cols))
COND TREES:
le(_if_then_else(True, zeros_diff_cols, ones_diff_rows), 4)
le(_if_then_else(or_(or_(and_(False, False), ge(zeros_diff_rows, compare_blocks_cols)), or_(and_(True, True), le(0, compare_blocks_cols))), _if_then_else(le(_if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(False, 3, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, max_row_clue, max_col_clue)), max_row_clue), _if_then_else(le(_if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, 0, zeros_diff_cols)), _if_then_else(le(1, 4), _if_then_else(False, max_row_clue, max_col_clue), _if_then_else(False, 4, 2)), _if_then_else(and_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(True, zeros_diff_rows, compare_blocks_rows)))), _if_then_else(or_(ge(4, 1), or_(le(0, max_col_clue), ge(0, 73))), _if_then_else(le(_if_then_else(True, 4, max_row_clue), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(and_(False, True), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_rows)), _if_then_else(le(1, -81), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, max_col_clue, -24))), _if_then_else(or_(ge(zeros_diff_rows, ones_diff_rows), or_(True, False)), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, ones_diff_rows, 4)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, compare_blocks_rows, 4), _if_then_else(False, ones_diff_rows, max_col_clue)))))
and_(and_(le(_if_then_else(or_(True, True), _if_then_else(True, 1, 3), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(True, _if_then_else(True, max_col_clue, 4), _if_then_else(False, 0, zeros_diff_cols))), or_(True, or_(or_(True, False), and_(True, True)))), le(_if_then_else(or_(le(3, 2), ge(zeros_diff_rows, 1)), _if_then_else(or_(True, False), _if_then_else(False, 0, _if_then_else(True, 3, max_col_clue)), _if_then_else(False, 3, 2)), _if_then_else(le(0, ones_diff_cols), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, max_col_clue, zeros_diff_rows))), _if_then_else(ge(_if_then_else(False, 1, 0), _if_then_else(le(zeros_diff_rows, compare_blocks_rows), ones_diff_cols, zeros_diff_rows)), _if_then_else(le(zeros_diff_cols, max_col_clue), _if_then_else(True, 0, ones_diff_cols), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), ones_diff_rows)))
or_(True, ge(compare_blocks_cols, zeros_diff_rows))
ge(_if_then_else(True, 4, zeros_diff_cols), _if_then_else(or_(ge(_if_then_else(False, compare_blocks_cols, 65), _if_then_else(False, 2, compare_blocks_cols)), False), 3, 1))
VAL TREES:
add(mul(add(add(add(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))), add(mul(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(16, compare_blocks_cols))), mul(mul(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, -68), mul(compare_blocks_cols, ones_diff_cols)))))
add(mul(add(add(mul(ones_diff_cols, 84), mul(ones_diff_cols, zeros_diff_rows)), mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, -29))), mul(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_rows)), add(add(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))), add(add(mul(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, -7)), add(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))), mul(mul(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, 81)), add(mul(zeros_diff_cols, zeros_diff_cols), mul(71, ones_diff_rows)))))
mul(add(compare_blocks_cols, ones_diff_rows), add(mul(zeros_diff_rows, 13), -10))
add(add(mul(zeros_diff_cols, zeros_diff_cols), add(-97, ones_diff_cols)), mul(mul(compare_blocks_cols, 26), add(ones_diff_cols, compare_blocks_rows)))
add(mul(add(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols))), add(mul(add(-95, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), add(add(zeros_diff_rows, 53), add(zeros_diff_cols, ones_diff_rows)))), add(add(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows)), mul(add(ones_diff_cols, 7), add(compare_blocks_rows, compare_blocks_rows))), mul(add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))))
mul(mul(mul(add(-4, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), mul(-26, compare_blocks_rows))), mul(add(mul(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols))))
COND TREES:
and_(or_(ge(_if_then_else(and_(True, True), _if_then_else(False, 4, max_col_clue), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(True, ones_diff_cols, 0))), and_(True, le(_if_then_else(False, ones_diff_cols, 2), _if_then_else(True, _if_then_else(or_(and_(ge(ones_diff_cols, compare_blocks_rows), ge(zeros_diff_rows, zeros_diff_rows)), ge(_if_then_else(False, ones_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, max_col_clue))), _if_then_else(ge(_if_then_else(True, 3, max_row_clue), _if_then_else(False, 2, ones_diff_rows)), _if_then_else(ge(compare_blocks_rows, 80), _if_then_else(True, 2, 0), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(le(2, 0), _if_then_else(False, -14, ones_diff_cols), _if_then_else(False, max_col_clue, 1))), _if_then_else(or_(le(0, 3), le(compare_blocks_cols, zeros_diff_cols)), zeros_diff_cols, _if_then_else(True, 3, zeros_diff_rows))), compare_blocks_rows)))), False)
and_(ge(max_col_clue, _if_then_else(ge(max_col_clue, _if_then_else(ge(compare_blocks_cols, 3), 0, 4)), 0, 4)), or_(or_(False, True), or_(False, False)))
or_(True, or_(ge(zeros_diff_cols, zeros_diff_cols), ge(_if_then_else(ge(_if_then_else(False, 1, 0), _if_then_else(le(zeros_diff_rows, compare_blocks_rows), ones_diff_cols, zeros_diff_rows)), _if_then_else(le(zeros_diff_cols, max_col_clue), _if_then_else(True, max_row_clue, ones_diff_cols), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(ge(3, 2), zeros_diff_cols, _if_then_else(True, max_col_clue, 2))), zeros_diff_cols)))
ge(3, _if_then_else(False, _if_then_else(le(-76, 3), _if_then_else(or_(False, True), compare_blocks_cols, _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, max_row_clue, 2))), _if_then_else(and_(ge(max_col_clue, ones_diff_cols), and_(False, False)), _if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, 3, max_col_clue))))
le(_if_then_else(and_(False, True), _if_then_else(or_(or_(and_(ge(_if_then_else(False, 4, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, 87)), or_(le(0, 1), and_(False, False))), and_(and_(or_(True, True), or_(False, False)), le(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, 2, 2)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_cols, 65), _if_then_else(False, 2, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(True, 55, max_row_clue), _if_then_else(True, 1, ones_diff_rows)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, 1), _if_then_else(False, compare_blocks_cols, 44))), _if_then_else(and_(or_(False, False), le(1, zeros_diff_cols)), _if_then_else(ge(73, ones_diff_rows), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, -34, compare_blocks_cols)), _if_then_else(le(_if_then_else(True, 4, zeros_diff_rows), 4), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(True, ones_diff_rows, 3))))), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), 3), _if_then_else(False, _if_then_else(True, 4, zeros_diff_rows), compare_blocks_cols))
VAL TREES:
add(add(mul(-100, zeros_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, 59), mul(2, zeros_diff_cols)))
add(mul(mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), mul(mul(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows)))), add(mul(add(add(ones_diff_cols, ones_diff_cols), add(-83, zeros_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(75, zeros_diff_cols))), add(add(mul(ones_diff_cols, ones_diff_rows), mul(39, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows))
add(mul(compare_blocks_cols, mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_cols, ones_diff_cols)), ones_diff_rows)), mul(zeros_diff_rows, ones_diff_rows))
mul(add(add(zeros_diff_rows, ones_diff_rows), compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols))
mul(mul(zeros_diff_cols, zeros_diff_rows), add(17, compare_blocks_cols))
COND TREES:
le(zeros_diff_cols, _if_then_else(True, compare_blocks_cols, 4))
le(_if_then_else(or_(False, ge(-55, 1)), _if_then_else(le(_if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(False, 3, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, max_row_clue, max_col_clue)), max_row_clue), _if_then_else(le(_if_then_else(or_(False, True), compare_blocks_cols, max_row_clue), _if_then_else(True, 0, zeros_diff_cols)), _if_then_else(True, _if_then_else(False, max_row_clue, max_col_clue), _if_then_else(False, 4, 2)), _if_then_else(and_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(True, zeros_diff_rows, compare_blocks_rows)))), _if_then_else(or_(and_(ge(compare_blocks_rows, 3), le(zeros_diff_cols, compare_blocks_rows)), or_(le(0, max_col_clue), ge(0, 73))), _if_then_else(le(zeros_diff_cols, _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(and_(False, True), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, -81), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, max_col_clue, -24))), _if_then_else(or_(ge(zeros_diff_rows, ones_diff_rows), or_(True, False)), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), -55), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(False, ones_diff_rows, max_col_clue)))))
and_(and_(le(_if_then_else(or_(True, True), 3, _if_then_else(True, 3, ones_diff_rows)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(True, max_col_clue, 4), _if_then_else(False, 0, zeros_diff_cols))), or_(ge(_if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 14, 4)), or_(or_(True, False), and_(True, False)))), le(_if_then_else(or_(le(3, 2), ge(zeros_diff_rows, 1)), _if_then_else(or_(True, False), _if_then_else(le(ones_diff_rows, 1), 0, 3), _if_then_else(False, 3, 2)), _if_then_else(True, _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, max_col_clue, zeros_diff_rows))), _if_then_else(ge(_if_then_else(False, 1, 0), _if_then_else(le(zeros_diff_rows, compare_blocks_rows), ones_diff_cols, zeros_diff_rows)), _if_then_else(le(zeros_diff_cols, max_col_clue), _if_then_else(True, max_row_clue, ones_diff_cols), _if_then_else(False, 0, zeros_diff_rows)), _if_then_else(ge(3, 2), zeros_diff_cols, _if_then_else(True, max_col_clue, 2)))))
or_(ge(compare_blocks_cols, compare_blocks_rows), False)
ge(_if_then_else(ge(zeros_diff_rows, ones_diff_rows), ones_diff_rows, zeros_diff_cols), _if_then_else(and_(False, le(4, 1)), 3, 1))
VAL TREES:
add(mul(add(add(add(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))), add(mul(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(16, compare_blocks_cols))), mul(mul(add(zeros_diff_cols, zeros_diff_rows), add(add(add(add(ones_diff_rows, compare_blocks_rows), compare_blocks_rows), mul(compare_blocks_cols, ones_diff_cols)), add(mul(add(add(zeros_diff_cols, compare_blocks_rows), add(-93, zeros_diff_cols)), mul(mul(ones_diff_rows, 37), mul(compare_blocks_cols, ones_diff_cols))), add(add(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_cols)), add(add(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, zeros_diff_cols)))))), add(add(zeros_diff_rows, -68), mul(compare_blocks_cols, ones_diff_cols)))))
add(mul(add(add(mul(ones_diff_cols, 84), mul(ones_diff_cols, zeros_diff_rows)), mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, -29))), mul(mul(mul(zeros_diff_rows, compare_blocks_rows), add(add(zeros_diff_rows, ones_diff_rows), add(compare_blocks_cols, ones_diff_cols))), add(add(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))), add(add(mul(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, -7)), add(add(mul(mul(mul(mul(zeros_diff_rows, -54), add(compare_blocks_rows, -34)), mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, ones_diff_cols))), mul(add(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_rows, compare_blocks_cols)), add(add(compare_blocks_cols, 82), mul(compare_blocks_cols, ones_diff_rows)))), mul(add(add(mul(zeros_diff_rows, ones_diff_cols), mul(zeros_diff_cols, compare_blocks_cols)), add(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, compare_blocks_cols))), add(mul(add(compare_blocks_rows, zeros_diff_rows), mul(zeros_diff_cols, 0)), mul(add(ones_diff_cols, 31), add(ones_diff_cols, ones_diff_cols))))), mul(zeros_diff_cols, compare_blocks_rows))), mul(mul(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, 81)), add(mul(zeros_diff_cols, zeros_diff_cols), mul(71, ones_diff_rows)))))
mul(mul(ones_diff_cols, ones_diff_cols), add(mul(add(compare_blocks_cols, ones_diff_rows), add(zeros_diff_rows, compare_blocks_rows)), compare_blocks_rows))
add(add(add(mul(ones_diff_rows, zeros_diff_rows), add(ones_diff_cols, ones_diff_rows)), add(mul(ones_diff_rows, ones_diff_rows), add(zeros_diff_rows, compare_blocks_cols))), add(mul(add(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, ones_diff_cols)), add(mul(zeros_diff_rows, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_cols))))
add(mul(add(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols))), add(mul(add(-95, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), add(add(zeros_diff_rows, 53), add(zeros_diff_cols, ones_diff_rows)))), add(add(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows)), mul(add(ones_diff_cols, 7), add(compare_blocks_rows, compare_blocks_rows))), mul(add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))))
mul(mul(mul(add(-4, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), mul(add(mul(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols))))
COND TREES:
ge(_if_then_else(and_(ge(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(False, 1, compare_blocks_cols)), ge(_if_then_else(True, 3, 2), _if_then_else(True, max_row_clue, zeros_diff_rows))), _if_then_else(or_(ge(compare_blocks_rows, ones_diff_cols), ge(max_row_clue, -9)), _if_then_else(and_(False, False), _if_then_else(False, 1, 4), _if_then_else(False, 58, max_row_clue)), _if_then_else(or_(True, False), _if_then_else(False, compare_blocks_rows, ones_diff_cols), _if_then_else(False, 2, max_row_clue))), _if_then_else(ge(_if_then_else(True, ones_diff_cols, 2), _if_then_else(True, zeros_diff_rows, 4)), _if_then_else(ge(ones_diff_rows, -73), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(False, ones_diff_cols, 1)), _if_then_else(le(3, 4), _if_then_else(True, 46, compare_blocks_cols), _if_then_else(True, compare_blocks_cols, 2)))), _if_then_else(le(_if_then_else(or_(True, True), _if_then_else(True, zeros_diff_cols, max_col_clue), _if_then_else(True, zeros_diff_cols, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(True, 3, compare_blocks_rows))), _if_then_else(and_(or_(True, True), ge(compare_blocks_cols, 1)), _if_then_else(and_(True, False), _if_then_else(True, 3, ones_diff_cols), _if_then_else(True, max_col_clue, 86)), _if_then_else(le(compare_blocks_cols, 3), _if_then_else(True, 4, ones_diff_cols), _if_then_else(True, 2, 0))), _if_then_else(or_(ge(zeros_diff_cols, ones_diff_rows), ge(zeros_diff_cols, 1)), _if_then_else(le(1, ones_diff_cols), _if_then_else(True, 4, 0), _if_then_else(True, max_row_clue, 4)), _if_then_else(or_(True, True), _if_then_else(False, 3, 1), _if_then_else(False, 3, 1)))))
le(_if_then_else(or_(or_(and_(False, False), ge(zeros_diff_rows, compare_blocks_cols)), or_(and_(True, True), le(0, compare_blocks_cols))), _if_then_else(le(_if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(False, 3, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, max_row_clue, max_col_clue)), max_row_clue), _if_then_else(le(_if_then_else(False, zeros_diff_rows, max_row_clue), _if_then_else(True, 0, zeros_diff_cols)), _if_then_else(le(1, 4), _if_then_else(False, max_row_clue, max_col_clue), _if_then_else(False, 4, 2)), _if_then_else(and_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(True, zeros_diff_rows, compare_blocks_rows)))), _if_then_else(or_(ge(4, 1), or_(le(0, max_col_clue), ge(0, 73))), _if_then_else(le(_if_then_else(True, 4, max_row_clue), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(and_(False, True), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(or_(False, and_(False, and_(True, False))), _if_then_else(False, ones_diff_cols, 34), _if_then_else(and_(and_(True, True), False), ones_diff_rows, 0))), _if_then_else(le(1, -81), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, max_col_clue, -24))), _if_then_else(or_(ge(zeros_diff_rows, ones_diff_rows), or_(True, False)), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, ones_diff_rows, 4)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(False, ones_diff_rows, max_col_clue)))))
and_(and_(le(_if_then_else(or_(True, True), _if_then_else(True, 1, 3), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(True, _if_then_else(True, max_col_clue, _if_then_else(False, 3, 2)), _if_then_else(False, 0, zeros_diff_cols))), or_(ge(_if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 14, 4)), or_(or_(True, False), and_(True, True)))), le(_if_then_else(or_(le(3, 2), ge(zeros_diff_rows, 1)), _if_then_else(or_(True, False), _if_then_else(False, 0, _if_then_else(True, 3, max_col_clue)), _if_then_else(False, 3, 2)), _if_then_else(le(0, ones_diff_cols), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, max_col_clue, _if_then_else(and_(ge(_if_then_else(True, ones_diff_rows, ones_diff_rows), _if_then_else(False, 4, max_row_clue)), ge(_if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, ones_diff_cols))), _if_then_else(and_(or_(False, False), ge(2, zeros_diff_rows)), _if_then_else(le(compare_blocks_rows, ones_diff_rows), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, 4, max_col_clue)), _if_then_else(le(1, 4), _if_then_else(False, max_row_clue, 1), _if_then_else(True, compare_blocks_cols, zeros_diff_rows))), _if_then_else(le(_if_then_else(False, 0, 3), _if_then_else(True, ones_diff_rows, ones_diff_cols)), _if_then_else(le(max_col_clue, -23), _if_then_else(False, 3, compare_blocks_rows), _if_then_else(True, 4, 1)), _if_then_else(and_(False, True), _if_then_else(True, 1, 89), _if_then_else(True, 1, ones_diff_cols))))))), _if_then_else(ge(_if_then_else(False, 1, 0), _if_then_else(le(zeros_diff_rows, compare_blocks_rows), ones_diff_cols, zeros_diff_rows)), _if_then_else(le(zeros_diff_cols, max_col_clue), _if_then_else(True, 0, ones_diff_cols), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), ones_diff_rows)))
or_(True, ge(compare_blocks_cols, 3))
ge(_if_then_else(True, 4, zeros_diff_cols), _if_then_else(False, 3, _if_then_else(ge(_if_then_else(le(_if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(True, ones_diff_rows, 4)), _if_then_else(ge(0, ones_diff_rows), _if_then_else(True, 71, compare_blocks_rows), _if_then_else(False, 1, 3)), _if_then_else(or_(False, True), _if_then_else(False, zeros_diff_cols, 4), _if_then_else(False, zeros_diff_rows, 1))), _if_then_else(and_(and_(True, False), or_(True, False)), _if_then_else(or_(True, False), _if_then_else(False, ones_diff_cols, 4), _if_then_else(False, 2, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(True, 3, 4), _if_then_else(True, 2, 23)))), _if_then_else(le(_if_then_else(le(42, max_row_clue), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, 3, 2)), _if_then_else(ge(zeros_diff_cols, max_col_clue), _if_then_else(False, 2, ones_diff_rows), _if_then_else(True, compare_blocks_rows, 1))), _if_then_else(or_(and_(True, False), and_(False, True)), _if_then_else(and_(False, True), _if_then_else(False, 1, 4), _if_then_else(False, 43, max_col_clue)), _if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, max_col_clue), _if_then_else(True, ones_diff_rows, 4))), _if_then_else(ge(_if_then_else(False, -18, ones_diff_cols), _if_then_else(True, zeros_diff_rows, 56)), _if_then_else(and_(True, False), _if_then_else(True, compare_blocks_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, 2)), _if_then_else(or_(False, False), _if_then_else(False, 1, 2), _if_then_else(False, max_col_clue, compare_blocks_rows)))), _if_then_else(ge(_if_then_else(ge(max_col_clue, compare_blocks_cols), _if_then_else(True, -70, ones_diff_cols), _if_then_else(True, 13, zeros_diff_rows)), _if_then_else(ge(-100, 1), _if_then_else(True, 0, compare_blocks_cols), _if_then_else(False, max_row_clue, 2))), _if_then_else(or_(or_(True, False), or_(False, False)), _if_then_else(and_(True, True), _if_then_else(False, -73, 0), _if_then_else(True, 4, 2)), _if_then_else(le(compare_blocks_rows, ones_diff_rows), _if_then_else(True, 3, 3), _if_then_else(True, zeros_diff_cols, compare_blocks_cols))), _if_then_else(and_(le(2, 3), and_(False, False)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_rows, zeros_diff_cols)), _if_then_else(le(max_row_clue, compare_blocks_rows), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(False, max_row_clue, max_row_clue)))))))
VAL TREES:
add(mul(add(add(add(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))), add(mul(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(16, compare_blocks_cols))), mul(mul(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, -68), mul(compare_blocks_cols, ones_diff_cols)))))
add(mul(add(add(mul(ones_diff_cols, 84), mul(ones_diff_cols, zeros_diff_rows)), mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, -29))), mul(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_rows)), add(add(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))), add(add(mul(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, -7)), add(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))), mul(mul(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, 81)), add(mul(zeros_diff_cols, zeros_diff_cols), mul(71, ones_diff_rows)))))
mul(add(compare_blocks_cols, ones_diff_rows), add(mul(zeros_diff_rows, 13), -10))
add(add(mul(zeros_diff_cols, zeros_diff_cols), add(-97, ones_diff_cols)), mul(mul(compare_blocks_cols, 26), add(ones_diff_cols, compare_blocks_rows)))
add(mul(add(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols))), add(mul(add(-95, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), add(add(zeros_diff_rows, 53), add(zeros_diff_cols, ones_diff_rows)))), add(add(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows)), mul(add(ones_diff_cols, 7), add(compare_blocks_rows, compare_blocks_rows))), mul(add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))))
mul(mul(mul(add(-4, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), mul(-26, compare_blocks_rows))), mul(add(mul(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols))))
COND TREES:
le(_if_then_else(True, zeros_diff_cols, ones_diff_rows), max_row_clue)
le(_if_then_else(or_(or_(and_(False, False), ge(zeros_diff_rows, compare_blocks_cols)), or_(and_(True, True), le(0, compare_blocks_cols))), _if_then_else(le(_if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(False, 3, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, max_row_clue, max_col_clue)), max_row_clue), _if_then_else(le(_if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, 0, zeros_diff_cols)), _if_then_else(le(1, 4), _if_then_else(False, max_row_clue, max_col_clue), _if_then_else(False, 4, 2)), _if_then_else(and_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(True, zeros_diff_rows, compare_blocks_rows)))), _if_then_else(or_(ge(4, 1), or_(le(0, max_col_clue), ge(0, 73))), _if_then_else(le(_if_then_else(True, 4, max_row_clue), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(and_(False, True), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_rows)), _if_then_else(le(1, -81), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, max_col_clue, -24))), _if_then_else(or_(ge(zeros_diff_rows, ones_diff_rows), or_(True, False)), _if_then_else(and_(ge(max_col_clue, compare_blocks_rows), ge(compare_blocks_cols, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, 4, 0), _if_then_else(False, 0, 3)), _if_then_else(and_(True, True), _if_then_else(True, 1, max_col_clue), _if_then_else(True, zeros_diff_cols, 2))), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(False, ones_diff_rows, max_col_clue)))))
and_(and_(le(_if_then_else(or_(True, True), _if_then_else(True, 1, 3), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(True, _if_then_else(True, max_col_clue, 4), _if_then_else(False, 0, zeros_diff_cols))), or_(ge(_if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 14, 4)), or_(or_(True, False), and_(le(_if_then_else(and_(True, True), _if_then_else(True, compare_blocks_rows, ones_diff_rows), _if_then_else(True, 3, 4)), _if_then_else(or_(False, False), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(True, ones_diff_cols, -87))), True)))), le(_if_then_else(or_(le(3, 2), ge(zeros_diff_rows, 1)), _if_then_else(or_(True, False), _if_then_else(False, 0, _if_then_else(True, 3, max_col_clue)), 4), _if_then_else(le(0, ones_diff_cols), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, max_col_clue, zeros_diff_rows))), _if_then_else(ge(_if_then_else(False, 1, 0), _if_then_else(le(zeros_diff_rows, compare_blocks_rows), ones_diff_cols, zeros_diff_rows)), _if_then_else(le(zeros_diff_cols, max_col_clue), _if_then_else(True, 0, ones_diff_cols), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), ones_diff_rows)))
or_(True, ge(compare_blocks_cols, _if_then_else(and_(True, False), _if_then_else(True, ones_diff_rows, max_col_clue), _if_then_else(le(compare_blocks_rows, compare_blocks_rows), 0, _if_then_else(False, max_row_clue, _if_then_else(True, 0, 3))))))
le(_if_then_else(ge(_if_then_else(and_(True, True), _if_then_else(False, 2, 4), _if_then_else(False, 2, zeros_diff_cols)), _if_then_else(ge(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(False, 3, ones_diff_cols))), _if_then_else(ge(_if_then_else(True, 3, ones_diff_rows), _if_then_else(True, compare_blocks_rows, zeros_diff_rows)), _if_then_else(or_(True, True), _if_then_else(False, compare_blocks_rows, max_col_clue), _if_then_else(True, 0, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(True, 2, 1), _if_then_else(False, compare_blocks_cols, zeros_diff_rows))), _if_then_else(le(_if_then_else(False, max_col_clue, max_col_clue), _if_then_else(False, compare_blocks_cols, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(False, max_col_clue, ones_diff_cols), _if_then_else(True, max_row_clue, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(True, 1, ones_diff_cols)))), _if_then_else(and_(ge(_if_then_else(True, 4, 3), _if_then_else(True, ones_diff_cols, zeros_diff_cols)), le(_if_then_else(False, ones_diff_cols, 4), _if_then_else(True, ones_diff_cols, max_col_clue))), _if_then_else(or_(le(ones_diff_rows, ones_diff_cols), and_(True, False)), _if_then_else(le(max_col_clue, 0), _if_then_else(False, -90, 4), _if_then_else(False, 3, compare_blocks_cols)), _if_then_else(ge(max_col_clue, ones_diff_rows), _if_then_else(False, 4, max_row_clue), _if_then_else(False, 1, ones_diff_rows))), _if_then_else(and_(and_(True, True), le(4, 1)), _if_then_else(ge(4, 0), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(True, zeros_diff_rows, 3)), _if_then_else(ge(-85, ones_diff_cols), _if_then_else(False, zeros_diff_rows, max_row_clue), _if_then_else(False, compare_blocks_cols, ones_diff_rows)))))
VAL TREES:
add(mul(add(add(add(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))), add(mul(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(16, compare_blocks_cols))), mul(mul(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, -68), mul(compare_blocks_cols, ones_diff_cols)))))
add(mul(add(add(mul(ones_diff_cols, 84), mul(ones_diff_cols, zeros_diff_rows)), mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, -29))), mul(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_rows)), add(add(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))), add(add(mul(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, -7)), add(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))), mul(mul(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, 81)), add(mul(zeros_diff_cols, zeros_diff_cols), mul(71, ones_diff_rows)))))
mul(add(compare_blocks_cols, ones_diff_rows), add(mul(zeros_diff_rows, 13), -10))
add(add(mul(zeros_diff_cols, zeros_diff_cols), add(-97, ones_diff_cols)), mul(mul(compare_blocks_cols, 26), add(ones_diff_cols, compare_blocks_rows)))
add(mul(add(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols))), add(mul(add(-95, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), add(add(zeros_diff_rows, 53), add(zeros_diff_cols, ones_diff_rows)))), add(add(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows)), mul(add(ones_diff_cols, 7), add(compare_blocks_rows, compare_blocks_rows))), mul(add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))))
mul(mul(mul(add(-4, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), mul(-26, compare_blocks_rows))), mul(add(mul(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols))))
COND TREES:
and_(ge(_if_then_else(le(61, compare_blocks_cols), _if_then_else(True, _if_then_else(True, ones_diff_rows, 0), ones_diff_cols), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)), _if_then_else(le(0, 1), _if_then_else(True, compare_blocks_cols, 4), _if_then_else(True, zeros_diff_cols, ones_diff_rows))), le(3, _if_then_else(or_(True, True), _if_then_else(False, max_col_clue, 8), _if_then_else(True, 3, max_col_clue))))
or_(False, True)
le(_if_then_else(and_(True, ge(compare_blocks_rows, 31)), _if_then_else(True, ones_diff_cols, ones_diff_rows), _if_then_else(ge(zeros_diff_cols, zeros_diff_cols), 3, max_col_clue)), _if_then_else(ge(3, ones_diff_rows), _if_then_else(True, 0, 1), _if_then_else(True, compare_blocks_cols, compare_blocks_cols)))
or_(False, le(compare_blocks_cols, 3))
and_(ge(_if_then_else(and_(True, or_(or_(and_(ge(_if_then_else(False, 4, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, 87)), or_(le(0, 1), and_(False, False))), and_(and_(or_(True, True), or_(False, False)), le(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, 2, 2)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_cols, 65), _if_then_else(False, 2, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(True, 55, max_row_clue), _if_then_else(True, 1, ones_diff_rows)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, 1), _if_then_else(False, compare_blocks_cols, 44))), _if_then_else(and_(or_(False, False), le(1, zeros_diff_cols)), _if_then_else(ge(73, ones_diff_rows), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, -34, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(True, ones_diff_rows, 3)))))), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(False, 0, _if_then_else(True, 4, zeros_diff_rows))), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, -52, 4))), or_(or_(and_(False, True), False), ge(_if_then_else(True, 2, 1), _if_then_else(True, 2, ones_diff_cols))))
VAL TREES:
add(add(compare_blocks_rows, ones_diff_rows), mul(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(add(add(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)), add(add(zeros_diff_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows))), mul(mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(zeros_diff_cols, ones_diff_cols))))
mul(mul(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))
add(mul(mul(mul(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, compare_blocks_rows))), add(add(add(-98, ones_diff_cols), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols))))
add(add(add(ones_diff_rows, compare_blocks_rows), add(zeros_diff_rows, 31)), mul(mul(-78, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))
mul(add(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols))
COND TREES:
le(zeros_diff_cols, _if_then_else(or_(or_(or_(le(_if_then_else(False, zeros_diff_rows, 1), _if_then_else(False, 1, compare_blocks_cols)), and_(le(max_row_clue, compare_blocks_rows), and_(False, False))), ge(_if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, max_col_clue), _if_then_else(True, max_col_clue, zeros_diff_rows)), _if_then_else(ge(1, 34), _if_then_else(False, 0, max_row_clue), _if_then_else(True, max_col_clue, 31)))), or_(and_(and_(and_(True, True), ge(zeros_diff_cols, compare_blocks_cols)), le(_if_then_else(False, zeros_diff_rows, 4), _if_then_else(False, 2, 19))), le(_if_then_else(ge(3, 3), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(True, ones_diff_rows, ones_diff_rows)), _if_then_else(le(0, 4), _if_then_else(True, max_col_clue, 0), _if_then_else(False, compare_blocks_rows, ones_diff_cols))))), zeros_diff_rows, 2))
le(_if_then_else(or_(or_(and_(False, False), ge(zeros_diff_rows, compare_blocks_cols)), or_(and_(True, True), le(0, compare_blocks_cols))), _if_then_else(le(_if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(False, 3, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, max_row_clue, max_col_clue)), max_row_clue), _if_then_else(le(_if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, 0, zeros_diff_cols)), _if_then_else(le(1, 4), _if_then_else(False, max_row_clue, max_col_clue), _if_then_else(or_(or_(or_(le(_if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, 2, 2)), ge(_if_then_else(True, zeros_diff_cols, max_row_clue), _if_then_else(False, max_col_clue, ones_diff_rows))), or_(ge(_if_then_else(True, 1, 3), _if_then_else(True, 1, 0)), or_(le(2, compare_blocks_rows), and_(False, True)))), or_(ge(_if_then_else(and_(False, False), _if_then_else(True, 2, -2), _if_then_else(True, 4, compare_blocks_rows)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_cols, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_cols))), or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, zeros_diff_cols, max_row_clue)), ge(_if_then_else(True, compare_blocks_rows, ones_diff_rows), _if_then_else(True, compare_blocks_cols, 4))))), 4, 2)), _if_then_else(and_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(True, zeros_diff_rows, compare_blocks_rows)))), _if_then_else(or_(and_(ge(compare_blocks_rows, 3), le(zeros_diff_cols, compare_blocks_rows)), or_(ge(4, 1), ge(0, 73))), _if_then_else(le(_if_then_else(True, 4, max_row_clue), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(and_(False, True), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_rows)), _if_then_else(le(1, -81), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, max_col_clue, -24))), _if_then_else(or_(ge(zeros_diff_rows, ones_diff_rows), or_(True, False)), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, ones_diff_rows, 4)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(False, ones_diff_rows, max_col_clue)))))
and_(and_(le(_if_then_else(le(max_col_clue, ones_diff_rows), _if_then_else(True, _if_then_else(True, compare_blocks_rows, _if_then_else(False, 3, ones_diff_rows)), _if_then_else(False, 0, _if_then_else(True, compare_blocks_cols, compare_blocks_rows))), _if_then_else(False, zeros_diff_cols, max_row_clue)), _if_then_else(True, _if_then_else(True, max_col_clue, 4), _if_then_else(False, 0, zeros_diff_cols))), or_(ge(_if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 14, ones_diff_cols)), or_(or_(True, False), and_(True, False)))), le(_if_then_else(or_(le(3, 2), ge(zeros_diff_rows, 1)), _if_then_else(or_(True, False), _if_then_else(False, 0, 3), _if_then_else(False, 3, 2)), _if_then_else(le(0, ones_diff_cols), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, max_col_clue, zeros_diff_rows))), _if_then_else(ge(_if_then_else(False, 1, 0), _if_then_else(le(zeros_diff_rows, compare_blocks_rows), ones_diff_cols, zeros_diff_rows)), _if_then_else(le(zeros_diff_cols, max_col_clue), _if_then_else(True, max_row_clue, ones_diff_cols), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(ge(3, 2), zeros_diff_cols, _if_then_else(True, max_col_clue, 2)))))
or_(True, and_(le(_if_then_else(le(_if_then_else(True, 0, max_row_clue), _if_then_else(False, max_col_clue, 44)), _if_then_else(ge(ones_diff_rows, ones_diff_cols), _if_then_else(True, max_row_clue, max_col_clue), _if_then_else(True, max_row_clue, max_col_clue)), _if_then_else(le(-60, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, 1, 4))), _if_then_else(le(_if_then_else(True, 2, 3), _if_then_else(False, 3, 2)), _if_then_else(ge(max_row_clue, 1), _if_then_else(True, 10, 81), _if_then_else(True, max_row_clue, 1)), _if_then_else(and_(False, True), _if_then_else(False, -90, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 1)))), ge(_if_then_else(and_(and_(True, False), and_(False, False)), _if_then_else(le(66, 1), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, max_col_clue, 84)), _if_then_else(or_(False, True), _if_then_else(False, max_col_clue, -60), _if_then_else(True, compare_blocks_cols, max_row_clue))), _if_then_else(or_(or_(True, True), and_(False, False)), _if_then_else(ge(-7, 4), _if_then_else(False, ones_diff_cols, -53), _if_then_else(True, 8, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(True, compare_blocks_cols, 4))))))
ge(_if_then_else(ge(-16, 3), _if_then_else(False, max_col_clue, 1), _if_then_else(True, 4, compare_blocks_cols)), _if_then_else(and_(False, False), 3, 1))
VAL TREES:
add(mul(add(add(add(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))), add(mul(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(16, compare_blocks_cols))), mul(mul(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, -68), mul(compare_blocks_cols, ones_diff_cols)))))
add(mul(add(add(mul(ones_diff_cols, 84), mul(ones_diff_cols, zeros_diff_rows)), mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, -29))), mul(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_rows)), add(add(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))), add(add(mul(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, -7)), add(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))), mul(mul(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, 81)), add(mul(zeros_diff_cols, zeros_diff_cols), mul(71, ones_diff_rows)))))
mul(add(compare_blocks_cols, ones_diff_rows), add(mul(zeros_diff_rows, 13), -10))
add(add(mul(zeros_diff_cols, zeros_diff_cols), add(-97, ones_diff_cols)), mul(mul(compare_blocks_cols, 26), add(ones_diff_cols, compare_blocks_rows)))
add(mul(add(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols))), add(mul(add(-95, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), add(add(zeros_diff_rows, 53), add(zeros_diff_cols, ones_diff_rows)))), add(add(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows)), mul(add(ones_diff_cols, 7), add(compare_blocks_rows, compare_blocks_rows))), mul(add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))))
mul(mul(mul(add(-4, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), mul(-26, compare_blocks_rows))), mul(add(mul(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols))))
COND TREES:
and_(or_(ge(_if_then_else(and_(True, True), _if_then_else(False, 4, max_col_clue), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(True, ones_diff_cols, 0))), and_(True, le(_if_then_else(False, ones_diff_cols, 2), _if_then_else(True, _if_then_else(or_(and_(ge(ones_diff_cols, compare_blocks_rows), ge(zeros_diff_rows, zeros_diff_rows)), ge(_if_then_else(False, ones_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, max_col_clue))), _if_then_else(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, 2, ones_diff_rows)), _if_then_else(ge(compare_blocks_rows, 80), _if_then_else(True, 2, 0), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(le(2, 0), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, max_col_clue, 1))), _if_then_else(or_(le(0, 3), le(compare_blocks_cols, zeros_diff_cols)), _if_then_else(ge(zeros_diff_cols, 1), _if_then_else(False, ones_diff_rows, 4), _if_then_else(True, ones_diff_rows, 0)), _if_then_else(le(ones_diff_cols, 2), _if_then_else(False, zeros_diff_rows, 7), _if_then_else(True, max_col_clue, 4)))), compare_blocks_rows)))), False)
and_(ge(max_col_clue, _if_then_else(True, 0, 4)), True)
or_(True, True)
ge(4, _if_then_else(False, _if_then_else(False, _if_then_else(or_(False, True), _if_then_else(False, 2, ones_diff_rows), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, max_row_clue, 2))), _if_then_else(and_(ge(max_col_clue, ones_diff_cols), and_(False, False)), _if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, 3, max_col_clue))))
le(_if_then_else(and_(False, True), _if_then_else(or_(or_(and_(ge(_if_then_else(False, 4, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, 87)), or_(le(0, 1), and_(False, False))), and_(and_(or_(True, True), or_(False, False)), le(_if_then_else(or_(True, True), max_col_clue, compare_blocks_cols), _if_then_else(True, 2, 2)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_cols, 65), _if_then_else(False, 2, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(True, 55, max_row_clue), _if_then_else(True, 1, ones_diff_rows)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, 1), _if_then_else(False, compare_blocks_cols, 44))), _if_then_else(and_(or_(False, False), le(1, zeros_diff_cols)), _if_then_else(ge(73, ones_diff_rows), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, -34, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(True, ones_diff_rows, 3))))), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), 3), _if_then_else(False, _if_then_else(True, 4, zeros_diff_rows), compare_blocks_cols))
VAL TREES:
add(add(mul(-100, zeros_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, 59), mul(2, zeros_diff_cols)))
add(mul(mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), mul(mul(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows)))), add(mul(add(add(ones_diff_cols, ones_diff_cols), add(-83, zeros_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(75, zeros_diff_cols))), add(add(mul(ones_diff_cols, ones_diff_rows), mul(39, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows))
add(mul(compare_blocks_cols, mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_cols, ones_diff_cols)), ones_diff_rows)), mul(zeros_diff_rows, ones_diff_rows))
mul(add(add(zeros_diff_rows, ones_diff_rows), compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols))
mul(mul(zeros_diff_cols, zeros_diff_rows), add(17, compare_blocks_cols))
COND TREES:
le(-14, max_row_clue)
le(_if_then_else(or_(or_(and_(False, False), ge(zeros_diff_rows, compare_blocks_cols)), or_(and_(True, True), le(0, compare_blocks_cols))), _if_then_else(le(_if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(False, 3, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, max_row_clue, max_col_clue)), max_row_clue), _if_then_else(le(_if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, 0, zeros_diff_cols)), _if_then_else(le(1, 4), _if_then_else(False, max_row_clue, max_col_clue), _if_then_else(False, 4, 2)), _if_then_else(and_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(True, zeros_diff_rows, compare_blocks_rows)))), _if_then_else(or_(and_(ge(compare_blocks_rows, 3), le(zeros_diff_cols, compare_blocks_rows)), or_(le(0, max_col_clue), ge(0, 73))), _if_then_else(le(_if_then_else(True, 4, max_row_clue), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(and_(False, True), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_rows)), _if_then_else(le(1, -81), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, max_col_clue, -24))), _if_then_else(or_(ge(zeros_diff_rows, ones_diff_rows), or_(True, False)), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, ones_diff_rows, 4)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(False, ones_diff_rows, max_col_clue)))))
and_(and_(le(_if_then_else(or_(True, True), _if_then_else(True, 1, 3), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(True, _if_then_else(True, max_col_clue, 4), _if_then_else(False, 0, zeros_diff_cols))), or_(ge(_if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 14, 4)), or_(or_(True, False), and_(True, True)))), le(_if_then_else(or_(le(3, 2), ge(zeros_diff_rows, 1)), _if_then_else(or_(True, False), _if_then_else(False, 0, 3), _if_then_else(False, 3, 2)), _if_then_else(le(0, ones_diff_cols), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, max_col_clue, zeros_diff_rows))), _if_then_else(ge(_if_then_else(False, 1, 0), _if_then_else(le(zeros_diff_rows, compare_blocks_rows), ones_diff_cols, zeros_diff_rows)), _if_then_else(le(zeros_diff_cols, max_col_clue), _if_then_else(True, max_row_clue, ones_diff_cols), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(ge(3, 2), zeros_diff_cols, _if_then_else(True, max_col_clue, 2)))))
or_(True, ge(3, _if_then_else(False, compare_blocks_cols, 3)))
ge(_if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(and_(False, le(-52, 1)), 3, 1))
VAL TREES:
add(mul(add(add(add(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))), add(mul(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(16, compare_blocks_cols))), mul(mul(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, -68), mul(compare_blocks_cols, ones_diff_cols)))))
add(mul(add(add(mul(ones_diff_cols, 84), mul(ones_diff_cols, zeros_diff_rows)), mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, -29))), mul(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_rows)), add(add(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))), add(add(mul(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, -7)), add(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))), mul(mul(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, 81)), add(mul(zeros_diff_cols, zeros_diff_cols), mul(71, ones_diff_rows)))))
mul(add(compare_blocks_cols, ones_diff_rows), add(mul(zeros_diff_rows, 13), -10))
add(add(mul(zeros_diff_cols, zeros_diff_cols), add(-97, ones_diff_cols)), mul(mul(compare_blocks_cols, 26), add(ones_diff_cols, compare_blocks_rows)))
add(mul(add(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols))), add(mul(add(-95, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), add(add(zeros_diff_rows, 53), add(zeros_diff_cols, ones_diff_rows)))), add(add(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows)), mul(add(ones_diff_cols, 7), add(compare_blocks_rows, compare_blocks_rows))), mul(add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))))
mul(mul(mul(add(-4, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), mul(-26, compare_blocks_rows))), mul(add(mul(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols))))
COND TREES:
and_(ge(_if_then_else(ge(zeros_diff_cols, compare_blocks_cols), _if_then_else(True, _if_then_else(True, ones_diff_rows, 0), ones_diff_cols), _if_then_else(True, zeros_diff_rows, compare_blocks_cols)), zeros_diff_cols), le(3, _if_then_else(or_(True, True), _if_then_else(False, max_col_clue, 8), _if_then_else(True, 3, max_col_clue))))
or_(False, and_(True, True))
le(_if_then_else(and_(True, ge(compare_blocks_rows, 31)), _if_then_else(True, ones_diff_cols, ones_diff_rows), _if_then_else(ge(zeros_diff_cols, zeros_diff_cols), 3, max_col_clue)), _if_then_else(ge(3, ones_diff_rows), _if_then_else(True, 0, 1), _if_then_else(or_(True, False), compare_blocks_cols, compare_blocks_cols)))
or_(True, True)
and_(ge(_if_then_else(and_(True, or_(or_(and_(ge(_if_then_else(False, 4, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, 87)), or_(le(0, 1), and_(False, False))), and_(and_(or_(True, True), or_(False, False)), le(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, 2, 2)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_cols, 65), _if_then_else(False, 2, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(True, 55, max_row_clue), _if_then_else(le(4, zeros_diff_cols), 1, ones_diff_rows)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, 1), _if_then_else(False, compare_blocks_cols, 44))), _if_then_else(and_(or_(False, False), le(1, zeros_diff_cols)), _if_then_else(ge(73, ones_diff_rows), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, -34, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(True, ones_diff_rows, 3)))))), _if_then_else(False, 4, zeros_diff_rows), _if_then_else(False, 0, _if_then_else(True, 4, zeros_diff_rows))), _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, -52, 4))), or_(or_(and_(False, True), False), ge(_if_then_else(True, 2, 1), _if_then_else(True, 2, ones_diff_cols))))
VAL TREES:
add(add(compare_blocks_rows, ones_diff_rows), mul(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)))
add(mul(add(add(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_cols)), add(add(zeros_diff_rows, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows))), mul(mul(mul(ones_diff_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_cols)), mul(mul(ones_diff_rows, zeros_diff_rows), add(zeros_diff_cols, ones_diff_cols))))
mul(mul(compare_blocks_cols, compare_blocks_cols), add(compare_blocks_cols, zeros_diff_rows))
add(mul(mul(mul(ones_diff_cols, ones_diff_cols), mul(compare_blocks_cols, ones_diff_cols)), add(add(compare_blocks_rows, zeros_diff_rows), add(compare_blocks_cols, compare_blocks_rows))), add(add(add(-98, ones_diff_cols), mul(zeros_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_rows, compare_blocks_cols), add(compare_blocks_rows, compare_blocks_cols))))
add(add(add(ones_diff_rows, compare_blocks_rows), add(zeros_diff_rows, 31)), mul(mul(-78, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))
mul(add(zeros_diff_cols, compare_blocks_cols), mul(compare_blocks_cols, ones_diff_cols))
COND TREES:
le(_if_then_else(le(0, 1), _if_then_else(True, compare_blocks_cols, 4), _if_then_else(True, zeros_diff_cols, ones_diff_rows)), zeros_diff_cols)
le(_if_then_else(or_(or_(and_(False, False), ge(zeros_diff_rows, compare_blocks_cols)), or_(False, le(0, compare_blocks_cols))), _if_then_else(le(_if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(False, 3, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, max_row_clue, max_col_clue)), max_row_clue), _if_then_else(le(_if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, 0, zeros_diff_cols)), _if_then_else(le(1, 4), _if_then_else(False, max_row_clue, max_col_clue), _if_then_else(False, 4, 2)), _if_then_else(and_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(True, zeros_diff_rows, compare_blocks_rows)))), _if_then_else(or_(and_(ge(compare_blocks_rows, 3), le(zeros_diff_cols, compare_blocks_rows)), or_(le(0, max_col_clue), ge(0, 73))), _if_then_else(le(_if_then_else(True, 4, max_row_clue), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(and_(False, True), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_rows)), _if_then_else(le(1, -81), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, max_col_clue, -24))), _if_then_else(or_(ge(zeros_diff_rows, ones_diff_rows), or_(True, False)), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, ones_diff_rows, 4)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(False, ones_diff_rows, max_col_clue)))))
and_(and_(le(_if_then_else(or_(True, True), _if_then_else(True, 1, 3), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(True, _if_then_else(True, max_col_clue, 4), _if_then_else(False, 0, zeros_diff_cols))), or_(ge(_if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 14, 4)), or_(True, and_(True, False)))), le(_if_then_else(or_(le(3, 2), ge(zeros_diff_rows, 1)), _if_then_else(or_(True, False), _if_then_else(False, 0, 3), _if_then_else(False, 3, 2)), _if_then_else(le(0, ones_diff_cols), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, max_col_clue, zeros_diff_rows))), _if_then_else(ge(_if_then_else(False, 1, 0), _if_then_else(le(zeros_diff_rows, compare_blocks_rows), ones_diff_cols, zeros_diff_rows)), _if_then_else(le(zeros_diff_cols, max_col_clue), _if_then_else(True, max_row_clue, ones_diff_cols), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(ge(3, 2), zeros_diff_cols, _if_then_else(True, max_col_clue, 2)))))
or_(le(compare_blocks_cols, 3), ge(zeros_diff_cols, compare_blocks_cols))
ge(_if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(and_(False, True), 3, 1))
VAL TREES:
add(mul(add(add(add(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))), add(mul(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_rows)), mul(add(compare_blocks_rows, zeros_diff_cols), add(ones_diff_rows, compare_blocks_cols))), mul(mul(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, -68), mul(compare_blocks_cols, ones_diff_cols)))))
add(mul(add(add(mul(ones_diff_cols, 84), mul(ones_diff_cols, zeros_diff_rows)), mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, -29))), mul(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_rows)), add(add(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))), add(add(mul(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, -7)), add(mul(compare_blocks_rows, zeros_diff_cols), add(add(zeros_diff_rows, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)))), mul(mul(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, 81)), add(mul(zeros_diff_cols, zeros_diff_cols), mul(71, ones_diff_rows)))))
mul(mul(add(mul(zeros_diff_cols, compare_blocks_rows), compare_blocks_rows), mul(ones_diff_rows, compare_blocks_rows)), add(mul(zeros_diff_rows, 13), -10))
add(add(mul(zeros_diff_cols, zeros_diff_cols), add(-97, ones_diff_cols)), mul(mul(compare_blocks_cols, add(add(add(add(mul(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_rows))), mul(mul(add(compare_blocks_rows, ones_diff_cols), add(ones_diff_rows, compare_blocks_rows)), mul(mul(66, ones_diff_rows), mul(-18, compare_blocks_rows)))), mul(add(mul(add(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols)), mul(add(ones_diff_rows, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_cols))), add(add(mul(-79, zeros_diff_rows), add(compare_blocks_rows, ones_diff_rows)), add(add(-90, 8), mul(compare_blocks_cols, zeros_diff_rows)))))), add(ones_diff_cols, compare_blocks_rows)))
add(mul(add(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols))), add(mul(add(-95, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), add(add(zeros_diff_rows, 53), add(zeros_diff_cols, ones_diff_rows)))), add(add(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows)), mul(add(ones_diff_cols, 7), add(compare_blocks_rows, compare_blocks_rows))), mul(add(mul(compare_blocks_rows, mul(add(mul(add(83, zeros_diff_cols), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, mul(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_cols, mul(zeros_diff_cols, add(compare_blocks_cols, ones_diff_rows))))))), mul(add(mul(zeros_diff_cols, 9), add(compare_blocks_rows, ones_diff_cols)), add(mul(ones_diff_cols, zeros_diff_cols), mul(compare_blocks_cols, zeros_diff_rows))))), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))))
mul(mul(mul(add(-4, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), mul(-26, compare_blocks_rows))), mul(add(mul(zeros_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, zeros_diff_rows)), mul(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols))))
COND TREES:
and_(or_(ge(_if_then_else(and_(True, True), _if_then_else(False, 4, max_col_clue), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(True, ones_diff_cols, 0))), and_(or_(le(2, _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_rows, 2), _if_then_else(False, 4, zeros_diff_cols))), or_(True, False)), le(_if_then_else(False, ones_diff_cols, 2), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)))), or_(le(_if_then_else(or_(False, True), _if_then_else(True, 2, 0), _if_then_else(True, max_col_clue, 0)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, zeros_diff_cols), _if_then_else(False, ones_diff_cols, compare_blocks_rows))), and_(or_(or_(True, True), and_(True, True)), ge(_if_then_else(True, 3, 4), _if_then_else(True, 4, ones_diff_cols)))))
and_(ge(max_col_clue, 4), True)
or_(and_(ge(3, zeros_diff_cols), False), le(ones_diff_rows, ones_diff_cols))
ge(_if_then_else(ge(max_col_clue, max_row_clue), _if_then_else(True, 0, compare_blocks_cols), _if_then_else(or_(True, False), _if_then_else(False, ones_diff_cols, 0), compare_blocks_cols)), _if_then_else(le(compare_blocks_cols, 3), 1, 0))
le(_if_then_else(le(_if_then_else(True, 1, compare_blocks_rows), _if_then_else(False, 0, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(False, max_row_clue, 2), _if_then_else(True, 3, 0)), _if_then_else(le(3, -99), _if_then_else(True, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, 3))), compare_blocks_cols)
VAL TREES:
add(add(mul(-100, zeros_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, 59), mul(2, zeros_diff_cols)))
add(mul(mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), mul(mul(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows)))), add(mul(add(add(ones_diff_cols, ones_diff_cols), add(-83, zeros_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(75, zeros_diff_cols))), add(add(mul(ones_diff_cols, ones_diff_rows), mul(39, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows))
add(mul(compare_blocks_cols, mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_cols, ones_diff_cols)), ones_diff_rows)), mul(zeros_diff_rows, ones_diff_rows))
mul(add(add(zeros_diff_rows, ones_diff_rows), compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols))
mul(mul(zeros_diff_cols, zeros_diff_rows), add(17, compare_blocks_cols))
COND TREES:
le(max_col_clue, _if_then_else(and_(and_(True, ge(compare_blocks_rows, 2)), False), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(True, ones_diff_cols, zeros_diff_rows)))
le(_if_then_else(or_(or_(and_(False, False), ge(zeros_diff_rows, compare_blocks_cols)), or_(and_(True, True), le(0, compare_blocks_cols))), _if_then_else(le(_if_then_else(False, max_col_clue, zeros_diff_cols), _if_then_else(False, 3, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, max_row_clue, max_col_clue)), max_row_clue), _if_then_else(le(_if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, 0, zeros_diff_cols)), _if_then_else(le(1, 4), _if_then_else(False, max_row_clue, max_col_clue), _if_then_else(False, 4, 2)), _if_then_else(and_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(True, zeros_diff_rows, compare_blocks_rows)))), _if_then_else(or_(and_(ge(_if_then_else(ge(_if_then_else(True, ones_diff_cols, 2), 1), max_row_clue, 4), _if_then_else(False, 1, zeros_diff_cols)), le(zeros_diff_cols, compare_blocks_rows)), or_(le(0, max_col_clue), ge(0, 73))), _if_then_else(le(_if_then_else(True, 4, max_row_clue), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(and_(False, True), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_rows)), _if_then_else(le(1, -81), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, max_col_clue, -24))), _if_then_else(or_(ge(zeros_diff_rows, ones_diff_rows), or_(True, False)), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, ones_diff_rows, 4)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(False, ones_diff_rows, max_col_clue)))))
and_(and_(le(_if_then_else(or_(True, True), _if_then_else(True, 1, 3), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(True, _if_then_else(True, max_col_clue, 4), _if_then_else(False, 0, ones_diff_rows))), or_(ge(_if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 14, 4)), or_(or_(True, False), and_(True, True)))), le(_if_then_else(or_(le(3, 2), ge(zeros_diff_rows, 1)), _if_then_else(or_(True, False), _if_then_else(False, 0, 3), _if_then_else(False, 3, 2)), _if_then_else(le(0, ones_diff_cols), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, max_col_clue, zeros_diff_rows))), _if_then_else(ge(_if_then_else(False, 1, 0), _if_then_else(le(zeros_diff_rows, compare_blocks_rows), ones_diff_cols, zeros_diff_rows)), _if_then_else(le(zeros_diff_cols, max_col_clue), _if_then_else(True, max_row_clue, ones_diff_cols), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(ge(3, 2), zeros_diff_cols, _if_then_else(True, max_col_clue, 2)))))
or_(False, and_(and_(and_(ge(zeros_diff_rows, zeros_diff_cols), ge(ones_diff_cols, -39)), ge(_if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols))), or_(and_(le(zeros_diff_rows, 4), ge(ones_diff_cols, zeros_diff_rows)), le(_if_then_else(False, ones_diff_cols, 3), _if_then_else(False, ones_diff_cols, 4)))))
ge(_if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(and_(False, le(-52, _if_then_else(and_(False, True), _if_then_else(True, max_row_clue, -51), _if_then_else(True, ones_diff_cols, ones_diff_rows)))), 3, 1))
VAL TREES:
add(mul(add(add(add(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))), add(mul(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(16, compare_blocks_cols))), mul(mul(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, -68), mul(compare_blocks_cols, ones_diff_cols)))))
add(mul(add(add(mul(ones_diff_cols, 84), mul(ones_diff_cols, zeros_diff_rows)), mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, -29))), mul(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_rows)), add(add(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))), add(add(mul(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, -7)), add(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))), mul(mul(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, 81)), add(mul(zeros_diff_cols, zeros_diff_cols), mul(71, ones_diff_rows)))))
mul(add(compare_blocks_cols, ones_diff_rows), add(mul(zeros_diff_rows, 13), -10))
add(add(mul(zeros_diff_cols, zeros_diff_cols), add(-97, ones_diff_cols)), mul(mul(compare_blocks_cols, 26), add(ones_diff_cols, compare_blocks_rows)))
add(mul(add(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols))), add(mul(add(-95, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), add(add(zeros_diff_rows, 53), add(zeros_diff_cols, ones_diff_rows)))), add(add(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows)), mul(add(ones_diff_cols, 7), add(compare_blocks_rows, compare_blocks_rows))), mul(add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))))
mul(mul(mul(add(-4, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), mul(-26, compare_blocks_rows))), mul(add(mul(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols))))
COND TREES:
and_(or_(ge(_if_then_else(and_(True, True), _if_then_else(False, 4, max_col_clue), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(True, ones_diff_cols, 0))), and_(True, le(_if_then_else(False, ones_diff_cols, 2), _if_then_else(True, _if_then_else(or_(and_(ge(ones_diff_cols, compare_blocks_rows), ge(zeros_diff_rows, zeros_diff_rows)), ge(_if_then_else(False, ones_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, max_col_clue))), _if_then_else(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(True, 2, ones_diff_rows)), _if_then_else(ge(compare_blocks_rows, 80), _if_then_else(True, 2, 0), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(le(2, 0), _if_then_else(False, -14, ones_diff_cols), _if_then_else(False, max_col_clue, 1))), _if_then_else(or_(le(0, 3), le(compare_blocks_cols, zeros_diff_cols)), _if_then_else(ge(zeros_diff_cols, 1), _if_then_else(False, ones_diff_rows, 4), _if_then_else(True, ones_diff_rows, 0)), _if_then_else(le(ones_diff_cols, 2), _if_then_else(False, zeros_diff_rows, 7), _if_then_else(True, max_col_clue, 4)))), compare_blocks_rows)))), False)
and_(ge(max_col_clue, _if_then_else(True, 0, _if_then_else(le(_if_then_else(True, 4, max_row_clue), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(and_(False, True), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_rows)), _if_then_else(le(1, -81), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, max_col_clue, -24))))), True)
or_(ge(zeros_diff_rows, 1), True)
ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, _if_then_else(False, _if_then_else(or_(False, True), _if_then_else(False, 2, ones_diff_rows), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, max_row_clue, 2))), _if_then_else(and_(ge(max_col_clue, ones_diff_cols), and_(False, False)), _if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, 3, max_col_clue))))
le(_if_then_else(and_(False, True), _if_then_else(or_(or_(and_(ge(_if_then_else(False, 4, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, 87)), or_(le(0, 1), and_(False, False))), and_(and_(or_(True, True), or_(False, False)), le(_if_then_else(or_(True, True), max_col_clue, compare_blocks_cols), _if_then_else(True, 2, 2)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_cols, 65), _if_then_else(False, 2, compare_blocks_cols)), 1, _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, 1), _if_then_else(False, compare_blocks_cols, 44))), _if_then_else(and_(or_(False, False), le(1, zeros_diff_cols)), _if_then_else(ge(73, ones_diff_rows), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, -34, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(True, ones_diff_rows, 3))))), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), 3), _if_then_else(False, _if_then_else(True, 4, zeros_diff_rows), compare_blocks_cols))
VAL TREES:
add(add(mul(-100, zeros_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, 59), mul(2, zeros_diff_cols)))
add(mul(mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), mul(mul(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows)))), add(mul(add(add(ones_diff_cols, ones_diff_cols), add(-83, zeros_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(75, zeros_diff_cols))), add(add(mul(ones_diff_cols, ones_diff_rows), mul(39, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows))
add(mul(compare_blocks_cols, mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_cols, ones_diff_cols)), ones_diff_rows)), mul(zeros_diff_rows, ones_diff_rows))
mul(add(add(zeros_diff_rows, ones_diff_rows), compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols))
mul(mul(zeros_diff_cols, zeros_diff_rows), add(17, compare_blocks_cols))
COND TREES:
le(max_col_clue, _if_then_else(ge(zeros_diff_cols, 1), _if_then_else(False, ones_diff_rows, 4), _if_then_else(False, ones_diff_rows, 0)))
le(_if_then_else(or_(or_(and_(False, False), ge(zeros_diff_rows, compare_blocks_cols)), or_(and_(True, True), le(0, compare_blocks_cols))), _if_then_else(le(_if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(False, 3, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, max_row_clue, max_col_clue)), max_row_clue), _if_then_else(le(_if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, 0, zeros_diff_cols)), _if_then_else(le(1, 4), _if_then_else(False, max_row_clue, max_col_clue), _if_then_else(False, 4, 2)), _if_then_else(and_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(True, zeros_diff_rows, compare_blocks_rows)))), _if_then_else(or_(and_(ge(compare_blocks_rows, 3), le(zeros_diff_cols, compare_blocks_rows)), or_(le(0, max_col_clue), ge(0, 73))), 4, _if_then_else(or_(ge(zeros_diff_rows, ones_diff_rows), or_(True, False)), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, ones_diff_rows, 4)), _if_then_else(True, _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(False, ones_diff_rows, max_col_clue)))))
and_(and_(le(_if_then_else(or_(True, True), _if_then_else(True, 1, 3), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(True, _if_then_else(True, 0, 4), _if_then_else(False, 0, zeros_diff_cols))), or_(ge(_if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 14, 4)), or_(or_(True, False), and_(True, False)))), le(_if_then_else(or_(le(3, 2), True), _if_then_else(or_(True, False), _if_then_else(False, 0, 3), _if_then_else(False, 3, 2)), _if_then_else(le(0, ones_diff_cols), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, max_col_clue, zeros_diff_rows))), 3))
or_(or_(False, True), ge(zeros_diff_cols, _if_then_else(False, 2, ones_diff_rows)))
ge(_if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(and_(False, le(4, _if_then_else(and_(True, True), _if_then_else(True, 55, max_row_clue), _if_then_else(True, 1, ones_diff_rows)))), 3, 1))
VAL TREES:
add(mul(add(add(add(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))), add(mul(add(add(mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(-54, ones_diff_rows)), add(add(compare_blocks_cols, ones_diff_rows), mul(ones_diff_rows, zeros_diff_rows))), add(add(mul(zeros_diff_rows, ones_diff_cols), mul(compare_blocks_cols, -81)), add(mul(zeros_diff_cols, ones_diff_cols), add(zeros_diff_cols, compare_blocks_cols)))), add(ones_diff_rows, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(16, compare_blocks_cols))), mul(mul(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, -68), mul(compare_blocks_cols, ones_diff_cols)))))
add(mul(add(add(mul(ones_diff_cols, 84), mul(ones_diff_cols, zeros_diff_rows)), mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, -29))), mul(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_rows)), add(add(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))), add(add(mul(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, -7)), add(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))), mul(mul(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, 81)), add(mul(zeros_diff_cols, mul(add(mul(mul(compare_blocks_cols, zeros_diff_rows), mul(compare_blocks_cols, ones_diff_cols)), mul(mul(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_cols))), mul(add(add(compare_blocks_cols, zeros_diff_cols), mul(79, zeros_diff_rows)), mul(add(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, ones_diff_cols))))), mul(71, ones_diff_rows)))))
mul(add(compare_blocks_cols, ones_diff_rows), mul(add(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_rows, ones_diff_cols)))
add(add(mul(zeros_diff_cols, zeros_diff_cols), add(-97, ones_diff_cols)), mul(mul(compare_blocks_cols, 26), add(ones_diff_cols, compare_blocks_rows)))
add(mul(add(mul(mul(zeros_diff_cols, 4), add(zeros_diff_rows, ones_diff_rows)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols))), add(mul(add(-95, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), add(add(zeros_diff_rows, 53), add(zeros_diff_cols, ones_diff_rows)))), add(add(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows)), mul(add(ones_diff_cols, 7), add(compare_blocks_rows, compare_blocks_rows))), mul(add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))))
mul(mul(mul(add(-4, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), mul(-26, compare_blocks_rows))), mul(add(mul(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols))))
COND TREES:
le(zeros_diff_cols, _if_then_else(True, _if_then_else(or_(and_(ge(ones_diff_cols, compare_blocks_rows), ge(zeros_diff_rows, zeros_diff_rows)), ge(_if_then_else(False, ones_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, max_col_clue))), _if_then_else(ge(_if_then_else(True, 3, max_row_clue), _if_then_else(False, 2, ones_diff_rows)), _if_then_else(ge(compare_blocks_rows, 80), _if_then_else(True, 2, 0), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(le(2, 0), _if_then_else(False, -14, ones_diff_cols), _if_then_else(False, max_col_clue, 1))), _if_then_else(or_(le(0, 3), le(compare_blocks_cols, zeros_diff_cols)), _if_then_else(ge(zeros_diff_cols, 1), _if_then_else(False, ones_diff_rows, 4), _if_then_else(True, ones_diff_rows, 0)), _if_then_else(le(ones_diff_cols, 2), _if_then_else(False, zeros_diff_rows, 7), _if_then_else(True, max_col_clue, 4)))), compare_blocks_rows))
le(_if_then_else(or_(False, ge(-55, 1)), _if_then_else(le(_if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(False, 3, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, max_row_clue, max_col_clue)), max_row_clue), _if_then_else(le(_if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, 0, zeros_diff_cols)), _if_then_else(le(1, 4), _if_then_else(True, max_row_clue, max_col_clue), _if_then_else(False, 4, 2)), _if_then_else(and_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(True, zeros_diff_rows, compare_blocks_rows)))), _if_then_else(or_(and_(ge(compare_blocks_rows, 3), le(zeros_diff_cols, compare_blocks_rows)), or_(le(0, max_col_clue), ge(0, 73))), _if_then_else(le(_if_then_else(True, 4, max_row_clue), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(or_(False, True), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, -81), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, max_col_clue, -24))), _if_then_else(or_(ge(zeros_diff_rows, ones_diff_rows), or_(True, False)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), -55), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(False, ones_diff_rows, max_col_clue)))))
and_(and_(le(_if_then_else(or_(True, True), _if_then_else(True, 1, 3), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(True, max_col_clue, 4), _if_then_else(False, 0, zeros_diff_cols))), or_(ge(_if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 14, 4)), or_(or_(True, False), and_(True, False)))), le(_if_then_else(or_(le(3, 2), ge(zeros_diff_rows, 1)), _if_then_else(or_(True, False), _if_then_else(False, 0, 3), _if_then_else(False, 3, 2)), _if_then_else(True, _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows))), _if_then_else(or_(ge(zeros_diff_cols, zeros_diff_cols), ge(3, ones_diff_rows)), _if_then_else(le(zeros_diff_cols, max_col_clue), _if_then_else(True, max_row_clue, ones_diff_cols), _if_then_else(False, 0, zeros_diff_rows)), _if_then_else(ge(3, 2), zeros_diff_cols, _if_then_else(True, max_col_clue, 2)))))
or_(False, False)
ge(_if_then_else(or_(and_(True, False), False), compare_blocks_rows, zeros_diff_cols), _if_then_else(and_(False, le(4, 1)), 3, 1))
VAL TREES:
add(mul(add(add(add(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, add(mul(14, compare_blocks_rows), add(76, zeros_diff_cols))), mul(compare_blocks_cols, zeros_diff_cols)))), add(mul(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(16, compare_blocks_cols))), mul(mul(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, -68), mul(compare_blocks_cols, ones_diff_cols)))))
add(mul(add(add(mul(ones_diff_cols, mul(add(mul(ones_diff_cols, ones_diff_cols), compare_blocks_rows), mul(mul(ones_diff_rows, ones_diff_rows), mul(ones_diff_cols, zeros_diff_cols)))), mul(ones_diff_cols, zeros_diff_rows)), mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, -29))), mul(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_rows)), add(add(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))), add(add(mul(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, -7)), add(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))), mul(mul(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, 81)), add(mul(zeros_diff_cols, zeros_diff_cols), mul(71, ones_diff_rows)))))
mul(add(compare_blocks_cols, ones_diff_rows), add(add(add(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, zeros_diff_rows)), -10))
add(add(mul(zeros_diff_cols, mul(mul(ones_diff_rows, zeros_diff_rows), mul(ones_diff_rows, ones_diff_cols))), add(-97, ones_diff_cols)), mul(mul(compare_blocks_cols, 26), add(ones_diff_cols, compare_blocks_rows)))
add(mul(add(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols))), add(mul(add(-95, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), add(add(zeros_diff_rows, 53), add(mul(28, -51), add(compare_blocks_cols, ones_diff_cols))))), add(add(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows)), mul(add(ones_diff_cols, 7), add(compare_blocks_rows, compare_blocks_rows))), mul(add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))))
mul(mul(mul(add(-4, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), mul(-26, compare_blocks_rows))), mul(add(mul(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols))))
COND TREES:
and_(or_(ge(_if_then_else(and_(True, True), _if_then_else(False, 4, max_col_clue), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(True, ones_diff_cols, 0))), and_(True, le(_if_then_else(False, ones_diff_cols, 2), _if_then_else(False, compare_blocks_cols, max_col_clue)))), False)
and_(ge(max_col_clue, _if_then_else(True, 0, 4)), or_(and_(False, True), or_(False, False)))
or_(True, or_(ge(max_col_clue, zeros_diff_cols), ge(3, 0)))
ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, _if_then_else(False, _if_then_else(or_(False, True), _if_then_else(ge(compare_blocks_cols, compare_blocks_rows), 2, zeros_diff_cols), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, max_row_clue, 2))), _if_then_else(and_(ge(max_col_clue, ones_diff_cols), and_(False, False)), _if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, 3, max_col_clue))))
le(_if_then_else(and_(False, True), _if_then_else(or_(or_(and_(ge(_if_then_else(False, 4, compare_blocks_rows), _if_then_else(False, ones_diff_rows, 87)), or_(le(0, 1), and_(False, False))), and_(and_(or_(True, True), or_(False, False)), le(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, 2, 2)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_cols, 65), _if_then_else(False, 2, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(True, 55, max_row_clue), _if_then_else(True, 1, ones_diff_rows)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, 1), _if_then_else(False, compare_blocks_cols, 44))), _if_then_else(and_(or_(False, False), le(1, zeros_diff_cols)), _if_then_else(ge(73, ones_diff_rows), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, -34, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(True, ones_diff_rows, 3))))), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), 3), _if_then_else(False, _if_then_else(True, 4, zeros_diff_rows), compare_blocks_cols))
VAL TREES:
add(add(mul(-100, zeros_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, 59), mul(2, zeros_diff_cols)))
add(mul(mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), mul(mul(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows)))), add(mul(add(add(ones_diff_cols, ones_diff_cols), add(-83, zeros_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(75, zeros_diff_cols))), add(add(mul(ones_diff_cols, ones_diff_rows), mul(39, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows))
add(mul(compare_blocks_cols, mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_cols, ones_diff_cols)), ones_diff_rows)), mul(zeros_diff_rows, ones_diff_rows))
mul(add(add(zeros_diff_rows, ones_diff_rows), compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols))
mul(mul(zeros_diff_cols, zeros_diff_rows), add(17, compare_blocks_cols))
COND TREES:
le(zeros_diff_cols, _if_then_else(False, zeros_diff_rows, max_col_clue))
le(_if_then_else(or_(False, ge(-55, 1)), _if_then_else(le(_if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(False, 3, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, max_row_clue, max_col_clue)), max_row_clue), _if_then_else(le(_if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, 0, zeros_diff_cols)), _if_then_else(le(1, 4), _if_then_else(True, max_row_clue, max_col_clue), _if_then_else(False, 4, 2)), _if_then_else(and_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(True, zeros_diff_rows, compare_blocks_rows)))), _if_then_else(or_(and_(ge(compare_blocks_rows, 3), le(zeros_diff_cols, compare_blocks_rows)), or_(le(0, max_col_clue), ge(0, 73))), _if_then_else(le(_if_then_else(True, 4, max_row_clue), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(and_(False, True), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, -81), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, max_col_clue, -24))), _if_then_else(or_(ge(zeros_diff_rows, ones_diff_rows), or_(True, False)), _if_then_else(and_(False, False), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), -55), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(False, ones_diff_rows, max_col_clue)))))
and_(and_(le(_if_then_else(or_(True, True), _if_then_else(True, 1, 3), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(ge(3, compare_blocks_rows), _if_then_else(True, max_col_clue, 4), _if_then_else(False, 0, zeros_diff_cols))), or_(ge(_if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 14, 4)), ge(3, 0))), le(_if_then_else(or_(le(3, 2), ge(zeros_diff_rows, 1)), _if_then_else(or_(True, False), _if_then_else(False, 0, 3), _if_then_else(False, 3, 2)), _if_then_else(True, _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, max_col_clue, zeros_diff_rows))), _if_then_else(or_(ge(zeros_diff_cols, zeros_diff_cols), ge(3, ones_diff_rows)), _if_then_else(le(zeros_diff_cols, max_col_clue), _if_then_else(True, max_row_clue, ones_diff_cols), _if_then_else(False, 0, zeros_diff_rows)), _if_then_else(ge(3, 2), zeros_diff_cols, _if_then_else(True, max_col_clue, 2)))))
or_(False, False)
ge(_if_then_else(or_(and_(True, False), False), ones_diff_rows, 4), _if_then_else(and_(False, le(4, 1)), 3, 1))
VAL TREES:
add(mul(add(add(add(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, add(mul(14, compare_blocks_rows), add(76, zeros_diff_cols))), mul(compare_blocks_cols, zeros_diff_cols)))), add(mul(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(16, compare_blocks_cols))), mul(mul(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, -68), mul(compare_blocks_cols, ones_diff_cols)))))
add(mul(add(add(mul(ones_diff_cols, mul(add(mul(ones_diff_cols, ones_diff_cols), compare_blocks_rows), mul(mul(ones_diff_rows, ones_diff_rows), mul(ones_diff_cols, zeros_diff_cols)))), mul(ones_diff_cols, zeros_diff_rows)), mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, -29))), mul(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_rows)), add(add(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))), add(add(mul(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, -7)), add(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))), mul(mul(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, 81)), add(mul(zeros_diff_cols, zeros_diff_cols), mul(71, ones_diff_rows)))))
mul(add(compare_blocks_cols, ones_diff_rows), add(add(add(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, zeros_diff_rows)), -10))
add(add(mul(zeros_diff_cols, mul(mul(ones_diff_rows, zeros_diff_rows), mul(ones_diff_rows, ones_diff_cols))), add(-97, ones_diff_cols)), mul(mul(compare_blocks_cols, 26), add(ones_diff_cols, compare_blocks_rows)))
add(mul(add(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols))), add(mul(add(-95, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), add(add(zeros_diff_rows, 53), add(mul(28, -51), add(compare_blocks_cols, ones_diff_cols))))), add(add(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows)), mul(add(ones_diff_cols, 7), add(compare_blocks_rows, compare_blocks_rows))), mul(add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))))
mul(mul(mul(add(-4, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), mul(-26, compare_blocks_rows))), mul(add(mul(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols))))
COND TREES:
and_(or_(ge(_if_then_else(and_(True, True), _if_then_else(False, 4, max_col_clue), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(True, ones_diff_cols, 0))), and_(True, le(_if_then_else(False, ones_diff_cols, 2), _if_then_else(True, _if_then_else(or_(and_(ge(ones_diff_cols, compare_blocks_rows), ge(zeros_diff_rows, zeros_diff_rows)), ge(_if_then_else(False, ones_diff_cols, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, max_col_clue))), _if_then_else(ge(_if_then_else(True, 3, max_row_clue), _if_then_else(True, 2, ones_diff_rows)), _if_then_else(ge(compare_blocks_rows, 80), _if_then_else(True, 2, 0), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(le(2, 0), _if_then_else(False, -14, ones_diff_cols), _if_then_else(False, max_col_clue, 1))), _if_then_else(or_(le(0, 3), le(compare_blocks_cols, zeros_diff_cols)), _if_then_else(ge(zeros_diff_cols, 1), _if_then_else(False, ones_diff_rows, 4), _if_then_else(True, ones_diff_rows, 0)), _if_then_else(le(ones_diff_cols, 2), _if_then_else(False, zeros_diff_rows, 7), _if_then_else(True, max_col_clue, 4)))), compare_blocks_rows)))), False)
and_(ge(max_col_clue, _if_then_else(True, 0, 4)), or_(or_(False, or_(or_(False, True), or_(False, False))), or_(False, False)))
or_(or_(ge(zeros_diff_cols, zeros_diff_cols), ge(3, 0)), or_(ge(zeros_diff_cols, zeros_diff_cols), or_(or_(True, False), and_(True, False))))
ge(_if_then_else(False, 3, 3), _if_then_else(ge(compare_blocks_cols, compare_blocks_rows), _if_then_else(False, _if_then_else(or_(False, True), _if_then_else(False, 2, ones_diff_rows), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_rows, 3), _if_then_else(True, max_row_clue, 2))), _if_then_else(and_(ge(max_col_clue, ones_diff_cols), and_(False, False)), _if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, 3, max_col_clue))))
le(_if_then_else(and_(False, True), _if_then_else(or_(or_(and_(ge(_if_then_else(False, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, 87)), or_(le(0, 1), and_(False, False))), and_(and_(False, or_(False, False)), le(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, 2, 2)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_cols, 65), _if_then_else(False, 2, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(True, 55, max_row_clue), _if_then_else(True, 1, ones_diff_rows)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, 1), _if_then_else(False, compare_blocks_cols, 44))), _if_then_else(and_(or_(False, False), le(1, zeros_diff_cols)), _if_then_else(ge(73, ones_diff_rows), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, -34, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(True, ones_diff_rows, 3))))), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), 3), _if_then_else(False, _if_then_else(True, 4, zeros_diff_rows), compare_blocks_cols))
VAL TREES:
add(add(mul(-100, zeros_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, 59), mul(2, zeros_diff_cols)))
add(mul(mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), mul(mul(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows)))), add(mul(add(add(ones_diff_cols, ones_diff_cols), add(-83, zeros_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(75, zeros_diff_cols))), add(add(mul(ones_diff_cols, ones_diff_rows), mul(39, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows))
add(mul(compare_blocks_cols, mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_cols, ones_diff_cols)), ones_diff_rows)), mul(zeros_diff_rows, ones_diff_rows))
mul(add(add(zeros_diff_rows, ones_diff_rows), compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols))
mul(mul(zeros_diff_cols, zeros_diff_rows), add(17, compare_blocks_cols))
COND TREES:
and_(or_(ge(_if_then_else(and_(True, True), _if_then_else(False, 4, max_col_clue), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(True, ones_diff_cols, 0))), and_(True, le(_if_then_else(False, ones_diff_cols, 2), _if_then_else(True, _if_then_else(or_(and_(ge(ones_diff_cols, compare_blocks_rows), ge(zeros_diff_rows, zeros_diff_rows)), ge(_if_then_else(False, ones_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, max_col_clue))), _if_then_else(ge(_if_then_else(True, 3, max_row_clue), _if_then_else(False, 2, ones_diff_rows)), _if_then_else(True, _if_then_else(True, 2, 0), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(le(2, 0), _if_then_else(False, -14, ones_diff_cols), _if_then_else(False, max_col_clue, 1))), _if_then_else(or_(le(0, 3), le(compare_blocks_cols, zeros_diff_cols)), _if_then_else(ge(zeros_diff_cols, 1), _if_then_else(False, ones_diff_rows, 4), _if_then_else(True, ones_diff_rows, 0)), _if_then_else(le(_if_then_else(ge(ones_diff_cols, 2), _if_then_else(False, 4, ones_diff_rows), _if_then_else(and_(False, True), 1, max_col_clue)), 2), _if_then_else(False, zeros_diff_rows, 7), _if_then_else(True, max_col_clue, 4)))), compare_blocks_rows)))), False)
and_(ge(4, _if_then_else(True, 0, 4)), or_(or_(False, True), or_(False, False)))
or_(True, or_(ge(zeros_diff_cols, zeros_diff_cols), and_(or_(ge(_if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, max_row_clue)), and_(or_(False, False), False)), le(_if_then_else(le(zeros_diff_cols, compare_blocks_rows), _if_then_else(True, compare_blocks_rows, 2), _if_then_else(True, -57, max_row_clue)), _if_then_else(and_(True, True), _if_then_else(False, max_row_clue, max_row_clue), _if_then_else(False, max_row_clue, 0))))))
ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, _if_then_else(False, _if_then_else(or_(False, True), _if_then_else(False, 2, ones_diff_rows), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(or_(False, False), compare_blocks_rows, 3), _if_then_else(True, max_row_clue, 2))), max_row_clue))
le(_if_then_else(and_(False, True), _if_then_else(or_(or_(and_(ge(_if_then_else(False, 4, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, 87)), or_(le(0, 1), and_(False, False))), and_(and_(or_(True, True), or_(False, False)), le(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(True, 2, 2)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_cols, 65), _if_then_else(False, 2, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(and_(False, False), 55, max_row_clue), _if_then_else(True, 1, ones_diff_rows)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, 1), _if_then_else(False, compare_blocks_cols, 44))), _if_then_else(and_(or_(False, False), le(1, zeros_diff_cols)), _if_then_else(ge(73, ones_diff_rows), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, -34, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(True, ones_diff_rows, 3))))), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), 3), _if_then_else(False, _if_then_else(True, 4, zeros_diff_rows), compare_blocks_cols))
VAL TREES:
add(add(mul(-100, zeros_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, 59), mul(2, zeros_diff_cols)))
add(mul(mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), mul(mul(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows)))), add(mul(add(add(ones_diff_cols, ones_diff_cols), add(-83, zeros_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(75, zeros_diff_cols))), add(add(mul(ones_diff_cols, ones_diff_rows), mul(39, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows))
add(mul(compare_blocks_cols, mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_cols, ones_diff_cols)), ones_diff_rows)), mul(zeros_diff_rows, ones_diff_rows))
mul(add(add(zeros_diff_rows, ones_diff_rows), compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols))
mul(mul(zeros_diff_cols, zeros_diff_rows), add(17, compare_blocks_cols))
COND TREES:
and_(or_(ge(_if_then_else(and_(True, True), _if_then_else(False, 4, max_col_clue), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(True, ones_diff_cols, 0))), and_(or_(le(2, _if_then_else(and_(False, True), _if_then_else(False, compare_blocks_rows, 2), _if_then_else(False, 4, max_col_clue))), or_(True, False)), le(_if_then_else(False, ones_diff_cols, 2), _if_then_else(True, zeros_diff_cols, compare_blocks_rows)))), or_(le(_if_then_else(or_(False, True), _if_then_else(True, 2, 0), _if_then_else(True, max_col_clue, 0)), _if_then_else(or_(and_(False, True), False), _if_then_else(True, zeros_diff_rows, zeros_diff_cols), _if_then_else(False, ones_diff_cols, compare_blocks_rows))), and_(or_(or_(True, True), and_(True, True)), ge(_if_then_else(True, 3, 4), _if_then_else(True, 4, ones_diff_cols)))))
and_(ge(max_col_clue, max_col_clue), False)
or_(and_(ge(3, ones_diff_rows), ge(ones_diff_cols, 1)), le(ones_diff_rows, ones_diff_cols))
ge(_if_then_else(ge(max_col_clue, max_row_clue), _if_then_else(True, 0, compare_blocks_cols), _if_then_else(False, _if_then_else(False, ones_diff_cols, 0), compare_blocks_cols)), _if_then_else(le(compare_blocks_cols, 3), 1, 0))
le(_if_then_else(le(_if_then_else(True, 1, compare_blocks_rows), _if_then_else(False, 0, max_col_clue)), _if_then_else(or_(False, False), _if_then_else(False, max_row_clue, 2), _if_then_else(True, 3, 0)), _if_then_else(le(3, -99), _if_then_else(True, 1, max_col_clue), _if_then_else(False, compare_blocks_cols, 3))), compare_blocks_cols)
VAL TREES:
add(add(mul(-100, zeros_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, 59), mul(2, zeros_diff_cols)))
add(mul(mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), mul(mul(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows)))), add(mul(add(add(ones_diff_cols, ones_diff_cols), add(-83, zeros_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(75, zeros_diff_cols))), add(add(mul(ones_diff_cols, ones_diff_rows), mul(39, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows))
add(mul(compare_blocks_cols, mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_cols, ones_diff_cols)), ones_diff_rows)), mul(zeros_diff_rows, ones_diff_rows))
mul(add(add(zeros_diff_rows, ones_diff_rows), compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols))
mul(mul(zeros_diff_cols, zeros_diff_rows), add(17, compare_blocks_cols))
COND TREES:
le(max_row_clue, _if_then_else(True, compare_blocks_cols, 4))
le(_if_then_else(or_(False, ge(-55, 1)), _if_then_else(True, _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, max_row_clue, max_col_clue)), max_row_clue), _if_then_else(le(_if_then_else(or_(False, True), compare_blocks_cols, max_row_clue), _if_then_else(True, 0, zeros_diff_cols)), _if_then_else(True, _if_then_else(False, max_row_clue, max_col_clue), _if_then_else(False, 4, 2)), _if_then_else(and_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(True, zeros_diff_rows, compare_blocks_rows)))), _if_then_else(or_(and_(ge(compare_blocks_rows, 3), le(zeros_diff_cols, compare_blocks_rows)), or_(le(0, max_col_clue), ge(0, 73))), _if_then_else(le(zeros_diff_cols, _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(and_(False, True), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_rows)), _if_then_else(le(ones_diff_cols, -81), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, max_col_clue, -24))), _if_then_else(or_(ge(zeros_diff_rows, ones_diff_rows), or_(True, False)), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), -55), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(False, ones_diff_rows, max_col_clue)))))
and_(and_(le(_if_then_else(or_(True, True), 3, _if_then_else(True, 3, ones_diff_rows)), _if_then_else(ge(ones_diff_rows, compare_blocks_rows), _if_then_else(True, max_col_clue, 4), _if_then_else(False, 0, zeros_diff_cols))), or_(ge(_if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 14, 4)), or_(or_(True, False), and_(le(zeros_diff_rows, compare_blocks_rows), False)))), le(_if_then_else(or_(le(3, 2), ge(zeros_diff_rows, 1)), _if_then_else(or_(True, False), _if_then_else(le(ones_diff_rows, 1), 0, 3), _if_then_else(False, 3, 2)), _if_then_else(True, _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, max_col_clue, zeros_diff_rows))), _if_then_else(ge(_if_then_else(False, 1, 0), _if_then_else(le(zeros_diff_rows, compare_blocks_rows), ones_diff_cols, zeros_diff_rows)), _if_then_else(le(zeros_diff_cols, max_col_clue), _if_then_else(True, max_row_clue, ones_diff_cols), _if_then_else(False, 0, zeros_diff_rows)), _if_then_else(ge(3, 2), zeros_diff_cols, _if_then_else(True, max_col_clue, 2)))))
or_(True, False)
ge(_if_then_else(ge(zeros_diff_rows, ones_diff_rows), ones_diff_rows, zeros_diff_cols), _if_then_else(and_(False, le(4, 1)), 3, 1))
VAL TREES:
add(mul(add(add(add(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))), add(mul(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(16, compare_blocks_cols))), mul(mul(add(zeros_diff_cols, zeros_diff_rows), add(add(add(mul(mul(38, zeros_diff_cols), mul(zeros_diff_rows, 18)), mul(mul(compare_blocks_cols, zeros_diff_cols), mul(zeros_diff_rows, ones_diff_cols))), add(add(add(compare_blocks_rows, ones_diff_rows), add(compare_blocks_cols, compare_blocks_cols)), mul(add(ones_diff_cols, zeros_diff_rows), mul(38, -11)))), add(mul(add(add(zeros_diff_cols, compare_blocks_rows), add(-93, zeros_diff_cols)), mul(mul(ones_diff_rows, 37), mul(compare_blocks_cols, ones_diff_cols))), add(add(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_cols)), add(add(compare_blocks_rows, ones_diff_rows), add(ones_diff_cols, zeros_diff_cols)))))), add(add(zeros_diff_rows, -68), mul(compare_blocks_cols, ones_diff_cols)))))
add(mul(add(add(mul(ones_diff_cols, 84), mul(ones_diff_cols, zeros_diff_rows)), mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, -29))), mul(mul(mul(zeros_diff_rows, compare_blocks_rows), add(add(zeros_diff_rows, ones_diff_rows), add(compare_blocks_cols, ones_diff_cols))), add(add(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))), add(add(mul(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, -7)), add(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))), mul(mul(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, 81)), add(mul(zeros_diff_cols, zeros_diff_cols), mul(71, ones_diff_rows)))))
mul(mul(ones_diff_cols, ones_diff_cols), add(ones_diff_cols, compare_blocks_rows))
add(add(mul(zeros_diff_cols, zeros_diff_cols), add(-97, ones_diff_cols)), mul(mul(compare_blocks_cols, 26), add(ones_diff_cols, compare_blocks_rows)))
add(mul(add(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols))), add(mul(add(-95, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), add(add(zeros_diff_rows, 53), add(zeros_diff_cols, ones_diff_rows)))), add(add(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows)), mul(add(ones_diff_cols, 7), add(compare_blocks_rows, compare_blocks_rows))), mul(add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))))
mul(mul(mul(add(-4, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_rows, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_cols))), mul(add(mul(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols))))
COND TREES:
le(zeros_diff_cols, zeros_diff_cols)
le(_if_then_else(or_(or_(and_(False, False), ge(zeros_diff_rows, compare_blocks_cols)), or_(and_(True, le(_if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(False, 3, compare_blocks_cols))), le(0, compare_blocks_cols))), _if_then_else(le(_if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(False, 3, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, max_row_clue, max_col_clue)), max_row_clue), _if_then_else(le(_if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, 0, zeros_diff_cols)), _if_then_else(le(1, 4), _if_then_else(False, max_row_clue, max_col_clue), _if_then_else(False, 4, 2)), _if_then_else(and_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(True, zeros_diff_rows, compare_blocks_rows)))), _if_then_else(or_(and_(ge(compare_blocks_rows, 3), le(zeros_diff_cols, compare_blocks_rows)), or_(le(0, max_col_clue), ge(0, 73))), _if_then_else(le(_if_then_else(True, 4, max_row_clue), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(and_(False, True), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_rows)), _if_then_else(le(1, -81), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, max_col_clue, -24))), _if_then_else(or_(ge(zeros_diff_rows, ones_diff_rows), or_(le(_if_then_else(True, 4, max_row_clue), _if_then_else(True, 3, compare_blocks_cols)), False)), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, ones_diff_rows, 4)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(False, ones_diff_rows, max_col_clue)))))
and_(and_(le(_if_then_else(or_(True, True), _if_then_else(True, 1, 3), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(True, _if_then_else(True, max_col_clue, 4), _if_then_else(False, 0, zeros_diff_cols))), or_(ge(_if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 14, 4)), or_(or_(True, False), and_(True, False)))), le(_if_then_else(or_(le(3, 2), ge(zeros_diff_rows, 1)), _if_then_else(or_(True, False), _if_then_else(False, 0, 3), _if_then_else(False, 3, 2)), _if_then_else(le(0, ones_diff_cols), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, max_col_clue, zeros_diff_rows))), _if_then_else(ge(_if_then_else(False, 1, 0), _if_then_else(le(_if_then_else(or_(le(3, 2), ge(zeros_diff_rows, 1)), _if_then_else(or_(True, False), _if_then_else(False, 0, _if_then_else(True, 3, max_col_clue)), _if_then_else(False, 3, 2)), _if_then_else(le(0, ones_diff_cols), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, max_col_clue, zeros_diff_rows))), _if_then_else(ge(_if_then_else(False, 1, 0), _if_then_else(True, ones_diff_cols, zeros_diff_rows)), _if_then_else(le(zeros_diff_cols, max_col_clue), _if_then_else(True, 0, ones_diff_cols), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(ge(3, 2), zeros_diff_cols, _if_then_else(True, max_col_clue, 2)))), ones_diff_cols, zeros_diff_rows)), _if_then_else(le(zeros_diff_cols, max_col_clue), _if_then_else(True, max_row_clue, ones_diff_cols), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(ge(3, 2), zeros_diff_cols, _if_then_else(True, max_col_clue, 2)))))
or_(ge(compare_blocks_cols, compare_blocks_rows), ge(zeros_diff_cols, compare_blocks_cols))
ge(_if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(and_(False, le(4, zeros_diff_cols)), 3, 3))
VAL TREES:
add(mul(add(add(add(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))), add(mul(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(16, compare_blocks_cols))), mul(mul(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, -68), mul(compare_blocks_cols, ones_diff_cols)))))
add(mul(add(add(mul(ones_diff_cols, 84), mul(ones_diff_cols, zeros_diff_rows)), mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, -29))), mul(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_rows)), add(add(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))), add(add(mul(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, -7)), add(mul(add(add(compare_blocks_rows, compare_blocks_rows), mul(compare_blocks_rows, compare_blocks_cols)), zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))), mul(mul(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, 81)), add(mul(zeros_diff_cols, zeros_diff_cols), mul(71, ones_diff_rows)))))
mul(add(mul(add(add(ones_diff_rows, compare_blocks_rows), zeros_diff_cols), add(compare_blocks_rows, add(ones_diff_cols, zeros_diff_cols))), ones_diff_rows), add(mul(zeros_diff_rows, 13), -10))
add(add(mul(zeros_diff_cols, zeros_diff_cols), add(-97, ones_diff_cols)), mul(mul(compare_blocks_cols, add(add(add(add(mul(zeros_diff_rows, ones_diff_cols), add(zeros_diff_rows, ones_diff_rows)), mul(mul(compare_blocks_rows, ones_diff_rows), add(zeros_diff_cols, compare_blocks_rows))), mul(mul(add(compare_blocks_rows, ones_diff_cols), add(ones_diff_rows, compare_blocks_rows)), mul(mul(66, ones_diff_rows), mul(-18, compare_blocks_rows)))), mul(add(mul(add(ones_diff_rows, ones_diff_rows), mul(ones_diff_rows, compare_blocks_cols)), mul(add(ones_diff_rows, ones_diff_cols), mul(zeros_diff_cols, zeros_diff_cols))), add(add(mul(-79, zeros_diff_rows), add(compare_blocks_rows, ones_diff_rows)), add(add(-90, 8), mul(compare_blocks_cols, zeros_diff_rows)))))), add(ones_diff_cols, add(mul(zeros_diff_rows, ones_diff_cols), mul(ones_diff_cols, add(add(mul(compare_blocks_rows, compare_blocks_rows), ones_diff_cols), mul(zeros_diff_rows, zeros_diff_rows)))))))
add(mul(add(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols))), add(mul(add(-95, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), add(add(zeros_diff_rows, 53), add(zeros_diff_cols, ones_diff_rows)))), add(add(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows)), mul(add(ones_diff_cols, 7), add(compare_blocks_rows, compare_blocks_rows))), mul(add(mul(compare_blocks_rows, mul(add(mul(add(83, zeros_diff_cols), add(compare_blocks_cols, ones_diff_rows)), mul(mul(compare_blocks_cols, ones_diff_cols), add(ones_diff_rows, 45))), mul(add(mul(zeros_diff_cols, 9), add(compare_blocks_rows, ones_diff_cols)), add(mul(ones_diff_cols, zeros_diff_cols), add(add(ones_diff_cols, mul(ones_diff_cols, compare_blocks_cols)), mul(compare_blocks_cols, mul(-11, add(compare_blocks_cols, zeros_diff_rows)))))))), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))))
mul(mul(mul(add(-4, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), mul(-26, compare_blocks_rows))), mul(add(mul(zeros_diff_rows, compare_blocks_cols), mul(add(zeros_diff_rows, -12), mul(compare_blocks_rows, 67))), mul(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols))))
COND TREES:
le(zeros_diff_cols, _if_then_else(or_(or_(or_(le(_if_then_else(False, zeros_diff_rows, 1), _if_then_else(False, 1, compare_blocks_cols)), and_(le(max_row_clue, compare_blocks_rows), and_(False, False))), ge(_if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, max_col_clue), _if_then_else(True, max_col_clue, zeros_diff_rows)), _if_then_else(ge(1, 34), _if_then_else(False, 0, max_row_clue), _if_then_else(True, max_col_clue, 31)))), or_(True, le(_if_then_else(ge(3, 3), _if_then_else(True, ones_diff_cols, compare_blocks_rows), _if_then_else(True, ones_diff_rows, ones_diff_rows)), _if_then_else(le(0, 4), _if_then_else(True, max_col_clue, 0), _if_then_else(False, compare_blocks_rows, ones_diff_cols))))), zeros_diff_rows, 2))
le(_if_then_else(or_(or_(and_(False, False), ge(zeros_diff_rows, compare_blocks_cols)), or_(and_(True, True), le(0, compare_blocks_cols))), _if_then_else(le(_if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(False, 3, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, max_row_clue, max_col_clue)), max_row_clue), _if_then_else(le(_if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, 0, zeros_diff_cols)), _if_then_else(le(1, 4), _if_then_else(False, max_row_clue, max_col_clue), _if_then_else(or_(or_(or_(le(_if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, 2, 2)), ge(_if_then_else(True, zeros_diff_cols, max_row_clue), _if_then_else(False, max_col_clue, ones_diff_rows))), or_(ge(_if_then_else(True, 1, 3), _if_then_else(True, 1, 0)), or_(le(2, compare_blocks_rows), and_(False, True)))), or_(ge(_if_then_else(and_(False, False), _if_then_else(True, 2, -2), _if_then_else(True, 4, compare_blocks_rows)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_cols, ones_diff_cols), _if_then_else(True, compare_blocks_cols, ones_diff_cols))), or_(ge(_if_then_else(True, max_col_clue, 4), _if_then_else(True, zeros_diff_cols, max_row_clue)), ge(_if_then_else(True, compare_blocks_rows, ones_diff_rows), _if_then_else(True, compare_blocks_cols, 4))))), 4, 2)), _if_then_else(and_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(True, zeros_diff_rows, compare_blocks_rows)))), _if_then_else(or_(and_(ge(compare_blocks_rows, 3), le(zeros_diff_cols, compare_blocks_rows)), or_(ge(4, 1), ge(0, 73))), _if_then_else(le(_if_then_else(True, 4, max_row_clue), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(and_(False, True), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_rows)), _if_then_else(le(1, -81), _if_then_else(True, _if_then_else(False, max_row_clue, max_col_clue), max_row_clue), _if_then_else(False, max_col_clue, -24))), _if_then_else(or_(ge(zeros_diff_rows, ones_diff_rows), or_(True, False)), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, ones_diff_rows, 4)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(False, ones_diff_rows, max_col_clue)))))
and_(and_(le(_if_then_else(le(max_col_clue, ones_diff_rows), _if_then_else(True, _if_then_else(True, compare_blocks_rows, _if_then_else(False, 3, ones_diff_rows)), _if_then_else(False, 0, _if_then_else(True, compare_blocks_cols, compare_blocks_rows))), _if_then_else(False, zeros_diff_cols, max_row_clue)), _if_then_else(True, _if_then_else(True, max_col_clue, 4), _if_then_else(False, 0, zeros_diff_cols))), or_(True, or_(or_(True, False), and_(True, False)))), le(_if_then_else(or_(le(3, 2), ge(zeros_diff_rows, 1)), _if_then_else(or_(True, False), _if_then_else(False, 0, 3), _if_then_else(False, 3, 2)), _if_then_else(le(0, ones_diff_cols), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, max_col_clue, zeros_diff_rows))), _if_then_else(ge(_if_then_else(False, 1, 0), _if_then_else(le(zeros_diff_rows, compare_blocks_rows), ones_diff_cols, zeros_diff_rows)), _if_then_else(le(zeros_diff_cols, max_col_clue), _if_then_else(True, max_row_clue, ones_diff_cols), _if_then_else(False, compare_blocks_cols, zeros_diff_rows)), _if_then_else(ge(3, 2), zeros_diff_cols, _if_then_else(True, max_col_clue, 2)))))
or_(True, and_(le(_if_then_else(le(_if_then_else(True, 0, max_row_clue), _if_then_else(False, max_col_clue, 44)), _if_then_else(ge(ones_diff_rows, ones_diff_cols), _if_then_else(True, max_row_clue, max_col_clue), _if_then_else(True, max_row_clue, max_col_clue)), _if_then_else(le(-60, zeros_diff_cols), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(False, 1, 4))), _if_then_else(le(_if_then_else(True, 2, 3), _if_then_else(False, 3, 2)), _if_then_else(ge(max_row_clue, 1), _if_then_else(True, 10, 81), _if_then_else(True, max_row_clue, 1)), _if_then_else(and_(False, True), _if_then_else(False, -90, ones_diff_rows), _if_then_else(False, zeros_diff_rows, 1)))), ge(_if_then_else(and_(and_(True, False), and_(False, False)), _if_then_else(le(66, 1), _if_then_else(False, compare_blocks_rows, 0), _if_then_else(True, max_col_clue, 84)), _if_then_else(or_(False, True), _if_then_else(False, max_col_clue, -60), _if_then_else(True, compare_blocks_cols, 3))), _if_then_else(or_(or_(True, True), and_(False, False)), _if_then_else(ge(-7, 4), _if_then_else(False, ones_diff_cols, -53), _if_then_else(False, 8, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(True, compare_blocks_cols, 4))))))
ge(-52, _if_then_else(and_(False, False), 3, 1))
VAL TREES:
add(mul(add(add(add(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))), add(mul(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(16, compare_blocks_cols))), mul(mul(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, -68), mul(compare_blocks_cols, ones_diff_cols)))))
add(mul(add(add(mul(ones_diff_cols, 84), mul(ones_diff_cols, zeros_diff_rows)), mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, -29))), mul(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_rows)), add(add(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))), add(add(mul(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, -7)), add(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))), mul(mul(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, 81)), add(mul(zeros_diff_cols, zeros_diff_cols), mul(71, ones_diff_rows)))))
mul(add(compare_blocks_cols, ones_diff_rows), add(mul(zeros_diff_rows, 13), -10))
add(add(mul(zeros_diff_cols, zeros_diff_cols), add(-97, ones_diff_cols)), mul(mul(compare_blocks_cols, 26), add(ones_diff_cols, compare_blocks_rows)))
add(mul(add(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols))), add(mul(add(-95, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), add(add(zeros_diff_rows, 53), add(zeros_diff_cols, ones_diff_rows)))), add(add(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows)), mul(add(ones_diff_cols, 7), add(compare_blocks_rows, compare_blocks_rows))), mul(add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))))
mul(mul(mul(add(-4, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), mul(-26, compare_blocks_rows))), mul(add(mul(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols))))
COND TREES:
le(_if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(and_(and_(and_(True, True), le(61, compare_blocks_cols)), le(_if_then_else(False, zeros_diff_rows, 4), _if_then_else(False, 2, 19))), 3, max_col_clue))
le(_if_then_else(or_(or_(and_(False, False), ge(zeros_diff_rows, compare_blocks_cols)), or_(and_(True, True), le(0, compare_blocks_cols))), _if_then_else(le(_if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(False, 3, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, max_row_clue, max_col_clue)), max_row_clue), _if_then_else(le(_if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(True, 0, zeros_diff_cols)), _if_then_else(False, compare_blocks_cols, _if_then_else(False, 4, 2)), _if_then_else(and_(True, True), _if_then_else(True, max_col_clue, 3), _if_then_else(True, zeros_diff_rows, compare_blocks_rows)))), _if_then_else(or_(and_(ge(compare_blocks_rows, 3), le(zeros_diff_cols, compare_blocks_rows)), or_(le(0, max_col_clue), ge(0, 73))), _if_then_else(le(_if_then_else(True, 4, max_row_clue), _if_then_else(True, 3, compare_blocks_cols)), _if_then_else(and_(False, True), _if_then_else(True, 4, compare_blocks_rows), _if_then_else(False, 2, zeros_diff_rows)), _if_then_else(le(1, -81), _if_then_else(True, compare_blocks_cols, max_row_clue), _if_then_else(False, max_col_clue, -24))), _if_then_else(or_(ge(zeros_diff_rows, ones_diff_rows), or_(True, False)), _if_then_else(and_(False, True), _if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, ones_diff_rows, 4)), _if_then_else(ge(compare_blocks_cols, 3), _if_then_else(True, compare_blocks_rows, ones_diff_cols), _if_then_else(False, ones_diff_rows, max_col_clue)))))
and_(and_(le(_if_then_else(or_(True, ge(_if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 14, ones_diff_cols))), _if_then_else(True, 1, 3), _if_then_else(True, 3, ones_diff_rows)), _if_then_else(True, _if_then_else(True, max_col_clue, 4), _if_then_else(False, 0, zeros_diff_cols))), or_(ge(_if_then_else(True, compare_blocks_cols, compare_blocks_rows), _if_then_else(False, 14, 4)), or_(or_(True, False), and_(True, True)))), True)
or_(True, ge(max_row_clue, 3))
ge(_if_then_else(True, 4, zeros_diff_cols), _if_then_else(and_(False, le(_if_then_else(ge(-16, 3), _if_then_else(False, max_col_clue, 1), _if_then_else(True, 4, compare_blocks_cols)), 1)), ones_diff_cols, 1))
VAL TREES:
add(mul(add(add(add(compare_blocks_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_cols)), mul(add(zeros_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows))), mul(mul(mul(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_rows, zeros_diff_cols)), mul(mul(compare_blocks_cols, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))), add(mul(add(add(ones_diff_cols, ones_diff_rows), add(ones_diff_rows, ones_diff_rows)), add(add(compare_blocks_cols, zeros_diff_rows), add(16, compare_blocks_cols))), mul(mul(add(zeros_diff_cols, zeros_diff_rows), add(ones_diff_rows, zeros_diff_cols)), add(add(zeros_diff_rows, -68), mul(compare_blocks_cols, ones_diff_cols)))))
add(mul(add(add(mul(ones_diff_cols, 84), mul(ones_diff_cols, zeros_diff_rows)), mul(add(ones_diff_rows, compare_blocks_rows), mul(zeros_diff_cols, -29))), mul(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, compare_blocks_rows)), add(add(zeros_diff_cols, zeros_diff_cols), mul(compare_blocks_rows, ones_diff_rows)))), add(add(mul(mul(ones_diff_cols, compare_blocks_cols), add(ones_diff_rows, -7)), add(mul(compare_blocks_rows, zeros_diff_cols), mul(zeros_diff_cols, compare_blocks_rows))), mul(mul(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_cols, 81)), add(mul(zeros_diff_cols, zeros_diff_cols), mul(71, ones_diff_rows)))))
mul(add(compare_blocks_cols, ones_diff_rows), add(mul(zeros_diff_rows, 13), -10))
add(add(mul(zeros_diff_cols, zeros_diff_cols), add(-97, ones_diff_cols)), mul(mul(compare_blocks_cols, 26), add(ones_diff_cols, compare_blocks_rows)))
add(mul(add(mul(add(compare_blocks_cols, ones_diff_cols), add(ones_diff_cols, ones_diff_rows)), add(add(zeros_diff_cols, zeros_diff_cols), add(ones_diff_rows, ones_diff_cols))), add(mul(add(-95, ones_diff_cols), add(ones_diff_cols, zeros_diff_cols)), add(add(zeros_diff_rows, 53), add(zeros_diff_cols, ones_diff_rows)))), add(add(mul(add(ones_diff_rows, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_rows)), mul(add(ones_diff_cols, 7), add(compare_blocks_rows, compare_blocks_rows))), mul(add(mul(compare_blocks_rows, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows)), add(mul(ones_diff_rows, compare_blocks_rows), mul(compare_blocks_cols, zeros_diff_cols)))))
mul(mul(mul(add(-4, ones_diff_rows), add(zeros_diff_rows, ones_diff_cols)), mul(add(compare_blocks_cols, zeros_diff_rows), mul(-26, compare_blocks_rows))), mul(add(mul(compare_blocks_rows, zeros_diff_rows), add(zeros_diff_cols, zeros_diff_rows)), mul(mul(ones_diff_cols, ones_diff_rows), mul(compare_blocks_rows, ones_diff_cols))))
COND TREES:
and_(or_(ge(_if_then_else(and_(True, True), _if_then_else(False, 4, max_col_clue), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(True, ones_diff_cols, 0))), and_(True, le(_if_then_else(False, ones_diff_cols, 2), _if_then_else(True, _if_then_else(or_(and_(ge(ones_diff_cols, compare_blocks_rows), ge(zeros_diff_rows, zeros_diff_rows)), ge(_if_then_else(False, ones_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, max_col_clue))), _if_then_else(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, 2, ones_diff_rows)), _if_then_else(ge(compare_blocks_rows, 80), _if_then_else(True, 2, 0), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(le(2, 0), _if_then_else(False, -14, ones_diff_cols), _if_then_else(False, max_col_clue, 1))), _if_then_else(or_(le(0, 3), le(compare_blocks_cols, zeros_diff_cols)), _if_then_else(ge(zeros_diff_cols, 1), _if_then_else(False, ones_diff_rows, 4), _if_then_else(True, ones_diff_rows, 0)), _if_then_else(le(ones_diff_cols, 2), _if_then_else(False, zeros_diff_rows, 7), _if_then_else(True, max_col_clue, 4)))), compare_blocks_rows)))), False)
and_(ge(max_col_clue, _if_then_else(True, 0, 4)), True)
or_(True, True)
ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, _if_then_else(False, _if_then_else(or_(False, True), _if_then_else(False, 2, ones_diff_rows), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, max_row_clue, 2))), _if_then_else(and_(ge(max_col_clue, ones_diff_cols), and_(False, False)), _if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, 3, max_col_clue))))
le(_if_then_else(and_(False, True), _if_then_else(or_(or_(and_(ge(_if_then_else(False, 4, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, 87)), or_(le(0, 1), and_(False, False))), and_(and_(or_(True, True), or_(False, False)), le(_if_then_else(or_(True, True), max_col_clue, compare_blocks_cols), _if_then_else(True, 2, 2)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_cols, 65), _if_then_else(False, 2, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(True, 55, max_row_clue), _if_then_else(True, 1, ones_diff_rows)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, 1), _if_then_else(False, compare_blocks_cols, 44))), _if_then_else(and_(or_(False, False), le(1, zeros_diff_cols)), _if_then_else(ge(73, ones_diff_rows), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, -34, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(True, ones_diff_rows, 3))))), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), 3), _if_then_else(False, _if_then_else(True, 4, zeros_diff_rows), compare_blocks_cols))
VAL TREES:
add(add(mul(-100, zeros_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, 59), mul(2, zeros_diff_cols)))
add(mul(mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), mul(mul(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows)))), add(mul(add(add(ones_diff_cols, ones_diff_cols), add(-83, zeros_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(75, zeros_diff_cols))), add(add(mul(ones_diff_cols, ones_diff_rows), mul(39, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows))
add(mul(compare_blocks_cols, mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_cols, ones_diff_cols)), ones_diff_rows)), mul(zeros_diff_rows, ones_diff_rows))
mul(add(add(zeros_diff_rows, ones_diff_rows), compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols))
mul(mul(zeros_diff_cols, zeros_diff_rows), add(17, compare_blocks_cols))
COND TREES:
and_(or_(ge(_if_then_else(and_(True, True), _if_then_else(False, 4, max_col_clue), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), _if_then_else(or_(True, False), _if_then_else(True, 2, compare_blocks_rows), _if_then_else(True, ones_diff_cols, 0))), and_(True, le(_if_then_else(False, ones_diff_cols, 2), _if_then_else(True, _if_then_else(or_(and_(ge(ones_diff_cols, compare_blocks_rows), ge(zeros_diff_rows, zeros_diff_rows)), ge(_if_then_else(False, ones_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, max_col_clue))), _if_then_else(ge(_if_then_else(False, 3, max_row_clue), _if_then_else(False, 2, ones_diff_rows)), _if_then_else(ge(compare_blocks_rows, 80), _if_then_else(True, 2, 0), _if_then_else(True, 3, zeros_diff_rows)), _if_then_else(le(2, 0), _if_then_else(False, -14, ones_diff_cols), _if_then_else(False, max_col_clue, 1))), _if_then_else(or_(le(0, 3), le(compare_blocks_cols, zeros_diff_cols)), _if_then_else(ge(zeros_diff_cols, 1), _if_then_else(False, ones_diff_rows, 4), _if_then_else(True, ones_diff_rows, 0)), _if_then_else(le(ones_diff_cols, 2), _if_then_else(False, zeros_diff_rows, 7), _if_then_else(True, max_col_clue, 4)))), compare_blocks_rows)))), False)
and_(ge(max_col_clue, _if_then_else(True, 0, 4)), True)
or_(True, True)
ge(_if_then_else(False, compare_blocks_cols, 3), _if_then_else(False, _if_then_else(False, _if_then_else(or_(False, True), _if_then_else(False, 2, ones_diff_rows), _if_then_else(True, 3, zeros_diff_cols)), _if_then_else(or_(False, False), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, max_row_clue, 2))), _if_then_else(and_(ge(max_col_clue, ones_diff_cols), and_(False, False)), _if_then_else(False, ones_diff_rows, zeros_diff_rows), _if_then_else(True, 3, max_col_clue))))
le(_if_then_else(and_(False, True), _if_then_else(or_(or_(and_(ge(_if_then_else(False, 4, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, 87)), or_(le(0, 1), and_(False, False))), and_(and_(or_(True, True), or_(False, False)), le(_if_then_else(or_(True, True), max_col_clue, compare_blocks_cols), _if_then_else(True, 2, 2)))), ge(_if_then_else(ge(_if_then_else(False, compare_blocks_cols, 65), _if_then_else(False, 2, compare_blocks_cols)), _if_then_else(and_(True, True), _if_then_else(True, 55, max_row_clue), _if_then_else(True, 1, ones_diff_rows)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, 1), _if_then_else(False, compare_blocks_cols, 44))), _if_then_else(and_(or_(False, False), le(1, zeros_diff_cols)), _if_then_else(ge(73, ones_diff_rows), _if_then_else(False, zeros_diff_cols, 3), _if_then_else(False, -34, compare_blocks_cols)), _if_then_else(le(ones_diff_rows, 4), _if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(True, ones_diff_rows, 3))))), _if_then_else(True, 1, ones_diff_cols), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), 3), _if_then_else(False, _if_then_else(True, 4, zeros_diff_rows), compare_blocks_cols))
VAL TREES:
add(add(mul(-100, zeros_diff_rows), add(ones_diff_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, 59), mul(2, zeros_diff_cols)))
add(mul(mul(mul(mul(compare_blocks_rows, compare_blocks_rows), add(zeros_diff_rows, zeros_diff_cols)), add(add(compare_blocks_cols, ones_diff_cols), add(compare_blocks_cols, zeros_diff_cols))), mul(mul(mul(ones_diff_rows, compare_blocks_rows), add(ones_diff_rows, zeros_diff_cols)), mul(add(zeros_diff_cols, compare_blocks_cols), mul(ones_diff_cols, compare_blocks_rows)))), add(mul(add(add(ones_diff_cols, ones_diff_cols), add(-83, zeros_diff_cols)), mul(add(compare_blocks_rows, zeros_diff_cols), add(75, zeros_diff_cols))), add(add(mul(ones_diff_cols, ones_diff_rows), mul(39, zeros_diff_rows)), add(add(ones_diff_rows, zeros_diff_rows), mul(zeros_diff_cols, zeros_diff_rows)))))
mul(mul(ones_diff_rows, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_rows))
add(mul(compare_blocks_cols, mul(mul(mul(compare_blocks_rows, ones_diff_cols), mul(compare_blocks_cols, ones_diff_cols)), ones_diff_rows)), mul(zeros_diff_rows, ones_diff_rows))
mul(add(add(zeros_diff_rows, ones_diff_rows), compare_blocks_rows), mul(zeros_diff_cols, compare_blocks_cols))
mul(mul(zeros_diff_cols, zeros_diff_rows), add(17, compare_blocks_cols))


INFO:root:hof: COND TREES:
le(_if_then_else(le(_if_then_else(or_(True, True), _if_then_else(True, 3, 1), _if_then_else(False, ones_diff_cols, compare_blocks_cols)), _if_then_else(or_(True, False), _if_then_else(False, ones_diff_rows, 4), _if_then_else(False, compare_blocks_rows, 3))), _if_then_else(le(_if_then_else(False, 0, zeros_diff_rows), _if_then_else(False, 0, compare_blocks_cols)), _if_then_else(or_(True, True), _if_then_else(True, 0, zeros_diff_rows), _if_then_else(True, 4, zeros_diff_rows)), _if_then_else(le(max_col_clue, max_col_clue), _if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(False, ones_diff_cols, 1))), _if_then_else(or_(le(max_row_clue, max_col_clue), or_(False, True)), _if_then_else(or_(True, False), _if_then_else(True, -81, ones_diff_rows), _if_then_else(False, compare_blocks_rows, max_col_clue)), _if_then_else(le(zeros_diff_cols, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, max_col_clue), _if_then_else(False, max_row_clue, ones_diff_rows)))), _if_then_else(ge(_if_then_else(le(compare_blocks_cols, 66), _if_then_else(False, max_row_clue, 2), _if_then_else(False, 3, 1)), _if_then_else(ge(25, zeros_diff_cols), _if_then_else(True, compare_blocks_cols, 41), _if_then_else(False, zeros_diff_rows, -41))), _if_then_else(or_(or_(False, False), le(max_col_clue, compare_blocks_rows)), _if_then_else(le(max_col_clue, -40), _if_then_else(True, max_row_clue, zeros_diff_rows), _if_then_else(False, 3, compare_blocks_rows)), _if_then_else(ge(2, ones_diff_cols), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, -21, zeros_diff_rows))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, 42), _if_then_else(True, 78, 3)), _if_then_else(le(4, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, 4)), _if_then_else(or_(True, False), _if_then_else(True, 2, 0), _if_then_else(True, ones_diff_cols, -42)))))
and_(and_(or_(or_(True, False), or_(False, False)), and_(le(max_col_clue, ones_diff_rows), ge(zeros_diff_rows, compare_blocks_rows))), ge(_if_then_else(or_(False, True), _if_then_else(False, compare_blocks_rows, max_row_clue), _if_then_else(True, zeros_diff_rows, ones_diff_cols)), _if_then_else(ge(ones_diff_rows, ones_diff_rows), _if_then_else(False, max_col_clue, 1), _if_then_else(False, ones_diff_rows, 3))))
le(_if_then_else(False, -58, 1), _if_then_else(False, 1, max_col_clue))
and_(le(_if_then_else(or_(or_(True, False), ge(compare_blocks_rows, max_col_clue)), _if_then_else(le(max_row_clue, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, 3, 4)), _if_then_else(and_(True, False), _if_then_else(False, max_row_clue, ones_diff_rows), _if_then_else(False, compare_blocks_cols, 4))), _if_then_else(ge(_if_then_else(False, 4, ones_diff_cols), _if_then_else(True, max_row_clue, compare_blocks_cols)), _if_then_else(le(zeros_diff_rows, zeros_diff_cols), _if_then_else(False, 4, 0), _if_then_else(True, compare_blocks_rows, max_col_clue)), _if_then_else(ge(max_row_clue, 1), _if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, 1, 0)))), and_(ge(_if_then_else(and_(False, False), _if_then_else(False, 3, max_row_clue), _if_then_else(True, ones_diff_rows, zeros_diff_cols)), _if_then_else(or_(True, False), _if_then_else(False, 1, 32), _if_then_else(True, max_row_clue, max_row_clue))), and_(ge(_if_then_else(True, max_row_clue, max_col_clue), _if_then_else(True, 1, ones_diff_rows)), or_(ge(max_col_clue, 0), and_(True, False)))))
ge(_if_then_else(True, ones_diff_cols, 43), _if_then_else(True, compare_blocks_rows, 3))
VAL TREES:
add(mul(mul(add(zeros_diff_cols, zeros_diff_rows), mul(42, zeros_diff_cols)), mul(add(-92, compare_blocks_rows), add(compare_blocks_rows, compare_blocks_cols))), mul(add(mul(compare_blocks_cols, compare_blocks_cols), add(zeros_diff_cols, compare_blocks_cols)), mul(add(compare_blocks_cols, zeros_diff_cols), add(zeros_diff_rows, ones_diff_rows))))
add(mul(ones_diff_rows, zeros_diff_rows), add(zeros_diff_cols, 35))
add(mul(mul(add(ones_diff_rows, -21), mul(zeros_diff_cols, compare_blocks_rows)), mul(add(13, compare_blocks_cols), add(zeros_diff_cols, zeros_diff_cols))), add(add(mul(zeros_diff_rows, compare_blocks_cols), mul(ones_diff_rows, zeros_diff_rows)), add(mul(ones_diff_rows, ones_diff_rows), mul(zeros_diff_cols, ones_diff_rows))))
mul(mul(mul(zeros_diff_rows, compare_blocks_rows), add(compare_blocks_cols, 8)), add(add(compare_blocks_rows, 84), mul(compare_blocks_cols, -75)))
add(add(zeros_diff_cols, -87), add(compare_blocks_rows, 21))
add(add(51, ones_diff_rows), mul(mul(84, zeros_diff_cols), ones_diff_cols))


INFO:root:stats: {'fitness': <deap.tools.support.Statistics object at 0x0000021E92251DA0>, 'size': <deap.tools.support.Statistics object at 0x0000021E92251DD8>}

