INFO:root:

*******STARTING!!!******


INFO:root:

*******Configuration******


INFO:root:import time


INFO:root:# NUM_ROWS = 20


INFO:root:NUM_ROWS = 5


INFO:root:# NUM_COLS = 20


INFO:root:NUM_COLS = 5


INFO:root:empty_in_split = '\xa0'


INFO:root:pickle_unsolved_file_path = 'data/%dx%d_nonograms.pkl' % (NUM_ROWS, NUM_COLS)


INFO:root:pickle_solved_file_path = 'data/%dx%d_nonograms_solved.pkl' % (NUM_ROWS, NUM_COLS)


INFO:root:pickle_row_options_path = 'data/%dx%d_row_options.pkl' % (NUM_ROWS, NUM_ROWS)


INFO:root:fitness_plot_path = 'plots/fitness' + str(time.time()) + '.pkl'


INFO:root:nums_plot_path = 'plots/nums' + str(time.time()) + '.pkl'


INFO:root:


INFO:root:convert_to_sat = True


INFO:root:should_run_in_parallel = True


INFO:root:print_individual_fitness = False


INFO:root:


INFO:root:NUM_COND_TREES = 5


INFO:root:NUM_VAL_TREES = NUM_COND_TREES + 1


INFO:root:prob_crossover_global = 0.8  # global probability for cx


INFO:root:prob_crossover_individual_cond = 0.7  # probability to cx a specific cond tree in an individual


INFO:root:prob_crossover_individual_val = 0.7  # probability to cx a specific cond tree in an individual


INFO:root:prob_mutate_global = 0.2


INFO:root:prob_mutate_individual_cond = 1


INFO:root:prob_mutate_individual_val = 1


INFO:root:


INFO:root:points_correct_box = 5


INFO:root:points_incorrect_box = 0


INFO:root:# points_incorrect_box = -2


INFO:root:pop_size = 30


INFO:root:hof_size = 1


INFO:root:# num_gen = 40


INFO:root:num_gen = 4


INFO:root:train_size = 3


INFO:root:

*******DONE!!!******


INFO:root:run time: 496 sec

INFO:root:max possible fitness for the nonograms ran: %d

INFO:root:log:    	      	                                    fitness                                    
   	      	-------------------------------------------------------------------------------
gen	nevals	avg    	max 	median 	min	most common	num max	num min	size	std    
0  	30    	344    	344 	344    	344	344        	30     	30     	30  	0      
1  	25    	645.844	1000	687.333	344	687.333    	7      	10     	30  	245.728
2  	24    	468.867	1000	344    	344	1000       	1      	20     	30  	184.706
3  	23    	467.844	1000	344    	344	344        	2      	21     	30  	202.13 
4  	24    	376.833	1000	344    	344	1000       	1      	28     	30  	129.902

INFO:root:pop: COND TREES:
and_(le(_if_then_else(False, 41, zeros_diff_cols), 90), and_(True, False))
le(_if_then_else(False, zeros_diff_rows, max_row_clue), max_col_clue)
or_(and_(ge(_if_then_else(and_(True, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, compare_blocks_cols, zeros_diff_cols)), _if_then_else(ge(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_rows, compare_blocks_rows))), le(_if_then_else(and_(False, False), _if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(False, ones_diff_cols, 66)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_cols, ones_diff_rows), _if_then_else(False, max_col_clue, ones_diff_cols)))), le(_if_then_else(and_(or_(False, False), ge(zeros_diff_rows, max_col_clue)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(compare_blocks_rows, ones_diff_rows), _if_then_else(False, ones_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, zeros_diff_cols))), _if_then_else(and_(or_(False, True), le(max_row_clue, compare_blocks_rows)), _if_then_else(ge(ones_diff_rows, 21), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(and_(True, True), zeros_diff_cols, compare_blocks_rows)), _if_then_else(or_(False, True), _if_then_else(True, 90, compare_blocks_cols), _if_then_else(False, max_row_clue, max_col_clue)))))
ge(ones_diff_rows, _if_then_else(True, zeros_diff_cols, compare_blocks_rows))
and_(ge(compare_blocks_cols, compare_blocks_cols), True)
VAL TREES:
mul(add(zeros_diff_cols, max_col_clue), mul(mul(ones_diff_cols, zeros_diff_cols), zeros_diff_rows))
mul(mul(zeros_diff_rows, ones_diff_rows), add(compare_blocks_cols, 95))
mul(mul(add(add(ones_diff_rows, ones_diff_rows), add(max_col_clue, max_row_clue)), add(add(ones_diff_rows, ones_diff_rows), mul(compare_blocks_cols, ones_diff_cols))), add(add(mul(zeros_diff_cols, 11), mul(max_row_clue, max_col_clue)), add(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(add(mul(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_rows, 10)), add(add(max_row_clue, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(max_col_clue, 44))))
mul(mul(add(mul(mul(compare_blocks_rows, 24), mul(ones_diff_rows, zeros_diff_rows)), mul(add(11, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))), add(mul(add(max_col_clue, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(51, max_col_clue)))), mul(mul(add(mul(ones_diff_rows, ones_diff_rows), add(ones_diff_rows, 17)), add(mul(max_col_clue, max_col_clue), add(25, max_row_clue))), add(mul(add(15, max_row_clue), add(compare_blocks_rows, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, max_col_clue)))))
add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols))
COND TREES:
or_(le(_if_then_else(or_(False, True), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, max_col_clue)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows))), or_(or_(le(zeros_diff_cols, ones_diff_rows), le(max_row_clue, max_row_clue)), le(compare_blocks_cols, _if_then_else(True, ones_diff_rows, ones_diff_cols))))
ge(_if_then_else(ge(compare_blocks_cols, compare_blocks_cols), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 86), _if_then_else(False, ones_diff_rows, 14), _if_then_else(True, 24, compare_blocks_cols)))
and_(or_(or_(and_(or_(False, True), ge(zeros_diff_cols, max_col_clue)), ge(_if_then_else(True, 11, compare_blocks_cols), _if_then_else(True, max_col_clue, 90))), le(_if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(False, 61, max_col_clue), _if_then_else(False, max_col_clue, max_col_clue)), _if_then_else(le(26, zeros_diff_cols), _if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, ones_diff_rows)))), and_(le(_if_then_else(le(ones_diff_cols, 10), _if_then_else(True, ones_diff_rows, 82), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(ge(zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, ones_diff_rows, max_col_clue))), or_(ge(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, compare_blocks_cols)), and_(ge(max_row_clue, zeros_diff_cols), le(max_col_clue, compare_blocks_rows)))))
ge(_if_then_else(True, _if_then_else(False, zeros_diff_rows, compare_blocks_cols), ones_diff_rows), _if_then_else(True, _if_then_else(True, zeros_diff_rows, _if_then_else(False, zeros_diff_cols, ones_diff_cols)), ones_diff_cols))
or_(or_(False, True), le(compare_blocks_cols, max_row_clue))
VAL TREES:
mul(add(ones_diff_cols, compare_blocks_cols), add(46, max_row_clue))
mul(mul(compare_blocks_rows, ones_diff_rows), mul(max_row_clue, compare_blocks_rows))
add(add(compare_blocks_cols, zeros_diff_cols), mul(1, compare_blocks_cols))
mul(mul(zeros_diff_rows, add(max_col_clue, ones_diff_rows)), add(ones_diff_rows, compare_blocks_cols))
add(mul(zeros_diff_rows, compare_blocks_rows), add(max_col_clue, mul(mul(max_col_clue, ones_diff_rows), ones_diff_cols)))
mul(mul(ones_diff_cols, max_col_clue), add(ones_diff_rows, max_row_clue))
COND TREES:
or_(le(_if_then_else(or_(False, True), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, max_col_clue)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows))), or_(or_(le(zeros_diff_cols, ones_diff_rows), or_(False, False)), le(_if_then_else(False, 41, zeros_diff_cols), _if_then_else(True, ones_diff_rows, ones_diff_cols))))
ge(_if_then_else(ge(compare_blocks_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 86), _if_then_else(False, ones_diff_rows, 14), _if_then_else(True, 24, compare_blocks_cols)))
and_(or_(or_(and_(or_(False, True), ge(zeros_diff_cols, max_col_clue)), ge(_if_then_else(True, 11, compare_blocks_cols), _if_then_else(True, max_col_clue, 90))), le(_if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(False, 61, max_col_clue), _if_then_else(False, max_col_clue, max_col_clue)), _if_then_else(le(26, zeros_diff_cols), _if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, ones_diff_cols)))), and_(le(_if_then_else(le(ones_diff_cols, 10), _if_then_else(True, ones_diff_rows, 82), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(ge(zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, ones_diff_rows, max_col_clue))), or_(ge(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, compare_blocks_cols)), and_(ge(max_row_clue, zeros_diff_cols), le(max_col_clue, compare_blocks_rows)))))
ge(_if_then_else(False, _if_then_else(False, zeros_diff_rows, _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), ones_diff_rows), _if_then_else(True, _if_then_else(True, zeros_diff_rows, ones_diff_rows), ones_diff_cols))
or_(or_(False, True), ge(compare_blocks_cols, compare_blocks_cols))
VAL TREES:
mul(add(ones_diff_cols, compare_blocks_cols), add(46, max_row_clue))
mul(mul(compare_blocks_rows, ones_diff_rows), mul(max_row_clue, compare_blocks_rows))
add(add(compare_blocks_cols, zeros_diff_cols), mul(1, compare_blocks_cols))
mul(mul(zeros_diff_rows, add(max_col_clue, ones_diff_rows)), add(ones_diff_rows, compare_blocks_cols))
add(mul(zeros_diff_rows, compare_blocks_rows), add(max_col_clue, mul(mul(max_col_clue, ones_diff_rows), ones_diff_cols)))
mul(mul(ones_diff_cols, max_col_clue), add(ones_diff_rows, max_row_clue))
COND TREES:
or_(le(_if_then_else(or_(True, True), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, max_col_clue)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows))), or_(or_(le(zeros_diff_cols, ones_diff_rows), le(max_row_clue, max_row_clue)), le(_if_then_else(False, 41, zeros_diff_cols), _if_then_else(True, ones_diff_rows, ones_diff_cols))))
ge(_if_then_else(ge(compare_blocks_cols, compare_blocks_cols), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 86), _if_then_else(False, ones_diff_rows, 14), _if_then_else(True, max_row_clue, compare_blocks_cols)))
and_(or_(or_(and_(or_(False, True), ge(zeros_diff_cols, max_col_clue)), ge(_if_then_else(True, 11, compare_blocks_cols), _if_then_else(True, max_col_clue, 90))), le(_if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(False, 61, max_col_clue), _if_then_else(False, max_col_clue, max_col_clue)), _if_then_else(le(26, zeros_diff_cols), _if_then_else(True, max_row_clue, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, ones_diff_cols)))), and_(le(_if_then_else(le(ones_diff_cols, 10), _if_then_else(True, ones_diff_rows, 82), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(ge(zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, ones_diff_rows, max_col_clue))), or_(ge(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, compare_blocks_cols)), and_(ge(max_row_clue, zeros_diff_cols), le(max_col_clue, compare_blocks_rows)))))
ge(_if_then_else(True, _if_then_else(True, zeros_diff_rows, compare_blocks_cols), ones_diff_rows), _if_then_else(True, _if_then_else(True, zeros_diff_rows, ones_diff_rows), ones_diff_cols))
or_(or_(False, True), ge(compare_blocks_cols, compare_blocks_cols))
VAL TREES:
mul(add(ones_diff_cols, compare_blocks_cols), add(46, max_row_clue))
mul(mul(compare_blocks_rows, ones_diff_rows), mul(max_row_clue, compare_blocks_rows))
add(add(compare_blocks_cols, zeros_diff_cols), mul(1, compare_blocks_cols))
mul(mul(zeros_diff_rows, add(max_col_clue, ones_diff_rows)), add(ones_diff_rows, compare_blocks_cols))
add(mul(zeros_diff_rows, compare_blocks_rows), add(max_col_clue, mul(mul(max_col_clue, ones_diff_rows), ones_diff_cols)))
mul(mul(ones_diff_cols, max_col_clue), add(ones_diff_rows, max_row_clue))
COND TREES:
or_(le(_if_then_else(or_(False, True), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, max_col_clue)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows))), or_(or_(le(zeros_diff_cols, ones_diff_rows), le(max_row_clue, max_row_clue)), le(_if_then_else(False, 41, zeros_diff_cols), _if_then_else(True, ones_diff_rows, ones_diff_cols))))
ge(_if_then_else(ge(compare_blocks_cols, compare_blocks_cols), _if_then_else(False, 2, compare_blocks_cols), compare_blocks_cols), _if_then_else(le(zeros_diff_cols, 86), _if_then_else(False, ones_diff_rows, 14), _if_then_else(True, 24, compare_blocks_cols)))
and_(or_(or_(and_(or_(False, True), ge(zeros_diff_cols, max_col_clue)), ge(_if_then_else(True, 11, compare_blocks_cols), _if_then_else(True, max_col_clue, 90))), le(_if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(False, 61, max_col_clue), _if_then_else(False, max_col_clue, max_col_clue)), _if_then_else(le(26, zeros_diff_cols), _if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, ones_diff_cols)))), and_(le(_if_then_else(ge(_if_then_else(True, 11, compare_blocks_cols), _if_then_else(True, max_col_clue, max_row_clue)), _if_then_else(True, ones_diff_rows, 82), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(ge(zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, ones_diff_rows, max_col_clue))), or_(ge(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, compare_blocks_cols)), and_(ge(max_row_clue, zeros_diff_cols), le(max_col_clue, compare_blocks_rows)))))
ge(_if_then_else(True, _if_then_else(False, zeros_diff_rows, compare_blocks_cols), ones_diff_rows), _if_then_else(True, _if_then_else(True, zeros_diff_rows, ones_diff_rows), ones_diff_cols))
or_(or_(False, True), ge(max_row_clue, compare_blocks_cols))
VAL TREES:
mul(add(ones_diff_cols, compare_blocks_cols), add(46, max_row_clue))
mul(mul(compare_blocks_rows, ones_diff_rows), mul(max_row_clue, compare_blocks_rows))
add(add(compare_blocks_cols, zeros_diff_cols), mul(1, compare_blocks_cols))
mul(mul(zeros_diff_rows, add(max_col_clue, ones_diff_rows)), add(ones_diff_rows, compare_blocks_cols))
add(mul(zeros_diff_rows, compare_blocks_rows), add(max_col_clue, mul(mul(max_col_clue, ones_diff_rows), ones_diff_cols)))
mul(mul(ones_diff_cols, max_col_clue), add(ones_diff_rows, max_row_clue))
COND TREES:
or_(le(_if_then_else(or_(False, True), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, max_col_clue)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_cols, 90), _if_then_else(False, zeros_diff_cols, zeros_diff_rows))), or_(or_(le(zeros_diff_cols, 97), or_(False, False)), le(_if_then_else(False, 41, zeros_diff_cols), _if_then_else(True, ones_diff_rows, ones_diff_cols))))
ge(_if_then_else(ge(_if_then_else(False, compare_blocks_rows, compare_blocks_cols), compare_blocks_cols), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 46), _if_then_else(False, ones_diff_rows, 14), _if_then_else(True, 24, compare_blocks_cols)))
and_(or_(or_(and_(or_(False, True), ge(zeros_diff_cols, max_col_clue)), le(ones_diff_cols, 10)), le(_if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(False, 61, max_col_clue), _if_then_else(False, max_col_clue, max_col_clue)), _if_then_else(le(26, zeros_diff_cols), _if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, ones_diff_cols)))), and_(le(_if_then_else(le(ones_diff_cols, 10), _if_then_else(True, ones_diff_rows, 82), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(and_(True, True), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, ones_diff_rows, max_col_clue))), or_(ge(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, compare_blocks_cols)), and_(ge(max_row_clue, zeros_diff_cols), le(max_col_clue, compare_blocks_rows)))))
ge(_if_then_else(False, _if_then_else(False, zeros_diff_rows, compare_blocks_cols), ones_diff_rows), _if_then_else(False, _if_then_else(False, max_row_clue, compare_blocks_cols), compare_blocks_rows))
or_(or_(False, True), le(compare_blocks_cols, compare_blocks_cols))
VAL TREES:
mul(add(ones_diff_cols, compare_blocks_cols), add(46, max_row_clue))
mul(mul(compare_blocks_rows, ones_diff_rows), mul(max_row_clue, compare_blocks_rows))
add(add(compare_blocks_cols, zeros_diff_cols), mul(1, compare_blocks_cols))
mul(mul(zeros_diff_rows, add(max_col_clue, ones_diff_rows)), add(ones_diff_rows, compare_blocks_cols))
add(mul(zeros_diff_rows, compare_blocks_rows), add(max_col_clue, mul(mul(max_col_clue, ones_diff_rows), ones_diff_cols)))
mul(mul(ones_diff_cols, max_col_clue), add(ones_diff_rows, max_row_clue))
COND TREES:
or_(le(_if_then_else(or_(True, True), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, max_col_clue)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows))), or_(or_(le(zeros_diff_cols, ones_diff_rows), le(max_row_clue, max_row_clue)), ge(_if_then_else(le(_if_then_else(True, zeros_diff_cols, compare_blocks_cols), _if_then_else(True, 80, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_rows, ones_diff_cols), _if_then_else(True, ones_diff_rows, ones_diff_cols)), _if_then_else(le(zeros_diff_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, zeros_diff_cols), _if_then_else(False, max_col_clue, max_col_clue))), _if_then_else(and_(and_(True, True), ge(max_col_clue, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, ones_diff_cols)), _if_then_else(le(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(True, zeros_diff_cols, 74))))))
ge(_if_then_else(ge(compare_blocks_cols, compare_blocks_cols), _if_then_else(False, _if_then_else(le(_if_then_else(ge(_if_then_else(False, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, ones_diff_cols)), _if_then_else(or_(False, True), _if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(True, max_col_clue, max_row_clue)), _if_then_else(ge(max_row_clue, max_col_clue), _if_then_else(False, zeros_diff_cols, 30), _if_then_else(False, max_col_clue, max_row_clue))), _if_then_else(le(_if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(True, zeros_diff_rows, 8)), _if_then_else(le(zeros_diff_rows, 30), _if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(True, max_col_clue, max_row_clue)), _if_then_else(ge(zeros_diff_cols, max_col_clue), _if_then_else(True, 5, max_col_clue), _if_then_else(False, zeros_diff_cols, ones_diff_cols)))), _if_then_else(le(_if_then_else(and_(False, False), _if_then_else(True, 99, compare_blocks_cols), _if_then_else(True, max_row_clue, zeros_diff_rows)), _if_then_else(le(ones_diff_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(True, zeros_diff_rows, compare_blocks_rows))), _if_then_else(le(_if_then_else(True, ones_diff_rows, max_row_clue), _if_then_else(True, ones_diff_cols, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, 69, zeros_diff_rows), _if_then_else(True, compare_blocks_cols, zeros_diff_cols)), _if_then_else(and_(True, False), _if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(True, max_row_clue, zeros_diff_rows))), _if_then_else(ge(_if_then_else(False, ones_diff_cols, ones_diff_rows), _if_then_else(False, 49, 27)), _if_then_else(le(compare_blocks_cols, zeros_diff_rows), _if_then_else(False, ones_diff_rows, ones_diff_cols), _if_then_else(True, ones_diff_rows, 24)), _if_then_else(and_(True, False), _if_then_else(False, zeros_diff_cols, max_row_clue), _if_then_else(False, max_row_clue, max_row_clue)))), _if_then_else(ge(_if_then_else(le(ones_diff_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), _if_then_else(ge(40, max_col_clue), _if_then_else(True, zeros_diff_cols, max_row_clue), _if_then_else(True, 13, max_row_clue))), _if_then_else(or_(and_(False, False), and_(False, False)), _if_then_else(le(max_row_clue, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, max_col_clue), _if_then_else(True, zeros_diff_cols, max_col_clue)), _if_then_else(and_(False, True), _if_then_else(False, ones_diff_rows, compare_blocks_rows), _if_then_else(True, zeros_diff_cols, zeros_diff_rows))), _if_then_else(le(_if_then_else(True, ones_diff_rows, max_col_clue), _if_then_else(False, zeros_diff_cols, ones_diff_rows)), _if_then_else(le(compare_blocks_rows, ones_diff_cols), _if_then_else(False, ones_diff_cols, max_col_clue), _if_then_else(True, ones_diff_rows, ones_diff_rows)), _if_then_else(le(max_col_clue, zeros_diff_cols), _if_then_else(True, max_row_clue, ones_diff_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols))))), compare_blocks_cols), _if_then_else(False, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 86), _if_then_else(False, ones_diff_rows, 14), _if_then_else(True, max_row_clue, compare_blocks_cols)))
and_(or_(or_(and_(or_(False, True), ge(zeros_diff_cols, max_col_clue)), ge(_if_then_else(True, 11, compare_blocks_cols), _if_then_else(True, max_col_clue, 90))), le(_if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(False, 61, max_col_clue), _if_then_else(False, max_col_clue, max_col_clue)), _if_then_else(le(26, zeros_diff_cols), _if_then_else(and_(ge(ones_diff_rows, compare_blocks_cols), ge(max_row_clue, ones_diff_cols)), max_row_clue, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, ones_diff_cols)))), and_(le(_if_then_else(le(ones_diff_cols, 10), _if_then_else(True, ones_diff_rows, 82), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(ge(zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, ones_diff_rows, max_col_clue))), or_(ge(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, compare_blocks_cols)), and_(ge(max_row_clue, zeros_diff_cols), le(max_col_clue, compare_blocks_rows)))))
ge(_if_then_else(True, _if_then_else(True, zeros_diff_rows, compare_blocks_cols), ones_diff_rows), _if_then_else(True, _if_then_else(True, zeros_diff_rows, _if_then_else(and_(ge(41, max_col_clue), False), _if_then_else(False, zeros_diff_cols, zeros_diff_rows), _if_then_else(False, max_col_clue, max_col_clue))), ones_diff_cols))
or_(or_(le(_if_then_else(False, zeros_diff_cols, 69), _if_then_else(or_(and_(True, False), False), ones_diff_cols, max_col_clue)), True), True)
VAL TREES:
mul(add(ones_diff_cols, compare_blocks_cols), add(46, max_row_clue))
mul(mul(compare_blocks_rows, ones_diff_rows), mul(max_row_clue, compare_blocks_rows))
add(add(compare_blocks_cols, zeros_diff_cols), mul(1, compare_blocks_cols))
mul(mul(zeros_diff_rows, add(max_col_clue, ones_diff_rows)), add(ones_diff_rows, compare_blocks_cols))
add(mul(zeros_diff_rows, compare_blocks_rows), add(max_col_clue, mul(mul(max_col_clue, ones_diff_rows), ones_diff_cols)))
mul(mul(ones_diff_cols, max_col_clue), add(ones_diff_rows, max_row_clue))
COND TREES:
and_(False, and_(True, False))
le(_if_then_else(False, 2, max_row_clue), max_col_clue)
or_(and_(ge(_if_then_else(and_(True, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, compare_blocks_cols, zeros_diff_cols)), _if_then_else(ge(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_rows, compare_blocks_rows))), le(_if_then_else(and_(False, False), _if_then_else(True, ones_diff_rows, ones_diff_rows), _if_then_else(False, ones_diff_cols, 66)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_cols, ones_diff_rows), _if_then_else(False, max_col_clue, ones_diff_cols)))), le(_if_then_else(and_(or_(False, False), ge(zeros_diff_rows, max_col_clue)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(compare_blocks_rows, ones_diff_rows), _if_then_else(False, ones_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, zeros_diff_cols))), _if_then_else(and_(or_(False, True), le(max_row_clue, compare_blocks_rows)), _if_then_else(ge(ones_diff_rows, 21), _if_then_else(True, compare_blocks_rows, max_row_clue), ones_diff_cols), _if_then_else(or_(False, True), _if_then_else(True, 90, compare_blocks_cols), _if_then_else(False, max_row_clue, max_col_clue)))))
ge(_if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_rows))
and_(le(max_row_clue, max_row_clue), ge(compare_blocks_cols, compare_blocks_cols))
VAL TREES:
mul(add(zeros_diff_cols, max_col_clue), mul(mul(ones_diff_cols, zeros_diff_cols), zeros_diff_rows))
mul(mul(zeros_diff_rows, ones_diff_rows), add(compare_blocks_cols, 95))
mul(mul(add(add(ones_diff_rows, ones_diff_rows), add(max_col_clue, max_row_clue)), add(add(ones_diff_rows, ones_diff_rows), mul(compare_blocks_cols, ones_diff_cols))), add(add(mul(zeros_diff_cols, 11), mul(max_row_clue, max_col_clue)), add(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(add(mul(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_rows, 10)), add(add(max_row_clue, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(max_col_clue, 44))))
mul(mul(add(mul(mul(compare_blocks_rows, 24), mul(ones_diff_rows, zeros_diff_rows)), mul(add(11, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))), add(mul(add(max_col_clue, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(51, max_col_clue)))), mul(mul(add(mul(ones_diff_rows, ones_diff_rows), add(ones_diff_rows, 17)), add(mul(max_col_clue, max_col_clue), add(25, max_row_clue))), add(mul(add(15, max_row_clue), add(compare_blocks_rows, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, max_col_clue)))))
add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols))
COND TREES:
and_(le(compare_blocks_cols, 90), and_(True, False))
le(_if_then_else(False, zeros_diff_rows, max_row_clue), max_col_clue)
or_(and_(ge(_if_then_else(and_(True, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, compare_blocks_cols, zeros_diff_cols)), _if_then_else(ge(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_rows, compare_blocks_rows))), le(_if_then_else(and_(False, False), _if_then_else(True, ones_diff_rows, ones_diff_rows), _if_then_else(False, ones_diff_cols, 66)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_cols, ones_diff_rows), _if_then_else(False, max_col_clue, ones_diff_cols)))), le(_if_then_else(and_(or_(False, False), ge(zeros_diff_rows, max_col_clue)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(compare_blocks_rows, ones_diff_rows), _if_then_else(False, ones_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, zeros_diff_cols))), _if_then_else(and_(or_(False, True), le(max_row_clue, compare_blocks_rows)), _if_then_else(ge(ones_diff_rows, 21), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(and_(True, True), zeros_diff_cols, compare_blocks_rows)), _if_then_else(or_(False, True), _if_then_else(True, 90, compare_blocks_cols), _if_then_else(False, max_row_clue, max_col_clue)))))
ge(_if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(True, _if_then_else(True, zeros_diff_rows, compare_blocks_cols), ones_diff_rows))
and_(le(compare_blocks_cols, compare_blocks_cols), True)
VAL TREES:
mul(add(zeros_diff_cols, max_col_clue), mul(mul(ones_diff_cols, zeros_diff_cols), zeros_diff_rows))
mul(mul(zeros_diff_rows, ones_diff_rows), add(compare_blocks_cols, 95))
mul(mul(add(add(ones_diff_rows, ones_diff_rows), add(max_col_clue, max_row_clue)), add(add(ones_diff_rows, ones_diff_rows), mul(compare_blocks_cols, ones_diff_cols))), add(add(mul(zeros_diff_cols, 11), mul(max_row_clue, max_col_clue)), add(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(add(mul(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_rows, 10)), add(add(max_row_clue, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(max_col_clue, 44))))
mul(mul(add(mul(mul(compare_blocks_rows, 24), mul(ones_diff_rows, zeros_diff_rows)), mul(add(11, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))), add(mul(add(max_col_clue, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(51, max_col_clue)))), mul(mul(add(mul(ones_diff_rows, ones_diff_rows), add(ones_diff_rows, 17)), add(mul(max_col_clue, max_col_clue), add(25, max_row_clue))), add(mul(add(15, max_row_clue), add(compare_blocks_rows, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, max_col_clue)))))
add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols))
COND TREES:
or_(le(_if_then_else(or_(True, True), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, max_col_clue)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows))), or_(or_(le(zeros_diff_cols, ones_diff_rows), le(max_row_clue, max_row_clue)), le(_if_then_else(False, 41, zeros_diff_cols), _if_then_else(True, ones_diff_rows, ones_diff_cols))))
ge(_if_then_else(ge(compare_blocks_cols, compare_blocks_cols), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 86), _if_then_else(False, ones_diff_rows, 14), _if_then_else(True, max_row_clue, compare_blocks_cols)))
and_(or_(or_(and_(or_(False, True), ge(zeros_diff_cols, max_col_clue)), ge(_if_then_else(True, 11, compare_blocks_cols), _if_then_else(True, max_col_clue, 90))), le(_if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(False, 61, max_col_clue), _if_then_else(False, max_col_clue, max_col_clue)), _if_then_else(le(26, zeros_diff_cols), _if_then_else(True, max_row_clue, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, ones_diff_cols)))), and_(le(_if_then_else(le(ones_diff_cols, 10), _if_then_else(True, ones_diff_rows, 82), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(ge(zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, ones_diff_rows, max_col_clue))), or_(ge(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, compare_blocks_cols)), and_(ge(max_row_clue, zeros_diff_cols), le(max_col_clue, compare_blocks_rows)))))
ge(_if_then_else(True, zeros_diff_cols, compare_blocks_rows), _if_then_else(True, _if_then_else(True, zeros_diff_rows, ones_diff_rows), ones_diff_cols))
or_(or_(False, True), ge(max_row_clue, compare_blocks_cols))
VAL TREES:
mul(add(ones_diff_cols, compare_blocks_cols), add(mul(mul(mul(6, zeros_diff_rows), mul(ones_diff_rows, zeros_diff_cols)), add(zeros_diff_cols, max_row_clue)), max_row_clue))
mul(add(max_row_clue, ones_diff_cols), add(max_col_clue, zeros_diff_cols))
add(add(compare_blocks_cols, zeros_diff_cols), mul(mul(add(mul(mul(compare_blocks_rows, 39), add(ones_diff_cols, 19)), mul(mul(max_col_clue, max_col_clue), add(ones_diff_rows, 14))), add(mul(add(ones_diff_rows, zeros_diff_cols), add(compare_blocks_cols, ones_diff_rows)), add(add(compare_blocks_rows, max_row_clue), add(compare_blocks_cols, 5)))), mul(add(add(add(max_col_clue, ones_diff_rows), mul(ones_diff_cols, ones_diff_cols)), add(add(14, compare_blocks_rows), mul(max_col_clue, compare_blocks_cols))), add(mul(add(max_row_clue, zeros_diff_rows), mul(ones_diff_rows, compare_blocks_cols)), add(mul(max_row_clue, compare_blocks_rows), mul(76, ones_diff_rows))))))
mul(mul(ones_diff_cols, ones_diff_rows), add(ones_diff_cols, zeros_diff_cols))
add(mul(zeros_diff_rows, mul(add(compare_blocks_cols, ones_diff_rows), add(compare_blocks_rows, compare_blocks_rows))), add(max_col_clue, mul(mul(max_col_clue, ones_diff_rows), ones_diff_cols)))
mul(mul(ones_diff_cols, max_col_clue), add(mul(mul(add(mul(add(zeros_diff_cols, zeros_diff_rows), add(max_row_clue, compare_blocks_rows)), mul(mul(max_col_clue, max_col_clue), add(zeros_diff_cols, max_row_clue))), add(mul(mul(76, ones_diff_cols), mul(ones_diff_cols, compare_blocks_rows)), mul(add(compare_blocks_cols, max_row_clue), add(max_col_clue, ones_diff_rows)))), add(add(add(mul(ones_diff_rows, zeros_diff_cols), mul(max_row_clue, compare_blocks_rows)), add(mul(ones_diff_cols, max_col_clue), add(ones_diff_cols, compare_blocks_rows))), mul(add(add(ones_diff_cols, compare_blocks_rows), mul(ones_diff_rows, ones_diff_cols)), mul(mul(zeros_diff_cols, ones_diff_cols), mul(zeros_diff_cols, ones_diff_rows))))), max_row_clue))
COND TREES:
or_(le(_if_then_else(or_(True, True), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, max_col_clue)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows))), or_(or_(le(zeros_diff_cols, ones_diff_rows), le(max_row_clue, max_row_clue)), le(_if_then_else(False, 41, zeros_diff_cols), _if_then_else(True, ones_diff_rows, ones_diff_cols))))
ge(_if_then_else(ge(compare_blocks_cols, compare_blocks_cols), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 86), _if_then_else(False, ones_diff_rows, 14), _if_then_else(True, max_row_clue, compare_blocks_cols)))
and_(or_(or_(and_(or_(False, True), ge(zeros_diff_cols, max_col_clue)), ge(_if_then_else(True, 11, compare_blocks_cols), _if_then_else(True, max_col_clue, 90))), le(_if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(False, 61, max_col_clue), _if_then_else(False, max_col_clue, max_col_clue)), _if_then_else(le(26, zeros_diff_cols), _if_then_else(True, max_row_clue, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, ones_diff_cols)))), and_(le(_if_then_else(le(ones_diff_cols, 10), _if_then_else(True, ones_diff_rows, 82), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(ge(zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, ones_diff_rows, max_col_clue))), or_(ge(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, compare_blocks_cols)), and_(ge(max_row_clue, zeros_diff_cols), le(max_col_clue, compare_blocks_rows)))))
ge(_if_then_else(True, _if_then_else(True, zeros_diff_rows, compare_blocks_cols), ones_diff_rows), _if_then_else(True, _if_then_else(True, zeros_diff_rows, ones_diff_rows), ones_diff_cols))
or_(or_(False, True), ge(compare_blocks_cols, compare_blocks_cols))
VAL TREES:
mul(add(ones_diff_cols, compare_blocks_cols), add(46, max_row_clue))
mul(mul(compare_blocks_rows, ones_diff_rows), mul(max_row_clue, compare_blocks_rows))
add(add(compare_blocks_cols, zeros_diff_cols), mul(1, compare_blocks_cols))
mul(mul(zeros_diff_rows, add(max_col_clue, ones_diff_rows)), add(ones_diff_rows, compare_blocks_cols))
add(mul(zeros_diff_rows, compare_blocks_rows), add(max_col_clue, mul(mul(max_col_clue, ones_diff_rows), ones_diff_cols)))
mul(mul(ones_diff_cols, max_col_clue), add(ones_diff_rows, max_row_clue))
COND TREES:
and_(le(compare_blocks_cols, 90), and_(True, False))
le(_if_then_else(False, 2, max_row_clue), max_col_clue)
or_(and_(ge(_if_then_else(and_(True, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, compare_blocks_cols, zeros_diff_cols)), _if_then_else(ge(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_rows, compare_blocks_rows))), le(_if_then_else(and_(False, False), _if_then_else(True, ones_diff_rows, ones_diff_rows), _if_then_else(False, ones_diff_cols, 66)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_cols, ones_diff_rows), _if_then_else(False, max_col_clue, ones_diff_cols)))), le(_if_then_else(and_(or_(False, False), ge(zeros_diff_rows, max_col_clue)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(compare_blocks_rows, ones_diff_rows), _if_then_else(False, ones_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, zeros_diff_cols))), _if_then_else(and_(or_(False, True), le(max_row_clue, compare_blocks_rows)), _if_then_else(ge(ones_diff_rows, 21), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(and_(True, True), zeros_diff_cols, compare_blocks_rows)), _if_then_else(or_(False, True), _if_then_else(True, 90, compare_blocks_cols), _if_then_else(False, max_row_clue, max_col_clue)))))
ge(_if_then_else(True, zeros_diff_cols, ones_diff_cols), compare_blocks_cols)
and_(le(compare_blocks_cols, max_row_clue), True)
VAL TREES:
mul(add(zeros_diff_cols, max_col_clue), mul(mul(ones_diff_cols, zeros_diff_cols), zeros_diff_rows))
mul(mul(zeros_diff_rows, ones_diff_rows), add(compare_blocks_cols, 95))
mul(mul(add(add(ones_diff_rows, ones_diff_rows), add(max_col_clue, max_row_clue)), add(add(ones_diff_rows, ones_diff_rows), mul(compare_blocks_cols, ones_diff_cols))), add(add(mul(zeros_diff_cols, 11), mul(max_row_clue, max_col_clue)), add(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(add(mul(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_rows, 10)), add(add(max_row_clue, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(max_col_clue, 44))))
mul(mul(add(mul(mul(compare_blocks_rows, 24), mul(ones_diff_rows, zeros_diff_rows)), mul(add(11, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))), add(mul(add(max_col_clue, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(51, max_col_clue)))), mul(mul(add(mul(ones_diff_rows, ones_diff_rows), add(ones_diff_rows, 17)), add(mul(max_col_clue, max_col_clue), add(25, max_row_clue))), add(mul(add(15, max_row_clue), add(compare_blocks_rows, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, max_col_clue)))))
add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols))
COND TREES:
or_(le(_if_then_else(or_(False, True), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, max_col_clue)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows))), or_(or_(le(zeros_diff_cols, ones_diff_rows), or_(False, False)), le(_if_then_else(False, 41, zeros_diff_cols), _if_then_else(True, ones_diff_rows, ones_diff_cols))))
ge(_if_then_else(ge(compare_blocks_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 86), _if_then_else(False, ones_diff_rows, 14), _if_then_else(True, 24, compare_blocks_cols)))
and_(or_(or_(and_(or_(False, True), ge(zeros_diff_cols, max_col_clue)), ge(_if_then_else(True, 11, compare_blocks_cols), _if_then_else(True, max_col_clue, 90))), le(_if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(False, 61, max_col_clue), _if_then_else(False, max_col_clue, max_col_clue)), _if_then_else(le(26, zeros_diff_cols), _if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, ones_diff_cols)))), and_(le(_if_then_else(le(ones_diff_cols, 10), _if_then_else(True, ones_diff_rows, 82), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(ge(zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, ones_diff_rows, max_col_clue))), or_(ge(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, compare_blocks_cols)), and_(ge(max_row_clue, zeros_diff_cols), le(max_col_clue, compare_blocks_rows)))))
ge(_if_then_else(False, _if_then_else(False, zeros_diff_rows, _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), ones_diff_rows), _if_then_else(True, _if_then_else(True, zeros_diff_rows, ones_diff_rows), ones_diff_cols))
or_(or_(False, True), ge(compare_blocks_cols, compare_blocks_cols))
VAL TREES:
mul(add(ones_diff_cols, compare_blocks_cols), add(46, max_row_clue))
mul(mul(compare_blocks_rows, ones_diff_rows), mul(max_row_clue, compare_blocks_rows))
add(add(compare_blocks_cols, zeros_diff_cols), mul(1, compare_blocks_cols))
mul(mul(zeros_diff_rows, add(max_col_clue, ones_diff_rows)), add(ones_diff_rows, compare_blocks_cols))
add(mul(zeros_diff_rows, compare_blocks_rows), add(max_col_clue, mul(mul(max_col_clue, ones_diff_rows), ones_diff_cols)))
mul(mul(ones_diff_cols, max_col_clue), add(ones_diff_rows, max_row_clue))
COND TREES:
or_(le(_if_then_else(ge(_if_then_else(False, max_row_clue, max_col_clue), _if_then_else(False, zeros_diff_cols, ones_diff_cols)), _if_then_else(True, _if_then_else(False, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, 78, compare_blocks_rows)), _if_then_else(ge(max_col_clue, zeros_diff_rows), _if_then_else(True, max_col_clue, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, compare_blocks_cols))), _if_then_else(or_(or_(False, False), True), _if_then_else(False, ones_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows))), or_(or_(le(zeros_diff_cols, ones_diff_rows), or_(False, False)), le(_if_then_else(False, 41, zeros_diff_cols), _if_then_else(True, ones_diff_rows, ones_diff_cols))))
ge(_if_then_else(ge(compare_blocks_cols, zeros_diff_rows), _if_then_else(False, _if_then_else(le(ones_diff_rows, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_cols), _if_then_else(False, zeros_diff_rows, max_col_clue)), compare_blocks_cols), _if_then_else(False, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 86), _if_then_else(False, ones_diff_rows, 14), _if_then_else(True, 24, compare_blocks_cols)))
and_(or_(or_(and_(or_(False, True), ge(zeros_diff_cols, max_col_clue)), ge(_if_then_else(True, 11, compare_blocks_cols), _if_then_else(True, max_col_clue, 90))), le(_if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(False, 61, max_col_clue), _if_then_else(False, max_col_clue, max_col_clue)), _if_then_else(le(26, zeros_diff_cols), _if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, ones_diff_cols)))), and_(le(_if_then_else(le(ones_diff_cols, 10), _if_then_else(True, ones_diff_rows, 82), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(ge(zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, ones_diff_rows, max_col_clue))), or_(ge(_if_then_else(False, max_col_clue, _if_then_else(or_(le(compare_blocks_rows, zeros_diff_rows), True), _if_then_else(and_(False, False), _if_then_else(True, ones_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, ones_diff_cols)), _if_then_else(True, ones_diff_cols, compare_blocks_cols))), _if_then_else(False, compare_blocks_cols, compare_blocks_cols)), and_(ge(max_row_clue, zeros_diff_cols), le(max_col_clue, compare_blocks_rows)))))
ge(_if_then_else(False, _if_then_else(or_(or_(or_(or_(False, False), and_(True, True)), and_(ge(compare_blocks_cols, ones_diff_cols), ge(zeros_diff_rows, zeros_diff_cols))), or_(le(_if_then_else(True, max_row_clue, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, 89)), ge(_if_then_else(True, 38, max_row_clue), _if_then_else(True, 30, zeros_diff_cols)))), zeros_diff_rows, _if_then_else(ge(zeros_diff_rows, ones_diff_cols), zeros_diff_cols, compare_blocks_rows)), ones_diff_rows), _if_then_else(True, _if_then_else(True, zeros_diff_rows, ones_diff_rows), ones_diff_cols))
or_(or_(False, True), ge(compare_blocks_cols, _if_then_else(le(max_row_clue, zeros_diff_cols), _if_then_else(True, max_col_clue, zeros_diff_cols), _if_then_else(True, ones_diff_rows, ones_diff_cols))))
VAL TREES:
mul(add(ones_diff_cols, compare_blocks_cols), add(46, max_row_clue))
mul(mul(compare_blocks_rows, ones_diff_rows), mul(max_row_clue, compare_blocks_rows))
add(add(compare_blocks_cols, zeros_diff_cols), mul(1, compare_blocks_cols))
mul(mul(zeros_diff_rows, add(max_col_clue, ones_diff_rows)), add(ones_diff_rows, compare_blocks_cols))
add(mul(zeros_diff_rows, compare_blocks_rows), add(max_col_clue, mul(mul(max_col_clue, ones_diff_rows), ones_diff_cols)))
mul(mul(ones_diff_cols, max_col_clue), add(ones_diff_rows, max_row_clue))
COND TREES:
and_(False, True)
le(_if_then_else(False, _if_then_else(False, zeros_diff_rows, max_row_clue), max_row_clue), max_col_clue)
or_(and_(ge(_if_then_else(and_(True, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, compare_blocks_cols, zeros_diff_cols)), _if_then_else(ge(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_rows, compare_blocks_rows))), le(_if_then_else(and_(False, False), _if_then_else(True, ones_diff_rows, ones_diff_rows), _if_then_else(False, ones_diff_cols, 66)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_cols, ones_diff_rows), _if_then_else(False, max_col_clue, ones_diff_cols)))), le(_if_then_else(and_(or_(False, False), ge(zeros_diff_rows, max_col_clue)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(compare_blocks_rows, ones_diff_rows), _if_then_else(False, ones_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, zeros_diff_cols))), _if_then_else(and_(or_(False, True), le(max_row_clue, compare_blocks_rows)), _if_then_else(ge(ones_diff_rows, 21), _if_then_else(True, compare_blocks_rows, max_row_clue), ones_diff_cols), _if_then_else(or_(False, True), _if_then_else(True, 90, compare_blocks_cols), _if_then_else(False, max_row_clue, max_col_clue)))))
ge(_if_then_else(False, zeros_diff_cols, ones_diff_cols), zeros_diff_cols)
and_(le(max_row_clue, max_row_clue), True)
VAL TREES:
mul(add(zeros_diff_cols, max_col_clue), mul(mul(ones_diff_cols, zeros_diff_cols), zeros_diff_rows))
mul(mul(zeros_diff_rows, ones_diff_rows), add(compare_blocks_cols, 95))
mul(mul(add(add(ones_diff_rows, ones_diff_rows), add(max_col_clue, max_row_clue)), add(add(ones_diff_rows, ones_diff_rows), mul(compare_blocks_cols, ones_diff_cols))), add(add(mul(zeros_diff_cols, 11), mul(max_row_clue, max_col_clue)), add(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(add(mul(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_rows, 10)), add(add(max_row_clue, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(max_col_clue, 44))))
mul(mul(add(mul(mul(compare_blocks_rows, 24), mul(ones_diff_rows, zeros_diff_rows)), mul(add(11, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))), add(mul(add(max_col_clue, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(51, max_col_clue)))), mul(mul(add(mul(ones_diff_rows, ones_diff_rows), add(ones_diff_rows, 17)), add(mul(max_col_clue, max_col_clue), add(25, max_row_clue))), add(mul(add(15, max_row_clue), add(compare_blocks_rows, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, max_col_clue)))))
add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols))
COND TREES:
and_(le(compare_blocks_cols, 90), and_(and_(True, False), False))
le(2, max_col_clue)
or_(and_(ge(_if_then_else(and_(True, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, compare_blocks_cols, zeros_diff_cols)), _if_then_else(ge(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_rows, compare_blocks_rows))), le(_if_then_else(and_(False, False), _if_then_else(True, ones_diff_rows, ones_diff_rows), _if_then_else(False, ones_diff_cols, 66)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_cols, ones_diff_rows), _if_then_else(False, max_col_clue, ones_diff_cols)))), le(_if_then_else(and_(or_(False, False), ge(zeros_diff_rows, max_col_clue)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(compare_blocks_rows, ones_diff_rows), _if_then_else(False, ones_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, zeros_diff_cols))), _if_then_else(and_(or_(False, True), le(max_row_clue, compare_blocks_rows)), _if_then_else(ge(ones_diff_rows, 21), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(and_(True, True), zeros_diff_cols, compare_blocks_rows)), _if_then_else(or_(False, True), _if_then_else(True, 90, compare_blocks_cols), _if_then_else(False, max_row_clue, max_col_clue)))))
ge(_if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(True, _if_then_else(True, zeros_diff_cols, compare_blocks_rows), compare_blocks_rows))
and_(le(compare_blocks_cols, max_row_clue), True)
VAL TREES:
mul(add(zeros_diff_cols, max_col_clue), mul(mul(ones_diff_cols, zeros_diff_cols), zeros_diff_rows))
mul(mul(zeros_diff_rows, ones_diff_rows), add(compare_blocks_cols, 95))
mul(mul(add(add(ones_diff_rows, ones_diff_rows), add(max_col_clue, max_row_clue)), add(add(ones_diff_rows, ones_diff_rows), mul(compare_blocks_cols, ones_diff_cols))), add(add(mul(zeros_diff_cols, 11), mul(max_row_clue, max_col_clue)), add(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(add(mul(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_rows, 10)), add(add(max_row_clue, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(max_col_clue, 44))))
mul(mul(add(mul(mul(compare_blocks_rows, 24), mul(ones_diff_rows, zeros_diff_rows)), mul(add(11, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))), add(mul(add(max_col_clue, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(51, max_col_clue)))), mul(mul(add(mul(ones_diff_rows, ones_diff_rows), add(ones_diff_rows, 17)), add(mul(max_col_clue, max_col_clue), add(25, max_row_clue))), add(mul(add(15, max_row_clue), add(compare_blocks_rows, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, max_col_clue)))))
add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols))
COND TREES:
or_(and_(True, False), or_(or_(False, False), and_(le(ones_diff_rows, compare_blocks_cols), False)))
or_(ge(_if_then_else(False, max_col_clue, _if_then_else(le(zeros_diff_cols, 86), _if_then_else(False, ones_diff_rows, 14), _if_then_else(True, 24, compare_blocks_cols))), _if_then_else(False, 86, compare_blocks_cols)), and_(and_(True, False), or_(True, False)))
or_(or_(ge(max_col_clue, compare_blocks_cols), True), ge(zeros_diff_rows, ones_diff_cols))
ge(_if_then_else(True, _if_then_else(True, zeros_diff_cols, ones_diff_cols), ones_diff_cols), _if_then_else(ge(zeros_diff_rows, ones_diff_cols), _if_then_else(False, compare_blocks_rows, 35), zeros_diff_cols))
ge(_if_then_else(True, _if_then_else(True, max_col_clue, 89), _if_then_else(True, zeros_diff_cols, zeros_diff_cols)), _if_then_else(True, _if_then_else(ge(ones_diff_cols, compare_blocks_rows), _if_then_else(True, _if_then_else(True, 50, zeros_diff_rows), max_row_clue), zeros_diff_cols), compare_blocks_rows))
VAL TREES:
mul(mul(add(add(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_rows)), add(add(max_row_clue, zeros_diff_rows), add(zeros_diff_cols, 88))), mul(mul(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(add(zeros_diff_rows, max_col_clue), mul(ones_diff_cols, 24)))), add(mul(mul(add(zeros_diff_cols, max_row_clue), add(max_col_clue, max_col_clue)), add(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_cols, 6))), add(add(add(max_col_clue, compare_blocks_rows), mul(max_col_clue, zeros_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)))))
add(mul(add(ones_diff_rows, 57), mul(zeros_diff_cols, zeros_diff_rows)), add(add(zeros_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))
mul(mul(zeros_diff_rows, compare_blocks_cols), add(ones_diff_cols, add(zeros_diff_cols, add(max_col_clue, zeros_diff_cols))))
mul(add(68, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_rows))
add(add(add(mul(add(max_row_clue, max_col_clue), mul(zeros_diff_cols, max_row_clue)), mul(mul(zeros_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, max_row_clue))), add(add(add(50, max_row_clue), mul(zeros_diff_cols, zeros_diff_cols)), add(add(compare_blocks_rows, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_rows)))), mul(add(add(mul(max_col_clue, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), add(mul(compare_blocks_cols, zeros_diff_cols), add(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_rows)), add(add(compare_blocks_cols, compare_blocks_rows), add(max_row_clue, zeros_diff_rows)))))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, ones_diff_rows)), add(mul(zeros_diff_rows, max_row_clue), mul(90, compare_blocks_rows)))
COND TREES:
or_(le(_if_then_else(or_(False, True), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, max_col_clue)), _if_then_else(or_(or_(False, False), True), _if_then_else(False, ones_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows))), or_(or_(le(zeros_diff_cols, ones_diff_rows), or_(False, False)), le(_if_then_else(False, 41, zeros_diff_cols), _if_then_else(True, ones_diff_rows, ones_diff_cols))))
ge(_if_then_else(ge(compare_blocks_cols, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, compare_blocks_cols)), zeros_diff_rows)
and_(or_(or_(and_(or_(False, True), ge(zeros_diff_cols, max_col_clue)), ge(_if_then_else(True, 11, compare_blocks_cols), _if_then_else(True, max_col_clue, 90))), le(_if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(False, 61, max_col_clue), _if_then_else(False, max_col_clue, compare_blocks_cols)), _if_then_else(le(26, zeros_diff_cols), _if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, ones_diff_cols)))), and_(le(_if_then_else(le(ones_diff_cols, 10), _if_then_else(True, ones_diff_rows, 82), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(ge(zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, ones_diff_rows, max_col_clue))), or_(ge(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, compare_blocks_cols)), and_(ge(max_row_clue, zeros_diff_cols), le(max_col_clue, compare_blocks_rows)))))
ge(_if_then_else(False, _if_then_else(False, zeros_diff_rows, _if_then_else(ge(zeros_diff_rows, ones_diff_cols), zeros_diff_cols, compare_blocks_rows)), ones_diff_rows), _if_then_else(True, _if_then_else(True, zeros_diff_rows, ones_diff_rows), ones_diff_cols))
or_(or_(False, True), ge(compare_blocks_cols, compare_blocks_cols))
VAL TREES:
mul(add(ones_diff_cols, compare_blocks_cols), add(46, max_row_clue))
mul(mul(compare_blocks_rows, ones_diff_rows), mul(max_row_clue, compare_blocks_rows))
add(add(compare_blocks_cols, zeros_diff_cols), mul(1, compare_blocks_cols))
mul(mul(zeros_diff_rows, add(max_col_clue, ones_diff_rows)), add(ones_diff_rows, compare_blocks_cols))
add(mul(zeros_diff_rows, compare_blocks_rows), add(max_col_clue, mul(mul(max_col_clue, ones_diff_rows), ones_diff_cols)))
mul(mul(ones_diff_cols, max_col_clue), add(ones_diff_rows, max_row_clue))
COND TREES:
or_(le(_if_then_else(or_(False, True), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, max_col_clue)), _if_then_else(or_(False, True), _if_then_else(False, 41, zeros_diff_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows))), or_(or_(le(zeros_diff_cols, 97), or_(False, False)), le(_if_then_else(False, 41, zeros_diff_cols), _if_then_else(True, ones_diff_rows, ones_diff_cols))))
ge(_if_then_else(ge(compare_blocks_cols, compare_blocks_cols), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 46), _if_then_else(False, ones_diff_rows, 14), _if_then_else(True, 24, compare_blocks_cols)))
and_(or_(or_(and_(or_(False, True), ge(zeros_diff_cols, max_col_clue)), ge(_if_then_else(True, 11, compare_blocks_cols), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(False, 61, max_col_clue), _if_then_else(False, max_col_clue, max_col_clue)), _if_then_else(le(26, zeros_diff_cols), _if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, ones_diff_cols)))), and_(le(_if_then_else(le(ones_diff_cols, 10), _if_then_else(True, ones_diff_rows, 82), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(and_(True, True), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, ones_diff_rows, max_col_clue))), or_(ge(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, compare_blocks_cols)), and_(ge(max_row_clue, zeros_diff_cols), le(max_col_clue, compare_blocks_rows)))))
ge(_if_then_else(False, _if_then_else(False, zeros_diff_rows, compare_blocks_cols), ones_diff_rows), _if_then_else(True, zeros_diff_rows, ones_diff_rows))
or_(or_(False, True), le(compare_blocks_cols, max_row_clue))
VAL TREES:
mul(add(ones_diff_cols, compare_blocks_cols), add(46, max_row_clue))
mul(mul(compare_blocks_rows, ones_diff_rows), mul(max_row_clue, compare_blocks_rows))
add(add(compare_blocks_cols, zeros_diff_cols), mul(1, compare_blocks_cols))
mul(mul(zeros_diff_rows, add(max_col_clue, ones_diff_rows)), add(ones_diff_rows, compare_blocks_cols))
add(mul(zeros_diff_rows, compare_blocks_rows), add(max_col_clue, mul(mul(max_col_clue, ones_diff_rows), ones_diff_cols)))
mul(mul(ones_diff_cols, max_col_clue), add(ones_diff_rows, max_row_clue))
COND TREES:
or_(le(_if_then_else(or_(False, True), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, max_col_clue)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows))), or_(or_(le(zeros_diff_cols, ones_diff_rows), or_(False, False)), le(_if_then_else(False, ones_diff_cols, 90), _if_then_else(True, ones_diff_rows, ones_diff_cols))))
ge(_if_then_else(ge(compare_blocks_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 86), _if_then_else(False, ones_diff_rows, 14), _if_then_else(True, 24, compare_blocks_cols)))
and_(or_(or_(and_(or_(False, True), ge(zeros_diff_cols, max_col_clue)), ge(_if_then_else(True, 11, compare_blocks_cols), _if_then_else(True, max_col_clue, 90))), le(_if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(False, 61, max_col_clue), _if_then_else(False, max_col_clue, max_col_clue)), _if_then_else(le(26, zeros_diff_cols), _if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, ones_diff_cols)))), and_(le(_if_then_else(le(ones_diff_cols, 10), _if_then_else(True, ones_diff_rows, 82), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(ge(zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, ones_diff_rows, max_col_clue))), or_(ge(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, compare_blocks_cols)), and_(ge(max_row_clue, zeros_diff_cols), le(max_col_clue, compare_blocks_rows)))))
ge(_if_then_else(False, _if_then_else(False, zeros_diff_rows, _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), ones_diff_rows), _if_then_else(True, _if_then_else(False, _if_then_else(False, max_row_clue, compare_blocks_cols), compare_blocks_rows), ones_diff_cols))
or_(or_(False, True), ge(compare_blocks_cols, compare_blocks_cols))
VAL TREES:
mul(add(ones_diff_cols, compare_blocks_cols), add(46, max_row_clue))
mul(mul(compare_blocks_rows, ones_diff_rows), mul(max_row_clue, compare_blocks_rows))
add(add(compare_blocks_cols, zeros_diff_cols), mul(1, compare_blocks_cols))
mul(mul(zeros_diff_rows, add(max_col_clue, ones_diff_rows)), add(ones_diff_rows, compare_blocks_cols))
add(mul(zeros_diff_rows, compare_blocks_rows), add(max_col_clue, mul(mul(max_col_clue, ones_diff_rows), ones_diff_cols)))
mul(mul(ones_diff_cols, max_col_clue), add(ones_diff_rows, max_row_clue))
COND TREES:
or_(le(_if_then_else(or_(False, True), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(or_(False, True), zeros_diff_cols, max_col_clue)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_cols, 90), _if_then_else(False, zeros_diff_cols, zeros_diff_rows))), or_(or_(le(zeros_diff_cols, 97), or_(False, False)), le(_if_then_else(False, 41, zeros_diff_cols), _if_then_else(True, ones_diff_rows, ones_diff_cols))))
ge(_if_then_else(ge(compare_blocks_cols, compare_blocks_cols), _if_then_else(False, 2, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 46), _if_then_else(False, ones_diff_rows, 14), _if_then_else(True, 24, compare_blocks_cols)))
and_(or_(or_(and_(or_(False, True), ge(zeros_diff_cols, max_col_clue)), ge(_if_then_else(True, 11, compare_blocks_cols), _if_then_else(True, max_col_clue, max_row_clue))), le(_if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(False, 61, max_col_clue), _if_then_else(False, max_col_clue, max_col_clue)), _if_then_else(le(26, zeros_diff_cols), _if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, ones_diff_cols)))), and_(le(_if_then_else(le(ones_diff_cols, 10), _if_then_else(True, ones_diff_rows, 82), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(and_(True, True), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, ones_diff_rows, max_col_clue))), or_(ge(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, compare_blocks_cols)), and_(ge(max_row_clue, zeros_diff_cols), le(max_col_clue, compare_blocks_rows)))))
ge(_if_then_else(False, _if_then_else(False, zeros_diff_rows, compare_blocks_cols), ones_diff_rows), _if_then_else(False, _if_then_else(False, max_row_clue, compare_blocks_cols), compare_blocks_rows))
or_(or_(False, True), le(compare_blocks_cols, max_row_clue))
VAL TREES:
mul(add(ones_diff_cols, compare_blocks_cols), add(46, max_row_clue))
mul(mul(compare_blocks_rows, ones_diff_rows), mul(max_row_clue, compare_blocks_rows))
add(add(compare_blocks_cols, zeros_diff_cols), mul(1, compare_blocks_cols))
mul(mul(zeros_diff_rows, add(max_col_clue, ones_diff_rows)), add(ones_diff_rows, compare_blocks_cols))
add(mul(zeros_diff_rows, compare_blocks_rows), add(max_col_clue, mul(mul(max_col_clue, ones_diff_rows), ones_diff_cols)))
mul(mul(ones_diff_cols, max_col_clue), add(ones_diff_rows, max_row_clue))
COND TREES:
or_(le(_if_then_else(True, _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, max_col_clue)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows))), or_(or_(le(zeros_diff_cols, ones_diff_rows), or_(False, False)), le(_if_then_else(False, 41, zeros_diff_cols), _if_then_else(True, ones_diff_rows, ones_diff_cols))))
ge(_if_then_else(ge(compare_blocks_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 86), _if_then_else(False, ones_diff_rows, 14), _if_then_else(True, 24, compare_blocks_cols)))
and_(or_(or_(and_(or_(False, True), ge(zeros_diff_cols, max_col_clue)), ge(_if_then_else(True, 11, compare_blocks_cols), _if_then_else(True, max_col_clue, 90))), le(_if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(False, 61, max_col_clue), _if_then_else(False, max_col_clue, max_col_clue)), _if_then_else(le(26, zeros_diff_cols), _if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, ones_diff_cols)))), and_(le(_if_then_else(le(ones_diff_cols, 10), _if_then_else(True, ones_diff_rows, 82), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(ge(zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, ones_diff_rows, max_col_clue))), or_(ge(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, compare_blocks_cols)), and_(ge(max_row_clue, zeros_diff_cols), le(max_col_clue, compare_blocks_rows)))))
ge(_if_then_else(False, _if_then_else(False, zeros_diff_rows, _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), ones_diff_rows), _if_then_else(True, _if_then_else(True, zeros_diff_rows, ones_diff_rows), ones_diff_cols))
or_(or_(False, True), ge(compare_blocks_cols, compare_blocks_cols))
VAL TREES:
mul(add(ones_diff_cols, compare_blocks_cols), add(46, max_row_clue))
mul(mul(compare_blocks_rows, ones_diff_rows), mul(max_row_clue, compare_blocks_rows))
add(add(compare_blocks_cols, zeros_diff_cols), mul(1, compare_blocks_cols))
mul(mul(zeros_diff_rows, add(max_col_clue, ones_diff_rows)), add(ones_diff_rows, compare_blocks_cols))
add(mul(zeros_diff_rows, compare_blocks_rows), add(max_col_clue, mul(mul(max_col_clue, ones_diff_rows), ones_diff_cols)))
mul(mul(ones_diff_cols, max_col_clue), add(ones_diff_rows, max_row_clue))
COND TREES:
and_(le(compare_blocks_cols, 90), and_(True, False))
le(_if_then_else(False, zeros_diff_rows, max_row_clue), max_col_clue)
or_(and_(ge(_if_then_else(and_(True, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, compare_blocks_cols, zeros_diff_cols)), _if_then_else(ge(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_rows, compare_blocks_rows))), le(_if_then_else(and_(False, False), _if_then_else(True, ones_diff_rows, ones_diff_rows), _if_then_else(False, ones_diff_cols, 66)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_cols, ones_diff_rows), _if_then_else(False, max_col_clue, ones_diff_cols)))), le(_if_then_else(and_(or_(False, False), ge(zeros_diff_rows, max_col_clue)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(compare_blocks_rows, ones_diff_rows), _if_then_else(False, ones_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, zeros_diff_cols))), _if_then_else(and_(or_(False, True), le(max_row_clue, compare_blocks_rows)), _if_then_else(ge(ones_diff_rows, 21), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(and_(True, True), zeros_diff_cols, compare_blocks_rows)), _if_then_else(or_(False, True), _if_then_else(True, 90, compare_blocks_cols), _if_then_else(False, max_row_clue, max_col_clue)))))
ge(_if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_rows))
and_(le(compare_blocks_cols, max_row_clue), True)
VAL TREES:
mul(add(zeros_diff_cols, max_col_clue), mul(mul(ones_diff_cols, zeros_diff_cols), zeros_diff_rows))
mul(mul(zeros_diff_rows, ones_diff_rows), add(compare_blocks_cols, 95))
mul(mul(add(add(ones_diff_rows, ones_diff_rows), add(max_col_clue, max_row_clue)), add(add(ones_diff_rows, ones_diff_rows), mul(compare_blocks_cols, ones_diff_cols))), add(add(mul(zeros_diff_cols, 11), mul(max_row_clue, max_col_clue)), add(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(add(mul(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_rows, 10)), add(add(max_row_clue, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(max_col_clue, 44))))
mul(mul(add(mul(mul(compare_blocks_rows, 24), mul(ones_diff_rows, zeros_diff_rows)), mul(add(11, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))), add(mul(add(max_col_clue, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(51, max_col_clue)))), mul(mul(add(mul(ones_diff_rows, ones_diff_rows), add(ones_diff_rows, 17)), add(mul(max_col_clue, max_col_clue), add(25, max_row_clue))), add(mul(add(15, max_row_clue), add(compare_blocks_rows, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, max_col_clue)))))
add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols))
COND TREES:
and_(le(compare_blocks_cols, 90), ge(_if_then_else(le(_if_then_else(True, _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(False, max_row_clue, max_col_clue)), zeros_diff_cols), _if_then_else(True, 42, ones_diff_cols), _if_then_else(True, 76, ones_diff_cols)), _if_then_else(le(_if_then_else(False, _if_then_else(True, compare_blocks_cols, zeros_diff_cols), zeros_diff_cols), max_row_clue), _if_then_else(True, max_row_clue, max_row_clue), 10)))
le(_if_then_else(False, zeros_diff_rows, _if_then_else(le(_if_then_else(False, _if_then_else(False, zeros_diff_rows, compare_blocks_cols), 27), ones_diff_cols), _if_then_else(False, ones_diff_cols, _if_then_else(False, _if_then_else(True, compare_blocks_rows, compare_blocks_cols), compare_blocks_rows)), _if_then_else(True, compare_blocks_rows, zeros_diff_cols))), max_col_clue)
or_(and_(ge(_if_then_else(and_(True, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, compare_blocks_cols, zeros_diff_cols)), _if_then_else(ge(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_rows, compare_blocks_rows))), le(_if_then_else(and_(False, False), _if_then_else(True, ones_diff_rows, ones_diff_rows), _if_then_else(False, ones_diff_cols, 66)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_cols, ones_diff_rows), _if_then_else(False, max_col_clue, ones_diff_cols)))), le(_if_then_else(and_(or_(and_(or_(False, False), and_(False, False)), False), ge(zeros_diff_rows, max_col_clue)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(compare_blocks_rows, ones_diff_rows), _if_then_else(False, ones_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, zeros_diff_cols))), _if_then_else(and_(or_(False, True), le(max_row_clue, compare_blocks_rows)), _if_then_else(ge(ones_diff_rows, 21), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(and_(True, True), zeros_diff_cols, compare_blocks_rows)), _if_then_else(or_(False, True), _if_then_else(True, 90, compare_blocks_cols), _if_then_else(False, max_row_clue, max_col_clue)))))
ge(_if_then_else(True, zeros_diff_cols, _if_then_else(and_(True, True), _if_then_else(False, ones_diff_rows, max_row_clue), _if_then_else(True, ones_diff_rows, max_row_clue))), _if_then_else(True, zeros_diff_cols, compare_blocks_rows))
and_(le(max_row_clue, max_row_clue), or_(or_(True, False), le(_if_then_else(le(compare_blocks_cols, 87), _if_then_else(False, compare_blocks_rows, max_row_clue), zeros_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_cols))))
VAL TREES:
mul(add(zeros_diff_cols, max_col_clue), mul(mul(ones_diff_cols, zeros_diff_cols), zeros_diff_rows))
mul(mul(zeros_diff_rows, ones_diff_rows), add(compare_blocks_cols, 95))
mul(mul(add(add(ones_diff_rows, ones_diff_rows), add(max_col_clue, max_row_clue)), add(add(ones_diff_rows, ones_diff_rows), mul(compare_blocks_cols, ones_diff_cols))), add(add(mul(zeros_diff_cols, 11), mul(max_row_clue, max_col_clue)), add(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(add(mul(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_rows, 10)), add(add(max_row_clue, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(max_col_clue, 44))))
mul(mul(add(mul(mul(compare_blocks_rows, 24), mul(ones_diff_rows, zeros_diff_rows)), mul(add(11, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))), add(mul(add(max_col_clue, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(51, max_col_clue)))), mul(mul(add(mul(ones_diff_rows, ones_diff_rows), add(ones_diff_rows, 17)), add(mul(max_col_clue, max_col_clue), add(25, max_row_clue))), add(mul(add(15, max_row_clue), add(compare_blocks_rows, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, max_col_clue)))))
add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols))
COND TREES:
and_(True, and_(True, False))
le(_if_then_else(False, zeros_diff_rows, max_row_clue), max_col_clue)
or_(and_(ge(_if_then_else(and_(True, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, compare_blocks_cols, zeros_diff_cols)), _if_then_else(ge(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_rows, compare_blocks_rows))), le(_if_then_else(and_(False, False), _if_then_else(True, ones_diff_rows, ones_diff_rows), _if_then_else(False, ones_diff_cols, 66)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_cols, ones_diff_rows), _if_then_else(False, max_col_clue, ones_diff_cols)))), le(_if_then_else(and_(or_(False, False), ge(zeros_diff_rows, max_col_clue)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(compare_blocks_rows, ones_diff_rows), _if_then_else(False, ones_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, zeros_diff_cols))), _if_then_else(and_(or_(False, True), le(max_row_clue, compare_blocks_rows)), _if_then_else(ge(ones_diff_rows, 21), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(and_(True, True), zeros_diff_cols, compare_blocks_rows)), _if_then_else(or_(False, True), _if_then_else(True, 90, compare_blocks_cols), _if_then_else(False, max_row_clue, max_col_clue)))))
ge(_if_then_else(True, zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_rows))
and_(le(max_row_clue, max_row_clue), True)
VAL TREES:
mul(add(zeros_diff_cols, max_col_clue), mul(mul(ones_diff_cols, zeros_diff_cols), zeros_diff_rows))
mul(mul(zeros_diff_rows, ones_diff_rows), add(compare_blocks_cols, 95))
mul(mul(add(add(ones_diff_rows, ones_diff_rows), add(max_col_clue, max_row_clue)), add(add(ones_diff_rows, ones_diff_rows), mul(compare_blocks_cols, ones_diff_cols))), add(add(mul(zeros_diff_cols, 11), mul(max_row_clue, max_col_clue)), add(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(add(mul(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_rows, 10)), add(add(max_row_clue, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(max_col_clue, 44))))
mul(mul(add(mul(mul(compare_blocks_rows, 24), mul(ones_diff_rows, zeros_diff_rows)), mul(add(11, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))), add(mul(add(max_col_clue, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(51, max_col_clue)))), mul(mul(add(mul(ones_diff_rows, ones_diff_rows), add(ones_diff_rows, 17)), add(mul(max_col_clue, max_col_clue), add(25, max_row_clue))), add(mul(add(15, max_row_clue), add(compare_blocks_rows, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, max_col_clue)))))
add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols))
COND TREES:
or_(and_(le(compare_blocks_cols, 90), False), or_(or_(False, False), and_(le(97, compare_blocks_cols), False)))
or_(ge(_if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(False, 46, compare_blocks_cols)), and_(and_(True, False), or_(True, False)))
or_(or_(ge(compare_blocks_cols, compare_blocks_cols), True), and_(True, True))
ge(_if_then_else(False, _if_then_else(False, max_row_clue, compare_blocks_cols), compare_blocks_rows), _if_then_else(ge(zeros_diff_rows, ones_diff_cols), _if_then_else(False, compare_blocks_rows, 35), zeros_diff_cols))
ge(_if_then_else(True, _if_then_else(True, max_col_clue, 89), _if_then_else(True, zeros_diff_cols, zeros_diff_cols)), _if_then_else(True, _if_then_else(ge(ones_diff_cols, compare_blocks_rows), _if_then_else(True, _if_then_else(True, 50, zeros_diff_rows), max_row_clue), zeros_diff_cols), compare_blocks_rows))
VAL TREES:
mul(mul(add(add(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_rows)), add(add(max_row_clue, zeros_diff_rows), add(zeros_diff_cols, 88))), mul(mul(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(add(zeros_diff_rows, max_col_clue), mul(ones_diff_cols, 24)))), add(mul(mul(add(zeros_diff_cols, max_row_clue), add(max_col_clue, max_col_clue)), add(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_cols, 6))), add(add(add(max_col_clue, compare_blocks_rows), mul(max_col_clue, zeros_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)))))
add(mul(add(ones_diff_rows, 57), mul(zeros_diff_cols, zeros_diff_rows)), add(add(zeros_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))
mul(mul(zeros_diff_rows, compare_blocks_cols), add(ones_diff_cols, add(zeros_diff_cols, add(max_col_clue, zeros_diff_cols))))
mul(add(68, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_rows))
add(add(add(mul(add(max_row_clue, max_col_clue), mul(zeros_diff_cols, max_row_clue)), mul(mul(zeros_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, max_row_clue))), add(add(add(50, max_row_clue), mul(zeros_diff_cols, zeros_diff_cols)), add(add(compare_blocks_rows, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_rows)))), mul(add(add(mul(max_col_clue, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), add(mul(compare_blocks_cols, zeros_diff_cols), add(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_rows)), add(add(compare_blocks_cols, compare_blocks_rows), add(max_row_clue, zeros_diff_rows)))))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, ones_diff_rows)), add(mul(zeros_diff_rows, max_row_clue), mul(90, compare_blocks_rows)))
COND TREES:
and_(le(_if_then_else(ge(_if_then_else(True, ones_diff_rows, ones_diff_cols), _if_then_else(True, max_row_clue, zeros_diff_rows)), _if_then_else(ge(compare_blocks_rows, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, zeros_diff_cols), _if_then_else(True, max_col_clue, compare_blocks_rows)), _if_then_else(and_(True, False), _if_then_else(True, compare_blocks_cols, max_col_clue), _if_then_else(False, ones_diff_rows, ones_diff_rows))), compare_blocks_cols), and_(True, False))
le(_if_then_else(False, zeros_diff_rows, _if_then_else(False, zeros_diff_rows, _if_then_else(and_(and_(ge(_if_then_else(False, compare_blocks_cols, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_cols)), or_(le(compare_blocks_cols, ones_diff_cols), le(zeros_diff_rows, zeros_diff_cols))), le(_if_then_else(or_(True, True), _if_then_else(True, ones_diff_rows, ones_diff_rows), _if_then_else(False, 52, compare_blocks_rows)), _if_then_else(ge(ones_diff_cols, compare_blocks_cols), _if_then_else(True, zeros_diff_cols, ones_diff_rows), _if_then_else(False, zeros_diff_cols, zeros_diff_cols)))), _if_then_else(le(_if_then_else(le(ones_diff_rows, max_row_clue), _if_then_else(True, compare_blocks_rows, zeros_diff_cols), _if_then_else(True, zeros_diff_cols, ones_diff_cols)), _if_then_else(and_(True, True), _if_then_else(False, zeros_diff_cols, ones_diff_rows), _if_then_else(False, ones_diff_rows, compare_blocks_rows))), _if_then_else(ge(_if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_rows)), _if_then_else(le(max_col_clue, zeros_diff_rows), _if_then_else(True, ones_diff_rows, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, max_col_clue)), _if_then_else(or_(False, True), _if_then_else(False, ones_diff_cols, ones_diff_cols), _if_then_else(True, compare_blocks_cols, 86))), _if_then_else(le(_if_then_else(True, zeros_diff_rows, zeros_diff_rows), _if_then_else(True, ones_diff_rows, max_row_clue)), _if_then_else(ge(max_col_clue, ones_diff_cols), _if_then_else(True, max_col_clue, max_col_clue), _if_then_else(True, ones_diff_rows, zeros_diff_cols)), _if_then_else(ge(zeros_diff_rows, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)))), _if_then_else(or_(le(_if_then_else(True, max_col_clue, max_col_clue), _if_then_else(False, zeros_diff_cols, max_col_clue)), or_(and_(False, False), or_(False, True))), _if_then_else(and_(ge(max_col_clue, compare_blocks_cols), le(zeros_diff_rows, compare_blocks_cols)), _if_then_else(or_(False, False), _if_then_else(True, zeros_diff_rows, zeros_diff_cols), _if_then_else(False, ones_diff_rows, ones_diff_cols)), _if_then_else(or_(True, True), _if_then_else(False, 22, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, compare_blocks_cols))), _if_then_else(le(_if_then_else(False, ones_diff_rows, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, max_col_clue)), _if_then_else(ge(max_col_clue, compare_blocks_rows), _if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(False, max_col_clue, zeros_diff_rows)), _if_then_else(and_(False, False), _if_then_else(True, ones_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, max_row_clue))))))), max_col_clue)
or_(and_(ge(_if_then_else(and_(True, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, compare_blocks_cols, zeros_diff_cols)), _if_then_else(ge(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_rows, compare_blocks_rows))), le(_if_then_else(and_(False, False), _if_then_else(True, ones_diff_rows, ones_diff_rows), _if_then_else(False, ones_diff_cols, 66)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_cols, ones_diff_rows), _if_then_else(False, max_col_clue, _if_then_else(ge(ones_diff_cols, compare_blocks_cols), _if_then_else(True, 73, ones_diff_rows), _if_then_else(True, zeros_diff_cols, ones_diff_cols)))))), le(_if_then_else(and_(or_(False, False), ge(zeros_diff_rows, max_col_clue)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(compare_blocks_rows, ones_diff_rows), _if_then_else(False, ones_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, zeros_diff_cols))), _if_then_else(and_(or_(False, True), le(max_row_clue, compare_blocks_rows)), _if_then_else(ge(ones_diff_rows, 21), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(and_(and_(True, False), True), zeros_diff_cols, _if_then_else(and_(True, False), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(True, compare_blocks_cols, zeros_diff_cols)))), _if_then_else(or_(False, True), _if_then_else(True, 90, compare_blocks_cols), _if_then_else(False, max_row_clue, max_col_clue)))))
ge(_if_then_else(False, zeros_diff_cols, _if_then_else(le(ones_diff_rows, _if_then_else(False, zeros_diff_cols, ones_diff_rows)), _if_then_else(True, _if_then_else(and_(False, True), ones_diff_rows, _if_then_else(True, zeros_diff_cols, ones_diff_rows)), zeros_diff_cols), _if_then_else(and_(True, True), compare_blocks_rows, max_col_clue))), _if_then_else(True, zeros_diff_cols, compare_blocks_rows))
and_(le(_if_then_else(le(_if_then_else(le(_if_then_else(False, zeros_diff_cols, ones_diff_cols), _if_then_else(False, ones_diff_cols, max_col_clue)), _if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(False, compare_blocks_cols, compare_blocks_rows)), _if_then_else(or_(True, True), _if_then_else(False, max_row_clue, max_row_clue), _if_then_else(True, 16, max_col_clue))), _if_then_else(or_(ge(max_row_clue, compare_blocks_cols), ge(5, max_row_clue)), _if_then_else(ge(zeros_diff_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, zeros_diff_rows), _if_then_else(False, zeros_diff_rows, max_col_clue)), _if_then_else(ge(compare_blocks_rows, max_col_clue), _if_then_else(False, zeros_diff_cols, compare_blocks_cols), _if_then_else(False, ones_diff_cols, ones_diff_rows)))), _if_then_else(ge(_if_then_else(ge(zeros_diff_rows, 64), _if_then_else(False, zeros_diff_rows, max_col_clue), _if_then_else(False, compare_blocks_rows, max_col_clue)), _if_then_else(or_(False, True), _if_then_else(True, ones_diff_rows, zeros_diff_rows), _if_then_else(False, 13, 23))), _if_then_else(or_(ge(compare_blocks_rows, compare_blocks_rows), or_(False, False)), _if_then_else(ge(compare_blocks_cols, ones_diff_cols), _if_then_else(True, max_row_clue, zeros_diff_cols), _if_then_else(True, 49, zeros_diff_rows)), _if_then_else(ge(zeros_diff_cols, 27), _if_then_else(False, max_row_clue, ones_diff_cols), _if_then_else(False, zeros_diff_cols, compare_blocks_cols))), _if_then_else(or_(le(75, ones_diff_cols), or_(True, True)), _if_then_else(ge(max_col_clue, 20), _if_then_else(True, 17, max_row_clue), _if_then_else(False, max_col_clue, ones_diff_cols)), _if_then_else(ge(max_col_clue, zeros_diff_rows), _if_then_else(False, zeros_diff_cols, compare_blocks_rows), _if_then_else(False, max_col_clue, max_col_clue)))), _if_then_else(and_(le(_if_then_else(True, compare_blocks_cols, ones_diff_cols), _if_then_else(True, zeros_diff_rows, max_col_clue)), le(_if_then_else(False, compare_blocks_cols, compare_blocks_cols), _if_then_else(False, ones_diff_cols, zeros_diff_rows))), _if_then_else(ge(_if_then_else(True, zeros_diff_cols, 40), _if_then_else(False, zeros_diff_cols, compare_blocks_rows)), _if_then_else(and_(False, True), _if_then_else(True, ones_diff_cols, zeros_diff_cols), _if_then_else(True, 92, max_row_clue)), _if_then_else(ge(zeros_diff_rows, ones_diff_cols), _if_then_else(True, max_row_clue, 73), _if_then_else(False, max_row_clue, zeros_diff_rows))), _if_then_else(ge(_if_then_else(False, 19, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, zeros_diff_rows)), _if_then_else(ge(ones_diff_rows, zeros_diff_cols), _if_then_else(True, ones_diff_rows, zeros_diff_cols), _if_then_else(True, compare_blocks_cols, compare_blocks_rows)), _if_then_else(le(max_row_clue, max_col_clue), _if_then_else(False, 34, zeros_diff_cols), _if_then_else(True, compare_blocks_cols, compare_blocks_cols))))), ones_diff_cols), True)
VAL TREES:
mul(add(zeros_diff_cols, max_col_clue), mul(mul(ones_diff_cols, zeros_diff_cols), zeros_diff_rows))
mul(mul(zeros_diff_rows, ones_diff_rows), add(compare_blocks_cols, 95))
mul(mul(add(add(ones_diff_rows, ones_diff_rows), add(max_col_clue, max_row_clue)), add(add(ones_diff_rows, ones_diff_rows), mul(compare_blocks_cols, ones_diff_cols))), add(add(mul(zeros_diff_cols, 11), mul(max_row_clue, max_col_clue)), add(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(add(mul(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_rows, 10)), add(add(max_row_clue, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(max_col_clue, 44))))
mul(mul(add(mul(mul(compare_blocks_rows, 24), mul(ones_diff_rows, zeros_diff_rows)), mul(add(11, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))), add(mul(add(max_col_clue, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(51, max_col_clue)))), mul(mul(add(mul(ones_diff_rows, ones_diff_rows), add(ones_diff_rows, 17)), add(mul(max_col_clue, max_col_clue), add(25, max_row_clue))), add(mul(add(15, max_row_clue), add(compare_blocks_rows, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, max_col_clue)))))
add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols))
COND TREES:
and_(le(compare_blocks_cols, 90), and_(True, False))
le(max_row_clue, max_col_clue)
or_(and_(ge(compare_blocks_rows, _if_then_else(ge(zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_rows, compare_blocks_cols), _if_then_else(False, ones_diff_rows, compare_blocks_rows))), le(_if_then_else(and_(False, False), _if_then_else(True, ones_diff_rows, ones_diff_rows), _if_then_else(False, ones_diff_cols, 66)), _if_then_else(or_(False, False), _if_then_else(True, ones_diff_cols, ones_diff_rows), _if_then_else(False, max_col_clue, ones_diff_cols)))), le(_if_then_else(and_(or_(False, False), ge(zeros_diff_rows, max_col_clue)), _if_then_else(or_(True, True), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(False, compare_blocks_rows, ones_diff_cols)), _if_then_else(le(compare_blocks_rows, ones_diff_rows), _if_then_else(False, ones_diff_cols, zeros_diff_rows), _if_then_else(False, compare_blocks_rows, zeros_diff_cols))), _if_then_else(and_(or_(False, True), le(max_row_clue, compare_blocks_rows)), _if_then_else(ge(ones_diff_rows, 21), _if_then_else(True, compare_blocks_rows, max_row_clue), _if_then_else(and_(True, True), zeros_diff_cols, compare_blocks_rows)), _if_then_else(or_(False, True), _if_then_else(True, 90, compare_blocks_cols), _if_then_else(False, max_row_clue, max_col_clue)))))
ge(_if_then_else(True, zeros_diff_cols, ones_diff_cols), _if_then_else(True, zeros_diff_cols, compare_blocks_rows))
and_(le(compare_blocks_cols, max_row_clue), True)
VAL TREES:
mul(add(zeros_diff_cols, max_col_clue), mul(mul(ones_diff_cols, zeros_diff_cols), zeros_diff_rows))
mul(mul(zeros_diff_rows, ones_diff_rows), add(compare_blocks_cols, 95))
mul(mul(add(add(ones_diff_rows, ones_diff_rows), add(max_col_clue, max_row_clue)), add(add(ones_diff_rows, ones_diff_rows), mul(compare_blocks_cols, ones_diff_cols))), add(add(mul(zeros_diff_cols, 11), mul(max_row_clue, max_col_clue)), add(add(zeros_diff_cols, ones_diff_cols), add(ones_diff_rows, compare_blocks_rows))))
mul(add(mul(add(zeros_diff_rows, compare_blocks_rows), mul(ones_diff_rows, 10)), add(add(max_row_clue, zeros_diff_cols), mul(zeros_diff_rows, zeros_diff_rows))), mul(mul(add(compare_blocks_rows, zeros_diff_rows), mul(ones_diff_cols, compare_blocks_rows)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(max_col_clue, 44))))
mul(mul(add(mul(mul(compare_blocks_rows, 24), mul(ones_diff_rows, zeros_diff_rows)), mul(add(11, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))), add(mul(add(max_col_clue, ones_diff_rows), add(compare_blocks_rows, compare_blocks_cols)), mul(mul(ones_diff_cols, compare_blocks_cols), mul(51, max_col_clue)))), mul(mul(add(mul(ones_diff_rows, ones_diff_rows), add(ones_diff_rows, 17)), add(mul(max_col_clue, max_col_clue), add(25, max_row_clue))), add(mul(add(15, max_row_clue), add(compare_blocks_rows, ones_diff_rows)), add(mul(ones_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, max_col_clue)))))
add(add(ones_diff_cols, ones_diff_cols), mul(compare_blocks_rows, ones_diff_cols))
COND TREES:
or_(and_(True, False), or_(False, and_(le(ones_diff_cols, compare_blocks_cols), False)))
or_(ge(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(False, 46, compare_blocks_cols)), and_(and_(True, False), or_(True, False)))
or_(or_(ge(compare_blocks_rows, compare_blocks_cols), True), and_(True, True))
ge(_if_then_else(False, _if_then_else(False, max_row_clue, ones_diff_rows), compare_blocks_rows), _if_then_else(True, _if_then_else(False, compare_blocks_rows, 35), zeros_diff_cols))
ge(_if_then_else(True, _if_then_else(True, max_col_clue, 89), _if_then_else(True, zeros_diff_cols, zeros_diff_cols)), _if_then_else(True, _if_then_else(ge(ones_diff_cols, compare_blocks_rows), _if_then_else(True, _if_then_else(True, 50, zeros_diff_rows), max_row_clue), zeros_diff_cols), compare_blocks_rows))
VAL TREES:
mul(mul(add(add(add(compare_blocks_rows, compare_blocks_rows), mul(zeros_diff_cols, ones_diff_rows)), add(add(max_row_clue, zeros_diff_rows), add(zeros_diff_cols, 88))), mul(mul(add(ones_diff_cols, ones_diff_rows), mul(zeros_diff_rows, compare_blocks_rows)), add(add(zeros_diff_rows, max_col_clue), mul(ones_diff_cols, 24)))), add(mul(mul(add(zeros_diff_cols, max_row_clue), add(max_col_clue, max_col_clue)), add(add(compare_blocks_cols, ones_diff_rows), mul(zeros_diff_cols, 6))), add(add(add(max_col_clue, compare_blocks_rows), mul(max_col_clue, zeros_diff_rows)), mul(add(ones_diff_cols, ones_diff_cols), mul(zeros_diff_rows, compare_blocks_cols)))))
add(mul(add(ones_diff_rows, 57), mul(zeros_diff_cols, zeros_diff_rows)), add(add(zeros_diff_rows, zeros_diff_cols), mul(compare_blocks_cols, compare_blocks_cols)))
mul(mul(zeros_diff_rows, compare_blocks_cols), add(ones_diff_cols, add(zeros_diff_cols, add(max_col_clue, zeros_diff_cols))))
mul(add(68, zeros_diff_cols), add(zeros_diff_rows, compare_blocks_rows))
add(add(add(mul(add(max_row_clue, max_col_clue), mul(zeros_diff_cols, max_row_clue)), mul(mul(zeros_diff_rows, compare_blocks_cols), mul(zeros_diff_rows, max_row_clue))), add(add(add(50, max_row_clue), mul(zeros_diff_cols, zeros_diff_cols)), add(add(compare_blocks_rows, zeros_diff_cols), mul(ones_diff_cols, zeros_diff_rows)))), mul(add(add(mul(max_col_clue, zeros_diff_cols), add(ones_diff_cols, ones_diff_rows)), add(mul(compare_blocks_cols, zeros_diff_cols), add(compare_blocks_rows, ones_diff_cols))), mul(add(add(zeros_diff_rows, zeros_diff_rows), mul(compare_blocks_cols, compare_blocks_rows)), add(add(compare_blocks_cols, compare_blocks_rows), add(max_row_clue, zeros_diff_rows)))))
add(add(mul(compare_blocks_cols, zeros_diff_cols), mul(ones_diff_cols, ones_diff_rows)), add(mul(zeros_diff_rows, max_row_clue), mul(90, compare_blocks_rows)))
COND TREES:
or_(le(_if_then_else(or_(False, True), _if_then_else(False, max_col_clue, zeros_diff_rows), _if_then_else(True, zeros_diff_cols, max_col_clue)), _if_then_else(or_(False, True), _if_then_else(False, 97, compare_blocks_cols), _if_then_else(False, zeros_diff_cols, zeros_diff_rows))), or_(or_(le(zeros_diff_cols, ones_diff_rows), or_(False, False)), le(_if_then_else(False, 41, zeros_diff_cols), _if_then_else(True, ones_diff_rows, ones_diff_cols))))
ge(_if_then_else(ge(compare_blocks_cols, compare_blocks_cols), _if_then_else(False, zeros_diff_rows, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, compare_blocks_cols)), _if_then_else(le(zeros_diff_cols, 86), _if_then_else(False, ones_diff_rows, 14), _if_then_else(True, 24, compare_blocks_cols)))
and_(or_(or_(and_(or_(False, True), ge(zeros_diff_cols, max_col_clue)), ge(_if_then_else(True, 11, compare_blocks_cols), _if_then_else(True, max_col_clue, 90))), le(_if_then_else(le(ones_diff_cols, zeros_diff_rows), _if_then_else(False, 61, max_col_clue), _if_then_else(False, max_col_clue, max_col_clue)), _if_then_else(le(26, zeros_diff_cols), _if_then_else(True, max_row_clue, compare_blocks_rows), _if_then_else(False, compare_blocks_cols, ones_diff_cols)))), and_(le(_if_then_else(le(ones_diff_cols, 10), _if_then_else(True, ones_diff_rows, 82), _if_then_else(True, compare_blocks_rows, ones_diff_cols)), _if_then_else(ge(zeros_diff_rows, ones_diff_cols), _if_then_else(True, compare_blocks_cols, zeros_diff_rows), _if_then_else(True, ones_diff_rows, max_col_clue))), or_(ge(_if_then_else(False, max_col_clue, compare_blocks_cols), _if_then_else(False, compare_blocks_cols, compare_blocks_cols)), and_(ge(max_row_clue, zeros_diff_cols), le(max_col_clue, compare_blocks_rows)))))
ge(_if_then_else(False, _if_then_else(False, zeros_diff_rows, _if_then_else(True, zeros_diff_cols, compare_blocks_rows)), compare_blocks_cols), _if_then_else(True, _if_then_else(True, zeros_diff_rows, ones_diff_rows), ones_diff_cols))
or_(or_(False, True), ge(compare_blocks_cols, compare_blocks_cols))
VAL TREES:
mul(add(ones_diff_cols, compare_blocks_cols), add(46, max_row_clue))
mul(mul(compare_blocks_rows, ones_diff_rows), mul(max_row_clue, compare_blocks_rows))
add(add(compare_blocks_cols, zeros_diff_cols), mul(1, compare_blocks_cols))
mul(mul(zeros_diff_rows, add(max_col_clue, ones_diff_rows)), add(ones_diff_rows, compare_blocks_cols))
add(mul(zeros_diff_rows, compare_blocks_rows), add(max_col_clue, mul(mul(max_col_clue, ones_diff_rows), ones_diff_cols)))
mul(mul(ones_diff_cols, max_col_clue), add(ones_diff_rows, max_row_clue))


INFO:root:hof: COND TREES:
le(_if_then_else(le(zeros_diff_rows, compare_blocks_rows), _if_then_else(True, zeros_diff_rows, ones_diff_cols), _if_then_else(False, zeros_diff_cols, 93)), _if_then_else(le(compare_blocks_cols, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, compare_blocks_cols), _if_then_else(True, compare_blocks_rows, zeros_diff_cols)))
and_(le(_if_then_else(ge(zeros_diff_cols, ones_diff_cols), _if_then_else(True, ones_diff_rows, zeros_diff_rows), _if_then_else(False, compare_blocks_cols, 40)), _if_then_else(le(zeros_diff_rows, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, compare_blocks_rows), _if_then_else(True, max_row_clue, max_row_clue))), le(_if_then_else(and_(False, True), _if_then_else(True, compare_blocks_cols, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, zeros_diff_rows)), _if_then_else(le(max_col_clue, max_row_clue), _if_then_else(True, compare_blocks_rows, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, compare_blocks_rows))))
le(_if_then_else(and_(or_(le(6, 2), or_(False, True)), or_(and_(True, False), le(max_col_clue, compare_blocks_rows))), _if_then_else(le(_if_then_else(False, max_col_clue, zeros_diff_cols), _if_then_else(False, max_row_clue, zeros_diff_rows)), _if_then_else(ge(max_col_clue, compare_blocks_cols), _if_then_else(True, zeros_diff_rows, ones_diff_rows), _if_then_else(False, compare_blocks_cols, ones_diff_cols)), _if_then_else(ge(zeros_diff_rows, ones_diff_rows), _if_then_else(False, compare_blocks_cols, max_row_clue), _if_then_else(False, max_row_clue, zeros_diff_rows))), _if_then_else(or_(ge(zeros_diff_cols, 88), le(ones_diff_rows, compare_blocks_cols)), _if_then_else(ge(compare_blocks_cols, zeros_diff_cols), _if_then_else(False, compare_blocks_cols, 1), _if_then_else(False, compare_blocks_cols, max_col_clue)), _if_then_else(le(ones_diff_cols, max_row_clue), _if_then_else(False, compare_blocks_cols, ones_diff_cols), _if_then_else(False, 92, max_col_clue)))), _if_then_else(le(_if_then_else(ge(max_col_clue, compare_blocks_cols), _if_then_else(True, compare_blocks_cols, 71), _if_then_else(True, zeros_diff_rows, compare_blocks_rows)), _if_then_else(ge(compare_blocks_cols, compare_blocks_rows), _if_then_else(True, max_col_clue, ones_diff_cols), _if_then_else(False, compare_blocks_rows, max_row_clue))), _if_then_else(and_(ge(54, 54), and_(False, False)), _if_then_else(or_(False, True), _if_then_else(True, 22, compare_blocks_cols), _if_then_else(False, compare_blocks_rows, compare_blocks_cols)), _if_then_else(ge(compare_blocks_rows, 46), _if_then_else(True, zeros_diff_cols, max_row_clue), _if_then_else(False, max_row_clue, compare_blocks_rows))), _if_then_else(le(_if_then_else(False, max_col_clue, zeros_diff_cols), _if_then_else(True, compare_blocks_rows, compare_blocks_rows)), _if_then_else(ge(zeros_diff_rows, zeros_diff_rows), _if_then_else(True, zeros_diff_rows, max_col_clue), _if_then_else(False, max_row_clue, compare_blocks_rows)), _if_then_else(and_(True, True), _if_then_else(False, max_row_clue, max_row_clue), _if_then_else(False, 2, compare_blocks_rows)))))
le(_if_then_else(False, max_col_clue, max_row_clue), _if_then_else(False, 52, zeros_diff_cols))
or_(and_(True, True), or_(ge(ones_diff_cols, compare_blocks_cols), False))
VAL TREES:
add(add(mul(mul(ones_diff_cols, compare_blocks_cols), mul(ones_diff_cols, zeros_diff_rows)), add(add(ones_diff_cols, ones_diff_cols), add(zeros_diff_rows, zeros_diff_rows))), mul(add(mul(ones_diff_cols, ones_diff_cols), mul(compare_blocks_rows, compare_blocks_cols)), mul(mul(74, max_row_clue), mul(ones_diff_cols, zeros_diff_cols))))
add(add(add(max_col_clue, compare_blocks_rows), add(zeros_diff_cols, mul(max_col_clue, 89))), add(max_row_clue, zeros_diff_rows))
mul(mul(ones_diff_rows, compare_blocks_rows), add(max_col_clue, compare_blocks_rows))
add(add(mul(4, zeros_diff_rows), add(28, 92)), add(add(0, 2), add(compare_blocks_rows, compare_blocks_rows)))
mul(add(13, zeros_diff_rows), add(ones_diff_rows, compare_blocks_rows))
add(mul(5, zeros_diff_rows), add(zeros_diff_cols, ones_diff_rows))


INFO:root:stats: {'fitness': <deap.tools.support.Statistics object at 0x000001AFAFCA3DA0>}

DEBUG:matplotlib.axes._base:update_title_pos
DEBUG:matplotlib.font_manager:findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\Itay Gabbay\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.axes._base:update_title_pos
DEBUG:matplotlib.axes._base:update_title_pos
DEBUG:matplotlib.axes._base:update_title_pos
